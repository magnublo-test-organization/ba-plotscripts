<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 18:18:01.803" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.398" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:18:02.407" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:18:03.626" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:18:02.397" endtime="20201029 18:18:03.627"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.629" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:18:03.628" endtime="20201029 18:18:03.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.395" endtime="20201029 18:18:03.630"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:03.632" endtime="20201029 18:18:03.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.631" endtime="20201029 18:18:03.817"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.831" endtime="20201029 18:18:03.846"></status>
</kw>
<msg timestamp="20201029 18:18:03.847" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['s is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.829" endtime="20201029 18:18:03.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.852" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['s is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.849" endtime="20201029 18:18:03.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.859" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:03.854" endtime="20201029 18:18:03.859"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:03.827" endtime="20201029 18:18:03.861"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:03.824" endtime="20201029 18:18:03.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.822" endtime="20201029 18:18:03.863"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:03.870" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:03.869" endtime="20201029 18:18:03.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.864" endtime="20201029 18:18:03.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.822" endtime="20201029 18:18:03.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.821" endtime="20201029 18:18:03.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.874" endtime="20201029 18:18:03.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.819" endtime="20201029 18:18:03.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.879" endtime="20201029 18:18:03.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.818" endtime="20201029 18:18:03.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.394" endtime="20201029 18:18:03.884"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:03.897" endtime="20201029 18:18:03.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.894" endtime="20201029 18:18:03.919"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.950" endtime="20201029 18:18:03.966"></status>
</kw>
<msg timestamp="20201029 18:18:03.967" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.947" endtime="20201029 18:18:03.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.969" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.968" endtime="20201029 18:18:03.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.972" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:03.970" endtime="20201029 18:18:03.972"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:03.941" endtime="20201029 18:18:03.973"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:03.937" endtime="20201029 18:18:03.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.933" endtime="20201029 18:18:03.974"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:03.978" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:03.977" endtime="20201029 18:18:03.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.975" endtime="20201029 18:18:03.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.931" endtime="20201029 18:18:03.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.929" endtime="20201029 18:18:03.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.979" endtime="20201029 18:18:03.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.924" endtime="20201029 18:18:03.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.921" endtime="20201029 18:18:03.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.891" endtime="20201029 18:18:03.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.989" endtime="20201029 18:18:03.998"></status>
</kw>
<msg timestamp="20201029 18:18:03.999" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.987" endtime="20201029 18:18:03.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.001" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:04.000" endtime="20201029 18:18:04.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.002" endtime="20201029 18:18:04.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.985" endtime="20201029 18:18:04.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.983" endtime="20201029 18:18:04.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.009" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 18:18:04.008" endtime="20201029 18:18:04.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.011" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201029 18:18:04.010" endtime="20201029 18:18:04.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.005" endtime="20201029 18:18:04.011"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:03.885" endtime="20201029 18:18:04.012" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:18:01.948" endtime="20201029 18:18:04.015"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.077" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:18:04.085" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:18:05.226" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:18:04.075" endtime="20201029 18:18:05.227"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.230" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:18:05.228" endtime="20201029 18:18:05.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.074" endtime="20201029 18:18:05.231"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:05.233" endtime="20201029 18:18:05.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.232" endtime="20201029 18:18:05.504"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.517" endtime="20201029 18:18:05.532"></status>
</kw>
<msg timestamp="20201029 18:18:05.533" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Succ...</msg>
<status status="PASS" starttime="20201029 18:18:05.515" endtime="20201029 18:18:05.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.535" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Succ...</msg>
<status status="PASS" starttime="20201029 18:18:05.534" endtime="20201029 18:18:05.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.538" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:05.536" endtime="20201029 18:18:05.538"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:05.513" endtime="20201029 18:18:05.539"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:05.510" endtime="20201029 18:18:05.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.509" endtime="20201029 18:18:05.540"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:05.544" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:05.543" endtime="20201029 18:18:05.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.541" endtime="20201029 18:18:05.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.508" endtime="20201029 18:18:05.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.508" endtime="20201029 18:18:05.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.545" endtime="20201029 18:18:05.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.507" endtime="20201029 18:18:05.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.548" endtime="20201029 18:18:05.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.505" endtime="20201029 18:18:05.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.073" endtime="20201029 18:18:05.550"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:05.556" endtime="20201029 18:18:05.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.554" endtime="20201029 18:18:05.576"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.589" endtime="20201029 18:18:05.603"></status>
</kw>
<msg timestamp="20201029 18:18:05.604" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.587" endtime="20201029 18:18:05.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.606" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.605" endtime="20201029 18:18:05.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.609" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:05.608" endtime="20201029 18:18:05.610"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:05.585" endtime="20201029 18:18:05.610"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:05.582" endtime="20201029 18:18:05.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.581" endtime="20201029 18:18:05.611"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:05.615" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:05.614" endtime="20201029 18:18:05.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.612" endtime="20201029 18:18:05.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.580" endtime="20201029 18:18:05.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.580" endtime="20201029 18:18:05.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.617" endtime="20201029 18:18:05.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.578" endtime="20201029 18:18:05.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.576" endtime="20201029 18:18:05.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.553" endtime="20201029 18:18:05.619"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.628" endtime="20201029 18:18:05.640"></status>
</kw>
<msg timestamp="20201029 18:18:05.640" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.626" endtime="20201029 18:18:05.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.643" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.641" endtime="20201029 18:18:05.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.644" endtime="20201029 18:18:05.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.624" endtime="20201029 18:18:05.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.622" endtime="20201029 18:18:05.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.653" endtime="20201029 18:18:05.942"></status>
</kw>
<msg timestamp="20201029 18:18:05.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062078403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062078889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:05.651" endtime="20201029 18:18:05.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062078403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062078889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:05.946" endtime="20201029 18:18:05.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.955" endtime="20201029 18:18:05.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.648" endtime="20201029 18:18:05.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.647" endtime="20201029 18:18:05.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:05.962" level="INFO">${RESULT} = [{'diff': 4.860000000009301e-07}, {'diff': 4.869999999934649e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:18:05.958" endtime="20201029 18:18:05.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:05.967" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 4.869999999934649e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7200...</msg>
<status status="PASS" starttime="20201029 18:18:05.963" endtime="20201029 18:18:05.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.972" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:05.971" endtime="20201029 18:18:05.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.975" level="INFO">VALUE: [4.860000000009301e-07, 4.869999999934649e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201029 18:18:05.973" endtime="20201029 18:18:05.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.968" endtime="20201029 18:18:05.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.621" endtime="20201029 18:18:05.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.620" endtime="20201029 18:18:05.976"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.984" endtime="20201029 18:18:05.994"></status>
</kw>
<msg timestamp="20201029 18:18:05.995" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.983" endtime="20201029 18:18:05.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.997" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.996" endtime="20201029 18:18:05.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.998" endtime="20201029 18:18:06.000"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.980" endtime="20201029 18:18:06.001"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.978" endtime="20201029 18:18:06.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.008" endtime="20201029 18:18:06.337"></status>
</kw>
<msg timestamp="20201029 18:18:06.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062776514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062776986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:06.006" endtime="20201029 18:18:06.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062776514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062776986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:06.342" endtime="20201029 18:18:06.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.352" endtime="20201029 18:18:06.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.003" endtime="20201029 18:18:06.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.002" endtime="20201029 18:18:06.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:06.359" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.859999999939912e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, ...</msg>
<status status="PASS" starttime="20201029 18:18:06.356" endtime="20201029 18:18:06.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:06.365" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.72...</msg>
<status status="PASS" starttime="20201029 18:18:06.361" endtime="20201029 18:18:06.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.369" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:06.368" endtime="20201029 18:18:06.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.372" level="INFO">VALUE: [4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.860000000217468e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.859999999662357e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7300000000083386e-07, 4.729999999453227e-07, 4.7300000000083386e-07, 4.860000000217468e-07, 4.869999999934649e-07, 4.859999999662357e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.859999999662357e-07, 4.720000000291158e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.720000000291158e-07, 4.860000000217468e-07]</msg>
<status status="PASS" starttime="20201029 18:18:06.370" endtime="20201029 18:18:06.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.366" endtime="20201029 18:18:06.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.977" endtime="20201029 18:18:06.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.976" endtime="20201029 18:18:06.373"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.382" endtime="20201029 18:18:06.393"></status>
</kw>
<msg timestamp="20201029 18:18:06.394" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.381" endtime="20201029 18:18:06.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.396" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.395" endtime="20201029 18:18:06.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.398" endtime="20201029 18:18:06.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.377" endtime="20201029 18:18:06.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.375" endtime="20201029 18:18:06.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.407" endtime="20201029 18:18:06.717"></status>
</kw>
<msg timestamp="20201029 18:18:06.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.410873514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.410874, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:06.405" endtime="20201029 18:18:06.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.410873514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.410874, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:06.722" endtime="20201029 18:18:06.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.732" endtime="20201029 18:18:06.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.403" endtime="20201029 18:18:06.735"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.401" endtime="20201029 18:18:06.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:06.739" level="INFO">${RESULT} = [{'diff': 4.860000000217468e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000291158e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.859999999662357e-07}...</msg>
<status status="PASS" starttime="20201029 18:18:06.736" endtime="20201029 18:18:06.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:06.745" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000217468e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.859999999662357e-07, 4.720000000291158e-07, 4.860000000217468e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 18:18:06.741" endtime="20201029 18:18:06.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.750" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:06.749" endtime="20201029 18:18:06.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.752" level="INFO">VALUE: [4.860000000217468e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.859999999662357e-07, 4.720000000291158e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.720000000291158e-07, 4.860000000217468e-07, 4.7200000008462695e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999999453227e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999999107245e-07, 4.860000000217468e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.869999999934649e-07, 4.869999999934649e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.860000000217468e-07]</msg>
<status status="PASS" starttime="20201029 18:18:06.751" endtime="20201029 18:18:06.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.746" endtime="20201029 18:18:06.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.374" endtime="20201029 18:18:06.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.374" endtime="20201029 18:18:06.754"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.762" endtime="20201029 18:18:06.773"></status>
</kw>
<msg timestamp="20201029 18:18:06.773" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.760" endtime="20201029 18:18:06.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.776" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.774" endtime="20201029 18:18:06.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.777" endtime="20201029 18:18:06.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.758" endtime="20201029 18:18:06.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.756" endtime="20201029 18:18:06.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.787" endtime="20201029 18:18:07.078"></status>
</kw>
<msg timestamp="20201029 18:18:07.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.800131431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.800131917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:06.785" endtime="20201029 18:18:07.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.800131431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.800131917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:07.083" endtime="20201029 18:18:07.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.094" endtime="20201029 18:18:07.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.782" endtime="20201029 18:18:07.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.780" endtime="20201029 18:18:07.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:07.101" level="INFO">${RESULT} = [{'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 18:18:07.097" endtime="20201029 18:18:07.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:07.107" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4...</msg>
<status status="PASS" starttime="20201029 18:18:07.102" endtime="20201029 18:18:07.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.111" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:07.110" endtime="20201029 18:18:07.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.114" level="INFO">VALUE: [4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.869999998824426e-07, 4.860000000217468e-07, 4.870000001044872e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.7200000019564925e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.860000000217468e-07]</msg>
<status status="PASS" starttime="20201029 18:18:07.113" endtime="20201029 18:18:07.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.108" endtime="20201029 18:18:07.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.755" endtime="20201029 18:18:07.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.754" endtime="20201029 18:18:07.116"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.124" endtime="20201029 18:18:07.135"></status>
</kw>
<msg timestamp="20201029 18:18:07.135" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:07.123" endtime="20201029 18:18:07.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.138" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:07.137" endtime="20201029 18:18:07.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.139" endtime="20201029 18:18:07.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.120" endtime="20201029 18:18:07.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.118" endtime="20201029 18:18:07.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.150" endtime="20201029 18:18:07.454"></status>
</kw>
<msg timestamp="20201029 18:18:07.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.170583958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.170584444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:07.148" endtime="20201029 18:18:07.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.170583958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.170584444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:07.459" endtime="20201029 18:18:07.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.469" endtime="20201029 18:18:07.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.144" endtime="20201029 18:18:07.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.143" endtime="20201029 18:18:07.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:07.477" level="INFO">${RESULT} = [{'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:07.472" endtime="20201029 18:18:07.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:07.481" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999998343004e-07, 4.719999...</msg>
<status status="PASS" starttime="20201029 18:18:07.478" endtime="20201029 18:18:07.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.486" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:07.485" endtime="20201029 18:18:07.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.489" level="INFO">VALUE: [4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.860000000217468e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:18:07.487" endtime="20201029 18:18:07.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.482" endtime="20201029 18:18:07.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.117" endtime="20201029 18:18:07.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.116" endtime="20201029 18:18:07.491"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.499" endtime="20201029 18:18:07.509"></status>
</kw>
<msg timestamp="20201029 18:18:07.509" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:07.497" endtime="20201029 18:18:07.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.512" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:07.510" endtime="20201029 18:18:07.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.513" endtime="20201029 18:18:07.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.495" endtime="20201029 18:18:07.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.493" endtime="20201029 18:18:07.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.522" endtime="20201029 18:18:07.820"></status>
</kw>
<msg timestamp="20201029 18:18:07.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.522814764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.522815236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:07.521" endtime="20201029 18:18:07.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.522814764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.522815236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:07.825" endtime="20201029 18:18:07.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.835" endtime="20201029 18:18:07.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.518" endtime="20201029 18:18:07.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.516" endtime="20201029 18:18:07.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:07.854" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7200000019564925e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.7199999997360464e-0...</msg>
<status status="PASS" starttime="20201029 18:18:07.848" endtime="20201029 18:18:07.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:07.865" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07,...</msg>
<status status="PASS" starttime="20201029 18:18:07.856" endtime="20201029 18:18:07.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.871" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:07.868" endtime="20201029 18:18:07.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.875" level="INFO">VALUE: [4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.870000001044872e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.73000000056345e-07, 4.729999998343004e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07]</msg>
<status status="PASS" starttime="20201029 18:18:07.873" endtime="20201029 18:18:07.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.866" endtime="20201029 18:18:07.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.491" endtime="20201029 18:18:07.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.491" endtime="20201029 18:18:07.877"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.885" endtime="20201029 18:18:07.896"></status>
</kw>
<msg timestamp="20201029 18:18:07.897" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:07.884" endtime="20201029 18:18:07.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.899" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:07.898" endtime="20201029 18:18:07.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.900" endtime="20201029 18:18:07.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.881" endtime="20201029 18:18:07.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.879" endtime="20201029 18:18:07.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.910" endtime="20201029 18:18:08.217"></status>
</kw>
<msg timestamp="20201029 18:18:08.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.888278819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.888279292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:07.908" endtime="20201029 18:18:08.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.888278819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.888279292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.223" endtime="20201029 18:18:08.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.233" endtime="20201029 18:18:08.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.906" endtime="20201029 18:18:08.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.904" endtime="20201029 18:18:08.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:08.240" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.869999998824426e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.869999998824426e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.729999998343004e-07}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:08.237" endtime="20201029 18:18:08.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:08.245" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.73000000056345e-07, 4.729999998343004e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.86000...</msg>
<status status="PASS" starttime="20201029 18:18:08.241" endtime="20201029 18:18:08.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.250" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:08.248" endtime="20201029 18:18:08.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.252" level="INFO">VALUE: [4.73000000056345e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.73000000056345e-07, 4.729999998343004e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.869999998824426e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 18:18:08.251" endtime="20201029 18:18:08.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.246" endtime="20201029 18:18:08.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.878" endtime="20201029 18:18:08.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.878" endtime="20201029 18:18:08.254"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.263" endtime="20201029 18:18:08.274"></status>
</kw>
<msg timestamp="20201029 18:18:08.274" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.260" endtime="20201029 18:18:08.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.277" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.275" endtime="20201029 18:18:08.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.278" endtime="20201029 18:18:08.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.258" endtime="20201029 18:18:08.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.256" endtime="20201029 18:18:08.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.287" endtime="20201029 18:18:08.597"></status>
</kw>
<msg timestamp="20201029 18:18:08.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.264040375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.264040861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.286" endtime="20201029 18:18:08.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.264040375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.264040861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.602" endtime="20201029 18:18:08.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.612" endtime="20201029 18:18:08.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.283" endtime="20201029 18:18:08.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.281" endtime="20201029 18:18:08.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:08.619" level="INFO">${RESULT} = [{'diff': 4.859999997997022e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.860000002437914e-07}, ...</msg>
<status status="PASS" starttime="20201029 18:18:08.616" endtime="20201029 18:18:08.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:08.625" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 18:18:08.620" endtime="20201029 18:18:08.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.630" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:08.628" endtime="20201029 18:18:08.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.633" level="INFO">VALUE: [4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7200000041769385e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:18:08.631" endtime="20201029 18:18:08.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.626" endtime="20201029 18:18:08.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.255" endtime="20201029 18:18:08.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.254" endtime="20201029 18:18:08.634"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.643" endtime="20201029 18:18:08.653"></status>
</kw>
<msg timestamp="20201029 18:18:08.653" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.641" endtime="20201029 18:18:08.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.656" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.654" endtime="20201029 18:18:08.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.657" endtime="20201029 18:18:08.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.638" endtime="20201029 18:18:08.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.636" endtime="20201029 18:18:08.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.667" endtime="20201029 18:18:08.983"></status>
</kw>
<msg timestamp="20201029 18:18:08.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.631538417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.631538903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.665" endtime="20201029 18:18:08.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.631538417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.631538903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.988" endtime="20201029 18:18:08.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.998" endtime="20201029 18:18:09.000"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.663" endtime="20201029 18:18:09.000"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.661" endtime="20201029 18:18:09.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:09.005" level="INFO">${RESULT} = [{'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.870000003265318e-07}, {'diff': 4.869999998824426e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}...</msg>
<status status="PASS" starttime="20201029 18:18:09.002" endtime="20201029 18:18:09.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:09.011" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000002437914e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4...</msg>
<status status="PASS" starttime="20201029 18:18:09.006" endtime="20201029 18:18:09.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.015" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:09.014" endtime="20201029 18:18:09.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.018" level="INFO">VALUE: [4.860000002437914e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7200000041769385e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:18:09.017" endtime="20201029 18:18:09.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.012" endtime="20201029 18:18:09.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.635" endtime="20201029 18:18:09.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.635" endtime="20201029 18:18:09.020"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.028" endtime="20201029 18:18:09.039"></status>
</kw>
<msg timestamp="20201029 18:18:09.040" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:09.026" endtime="20201029 18:18:09.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.042" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:09.041" endtime="20201029 18:18:09.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.043" endtime="20201029 18:18:09.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.024" endtime="20201029 18:18:09.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.022" endtime="20201029 18:18:09.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.053" endtime="20201029 18:18:09.381"></status>
</kw>
<msg timestamp="20201029 18:18:09.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.002222125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.002222611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:09.051" endtime="20201029 18:18:09.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.002222125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.002222611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:09.389" endtime="20201029 18:18:09.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.406" endtime="20201029 18:18:09.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.048" endtime="20201029 18:18:09.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.047" endtime="20201029 18:18:09.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:09.421" level="INFO">${RESULT} = [{'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.859999997997022e-07...</msg>
<status status="PASS" starttime="20201029 18:18:09.414" endtime="20201029 18:18:09.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:09.430" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4....</msg>
<status status="PASS" starttime="20201029 18:18:09.423" endtime="20201029 18:18:09.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.439" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:09.436" endtime="20201029 18:18:09.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.445" level="INFO">VALUE: [4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.870000003265318e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:18:09.441" endtime="20201029 18:18:09.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.432" endtime="20201029 18:18:09.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.020" endtime="20201029 18:18:09.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.020" endtime="20201029 18:18:09.449"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.461" endtime="20201029 18:18:09.472"></status>
</kw>
<msg timestamp="20201029 18:18:09.472" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:09.459" endtime="20201029 18:18:09.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.475" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:09.473" endtime="20201029 18:18:09.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.476" endtime="20201029 18:18:09.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.456" endtime="20201029 18:18:09.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.454" endtime="20201029 18:18:09.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.485" endtime="20201029 18:18:09.798"></status>
</kw>
<msg timestamp="20201029 18:18:09.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.37842075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.378421222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:09.484" endtime="20201029 18:18:09.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.37842075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.378421222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:09.803" endtime="20201029 18:18:09.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.817" endtime="20201029 18:18:09.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.481" endtime="20201029 18:18:09.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.479" endtime="20201029 18:18:09.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:09.832" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}...</msg>
<status status="PASS" starttime="20201029 18:18:09.824" endtime="20201029 18:18:09.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:09.843" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4...</msg>
<status status="PASS" starttime="20201029 18:18:09.834" endtime="20201029 18:18:09.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.852" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:09.850" endtime="20201029 18:18:09.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.858" level="INFO">VALUE: [4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.869999998824426e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:18:09.854" endtime="20201029 18:18:09.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.845" endtime="20201029 18:18:09.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.451" endtime="20201029 18:18:09.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.450" endtime="20201029 18:18:09.861"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.878" endtime="20201029 18:18:09.892"></status>
</kw>
<msg timestamp="20201029 18:18:09.893" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:09.874" endtime="20201029 18:18:09.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.898" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:09.895" endtime="20201029 18:18:09.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.900" endtime="20201029 18:18:09.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.869" endtime="20201029 18:18:09.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.865" endtime="20201029 18:18:09.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.916" endtime="20201029 18:18:10.225"></status>
</kw>
<msg timestamp="20201029 18:18:10.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.802327278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.802327764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:09.914" endtime="20201029 18:18:10.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.802327278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.802327764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:10.233" endtime="20201029 18:18:10.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.245" endtime="20201029 18:18:10.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.910" endtime="20201029 18:18:10.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.907" endtime="20201029 18:18:10.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:10.256" level="INFO">${RESULT} = [{'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 18:18:10.252" endtime="20201029 18:18:10.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:10.262" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4....</msg>
<status status="PASS" starttime="20201029 18:18:10.257" endtime="20201029 18:18:10.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.266" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:10.265" endtime="20201029 18:18:10.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.268" level="INFO">VALUE: [4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.869999998824426e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.869999994383534e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 18:18:10.267" endtime="20201029 18:18:10.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.263" endtime="20201029 18:18:10.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.863" endtime="20201029 18:18:10.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.862" endtime="20201029 18:18:10.270"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.278" endtime="20201029 18:18:10.289"></status>
</kw>
<msg timestamp="20201029 18:18:10.289" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:10.276" endtime="20201029 18:18:10.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.292" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:10.290" endtime="20201029 18:18:10.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.293" endtime="20201029 18:18:10.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.274" endtime="20201029 18:18:10.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.272" endtime="20201029 18:18:10.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.303" endtime="20201029 18:18:10.617"></status>
</kw>
<msg timestamp="20201029 18:18:10.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.210613667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.210614139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:10.300" endtime="20201029 18:18:10.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.210613667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.210614139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:10.623" endtime="20201029 18:18:10.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.645" endtime="20201029 18:18:10.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.298" endtime="20201029 18:18:10.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.296" endtime="20201029 18:18:10.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:10.660" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}...</msg>
<status status="PASS" starttime="20201029 18:18:10.652" endtime="20201029 18:18:10.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:10.670" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4...</msg>
<status status="PASS" starttime="20201029 18:18:10.662" endtime="20201029 18:18:10.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.679" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:10.677" endtime="20201029 18:18:10.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.684" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07]</msg>
<status status="PASS" starttime="20201029 18:18:10.681" endtime="20201029 18:18:10.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.672" endtime="20201029 18:18:10.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.271" endtime="20201029 18:18:10.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.270" endtime="20201029 18:18:10.688"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.706" endtime="20201029 18:18:10.719"></status>
</kw>
<msg timestamp="20201029 18:18:10.720" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:10.703" endtime="20201029 18:18:10.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.725" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:10.722" endtime="20201029 18:18:10.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.726" endtime="20201029 18:18:10.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.697" endtime="20201029 18:18:10.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.692" endtime="20201029 18:18:10.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.735" endtime="20201029 18:18:11.052"></status>
</kw>
<msg timestamp="20201029 18:18:11.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.598394819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.598395292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:10.733" endtime="20201029 18:18:11.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.598394819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.598395292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:11.057" endtime="20201029 18:18:11.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.067" endtime="20201029 18:18:11.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.731" endtime="20201029 18:18:11.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.729" endtime="20201029 18:18:11.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:11.074" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:18:11.070" endtime="20201029 18:18:11.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:11.079" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199...</msg>
<status status="PASS" starttime="20201029 18:18:11.075" endtime="20201029 18:18:11.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.084" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:11.083" endtime="20201029 18:18:11.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.086" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.870000003265318e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 18:18:11.085" endtime="20201029 18:18:11.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.080" endtime="20201029 18:18:11.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.689" endtime="20201029 18:18:11.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.688" endtime="20201029 18:18:11.088"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.096" endtime="20201029 18:18:11.106"></status>
</kw>
<msg timestamp="20201029 18:18:11.107" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.094" endtime="20201029 18:18:11.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.109" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.108" endtime="20201029 18:18:11.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.110" endtime="20201029 18:18:11.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.091" endtime="20201029 18:18:11.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.090" endtime="20201029 18:18:11.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.120" endtime="20201029 18:18:11.433"></status>
</kw>
<msg timestamp="20201029 18:18:11.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.016853958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.016854431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:11.118" endtime="20201029 18:18:11.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.016853958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.016854431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:11.444" endtime="20201029 18:18:11.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.466" endtime="20201029 18:18:11.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.115" endtime="20201029 18:18:11.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.113" endtime="20201029 18:18:11.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:11.485" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07},...</msg>
<status status="PASS" starttime="20201029 18:18:11.473" endtime="20201029 18:18:11.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:11.495" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 18:18:11.487" endtime="20201029 18:18:11.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.504" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:11.502" endtime="20201029 18:18:11.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.509" level="INFO">VALUE: [4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:18:11.506" endtime="20201029 18:18:11.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.497" endtime="20201029 18:18:11.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.089" endtime="20201029 18:18:11.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.088" endtime="20201029 18:18:11.512"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.528" endtime="20201029 18:18:11.541"></status>
</kw>
<msg timestamp="20201029 18:18:11.541" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.525" endtime="20201029 18:18:11.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.544" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.542" endtime="20201029 18:18:11.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.545" endtime="20201029 18:18:11.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.520" endtime="20201029 18:18:11.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.516" endtime="20201029 18:18:11.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.555" endtime="20201029 18:18:11.872"></status>
</kw>
<msg timestamp="20201029 18:18:11.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.394296319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.394296792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:11.554" endtime="20201029 18:18:11.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.394296319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.394296792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:11.877" endtime="20201029 18:18:11.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.887" endtime="20201029 18:18:11.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.550" endtime="20201029 18:18:11.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.548" endtime="20201029 18:18:11.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:11.893" level="INFO">${RESULT} = [{'diff': 4.729999991681666e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 18:18:11.890" endtime="20201029 18:18:11.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:11.898" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.729999991681666e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4....</msg>
<status status="PASS" starttime="20201029 18:18:11.894" endtime="20201029 18:18:11.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.903" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:11.901" endtime="20201029 18:18:11.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.906" level="INFO">VALUE: [4.729999991681666e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:18:11.904" endtime="20201029 18:18:11.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.899" endtime="20201029 18:18:11.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.514" endtime="20201029 18:18:11.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.513" endtime="20201029 18:18:11.907"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.915" endtime="20201029 18:18:11.926"></status>
</kw>
<msg timestamp="20201029 18:18:11.926" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.913" endtime="20201029 18:18:11.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.929" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.927" endtime="20201029 18:18:11.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.930" endtime="20201029 18:18:11.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.911" endtime="20201029 18:18:11.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.909" endtime="20201029 18:18:11.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.939" endtime="20201029 18:18:12.259"></status>
</kw>
<msg timestamp="20201029 18:18:12.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.819428639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.819429111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:11.938" endtime="20201029 18:18:12.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.819428639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.819429111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:12.264" endtime="20201029 18:18:12.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.274" endtime="20201029 18:18:12.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.935" endtime="20201029 18:18:12.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.933" endtime="20201029 18:18:12.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:12.280" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-0...</msg>
<status status="PASS" starttime="20201029 18:18:12.277" endtime="20201029 18:18:12.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:12.286" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 18:18:12.281" endtime="20201029 18:18:12.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.290" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:12.289" endtime="20201029 18:18:12.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.293" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:18:12.291" endtime="20201029 18:18:12.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.287" endtime="20201029 18:18:12.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.908" endtime="20201029 18:18:12.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.908" endtime="20201029 18:18:12.294"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.302" endtime="20201029 18:18:12.312"></status>
</kw>
<msg timestamp="20201029 18:18:12.312" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.300" endtime="20201029 18:18:12.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.315" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.313" endtime="20201029 18:18:12.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.316" endtime="20201029 18:18:12.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.298" endtime="20201029 18:18:12.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.296" endtime="20201029 18:18:12.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.325" endtime="20201029 18:18:12.637"></status>
</kw>
<msg timestamp="20201029 18:18:12.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.195571208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.195571681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:12.324" endtime="20201029 18:18:12.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.195571208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.195571681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:12.642" endtime="20201029 18:18:12.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.655" endtime="20201029 18:18:12.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.321" endtime="20201029 18:18:12.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.319" endtime="20201029 18:18:12.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:12.666" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:12.659" endtime="20201029 18:18:12.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:12.671" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.86000...</msg>
<status status="PASS" starttime="20201029 18:18:12.667" endtime="20201029 18:18:12.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.675" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:12.674" endtime="20201029 18:18:12.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.678" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:18:12.676" endtime="20201029 18:18:12.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.671" endtime="20201029 18:18:12.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.295" endtime="20201029 18:18:12.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.295" endtime="20201029 18:18:12.681"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.690" endtime="20201029 18:18:12.702"></status>
</kw>
<msg timestamp="20201029 18:18:12.702" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.688" endtime="20201029 18:18:12.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.705" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.703" endtime="20201029 18:18:12.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.706" endtime="20201029 18:18:12.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.685" endtime="20201029 18:18:12.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.683" endtime="20201029 18:18:12.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.715" endtime="20201029 18:18:13.046"></status>
</kw>
<msg timestamp="20201029 18:18:13.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.572575819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.572576292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:12.714" endtime="20201029 18:18:13.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.572575819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.572576292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:13.053" endtime="20201029 18:18:13.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.063" endtime="20201029 18:18:13.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.711" endtime="20201029 18:18:13.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.709" endtime="20201029 18:18:13.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:13.070" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:18:13.066" endtime="20201029 18:18:13.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:13.075" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199...</msg>
<status status="PASS" starttime="20201029 18:18:13.071" endtime="20201029 18:18:13.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.079" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:13.078" endtime="20201029 18:18:13.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.081" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:18:13.080" endtime="20201029 18:18:13.082"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.076" endtime="20201029 18:18:13.082"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.681" endtime="20201029 18:18:13.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.681" endtime="20201029 18:18:13.083"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.091" endtime="20201029 18:18:13.101"></status>
</kw>
<msg timestamp="20201029 18:18:13.101" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:13.089" endtime="20201029 18:18:13.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.104" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:13.102" endtime="20201029 18:18:13.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.109" endtime="20201029 18:18:13.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.087" endtime="20201029 18:18:13.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.085" endtime="20201029 18:18:13.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.119" endtime="20201029 18:18:13.438"></status>
</kw>
<msg timestamp="20201029 18:18:13.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.951751778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.95175225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:13.117" endtime="20201029 18:18:13.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.951751778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.95175225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:13.443" endtime="20201029 18:18:13.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.453" endtime="20201029 18:18:13.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.115" endtime="20201029 18:18:13.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.113" endtime="20201029 18:18:13.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:13.460" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07},...</msg>
<status status="PASS" starttime="20201029 18:18:13.457" endtime="20201029 18:18:13.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:13.465" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.85999999355613e-07, 4.85...</msg>
<status status="PASS" starttime="20201029 18:18:13.461" endtime="20201029 18:18:13.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.470" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:18:13.469" endtime="20201029 18:18:13.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.472" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:18:13.471" endtime="20201029 18:18:13.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.466" endtime="20201029 18:18:13.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.084" endtime="20201029 18:18:13.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.083" endtime="20201029 18:18:13.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.620" endtime="20201029 18:18:13.474"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:05.551" endtime="20201029 18:18:13.474" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:13.481" endtime="20201029 18:18:13.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.480" endtime="20201029 18:18:13.501"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.514" endtime="20201029 18:18:13.528"></status>
</kw>
<msg timestamp="20201029 18:18:13.529" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:13.513" endtime="20201029 18:18:13.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.531" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:13.530" endtime="20201029 18:18:13.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.535" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:13.533" endtime="20201029 18:18:13.535"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:13.510" endtime="20201029 18:18:13.536"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:13.508" endtime="20201029 18:18:13.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.506" endtime="20201029 18:18:13.536"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:13.540" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:13.539" endtime="20201029 18:18:13.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.537" endtime="20201029 18:18:13.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.505" endtime="20201029 18:18:13.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.505" endtime="20201029 18:18:13.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.542" endtime="20201029 18:18:13.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.503" endtime="20201029 18:18:13.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.502" endtime="20201029 18:18:13.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.478" endtime="20201029 18:18:13.544"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.553" endtime="20201029 18:18:13.564"></status>
</kw>
<msg timestamp="20201029 18:18:13.564" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:13.551" endtime="20201029 18:18:13.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.567" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:13.565" endtime="20201029 18:18:13.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.568" endtime="20201029 18:18:13.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.549" endtime="20201029 18:18:13.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.547" endtime="20201029 18:18:13.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.577" endtime="20201029 18:18:13.863"></status>
</kw>
<msg timestamp="20201029 18:18:13.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062960667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062963722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:13.575" endtime="20201029 18:18:13.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062960667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062963722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:13.867" endtime="20201029 18:18:13.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.876" endtime="20201029 18:18:13.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.573" endtime="20201029 18:18:13.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.571" endtime="20201029 18:18:13.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:13.882" level="INFO">${RESULT} = [{'diff': 3.0550000000018063e-06}, {'diff': 3.02800000000214e-06}, {'diff': 3.02800000000214e-06}, {'diff': 3.0700000000077887e-06}, {'diff': 3.083000000000946e-06}, {'diff': 3.0840000000004197e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:18:13.879" endtime="20201029 18:18:13.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:13.887" level="INFO">${OVERHEAD} = {'diff': [3.0550000000018063e-06, 3.02800000000214e-06, 3.02800000000214e-06, 3.0700000000077887e-06, 3.083000000000946e-06, 3.0840000000004197e-06, 3.042000000008649e-06, 3.041999999994771e-06, 3.041...</msg>
<status status="PASS" starttime="20201029 18:18:13.883" endtime="20201029 18:18:13.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.891" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:13.890" endtime="20201029 18:18:13.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.894" level="INFO">VALUE: [3.0550000000018063e-06, 3.02800000000214e-06, 3.02800000000214e-06, 3.0700000000077887e-06, 3.083000000000946e-06, 3.0840000000004197e-06, 3.042000000008649e-06, 3.041999999994771e-06, 3.041999999994771e-06, 3.02800000000214e-06, 3.0409999999952975e-06, 3.041999999994771e-06, 3.02800000000214e-06, 3.0410000000091753e-06, 3.1250000000065947e-06, 3.0269999999887887e-06, 3.0409999999952975e-06, 3.02800000000214e-06, 3.042000000008649e-06, 3.0409999999952975e-06, 3.0410000000091753e-06, 3.05600000000128e-06, 3.041999999994771e-06, 3.0409999999952975e-06, 3.014000000009509e-06, 3.0410000000091753e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.0409999999952975e-06, 3.0689999999944373e-06, 3.05600000000128e-06, 3.041999999994771e-06, 3.05600000000128e-06, 3.02800000000214e-06, 3.041999999994771e-06, 3.0550000000018063e-06, 3.0410000000091753e-06, 3.02800000000214e-06, 3.042000000008649e-06, 3.0409999999952975e-06, 3.02800000000214e-06, 3.042000000008649e-06, 3.0279999999882623e-06, 3.0409999999952975e-06, 3.041999999994771e-06, 2.9999999999891225e-06, 3.055999999987402e-06, 3.042000000008649e-06, 3.041999999994771e-06, 3.05600000000128e-06]</msg>
<status status="PASS" starttime="20201029 18:18:13.893" endtime="20201029 18:18:13.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.888" endtime="20201029 18:18:13.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.546" endtime="20201029 18:18:13.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.545" endtime="20201029 18:18:13.895"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.903" endtime="20201029 18:18:13.916"></status>
</kw>
<msg timestamp="20201029 18:18:13.916" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:13.902" endtime="20201029 18:18:13.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.918" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:13.917" endtime="20201029 18:18:13.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.920" endtime="20201029 18:18:13.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.899" endtime="20201029 18:18:13.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.897" endtime="20201029 18:18:13.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.928" endtime="20201029 18:18:14.236"></status>
</kw>
<msg timestamp="20201029 18:18:14.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063404278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063407319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:13.927" endtime="20201029 18:18:14.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063404278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063407319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:14.241" endtime="20201029 18:18:14.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.252" endtime="20201029 18:18:14.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.924" endtime="20201029 18:18:14.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.923" endtime="20201029 18:18:14.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:14.261" level="INFO">${RESULT} = [{'diff': 3.0410000000091753e-06}, {'diff': 3.02800000000214e-06}, {'diff': 3.042000000008649e-06}, {'diff': 3.0409999999952975e-06}, {'diff': 3.02800000000214e-06}, {'diff': 3.042000000008649e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:18:14.257" endtime="20201029 18:18:14.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:14.267" level="INFO">${OVERHEAD} = {'diff': [3.0410000000091753e-06, 3.02800000000214e-06, 3.042000000008649e-06, 3.0409999999952975e-06, 3.02800000000214e-06, 3.042000000008649e-06, 3.0279999999882623e-06, 3.0409999999952975e-06, 3.04...</msg>
<status status="PASS" starttime="20201029 18:18:14.263" endtime="20201029 18:18:14.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.271" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:14.270" endtime="20201029 18:18:14.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.274" level="INFO">VALUE: [3.0410000000091753e-06, 3.02800000000214e-06, 3.042000000008649e-06, 3.0409999999952975e-06, 3.02800000000214e-06, 3.042000000008649e-06, 3.0279999999882623e-06, 3.0409999999952975e-06, 3.041999999994771e-06, 2.9999999999891225e-06, 3.055999999987402e-06, 3.042000000008649e-06, 3.041999999994771e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.042000000008649e-06, 3.041000000036931e-06, 3.042000000008649e-06, 3.0419999999531377e-06, 3.042000000008649e-06, 3.069999999993911e-06, 3.0549999999740507e-06, 3.028000000016018e-06, 3.041000000036931e-06, 3.042000000008649e-06, 3.0269999999887887e-06, 3.0409999999814197e-06, 3.042000000008649e-06, 3.0419999999531377e-06, 3.042000000008649e-06, 3.05600000000128e-06, 3.0269999999887887e-06, 3.055000000029562e-06, 3.0279999999605067e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.097000000007455e-06, 3.0269999999887887e-06, 3.042000000008649e-06, 3.0139999999678757e-06, 3.042000000008649e-06, 3.028000000016018e-06, 3.0549999999740507e-06, 3.028000000016018e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.0409999999814197e-06, 3.0409999999814197e-06, 3.0409999999814197e-06, 3.0139999999678757e-06, 3.0279999999605067e-06, 2.9999999999752447e-06, 3.028000000016018e-06, 3.042000000008649e-06, 3.0419999999531377e-06, 3.014000000023387e-06, 3.042000000008649e-06, 3.0419999999531377e-06, 3.05600000000128e-06, 3.028000000016018e-06, 3.0139999999678757e-06, 3.042000000008649e-06]</msg>
<status status="PASS" starttime="20201029 18:18:14.273" endtime="20201029 18:18:14.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.268" endtime="20201029 18:18:14.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.896" endtime="20201029 18:18:14.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.896" endtime="20201029 18:18:14.276"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.284" endtime="20201029 18:18:14.297"></status>
</kw>
<msg timestamp="20201029 18:18:14.297" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:14.283" endtime="20201029 18:18:14.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.300" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:14.298" endtime="20201029 18:18:14.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.301" endtime="20201029 18:18:14.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.279" endtime="20201029 18:18:14.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.278" endtime="20201029 18:18:14.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.310" endtime="20201029 18:18:14.607"></status>
</kw>
<msg timestamp="20201029 18:18:14.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.403823306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.403826347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:14.308" endtime="20201029 18:18:14.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.403823306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.403826347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:14.611" endtime="20201029 18:18:14.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.621" endtime="20201029 18:18:14.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.306" endtime="20201029 18:18:14.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.304" endtime="20201029 18:18:14.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:14.628" level="INFO">${RESULT} = [{'diff': 3.0409999999814197e-06}, {'diff': 3.0139999999678757e-06}, {'diff': 3.0279999999605067e-06}, {'diff': 2.9999999999752447e-06}, {'diff': 3.028000000016018e-06}, {'diff': 3.042000000008649e-06...</msg>
<status status="PASS" starttime="20201029 18:18:14.625" endtime="20201029 18:18:14.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:14.636" level="INFO">${OVERHEAD} = {'diff': [3.0409999999814197e-06, 3.0139999999678757e-06, 3.0279999999605067e-06, 2.9999999999752447e-06, 3.028000000016018e-06, 3.042000000008649e-06, 3.0419999999531377e-06, 3.014000000023387e-06, 3...</msg>
<status status="PASS" starttime="20201029 18:18:14.629" endtime="20201029 18:18:14.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.640" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:14.639" endtime="20201029 18:18:14.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.643" level="INFO">VALUE: [3.0409999999814197e-06, 3.0139999999678757e-06, 3.0279999999605067e-06, 2.9999999999752447e-06, 3.028000000016018e-06, 3.042000000008649e-06, 3.0419999999531377e-06, 3.014000000023387e-06, 3.042000000008649e-06, 3.0419999999531377e-06, 3.05600000000128e-06, 3.028000000016018e-06, 3.0139999999678757e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.0269999999887887e-06, 3.0279999999605067e-06, 3.083000000070335e-06, 3.042000000008649e-06, 3.0419999998976266e-06, 3.056000000056791e-06, 3.069999999993911e-06, 3.0549999999740507e-06, 3.0269999999887887e-06, 3.042000000008649e-06, 3.014000000023387e-06, 3.041000000036931e-06, 3.0279999999605067e-06, 3.0559999999457688e-06, 3.0559999999457688e-06, 2.9579999999418405e-06, 3.041000000036931e-06, 3.042000000008649e-06, 3.0559999999457688e-06, 3.0559999999457688e-06, 3.042000000008649e-06, 3.056000000056791e-06, 3.0279999999605067e-06, 3.042000000008649e-06, 3.084000000042053e-06, 3.041000000036931e-06, 3.069999999993911e-06, 3.042000000008649e-06, 3.111000000055597e-06, 3.042000000008649e-06, 3.041000000036931e-06, 3.027000000099811e-06, 2.9719999999899827e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.0139999999123646e-06, 3.042000000008649e-06, 3.0269999999887887e-06, 3.041000000036931e-06, 3.042000000008649e-06, 3.028000000071529e-06, 3.0549999999740507e-06, 3.0559999999457688e-06, 3.028000000071529e-06, 3.069999999993911e-06, 3.055000000085073e-06, 2.986000000038125e-06, 3.042000000008649e-06, 3.0269999999887887e-06]</msg>
<status status="PASS" starttime="20201029 18:18:14.641" endtime="20201029 18:18:14.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.637" endtime="20201029 18:18:14.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.276" endtime="20201029 18:18:14.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.276" endtime="20201029 18:18:14.644"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.652" endtime="20201029 18:18:14.664"></status>
</kw>
<msg timestamp="20201029 18:18:14.664" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:14.650" endtime="20201029 18:18:14.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.666" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:14.665" endtime="20201029 18:18:14.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.668" endtime="20201029 18:18:14.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.648" endtime="20201029 18:18:14.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.646" endtime="20201029 18:18:14.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.677" endtime="20201029 18:18:14.980"></status>
</kw>
<msg timestamp="20201029 18:18:14.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.774918069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.774921083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:14.675" endtime="20201029 18:18:14.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.774918069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.774921083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:14.985" endtime="20201029 18:18:14.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.995" endtime="20201029 18:18:14.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.672" endtime="20201029 18:18:14.998"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.671" endtime="20201029 18:18:14.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:15.002" level="INFO">${RESULT} = [{'diff': 3.0139999999123646e-06}, {'diff': 3.042000000008649e-06}, {'diff': 3.0269999999887887e-06}, {'diff': 3.041000000036931e-06}, {'diff': 3.042000000008649e-06}, {'diff': 3.028000000071529e-06},...</msg>
<status status="PASS" starttime="20201029 18:18:14.999" endtime="20201029 18:18:15.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:15.008" level="INFO">${OVERHEAD} = {'diff': [3.0139999999123646e-06, 3.042000000008649e-06, 3.0269999999887887e-06, 3.041000000036931e-06, 3.042000000008649e-06, 3.028000000071529e-06, 3.0549999999740507e-06, 3.0559999999457688e-06, 3....</msg>
<status status="PASS" starttime="20201029 18:18:15.003" endtime="20201029 18:18:15.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.012" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:15.011" endtime="20201029 18:18:15.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.015" level="INFO">VALUE: [3.0139999999123646e-06, 3.042000000008649e-06, 3.0269999999887887e-06, 3.041000000036931e-06, 3.042000000008649e-06, 3.028000000071529e-06, 3.0549999999740507e-06, 3.0559999999457688e-06, 3.028000000071529e-06, 3.069999999993911e-06, 3.055000000085073e-06, 2.986000000038125e-06, 3.042000000008649e-06, 3.0269999999887887e-06, 3.0419999998976266e-06, 3.111000000055597e-06, 3.0419999998976266e-06, 3.041000000036931e-06, 3.0559999999457688e-06, 3.0969999997854103e-06, 3.0559999999457688e-06, 3.0419999998976266e-06, 2.959000000135603e-06, 3.042000000119671e-06, 3.0419999998976266e-06, 3.0279999998494844e-06, 3.042000000119671e-06, 3.0549999998630284e-06, 3.028000000071529e-06, 3.013000000162691e-06, 3.055000000085073e-06, 3.028000000071529e-06, 3.042000000119671e-06, 3.028000000071529e-06, 3.041000000036931e-06, 3.097000000007455e-06, 3.0279999998494844e-06, 3.042000000119671e-06, 3.028000000071529e-06, 3.042000000119671e-06, 3.042000000119671e-06, 3.028000000071529e-06, 3.041000000036931e-06, 3.0419999998976266e-06, 3.0549999998630284e-06, 3.028000000071529e-06, 3.0559999999457688e-06, 3.041000000036931e-06, 3.0559999999457688e-06, 3.042000000119671e-06, 3.041000000036931e-06, 2.9999999999752447e-06, 3.084000000042053e-06, 3.041000000036931e-06, 3.0419999998976266e-06, 3.0980000000901953e-06, 3.0419999998976266e-06, 3.0139999998013423e-06, 3.0559999999457688e-06, 3.0139999998013423e-06, 3.0409999998148862e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.014000000023387e-06]</msg>
<status status="PASS" starttime="20201029 18:18:15.013" endtime="20201029 18:18:15.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.009" endtime="20201029 18:18:15.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.645" endtime="20201029 18:18:15.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.644" endtime="20201029 18:18:15.016"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.024" endtime="20201029 18:18:15.035"></status>
</kw>
<msg timestamp="20201029 18:18:15.036" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:15.022" endtime="20201029 18:18:15.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.038" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:15.037" endtime="20201029 18:18:15.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.039" endtime="20201029 18:18:15.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.020" endtime="20201029 18:18:15.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.018" endtime="20201029 18:18:15.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.048" endtime="20201029 18:18:15.359"></status>
</kw>
<msg timestamp="20201029 18:18:15.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.133527792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.133530833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:15.047" endtime="20201029 18:18:15.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.133527792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.133530833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:15.364" endtime="20201029 18:18:15.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.374" endtime="20201029 18:18:15.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.044" endtime="20201029 18:18:15.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.042" endtime="20201029 18:18:15.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:15.380" level="INFO">${RESULT} = [{'diff': 3.041000000036931e-06}, {'diff': 2.9999999999752447e-06}, {'diff': 3.084000000042053e-06}, {'diff': 3.041000000036931e-06}, {'diff': 3.0419999998976266e-06}, {'diff': 3.0980000000901953e-06}...</msg>
<status status="PASS" starttime="20201029 18:18:15.377" endtime="20201029 18:18:15.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:15.385" level="INFO">${OVERHEAD} = {'diff': [3.041000000036931e-06, 2.9999999999752447e-06, 3.084000000042053e-06, 3.041000000036931e-06, 3.0419999998976266e-06, 3.0980000000901953e-06, 3.0419999998976266e-06, 3.0139999998013423e-06, 3...</msg>
<status status="PASS" starttime="20201029 18:18:15.381" endtime="20201029 18:18:15.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.389" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:15.388" endtime="20201029 18:18:15.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.392" level="INFO">VALUE: [3.041000000036931e-06, 2.9999999999752447e-06, 3.084000000042053e-06, 3.041000000036931e-06, 3.0419999998976266e-06, 3.0980000000901953e-06, 3.0419999998976266e-06, 3.0139999998013423e-06, 3.0559999999457688e-06, 3.0139999998013423e-06, 3.0409999998148862e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.014000000023387e-06, 3.028000000071529e-06, 3.0269999999887887e-06, 3.0269999999887887e-06, 3.0560000001678134e-06, 3.014000000023387e-06, 3.041000000036931e-06, 3.041000000036931e-06, 3.0270000002108333e-06, 3.0419999998976266e-06, 3.0279999998494844e-06, 3.041000000036931e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.0689999999111706e-06, 3.055000000085073e-06, 3.042000000119671e-06, 3.0559999999457688e-06, 3.0000000001972893e-06, 3.014000000023387e-06, 3.084000000042053e-06, 3.0549999998630284e-06, 3.0560000001678134e-06, 3.0549999998630284e-06, 3.0279999998494844e-06, 3.0419999998976266e-06, 3.042000000119671e-06, 3.041000000036931e-06, 3.055000000085073e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.042000000119671e-06, 3.0419999998976266e-06, 3.041000000036931e-06, 3.042000000119671e-06, 3.055000000085073e-06, 3.042000000119671e-06, 3.0269999999887887e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.042000000119671e-06, 3.028000000071529e-06, 3.041000000036931e-06, 3.097000000007455e-06, 3.042000000119671e-06, 3.0559999999457688e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.055000000085073e-06, 3.041000000036931e-06]</msg>
<status status="PASS" starttime="20201029 18:18:15.390" endtime="20201029 18:18:15.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.386" endtime="20201029 18:18:15.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.017" endtime="20201029 18:18:15.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.016" endtime="20201029 18:18:15.393"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.402" endtime="20201029 18:18:15.414"></status>
</kw>
<msg timestamp="20201029 18:18:15.415" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:15.400" endtime="20201029 18:18:15.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.417" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:15.416" endtime="20201029 18:18:15.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.418" endtime="20201029 18:18:15.420"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.397" endtime="20201029 18:18:15.420"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.395" endtime="20201029 18:18:15.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.427" endtime="20201029 18:18:15.733"></status>
</kw>
<msg timestamp="20201029 18:18:15.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.496212333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.496215375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:15.425" endtime="20201029 18:18:15.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.496212333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.496215375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:15.739" endtime="20201029 18:18:15.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.750" endtime="20201029 18:18:15.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.423" endtime="20201029 18:18:15.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.421" endtime="20201029 18:18:15.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:15.757" level="INFO">${RESULT} = [{'diff': 3.042000000119671e-06}, {'diff': 3.0269999999887887e-06}, {'diff': 3.0419999998976266e-06}, {'diff': 3.0419999998976266e-06}, {'diff': 3.042000000119671e-06}, {'diff': 3.028000000071529e-06}...</msg>
<status status="PASS" starttime="20201029 18:18:15.753" endtime="20201029 18:18:15.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:15.762" level="INFO">${OVERHEAD} = {'diff': [3.042000000119671e-06, 3.0269999999887887e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.042000000119671e-06, 3.028000000071529e-06, 3.041000000036931e-06, 3.097000000007455e-06, 3.0...</msg>
<status status="PASS" starttime="20201029 18:18:15.758" endtime="20201029 18:18:15.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.766" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:15.765" endtime="20201029 18:18:15.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.769" level="INFO">VALUE: [3.042000000119671e-06, 3.0269999999887887e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.042000000119671e-06, 3.028000000071529e-06, 3.041000000036931e-06, 3.097000000007455e-06, 3.042000000119671e-06, 3.0559999999457688e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.055000000085073e-06, 3.041000000036931e-06, 3.0419999998976266e-06, 3.0549999998630284e-06, 3.0419999998976266e-06, 3.042000000119671e-06, 3.0419999998976266e-06, 3.041000000036931e-06, 3.097000000007455e-06, 3.041000000036931e-06, 3.042000000119671e-06, 2.9859999999271025e-06, 3.0139999998013423e-06, 3.042000000119671e-06, 3.042000000119671e-06, 3.097000000007455e-06, 3.0560000001678134e-06, 3.0419999998976266e-06, 3.0269999999887887e-06, 3.0279999998494844e-06, 3.028000000071529e-06, 2.9999999999752447e-06, 3.042000000119671e-06, 3.041000000036931e-06, 3.0549999998630284e-06, 3.0419999998976266e-06, 3.042000000119671e-06, 2.9999999999752447e-06, 3.0419999998976266e-06, 3.028000000071529e-06, 3.041000000036931e-06, 3.042000000119671e-06, 3.028000000071529e-06, 3.042000000119671e-06, 3.0419999998976266e-06, 3.042000000119671e-06, 3.0279999998494844e-06, 3.028000000071529e-06, 3.0419999998976266e-06, 3.028000000071529e-06, 3.041000000036931e-06, 3.069000000133215e-06, 3.042000000119671e-06, 2.986000000149147e-06, 3.0419999998976266e-06, 2.986000000149147e-06, 3.0560000001678134e-06, 3.042000000119671e-06, 3.042000000119671e-06, 3.042000000119671e-06, 3.0419999998976266e-06, 3.0269999999887887e-06]</msg>
<status status="PASS" starttime="20201029 18:18:15.767" endtime="20201029 18:18:15.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.763" endtime="20201029 18:18:15.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.394" endtime="20201029 18:18:15.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.394" endtime="20201029 18:18:15.770"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.778" endtime="20201029 18:18:15.790"></status>
</kw>
<msg timestamp="20201029 18:18:15.791" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:15.776" endtime="20201029 18:18:15.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.793" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:15.792" endtime="20201029 18:18:15.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.794" endtime="20201029 18:18:15.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.774" endtime="20201029 18:18:15.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.772" endtime="20201029 18:18:15.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.803" endtime="20201029 18:18:16.108"></status>
</kw>
<msg timestamp="20201029 18:18:16.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.863552236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.863555278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:15.801" endtime="20201029 18:18:16.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.863552236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.863555278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:16.113" endtime="20201029 18:18:16.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.123" endtime="20201029 18:18:16.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.799" endtime="20201029 18:18:16.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.797" endtime="20201029 18:18:16.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:16.130" level="INFO">${RESULT} = [{'diff': 3.0419999998976266e-06}, {'diff': 3.028000000071529e-06}, {'diff': 3.041000000036931e-06}, {'diff': 3.069000000133215e-06}, {'diff': 3.042000000119671e-06}, {'diff': 2.986000000149147e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:18:16.126" endtime="20201029 18:18:16.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:16.135" level="INFO">${OVERHEAD} = {'diff': [3.0419999998976266e-06, 3.028000000071529e-06, 3.041000000036931e-06, 3.069000000133215e-06, 3.042000000119671e-06, 2.986000000149147e-06, 3.0419999998976266e-06, 2.986000000149147e-06, 3.05...</msg>
<status status="PASS" starttime="20201029 18:18:16.130" endtime="20201029 18:18:16.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.139" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:16.138" endtime="20201029 18:18:16.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.142" level="INFO">VALUE: [3.0419999998976266e-06, 3.028000000071529e-06, 3.041000000036931e-06, 3.069000000133215e-06, 3.042000000119671e-06, 2.986000000149147e-06, 3.0419999998976266e-06, 2.986000000149147e-06, 3.0560000001678134e-06, 3.042000000119671e-06, 3.042000000119671e-06, 3.042000000119671e-06, 3.0419999998976266e-06, 3.0269999999887887e-06, 3.055999999723724e-06, 3.0139999998013423e-06, 2.9720000003230496e-06, 3.0410000002589754e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0139999998013423e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 2.9719999998789604e-06, 3.0410000002589754e-06, 3.0410000002589754e-06, 3.0419999998976266e-06, 3.0560000001678134e-06, 3.042000000341716e-06, 3.0419999998976266e-06, 3.0269999999887887e-06, 3.028000000071529e-06, 3.055999999723724e-06, 3.0419999998976266e-06, 3.055999999723724e-06, 3.0409999998148862e-06, 3.028000000071529e-06, 3.0410000002589754e-06, 3.0410000002589754e-06, 3.028000000071529e-06, 3.0560000001678134e-06, 3.0419999998976266e-06, 3.097000000007455e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 3.028000000071529e-06, 3.0419999998976266e-06, 3.055999999723724e-06, 3.055000000085073e-06, 3.0419999998976266e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.055999999723724e-06, 3.0419999998976266e-06, 2.9999999999752447e-06, 3.0410000002589754e-06, 3.0419999998976266e-06, 2.9999999999752447e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.0419999998976266e-06, 3.0419999998976266e-06]</msg>
<status status="PASS" starttime="20201029 18:18:16.140" endtime="20201029 18:18:16.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.136" endtime="20201029 18:18:16.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.771" endtime="20201029 18:18:16.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.770" endtime="20201029 18:18:16.143"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.151" endtime="20201029 18:18:16.163"></status>
</kw>
<msg timestamp="20201029 18:18:16.163" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.149" endtime="20201029 18:18:16.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.166" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.164" endtime="20201029 18:18:16.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.167" endtime="20201029 18:18:16.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.147" endtime="20201029 18:18:16.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.145" endtime="20201029 18:18:16.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.177" endtime="20201029 18:18:16.484"></status>
</kw>
<msg timestamp="20201029 18:18:16.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.228534556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.228537611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:16.175" endtime="20201029 18:18:16.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.228534556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.228537611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:16.489" endtime="20201029 18:18:16.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.499" endtime="20201029 18:18:16.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.172" endtime="20201029 18:18:16.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.170" endtime="20201029 18:18:16.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:16.506" level="INFO">${RESULT} = [{'diff': 3.055000000085073e-06}, {'diff': 3.0419999998976266e-06}, {'diff': 3.0410000002589754e-06}, {'diff': 3.042000000341716e-06}, {'diff': 3.055999999723724e-06}, {'diff': 3.0419999998976266e-06}...</msg>
<status status="PASS" starttime="20201029 18:18:16.502" endtime="20201029 18:18:16.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:16.510" level="INFO">${OVERHEAD} = {'diff': [3.055000000085073e-06, 3.0419999998976266e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.055999999723724e-06, 3.0419999998976266e-06, 2.9999999999752447e-06, 3.0410000002589754e-06, 3...</msg>
<status status="PASS" starttime="20201029 18:18:16.507" endtime="20201029 18:18:16.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.515" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:16.513" endtime="20201029 18:18:16.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.517" level="INFO">VALUE: [3.055000000085073e-06, 3.0419999998976266e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.055999999723724e-06, 3.0419999998976266e-06, 2.9999999999752447e-06, 3.0410000002589754e-06, 3.0419999998976266e-06, 2.9999999999752447e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.055000000085073e-06, 3.0839999998200085e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.0549999996409838e-06, 3.0419999998976266e-06, 3.042000000341716e-06, 3.0689999999111706e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.055000000085073e-06, 2.9999999999752447e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.02799999962744e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 3.028000000071529e-06, 3.0269999999887887e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0409999998148862e-06, 3.0269999999887887e-06, 3.0419999998976266e-06, 3.097000000007455e-06, 3.0410000002589754e-06, 3.0409999998148862e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.0419999998976266e-06, 3.1110000002776417e-06, 3.055999999723724e-06, 3.0409999998148862e-06, 3.055000000085073e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.055000000085073e-06, 3.055999999723724e-06, 3.028000000071529e-06, 3.02799999962744e-06, 3.0419999998976266e-06, 3.055000000085073e-06, 3.0560000001678134e-06, 3.028000000071529e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0410000002589754e-06, 3.0560000001678134e-06, 3.055999999723724e-06, 3.1250000001037392e-06]</msg>
<status status="PASS" starttime="20201029 18:18:16.516" endtime="20201029 18:18:16.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.511" endtime="20201029 18:18:16.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.144" endtime="20201029 18:18:16.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.144" endtime="20201029 18:18:16.519"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.527" endtime="20201029 18:18:16.540"></status>
</kw>
<msg timestamp="20201029 18:18:16.540" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.526" endtime="20201029 18:18:16.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.543" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.541" endtime="20201029 18:18:16.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.544" endtime="20201029 18:18:16.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.523" endtime="20201029 18:18:16.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.521" endtime="20201029 18:18:16.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.553" endtime="20201029 18:18:16.872"></status>
</kw>
<msg timestamp="20201029 18:18:16.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.590891153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.590894208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:16.551" endtime="20201029 18:18:16.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.590891153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.590894208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:16.877" endtime="20201029 18:18:16.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.887" endtime="20201029 18:18:16.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.548" endtime="20201029 18:18:16.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.547" endtime="20201029 18:18:16.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:16.894" level="INFO">${RESULT} = [{'diff': 3.055000000085073e-06}, {'diff': 3.055999999723724e-06}, {'diff': 3.028000000071529e-06}, {'diff': 3.02799999962744e-06}, {'diff': 3.0419999998976266e-06}, {'diff': 3.055000000085073e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:18:16.890" endtime="20201029 18:18:16.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:16.899" level="INFO">${OVERHEAD} = {'diff': [3.055000000085073e-06, 3.055999999723724e-06, 3.028000000071529e-06, 3.02799999962744e-06, 3.0419999998976266e-06, 3.055000000085073e-06, 3.0560000001678134e-06, 3.028000000071529e-06, 3.041...</msg>
<status status="PASS" starttime="20201029 18:18:16.895" endtime="20201029 18:18:16.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.903" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:16.902" endtime="20201029 18:18:16.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.906" level="INFO">VALUE: [3.055000000085073e-06, 3.055999999723724e-06, 3.028000000071529e-06, 3.02799999962744e-06, 3.0419999998976266e-06, 3.055000000085073e-06, 3.0560000001678134e-06, 3.028000000071529e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0410000002589754e-06, 3.0560000001678134e-06, 3.055999999723724e-06, 3.1250000001037392e-06, 3.0140000002454315e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0560000001678134e-06, 3.0690000003552598e-06, 3.0689999999111706e-06, 3.055999999723724e-06, 3.02799999962744e-06, 3.0560000001678134e-06, 3.0419999998976266e-06, 3.0560000001678134e-06, 3.0269999999887887e-06, 3.0419999998976266e-06, 2.9999999999752447e-06, 3.0560000001678134e-06, 3.0560000001678134e-06, 3.0419999998976266e-06, 3.0689999999111706e-06, 3.0419999998976266e-06, 3.1250000001037392e-06, 3.0419999998976266e-06, 2.9999999999752447e-06, 3.0560000001678134e-06, 3.0409999998148862e-06, 3.042000000341716e-06, 3.0419999998976266e-06, 3.0410000002589754e-06, 3.028000000071529e-06, 3.0409999998148862e-06, 3.013000000162691e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0410000002589754e-06, 2.985999999705058e-06, 3.0410000002589754e-06, 3.0409999998148862e-06, 3.042000000341716e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 2.9999999999752447e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.042000000341716e-06, 3.0419999998976266e-06, 3.0269999999887887e-06, 3.0560000001678134e-06, 2.9580000000528628e-06, 3.097000000007455e-06]</msg>
<status status="PASS" starttime="20201029 18:18:16.904" endtime="20201029 18:18:16.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.900" endtime="20201029 18:18:16.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.519" endtime="20201029 18:18:16.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.519" endtime="20201029 18:18:16.907"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.915" endtime="20201029 18:18:16.926"></status>
</kw>
<msg timestamp="20201029 18:18:16.927" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.914" endtime="20201029 18:18:16.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.930" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.928" endtime="20201029 18:18:16.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.931" endtime="20201029 18:18:16.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.911" endtime="20201029 18:18:16.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.909" endtime="20201029 18:18:16.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.943" endtime="20201029 18:18:17.257"></status>
</kw>
<msg timestamp="20201029 18:18:17.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.957047431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.957050472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:16.941" endtime="20201029 18:18:17.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.957047431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.957050472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:17.262" endtime="20201029 18:18:17.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.272" endtime="20201029 18:18:17.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.938" endtime="20201029 18:18:17.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.935" endtime="20201029 18:18:17.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:17.280" level="INFO">${RESULT} = [{'diff': 3.0410000002589754e-06}, {'diff': 3.0409999998148862e-06}, {'diff': 3.042000000341716e-06}, {'diff': 3.0409999998148862e-06}, {'diff': 3.0419999998976266e-06}, {'diff': 2.9999999999752447e-0...</msg>
<status status="PASS" starttime="20201029 18:18:17.276" endtime="20201029 18:18:17.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:17.284" level="INFO">${OVERHEAD} = {'diff': [3.0410000002589754e-06, 3.0409999998148862e-06, 3.042000000341716e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 2.9999999999752447e-06, 3.0419999998976266e-06, 3.0409999998148862e-06,...</msg>
<status status="PASS" starttime="20201029 18:18:17.281" endtime="20201029 18:18:17.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.288" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:17.287" endtime="20201029 18:18:17.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.291" level="INFO">VALUE: [3.0410000002589754e-06, 3.0409999998148862e-06, 3.042000000341716e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 2.9999999999752447e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.042000000341716e-06, 3.0419999998976266e-06, 3.0269999999887887e-06, 3.0560000001678134e-06, 2.9580000000528628e-06, 3.097000000007455e-06, 3.0140000002454315e-06, 3.097000000007455e-06, 3.0419999998976266e-06, 3.028000000071529e-06, 3.0419999998976266e-06, 3.0689999999111706e-06, 3.055000000085073e-06, 3.0409999998148862e-06, 3.097000000007455e-06, 3.0689999999111706e-06, 3.0560000001678134e-06, 3.0419999998976266e-06, 3.028000000071529e-06, 3.0409999998148862e-06, 3.055000000085073e-06, 3.028000000071529e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0410000002589754e-06, 3.0409999998148862e-06, 3.028000000071529e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 3.0560000001678134e-06, 3.097000000007455e-06, 3.0419999998976266e-06, 3.02799999962744e-06, 3.013000000162691e-06, 3.055000000085073e-06, 3.069999999993911e-06, 3.055000000085073e-06, 3.0419999998976266e-06, 3.055000000085073e-06, 3.0830000001813573e-06, 3.0419999998976266e-06, 3.0139999998013423e-06, 3.028000000071529e-06, 2.9580000000528628e-06, 3.055000000085073e-06, 3.0689999999111706e-06, 3.0409999998148862e-06, 2.9999999999752447e-06, 3.028000000071529e-06, 3.0269999999887887e-06, 3.042000000341716e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0410000002589754e-06, 3.0419999998976266e-06, 3.097000000007455e-06]</msg>
<status status="PASS" starttime="20201029 18:18:17.289" endtime="20201029 18:18:17.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.285" endtime="20201029 18:18:17.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.908" endtime="20201029 18:18:17.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.908" endtime="20201029 18:18:17.293"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.300" endtime="20201029 18:18:17.313"></status>
</kw>
<msg timestamp="20201029 18:18:17.313" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.299" endtime="20201029 18:18:17.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.316" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.314" endtime="20201029 18:18:17.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.317" endtime="20201029 18:18:17.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.296" endtime="20201029 18:18:17.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.295" endtime="20201029 18:18:17.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.326" endtime="20201029 18:18:17.642"></status>
</kw>
<msg timestamp="20201029 18:18:17.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.334942403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.334945431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:17.325" endtime="20201029 18:18:17.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.334942403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.334945431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:17.647" endtime="20201029 18:18:17.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.656" endtime="20201029 18:18:17.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.322" endtime="20201029 18:18:17.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.320" endtime="20201029 18:18:17.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:17.663" level="INFO">${RESULT} = [{'diff': 3.028000000071529e-06}, {'diff': 2.9580000000528628e-06}, {'diff': 3.055000000085073e-06}, {'diff': 3.0689999999111706e-06}, {'diff': 3.0409999998148862e-06}, {'diff': 2.9999999999752447e-06...</msg>
<status status="PASS" starttime="20201029 18:18:17.660" endtime="20201029 18:18:17.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:17.668" level="INFO">${OVERHEAD} = {'diff': [3.028000000071529e-06, 2.9580000000528628e-06, 3.055000000085073e-06, 3.0689999999111706e-06, 3.0409999998148862e-06, 2.9999999999752447e-06, 3.028000000071529e-06, 3.0269999999887887e-06, 3...</msg>
<status status="PASS" starttime="20201029 18:18:17.664" endtime="20201029 18:18:17.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.673" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:17.671" endtime="20201029 18:18:17.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.675" level="INFO">VALUE: [3.028000000071529e-06, 2.9580000000528628e-06, 3.055000000085073e-06, 3.0689999999111706e-06, 3.0409999998148862e-06, 2.9999999999752447e-06, 3.028000000071529e-06, 3.0269999999887887e-06, 3.042000000341716e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0410000002589754e-06, 3.0419999998976266e-06, 3.097000000007455e-06, 3.0409999998148862e-06, 3.0410000002589754e-06, 3.0419999998976266e-06, 3.042000000341716e-06, 3.055000000085073e-06, 3.0419999998976266e-06, 2.9999999999752447e-06, 3.013000000162691e-06, 3.0419999998976266e-06, 3.097000000007455e-06, 3.0410000002589754e-06, 3.0980000000901953e-06, 3.0409999998148862e-06, 3.0560000001678134e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.02799999962744e-06, 2.9999999999752447e-06, 3.0419999998976266e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.1110000002776417e-06, 3.097000000007455e-06, 3.0269999999887887e-06, 3.042000000341716e-06, 3.0419999998976266e-06, 3.0410000002589754e-06, 3.0409999998148862e-06, 3.055999999723724e-06, 3.0419999998976266e-06, 3.012999999718602e-06, 3.0410000002589754e-06, 3.0269999999887887e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0560000001678134e-06, 3.0409999998148862e-06, 3.028000000071529e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.0419999998976266e-06, 3.0410000002589754e-06, 3.0410000002589754e-06, 3.1109999998335525e-06, 2.9999999999752447e-06, 3.0560000001678134e-06, 3.02799999962744e-06, 3.0560000001678134e-06, 3.0409999998148862e-06]</msg>
<status status="PASS" starttime="20201029 18:18:17.674" endtime="20201029 18:18:17.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.669" endtime="20201029 18:18:17.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.293" endtime="20201029 18:18:17.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.293" endtime="20201029 18:18:17.677"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.684" endtime="20201029 18:18:17.696"></status>
</kw>
<msg timestamp="20201029 18:18:17.696" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.683" endtime="20201029 18:18:17.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.698" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.697" endtime="20201029 18:18:17.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.700" endtime="20201029 18:18:17.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.680" endtime="20201029 18:18:17.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.678" endtime="20201029 18:18:17.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.709" endtime="20201029 18:18:18.028"></status>
</kw>
<msg timestamp="20201029 18:18:18.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.710968972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.710972028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:17.707" endtime="20201029 18:18:18.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.710968972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.710972028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:18.033" endtime="20201029 18:18:18.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.042" endtime="20201029 18:18:18.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.705" endtime="20201029 18:18:18.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.703" endtime="20201029 18:18:18.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:18.049" level="INFO">${RESULT} = [{'diff': 3.0560000001678134e-06}, {'diff': 3.0409999998148862e-06}, {'diff': 3.028000000071529e-06}, {'diff': 3.0410000002589754e-06}, {'diff': 3.042000000341716e-06}, {'diff': 3.0419999998976266e-06...</msg>
<status status="PASS" starttime="20201029 18:18:18.045" endtime="20201029 18:18:18.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:18.056" level="INFO">${OVERHEAD} = {'diff': [3.0560000001678134e-06, 3.0409999998148862e-06, 3.028000000071529e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.0419999998976266e-06, 3.0410000002589754e-06, 3.0410000002589754e-06, ...</msg>
<status status="PASS" starttime="20201029 18:18:18.050" endtime="20201029 18:18:18.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.060" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:18.059" endtime="20201029 18:18:18.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.063" level="INFO">VALUE: [3.0560000001678134e-06, 3.0409999998148862e-06, 3.028000000071529e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.0419999998976266e-06, 3.0410000002589754e-06, 3.0410000002589754e-06, 3.1109999998335525e-06, 2.9999999999752447e-06, 3.0560000001678134e-06, 3.02799999962744e-06, 3.0560000001678134e-06, 3.0409999998148862e-06, 3.028000000071529e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.0560000006119026e-06, 3.097000000451544e-06, 3.0269999999887887e-06, 3.012999999718602e-06, 3.042000000341716e-06, 3.0269999999887887e-06, 3.028000000071529e-06, 3.069999999993911e-06, 3.0410000002589754e-06, 3.0419999994535374e-06, 3.097000000451544e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.000000000419334e-06, 3.0419999994535374e-06, 3.055999999723724e-06, 3.028000000071529e-06, 3.0549999996409838e-06, 3.042000000341716e-06, 3.040999999370797e-06, 3.055999999723724e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.0549999996409838e-06, 3.097000000451544e-06, 3.042000000341716e-06, 3.082999999293179e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.000000000419334e-06, 3.000000000419334e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.055999999723724e-06, 3.0410000002589754e-06, 3.028000000071529e-06, 3.055000000529162e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.055000000529162e-06]</msg>
<status status="PASS" starttime="20201029 18:18:18.061" endtime="20201029 18:18:18.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.057" endtime="20201029 18:18:18.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.677" endtime="20201029 18:18:18.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.677" endtime="20201029 18:18:18.065"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.072" endtime="20201029 18:18:18.084"></status>
</kw>
<msg timestamp="20201029 18:18:18.085" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.071" endtime="20201029 18:18:18.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.087" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.086" endtime="20201029 18:18:18.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.089" endtime="20201029 18:18:18.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.068" endtime="20201029 18:18:18.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.067" endtime="20201029 18:18:18.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.098" endtime="20201029 18:18:18.405"></status>
</kw>
<msg timestamp="20201029 18:18:18.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.083217681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.083220722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:18.096" endtime="20201029 18:18:18.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.083217681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.083220722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:18.410" endtime="20201029 18:18:18.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.420" endtime="20201029 18:18:18.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.094" endtime="20201029 18:18:18.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.092" endtime="20201029 18:18:18.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:18.426" level="INFO">${RESULT} = [{'diff': 3.0410000002589754e-06}, {'diff': 3.042000000341716e-06}, {'diff': 3.042000000341716e-06}, {'diff': 3.000000000419334e-06}, {'diff': 3.000000000419334e-06}, {'diff': 3.0410000002589754e-06},...</msg>
<status status="PASS" starttime="20201029 18:18:18.423" endtime="20201029 18:18:18.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:18.431" level="INFO">${OVERHEAD} = {'diff': [3.0410000002589754e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.000000000419334e-06, 3.000000000419334e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.055999999723724e-06, 3.04...</msg>
<status status="PASS" starttime="20201029 18:18:18.427" endtime="20201029 18:18:18.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.435" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:18.434" endtime="20201029 18:18:18.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.438" level="INFO">VALUE: [3.0410000002589754e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.000000000419334e-06, 3.000000000419334e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.055999999723724e-06, 3.0410000002589754e-06, 3.028000000071529e-06, 3.055000000529162e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.055000000529162e-06, 3.042000000341716e-06, 3.055999999723724e-06, 3.028000000071529e-06, 2.986000000149147e-06, 3.0410000002589754e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.0969999995633657e-06, 2.9999999995311555e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.0269999999887887e-06, 3.0419999994535374e-06, 2.9999999995311555e-06, 3.0410000002589754e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.0139999998013423e-06, 3.028000000071529e-06, 3.042000000341716e-06, 2.9729999999617007e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.097000000451544e-06, 2.9719999998789604e-06, 3.040999999370797e-06, 3.028000000071529e-06, 3.040999999370797e-06, 3.0419999994535374e-06, 3.0139999998013423e-06, 3.000000000419334e-06, 3.069999999993911e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.0419999994535374e-06, 3.028000000071529e-06, 3.0140000006895207e-06, 3.0689999999111706e-06, 3.042000000341716e-06, 3.055999999723724e-06, 3.0269999999887887e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.0410000002589754e-06]</msg>
<status status="PASS" starttime="20201029 18:18:18.436" endtime="20201029 18:18:18.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.432" endtime="20201029 18:18:18.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.065" endtime="20201029 18:18:18.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.065" endtime="20201029 18:18:18.439"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.448" endtime="20201029 18:18:18.459"></status>
</kw>
<msg timestamp="20201029 18:18:18.460" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.446" endtime="20201029 18:18:18.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.466" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.461" endtime="20201029 18:18:18.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.467" endtime="20201029 18:18:18.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.443" endtime="20201029 18:18:18.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.441" endtime="20201029 18:18:18.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.476" endtime="20201029 18:18:18.794"></status>
</kw>
<msg timestamp="20201029 18:18:18.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.460396222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.460399264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:18.475" endtime="20201029 18:18:18.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.460396222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.460399264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:18.798" endtime="20201029 18:18:18.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.808" endtime="20201029 18:18:18.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.472" endtime="20201029 18:18:18.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.470" endtime="20201029 18:18:18.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:18.815" level="INFO">${RESULT} = [{'diff': 3.042000000341716e-06}, {'diff': 3.028000000071529e-06}, {'diff': 3.0419999994535374e-06}, {'diff': 3.028000000071529e-06}, {'diff': 3.0140000006895207e-06}, {'diff': 3.0689999999111706e-06}...</msg>
<status status="PASS" starttime="20201029 18:18:18.812" endtime="20201029 18:18:18.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:18.820" level="INFO">${OVERHEAD} = {'diff': [3.042000000341716e-06, 3.028000000071529e-06, 3.0419999994535374e-06, 3.028000000071529e-06, 3.0140000006895207e-06, 3.0689999999111706e-06, 3.042000000341716e-06, 3.055999999723724e-06, 3.0...</msg>
<status status="PASS" starttime="20201029 18:18:18.816" endtime="20201029 18:18:18.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.825" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:18.824" endtime="20201029 18:18:18.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.827" level="INFO">VALUE: [3.042000000341716e-06, 3.028000000071529e-06, 3.0419999994535374e-06, 3.028000000071529e-06, 3.0140000006895207e-06, 3.0689999999111706e-06, 3.042000000341716e-06, 3.055999999723724e-06, 3.0269999999887887e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 2.9999999995311555e-06, 3.042000000341716e-06, 3.0139999998013423e-06, 3.028000000071529e-06, 3.055000000529162e-06, 3.0410000002589754e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0269999999887887e-06, 3.042000000341716e-06, 3.055999999723724e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.069999999993911e-06, 3.0139999998013423e-06, 3.0279999991833506e-06, 3.040999999370797e-06, 3.042000000341716e-06, 3.055000000529162e-06, 3.028000000071529e-06, 3.055999999723724e-06, 3.042000000341716e-06, 3.0549999996409838e-06, 3.000000000419334e-06, 2.9999999995311555e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.0419999994535374e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.0419999994535374e-06, 3.028000000071529e-06, 3.042000000341716e-06, 2.9999999995311555e-06, 3.040999999370797e-06, 3.055999999723724e-06, 3.0269999999887887e-06, 3.069999999993911e-06, 3.0410000002589754e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.0139999998013423e-06, 3.042000000341716e-06, 3.0269999999887887e-06]</msg>
<status status="PASS" starttime="20201029 18:18:18.826" endtime="20201029 18:18:18.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.821" endtime="20201029 18:18:18.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.440" endtime="20201029 18:18:18.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.439" endtime="20201029 18:18:18.829"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.836" endtime="20201029 18:18:18.849"></status>
</kw>
<msg timestamp="20201029 18:18:18.849" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.835" endtime="20201029 18:18:18.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.852" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.851" endtime="20201029 18:18:18.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.853" endtime="20201029 18:18:18.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.832" endtime="20201029 18:18:18.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.831" endtime="20201029 18:18:18.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.862" endtime="20201029 18:18:19.174"></status>
</kw>
<msg timestamp="20201029 18:18:19.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.82492875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.824931792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:18.861" endtime="20201029 18:18:19.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.82492875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.824931792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:19.179" endtime="20201029 18:18:19.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.188" endtime="20201029 18:18:19.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.858" endtime="20201029 18:18:19.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.856" endtime="20201029 18:18:19.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:19.195" level="INFO">${RESULT} = [{'diff': 3.042000000341716e-06}, {'diff': 2.9999999995311555e-06}, {'diff': 3.040999999370797e-06}, {'diff': 3.055999999723724e-06}, {'diff': 3.0269999999887887e-06}, {'diff': 3.069999999993911e-06},...</msg>
<status status="PASS" starttime="20201029 18:18:19.192" endtime="20201029 18:18:19.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:19.201" level="INFO">${OVERHEAD} = {'diff': [3.042000000341716e-06, 2.9999999995311555e-06, 3.040999999370797e-06, 3.055999999723724e-06, 3.0269999999887887e-06, 3.069999999993911e-06, 3.0410000002589754e-06, 3.0419999994535374e-06, 3....</msg>
<status status="PASS" starttime="20201029 18:18:19.196" endtime="20201029 18:18:19.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.205" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:19.204" endtime="20201029 18:18:19.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.207" level="INFO">VALUE: [3.042000000341716e-06, 2.9999999995311555e-06, 3.040999999370797e-06, 3.055999999723724e-06, 3.0269999999887887e-06, 3.069999999993911e-06, 3.0410000002589754e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.0139999998013423e-06, 3.042000000341716e-06, 3.0269999999887887e-06, 3.040999999370797e-06, 3.0560000006119026e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.0410000002589754e-06, 3.028000000071529e-06, 3.0279999991833506e-06, 3.111999999916293e-06, 3.042000000341716e-06, 3.0140000006895207e-06, 3.042000000341716e-06, 3.055999999723724e-06, 3.042000000341716e-06, 3.0549999996409838e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.0269999999887887e-06, 3.069000000799349e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.0419999994535374e-06, 3.028000000071529e-06, 3.0410000002589754e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.069999999993911e-06, 3.0140000006895207e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.0410000002589754e-06, 3.055999999723724e-06, 3.028000000071529e-06, 3.0410000002589754e-06, 3.0560000006119026e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0969999995633657e-06, 3.0549999996409838e-06, 3.0969999995633657e-06, 3.0140000006895207e-06, 3.0410000002589754e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.0410000002589754e-06, 3.0689999999111706e-06, 3.0419999994535374e-06, 3.0139999998013423e-06, 3.055000000529162e-06]</msg>
<status status="PASS" starttime="20201029 18:18:19.206" endtime="20201029 18:18:19.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.202" endtime="20201029 18:18:19.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.829" endtime="20201029 18:18:19.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.829" endtime="20201029 18:18:19.209"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.217" endtime="20201029 18:18:19.229"></status>
</kw>
<msg timestamp="20201029 18:18:19.230" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:19.215" endtime="20201029 18:18:19.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.232" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:19.231" endtime="20201029 18:18:19.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.233" endtime="20201029 18:18:19.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.213" endtime="20201029 18:18:19.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.211" endtime="20201029 18:18:19.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.243" endtime="20201029 18:18:19.559"></status>
</kw>
<msg timestamp="20201029 18:18:19.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.204454347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.204457444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:19.241" endtime="20201029 18:18:19.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.204454347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.204457444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:19.564" endtime="20201029 18:18:19.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.573" endtime="20201029 18:18:19.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.238" endtime="20201029 18:18:19.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.237" endtime="20201029 18:18:19.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:19.580" level="INFO">${RESULT} = [{'diff': 3.0969999995633657e-06}, {'diff': 3.0549999996409838e-06}, {'diff': 3.0969999995633657e-06}, {'diff': 3.0140000006895207e-06}, {'diff': 3.0410000002589754e-06}, {'diff': 3.0419999994535374e-...</msg>
<status status="PASS" starttime="20201029 18:18:19.576" endtime="20201029 18:18:19.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:19.585" level="INFO">${OVERHEAD} = {'diff': [3.0969999995633657e-06, 3.0549999996409838e-06, 3.0969999995633657e-06, 3.0140000006895207e-06, 3.0410000002589754e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.0419999994535374e-06,...</msg>
<status status="PASS" starttime="20201029 18:18:19.581" endtime="20201029 18:18:19.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.589" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:19.588" endtime="20201029 18:18:19.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.591" level="INFO">VALUE: [3.0969999995633657e-06, 3.0549999996409838e-06, 3.0969999995633657e-06, 3.0140000006895207e-06, 3.0410000002589754e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.0410000002589754e-06, 3.0689999999111706e-06, 3.0419999994535374e-06, 3.0139999998013423e-06, 3.055000000529162e-06, 3.0419999994535374e-06, 3.0139999998013423e-06, 3.0139999998013423e-06, 3.0410000002589754e-06, 3.0139999998013423e-06, 3.042000000341716e-06, 3.055000000529162e-06, 3.000000000419334e-06, 3.042000000341716e-06, 3.0549999996409838e-06, 3.0419999994535374e-06, 3.111000000721731e-06, 3.0279999991833506e-06, 3.0419999994535374e-06, 3.0269999999887887e-06, 3.0269999999887887e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.055000000529162e-06, 3.0410000002589754e-06, 3.0840000002640977e-06, 3.0549999996409838e-06, 3.0560000006119026e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.000000000419334e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.0839999993759193e-06, 2.9999999995311555e-06, 3.0840000002640977e-06, 3.040999999370797e-06, 3.042000000341716e-06, 3.055999999723724e-06, 3.0549999996409838e-06, 3.0139999998013423e-06, 3.0419999994535374e-06, 3.055000000529162e-06, 3.042000000341716e-06, 3.040999999370797e-06, 3.0410000002589754e-06, 3.055999999723724e-06, 3.0139999998013423e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.055000000529162e-06, 3.040999999370797e-06]</msg>
<status status="PASS" starttime="20201029 18:18:19.590" endtime="20201029 18:18:19.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.585" endtime="20201029 18:18:19.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.210" endtime="20201029 18:18:19.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.209" endtime="20201029 18:18:19.593"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.602" endtime="20201029 18:18:19.614"></status>
</kw>
<msg timestamp="20201029 18:18:19.614" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:19.600" endtime="20201029 18:18:19.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.617" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:19.615" endtime="20201029 18:18:19.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.618" endtime="20201029 18:18:19.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.597" endtime="20201029 18:18:19.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.595" endtime="20201029 18:18:19.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.627" endtime="20201029 18:18:19.948"></status>
</kw>
<msg timestamp="20201029 18:18:19.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.574592208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.574595222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:19.625" endtime="20201029 18:18:19.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.574592208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.574595222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:19.953" endtime="20201029 18:18:19.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.963" endtime="20201029 18:18:19.964"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.623" endtime="20201029 18:18:19.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.621" endtime="20201029 18:18:19.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:19.969" level="INFO">${RESULT} = [{'diff': 3.0139999998013423e-06}, {'diff': 3.0419999994535374e-06}, {'diff': 3.055000000529162e-06}, {'diff': 3.042000000341716e-06}, {'diff': 3.040999999370797e-06}, {'diff': 3.0410000002589754e-06}...</msg>
<status status="PASS" starttime="20201029 18:18:19.966" endtime="20201029 18:18:19.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:19.975" level="INFO">${OVERHEAD} = {'diff': [3.0139999998013423e-06, 3.0419999994535374e-06, 3.055000000529162e-06, 3.042000000341716e-06, 3.040999999370797e-06, 3.0410000002589754e-06, 3.055999999723724e-06, 3.0139999998013423e-06, 3....</msg>
<status status="PASS" starttime="20201029 18:18:19.970" endtime="20201029 18:18:19.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.979" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:19.978" endtime="20201029 18:18:19.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.981" level="INFO">VALUE: [3.0139999998013423e-06, 3.0419999994535374e-06, 3.055000000529162e-06, 3.042000000341716e-06, 3.040999999370797e-06, 3.0410000002589754e-06, 3.055999999723724e-06, 3.0139999998013423e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.055000000529162e-06, 3.040999999370797e-06, 3.055999999723724e-06, 3.042000000341716e-06, 3.0689999999111706e-06, 3.042000000341716e-06, 2.986000000149147e-06, 2.9440000002267652e-06, 3.055000000529162e-06, 3.055999999723724e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.055999999723724e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.000000000419334e-06, 3.0410000002589754e-06, 3.0549999996409838e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.0140000006895207e-06, 3.0689999999111706e-06, 3.0560000006119026e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0549999996409838e-06, 3.0830000001813573e-06, 3.028000000071529e-06, 3.055999999723724e-06, 3.0139999998013423e-06, 3.0410000002589754e-06, 3.028000000071529e-06, 3.0279999991833506e-06, 3.055999999723724e-06, 3.0269999999887887e-06, 3.069999999993911e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.028000000071529e-06, 3.0279999991833506e-06, 3.0139999998013423e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.0969999995633657e-06, 3.0410000002589754e-06, 3.040999999370797e-06]</msg>
<status status="PASS" starttime="20201029 18:18:19.980" endtime="20201029 18:18:19.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.976" endtime="20201029 18:18:19.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.594" endtime="20201029 18:18:19.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.593" endtime="20201029 18:18:19.983"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.991" endtime="20201029 18:18:20.003"></status>
</kw>
<msg timestamp="20201029 18:18:20.003" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:19.989" endtime="20201029 18:18:20.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.006" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.004" endtime="20201029 18:18:20.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.007" endtime="20201029 18:18:20.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.986" endtime="20201029 18:18:20.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.985" endtime="20201029 18:18:20.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.016" endtime="20201029 18:18:20.324"></status>
</kw>
<msg timestamp="20201029 18:18:20.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.9500545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.950057542, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:20.014" endtime="20201029 18:18:20.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.9500545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.950057542, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:20.329" endtime="20201029 18:18:20.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.338" endtime="20201029 18:18:20.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.012" endtime="20201029 18:18:20.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.010" endtime="20201029 18:18:20.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:20.346" level="INFO">${RESULT} = [{'diff': 3.0419999994535374e-06}, {'diff': 3.042000000341716e-06}, {'diff': 3.0419999994535374e-06}, {'diff': 3.0419999994535374e-06}, {'diff': 3.0410000002589754e-06}, {'diff': 3.028000000071529e-06...</msg>
<status status="PASS" starttime="20201029 18:18:20.342" endtime="20201029 18:18:20.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:20.351" level="INFO">${OVERHEAD} = {'diff': [3.0419999994535374e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.028000000071529e-06, 3.0279999991833506e-06, 3.0139999998013423e-06, ...</msg>
<status status="PASS" starttime="20201029 18:18:20.347" endtime="20201029 18:18:20.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.355" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:20.354" endtime="20201029 18:18:20.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.358" level="INFO">VALUE: [3.0419999994535374e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.028000000071529e-06, 3.0279999991833506e-06, 3.0139999998013423e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.0969999995633657e-06, 3.0410000002589754e-06, 3.040999999370797e-06, 3.069999999993911e-06, 3.0410000002589754e-06, 3.055000000529162e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.0560000006119026e-06, 2.9859999992609687e-06, 3.069999999993911e-06, 3.0419999994535374e-06, 3.028000000071529e-06, 2.986000000149147e-06, 3.028000000071529e-06, 3.040999999370797e-06, 3.0410000002589754e-06, 3.0140000006895207e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.0419999994535374e-06, 3.028000000071529e-06, 3.055000000529162e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.0139999998013423e-06, 3.028000000071529e-06, 3.055999999723724e-06, 3.0560000006119026e-06, 3.0419999994535374e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.0269999999887887e-06, 3.042000000341716e-06, 2.986000000149147e-06, 3.097000000451544e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.0549999996409838e-06, 3.040999999370797e-06, 3.055999999723724e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.0419999994535374e-06, 3.0139999998013423e-06, 3.028000000071529e-06, 3.0269999999887887e-06, 3.0560000006119026e-06, 3.0419999994535374e-06, 3.097000000451544e-06, 3.0419999994535374e-06]</msg>
<status status="PASS" starttime="20201029 18:18:20.356" endtime="20201029 18:18:20.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.352" endtime="20201029 18:18:20.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.984" endtime="20201029 18:18:20.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.983" endtime="20201029 18:18:20.359"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.367" endtime="20201029 18:18:20.380"></status>
</kw>
<msg timestamp="20201029 18:18:20.380" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.366" endtime="20201029 18:18:20.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.383" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.381" endtime="20201029 18:18:20.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.384" endtime="20201029 18:18:20.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.363" endtime="20201029 18:18:20.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.361" endtime="20201029 18:18:20.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.394" endtime="20201029 18:18:20.711"></status>
</kw>
<msg timestamp="20201029 18:18:20.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.330196028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.330199069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:20.392" endtime="20201029 18:18:20.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.330196028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.330199069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:20.715" endtime="20201029 18:18:20.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.725" endtime="20201029 18:18:20.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.389" endtime="20201029 18:18:20.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.387" endtime="20201029 18:18:20.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:20.732" level="INFO">${RESULT} = [{'diff': 3.0410000002589754e-06}, {'diff': 3.0549999996409838e-06}, {'diff': 3.040999999370797e-06}, {'diff': 3.055999999723724e-06}, {'diff': 3.042000000341716e-06}, {'diff': 3.028000000071529e-06},...</msg>
<status status="PASS" starttime="20201029 18:18:20.729" endtime="20201029 18:18:20.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:20.737" level="INFO">${OVERHEAD} = {'diff': [3.0410000002589754e-06, 3.0549999996409838e-06, 3.040999999370797e-06, 3.055999999723724e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.0419999994535374e-06, 3.0139999998013423e-06, 3....</msg>
<status status="PASS" starttime="20201029 18:18:20.733" endtime="20201029 18:18:20.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.742" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:20.740" endtime="20201029 18:18:20.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.744" level="INFO">VALUE: [3.0410000002589754e-06, 3.0549999996409838e-06, 3.040999999370797e-06, 3.055999999723724e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.0419999994535374e-06, 3.0139999998013423e-06, 3.028000000071529e-06, 3.0269999999887887e-06, 3.0560000006119026e-06, 3.0419999994535374e-06, 3.097000000451544e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.0560000006119026e-06, 3.0269999999887887e-06, 3.0130000006067803e-06, 3.0549999996409838e-06, 3.0830000001813573e-06, 3.055000000529162e-06, 3.0419999994535374e-06, 3.0279999991833506e-06, 3.0410000002589754e-06, 3.0410000002589754e-06, 3.0549999996409838e-06, 3.0419999994535374e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.055999999723724e-06, 3.0560000006119026e-06, 3.055000000529162e-06, 3.0140000006895207e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.055999999723724e-06, 3.0419999994535374e-06, 3.0139999998013423e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.0269999999887887e-06, 3.042000000341716e-06, 2.9999999995311555e-06, 3.042000000341716e-06, 3.0269999999887887e-06, 3.042000000341716e-06, 2.986000000149147e-06, 3.0139999998013423e-06, 3.0549999996409838e-06, 3.0689999999111706e-06, 3.0560000006119026e-06, 3.0410000002589754e-06, 3.055999999723724e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.0140000006895207e-06, 3.0269999999887887e-06]</msg>
<status status="PASS" starttime="20201029 18:18:20.743" endtime="20201029 18:18:20.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.738" endtime="20201029 18:18:20.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.360" endtime="20201029 18:18:20.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.359" endtime="20201029 18:18:20.746"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.757" endtime="20201029 18:18:20.769"></status>
</kw>
<msg timestamp="20201029 18:18:20.769" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.756" endtime="20201029 18:18:20.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.773" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.771" endtime="20201029 18:18:20.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.774" endtime="20201029 18:18:20.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.753" endtime="20201029 18:18:20.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.750" endtime="20201029 18:18:20.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.786" endtime="20201029 18:18:21.094"></status>
</kw>
<msg timestamp="20201029 18:18:21.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.696595917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.696598903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:20.784" endtime="20201029 18:18:21.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.696595917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.696598903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:21.100" endtime="20201029 18:18:21.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.111" endtime="20201029 18:18:21.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.780" endtime="20201029 18:18:21.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.778" endtime="20201029 18:18:21.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:21.117" level="INFO">${RESULT} = [{'diff': 2.986000000149147e-06}, {'diff': 3.0139999998013423e-06}, {'diff': 3.0549999996409838e-06}, {'diff': 3.0689999999111706e-06}, {'diff': 3.0560000006119026e-06}, {'diff': 3.0410000002589754e-0...</msg>
<status status="PASS" starttime="20201029 18:18:21.114" endtime="20201029 18:18:21.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:21.123" level="INFO">${OVERHEAD} = {'diff': [2.986000000149147e-06, 3.0139999998013423e-06, 3.0549999996409838e-06, 3.0689999999111706e-06, 3.0560000006119026e-06, 3.0410000002589754e-06, 3.055999999723724e-06, 3.042000000341716e-06, 3...</msg>
<status status="PASS" starttime="20201029 18:18:21.118" endtime="20201029 18:18:21.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.127" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:18:21.126" endtime="20201029 18:18:21.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.130" level="INFO">VALUE: [2.986000000149147e-06, 3.0139999998013423e-06, 3.0549999996409838e-06, 3.0689999999111706e-06, 3.0560000006119026e-06, 3.0410000002589754e-06, 3.055999999723724e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.0140000006895207e-06, 3.0269999999887887e-06, 3.028000000071529e-06, 3.0410000002589754e-06, 3.0560000006119026e-06, 3.0410000002589754e-06, 3.0419999994535374e-06, 3.055999999723724e-06, 3.028000000071529e-06, 3.0410000002589754e-06, 3.000000000419334e-06, 3.0410000002589754e-06, 3.0139999998013423e-06, 3.055999999723724e-06, 3.0410000002589754e-06, 3.0560000006119026e-06, 3.028000000071529e-06, 3.040999999370797e-06, 2.986000000149147e-06, 3.0410000002589754e-06, 3.0410000002589754e-06, 3.055999999723724e-06, 3.0419999994535374e-06, 3.0560000006119026e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.040999999370797e-06, 3.055999999723724e-06, 3.0549999996409838e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.0549999996409838e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.0279999991833506e-06, 3.0139999998013423e-06, 3.0689999999111706e-06, 3.042000000341716e-06, 3.000000000419334e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0139999998013423e-06, 2.9999999995311555e-06, 3.0549999996409838e-06, 3.069999999993911e-06, 3.0410000002589754e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.0419999994535374e-06]</msg>
<status status="PASS" starttime="20201029 18:18:21.128" endtime="20201029 18:18:21.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.124" endtime="20201029 18:18:21.131"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.747" endtime="20201029 18:18:21.131"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.746" endtime="20201029 18:18:21.131"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.545" endtime="20201029 18:18:21.132"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:13.476" endtime="20201029 18:18:21.132" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:21.139" endtime="20201029 18:18:21.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.137" endtime="20201029 18:18:21.159"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.171" endtime="20201029 18:18:21.188"></status>
</kw>
<msg timestamp="20201029 18:18:21.189" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:21.170" endtime="20201029 18:18:21.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.191" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:21.190" endtime="20201029 18:18:21.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.194" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:21.192" endtime="20201029 18:18:21.195"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:21.167" endtime="20201029 18:18:21.195"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:21.165" endtime="20201029 18:18:21.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.164" endtime="20201029 18:18:21.196"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:21.200" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:21.199" endtime="20201029 18:18:21.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.197" endtime="20201029 18:18:21.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.163" endtime="20201029 18:18:21.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.162" endtime="20201029 18:18:21.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.201" endtime="20201029 18:18:21.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.161" endtime="20201029 18:18:21.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.159" endtime="20201029 18:18:21.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.136" endtime="20201029 18:18:21.204"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.212" endtime="20201029 18:18:21.233"></status>
</kw>
<msg timestamp="20201029 18:18:21.233" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:21.211" endtime="20201029 18:18:21.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.236" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:21.234" endtime="20201029 18:18:21.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.237" endtime="20201029 18:18:21.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.208" endtime="20201029 18:18:21.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.206" endtime="20201029 18:18:21.240"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.242" endtime="20201029 18:18:21.244"></status>
</kw>
<msg timestamp="20201029 18:18:21.244" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:18:21.241" endtime="20201029 18:18:21.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.248" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:18:21.247" endtime="20201029 18:18:21.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.250" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:18:21.249" endtime="20201029 18:18:21.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.245" endtime="20201029 18:18:21.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.255" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:18:21.254" endtime="20201029 18:18:21.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.257" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:18:21.256" endtime="20201029 18:18:21.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.251" endtime="20201029 18:18:21.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.264" endtime="20201029 18:18:21.551"></status>
</kw>
<msg timestamp="20201029 18:18:21.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066353153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066362333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:21.263" endtime="20201029 18:18:21.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066353153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066362333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:21.555" endtime="20201029 18:18:21.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.564" endtime="20201029 18:18:21.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.260" endtime="20201029 18:18:21.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.258" endtime="20201029 18:18:21.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:21.570" level="INFO">${RESULT} = [{'diff': 9.179999999997523e-06}, {'diff': 1.0958000000005352e-05}, {'diff': 1.0943999999998844e-05}, {'diff': 1.0986000000004492e-05}, {'diff': 1.0957999999991475e-05}, {'diff': 1.0958000000005352e-0...</msg>
<status status="PASS" starttime="20201029 18:18:21.567" endtime="20201029 18:18:21.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:21.574" level="INFO">${OVERHEAD} = {'diff': [9.179999999997523e-06, 1.0958000000005352e-05, 1.0943999999998844e-05, 1.0986000000004492e-05, 1.0957999999991475e-05, 1.0958000000005352e-05, 1.0958999999990948e-05, 1.0958000000005352e-05,...</msg>
<status status="PASS" starttime="20201029 18:18:21.571" endtime="20201029 18:18:21.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.579" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 18:18:21.578" endtime="20201029 18:18:21.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.581" level="INFO">VALUE: [9.179999999997523e-06, 1.0958000000005352e-05, 1.0943999999998844e-05, 1.0986000000004492e-05, 1.0957999999991475e-05, 1.0958000000005352e-05, 1.0958999999990948e-05, 1.0958000000005352e-05, 1.0957999999991475e-05, 1.0943999999998844e-05, 1.0957999999991475e-05, 1.0959000000004826e-05, 1.0958000000005352e-05, 1.0971999999997983e-05, 1.0957999999991475e-05, 1.0985999999990614e-05, 1.0957999999991475e-05, 1.0959000000004826e-05, 1.0957999999991475e-05, 1.0959000000004826e-05, 1.0971999999997983e-05, 1.0958000000005352e-05, 1.1013999999989754e-05, 1.0959000000004826e-05, 1.0957999999991475e-05, 1.0958999999990948e-05, 1.0958999999990948e-05, 1.0958000000005352e-05, 1.0958000000005352e-05, 1.0931000000005686e-05, 1.0958999999990948e-05, 1.0944999999998317e-05, 1.0959000000004826e-05, 1.0958000000005352e-05, 1.0957999999991475e-05, 1.0958000000005352e-05, 1.0986000000004492e-05, 1.0944999999998317e-05, 1.0958999999990948e-05, 1.0945000000012195e-05, 1.0943999999998844e-05, 1.0916999999999177e-05, 1.0972999999997457e-05, 1.0959000000004826e-05, 1.0958999999990948e-05, 1.0943999999998844e-05, 1.0958000000005352e-05, 1.0944999999998317e-05, 1.0986000000004492e-05, 1.0931000000005686e-05]</msg>
<status status="PASS" starttime="20201029 18:18:21.580" endtime="20201029 18:18:21.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.575" endtime="20201029 18:18:21.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.205" endtime="20201029 18:18:21.583"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:21.134" endtime="20201029 18:18:21.583" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:21.590" endtime="20201029 18:18:21.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.588" endtime="20201029 18:18:21.610"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.624" endtime="20201029 18:18:21.638"></status>
</kw>
<msg timestamp="20201029 18:18:21.639" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:21.622" endtime="20201029 18:18:21.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.641" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:21.640" endtime="20201029 18:18:21.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.644" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:21.642" endtime="20201029 18:18:21.644"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:21.619" endtime="20201029 18:18:21.645"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:21.617" endtime="20201029 18:18:21.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.615" endtime="20201029 18:18:21.646"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:21.650" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:21.649" endtime="20201029 18:18:21.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.647" endtime="20201029 18:18:21.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.614" endtime="20201029 18:18:21.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.614" endtime="20201029 18:18:21.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.651" endtime="20201029 18:18:21.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.612" endtime="20201029 18:18:21.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.610" endtime="20201029 18:18:21.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.587" endtime="20201029 18:18:21.654"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.662" endtime="20201029 18:18:21.734"></status>
</kw>
<msg timestamp="20201029 18:18:21.734" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:21.661" endtime="20201029 18:18:21.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.737" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:21.735" endtime="20201029 18:18:21.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.738" endtime="20201029 18:18:21.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.658" endtime="20201029 18:18:21.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.656" endtime="20201029 18:18:21.740"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.743" endtime="20201029 18:18:21.745"></status>
</kw>
<msg timestamp="20201029 18:18:21.745" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:18:21.742" endtime="20201029 18:18:21.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.749" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:18:21.748" endtime="20201029 18:18:21.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.751" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:18:21.750" endtime="20201029 18:18:21.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.746" endtime="20201029 18:18:21.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.757" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:18:21.755" endtime="20201029 18:18:21.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.759" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:18:21.758" endtime="20201029 18:18:21.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.753" endtime="20201029 18:18:21.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.766" endtime="20201029 18:18:22.057"></status>
</kw>
<msg timestamp="20201029 18:18:22.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065897556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065919097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:21.765" endtime="20201029 18:18:22.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065897556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065919097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:22.061" endtime="20201029 18:18:22.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.069" endtime="20201029 18:18:22.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.762" endtime="20201029 18:18:22.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.761" endtime="20201029 18:18:22.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:22.075" level="INFO">${RESULT} = [{'diff': 2.154099999999992e-05}, {'diff': 3.4012999999999405e-05}, {'diff': 3.3652999999994604e-05}, {'diff': 3.372199999999992e-05}, {'diff': 3.373699999999202e-05}, {'diff': 3.372199999999992e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:22.072" endtime="20201029 18:18:22.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:22.079" level="INFO">${OVERHEAD} = {'diff': [2.154099999999992e-05, 3.4012999999999405e-05, 3.3652999999994604e-05, 3.372199999999992e-05, 3.373699999999202e-05, 3.372199999999992e-05, 3.373599999999255e-05, 3.373599999999255e-05, 3.37...</msg>
<status status="PASS" starttime="20201029 18:18:22.076" endtime="20201029 18:18:22.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.084" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 18:18:22.083" endtime="20201029 18:18:22.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.086" level="INFO">VALUE: [2.154099999999992e-05, 3.4012999999999405e-05, 3.3652999999994604e-05, 3.372199999999992e-05, 3.373699999999202e-05, 3.372199999999992e-05, 3.373599999999255e-05, 3.373599999999255e-05, 3.373600000000643e-05, 3.370799999999341e-05, 3.372299999999939e-05, 3.372299999999939e-05, 3.366700000000111e-05, 3.374999999999906e-05, 3.373600000000643e-05, 3.374999999999906e-05, 3.373699999999202e-05, 3.372199999999992e-05, 3.373699999999202e-05, 3.376399999999169e-05, 3.373600000000643e-05, 3.373599999999255e-05, 3.373600000000643e-05, 3.372199999999992e-05, 3.372199999999992e-05, 3.370799999999341e-05, 3.372199999999992e-05, 3.374999999999906e-05, 3.373600000000643e-05, 3.373600000000643e-05, 3.370799999999341e-05, 3.369500000000025e-05, 3.372199999999992e-05, 3.373600000000643e-05, 3.374999999999906e-05, 3.372299999999939e-05, 3.372199999999992e-05, 3.372299999999939e-05, 3.373599999999255e-05, 3.373599999999255e-05, 3.372199999999992e-05, 3.373599999999255e-05, 3.372199999999992e-05, 3.373599999999255e-05, 3.370799999999341e-05, 3.374999999999906e-05, 3.372199999999992e-05, 3.376399999999169e-05, 3.373599999999255e-05, 3.372299999999939e-05]</msg>
<status status="PASS" starttime="20201029 18:18:22.085" endtime="20201029 18:18:22.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.080" endtime="20201029 18:18:22.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.655" endtime="20201029 18:18:22.089"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:21.585" endtime="20201029 18:18:22.089" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:22.096" endtime="20201029 18:18:22.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.095" endtime="20201029 18:18:22.116"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.129" endtime="20201029 18:18:22.143"></status>
</kw>
<msg timestamp="20201029 18:18:22.143" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.127" endtime="20201029 18:18:22.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.146" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.144" endtime="20201029 18:18:22.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.149" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:22.147" endtime="20201029 18:18:22.149"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:22.125" endtime="20201029 18:18:22.150"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:22.122" endtime="20201029 18:18:22.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.121" endtime="20201029 18:18:22.151"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:22.154" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:22.154" endtime="20201029 18:18:22.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.151" endtime="20201029 18:18:22.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.120" endtime="20201029 18:18:22.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.119" endtime="20201029 18:18:22.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.156" endtime="20201029 18:18:22.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.118" endtime="20201029 18:18:22.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.117" endtime="20201029 18:18:22.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.093" endtime="20201029 18:18:22.159"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.168" endtime="20201029 18:18:22.358"></status>
</kw>
<msg timestamp="20201029 18:18:22.358" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.166" endtime="20201029 18:18:22.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.361" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.359" endtime="20201029 18:18:22.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.362" endtime="20201029 18:18:22.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.163" endtime="20201029 18:18:22.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.161" endtime="20201029 18:18:22.364"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.367" endtime="20201029 18:18:22.369"></status>
</kw>
<msg timestamp="20201029 18:18:22.369" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:18:22.365" endtime="20201029 18:18:22.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.373" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:18:22.372" endtime="20201029 18:18:22.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.375" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:18:22.374" endtime="20201029 18:18:22.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.370" endtime="20201029 18:18:22.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.380" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:18:22.379" endtime="20201029 18:18:22.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.382" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:18:22.381" endtime="20201029 18:18:22.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.376" endtime="20201029 18:18:22.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.389" endtime="20201029 18:18:22.682"></status>
</kw>
<msg timestamp="20201029 18:18:22.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066379347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0664165, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:22.387" endtime="20201029 18:18:22.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066379347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0664165, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:22.686" endtime="20201029 18:18:22.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.694" endtime="20201029 18:18:22.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.385" endtime="20201029 18:18:22.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.383" endtime="20201029 18:18:22.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:22.700" level="INFO">${RESULT} = [{'diff': 3.7152999999998104e-05}, {'diff': 6.036200000000824e-05}, {'diff': 6.034700000000226e-05}, {'diff': 6.036100000000877e-05}, {'diff': 6.0348000000001734e-05}, {'diff': 6.036100000000877e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:22.697" endtime="20201029 18:18:22.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:22.706" level="INFO">${OVERHEAD} = {'diff': [3.7152999999998104e-05, 6.036200000000824e-05, 6.034700000000226e-05, 6.036100000000877e-05, 6.0348000000001734e-05, 6.036100000000877e-05, 6.0361999999994365e-05, 6.036100000000877e-05, 6.0...</msg>
<status status="PASS" starttime="20201029 18:18:22.701" endtime="20201029 18:18:22.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.710" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 18:18:22.709" endtime="20201029 18:18:22.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.713" level="INFO">VALUE: [3.7152999999998104e-05, 6.036200000000824e-05, 6.034700000000226e-05, 6.036100000000877e-05, 6.0348000000001734e-05, 6.036100000000877e-05, 6.0361999999994365e-05, 6.036100000000877e-05, 6.036099999999489e-05, 6.036100000000877e-05, 6.03750000000014e-05, 6.036099999999489e-05, 6.036099999999489e-05, 6.0361999999994365e-05, 6.03750000000014e-05, 6.036100000000877e-05, 6.034699999998838e-05, 6.034700000000226e-05, 6.036100000000877e-05, 6.033299999999575e-05, 6.036099999998101e-05, 6.036099999998101e-05, 6.036199999998049e-05, 6.0320000000002594e-05, 6.033299999999575e-05, 6.036099999998101e-05, 6.036100000000877e-05, 6.034700000001614e-05, 6.040299999998666e-05, 6.036100000000877e-05, 6.036100000000877e-05, 6.036100000000877e-05, 6.036200000000824e-05, 6.034700000001614e-05, 6.036100000000877e-05, 6.0347999999987856e-05, 6.03750000000014e-05, 6.036100000000877e-05, 6.040199999998719e-05, 6.034699999998838e-05, 6.036100000000877e-05, 6.033299999999575e-05, 6.03750000000014e-05, 6.036100000000877e-05, 6.040300000001442e-05, 6.03750000000014e-05, 6.0347999999987856e-05, 6.034699999998838e-05, 6.041700000000705e-05, 6.041700000000705e-05]</msg>
<status status="PASS" starttime="20201029 18:18:22.711" endtime="20201029 18:18:22.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.707" endtime="20201029 18:18:22.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.159" endtime="20201029 18:18:22.714"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:22.091" endtime="20201029 18:18:22.715" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:22.722" endtime="20201029 18:18:22.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.720" endtime="20201029 18:18:22.742"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.755" endtime="20201029 18:18:22.769"></status>
</kw>
<msg timestamp="20201029 18:18:22.770" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.753" endtime="20201029 18:18:22.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.772" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.771" endtime="20201029 18:18:22.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.775" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:22.773" endtime="20201029 18:18:22.775"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:22.750" endtime="20201029 18:18:22.776"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:22.748" endtime="20201029 18:18:22.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.747" endtime="20201029 18:18:22.777"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:22.780" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:22.780" endtime="20201029 18:18:22.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.778" endtime="20201029 18:18:22.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.746" endtime="20201029 18:18:22.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.745" endtime="20201029 18:18:22.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.783" endtime="20201029 18:18:22.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.744" endtime="20201029 18:18:22.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.742" endtime="20201029 18:18:22.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.719" endtime="20201029 18:18:22.786"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.794" endtime="20201029 18:18:22.815"></status>
</kw>
<msg timestamp="20201029 18:18:22.816" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.793" endtime="20201029 18:18:22.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.818" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.817" endtime="20201029 18:18:22.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.819" endtime="20201029 18:18:22.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.790" endtime="20201029 18:18:22.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.788" endtime="20201029 18:18:22.822"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.824" endtime="20201029 18:18:22.826"></status>
</kw>
<msg timestamp="20201029 18:18:22.826" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:18:22.823" endtime="20201029 18:18:22.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.830" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:18:22.829" endtime="20201029 18:18:22.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.832" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:18:22.831" endtime="20201029 18:18:22.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.827" endtime="20201029 18:18:22.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.837" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:18:22.836" endtime="20201029 18:18:22.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.839" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:18:22.838" endtime="20201029 18:18:22.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.834" endtime="20201029 18:18:22.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.846" endtime="20201029 18:18:23.154"></status>
</kw>
<msg timestamp="20201029 18:18:23.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065689389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065699306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:22.845" endtime="20201029 18:18:23.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065689389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065699306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:23.158" endtime="20201029 18:18:23.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.166" endtime="20201029 18:18:23.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.842" endtime="20201029 18:18:23.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.840" endtime="20201029 18:18:23.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:23.173" level="INFO">${RESULT} = [{'diff': 9.916999999998177e-06}, {'diff': 9.903000000005546e-06}, {'diff': 9.917000000012055e-06}, {'diff': 9.931000000004686e-06}, {'diff': 9.916999999998177e-06}, {'diff': 9.903000000005546e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:18:23.169" endtime="20201029 18:18:23.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:23.177" level="INFO">${OVERHEAD} = {'diff': [9.916999999998177e-06, 9.903000000005546e-06, 9.917000000012055e-06, 9.931000000004686e-06, 9.916999999998177e-06, 9.903000000005546e-06, 9.916999999998177e-06, 9.915999999998704e-06, 9.9029...</msg>
<status status="PASS" starttime="20201029 18:18:23.174" endtime="20201029 18:18:23.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.182" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 18:18:23.181" endtime="20201029 18:18:23.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.184" level="INFO">VALUE: [9.916999999998177e-06, 9.903000000005546e-06, 9.917000000012055e-06, 9.931000000004686e-06, 9.916999999998177e-06, 9.903000000005546e-06, 9.916999999998177e-06, 9.915999999998704e-06, 9.902999999991668e-06, 9.929999999991335e-06, 9.916999999998177e-06, 9.915999999998704e-06, 9.902000000006073e-06, 9.887999999999564e-06, 9.916000000012581e-06, 9.903000000005546e-06, 9.903000000005546e-06, 9.888999999999037e-06, 9.929999999991335e-06, 9.916999999998177e-06, 9.915999999998704e-06, 9.916999999998177e-06, 9.931000000004686e-06, 9.930999999990808e-06, 9.957999999990474e-06, 9.84800000000674e-06, 9.916999999998177e-06, 9.861999999999371e-06, 9.916999999998177e-06, 9.874999999992529e-06, 9.916999999998177e-06, 9.902999999991668e-06, 9.930000000005212e-06, 9.916999999998177e-06, 9.930000000005212e-06, 9.901999999992195e-06, 9.888999999999037e-06, 9.915999999998704e-06, 9.916999999998177e-06, 9.917000000012055e-06, 9.916999999998177e-06, 9.915999999998704e-06, 9.916999999998177e-06, 9.903000000005546e-06, 9.917000000012055e-06, 9.931000000004686e-06, 9.903000000005546e-06, 9.972999999996457e-06, 9.930000000005212e-06, 9.915999999998704e-06]</msg>
<status status="PASS" starttime="20201029 18:18:23.183" endtime="20201029 18:18:23.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.178" endtime="20201029 18:18:23.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.787" endtime="20201029 18:18:23.186"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:22.716" endtime="20201029 18:18:23.186" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:23.193" endtime="20201029 18:18:23.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.192" endtime="20201029 18:18:23.213"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.227" endtime="20201029 18:18:23.241"></status>
</kw>
<msg timestamp="20201029 18:18:23.241" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.225" endtime="20201029 18:18:23.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.244" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.242" endtime="20201029 18:18:23.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.247" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:23.245" endtime="20201029 18:18:23.247"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:23.222" endtime="20201029 18:18:23.248"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:23.220" endtime="20201029 18:18:23.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.218" endtime="20201029 18:18:23.249"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:23.252" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:23.251" endtime="20201029 18:18:23.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.249" endtime="20201029 18:18:23.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.218" endtime="20201029 18:18:23.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.217" endtime="20201029 18:18:23.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.254" endtime="20201029 18:18:23.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.216" endtime="20201029 18:18:23.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.214" endtime="20201029 18:18:23.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.191" endtime="20201029 18:18:23.257"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.265" endtime="20201029 18:18:23.336"></status>
</kw>
<msg timestamp="20201029 18:18:23.337" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.263" endtime="20201029 18:18:23.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.339" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.338" endtime="20201029 18:18:23.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.340" endtime="20201029 18:18:23.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.261" endtime="20201029 18:18:23.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.259" endtime="20201029 18:18:23.343"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.345" endtime="20201029 18:18:23.346"></status>
</kw>
<msg timestamp="20201029 18:18:23.347" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:18:23.344" endtime="20201029 18:18:23.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.351" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:18:23.350" endtime="20201029 18:18:23.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.353" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:18:23.352" endtime="20201029 18:18:23.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.348" endtime="20201029 18:18:23.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.358" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:18:23.357" endtime="20201029 18:18:23.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.360" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:18:23.359" endtime="20201029 18:18:23.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.355" endtime="20201029 18:18:23.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.368" endtime="20201029 18:18:23.659"></status>
</kw>
<msg timestamp="20201029 18:18:23.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065270111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065291056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:23.367" endtime="20201029 18:18:23.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065270111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065291056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:23.663" endtime="20201029 18:18:23.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.671" endtime="20201029 18:18:23.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.363" endtime="20201029 18:18:23.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.362" endtime="20201029 18:18:23.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:23.678" level="INFO">${RESULT} = [{'diff': 2.094499999999444e-05}, {'diff': 2.094499999999444e-05}, {'diff': 2.0944000000008844e-05}, {'diff': 2.0958000000001475e-05}, {'diff': 2.093099999998793e-05}, {'diff': 2.0972000000007984e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:23.674" endtime="20201029 18:18:23.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:23.682" level="INFO">${OVERHEAD} = {'diff': [2.094499999999444e-05, 2.094499999999444e-05, 2.0944000000008844e-05, 2.0958000000001475e-05, 2.093099999998793e-05, 2.0972000000007984e-05, 2.1000000000007124e-05, 2.094499999999444e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:18:23.679" endtime="20201029 18:18:23.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.686" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 18:18:23.685" endtime="20201029 18:18:23.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.689" level="INFO">VALUE: [2.094499999999444e-05, 2.094499999999444e-05, 2.0944000000008844e-05, 2.0958000000001475e-05, 2.093099999998793e-05, 2.0972000000007984e-05, 2.1000000000007124e-05, 2.094499999999444e-05, 2.1000000000007124e-05, 2.0957999999987598e-05, 2.09169999999953e-05, 2.093100000000181e-05, 2.090300000000267e-05, 2.0943999999994967e-05, 2.0943999999994967e-05, 2.0945000000008318e-05, 2.0930000000002336e-05, 2.093100000000181e-05, 2.0943999999994967e-05, 2.087500000000353e-05, 2.0972000000007984e-05, 2.0943999999994967e-05, 2.09169999999953e-05, 2.0943999999994967e-05, 2.093100000000181e-05, 2.0999999999993246e-05, 2.093100000000181e-05, 2.093100000000181e-05, 2.0943999999994967e-05, 2.0930000000002336e-05, 2.095900000000095e-05, 2.090300000000267e-05, 2.0986000000000615e-05, 2.094499999999444e-05, 2.0943999999994967e-05, 2.1013999999999755e-05, 2.095900000000095e-05, 2.094499999999444e-05, 2.0929999999988458e-05, 2.0901999999989318e-05, 2.093100000000181e-05, 2.0945000000008318e-05, 2.0915999999995827e-05, 2.093100000000181e-05, 2.0944000000008844e-05, 2.093100000000181e-05, 2.0986000000000615e-05, 2.0944000000008844e-05, 2.0930000000002336e-05, 2.094499999999444e-05]</msg>
<status status="PASS" starttime="20201029 18:18:23.687" endtime="20201029 18:18:23.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.683" endtime="20201029 18:18:23.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.257" endtime="20201029 18:18:23.690"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:23.188" endtime="20201029 18:18:23.690" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:23.706" endtime="20201029 18:18:23.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.705" endtime="20201029 18:18:23.726"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.740" endtime="20201029 18:18:23.753"></status>
</kw>
<msg timestamp="20201029 18:18:23.754" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.738" endtime="20201029 18:18:23.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.756" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.755" endtime="20201029 18:18:23.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.759" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:23.757" endtime="20201029 18:18:23.760"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:23.736" endtime="20201029 18:18:23.760"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:23.733" endtime="20201029 18:18:23.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.732" endtime="20201029 18:18:23.761"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:23.765" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:23.764" endtime="20201029 18:18:23.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.762" endtime="20201029 18:18:23.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.731" endtime="20201029 18:18:23.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.731" endtime="20201029 18:18:23.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.766" endtime="20201029 18:18:23.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.729" endtime="20201029 18:18:23.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.727" endtime="20201029 18:18:23.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.703" endtime="20201029 18:18:23.769"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.777" endtime="20201029 18:18:23.969"></status>
</kw>
<msg timestamp="20201029 18:18:23.969" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.776" endtime="20201029 18:18:23.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.972" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.970" endtime="20201029 18:18:23.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.973" endtime="20201029 18:18:23.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.773" endtime="20201029 18:18:23.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.771" endtime="20201029 18:18:23.975"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.977" endtime="20201029 18:18:23.982"></status>
</kw>
<msg timestamp="20201029 18:18:23.983" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:18:23.976" endtime="20201029 18:18:23.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.987" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:18:23.986" endtime="20201029 18:18:23.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.989" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:18:23.988" endtime="20201029 18:18:23.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.984" endtime="20201029 18:18:23.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.994" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:18:23.993" endtime="20201029 18:18:23.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.996" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:18:23.995" endtime="20201029 18:18:23.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.991" endtime="20201029 18:18:23.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.003" endtime="20201029 18:18:24.296"></status>
</kw>
<msg timestamp="20201029 18:18:24.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066615569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066648028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:24.002" endtime="20201029 18:18:24.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066615569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066648028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:24.300" endtime="20201029 18:18:24.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.308" endtime="20201029 18:18:24.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.999" endtime="20201029 18:18:24.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.997" endtime="20201029 18:18:24.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:24.315" level="INFO">${RESULT} = [{'diff': 3.245899999999857e-05}, {'diff': 3.2388999999993784e-05}, {'diff': 3.240200000000082e-05}, {'diff': 3.2388999999993784e-05}, {'diff': 3.242999999999996e-05}, {'diff': 3.234700000000201e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:24.312" endtime="20201029 18:18:24.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:18:24.320" level="INFO">${OVERHEAD} = {'diff': [3.245899999999857e-05, 3.2388999999993784e-05, 3.240200000000082e-05, 3.2388999999993784e-05, 3.242999999999996e-05, 3.234700000000201e-05, 3.244399999999259e-05, 3.2362000000007995e-05, 3.2...</msg>
<status status="PASS" starttime="20201029 18:18:24.316" endtime="20201029 18:18:24.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.325" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 18:18:24.323" endtime="20201029 18:18:24.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.327" level="INFO">VALUE: [3.245899999999857e-05, 3.2388999999993784e-05, 3.240200000000082e-05, 3.2388999999993784e-05, 3.242999999999996e-05, 3.234700000000201e-05, 3.244399999999259e-05, 3.2362000000007995e-05, 3.24170000000068e-05, 3.238900000000766e-05, 3.240300000000029e-05, 3.241600000000733e-05, 3.2416999999992924e-05, 3.2388999999993784e-05, 3.240300000000029e-05, 3.240300000000029e-05, 3.240300000000029e-05, 3.2402999999986415e-05, 3.240300000001417e-05, 3.24020000000147e-05, 3.24170000000068e-05, 3.237500000000115e-05, 3.240300000001417e-05, 3.240300000001417e-05, 3.24170000000068e-05, 3.241600000000733e-05, 3.238799999999431e-05, 3.2402999999986415e-05, 3.245900000001245e-05, 3.2402999999986415e-05, 3.2402999999986415e-05, 3.238799999999431e-05, 3.2402999999986415e-05, 3.242999999999996e-05, 3.2402999999986415e-05, 3.237500000000115e-05, 3.2388999999993784e-05, 3.2402999999986415e-05, 3.24020000000147e-05, 3.2402999999986415e-05, 3.238799999999431e-05, 3.238900000002154e-05, 3.2402999999986415e-05, 3.237500000000115e-05, 3.2402999999986415e-05, 3.2402999999986415e-05, 3.2416999999979046e-05, 3.24020000000147e-05, 3.2388999999993784e-05, 3.247200000000561e-05]</msg>
<status status="PASS" starttime="20201029 18:18:24.326" endtime="20201029 18:18:24.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.321" endtime="20201029 18:18:24.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.770" endtime="20201029 18:18:24.334"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:23.700" endtime="20201029 18:18:24.334" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:24.342" endtime="20201029 18:18:24.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.340" endtime="20201029 18:18:24.362"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.375" endtime="20201029 18:18:24.388"></status>
</kw>
<msg timestamp="20201029 18:18:24.389" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:24.373" endtime="20201029 18:18:24.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.391" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:24.390" endtime="20201029 18:18:24.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.394" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:24.392" endtime="20201029 18:18:24.395"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:24.371" endtime="20201029 18:18:24.395"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:24.368" endtime="20201029 18:18:24.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.367" endtime="20201029 18:18:24.396"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:24.400" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:24.399" endtime="20201029 18:18:24.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.397" endtime="20201029 18:18:24.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.366" endtime="20201029 18:18:24.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.366" endtime="20201029 18:18:24.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.401" endtime="20201029 18:18:24.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.364" endtime="20201029 18:18:24.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.362" endtime="20201029 18:18:24.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.338" endtime="20201029 18:18:24.404"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.408" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:18:24.416" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:18:25.645" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:18:24.407" endtime="20201029 18:18:25.646"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.650" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:18:25.647" endtime="20201029 18:18:25.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.405" endtime="20201029 18:18:25.651"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:25.654" endtime="20201029 18:18:25.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.653" endtime="20201029 18:18:25.674"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.683" endtime="20201029 18:18:25.691"></status>
</kw>
<msg timestamp="20201029 18:18:25.691" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:25.681" endtime="20201029 18:18:25.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.694" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:25.692" endtime="20201029 18:18:25.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.695" endtime="20201029 18:18:25.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.678" endtime="20201029 18:18:25.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.676" endtime="20201029 18:18:25.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.704" endtime="20201029 18:18:26.002"></status>
</kw>
<msg timestamp="20201029 18:18:26.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017987028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017996583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:25.703" endtime="20201029 18:18:26.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017987028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017996583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:26.014" endtime="20201029 18:18:26.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.038" endtime="20201029 18:18:26.042"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.700" endtime="20201029 18:18:26.043"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.698" endtime="20201029 18:18:26.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:26.053" level="INFO">${PHILIP_RES} = [{'diff': 9.555000000001368e-06}, {'diff': 9.583000000000508e-06}, {'diff': 9.597999999999551e-06}, {'diff': 9.610999999999648e-06}, {'diff': 9.569000000000938e-06}, {'diff': 9.555000000001368e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:18:26.046" endtime="20201029 18:18:26.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:26.063" level="INFO">${RESULT} = {'diff': [9.555000000001368e-06, 9.583000000000508e-06, 9.597999999999551e-06, 9.610999999999648e-06, 9.569000000000938e-06, 9.555000000001368e-06, 9.611000000003117e-06, 9.638999999998787e-06, 9.5559...</msg>
<status status="PASS" starttime="20201029 18:18:26.055" endtime="20201029 18:18:26.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.072" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:26.070" endtime="20201029 18:18:26.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.076" level="INFO">VALUE: [9.555000000001368e-06, 9.583000000000508e-06, 9.597999999999551e-06, 9.610999999999648e-06, 9.569000000000938e-06, 9.555000000001368e-06, 9.611000000003117e-06, 9.638999999998787e-06, 9.555999999997372e-06, 9.597000000000078e-06, 9.583000000000508e-06, 9.583999999999981e-06, 9.569000000000938e-06, 9.583000000000508e-06, 9.528000000001702e-06, 9.583000000000508e-06, 9.583999999999981e-06, 9.568999999997468e-06, 9.583000000000508e-06, 9.570000000000412e-06, 9.597000000000078e-06, 9.583000000000508e-06, 9.583999999999981e-06, 9.610999999999648e-06, 9.625000000002687e-06, 9.597999999999551e-06, 9.610999999999648e-06, 9.583000000000508e-06, 9.597999999999551e-06, 9.583000000000508e-06, 9.569999999996942e-06, 9.597000000000078e-06, 9.583000000000508e-06, 9.583999999999981e-06, 9.540999999998329e-06, 9.583000000000508e-06, 9.570000000000412e-06, 9.555000000001368e-06, 9.514000000002132e-06, 9.583999999999981e-06, 9.583000000000508e-06, 9.569000000000938e-06, 9.597999999999551e-06, 9.597000000000078e-06, 9.597000000000078e-06, 9.583999999999981e-06, 9.569000000000938e-06, 9.583000000000508e-06, 9.610999999999648e-06, 9.583000000000508e-06]</msg>
<status status="PASS" starttime="20201029 18:18:26.074" endtime="20201029 18:18:26.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.065" endtime="20201029 18:18:26.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.675" endtime="20201029 18:18:26.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.652" endtime="20201029 18:18:26.077"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:26.080" endtime="20201029 18:18:26.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.078" endtime="20201029 18:18:26.100"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.108" endtime="20201029 18:18:26.117"></status>
</kw>
<msg timestamp="20201029 18:18:26.117" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:26.106" endtime="20201029 18:18:26.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.120" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:26.118" endtime="20201029 18:18:26.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.121" endtime="20201029 18:18:26.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.104" endtime="20201029 18:18:26.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.102" endtime="20201029 18:18:26.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.130" endtime="20201029 18:18:26.418"></status>
</kw>
<msg timestamp="20201029 18:18:26.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017721194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017737111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:26.129" endtime="20201029 18:18:26.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017721194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017737111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:26.422" endtime="20201029 18:18:26.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.430" endtime="20201029 18:18:26.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.126" endtime="20201029 18:18:26.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.124" endtime="20201029 18:18:26.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:26.437" level="INFO">${PHILIP_RES} = [{'diff': 1.591700000000071e-05}, {'diff': 1.5943999999996905e-05}, {'diff': 1.5958999999999418e-05}, {'diff': 1.5957999999999944e-05}, {'diff': 1.5957999999999944e-05}, {'diff': 1.5959000000002888e-0...</msg>
<status status="PASS" starttime="20201029 18:18:26.434" endtime="20201029 18:18:26.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:26.441" level="INFO">${RESULT} = {'diff': [1.591700000000071e-05, 1.5943999999996905e-05, 1.5958999999999418e-05, 1.5957999999999944e-05, 1.5957999999999944e-05, 1.5959000000002888e-05, 1.5971999999999514e-05, 1.5957999999999944e-05,...</msg>
<status status="PASS" starttime="20201029 18:18:26.438" endtime="20201029 18:18:26.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.445" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:26.444" endtime="20201029 18:18:26.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.448" level="INFO">VALUE: [1.591700000000071e-05, 1.5943999999996905e-05, 1.5958999999999418e-05, 1.5957999999999944e-05, 1.5957999999999944e-05, 1.5959000000002888e-05, 1.5971999999999514e-05, 1.5957999999999944e-05, 1.5931000000000278e-05, 1.5958999999999418e-05, 1.590299999999767e-05, 1.6013999999998224e-05, 1.5958999999999418e-05, 1.5944000000000375e-05, 1.5957999999999944e-05, 1.5958999999999418e-05, 1.5944999999999848e-05, 1.5971999999999514e-05, 1.5971999999999514e-05, 1.5971999999999514e-05, 1.5957999999999944e-05, 1.5971999999999514e-05, 1.5972999999998988e-05, 1.5985999999999084e-05, 1.5957999999999944e-05, 1.5958999999999418e-05, 1.5957999999999944e-05, 1.5957999999999944e-05, 1.5944999999999848e-05, 1.5957999999999944e-05, 1.5943999999996905e-05, 1.5957999999999944e-05, 1.5944999999999848e-05, 1.5957999999999944e-05, 1.5943999999996905e-05, 1.5958999999999418e-05, 1.5943999999996905e-05, 1.6014000000001694e-05, 1.5971999999999514e-05, 1.5957999999999944e-05, 1.5971999999999514e-05, 1.5957999999999944e-05, 1.5959000000002888e-05, 1.5971999999999514e-05, 1.5957999999999944e-05, 1.5944999999999848e-05, 1.5944000000000375e-05, 1.5944000000000375e-05, 1.5944999999999848e-05, 1.5958999999999418e-05]</msg>
<status status="PASS" starttime="20201029 18:18:26.446" endtime="20201029 18:18:26.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.442" endtime="20201029 18:18:26.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.100" endtime="20201029 18:18:26.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.078" endtime="20201029 18:18:26.449"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:26.451" endtime="20201029 18:18:26.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.450" endtime="20201029 18:18:26.471"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.479" endtime="20201029 18:18:26.491"></status>
</kw>
<msg timestamp="20201029 18:18:26.491" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:26.478" endtime="20201029 18:18:26.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.494" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:26.492" endtime="20201029 18:18:26.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.495" endtime="20201029 18:18:26.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.475" endtime="20201029 18:18:26.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.474" endtime="20201029 18:18:26.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.505" endtime="20201029 18:18:26.795"></status>
</kw>
<msg timestamp="20201029 18:18:26.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017711611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017734222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:26.503" endtime="20201029 18:18:26.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017711611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017734222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:26.804" endtime="20201029 18:18:26.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.823" endtime="20201029 18:18:26.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.501" endtime="20201029 18:18:26.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.499" endtime="20201029 18:18:26.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:26.836" level="INFO">${PHILIP_RES} = [{'diff': 2.261100000000224e-05}, {'diff': 2.263900000000138e-05}, {'diff': 2.25969999999992e-05}, {'diff': 2.2680000000000616e-05}, {'diff': 2.265300000000095e-05}, {'diff': 2.263900000000138e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:26.829" endtime="20201029 18:18:26.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:26.845" level="INFO">${RESULT} = {'diff': [2.261100000000224e-05, 2.263900000000138e-05, 2.25969999999992e-05, 2.2680000000000616e-05, 2.265300000000095e-05, 2.263900000000138e-05, 2.263899999999791e-05, 2.2652000000001477e-05, 2.265...</msg>
<status status="PASS" starttime="20201029 18:18:26.838" endtime="20201029 18:18:26.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.854" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:26.852" endtime="20201029 18:18:26.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.859" level="INFO">VALUE: [2.261100000000224e-05, 2.263900000000138e-05, 2.25969999999992e-05, 2.2680000000000616e-05, 2.265300000000095e-05, 2.263900000000138e-05, 2.263899999999791e-05, 2.2652000000001477e-05, 2.265300000000095e-05, 2.2651999999998007e-05, 2.263899999999791e-05, 2.266700000000052e-05, 2.265300000000095e-05, 2.263900000000138e-05, 2.265299999999748e-05, 2.263900000000138e-05, 2.263900000000138e-05, 2.261100000000224e-05, 2.2651999999998007e-05, 2.263900000000138e-05, 2.263900000000138e-05, 2.265300000000095e-05, 2.266699999999705e-05, 2.265299999999748e-05, 2.266700000000052e-05, 2.265300000000095e-05, 2.265299999999748e-05, 2.2665999999997577e-05, 2.261099999999877e-05, 2.2652000000001477e-05, 2.263899999999791e-05, 2.265300000000095e-05, 2.265300000000095e-05, 2.262500000000181e-05, 2.265299999999748e-05, 2.263899999999791e-05, 2.265300000000095e-05, 2.263900000000138e-05, 2.2651999999998007e-05, 2.266700000000052e-05, 2.2652000000001477e-05, 2.2583999999999105e-05, 2.265299999999748e-05, 2.2569999999999535e-05, 2.262500000000181e-05, 2.263900000000138e-05, 2.261099999999877e-05, 2.263899999999791e-05, 2.263900000000138e-05, 2.2638000000001907e-05]</msg>
<status status="PASS" starttime="20201029 18:18:26.856" endtime="20201029 18:18:26.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.847" endtime="20201029 18:18:26.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.472" endtime="20201029 18:18:26.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.450" endtime="20201029 18:18:26.864"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:26.869" endtime="20201029 18:18:26.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.866" endtime="20201029 18:18:26.889"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.897" endtime="20201029 18:18:26.908"></status>
</kw>
<msg timestamp="20201029 18:18:26.909" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:26.896" endtime="20201029 18:18:26.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.912" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:26.910" endtime="20201029 18:18:26.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.913" endtime="20201029 18:18:26.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.893" endtime="20201029 18:18:26.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.891" endtime="20201029 18:18:26.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.922" endtime="20201029 18:18:27.210"></status>
</kw>
<msg timestamp="20201029 18:18:27.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017478597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017508208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:26.920" endtime="20201029 18:18:27.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017478597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017508208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:27.217" endtime="20201029 18:18:27.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.228" endtime="20201029 18:18:27.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.918" endtime="20201029 18:18:27.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.916" endtime="20201029 18:18:27.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:27.237" level="INFO">${PHILIP_RES} = [{'diff': 2.9611000000002302e-05}, {'diff': 2.9653000000001012e-05}, {'diff': 2.9639000000001442e-05}, {'diff': 2.9667000000000582e-05}, {'diff': 2.9652999999997542e-05}, {'diff': 2.9639000000001442e-...</msg>
<status status="PASS" starttime="20201029 18:18:27.234" endtime="20201029 18:18:27.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:27.242" level="INFO">${RESULT} = {'diff': [2.9611000000002302e-05, 2.9653000000001012e-05, 2.9639000000001442e-05, 2.9667000000000582e-05, 2.9652999999997542e-05, 2.9639000000001442e-05, 2.9624999999998403e-05, 2.9639000000001442e-05...</msg>
<status status="PASS" starttime="20201029 18:18:27.238" endtime="20201029 18:18:27.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.247" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:27.246" endtime="20201029 18:18:27.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.249" level="INFO">VALUE: [2.9611000000002302e-05, 2.9653000000001012e-05, 2.9639000000001442e-05, 2.9667000000000582e-05, 2.9652999999997542e-05, 2.9639000000001442e-05, 2.9624999999998403e-05, 2.9639000000001442e-05, 2.9639000000001442e-05, 2.9624999999998403e-05, 2.9653000000001012e-05, 2.9652999999997542e-05, 2.9666000000001108e-05, 2.9639000000001442e-05, 2.9596999999999263e-05, 2.9653000000001012e-05, 2.9653000000001012e-05, 2.970899999999929e-05, 2.9652000000001538e-05, 2.965199999999807e-05, 2.9652000000001538e-05, 2.9638999999997973e-05, 2.9653000000001012e-05, 2.9596999999999263e-05, 2.9638999999997973e-05, 2.9596999999999263e-05, 2.9666999999997112e-05, 2.9639000000001442e-05, 2.965199999999807e-05, 2.9694000000000248e-05, 2.9666000000001108e-05, 2.9638999999997973e-05, 2.9653000000001012e-05, 2.9653000000001012e-05, 2.9639000000001442e-05, 2.9639000000001442e-05, 2.9652999999997542e-05, 2.9625000000001872e-05, 2.9624999999998403e-05, 2.9652000000001538e-05, 2.9666000000001108e-05, 2.9638999999997973e-05, 2.9639000000001442e-05, 2.9652999999997542e-05, 2.9667000000000582e-05, 2.9639000000001442e-05, 2.9638999999997973e-05, 2.9680000000000678e-05, 2.965199999999807e-05, 2.9598000000002206e-05]</msg>
<status status="PASS" starttime="20201029 18:18:27.248" endtime="20201029 18:18:27.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.243" endtime="20201029 18:18:27.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.890" endtime="20201029 18:18:27.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.864" endtime="20201029 18:18:27.251"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:27.253" endtime="20201029 18:18:27.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.252" endtime="20201029 18:18:27.273"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.282" endtime="20201029 18:18:27.293"></status>
</kw>
<msg timestamp="20201029 18:18:27.293" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.280" endtime="20201029 18:18:27.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.296" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.294" endtime="20201029 18:18:27.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.297" endtime="20201029 18:18:27.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.277" endtime="20201029 18:18:27.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.275" endtime="20201029 18:18:27.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.306" endtime="20201029 18:18:27.594"></status>
</kw>
<msg timestamp="20201029 18:18:27.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018163833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018200764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:27.304" endtime="20201029 18:18:27.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018163833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018200764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:27.603" endtime="20201029 18:18:27.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.621" endtime="20201029 18:18:27.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.302" endtime="20201029 18:18:27.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.300" endtime="20201029 18:18:27.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:27.636" level="INFO">${PHILIP_RES} = [{'diff': 3.6931000000000463e-05}, {'diff': 3.69719999999997e-05}, {'diff': 3.695800000000013e-05}, {'diff': 3.6889000000001754e-05}, {'diff': 3.697200000000317e-05}, {'diff': 3.695800000000013e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:27.630" endtime="20201029 18:18:27.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:27.646" level="INFO">${RESULT} = {'diff': [3.6931000000000463e-05, 3.69719999999997e-05, 3.695800000000013e-05, 3.6889000000001754e-05, 3.697200000000317e-05, 3.695800000000013e-05, 3.69719999999997e-05, 3.69589999999996e-05, 3.69719...</msg>
<status status="PASS" starttime="20201029 18:18:27.638" endtime="20201029 18:18:27.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.656" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:27.654" endtime="20201029 18:18:27.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.661" level="INFO">VALUE: [3.6931000000000463e-05, 3.69719999999997e-05, 3.695800000000013e-05, 3.6889000000001754e-05, 3.697200000000317e-05, 3.695800000000013e-05, 3.69719999999997e-05, 3.69589999999996e-05, 3.69719999999997e-05, 3.693000000000099e-05, 3.69719999999997e-05, 3.69719999999997e-05, 3.695800000000013e-05, 3.695800000000013e-05, 3.69719999999997e-05, 3.695800000000013e-05, 3.699999999999884e-05, 3.695800000000013e-05, 3.697299999999917e-05, 3.695900000000307e-05, 3.695800000000013e-05, 3.69719999999997e-05, 3.69589999999996e-05, 3.695800000000013e-05, 3.695800000000013e-05, 3.694400000000056e-05, 3.694500000000003e-05, 3.69719999999997e-05, 3.69719999999997e-05, 3.688799999999881e-05, 3.69589999999996e-05, 3.69719999999997e-05, 3.702800000000145e-05, 3.69719999999997e-05, 3.698599999999927e-05, 3.695800000000013e-05, 3.69719999999997e-05, 3.695800000000013e-05, 3.69589999999996e-05, 3.6917000000000894e-05, 3.695800000000013e-05, 3.69719999999997e-05, 3.69589999999996e-05, 3.694500000000003e-05, 3.69719999999997e-05, 3.695800000000013e-05, 3.694500000000003e-05, 3.6931000000000463e-05, 3.695800000000013e-05, 3.695799999999666e-05]</msg>
<status status="PASS" starttime="20201029 18:18:27.658" endtime="20201029 18:18:27.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.648" endtime="20201029 18:18:27.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.274" endtime="20201029 18:18:27.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.251" endtime="20201029 18:18:27.665"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:27.670" endtime="20201029 18:18:27.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.667" endtime="20201029 18:18:27.691"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.699" endtime="20201029 18:18:27.711"></status>
</kw>
<msg timestamp="20201029 18:18:27.711" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.698" endtime="20201029 18:18:27.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.714" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.713" endtime="20201029 18:18:27.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.715" endtime="20201029 18:18:27.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.695" endtime="20201029 18:18:27.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.693" endtime="20201029 18:18:27.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.725" endtime="20201029 18:18:28.011"></status>
</kw>
<msg timestamp="20201029 18:18:28.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018740958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0187855, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:27.723" endtime="20201029 18:18:28.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018740958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0187855, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:28.016" endtime="20201029 18:18:28.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.024" endtime="20201029 18:18:28.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.721" endtime="20201029 18:18:28.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.719" endtime="20201029 18:18:28.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:28.030" level="INFO">${PHILIP_RES} = [{'diff': 4.454200000000158e-05}, {'diff': 4.4597000000000386e-05}, {'diff': 4.4583000000000816e-05}, {'diff': 4.459799999999986e-05}, {'diff': 4.459799999999986e-05}, {'diff': 4.459799999999986e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:28.027" endtime="20201029 18:18:28.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:28.035" level="INFO">${RESULT} = {'diff': [4.454200000000158e-05, 4.4597000000000386e-05, 4.4583000000000816e-05, 4.459799999999986e-05, 4.459799999999986e-05, 4.459799999999986e-05, 4.4583000000000816e-05, 4.458299999999735e-05, 4.4...</msg>
<status status="PASS" starttime="20201029 18:18:28.031" endtime="20201029 18:18:28.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.039" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:28.038" endtime="20201029 18:18:28.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.041" level="INFO">VALUE: [4.454200000000158e-05, 4.4597000000000386e-05, 4.4583000000000816e-05, 4.459799999999986e-05, 4.459799999999986e-05, 4.459799999999986e-05, 4.4583000000000816e-05, 4.458299999999735e-05, 4.458299999999735e-05, 4.4597000000000386e-05, 4.458299999999735e-05, 4.4583000000000816e-05, 4.4583000000000816e-05, 4.4583000000000816e-05, 4.458400000000029e-05, 4.4638999999999096e-05, 4.459799999999986e-05, 4.4610999999999956e-05, 4.4666999999998236e-05, 4.4583000000000816e-05, 4.4583000000000816e-05, 4.4597000000000386e-05, 4.4583000000000816e-05, 4.456899999999778e-05, 4.463799999999962e-05, 4.4653000000002135e-05, 4.454199999999811e-05, 4.459799999999986e-05, 4.45129999999995e-05, 4.4610999999999956e-05, 4.4638999999999096e-05, 4.4583000000000816e-05, 4.4597000000000386e-05, 4.4583000000000816e-05, 4.4597000000000386e-05, 4.458400000000029e-05, 4.4638999999999096e-05, 4.458400000000029e-05, 4.451400000000244e-05, 4.458299999999735e-05, 4.454099999999864e-05, 4.455499999999821e-05, 4.456899999999778e-05, 4.4597000000000386e-05, 4.454199999999811e-05, 4.4583000000000816e-05, 4.465200000000266e-05, 4.458400000000029e-05, 4.459799999999986e-05, 4.458400000000029e-05]</msg>
<status status="PASS" starttime="20201029 18:18:28.040" endtime="20201029 18:18:28.043"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.036" endtime="20201029 18:18:28.043"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.691" endtime="20201029 18:18:28.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.665" endtime="20201029 18:18:28.044"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:28.046" endtime="20201029 18:18:28.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.045" endtime="20201029 18:18:28.066"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.075" endtime="20201029 18:18:28.089"></status>
</kw>
<msg timestamp="20201029 18:18:28.089" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.073" endtime="20201029 18:18:28.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.092" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.090" endtime="20201029 18:18:28.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.093" endtime="20201029 18:18:28.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.071" endtime="20201029 18:18:28.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.068" endtime="20201029 18:18:28.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.102" endtime="20201029 18:18:28.401"></status>
</kw>
<msg timestamp="20201029 18:18:28.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018225833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018278236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:28.100" endtime="20201029 18:18:28.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018225833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018278236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:28.411" endtime="20201029 18:18:28.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.429" endtime="20201029 18:18:28.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.098" endtime="20201029 18:18:28.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.096" endtime="20201029 18:18:28.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:28.443" level="INFO">${PHILIP_RES} = [{'diff': 5.240299999999948e-05}, {'diff': 5.254199999999917e-05}, {'diff': 5.25279999999996e-05}, {'diff': 5.250000000000046e-05}, {'diff': 5.251400000000003e-05}, {'diff': 5.250000000000046e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:28.436" endtime="20201029 18:18:28.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:28.454" level="INFO">${RESULT} = {'diff': [5.240299999999948e-05, 5.254199999999917e-05, 5.25279999999996e-05, 5.250000000000046e-05, 5.251400000000003e-05, 5.250000000000046e-05, 5.25409999999997e-05, 5.255499999999927e-05, 5.251400...</msg>
<status status="PASS" starttime="20201029 18:18:28.445" endtime="20201029 18:18:28.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.463" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:28.461" endtime="20201029 18:18:28.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.468" level="INFO">VALUE: [5.240299999999948e-05, 5.254199999999917e-05, 5.25279999999996e-05, 5.250000000000046e-05, 5.251400000000003e-05, 5.250000000000046e-05, 5.25409999999997e-05, 5.255499999999927e-05, 5.251400000000003e-05, 5.25409999999997e-05, 5.25279999999996e-05, 5.25279999999996e-05, 5.254199999999917e-05, 5.250000000000046e-05, 5.254199999999917e-05, 5.25279999999996e-05, 5.254199999999917e-05, 5.250000000000046e-05, 5.251400000000003e-05, 5.251400000000003e-05, 5.252800000000307e-05, 5.25279999999996e-05, 5.252700000000013e-05, 5.252700000000013e-05, 5.25409999999997e-05, 5.25279999999996e-05, 5.251400000000003e-05, 5.25279999999996e-05, 5.25279999999996e-05, 5.258299999999841e-05, 5.25279999999996e-05, 5.252800000000307e-05, 5.254200000000264e-05, 5.2471999999997854e-05, 5.256999999999831e-05, 5.25279999999996e-05, 5.254199999999917e-05, 5.254200000000264e-05, 5.251400000000003e-05, 5.25409999999997e-05, 5.25279999999996e-05, 5.255499999999927e-05, 5.251400000000003e-05, 5.251400000000003e-05, 5.251400000000003e-05, 5.251400000000003e-05, 5.251400000000003e-05, 5.251400000000003e-05, 5.252800000000307e-05, 5.254200000000264e-05]</msg>
<status status="PASS" starttime="20201029 18:18:28.465" endtime="20201029 18:18:28.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.456" endtime="20201029 18:18:28.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.067" endtime="20201029 18:18:28.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.044" endtime="20201029 18:18:28.471"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:28.476" endtime="20201029 18:18:28.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.473" endtime="20201029 18:18:28.499"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.510" endtime="20201029 18:18:28.525"></status>
</kw>
<msg timestamp="20201029 18:18:28.525" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.509" endtime="20201029 18:18:28.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.527" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.526" endtime="20201029 18:18:28.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.529" endtime="20201029 18:18:28.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.506" endtime="20201029 18:18:28.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.504" endtime="20201029 18:18:28.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.538" endtime="20201029 18:18:28.823"></status>
</kw>
<msg timestamp="20201029 18:18:28.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022689306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022750042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:28.536" endtime="20201029 18:18:28.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022689306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022750042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:28.827" endtime="20201029 18:18:28.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.835" endtime="20201029 18:18:28.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.534" endtime="20201029 18:18:28.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.532" endtime="20201029 18:18:28.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:28.844" level="INFO">${PHILIP_RES} = [{'diff': 6.0736000000002205e-05}, {'diff': 6.0764000000001345e-05}, {'diff': 6.0833999999999194e-05}, {'diff': 6.0778000000000915e-05}, {'diff': 6.0750000000001775e-05}, {'diff': 6.0778000000000915e-...</msg>
<status status="PASS" starttime="20201029 18:18:28.841" endtime="20201029 18:18:28.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:28.848" level="INFO">${RESULT} = {'diff': [6.0736000000002205e-05, 6.0764000000001345e-05, 6.0833999999999194e-05, 6.0778000000000915e-05, 6.0750000000001775e-05, 6.0778000000000915e-05, 6.0764000000001345e-05, 6.0763999999997875e-05...</msg>
<status status="PASS" starttime="20201029 18:18:28.845" endtime="20201029 18:18:28.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.853" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:28.852" endtime="20201029 18:18:28.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.855" level="INFO">VALUE: [6.0736000000002205e-05, 6.0764000000001345e-05, 6.0833999999999194e-05, 6.0778000000000915e-05, 6.0750000000001775e-05, 6.0778000000000915e-05, 6.0764000000001345e-05, 6.0763999999997875e-05, 6.079099999999754e-05, 6.0806000000000054e-05, 6.0778000000000915e-05, 6.080500000000058e-05, 6.0764000000001345e-05, 6.0778000000000915e-05, 6.0778000000000915e-05, 6.077699999999797e-05, 6.0791999999997015e-05, 6.081900000000015e-05, 6.077699999999797e-05, 6.0792000000000485e-05, 6.0792000000000485e-05, 6.0764000000001345e-05, 6.0778000000000915e-05, 6.0792000000000485e-05, 6.0777999999997445e-05, 6.079099999999754e-05, 6.0777999999997445e-05, 6.0806000000000054e-05, 6.0778000000000915e-05, 6.0778000000000915e-05, 6.0792000000000485e-05, 6.080500000000058e-05, 6.079099999999754e-05, 6.0721999999999166e-05, 6.0792000000000485e-05, 6.079100000000101e-05, 6.0833999999999194e-05, 6.0750000000001775e-05, 6.0764000000001345e-05, 6.0778000000000915e-05, 6.0819999999999624e-05, 6.0763999999997875e-05, 6.07629999999984e-05, 6.0777999999997445e-05, 6.0763999999997875e-05, 6.077700000000144e-05, 6.0778000000000915e-05, 6.0778000000000915e-05, 6.0763999999997875e-05, 6.083299999999972e-05]</msg>
<status status="PASS" starttime="20201029 18:18:28.854" endtime="20201029 18:18:28.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.849" endtime="20201029 18:18:28.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.501" endtime="20201029 18:18:28.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.472" endtime="20201029 18:18:28.857"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:28.867" endtime="20201029 18:18:28.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.858" endtime="20201029 18:18:28.887"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.895" endtime="20201029 18:18:28.910"></status>
</kw>
<msg timestamp="20201029 18:18:28.911" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.894" endtime="20201029 18:18:28.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.915" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.912" endtime="20201029 18:18:28.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.916" endtime="20201029 18:18:28.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.891" endtime="20201029 18:18:28.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.889" endtime="20201029 18:18:28.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.937" endtime="20201029 18:18:29.235"></status>
</kw>
<msg timestamp="20201029 18:18:29.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018009528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018078819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:28.936" endtime="20201029 18:18:29.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018009528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018078819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:29.244" endtime="20201029 18:18:29.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.263" endtime="20201029 18:18:29.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.933" endtime="20201029 18:18:29.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.929" endtime="20201029 18:18:29.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:29.276" level="INFO">${PHILIP_RES} = [{'diff': 6.92909999999991e-05}, {'diff': 6.933300000000128e-05}, {'diff': 6.937499999999999e-05}, {'diff': 6.936100000000042e-05}, {'diff': 6.932000000000119e-05}, {'diff': 6.934799999999686e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:29.269" endtime="20201029 18:18:29.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:29.285" level="INFO">${RESULT} = {'diff': [6.92909999999991e-05, 6.933300000000128e-05, 6.937499999999999e-05, 6.936100000000042e-05, 6.932000000000119e-05, 6.934799999999686e-05, 6.934800000000033e-05, 6.933300000000128e-05, 6.93330...</msg>
<status status="PASS" starttime="20201029 18:18:29.278" endtime="20201029 18:18:29.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.294" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:29.292" endtime="20201029 18:18:29.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.299" level="INFO">VALUE: [6.92909999999991e-05, 6.933300000000128e-05, 6.937499999999999e-05, 6.936100000000042e-05, 6.932000000000119e-05, 6.934799999999686e-05, 6.934800000000033e-05, 6.933300000000128e-05, 6.933300000000128e-05, 6.933300000000128e-05, 6.934699999999738e-05, 6.931900000000171e-05, 6.933400000000076e-05, 6.934800000000033e-05, 6.933300000000128e-05, 6.933299999999781e-05, 6.934699999999738e-05, 6.936100000000042e-05, 6.934700000000085e-05, 6.933400000000076e-05, 6.934800000000033e-05, 6.934699999999738e-05, 6.933299999999781e-05, 6.933300000000128e-05, 6.936100000000042e-05, 6.936100000000042e-05, 6.93619999999999e-05, 6.931999999999772e-05, 6.934700000000085e-05, 6.933300000000128e-05, 6.933300000000128e-05, 6.934700000000085e-05, 6.938899999999956e-05, 6.933400000000076e-05, 6.933400000000076e-05, 6.937499999999999e-05, 6.933300000000128e-05, 6.933299999999781e-05, 6.933299999999781e-05, 6.934699999999738e-05, 6.937499999999999e-05, 6.934800000000033e-05, 6.934700000000085e-05, 6.936099999999695e-05, 6.924999999999987e-05, 6.931900000000171e-05, 6.933300000000128e-05, 6.933400000000076e-05, 6.929199999999858e-05, 6.934699999999738e-05]</msg>
<status status="PASS" starttime="20201029 18:18:29.296" endtime="20201029 18:18:29.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.287" endtime="20201029 18:18:29.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.887" endtime="20201029 18:18:29.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.857" endtime="20201029 18:18:29.304"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:29.309" endtime="20201029 18:18:29.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.306" endtime="20201029 18:18:29.329"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.338" endtime="20201029 18:18:29.353"></status>
</kw>
<msg timestamp="20201029 18:18:29.354" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.336" endtime="20201029 18:18:29.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.356" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.355" endtime="20201029 18:18:29.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.357" endtime="20201029 18:18:29.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.333" endtime="20201029 18:18:29.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.331" endtime="20201029 18:18:29.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.366" endtime="20201029 18:18:29.653"></status>
</kw>
<msg timestamp="20201029 18:18:29.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017655333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017733569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:29.365" endtime="20201029 18:18:29.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017655333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017733569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:29.657" endtime="20201029 18:18:29.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.665" endtime="20201029 18:18:29.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.362" endtime="20201029 18:18:29.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.360" endtime="20201029 18:18:29.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:29.671" level="INFO">${PHILIP_RES} = [{'diff': 7.823600000000236e-05}, {'diff': 7.820799999999975e-05}, {'diff': 7.822199999999932e-05}, {'diff': 7.818000000000061e-05}, {'diff': 7.822199999999932e-05}, {'diff': 7.823599999999889e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:29.668" endtime="20201029 18:18:29.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:29.676" level="INFO">${RESULT} = {'diff': [7.823600000000236e-05, 7.820799999999975e-05, 7.822199999999932e-05, 7.818000000000061e-05, 7.822199999999932e-05, 7.823599999999889e-05, 7.819400000000018e-05, 7.822199999999932e-05, 7.8207...</msg>
<status status="PASS" starttime="20201029 18:18:29.672" endtime="20201029 18:18:29.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.680" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:29.679" endtime="20201029 18:18:29.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.683" level="INFO">VALUE: [7.823600000000236e-05, 7.820799999999975e-05, 7.822199999999932e-05, 7.818000000000061e-05, 7.822199999999932e-05, 7.823599999999889e-05, 7.819400000000018e-05, 7.822199999999932e-05, 7.820799999999975e-05, 7.820799999999975e-05, 7.820799999999975e-05, 7.822199999999932e-05, 7.822199999999932e-05, 7.819499999999965e-05, 7.823599999999889e-05, 7.820899999999922e-05, 7.823599999999889e-05, 7.819499999999965e-05, 7.820799999999975e-05, 7.816700000000051e-05, 7.823599999999889e-05, 7.820899999999922e-05, 7.819400000000018e-05, 7.820899999999922e-05, 7.822199999999932e-05, 7.822200000000279e-05, 7.823600000000236e-05, 7.820899999999922e-05, 7.820799999999975e-05, 7.820899999999922e-05, 7.820799999999975e-05, 7.820899999999922e-05, 7.819400000000018e-05, 7.823699999999836e-05, 7.820799999999975e-05, 7.820899999999922e-05, 7.824999999999846e-05, 7.815300000000094e-05, 7.822200000000279e-05, 7.818100000000008e-05, 7.822199999999932e-05, 7.816699999999704e-05, 7.823599999999889e-05, 7.820899999999922e-05, 7.822199999999932e-05, 7.823599999999889e-05, 7.820799999999975e-05, 7.822199999999932e-05, 7.822199999999932e-05, 7.822199999999932e-05]</msg>
<status status="PASS" starttime="20201029 18:18:29.681" endtime="20201029 18:18:29.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.677" endtime="20201029 18:18:29.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.330" endtime="20201029 18:18:29.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.305" endtime="20201029 18:18:29.685"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:29.687" endtime="20201029 18:18:29.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.686" endtime="20201029 18:18:29.707"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.715" endtime="20201029 18:18:29.733"></status>
</kw>
<msg timestamp="20201029 18:18:29.733" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.713" endtime="20201029 18:18:29.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.736" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.734" endtime="20201029 18:18:29.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.737" endtime="20201029 18:18:29.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.711" endtime="20201029 18:18:29.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.709" endtime="20201029 18:18:29.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.746" endtime="20201029 18:18:30.046"></status>
</kw>
<msg timestamp="20201029 18:18:30.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017715778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017803111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:29.744" endtime="20201029 18:18:30.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017715778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017803111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:30.059" endtime="20201029 18:18:30.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.078" endtime="20201029 18:18:30.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.741" endtime="20201029 18:18:30.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.740" endtime="20201029 18:18:30.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:30.094" level="INFO">${PHILIP_RES} = [{'diff': 8.733299999999847e-05}, {'diff': 8.738900000000022e-05}, {'diff': 8.738800000000074e-05}, {'diff': 8.741699999999936e-05}, {'diff': 8.736200000000055e-05}, {'diff': 8.741599999999988e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:30.087" endtime="20201029 18:18:30.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:30.104" level="INFO">${RESULT} = {'diff': [8.733299999999847e-05, 8.738900000000022e-05, 8.738800000000074e-05, 8.741699999999936e-05, 8.736200000000055e-05, 8.741599999999988e-05, 8.738900000000022e-05, 8.737500000000065e-05, 8.7415...</msg>
<status status="PASS" starttime="20201029 18:18:30.097" endtime="20201029 18:18:30.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.113" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:30.111" endtime="20201029 18:18:30.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.119" level="INFO">VALUE: [8.733299999999847e-05, 8.738900000000022e-05, 8.738800000000074e-05, 8.741699999999936e-05, 8.736200000000055e-05, 8.741599999999988e-05, 8.738900000000022e-05, 8.737500000000065e-05, 8.741599999999988e-05, 8.740299999999979e-05, 8.747199999999816e-05, 8.740200000000031e-05, 8.747200000000163e-05, 8.744399999999902e-05, 8.74310000000024e-05, 8.738900000000022e-05, 8.742999999999945e-05, 8.741599999999988e-05, 8.738900000000022e-05, 8.741599999999988e-05, 8.741699999999936e-05, 8.743099999999893e-05, 8.740299999999979e-05, 8.740299999999979e-05, 8.741699999999936e-05, 8.738900000000022e-05, 8.740299999999979e-05, 8.741699999999936e-05, 8.738900000000022e-05, 8.740299999999979e-05, 8.740299999999979e-05, 8.741599999999988e-05, 8.740299999999979e-05, 8.740299999999979e-05, 8.738799999999727e-05, 8.737500000000065e-05, 8.740300000000326e-05, 8.741599999999988e-05, 8.737500000000065e-05, 8.740299999999979e-05, 8.741599999999988e-05, 8.740299999999979e-05, 8.738900000000022e-05, 8.743000000000292e-05, 8.743099999999893e-05, 8.738900000000022e-05, 8.733300000000194e-05, 8.740299999999979e-05, 8.741599999999988e-05, 8.740200000000031e-05]</msg>
<status status="PASS" starttime="20201029 18:18:30.116" endtime="20201029 18:18:30.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.106" endtime="20201029 18:18:30.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.708" endtime="20201029 18:18:30.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.685" endtime="20201029 18:18:30.121"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:30.123" endtime="20201029 18:18:30.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.122" endtime="20201029 18:18:30.143"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.152" endtime="20201029 18:18:30.170"></status>
</kw>
<msg timestamp="20201029 18:18:30.170" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.150" endtime="20201029 18:18:30.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.173" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.171" endtime="20201029 18:18:30.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.174" endtime="20201029 18:18:30.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.148" endtime="20201029 18:18:30.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.146" endtime="20201029 18:18:30.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.184" endtime="20201029 18:18:30.470"></status>
</kw>
<msg timestamp="20201029 18:18:30.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018246847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018343722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:30.183" endtime="20201029 18:18:30.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018246847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018343722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:30.474" endtime="20201029 18:18:30.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.482" endtime="20201029 18:18:30.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.180" endtime="20201029 18:18:30.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.178" endtime="20201029 18:18:30.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:30.489" level="INFO">${PHILIP_RES} = [{'diff': 9.687499999999974e-05}, {'diff': 9.694400000000158e-05}, {'diff': 9.693099999999802e-05}, {'diff': 9.691699999999845e-05}, {'diff': 9.688799999999984e-05}, {'diff': 9.693099999999802e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:30.486" endtime="20201029 18:18:30.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:30.493" level="INFO">${RESULT} = {'diff': [9.687499999999974e-05, 9.694400000000158e-05, 9.693099999999802e-05, 9.691699999999845e-05, 9.688799999999984e-05, 9.693099999999802e-05, 9.691699999999845e-05, 9.694400000000158e-05, 9.6902...</msg>
<status status="PASS" starttime="20201029 18:18:30.490" endtime="20201029 18:18:30.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.497" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:30.496" endtime="20201029 18:18:30.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.499" level="INFO">VALUE: [9.687499999999974e-05, 9.694400000000158e-05, 9.693099999999802e-05, 9.691699999999845e-05, 9.688799999999984e-05, 9.693099999999802e-05, 9.691699999999845e-05, 9.694400000000158e-05, 9.690299999999888e-05, 9.691700000000192e-05, 9.687499999999974e-05, 9.688900000000278e-05, 9.68470000000006e-05, 9.694500000000106e-05, 9.691700000000192e-05, 9.690299999999888e-05, 9.690299999999888e-05, 9.690300000000235e-05, 9.691699999999845e-05, 9.690299999999888e-05, 9.69019999999994e-05, 9.688899999999931e-05, 9.691700000000192e-05, 9.681900000000146e-05, 9.688899999999931e-05, 9.691700000000192e-05, 9.69019999999994e-05, 9.690200000000287e-05, 9.688899999999931e-05, 9.690299999999888e-05, 9.690300000000235e-05, 9.691699999999845e-05, 9.690299999999888e-05, 9.69019999999994e-05, 9.688899999999931e-05, 9.691700000000192e-05, 9.688899999999931e-05, 9.693000000000201e-05, 9.690300000000235e-05, 9.692999999999855e-05, 9.684800000000007e-05, 9.691699999999845e-05, 9.688899999999931e-05, 9.693000000000201e-05, 9.691699999999845e-05, 9.690299999999888e-05, 9.686100000000017e-05, 9.686100000000017e-05, 9.691700000000192e-05, 9.690299999999888e-05]</msg>
<status status="PASS" starttime="20201029 18:18:30.498" endtime="20201029 18:18:30.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.494" endtime="20201029 18:18:30.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.144" endtime="20201029 18:18:30.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.121" endtime="20201029 18:18:30.502"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:30.504" endtime="20201029 18:18:30.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.503" endtime="20201029 18:18:30.524"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.532" endtime="20201029 18:18:30.551"></status>
</kw>
<msg timestamp="20201029 18:18:30.551" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.531" endtime="20201029 18:18:30.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.554" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.552" endtime="20201029 18:18:30.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.555" endtime="20201029 18:18:30.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.528" endtime="20201029 18:18:30.557"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.526" endtime="20201029 18:18:30.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.564" endtime="20201029 18:18:30.858"></status>
</kw>
<msg timestamp="20201029 18:18:30.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017605514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017712167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:30.562" endtime="20201029 18:18:30.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017605514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017712167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:30.866" endtime="20201029 18:18:30.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.884" endtime="20201029 18:18:30.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.560" endtime="20201029 18:18:30.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.558" endtime="20201029 18:18:30.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:30.897" level="INFO">${PHILIP_RES} = [{'diff': 0.00010665300000000169}, {'diff': 0.00010672200000000007}, {'diff': 0.00010672299999999954}, {'diff': 0.00010672200000000007}, {'diff': 0.00010677799999999835}, {'diff': 0.000106736000000003...</msg>
<status status="PASS" starttime="20201029 18:18:30.890" endtime="20201029 18:18:30.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:30.907" level="INFO">${RESULT} = {'diff': [0.00010665300000000169, 0.00010672200000000007, 0.00010672299999999954, 0.00010672200000000007, 0.00010677799999999835, 0.0001067360000000031, 0.00010677800000000182, 0.00010672200000000007,...</msg>
<status status="PASS" starttime="20201029 18:18:30.899" endtime="20201029 18:18:30.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.916" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:30.914" endtime="20201029 18:18:30.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.921" level="INFO">VALUE: [0.00010665300000000169, 0.00010672200000000007, 0.00010672299999999954, 0.00010672200000000007, 0.00010677799999999835, 0.0001067360000000031, 0.00010677800000000182, 0.00010672200000000007, 0.00010672200000000007, 0.00010670899999999997, 0.00010673599999999964, 0.00010672299999999954, 0.00010672200000000007, 0.00010672200000000007, 0.0001067499999999992, 0.00010672200000000007, 0.00010672200000000007, 0.00010669400000000093, 0.0001067080000000005, 0.0001067499999999992, 0.00010670899999999997, 0.00010676399999999878, 0.00010670899999999997, 0.00010677799999999835, 0.00010673599999999964, 0.00010672200000000007, 0.00010670899999999997, 0.00010670799999999703, 0.00010672200000000007, 0.00010673599999999964, 0.00010673599999999964, 0.00010672200000000007, 0.0001067080000000005, 0.00010670899999999997, 0.00010673599999999964, 0.00010670899999999997, 0.00010668000000000136, 0.00010672200000000007, 0.00010680500000000148, 0.0001067080000000005, 0.0001067080000000005, 0.00010665200000000222, 0.00010672200000000007, 0.0001067080000000005, 0.00010670899999999997, 0.00010669399999999746, 0.00010666699999999779, 0.00010673599999999964, 0.00010677799999999835, 0.00010672200000000007]</msg>
<status status="PASS" starttime="20201029 18:18:30.918" endtime="20201029 18:18:30.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.909" endtime="20201029 18:18:30.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.525" endtime="20201029 18:18:30.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.502" endtime="20201029 18:18:30.925"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:30.930" endtime="20201029 18:18:30.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.927" endtime="20201029 18:18:30.950"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.959" endtime="20201029 18:18:30.978"></status>
</kw>
<msg timestamp="20201029 18:18:30.978" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.957" endtime="20201029 18:18:30.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.981" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.979" endtime="20201029 18:18:30.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.982" endtime="20201029 18:18:30.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.954" endtime="20201029 18:18:30.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.953" endtime="20201029 18:18:30.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.991" endtime="20201029 18:18:31.276"></status>
</kw>
<msg timestamp="20201029 18:18:31.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017772806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017889611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:30.989" endtime="20201029 18:18:31.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017772806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017889611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:31.280" endtime="20201029 18:18:31.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.288" endtime="20201029 18:18:31.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.987" endtime="20201029 18:18:31.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.985" endtime="20201029 18:18:31.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:31.296" level="INFO">${PHILIP_RES} = [{'diff': 0.00011680500000000107}, {'diff': 0.00011684699999999978}, {'diff': 0.00011681900000000064}, {'diff': 0.00011684699999999978}, {'diff': 0.00011681900000000064}, {'diff': 0.000116917000000001...</msg>
<status status="PASS" starttime="20201029 18:18:31.292" endtime="20201029 18:18:31.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:31.299" level="INFO">${RESULT} = {'diff': [0.00011680500000000107, 0.00011684699999999978, 0.00011681900000000064, 0.00011684699999999978, 0.00011681900000000064, 0.0001169170000000011, 0.00011683399999999969, 0.00011684699999999978,...</msg>
<status status="PASS" starttime="20201029 18:18:31.296" endtime="20201029 18:18:31.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.304" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:31.303" endtime="20201029 18:18:31.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.306" level="INFO">VALUE: [0.00011680500000000107, 0.00011684699999999978, 0.00011681900000000064, 0.00011684699999999978, 0.00011681900000000064, 0.0001169170000000011, 0.00011683399999999969, 0.00011684699999999978, 0.00011682000000000012, 0.00011683300000000021, 0.00011687499999999892, 0.00011683300000000021, 0.00011684699999999978, 0.00011684699999999978, 0.00011683399999999969, 0.0001169170000000011, 0.00011686099999999935, 0.00011682000000000012, 0.00011683300000000021, 0.00011686099999999935, 0.00011686099999999935, 0.00011683300000000021, 0.00011684699999999978, 0.00011684699999999978, 0.00011687499999999892, 0.00011683399999999969, 0.00011684699999999978, 0.00011683300000000021, 0.00011684699999999978, 0.00011679199999999751, 0.00011684699999999978, 0.00011693100000000067, 0.00011688900000000196, 0.00011686099999999935, 0.00011683399999999969, 0.00011683399999999969, 0.00011684700000000325, 0.00011684699999999978, 0.00011683300000000021, 0.00011683300000000021, 0.00011684699999999978, 0.00011684699999999978, 0.00011683399999999969, 0.00011684799999999926, 0.00011683399999999969, 0.00011684699999999978, 0.00011684699999999978, 0.00011686099999999935, 0.00011684699999999978, 0.00011684699999999978]</msg>
<status status="PASS" starttime="20201029 18:18:31.305" endtime="20201029 18:18:31.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.300" endtime="20201029 18:18:31.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.951" endtime="20201029 18:18:31.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.926" endtime="20201029 18:18:31.308"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:31.310" endtime="20201029 18:18:31.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.309" endtime="20201029 18:18:31.330"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.338" endtime="20201029 18:18:31.359"></status>
</kw>
<msg timestamp="20201029 18:18:31.360" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:31.337" endtime="20201029 18:18:31.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.363" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:31.361" endtime="20201029 18:18:31.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.364" endtime="20201029 18:18:31.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.334" endtime="20201029 18:18:31.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.332" endtime="20201029 18:18:31.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.376" endtime="20201029 18:18:31.662"></status>
</kw>
<msg timestamp="20201029 18:18:31.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017729014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017856264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:31.373" endtime="20201029 18:18:31.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017729014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017856264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:31.666" endtime="20201029 18:18:31.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.674" endtime="20201029 18:18:31.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.370" endtime="20201029 18:18:31.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.368" endtime="20201029 18:18:31.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:31.680" level="INFO">${PHILIP_RES} = [{'diff': 0.0001272499999999989}, {'diff': 0.00012730500000000117}, {'diff': 0.00012723599999999932}, {'diff': 0.0001272780000000015}, {'diff': 0.00012729200000000107}, {'diff': 0.00012729099999999813...</msg>
<status status="PASS" starttime="20201029 18:18:31.677" endtime="20201029 18:18:31.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:31.684" level="INFO">${RESULT} = {'diff': [0.0001272499999999989, 0.00012730500000000117, 0.00012723599999999932, 0.0001272780000000015, 0.00012729200000000107, 0.00012729099999999813, 0.00012726400000000193, 0.00012727799999999803, ...</msg>
<status status="PASS" starttime="20201029 18:18:31.681" endtime="20201029 18:18:31.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.689" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:31.688" endtime="20201029 18:18:31.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.691" level="INFO">VALUE: [0.0001272499999999989, 0.00012730500000000117, 0.00012723599999999932, 0.0001272780000000015, 0.00012729200000000107, 0.00012729099999999813, 0.00012726400000000193, 0.00012727799999999803, 0.00012729200000000107, 0.0001272910000000016, 0.00012731900000000074, 0.00012729200000000107, 0.00012730600000000064, 0.00012734799999999935, 0.00012734699999999988, 0.00012726400000000193, 0.0001272919999999976, 0.00012725000000000236, 0.0001272780000000015, 0.0001272919999999976, 0.0001272780000000015, 0.00012727699999999856, 0.00012727799999999803, 0.00012729200000000107, 0.00012726399999999846, 0.00012729099999999813, 0.00012729200000000107, 0.00012727799999999803, 0.0001272780000000015, 0.00012727700000000203, 0.0001273330000000003, 0.00012726400000000193, 0.00012726400000000193, 0.0001273049999999977, 0.00012729200000000107, 0.00012726399999999846, 0.00012727799999999803, 0.00012727700000000203, 0.00012726399999999846, 0.0001273200000000002, 0.0001272780000000015, 0.00012727699999999856, 0.00012726399999999846, 0.00012729200000000107, 0.0001272919999999976, 0.0001272910000000016, 0.00012729200000000107, 0.00012723599999999932, 0.0001272780000000015, 0.00012734699999999988]</msg>
<status status="PASS" starttime="20201029 18:18:31.690" endtime="20201029 18:18:31.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.685" endtime="20201029 18:18:31.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.331" endtime="20201029 18:18:31.694"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.308" endtime="20201029 18:18:31.694"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:31.696" endtime="20201029 18:18:31.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.695" endtime="20201029 18:18:31.716"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.724" endtime="20201029 18:18:31.746"></status>
</kw>
<msg timestamp="20201029 18:18:31.747" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:31.723" endtime="20201029 18:18:31.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.749" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:31.748" endtime="20201029 18:18:31.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.750" endtime="20201029 18:18:31.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.720" endtime="20201029 18:18:31.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.718" endtime="20201029 18:18:31.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.760" endtime="20201029 18:18:32.045"></status>
</kw>
<msg timestamp="20201029 18:18:32.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017831042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017969, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:31.758" endtime="20201029 18:18:32.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017831042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017969, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:32.049" endtime="20201029 18:18:32.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.056" endtime="20201029 18:18:32.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.755" endtime="20201029 18:18:32.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.754" endtime="20201029 18:18:32.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:32.063" level="INFO">${PHILIP_RES} = [{'diff': 0.00013795800000000052}, {'diff': 0.00013804099999999847}, {'diff': 0.00013804199999999794}, {'diff': 0.00013804200000000141}, {'diff': 0.00013805600000000098}, {'diff': 0.000138027999999998...</msg>
<status status="PASS" starttime="20201029 18:18:32.060" endtime="20201029 18:18:32.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:32.067" level="INFO">${RESULT} = {'diff': [0.00013795800000000052, 0.00013804099999999847, 0.00013804199999999794, 0.00013804200000000141, 0.00013805600000000098, 0.00013802799999999837, 0.00013805600000000098, 0.00013797300000000304...</msg>
<status status="PASS" starttime="20201029 18:18:32.064" endtime="20201029 18:18:32.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.072" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:32.071" endtime="20201029 18:18:32.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.074" level="INFO">VALUE: [0.00013795800000000052, 0.00013804099999999847, 0.00013804199999999794, 0.00013804200000000141, 0.00013805600000000098, 0.00013802799999999837, 0.00013805600000000098, 0.00013797300000000304, 0.00013801400000000227, 0.0001380550000000015, 0.00013805499999999804, 0.00013804099999999847, 0.00013802800000000184, 0.00013804200000000141, 0.0001380139999999988, 0.00013804199999999794, 0.00013804200000000141, 0.00013802800000000184, 0.00013804200000000141, 0.0001380269999999989, 0.0001380550000000015, 0.00013809700000000022, 0.00013802800000000184, 0.00013802799999999837, 0.00013802799999999837, 0.00013802800000000184, 0.00013804200000000141, 0.00013802799999999837, 0.0001380139999999988, 0.00013802799999999837, 0.00013802700000000237, 0.00013801400000000227, 0.00013802799999999837, 0.00013804199999999794, 0.00013798599999999966, 0.00013807000000000055, 0.00013802799999999837, 0.00013802799999999837, 0.00013802799999999837, 0.00013802800000000184, 0.00013802700000000237, 0.0001380269999999989, 0.00013799999999999923, 0.00013804200000000141, 0.00013804200000000141, 0.00013804200000000141, 0.00013802799999999837, 0.0001380139999999988, 0.00013804199999999794, 0.0001380139999999988]</msg>
<status status="PASS" starttime="20201029 18:18:32.073" endtime="20201029 18:18:32.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.068" endtime="20201029 18:18:32.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.717" endtime="20201029 18:18:32.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.694" endtime="20201029 18:18:32.076"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:32.079" endtime="20201029 18:18:32.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.077" endtime="20201029 18:18:32.098"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.106" endtime="20201029 18:18:32.131"></status>
</kw>
<msg timestamp="20201029 18:18:32.131" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.105" endtime="20201029 18:18:32.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.134" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.132" endtime="20201029 18:18:32.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.135" endtime="20201029 18:18:32.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.102" endtime="20201029 18:18:32.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.100" endtime="20201029 18:18:32.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.144" endtime="20201029 18:18:32.430"></status>
</kw>
<msg timestamp="20201029 18:18:32.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017636847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017785931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.142" endtime="20201029 18:18:32.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017636847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017785931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.434" endtime="20201029 18:18:32.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.442" endtime="20201029 18:18:32.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.140" endtime="20201029 18:18:32.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.138" endtime="20201029 18:18:32.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:32.452" level="INFO">${PHILIP_RES} = [{'diff': 0.00014908400000000072}, {'diff': 0.00014909699999999734}, {'diff': 0.00014913899999999952}, {'diff': 0.00014908300000000124}, {'diff': 0.00014911100000000038}, {'diff': 0.000149111000000000...</msg>
<status status="PASS" starttime="20201029 18:18:32.448" endtime="20201029 18:18:32.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:32.456" level="INFO">${RESULT} = {'diff': [0.00014908400000000072, 0.00014909699999999734, 0.00014913899999999952, 0.00014908300000000124, 0.00014911100000000038, 0.00014911100000000038, 0.00014908299999999777, 0.0001490970000000008,...</msg>
<status status="PASS" starttime="20201029 18:18:32.453" endtime="20201029 18:18:32.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.461" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:32.459" endtime="20201029 18:18:32.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.463" level="INFO">VALUE: [0.00014908400000000072, 0.00014909699999999734, 0.00014913899999999952, 0.00014908300000000124, 0.00014911100000000038, 0.00014911100000000038, 0.00014908299999999777, 0.0001490970000000008, 0.0001490970000000008, 0.0001490970000000008, 0.00014909699999999734, 0.00014909699999999734, 0.00014911100000000038, 0.00014911100000000038, 0.00014911199999999986, 0.00014909800000000029, 0.00014911100000000038, 0.00014902800000000244, 0.0001490970000000008, 0.00014911100000000038, 0.00014909699999999734, 0.00014902799999999897, 0.0001490970000000008, 0.00014911100000000038, 0.00014908299999999777, 0.00014912499999999995, 0.00014909699999999734, 0.00014908300000000124, 0.0001490970000000008, 0.00014911100000000038, 0.0001490689999999982, 0.00014911100000000038, 0.00014911100000000038, 0.00014911100000000038, 0.00014915300000000256, 0.00014911100000000038, 0.00014912499999999995, 0.00014907000000000115, 0.00014912499999999995, 0.0001490970000000008, 0.00014909699999999734, 0.00014908300000000124, 0.00014911100000000038, 0.0001490689999999982, 0.00014908300000000124, 0.0001490970000000008, 0.00014911100000000038, 0.00014911100000000038, 0.00014911100000000038, 0.00014911100000000038]</msg>
<status status="PASS" starttime="20201029 18:18:32.462" endtime="20201029 18:18:32.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.457" endtime="20201029 18:18:32.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.099" endtime="20201029 18:18:32.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.077" endtime="20201029 18:18:32.465"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:32.467" endtime="20201029 18:18:32.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.466" endtime="20201029 18:18:32.487"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.495" endtime="20201029 18:18:32.519"></status>
</kw>
<msg timestamp="20201029 18:18:32.520" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.494" endtime="20201029 18:18:32.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.522" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.521" endtime="20201029 18:18:32.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.523" endtime="20201029 18:18:32.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.491" endtime="20201029 18:18:32.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.489" endtime="20201029 18:18:32.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.533" endtime="20201029 18:18:32.819"></status>
</kw>
<msg timestamp="20201029 18:18:32.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017647431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017807931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.532" endtime="20201029 18:18:32.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017647431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017807931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.823" endtime="20201029 18:18:32.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.830" endtime="20201029 18:18:32.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.529" endtime="20201029 18:18:32.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.527" endtime="20201029 18:18:32.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:32.837" level="INFO">${PHILIP_RES} = [{'diff': 0.00016049999999999745}, {'diff': 0.0001604719999999983}, {'diff': 0.00016047200000000178}, {'diff': 0.00016048599999999788}, {'diff': 0.0001604169999999995}, {'diff': 0.00016047300000000125...</msg>
<status status="PASS" starttime="20201029 18:18:32.834" endtime="20201029 18:18:32.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:32.841" level="INFO">${RESULT} = {'diff': [0.00016049999999999745, 0.0001604719999999983, 0.00016047200000000178, 0.00016048599999999788, 0.0001604169999999995, 0.00016047300000000125, 0.00016048599999999788, 0.00016047200000000178, ...</msg>
<status status="PASS" starttime="20201029 18:18:32.838" endtime="20201029 18:18:32.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.845" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:32.844" endtime="20201029 18:18:32.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.847" level="INFO">VALUE: [0.00016049999999999745, 0.0001604719999999983, 0.00016047200000000178, 0.00016048599999999788, 0.0001604169999999995, 0.00016047300000000125, 0.00016048599999999788, 0.00016047200000000178, 0.0001604719999999983, 0.00016047200000000178, 0.00016050000000000092, 0.0001604719999999983, 0.00016047200000000178, 0.00016045799999999874, 0.0001604719999999983, 0.00016047300000000125, 0.0001604719999999983, 0.00016047200000000178, 0.00016048700000000082, 0.00016045799999999874, 0.00016054199999999963, 0.0001605140000000005, 0.00016047200000000178, 0.00016048599999999788, 0.0001604719999999983, 0.00016043100000000254, 0.00016048599999999788, 0.0001604580000000022, 0.00016047299999999778, 0.00016047200000000178, 0.00016047200000000178, 0.00016048599999999788, 0.00016048600000000135, 0.00016048599999999788, 0.00016048599999999788, 0.00016047300000000125, 0.00016048599999999788, 0.00016047200000000178, 0.0001603889999999969, 0.00016047200000000178, 0.00016048600000000135, 0.00016045900000000168, 0.0001604859999999944, 0.00016047200000000178, 0.00016047200000000178, 0.00016047300000000125, 0.0001604580000000022, 0.00016054100000000016, 0.00016045900000000168, 0.00016048600000000135]</msg>
<status status="PASS" starttime="20201029 18:18:32.846" endtime="20201029 18:18:32.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.841" endtime="20201029 18:18:32.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.488" endtime="20201029 18:18:32.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.465" endtime="20201029 18:18:32.850"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:32.852" endtime="20201029 18:18:32.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.851" endtime="20201029 18:18:32.872"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.880" endtime="20201029 18:18:32.906"></status>
</kw>
<msg timestamp="20201029 18:18:32.906" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.879" endtime="20201029 18:18:32.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.909" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.907" endtime="20201029 18:18:32.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.910" endtime="20201029 18:18:32.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.876" endtime="20201029 18:18:32.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.874" endtime="20201029 18:18:32.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.919" endtime="20201029 18:18:33.205"></status>
</kw>
<msg timestamp="20201029 18:18:33.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017606722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017778833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.917" endtime="20201029 18:18:33.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017606722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017778833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:33.209" endtime="20201029 18:18:33.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.216" endtime="20201029 18:18:33.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.915" endtime="20201029 18:18:33.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.913" endtime="20201029 18:18:33.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:33.223" level="INFO">${PHILIP_RES} = [{'diff': 0.0001721109999999991}, {'diff': 0.00017216699999999738}, {'diff': 0.0001721390000000017}, {'diff': 0.00017215300000000128}, {'diff': 0.00017220800000000008}, {'diff': 0.00017211200000000204...</msg>
<status status="PASS" starttime="20201029 18:18:33.220" endtime="20201029 18:18:33.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:33.228" level="INFO">${RESULT} = {'diff': [0.0001721109999999991, 0.00017216699999999738, 0.0001721390000000017, 0.00017215300000000128, 0.00017220800000000008, 0.00017211200000000204, 0.00017213799999999876, 0.00017215300000000128, ...</msg>
<status status="PASS" starttime="20201029 18:18:33.224" endtime="20201029 18:18:33.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.232" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:33.231" endtime="20201029 18:18:33.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.234" level="INFO">VALUE: [0.0001721109999999991, 0.00017216699999999738, 0.0001721390000000017, 0.00017215300000000128, 0.00017220800000000008, 0.00017211200000000204, 0.00017213799999999876, 0.00017215300000000128, 0.00017216700000000085, 0.00017216700000000085, 0.00017212499999999867, 0.00017216699999999738, 0.00017216600000000137, 0.0001721659999999979, 0.0001721529999999978, 0.000172195, 0.000172195, 0.00017222199999999965, 0.0001721529999999978, 0.00017213799999999876, 0.00017218000000000094, 0.00017216700000000085, 0.00017218100000000042, 0.00017216700000000085, 0.0001721390000000017, 0.00017220800000000008, 0.00017217999999999747, 0.00017223599999999922, 0.00017216700000000085, 0.0001721529999999978, 0.0001721940000000005, 0.00017213899999999824, 0.0001721520000000018, 0.00017218000000000094, 0.00017216699999999738, 0.00017216700000000085, 0.00017216699999999738, 0.00017220800000000008, 0.00017216600000000137, 0.00017217999999999747, 0.00017218100000000042, 0.00017216700000000085, 0.00017213899999999477, 0.00017211100000000257, 0.00017218000000000094, 0.00017216599999999443, 0.00017218000000000094, 0.00017215300000000128, 0.0001721390000000017, 0.00017216700000000085]</msg>
<status status="PASS" starttime="20201029 18:18:33.233" endtime="20201029 18:18:33.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.228" endtime="20201029 18:18:33.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.873" endtime="20201029 18:18:33.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.850" endtime="20201029 18:18:33.236"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:33.238" endtime="20201029 18:18:33.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.237" endtime="20201029 18:18:33.258"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.266" endtime="20201029 18:18:33.292"></status>
</kw>
<msg timestamp="20201029 18:18:33.292" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:33.265" endtime="20201029 18:18:33.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.295" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:33.293" endtime="20201029 18:18:33.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.296" endtime="20201029 18:18:33.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.262" endtime="20201029 18:18:33.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.260" endtime="20201029 18:18:33.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.305" endtime="20201029 18:18:33.591"></status>
</kw>
<msg timestamp="20201029 18:18:33.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017715139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01789925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:33.303" endtime="20201029 18:18:33.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017715139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01789925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:33.595" endtime="20201029 18:18:33.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.602" endtime="20201029 18:18:33.605"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.301" endtime="20201029 18:18:33.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.299" endtime="20201029 18:18:33.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:33.610" level="INFO">${PHILIP_RES} = [{'diff': 0.00018411099999999722}, {'diff': 0.00018416699999999897}, {'diff': 0.00018415300000000287}, {'diff': 0.0001841529999999994}, {'diff': 0.0001841529999999994}, {'diff': 0.00018415199999999993...</msg>
<status status="PASS" starttime="20201029 18:18:33.607" endtime="20201029 18:18:33.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:33.614" level="INFO">${RESULT} = {'diff': [0.00018411099999999722, 0.00018416699999999897, 0.00018415300000000287, 0.0001841529999999994, 0.0001841529999999994, 0.00018415199999999993, 0.00018418099999999854, 0.00018417999999999907, ...</msg>
<status status="PASS" starttime="20201029 18:18:33.611" endtime="20201029 18:18:33.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.618" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:33.617" endtime="20201029 18:18:33.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.620" level="INFO">VALUE: [0.00018411099999999722, 0.00018416699999999897, 0.00018415300000000287, 0.0001841529999999994, 0.0001841529999999994, 0.00018415199999999993, 0.00018418099999999854, 0.00018417999999999907, 0.00018411099999999722, 0.0001841659999999995, 0.00018416700000000244, 0.00018415199999999993, 0.0001841529999999994, 0.00018418000000000254, 0.00018416699999999897, 0.00018416600000000297, 0.0001841529999999994, 0.00018413899999999983, 0.00018416700000000244, 0.00018417999999999907, 0.0001841529999999994, 0.00018415199999999993, 0.00018418099999999854, 0.00018416600000000297, 0.00018416699999999897, 0.00018415199999999993, 0.00018416700000000244, 0.0001841659999999995, 0.000184181000000002, 0.00018422200000000125, 0.00018423600000000082, 0.0001841659999999995, 0.00018418099999999854, 0.0001841659999999995, 0.00018416699999999897, 0.0001841659999999995, 0.000184181000000002, 0.00018417999999999907, 0.00018418099999999854, 0.0001841110000000007, 0.0001841670000000059, 0.0001841529999999994, 0.00018409700000000112, 0.0001841659999999995, 0.0001841529999999994, 0.00018412500000000026, 0.00018417999999999907, 0.0001841659999999995, 0.00018416699999999897, 0.00018412500000000026]</msg>
<status status="PASS" starttime="20201029 18:18:33.619" endtime="20201029 18:18:33.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.615" endtime="20201029 18:18:33.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.259" endtime="20201029 18:18:33.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.236" endtime="20201029 18:18:33.622"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:33.625" endtime="20201029 18:18:33.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.623" endtime="20201029 18:18:33.645"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.653" endtime="20201029 18:18:33.680"></status>
</kw>
<msg timestamp="20201029 18:18:33.681" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:33.651" endtime="20201029 18:18:33.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.683" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:33.682" endtime="20201029 18:18:33.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.684" endtime="20201029 18:18:33.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.649" endtime="20201029 18:18:33.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.647" endtime="20201029 18:18:33.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.694" endtime="20201029 18:18:33.979"></status>
</kw>
<msg timestamp="20201029 18:18:33.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017519292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017715708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:33.693" endtime="20201029 18:18:33.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017519292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017715708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:33.983" endtime="20201029 18:18:33.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.991" endtime="20201029 18:18:33.993"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.690" endtime="20201029 18:18:33.993"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.688" endtime="20201029 18:18:33.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:33.997" level="INFO">${PHILIP_RES} = [{'diff': 0.00019641600000000134}, {'diff': 0.00019651399999999833}, {'diff': 0.00019648700000000213}, {'diff': 0.00019652800000000137}, {'diff': 0.0001964859999999992}, {'diff': 0.0001964589999999995...</msg>
<status status="PASS" starttime="20201029 18:18:33.994" endtime="20201029 18:18:33.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:34.001" level="INFO">${RESULT} = {'diff': [0.00019641600000000134, 0.00019651399999999833, 0.00019648700000000213, 0.00019652800000000137, 0.0001964859999999992, 0.00019645899999999952, 0.00019648600000000266, 0.00019648600000000266,...</msg>
<status status="PASS" starttime="20201029 18:18:33.998" endtime="20201029 18:18:34.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.006" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:34.005" endtime="20201029 18:18:34.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.008" level="INFO">VALUE: [0.00019641600000000134, 0.00019651399999999833, 0.00019648700000000213, 0.00019652800000000137, 0.0001964859999999992, 0.00019645899999999952, 0.00019648600000000266, 0.00019648600000000266, 0.0001964729999999991, 0.00019651399999999833, 0.00019647199999999962, 0.00019650000000000223, 0.00019647199999999962, 0.00019647199999999962, 0.00019652800000000137, 0.0001965140000000018, 0.0001965279999999979, 0.00019647199999999962, 0.0001964859999999992, 0.00019650000000000223, 0.00019649999999999876, 0.00019647199999999962, 0.00019654200000000094, 0.00019648600000000266, 0.00019649999999999876, 0.00019647199999999962, 0.00019647199999999962, 0.00019647300000000256, 0.00019645800000000005, 0.0001964859999999992, 0.0001964729999999991, 0.0001964859999999992, 0.00019647199999999962, 0.00019645899999999952, 0.00019647199999999962, 0.0001964720000000031, 0.0001964720000000031, 0.0001964720000000031, 0.00019647199999999615, 0.00019647199999999615, 0.00019652800000000137, 0.00019647299999999562, 0.0001964720000000031, 0.00019648600000000266, 0.00019650000000000223, 0.00019645800000000352, 0.00019644499999999648, 0.00019648599999999572, 0.00019648599999999572, 0.0001965140000000018]</msg>
<status status="PASS" starttime="20201029 18:18:34.007" endtime="20201029 18:18:34.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.002" endtime="20201029 18:18:34.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.645" endtime="20201029 18:18:34.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.623" endtime="20201029 18:18:34.126"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:34.128" endtime="20201029 18:18:34.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.127" endtime="20201029 18:18:34.148"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.156" endtime="20201029 18:18:34.184"></status>
</kw>
<msg timestamp="20201029 18:18:34.185" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.155" endtime="20201029 18:18:34.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.187" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.186" endtime="20201029 18:18:34.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.188" endtime="20201029 18:18:34.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.152" endtime="20201029 18:18:34.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.150" endtime="20201029 18:18:34.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.197" endtime="20201029 18:18:34.489"></status>
</kw>
<msg timestamp="20201029 18:18:34.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017594764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017803875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.196" endtime="20201029 18:18:34.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017594764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017803875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.498" endtime="20201029 18:18:34.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.515" endtime="20201029 18:18:34.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.193" endtime="20201029 18:18:34.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.191" endtime="20201029 18:18:34.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:34.529" level="INFO">${PHILIP_RES} = [{'diff': 0.0002091110000000014}, {'diff': 0.00020912500000000098}, {'diff': 0.00020911099999999794}, {'diff': 0.00020911099999999794}, {'diff': 0.00020907000000000217}, {'diff': 0.0002091109999999979...</msg>
<status status="PASS" starttime="20201029 18:18:34.522" endtime="20201029 18:18:34.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:34.539" level="INFO">${RESULT} = {'diff': [0.0002091110000000014, 0.00020912500000000098, 0.00020911099999999794, 0.00020911099999999794, 0.00020907000000000217, 0.00020911099999999794, 0.00020909699999999837, 0.0002091110000000014, ...</msg>
<status status="PASS" starttime="20201029 18:18:34.531" endtime="20201029 18:18:34.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.548" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:34.546" endtime="20201029 18:18:34.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.553" level="INFO">VALUE: [0.0002091110000000014, 0.00020912500000000098, 0.00020911099999999794, 0.00020911099999999794, 0.00020907000000000217, 0.00020911099999999794, 0.00020909699999999837, 0.0002091110000000014, 0.00020908400000000174, 0.00020909699999999837, 0.00020911099999999794, 0.0002090980000000013, 0.00020909700000000184, 0.00020913900000000055, 0.00020913900000000055, 0.0002090980000000013, 0.0002090829999999988, 0.0002091249999999975, 0.00020909700000000184, 0.0002090980000000013, 0.00020911099999999794, 0.00020918099999999926, 0.0002091110000000014, 0.00020918000000000325, 0.00020911099999999794, 0.0002091110000000014, 0.0002091110000000014, 0.0002091110000000014, 0.00020911099999999794, 0.0002090980000000013, 0.00020909700000000184, 0.00020911099999999794, 0.00020918099999999926, 0.00020911099999999794, 0.00020909699999999837, 0.00020911100000000488, 0.0002090699999999987, 0.00020909699999999837, 0.0002090970000000053, 0.00020909799999999784, 0.00020908399999999827, 0.00020912500000000445, 0.0002090829999999988, 0.00020911100000000488, 0.00020911099999999794, 0.00020911099999999794, 0.00020912500000000445, 0.00020911099999999794, 0.00020911099999999794, 0.0002090970000000053]</msg>
<status status="PASS" starttime="20201029 18:18:34.550" endtime="20201029 18:18:34.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.541" endtime="20201029 18:18:34.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.149" endtime="20201029 18:18:34.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.126" endtime="20201029 18:18:34.557"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:34.562" endtime="20201029 18:18:34.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.559" endtime="20201029 18:18:34.583"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.591" endtime="20201029 18:18:34.620"></status>
</kw>
<msg timestamp="20201029 18:18:34.621" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.589" endtime="20201029 18:18:34.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.623" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.622" endtime="20201029 18:18:34.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.624" endtime="20201029 18:18:34.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.586" endtime="20201029 18:18:34.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.585" endtime="20201029 18:18:34.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.633" endtime="20201029 18:18:34.921"></status>
</kw>
<msg timestamp="20201029 18:18:34.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017642361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017864389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.632" endtime="20201029 18:18:34.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017642361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017864389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.925" endtime="20201029 18:18:34.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.932" endtime="20201029 18:18:34.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.629" endtime="20201029 18:18:34.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.628" endtime="20201029 18:18:34.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:34.939" level="INFO">${PHILIP_RES} = [{'diff': 0.00022202800000000258}, {'diff': 0.00022205499999999878}, {'diff': 0.0002220969999999975}, {'diff': 0.00022204100000000268}, {'diff': 0.00022205599999999825}, {'diff': 0.0002220279999999991...</msg>
<status status="PASS" starttime="20201029 18:18:34.936" endtime="20201029 18:18:34.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:34.943" level="INFO">${RESULT} = {'diff': [0.00022202800000000258, 0.00022205499999999878, 0.0002220969999999975, 0.00022204100000000268, 0.00022205599999999825, 0.00022202799999999911, 0.00022204200000000215, 0.00022201399999999955,...</msg>
<status status="PASS" starttime="20201029 18:18:34.940" endtime="20201029 18:18:34.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.947" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:34.946" endtime="20201029 18:18:34.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.950" level="INFO">VALUE: [0.00022202800000000258, 0.00022205499999999878, 0.0002220969999999975, 0.00022204100000000268, 0.00022205599999999825, 0.00022202799999999911, 0.00022204200000000215, 0.00022201399999999955, 0.00022205499999999878, 0.00022205599999999825, 0.00022204100000000268, 0.00022204199999999868, 0.00022202799999999911, 0.00022205499999999878, 0.0002220700000000013, 0.00022202799999999911, 0.00022204199999999868, 0.00022205500000000225, 0.00022204200000000215, 0.00022205499999999878, 0.00022204199999999868, 0.00022205600000000172, 0.00022205499999999878, 0.00022195800000000127, 0.00022204100000000268, 0.00022204200000000215, 0.0002220409999999992, 0.0002219860000000004, 0.00022204200000000215, 0.0002220409999999992, 0.00022204199999999868, 0.0002220409999999992, 0.00022204199999999868, 0.0002220969999999975, 0.00022204199999999868, 0.00022202799999999911, 0.00022204199999999868, 0.00022202799999999911, 0.0002220690000000053, 0.00022204199999999868, 0.00022205499999999878, 0.00022204200000000562, 0.0002220409999999992, 0.00022204199999999868, 0.00022204200000000562, 0.0002220409999999992, 0.00022205599999999825, 0.00022205499999999878, 0.00022206999999999782, 0.0002220409999999992]</msg>
<status status="PASS" starttime="20201029 18:18:34.948" endtime="20201029 18:18:34.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.944" endtime="20201029 18:18:34.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.583" endtime="20201029 18:18:34.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.557" endtime="20201029 18:18:34.952"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:34.954" endtime="20201029 18:18:34.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.953" endtime="20201029 18:18:34.974"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.982" endtime="20201029 18:18:35.013"></status>
</kw>
<msg timestamp="20201029 18:18:35.013" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.981" endtime="20201029 18:18:35.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.015" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.014" endtime="20201029 18:18:35.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.017" endtime="20201029 18:18:35.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.978" endtime="20201029 18:18:35.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.976" endtime="20201029 18:18:35.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.027" endtime="20201029 18:18:35.320"></status>
</kw>
<msg timestamp="20201029 18:18:35.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0178535, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01808875, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:35.025" endtime="20201029 18:18:35.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0178535, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01808875, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:35.329" endtime="20201029 18:18:35.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.346" endtime="20201029 18:18:35.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.022" endtime="20201029 18:18:35.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.021" endtime="20201029 18:18:35.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:35.360" level="INFO">${PHILIP_RES} = [{'diff': 0.00023524999999999935}, {'diff': 0.0002353479999999998}, {'diff': 0.0002353060000000011}, {'diff': 0.00023527800000000196}, {'diff': 0.0002352779999999985}, {'diff': 0.0002352640000000024},...</msg>
<status status="PASS" starttime="20201029 18:18:35.353" endtime="20201029 18:18:35.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:35.368" level="INFO">${RESULT} = {'diff': [0.00023524999999999935, 0.0002353479999999998, 0.0002353060000000011, 0.00023527800000000196, 0.0002352779999999985, 0.0002352640000000024, 0.0002353190000000012, 0.00023529200000000153, 0.0...</msg>
<status status="PASS" starttime="20201029 18:18:35.362" endtime="20201029 18:18:35.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.376" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:35.374" endtime="20201029 18:18:35.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.378" level="INFO">VALUE: [0.00023524999999999935, 0.0002353479999999998, 0.0002353060000000011, 0.00023527800000000196, 0.0002352779999999985, 0.0002352640000000024, 0.0002353190000000012, 0.00023529200000000153, 0.0002353060000000011, 0.00023530599999999763, 0.00023529200000000153, 0.00023530599999999763, 0.00023532000000000067, 0.00023529199999999806, 0.00023532000000000067, 0.00023533300000000076, 0.00023523599999999978, 0.0002352220000000002, 0.00023530499999999815, 0.00023533300000000076, 0.00023524999999999935, 0.00023529199999999806, 0.00023524999999999935, 0.00023531899999999772, 0.00023529200000000153, 0.00023530599999999763, 0.0002353609999999999, 0.00023529199999999806, 0.00023530499999999815, 0.00023524999999999588, 0.00023526400000000586, 0.00023530499999999815, 0.00023530499999999815, 0.0002352500000000063, 0.000235292000000005, 0.0002353199999999972, 0.00023530599999999763, 0.000235292000000005, 0.00023530599999999763, 0.0002353199999999972, 0.00023529199999999806, 0.00023529099999999858, 0.0002352779999999985, 0.00023527699999999901, 0.0002352220000000002, 0.00023530499999999815, 0.00023531899999999772, 0.0002352370000000062, 0.00023524999999999935, 0.00023530599999999763]</msg>
<status status="PASS" starttime="20201029 18:18:35.377" endtime="20201029 18:18:35.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.370" endtime="20201029 18:18:35.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.974" endtime="20201029 18:18:35.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.952" endtime="20201029 18:18:35.381"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:35.383" endtime="20201029 18:18:35.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.382" endtime="20201029 18:18:35.403"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.411" endtime="20201029 18:18:35.442"></status>
</kw>
<msg timestamp="20201029 18:18:35.442" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.409" endtime="20201029 18:18:35.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.445" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.443" endtime="20201029 18:18:35.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.446" endtime="20201029 18:18:35.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.407" endtime="20201029 18:18:35.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.405" endtime="20201029 18:18:35.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.455" endtime="20201029 18:18:35.741"></status>
</kw>
<msg timestamp="20201029 18:18:35.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017525292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017774139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:35.453" endtime="20201029 18:18:35.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017525292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017774139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:35.744" endtime="20201029 18:18:35.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.752" endtime="20201029 18:18:35.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.451" endtime="20201029 18:18:35.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.449" endtime="20201029 18:18:35.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:35.759" level="INFO">${PHILIP_RES} = [{'diff': 0.00024884699999999996}, {'diff': 0.0002488609999999995}, {'diff': 0.00024884799999999943}, {'diff': 0.00024884699999999996}, {'diff': 0.0002488609999999995}, {'diff': 0.000248861000000003},...</msg>
<status status="PASS" starttime="20201029 18:18:35.755" endtime="20201029 18:18:35.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:35.763" level="INFO">${RESULT} = {'diff': [0.00024884699999999996, 0.0002488609999999995, 0.00024884799999999943, 0.00024884699999999996, 0.0002488609999999995, 0.000248861000000003, 0.0002489170000000013, 0.0002488749999999991, 0.00...</msg>
<status status="PASS" starttime="20201029 18:18:35.760" endtime="20201029 18:18:35.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.768" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:35.767" endtime="20201029 18:18:35.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.770" level="INFO">VALUE: [0.00024884699999999996, 0.0002488609999999995, 0.00024884799999999943, 0.00024884699999999996, 0.0002488609999999995, 0.000248861000000003, 0.0002489170000000013, 0.0002488749999999991, 0.0002488749999999991, 0.0002488609999999995, 0.0002488609999999995, 0.00024886200000000247, 0.000248861000000003, 0.0002488609999999995, 0.0002488609999999995, 0.0002488609999999995, 0.00024883399999999986, 0.0002488200000000003, 0.000248861000000003, 0.00024887500000000257, 0.0002487919999999977, 0.0002488749999999991, 0.0002488609999999995, 0.0002488609999999995, 0.0002488609999999995, 0.00024883399999999986, 0.0002488609999999995, 0.00024893100000000085, 0.0002488469999999965, 0.000248861000000003, 0.00024886099999999606, 0.00024887500000000257, 0.0002488469999999965, 0.00024886200000000247, 0.00024886099999999606, 0.00024886099999999606, 0.000248861000000003, 0.0002488469999999965, 0.00024887500000000257, 0.00024886099999999606, 0.00024888900000000214, 0.000248861000000003, 0.00024884799999999596, 0.0002489160000000018, 0.0002489170000000013, 0.00024887500000000257, 0.0002488469999999965, 0.0002488060000000042, 0.0002489160000000018, 0.00024886099999999606]</msg>
<status status="PASS" starttime="20201029 18:18:35.769" endtime="20201029 18:18:35.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.764" endtime="20201029 18:18:35.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.404" endtime="20201029 18:18:35.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.381" endtime="20201029 18:18:35.772"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:35.774" endtime="20201029 18:18:35.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.773" endtime="20201029 18:18:35.794"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.802" endtime="20201029 18:18:35.835"></status>
</kw>
<msg timestamp="20201029 18:18:35.835" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.801" endtime="20201029 18:18:35.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.838" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.836" endtime="20201029 18:18:35.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.839" endtime="20201029 18:18:35.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.798" endtime="20201029 18:18:35.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.796" endtime="20201029 18:18:35.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.848" endtime="20201029 18:18:36.148"></status>
</kw>
<msg timestamp="20201029 18:18:36.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017508417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017771111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:35.846" endtime="20201029 18:18:36.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017508417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017771111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:36.157" endtime="20201029 18:18:36.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.174" endtime="20201029 18:18:36.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.844" endtime="20201029 18:18:36.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.842" endtime="20201029 18:18:36.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:36.184" level="INFO">${PHILIP_RES} = [{'diff': 0.0002626940000000008}, {'diff': 0.00026272199999999996}, {'diff': 0.0002627359999999995}, {'diff': 0.0002627499999999991}, {'diff': 0.0002627629999999992}, {'diff': 0.0002627499999999991}, ...</msg>
<status status="PASS" starttime="20201029 18:18:36.181" endtime="20201029 18:18:36.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:36.188" level="INFO">${RESULT} = {'diff': [0.0002626940000000008, 0.00026272199999999996, 0.0002627359999999995, 0.0002627499999999991, 0.0002627629999999992, 0.0002627499999999991, 0.0002627359999999995, 0.0002627359999999995, 0.000...</msg>
<status status="PASS" starttime="20201029 18:18:36.185" endtime="20201029 18:18:36.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.192" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:36.191" endtime="20201029 18:18:36.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.195" level="INFO">VALUE: [0.0002626940000000008, 0.00026272199999999996, 0.0002627359999999995, 0.0002627499999999991, 0.0002627629999999992, 0.0002627499999999991, 0.0002627359999999995, 0.0002627359999999995, 0.0002627499999999991, 0.0002627359999999995, 0.0002627359999999995, 0.00026272199999999996, 0.0002627359999999995, 0.0002626810000000007, 0.0002627359999999995, 0.0002627359999999995, 0.00026275000000000256, 0.0002627499999999991, 0.00026275000000000256, 0.0002627359999999995, 0.0002627910000000018, 0.0002627080000000004, 0.00026272199999999996, 0.0002627359999999995, 0.00026275000000000256, 0.00026272199999999996, 0.0002627359999999995, 0.00026275000000000256, 0.000262736999999999, 0.0002627499999999991, 0.0002627359999999995, 0.00026276399999999867, 0.00026272199999999996, 0.0002627359999999995, 0.00026277699999999876, 0.00026277699999999876, 0.000262736999999999, 0.00026272199999999996, 0.00026277799999999824, 0.0002627499999999991, 0.0002627080000000004, 0.00026272199999999996, 0.00026276399999999867, 0.0002627629999999992, 0.00026273600000000646, 0.0002627359999999995, 0.0002627499999999991, 0.0002627499999999991, 0.00026275000000000603, 0.00026272199999999996]</msg>
<status status="PASS" starttime="20201029 18:18:36.193" endtime="20201029 18:18:36.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.189" endtime="20201029 18:18:36.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.795" endtime="20201029 18:18:36.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.772" endtime="20201029 18:18:36.197"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:36.199" endtime="20201029 18:18:36.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.198" endtime="20201029 18:18:36.219"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.227" endtime="20201029 18:18:36.260"></status>
</kw>
<msg timestamp="20201029 18:18:36.261" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:36.225" endtime="20201029 18:18:36.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.263" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:36.262" endtime="20201029 18:18:36.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.264" endtime="20201029 18:18:36.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.223" endtime="20201029 18:18:36.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.221" endtime="20201029 18:18:36.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.274" endtime="20201029 18:18:36.560"></status>
</kw>
<msg timestamp="20201029 18:18:36.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017541694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017818569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:36.273" endtime="20201029 18:18:36.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017541694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017818569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:36.564" endtime="20201029 18:18:36.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.571" endtime="20201029 18:18:36.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.270" endtime="20201029 18:18:36.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.268" endtime="20201029 18:18:36.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:36.578" level="INFO">${PHILIP_RES} = [{'diff': 0.00027687499999999934}, {'diff': 0.0002769170000000015}, {'diff': 0.00027691699999999805}, {'diff': 0.00027694500000000066}, {'diff': 0.0002769170000000015}, {'diff': 0.0002769309999999976}...</msg>
<status status="PASS" starttime="20201029 18:18:36.575" endtime="20201029 18:18:36.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:36.582" level="INFO">${RESULT} = {'diff': [0.00027687499999999934, 0.0002769170000000015, 0.00027691699999999805, 0.00027694500000000066, 0.0002769170000000015, 0.0002769309999999976, 0.00027695800000000076, 0.00027694500000000066, 0...</msg>
<status status="PASS" starttime="20201029 18:18:36.579" endtime="20201029 18:18:36.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.586" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:36.585" endtime="20201029 18:18:36.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.589" level="INFO">VALUE: [0.00027687499999999934, 0.0002769170000000015, 0.00027691699999999805, 0.00027694500000000066, 0.0002769170000000015, 0.0002769309999999976, 0.00027695800000000076, 0.00027694500000000066, 0.0002769170000000015, 0.00027699999999999947, 0.0002769310000000011, 0.0002769170000000015, 0.00027691699999999805, 0.0002768889999999989, 0.00027694500000000066, 0.00027691699999999805, 0.00027690300000000195, 0.0002769029999999985, 0.00027691699999999805, 0.0002769310000000011, 0.00027691699999999805, 0.0002769310000000011, 0.00027691699999999805, 0.0002769170000000015, 0.00027699999999999947, 0.0002769309999999976, 0.0002769310000000011, 0.0002769310000000011, 0.00027694500000000066, 0.00027695900000000023, 0.0002768749999999959, 0.000276902999999995, 0.0002769440000000012, 0.0002769310000000011, 0.00027694399999999425, 0.0002769300000000016, 0.0002769440000000012, 0.0002769159999999951, 0.00027690300000000195, 0.0002769440000000012, 0.0002769300000000016, 0.0002768609999999963, 0.00027691600000000205, 0.00027695800000000076, 0.00027694399999999425, 0.0002769300000000016, 0.00027691600000000205, 0.0002769159999999951, 0.0002769170000000015, 0.0002769300000000016]</msg>
<status status="PASS" starttime="20201029 18:18:36.587" endtime="20201029 18:18:36.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.583" endtime="20201029 18:18:36.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.219" endtime="20201029 18:18:36.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.197" endtime="20201029 18:18:36.591"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:36.594" endtime="20201029 18:18:36.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.592" endtime="20201029 18:18:36.614"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.621" endtime="20201029 18:18:36.656"></status>
</kw>
<msg timestamp="20201029 18:18:36.657" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:36.620" endtime="20201029 18:18:36.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.659" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:36.658" endtime="20201029 18:18:36.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.660" endtime="20201029 18:18:36.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.617" endtime="20201029 18:18:36.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.615" endtime="20201029 18:18:36.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.671" endtime="20201029 18:18:36.971"></status>
</kw>
<msg timestamp="20201029 18:18:36.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017546333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017837722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:36.670" endtime="20201029 18:18:36.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017546333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017837722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:36.979" endtime="20201029 18:18:36.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.995" endtime="20201029 18:18:36.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.667" endtime="20201029 18:18:36.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.665" endtime="20201029 18:18:36.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:37.002" level="INFO">${PHILIP_RES} = [{'diff': 0.00029138899999999954}, {'diff': 0.0002914169999999987}, {'diff': 0.00029143099999999825}, {'diff': 0.0002914169999999987}, {'diff': 0.00029143099999999825}, {'diff': 0.00029144399999999834...</msg>
<status status="PASS" starttime="20201029 18:18:36.999" endtime="20201029 18:18:37.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:37.006" level="INFO">${RESULT} = {'diff': [0.00029138899999999954, 0.0002914169999999987, 0.00029143099999999825, 0.0002914169999999987, 0.00029143099999999825, 0.00029144399999999834, 0.0002914299999999988, 0.0002914310000000017, 0....</msg>
<status status="PASS" starttime="20201029 18:18:37.003" endtime="20201029 18:18:37.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.011" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:37.010" endtime="20201029 18:18:37.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.013" level="INFO">VALUE: [0.00029138899999999954, 0.0002914169999999987, 0.00029143099999999825, 0.0002914169999999987, 0.00029143099999999825, 0.00029144399999999834, 0.0002914299999999988, 0.0002914310000000017, 0.0002914440000000018, 0.00029143000000000224, 0.00029148599999999705, 0.00029144399999999834, 0.0002914159999999992, 0.0002914860000000005, 0.00029143099999999825, 0.0002914299999999988, 0.0002914310000000017, 0.00029138800000000006, 0.0002914160000000027, 0.0002914450000000013, 0.0002914299999999988, 0.00029144399999999834, 0.0002914169999999987, 0.0002914299999999988, 0.0002914299999999988, 0.00029140299999999564, 0.00029141599999999573, 0.0002914309999999948, 0.0002914169999999952, 0.00029141599999999573, 0.0002914580000000014, 0.0002914310000000017, 0.00029143000000000224, 0.00029141700000000215, 0.0002914030000000026, 0.0002914160000000027, 0.0002914450000000013, 0.0002914030000000026, 0.0002914580000000014, 0.00029145900000000086, 0.0002914310000000017, 0.00029143000000000224, 0.0002914860000000005, 0.0002914450000000013, 0.00029143000000000224, 0.0002914310000000017, 0.00029138899999999607, 0.0002914299999999953, 0.0002914309999999948, 0.0002914169999999952]</msg>
<status status="PASS" starttime="20201029 18:18:37.012" endtime="20201029 18:18:37.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.007" endtime="20201029 18:18:37.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.614" endtime="20201029 18:18:37.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.591" endtime="20201029 18:18:37.015"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:37.017" endtime="20201029 18:18:37.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.016" endtime="20201029 18:18:37.037"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.045" endtime="20201029 18:18:37.082"></status>
</kw>
<msg timestamp="20201029 18:18:37.082" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.044" endtime="20201029 18:18:37.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.085" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.083" endtime="20201029 18:18:37.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.086" endtime="20201029 18:18:37.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.041" endtime="20201029 18:18:37.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.039" endtime="20201029 18:18:37.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.095" endtime="20201029 18:18:37.381"></status>
</kw>
<msg timestamp="20201029 18:18:37.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017710625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018016847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:37.093" endtime="20201029 18:18:37.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017710625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018016847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:37.385" endtime="20201029 18:18:37.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.393" endtime="20201029 18:18:37.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.090" endtime="20201029 18:18:37.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.089" endtime="20201029 18:18:37.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:37.399" level="INFO">${PHILIP_RES} = [{'diff': 0.00030622199999999836}, {'diff': 0.0003062359999999979}, {'diff': 0.0003062499999999975}, {'diff': 0.00030620899999999826}, {'diff': 0.0003062910000000002}, {'diff': 0.0003062499999999975},...</msg>
<status status="PASS" starttime="20201029 18:18:37.396" endtime="20201029 18:18:37.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:37.403" level="INFO">${RESULT} = {'diff': [0.00030622199999999836, 0.0003062359999999979, 0.0003062499999999975, 0.00030620899999999826, 0.0003062910000000002, 0.0003062499999999975, 0.0003062499999999975, 0.0003062359999999979, 0.00...</msg>
<status status="PASS" starttime="20201029 18:18:37.400" endtime="20201029 18:18:37.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.407" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:37.406" endtime="20201029 18:18:37.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.410" level="INFO">VALUE: [0.00030622199999999836, 0.0003062359999999979, 0.0003062499999999975, 0.00030620899999999826, 0.0003062910000000002, 0.0003062499999999975, 0.0003062499999999975, 0.0003062359999999979, 0.0003062499999999975, 0.0003062369999999974, 0.00030622199999999836, 0.0003062359999999979, 0.0003062499999999975, 0.00030620899999999826, 0.0003062629999999976, 0.0003062359999999979, 0.0003062359999999979, 0.00030626400000000054, 0.0003062359999999979, 0.00030625000000000097, 0.0003062499999999975, 0.0003062780000000001, 0.00030622199999999836, 0.0003062360000000014, 0.00030626300000000106, 0.00030630599999999925, 0.00030626400000000054, 0.00030630599999999925, 0.0003062360000000014, 0.00030625000000000097, 0.0003062230000000013, 0.00030626400000000054, 0.0003062360000000014, 0.0003062360000000014, 0.0003062360000000014, 0.00030623700000000087, 0.0003062360000000014, 0.00030625000000000097, 0.00030625000000000097, 0.0003062910000000002, 0.0003062360000000014, 0.00030625000000000097, 0.00030626400000000054, 0.0003062360000000014, 0.00030623700000000087, 0.00030623700000000087, 0.0003061940000000027, 0.00030625000000000097, 0.0003062360000000014, 0.0003062220000000018]</msg>
<status status="PASS" starttime="20201029 18:18:37.409" endtime="20201029 18:18:37.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.404" endtime="20201029 18:18:37.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.038" endtime="20201029 18:18:37.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.015" endtime="20201029 18:18:37.412"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:37.414" endtime="20201029 18:18:37.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.413" endtime="20201029 18:18:37.434"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.442" endtime="20201029 18:18:37.480"></status>
</kw>
<msg timestamp="20201029 18:18:37.480" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.440" endtime="20201029 18:18:37.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.483" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.481" endtime="20201029 18:18:37.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.484" endtime="20201029 18:18:37.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.438" endtime="20201029 18:18:37.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.436" endtime="20201029 18:18:37.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.494" endtime="20201029 18:18:37.794"></status>
</kw>
<msg timestamp="20201029 18:18:37.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017794, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018115306, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:37.492" endtime="20201029 18:18:37.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017794, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018115306, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:37.802" endtime="20201029 18:18:37.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.811" endtime="20201029 18:18:37.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.490" endtime="20201029 18:18:37.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.488" endtime="20201029 18:18:37.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:37.817" level="INFO">${PHILIP_RES} = [{'diff': 0.00032130600000000037}, {'diff': 0.0003213469999999996}, {'diff': 0.00032136199999999865}, {'diff': 0.0003213609999999992}, {'diff': 0.00032133300000000004}, {'diff': 0.0003214440000000006}...</msg>
<status status="PASS" starttime="20201029 18:18:37.814" endtime="20201029 18:18:37.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:37.821" level="INFO">${RESULT} = {'diff': [0.00032130600000000037, 0.0003213469999999996, 0.00032136199999999865, 0.0003213609999999992, 0.00032133300000000004, 0.0003214440000000006, 0.00032137499999999875, 0.0003213890000000018, 0....</msg>
<status status="PASS" starttime="20201029 18:18:37.818" endtime="20201029 18:18:37.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.826" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:37.825" endtime="20201029 18:18:37.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.828" level="INFO">VALUE: [0.00032130600000000037, 0.0003213469999999996, 0.00032136199999999865, 0.0003213609999999992, 0.00032133300000000004, 0.0003214440000000006, 0.00032137499999999875, 0.0003213890000000018, 0.0003213889999999983, 0.0003213750000000022, 0.0003213890000000018, 0.000321430000000001, 0.00032140300000000135, 0.0003213750000000022, 0.00032137499999999875, 0.0003213609999999992, 0.00032131999999999994, 0.00032137499999999875, 0.0003213890000000018, 0.00032137499999999875, 0.00032137499999999875, 0.00032137499999999875, 0.0003213750000000022, 0.00032137499999999875, 0.00032133300000000004, 0.0003213609999999992, 0.0003213609999999992, 0.00032137499999999875, 0.00032133300000000004, 0.00032137499999999875, 0.0003213469999999996, 0.00032137499999999875, 0.00032138900000000525, 0.0003213750000000057, 0.00032137499999999875, 0.00032137499999999875, 0.00032137499999999875, 0.0003213889999999983, 0.0003213609999999992, 0.0003213469999999996, 0.0003214439999999971, 0.0003214579999999967, 0.0003213609999999992, 0.0003213469999999996, 0.00032137499999999875, 0.0003213610000000061, 0.0003214029999999979, 0.00032142999999999755, 0.00032137499999999875, 0.0003213609999999992]</msg>
<status status="PASS" starttime="20201029 18:18:37.827" endtime="20201029 18:18:37.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.822" endtime="20201029 18:18:37.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.435" endtime="20201029 18:18:37.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.412" endtime="20201029 18:18:37.831"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:37.833" endtime="20201029 18:18:37.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.832" endtime="20201029 18:18:37.853"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.861" endtime="20201029 18:18:37.899"></status>
</kw>
<msg timestamp="20201029 18:18:37.900" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.860" endtime="20201029 18:18:37.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.902" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.901" endtime="20201029 18:18:37.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.903" endtime="20201029 18:18:37.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.857" endtime="20201029 18:18:37.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.855" endtime="20201029 18:18:37.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.912" endtime="20201029 18:18:38.198"></status>
</kw>
<msg timestamp="20201029 18:18:38.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017543736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0178805, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:37.911" endtime="20201029 18:18:38.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017543736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0178805, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:38.202" endtime="20201029 18:18:38.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.209" endtime="20201029 18:18:38.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.908" endtime="20201029 18:18:38.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.906" endtime="20201029 18:18:38.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:38.216" level="INFO">${PHILIP_RES} = [{'diff': 0.0003367639999999998}, {'diff': 0.00033680499999999905}, {'diff': 0.0003368189999999986}, {'diff': 0.0003368059999999985}, {'diff': 0.0003368189999999986}, {'diff': 0.0003368199999999981}, ...</msg>
<status status="PASS" starttime="20201029 18:18:38.213" endtime="20201029 18:18:38.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:38.220" level="INFO">${RESULT} = {'diff': [0.0003367639999999998, 0.00033680499999999905, 0.0003368189999999986, 0.0003368059999999985, 0.0003368189999999986, 0.0003368199999999981, 0.00033679199999999895, 0.0003368329999999982, 0.00...</msg>
<status status="PASS" starttime="20201029 18:18:38.217" endtime="20201029 18:18:38.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.225" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:38.224" endtime="20201029 18:18:38.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.227" level="INFO">VALUE: [0.0003367639999999998, 0.00033680499999999905, 0.0003368189999999986, 0.0003368059999999985, 0.0003368189999999986, 0.0003368199999999981, 0.00033679199999999895, 0.0003368329999999982, 0.00033679199999999895, 0.0003368189999999986, 0.000336806000000002, 0.00033680499999999905, 0.00033680499999999905, 0.000336806000000002, 0.00033683300000000166, 0.000336806000000002, 0.00033679100000000295, 0.00033683300000000166, 0.00033679199999999895, 0.0003367909999999995, 0.0003367779999999994, 0.00033680499999999905, 0.00033682000000000156, 0.000336806000000002, 0.00033684700000000123, 0.00033683400000000113, 0.0003368050000000025, 0.000336806000000002, 0.0003367920000000024, 0.00033681899999999515, 0.00033682000000000156, 0.0003368469999999943, 0.000336806000000002, 0.0003368049999999956, 0.00033677800000000285, 0.00033680599999999505, 0.00033679100000000295, 0.0003368610000000008, 0.000336806000000002, 0.00033683400000000113, 0.0003367499999999968, 0.0003368190000000021, 0.000336806000000002, 0.0003368050000000025, 0.0003367359999999972, 0.000336806000000002, 0.0003368190000000021, 0.00033682000000000156, 0.00033681899999999515, 0.000336806000000002]</msg>
<status status="PASS" starttime="20201029 18:18:38.226" endtime="20201029 18:18:38.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.221" endtime="20201029 18:18:38.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.854" endtime="20201029 18:18:38.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.831" endtime="20201029 18:18:38.229"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:38.231" endtime="20201029 18:18:38.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.230" endtime="20201029 18:18:38.251"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.259" endtime="20201029 18:18:38.300"></status>
</kw>
<msg timestamp="20201029 18:18:38.300" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.258" endtime="20201029 18:18:38.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.303" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.301" endtime="20201029 18:18:38.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.304" endtime="20201029 18:18:38.305"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.255" endtime="20201029 18:18:38.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.253" endtime="20201029 18:18:38.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.313" endtime="20201029 18:18:38.613"></status>
</kw>
<msg timestamp="20201029 18:18:38.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017662472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018014958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:38.311" endtime="20201029 18:18:38.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017662472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018014958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:38.617" endtime="20201029 18:18:38.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.624" endtime="20201029 18:18:38.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.309" endtime="20201029 18:18:38.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.307" endtime="20201029 18:18:38.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:38.631" level="INFO">${PHILIP_RES} = [{'diff': 0.00035248600000000255}, {'diff': 0.00035258300000000006}, {'diff': 0.0003525560000000004}, {'diff': 0.0003525550000000009}, {'diff': 0.00035258300000000006}, {'diff': 0.0003525690000000005}...</msg>
<status status="PASS" starttime="20201029 18:18:38.628" endtime="20201029 18:18:38.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:38.635" level="INFO">${RESULT} = {'diff': [0.00035248600000000255, 0.00035258300000000006, 0.0003525560000000004, 0.0003525550000000009, 0.00035258300000000006, 0.0003525690000000005, 0.0003525560000000004, 0.00035252800000000126, 0....</msg>
<status status="PASS" starttime="20201029 18:18:38.632" endtime="20201029 18:18:38.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.639" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:38.638" endtime="20201029 18:18:38.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.642" level="INFO">VALUE: [0.00035248600000000255, 0.00035258300000000006, 0.0003525560000000004, 0.0003525550000000009, 0.00035258300000000006, 0.0003525690000000005, 0.0003525560000000004, 0.00035252800000000126, 0.00035258300000000006, 0.0003525690000000005, 0.00035256999999999997, 0.0003526109999999992, 0.00035262500000000224, 0.0003525550000000009, 0.00035254199999999736, 0.0003525420000000008, 0.0003525690000000005, 0.0003525690000000005, 0.0003526390000000018, 0.0003525560000000004, 0.00035255499999999745, 0.00035255499999999745, 0.00035254199999999736, 0.00035255600000000387, 0.00035256900000000396, 0.0003525550000000044, 0.0003525420000000043, 0.00035262500000000224, 0.00035254199999999736, 0.00035255499999999745, 0.0003526389999999949, 0.0003525699999999965, 0.00035255599999999693, 0.00035255499999999745, 0.0003525000000000056, 0.0003525420000000043, 0.0003525420000000043, 0.0003525550000000044, 0.00035255499999999745, 0.00035251299999999874, 0.0003525699999999965, 0.000352568999999997, 0.000352568999999997, 0.00035254199999999736, 0.0003525420000000043, 0.00035255600000000387, 0.0003526530000000014, 0.0003525550000000044, 0.000352584000000003, 0.00035255599999999693]</msg>
<status status="PASS" starttime="20201029 18:18:38.640" endtime="20201029 18:18:38.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.636" endtime="20201029 18:18:38.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.252" endtime="20201029 18:18:38.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.229" endtime="20201029 18:18:38.644"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:38.646" endtime="20201029 18:18:38.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.644" endtime="20201029 18:18:38.666"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.674" endtime="20201029 18:18:38.715"></status>
</kw>
<msg timestamp="20201029 18:18:38.716" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.672" endtime="20201029 18:18:38.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.718" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.717" endtime="20201029 18:18:38.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.719" endtime="20201029 18:18:38.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.670" endtime="20201029 18:18:38.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.668" endtime="20201029 18:18:38.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.729" endtime="20201029 18:18:39.014"></status>
</kw>
<msg timestamp="20201029 18:18:39.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017634806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018003389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:38.728" endtime="20201029 18:18:39.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017634806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018003389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:39.018" endtime="20201029 18:18:39.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.026" endtime="20201029 18:18:39.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.725" endtime="20201029 18:18:39.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.724" endtime="20201029 18:18:39.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:39.032" level="INFO">${PHILIP_RES} = [{'diff': 0.0003685830000000022}, {'diff': 0.00036863900000000047}, {'diff': 0.00036866600000000013}, {'diff': 0.0003685549999999996}, {'diff': 0.00036861099999999786}, {'diff': 0.0003685969999999983}...</msg>
<status status="PASS" starttime="20201029 18:18:39.029" endtime="20201029 18:18:39.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:39.036" level="INFO">${RESULT} = {'diff': [0.0003685830000000022, 0.00036863900000000047, 0.00036866600000000013, 0.0003685549999999996, 0.00036861099999999786, 0.0003685969999999983, 0.00036863900000000047, 0.0003686669999999996, 0....</msg>
<status status="PASS" starttime="20201029 18:18:39.033" endtime="20201029 18:18:39.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.041" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:39.040" endtime="20201029 18:18:39.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.043" level="INFO">VALUE: [0.0003685830000000022, 0.00036863900000000047, 0.00036866600000000013, 0.0003685549999999996, 0.00036861099999999786, 0.0003685969999999983, 0.00036863900000000047, 0.0003686669999999996, 0.000368638999999997, 0.00036863900000000047, 0.00036863900000000047, 0.0003686250000000009, 0.0003686249999999974, 0.0003686250000000009, 0.0003686250000000009, 0.00036863900000000047, 0.0003686249999999974, 0.00036863900000000047, 0.0003686250000000009, 0.0003686809999999992, 0.0003686250000000009, 0.0003686249999999974, 0.0003685549999999996, 0.00036862500000000437, 0.0003686110000000048, 0.00036861099999999786, 0.0003686249999999974, 0.0003686249999999974, 0.00036861199999999733, 0.0003686249999999974, 0.00036862500000000437, 0.0003685970000000052, 0.0003686110000000048, 0.0003686249999999974, 0.0003686249999999974, 0.0003686249999999974, 0.0003686249999999974, 0.00036867999999999623, 0.00036862500000000437, 0.00036862500000000437, 0.0003685970000000052, 0.0003686249999999974, 0.0003687080000000023, 0.0003686249999999974, 0.000368638999999997, 0.00036862500000000437, 0.0003686110000000048, 0.0003686110000000048, 0.0003686530000000035, 0.0003686249999999974]</msg>
<status status="PASS" starttime="20201029 18:18:39.042" endtime="20201029 18:18:39.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.037" endtime="20201029 18:18:39.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.666" endtime="20201029 18:18:39.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.644" endtime="20201029 18:18:39.152"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:39.155" endtime="20201029 18:18:39.174"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.153" endtime="20201029 18:18:39.174"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.182" endtime="20201029 18:18:39.225"></status>
</kw>
<msg timestamp="20201029 18:18:39.226" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.181" endtime="20201029 18:18:39.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.228" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.227" endtime="20201029 18:18:39.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.229" endtime="20201029 18:18:39.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.178" endtime="20201029 18:18:39.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.176" endtime="20201029 18:18:39.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.238" endtime="20201029 18:18:39.535"></status>
</kw>
<msg timestamp="20201029 18:18:39.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017591417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017976319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:39.237" endtime="20201029 18:18:39.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017591417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017976319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:39.539" endtime="20201029 18:18:39.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.547" endtime="20201029 18:18:39.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.234" endtime="20201029 18:18:39.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.232" endtime="20201029 18:18:39.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:39.553" level="INFO">${PHILIP_RES} = [{'diff': 0.00038490199999999947}, {'diff': 0.0003850550000000022}, {'diff': 0.0003849999999999999}, {'diff': 0.0003850139999999995}, {'diff': 0.0003849309999999981}, {'diff': 0.00038497300000000026},...</msg>
<status status="PASS" starttime="20201029 18:18:39.550" endtime="20201029 18:18:39.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:39.558" level="INFO">${RESULT} = {'diff': [0.00038490199999999947, 0.0003850550000000022, 0.0003849999999999999, 0.0003850139999999995, 0.0003849309999999981, 0.00038497300000000026, 0.00038505499999999873, 0.00038498600000000036, 0....</msg>
<status status="PASS" starttime="20201029 18:18:39.554" endtime="20201029 18:18:39.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.563" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:39.561" endtime="20201029 18:18:39.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.565" level="INFO">VALUE: [0.00038490199999999947, 0.0003850550000000022, 0.0003849999999999999, 0.0003850139999999995, 0.0003849309999999981, 0.00038497300000000026, 0.00038505499999999873, 0.00038498600000000036, 0.0003849999999999999, 0.0003849999999999999, 0.00038498600000000036, 0.00038498600000000036, 0.00038502799999999907, 0.00038498600000000036, 0.0003850420000000021, 0.0003849999999999999, 0.0003849999999999999, 0.0003849999999999999, 0.0003849999999999999, 0.0003849859999999969, 0.0003850560000000017, 0.00038499999999999646, 0.0003850000000000034, 0.00038501400000000296, 0.00038501400000000296, 0.0003850000000000034, 0.00038499999999999646, 0.0003850279999999956, 0.000385013999999996, 0.0003850000000000034, 0.0003849299999999986, 0.0003850560000000017, 0.00038499999999999646, 0.0003849859999999969, 0.0003849859999999969, 0.0003850000000000034, 0.00038501400000000296, 0.0003850000000000034, 0.0003849719999999973, 0.0003849859999999969, 0.00038499999999999646, 0.00038498699999999636, 0.00038501400000000296, 0.0003850000000000034, 0.0003849870000000033, 0.00038508300000000134, 0.0003849729999999968, 0.0003849859999999969, 0.00038499999999999646, 0.00038502700000000306]</msg>
<status status="PASS" starttime="20201029 18:18:39.564" endtime="20201029 18:18:39.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.559" endtime="20201029 18:18:39.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.175" endtime="20201029 18:18:39.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.153" endtime="20201029 18:18:39.567"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:39.569" endtime="20201029 18:18:39.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.568" endtime="20201029 18:18:39.589"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.598" endtime="20201029 18:18:39.642"></status>
</kw>
<msg timestamp="20201029 18:18:39.643" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.596" endtime="20201029 18:18:39.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.645" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.644" endtime="20201029 18:18:39.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.646" endtime="20201029 18:18:39.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.594" endtime="20201029 18:18:39.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.591" endtime="20201029 18:18:39.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.655" endtime="20201029 18:18:39.944"></status>
</kw>
<msg timestamp="20201029 18:18:39.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018881556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019283264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:39.654" endtime="20201029 18:18:39.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018881556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019283264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:39.948" endtime="20201029 18:18:39.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.956" endtime="20201029 18:18:39.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.651" endtime="20201029 18:18:39.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.649" endtime="20201029 18:18:39.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:39.962" level="INFO">${PHILIP_RES} = [{'diff': 0.0004017080000000006}, {'diff': 0.0004016950000000005}, {'diff': 0.0004016950000000005}, {'diff': 0.0004016950000000005}, {'diff': 0.000401679999999998}, {'diff': 0.0004017220000000002}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:39.959" endtime="20201029 18:18:39.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:39.966" level="INFO">${RESULT} = {'diff': [0.0004017080000000006, 0.0004016950000000005, 0.0004016950000000005, 0.0004016950000000005, 0.000401679999999998, 0.0004017220000000002, 0.0004016800000000015, 0.0004017220000000002, 0.00040...</msg>
<status status="PASS" starttime="20201029 18:18:39.963" endtime="20201029 18:18:39.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.970" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:39.969" endtime="20201029 18:18:39.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.973" level="INFO">VALUE: [0.0004017080000000006, 0.0004016950000000005, 0.0004016950000000005, 0.0004016950000000005, 0.000401679999999998, 0.0004017220000000002, 0.0004016800000000015, 0.0004017220000000002, 0.00040172299999999966, 0.0004016950000000005, 0.00040169400000000105, 0.0004017220000000002, 0.00040169400000000105, 0.0004016950000000005, 0.0004016950000000005, 0.0004016389999999988, 0.0004016800000000015, 0.0004017080000000006, 0.0004016800000000015, 0.00040169400000000105, 0.00040168100000000095, 0.0004017090000000001, 0.00040169400000000105, 0.00040169400000000105, 0.00040161099999999617, 0.0004017080000000006, 0.0004016950000000005, 0.00040176400000000584, 0.0004016529999999949, 0.0004016939999999941, 0.00040167999999999454, 0.00040168100000000095, 0.0004016950000000005, 0.0004016670000000014, 0.00040169400000000105, 0.0004017080000000006, 0.0004016800000000015, 0.00040169400000000105, 0.00040173599999999976, 0.00040168100000000095, 0.0004016670000000014, 0.0004016660000000019, 0.0004016800000000015, 0.0004016950000000005, 0.00040168100000000095, 0.0004016950000000005, 0.00040169400000000105, 0.0004017080000000006, 0.0004016800000000015, 0.00040169400000000105]</msg>
<status status="PASS" starttime="20201029 18:18:39.972" endtime="20201029 18:18:39.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.967" endtime="20201029 18:18:39.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.590" endtime="20201029 18:18:39.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.567" endtime="20201029 18:18:39.975"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:39.977" endtime="20201029 18:18:39.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.976" endtime="20201029 18:18:39.997"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.008" endtime="20201029 18:18:40.054"></status>
</kw>
<msg timestamp="20201029 18:18:40.055" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.006" endtime="20201029 18:18:40.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.057" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.056" endtime="20201029 18:18:40.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.058" endtime="20201029 18:18:40.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.003" endtime="20201029 18:18:40.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.000" endtime="20201029 18:18:40.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.068" endtime="20201029 18:18:40.369"></status>
</kw>
<msg timestamp="20201029 18:18:40.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021579875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021998528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:40.067" endtime="20201029 18:18:40.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021579875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021998528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:40.373" endtime="20201029 18:18:40.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.380" endtime="20201029 18:18:40.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.064" endtime="20201029 18:18:40.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.063" endtime="20201029 18:18:40.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:40.386" level="INFO">${PHILIP_RES} = [{'diff': 0.00041865300000000147}, {'diff': 0.0004186950000000002}, {'diff': 0.00041868000000000113}, {'diff': 0.00041867999999999767}, {'diff': 0.00041868099999999714}, {'diff': 0.0004186810000000006...</msg>
<status status="PASS" starttime="20201029 18:18:40.383" endtime="20201029 18:18:40.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:40.391" level="INFO">${RESULT} = {'diff': [0.00041865300000000147, 0.0004186950000000002, 0.00041868000000000113, 0.00041867999999999767, 0.00041868099999999714, 0.0004186810000000006, 0.0004187080000000003, 0.000418749999999999, 0.0...</msg>
<status status="PASS" starttime="20201029 18:18:40.388" endtime="20201029 18:18:40.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.395" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:40.394" endtime="20201029 18:18:40.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.397" level="INFO">VALUE: [0.00041865300000000147, 0.0004186950000000002, 0.00041868000000000113, 0.00041867999999999767, 0.00041868099999999714, 0.0004186810000000006, 0.0004187080000000003, 0.000418749999999999, 0.0004187080000000003, 0.0004187080000000003, 0.0004187090000000032, 0.0004186950000000002, 0.0004187080000000003, 0.00041867999999999767, 0.00041867999999999767, 0.0004187230000000028, 0.0004186949999999967, 0.0004187360000000029, 0.0004187219999999964, 0.00041867999999999767, 0.0004186810000000041, 0.00041868099999999714, 0.000418764000000002, 0.00041867999999999767, 0.00041870800000000374, 0.00041868099999999714, 0.0004187220000000033, 0.0004186810000000041, 0.00041869399999999724, 0.000418764000000002, 0.0004186949999999967, 0.0004187090000000032, 0.00041868099999999714, 0.0004186800000000046, 0.0004186940000000042, 0.00041869399999999724, 0.0004187090000000032, 0.0004186949999999967, 0.00041869399999999724, 0.00041869399999999724, 0.00041863899999999843, 0.00041869500000000365, 0.0004186949999999967, 0.0004186810000000041, 0.0004186519999999985, 0.00041867999999999767, 0.0004186940000000042, 0.0004186949999999967, 0.00041869500000000365, 0.00041867999999999767]</msg>
<status status="PASS" starttime="20201029 18:18:40.396" endtime="20201029 18:18:40.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.391" endtime="20201029 18:18:40.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.998" endtime="20201029 18:18:40.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.975" endtime="20201029 18:18:40.400"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:40.402" endtime="20201029 18:18:40.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.401" endtime="20201029 18:18:40.422"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.430" endtime="20201029 18:18:40.476"></status>
</kw>
<msg timestamp="20201029 18:18:40.476" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.429" endtime="20201029 18:18:40.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.479" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.477" endtime="20201029 18:18:40.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.480" endtime="20201029 18:18:40.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.426" endtime="20201029 18:18:40.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.424" endtime="20201029 18:18:40.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.489" endtime="20201029 18:18:40.775"></status>
</kw>
<msg timestamp="20201029 18:18:40.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017470292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017906264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:40.487" endtime="20201029 18:18:40.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017470292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017906264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:40.779" endtime="20201029 18:18:40.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.787" endtime="20201029 18:18:40.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.485" endtime="20201029 18:18:40.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.483" endtime="20201029 18:18:40.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:40.793" level="INFO">${PHILIP_RES} = [{'diff': 0.0004359720000000032}, {'diff': 0.00043601399999999846}, {'diff': 0.00043597199999999975}, {'diff': 0.00043601400000000193}, {'diff': 0.0004359999999999989}, {'diff': 0.0004360280000000015}...</msg>
<status status="PASS" starttime="20201029 18:18:40.790" endtime="20201029 18:18:40.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:40.798" level="INFO">${RESULT} = {'diff': [0.0004359720000000032, 0.00043601399999999846, 0.00043597199999999975, 0.00043601400000000193, 0.0004359999999999989, 0.0004360280000000015, 0.0004360280000000015, 0.00043600000000000236, 0....</msg>
<status status="PASS" starttime="20201029 18:18:40.794" endtime="20201029 18:18:40.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.803" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:40.801" endtime="20201029 18:18:40.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.805" level="INFO">VALUE: [0.0004359720000000032, 0.00043601399999999846, 0.00043597199999999975, 0.00043601400000000193, 0.0004359999999999989, 0.0004360280000000015, 0.0004360280000000015, 0.00043600000000000236, 0.00043601400000000193, 0.00043601400000000193, 0.00043601400000000193, 0.00043601300000000245, 0.00043601300000000245, 0.00043601400000000193, 0.00043601400000000193, 0.0004360280000000015, 0.00043600000000000236, 0.00043600000000000236, 0.0004359859999999993, 0.00043602800000000497, 0.00043601399999999846, 0.00043601399999999846, 0.00043601399999999846, 0.0004359309999999936, 0.00043600000000000583, 0.0004360140000000054, 0.0004360140000000054, 0.00043600000000000583, 0.00043600000000000583, 0.00043600000000000583, 0.00043598600000000626, 0.0004360140000000054, 0.00043598700000000573, 0.0004360130000000059, 0.00043600000000000583, 0.0004360140000000054, 0.0004360140000000054, 0.00043601399999999846, 0.00043602800000000497, 0.0004359999999999989, 0.0004360140000000054, 0.00043601399999999846, 0.0004359999999999989, 0.0004359999999999989, 0.00043601399999999846, 0.00043601399999999846, 0.0004359999999999989, 0.0004359999999999989, 0.00043601399999999846, 0.00043601399999999846]</msg>
<status status="PASS" starttime="20201029 18:18:40.804" endtime="20201029 18:18:40.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.799" endtime="20201029 18:18:40.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.423" endtime="20201029 18:18:40.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.400" endtime="20201029 18:18:40.807"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:40.809" endtime="20201029 18:18:40.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.808" endtime="20201029 18:18:40.829"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.838" endtime="20201029 18:18:40.886"></status>
</kw>
<msg timestamp="20201029 18:18:40.887" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.837" endtime="20201029 18:18:40.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.889" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.888" endtime="20201029 18:18:40.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.890" endtime="20201029 18:18:40.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.834" endtime="20201029 18:18:40.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.831" endtime="20201029 18:18:40.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.899" endtime="20201029 18:18:41.201"></status>
</kw>
<msg timestamp="20201029 18:18:41.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018854639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019308222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:40.898" endtime="20201029 18:18:41.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018854639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019308222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:41.205" endtime="20201029 18:18:41.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.213" endtime="20201029 18:18:41.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.895" endtime="20201029 18:18:41.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.894" endtime="20201029 18:18:41.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:41.219" level="INFO">${PHILIP_RES} = [{'diff': 0.00045358300000000046}, {'diff': 0.0004536390000000022}, {'diff': 0.00045362499999999917}, {'diff': 0.00045363899999999874}, {'diff': 0.0004536390000000022}, {'diff': 0.00045362499999999917...</msg>
<status status="PASS" starttime="20201029 18:18:41.216" endtime="20201029 18:18:41.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:41.223" level="INFO">${RESULT} = {'diff': [0.00045358300000000046, 0.0004536390000000022, 0.00045362499999999917, 0.00045363899999999874, 0.0004536390000000022, 0.00045362499999999917, 0.0004536390000000022, 0.00045363899999999874, 0...</msg>
<status status="PASS" starttime="20201029 18:18:41.220" endtime="20201029 18:18:41.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.228" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:41.227" endtime="20201029 18:18:41.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.230" level="INFO">VALUE: [0.00045358300000000046, 0.0004536390000000022, 0.00045362499999999917, 0.00045363899999999874, 0.0004536390000000022, 0.00045362499999999917, 0.0004536390000000022, 0.00045363899999999874, 0.00045362499999999917, 0.0004536390000000022, 0.00045362499999999917, 0.0004536109999999996, 0.0004536390000000022, 0.00045363899999999874, 0.00045369399999999754, 0.0004536529999999983, 0.0004536659999999984, 0.00045362499999999917, 0.00045365300000000525, 0.00045363799999999926, 0.00045362499999999917, 0.00045363899999999874, 0.0004536109999999996, 0.00045362499999999917, 0.00045361100000000654, 0.00045362499999999917, 0.00045362499999999917, 0.00045363899999999874, 0.00045363899999999874, 0.0004536109999999996, 0.00045363899999999874, 0.0004536659999999984, 0.00045358300000000046, 0.0004537079999999971, 0.00045365300000000525, 0.0004536390000000057, 0.00045365199999999883, 0.000453694999999997, 0.0004536529999999983, 0.0004536529999999983, 0.0004536250000000061, 0.00045362499999999917, 0.0004536109999999996, 0.00045362499999999917, 0.00045362499999999917, 0.00045362499999999917, 0.00045355599999999385, 0.0004536669999999979, 0.00045363899999999874, 0.00045362499999999917]</msg>
<status status="PASS" starttime="20201029 18:18:41.229" endtime="20201029 18:18:41.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.224" endtime="20201029 18:18:41.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.830" endtime="20201029 18:18:41.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.807" endtime="20201029 18:18:41.232"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:41.234" endtime="20201029 18:18:41.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.233" endtime="20201029 18:18:41.254"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.262" endtime="20201029 18:18:41.311"></status>
</kw>
<msg timestamp="20201029 18:18:41.311" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.261" endtime="20201029 18:18:41.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.314" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.312" endtime="20201029 18:18:41.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.315" endtime="20201029 18:18:41.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.258" endtime="20201029 18:18:41.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.256" endtime="20201029 18:18:41.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.325" endtime="20201029 18:18:41.611"></status>
</kw>
<msg timestamp="20201029 18:18:41.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017714389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018185944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:41.323" endtime="20201029 18:18:41.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017714389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018185944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:41.615" endtime="20201029 18:18:41.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.623" endtime="20201029 18:18:41.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.321" endtime="20201029 18:18:41.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.319" endtime="20201029 18:18:41.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:41.630" level="INFO">${PHILIP_RES} = [{'diff': 0.0004715549999999985}, {'diff': 0.00047155500000000197}, {'diff': 0.0004715830000000011}, {'diff': 0.0004715840000000006}, {'diff': 0.0004715830000000011}, {'diff': 0.0004715830000000011}, ...</msg>
<status status="PASS" starttime="20201029 18:18:41.626" endtime="20201029 18:18:41.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:41.634" level="INFO">${RESULT} = {'diff': [0.0004715549999999985, 0.00047155500000000197, 0.0004715830000000011, 0.0004715840000000006, 0.0004715830000000011, 0.0004715830000000011, 0.000471570000000001, 0.00047161100000000025, 0.000...</msg>
<status status="PASS" starttime="20201029 18:18:41.631" endtime="20201029 18:18:41.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.638" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:41.637" endtime="20201029 18:18:41.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.640" level="INFO">VALUE: [0.0004715549999999985, 0.00047155500000000197, 0.0004715830000000011, 0.0004715840000000006, 0.0004715830000000011, 0.0004715830000000011, 0.000471570000000001, 0.00047161100000000025, 0.00047158299999999764, 0.00047165300000000243, 0.0004715689999999981, 0.00047159800000000016, 0.00047155500000000197, 0.00047158299999999764, 0.0004715840000000006, 0.00047155600000000145, 0.0004715970000000007, 0.0004715549999999985, 0.00047156999999999755, 0.0004715419999999984, 0.0004716529999999955, 0.00047165200000000296, 0.0004715280000000058, 0.00047154099999999893, 0.0004715969999999972, 0.00047158299999999764, 0.00047152799999999884, 0.00047154100000000587, 0.0004715689999999981, 0.00047158299999999764, 0.0004715839999999971, 0.0004715689999999981, 0.0004715419999999984, 0.00047158400000000406, 0.0004716109999999968, 0.00047158299999999764, 0.0004715689999999981, 0.00047163900000000286, 0.0004715830000000046, 0.0004715689999999981, 0.00047158299999999764, 0.0004715419999999984, 0.00047158299999999764, 0.00047155500000000544, 0.0004715560000000049, 0.00047156999999999755, 0.00047154099999999893, 0.00047158299999999764, 0.00047162499999999635, 0.0004715700000000045]</msg>
<status status="PASS" starttime="20201029 18:18:41.639" endtime="20201029 18:18:41.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.635" endtime="20201029 18:18:41.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.255" endtime="20201029 18:18:41.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.232" endtime="20201029 18:18:41.643"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:41.646" endtime="20201029 18:18:41.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.644" endtime="20201029 18:18:41.665"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.674" endtime="20201029 18:18:41.724"></status>
</kw>
<msg timestamp="20201029 18:18:41.725" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.672" endtime="20201029 18:18:41.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.727" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.726" endtime="20201029 18:18:41.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.728" endtime="20201029 18:18:41.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.669" endtime="20201029 18:18:41.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.667" endtime="20201029 18:18:41.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.743" endtime="20201029 18:18:42.036"></status>
</kw>
<msg timestamp="20201029 18:18:42.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017588736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018078611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:41.739" endtime="20201029 18:18:42.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017588736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018078611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:42.040" endtime="20201029 18:18:42.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.048" endtime="20201029 18:18:42.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.734" endtime="20201029 18:18:42.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.731" endtime="20201029 18:18:42.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:42.054" level="INFO">${PHILIP_RES} = [{'diff': 0.0004898750000000007}, {'diff': 0.0004898329999999985}, {'diff': 0.000489818999999999}, {'diff': 0.0004898329999999985}, {'diff': 0.000489818999999999}, {'diff': 0.0004898199999999985}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:42.051" endtime="20201029 18:18:42.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:42.059" level="INFO">${RESULT} = {'diff': [0.0004898750000000007, 0.0004898329999999985, 0.000489818999999999, 0.0004898329999999985, 0.000489818999999999, 0.0004898199999999985, 0.0004898329999999985, 0.0004898049999999994, 0.000489...</msg>
<status status="PASS" starttime="20201029 18:18:42.055" endtime="20201029 18:18:42.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.063" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:42.062" endtime="20201029 18:18:42.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.066" level="INFO">VALUE: [0.0004898750000000007, 0.0004898329999999985, 0.000489818999999999, 0.0004898329999999985, 0.000489818999999999, 0.0004898199999999985, 0.0004898329999999985, 0.0004898049999999994, 0.000489833999999998, 0.0004898049999999994, 0.0004898890000000003, 0.0004898059999999989, 0.0004897910000000033, 0.0004898340000000015, 0.000489833000000002, 0.0004898470000000016, 0.0004898060000000024, 0.0004898190000000024, 0.0004898340000000015, 0.0004898470000000016, 0.000489833000000002, 0.0004897499999999971, 0.0004898610000000012, 0.000489833000000002, 0.0004897920000000028, 0.0004898470000000016, 0.0004898200000000019, 0.0004898329999999951, 0.000489833000000002, 0.0004898479999999941, 0.0004898189999999955, 0.0004898049999999959, 0.000489819999999995, 0.0004898469999999946, 0.0004898339999999946, 0.0004898189999999955, 0.0004897909999999964, 0.0004898480000000011, 0.0004898329999999951, 0.0004898059999999954, 0.0004898200000000019, 0.0004898190000000024, 0.0004898060000000024, 0.000489833000000002, 0.000489833000000002, 0.0004898340000000015, 0.000489833000000002, 0.0004897920000000028, 0.0004897920000000028, 0.0004898470000000016]</msg>
<status status="PASS" starttime="20201029 18:18:42.064" endtime="20201029 18:18:42.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.060" endtime="20201029 18:18:42.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.666" endtime="20201029 18:18:42.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.644" endtime="20201029 18:18:42.068"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:42.070" endtime="20201029 18:18:42.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.069" endtime="20201029 18:18:42.090"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.098" endtime="20201029 18:18:42.150"></status>
</kw>
<msg timestamp="20201029 18:18:42.150" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.096" endtime="20201029 18:18:42.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.153" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.151" endtime="20201029 18:18:42.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.154" endtime="20201029 18:18:42.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.094" endtime="20201029 18:18:42.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.092" endtime="20201029 18:18:42.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.163" endtime="20201029 18:18:42.450"></status>
</kw>
<msg timestamp="20201029 18:18:42.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017645111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018153458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:42.161" endtime="20201029 18:18:42.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017645111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018153458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:42.454" endtime="20201029 18:18:42.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.461" endtime="20201029 18:18:42.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.159" endtime="20201029 18:18:42.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.157" endtime="20201029 18:18:42.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:42.468" level="INFO">${PHILIP_RES} = [{'diff': 0.0005083469999999993}, {'diff': 0.0005083750000000019}, {'diff': 0.0005083750000000019}, {'diff': 0.000508403000000001}, {'diff': 0.000508388999999998}, {'diff': 0.0005083749999999984}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:42.465" endtime="20201029 18:18:42.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:42.472" level="INFO">${RESULT} = {'diff': [0.0005083469999999993, 0.0005083750000000019, 0.0005083750000000019, 0.000508403000000001, 0.000508388999999998, 0.0005083749999999984, 0.0005084019999999981, 0.0005083749999999984, 0.000508...</msg>
<status status="PASS" starttime="20201029 18:18:42.469" endtime="20201029 18:18:42.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.476" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:42.475" endtime="20201029 18:18:42.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.478" level="INFO">VALUE: [0.0005083469999999993, 0.0005083750000000019, 0.0005083750000000019, 0.000508403000000001, 0.000508388999999998, 0.0005083749999999984, 0.0005084019999999981, 0.0005083749999999984, 0.0005083750000000019, 0.0005083890000000015, 0.0005083750000000019, 0.0005083890000000015, 0.0005083749999999984, 0.0005083329999999997, 0.0005083749999999984, 0.000508403000000001, 0.0005083890000000049, 0.000508388999999998, 0.0005083749999999984, 0.0005084029999999976, 0.000508388999999998, 0.0005083469999999993, 0.000508388999999998, 0.0005083890000000049, 0.000508388999999998, 0.000508388999999998, 0.000508388999999998, 0.000508388999999998, 0.0005083890000000049, 0.000508388999999998, 0.0005084030000000045, 0.0005083749999999984, 0.0005084170000000041, 0.0005084299999999972, 0.0005083749999999984, 0.0005083749999999984, 0.0005084029999999976, 0.000508402000000005, 0.000508388999999998, 0.0005083890000000049, 0.0005084309999999967, 0.0005083890000000049, 0.0005083609999999988, 0.0005084300000000042, 0.0005084170000000041, 0.000508388999999998, 0.0005083890000000049, 0.0005083479999999987, 0.0005084030000000045, 0.000508388999999998]</msg>
<status status="PASS" starttime="20201029 18:18:42.477" endtime="20201029 18:18:42.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.472" endtime="20201029 18:18:42.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.090" endtime="20201029 18:18:42.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.068" endtime="20201029 18:18:42.480"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:42.483" endtime="20201029 18:18:42.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.481" endtime="20201029 18:18:42.503"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.510" endtime="20201029 18:18:42.564"></status>
</kw>
<msg timestamp="20201029 18:18:42.565" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.509" endtime="20201029 18:18:42.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.570" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.567" endtime="20201029 18:18:42.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.572" endtime="20201029 18:18:42.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.506" endtime="20201029 18:18:42.578"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.505" endtime="20201029 18:18:42.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.593" endtime="20201029 18:18:42.884"></status>
</kw>
<msg timestamp="20201029 18:18:42.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017546028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018073264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:42.590" endtime="20201029 18:18:42.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017546028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018073264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:42.887" endtime="20201029 18:18:42.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.895" endtime="20201029 18:18:42.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.584" endtime="20201029 18:18:42.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.580" endtime="20201029 18:18:42.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:42.901" level="INFO">${PHILIP_RES} = [{'diff': 0.0005272359999999969}, {'diff': 0.0005271939999999982}, {'diff': 0.0005272920000000021}, {'diff': 0.0005272499999999999}, {'diff': 0.0005272499999999999}, {'diff': 0.0005272090000000007}, {...</msg>
<status status="PASS" starttime="20201029 18:18:42.898" endtime="20201029 18:18:42.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:42.905" level="INFO">${RESULT} = {'diff': [0.0005272359999999969, 0.0005271939999999982, 0.0005272920000000021, 0.0005272499999999999, 0.0005272499999999999, 0.0005272090000000007, 0.0005272639999999995, 0.0005272639999999995, 0.0005...</msg>
<status status="PASS" starttime="20201029 18:18:42.902" endtime="20201029 18:18:42.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.910" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:42.909" endtime="20201029 18:18:42.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.912" level="INFO">VALUE: [0.0005272359999999969, 0.0005271939999999982, 0.0005272920000000021, 0.0005272499999999999, 0.0005272499999999999, 0.0005272090000000007, 0.0005272639999999995, 0.0005272639999999995, 0.0005272220000000008, 0.0005272499999999999, 0.000527264000000003, 0.0005272779999999991, 0.0005272639999999995, 0.0005272779999999991, 0.0005272639999999995, 0.0005272499999999999, 0.0005272769999999996, 0.0005272639999999995, 0.0005272639999999995, 0.0005272779999999991, 0.0005272639999999995, 0.0005273200000000047, 0.0005272910000000061, 0.0005272640000000064, 0.0005272639999999995, 0.0005272919999999987, 0.0005272779999999991, 0.0005272639999999995, 0.0005272909999999992, 0.0005272220000000008, 0.0005272779999999991, 0.0005272639999999995, 0.0005272639999999995, 0.0005272499999999999, 0.0005272499999999999, 0.0005272499999999999, 0.0005272639999999995, 0.0005272360000000004, 0.0005272499999999999, 0.000527278000000006, 0.0005272499999999999, 0.0005272769999999996, 0.0005272230000000003, 0.0005272779999999991, 0.0005272639999999995, 0.0005272499999999999, 0.0005272639999999995, 0.000527263, 0.0005272779999999991, 0.0005272639999999995]</msg>
<status status="PASS" starttime="20201029 18:18:42.911" endtime="20201029 18:18:42.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.906" endtime="20201029 18:18:42.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.503" endtime="20201029 18:18:42.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.480" endtime="20201029 18:18:42.915"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:42.917" endtime="20201029 18:18:42.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.916" endtime="20201029 18:18:42.937"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.945" endtime="20201029 18:18:43.000"></status>
</kw>
<msg timestamp="20201029 18:18:43.001" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.944" endtime="20201029 18:18:43.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.003" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:43.002" endtime="20201029 18:18:43.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.004" endtime="20201029 18:18:43.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.941" endtime="20201029 18:18:43.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.939" endtime="20201029 18:18:43.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.013" endtime="20201029 18:18:43.300"></status>
</kw>
<msg timestamp="20201029 18:18:43.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017754083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0183005, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:43.011" endtime="20201029 18:18:43.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017754083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0183005, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:43.304" endtime="20201029 18:18:43.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.312" endtime="20201029 18:18:43.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.009" endtime="20201029 18:18:43.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.007" endtime="20201029 18:18:43.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:43.319" level="INFO">${PHILIP_RES} = [{'diff': 0.0005464170000000004}, {'diff': 0.0005464720000000027}, {'diff': 0.0005464589999999991}, {'diff': 0.0005464579999999997}, {'diff': 0.0005464440000000001}, {'diff': 0.0005464719999999992}, {...</msg>
<status status="PASS" starttime="20201029 18:18:43.316" endtime="20201029 18:18:43.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:43.324" level="INFO">${RESULT} = {'diff': [0.0005464170000000004, 0.0005464720000000027, 0.0005464589999999991, 0.0005464579999999997, 0.0005464440000000001, 0.0005464719999999992, 0.000546445000000003, 0.0005465140000000014, 0.00054...</msg>
<status status="PASS" starttime="20201029 18:18:43.320" endtime="20201029 18:18:43.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.328" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:43.327" endtime="20201029 18:18:43.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.330" level="INFO">VALUE: [0.0005464170000000004, 0.0005464720000000027, 0.0005464589999999991, 0.0005464579999999997, 0.0005464440000000001, 0.0005464719999999992, 0.000546445000000003, 0.0005465140000000014, 0.0005464440000000001, 0.0005464999999999984, 0.0005464579999999997, 0.0005464579999999997, 0.0005464170000000004, 0.0005464589999999991, 0.0005464440000000001, 0.0005464719999999992, 0.0005464449999999996, 0.0005464170000000004, 0.0005464720000000062, 0.0005464589999999991, 0.0005464579999999997, 0.0005464579999999997, 0.0005464589999999991, 0.0005464579999999997, 0.0005465419999999971, 0.0005464579999999997, 0.0005464860000000057, 0.0005464719999999992, 0.0005464719999999992, 0.0005464589999999991, 0.0005464440000000001, 0.0005464719999999992, 0.0005464589999999991, 0.000546526999999998, 0.0005464719999999992, 0.0005464579999999997, 0.0005464170000000004, 0.0005464719999999992, 0.0005464440000000001, 0.0005464589999999991, 0.0005464579999999997, 0.0005464579999999997, 0.0005464449999999996, 0.0005464170000000004, 0.0005464579999999997, 0.0005464719999999992, 0.0005464589999999991, 0.0005464719999999923, 0.0005464859999999988, 0.0005464589999999991]</msg>
<status status="PASS" starttime="20201029 18:18:43.329" endtime="20201029 18:18:43.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.325" endtime="20201029 18:18:43.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.937" endtime="20201029 18:18:43.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.915" endtime="20201029 18:18:43.332"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:43.335" endtime="20201029 18:18:43.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.333" endtime="20201029 18:18:43.356"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.373" endtime="20201029 18:18:43.431"></status>
</kw>
<msg timestamp="20201029 18:18:43.432" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:43.370" endtime="20201029 18:18:43.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.437" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:43.435" endtime="20201029 18:18:43.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.440" endtime="20201029 18:18:43.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.365" endtime="20201029 18:18:43.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.360" endtime="20201029 18:18:43.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.458" endtime="20201029 18:18:43.760"></status>
</kw>
<msg timestamp="20201029 18:18:43.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029404847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029970778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:43.455" endtime="20201029 18:18:43.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029404847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029970778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:43.764" endtime="20201029 18:18:43.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.772" endtime="20201029 18:18:43.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.450" endtime="20201029 18:18:43.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.446" endtime="20201029 18:18:43.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:43.778" level="INFO">${PHILIP_RES} = [{'diff': 0.0005659309999999987}, {'diff': 0.0005659580000000018}, {'diff': 0.0005659589999999978}, {'diff': 0.0005660279999999962}, {'diff': 0.0005659719999999979}, {'diff': 0.0005659589999999978}, {...</msg>
<status status="PASS" starttime="20201029 18:18:43.775" endtime="20201029 18:18:43.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:43.782" level="INFO">${RESULT} = {'diff': [0.0005659309999999987, 0.0005659580000000018, 0.0005659589999999978, 0.0005660279999999962, 0.0005659719999999979, 0.0005659589999999978, 0.0005659719999999979, 0.0005659719999999979, 0.0005...</msg>
<status status="PASS" starttime="20201029 18:18:43.779" endtime="20201029 18:18:43.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.786" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:43.785" endtime="20201029 18:18:43.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.789" level="INFO">VALUE: [0.0005659309999999987, 0.0005659580000000018, 0.0005659589999999978, 0.0005660279999999962, 0.0005659719999999979, 0.0005659589999999978, 0.0005659719999999979, 0.0005659719999999979, 0.0005659580000000053, 0.0005659720000000049, 0.0005659580000000053, 0.0005660420000000027, 0.0005659579999999984, 0.0005659579999999984, 0.0005660139999999966, 0.0005659439999999988, 0.0005660129999999972, 0.0005659449999999983, 0.0005659579999999984, 0.0005659730000000043, 0.0005659730000000043, 0.0005659029999999995, 0.0005659730000000043, 0.0005659589999999978, 0.0005659579999999984, 0.0005659299999999992, 0.0005659579999999984, 0.0005659299999999992, 0.0005659439999999988, 0.0005659579999999984, 0.0005659579999999984, 0.0005659579999999984, 0.0005659440000000057, 0.000566000000000004, 0.0005659999999999971, 0.0005659449999999983, 0.0005659589999999909, 0.0005659590000000048, 0.0005659729999999974, 0.0005659590000000048, 0.0005659590000000048, 0.0005659719999999979, 0.0005659439999999988, 0.0005659719999999979, 0.0005660420000000027, 0.0005659580000000053, 0.0005659580000000053, 0.0005659439999999988, 0.0005660279999999962, 0.0005659580000000053]</msg>
<status status="PASS" starttime="20201029 18:18:43.787" endtime="20201029 18:18:43.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.783" endtime="20201029 18:18:43.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.357" endtime="20201029 18:18:43.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.333" endtime="20201029 18:18:43.790"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:43.793" endtime="20201029 18:18:43.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.791" endtime="20201029 18:18:43.813"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.821" endtime="20201029 18:18:43.878"></status>
</kw>
<msg timestamp="20201029 18:18:43.878" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:43.819" endtime="20201029 18:18:43.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.881" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:43.879" endtime="20201029 18:18:43.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.882" endtime="20201029 18:18:43.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.817" endtime="20201029 18:18:43.885"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.815" endtime="20201029 18:18:43.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.892" endtime="20201029 18:18:44.178"></status>
</kw>
<msg timestamp="20201029 18:18:44.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017521236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018106958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:43.890" endtime="20201029 18:18:44.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017521236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018106958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:44.182" endtime="20201029 18:18:44.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.189" endtime="20201029 18:18:44.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.888" endtime="20201029 18:18:44.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.886" endtime="20201029 18:18:44.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:44.196" level="INFO">${PHILIP_RES} = [{'diff': 0.0005857220000000003}, {'diff': 0.0005857910000000022}, {'diff': 0.0005857780000000021}, {'diff': 0.000585763999999999}, {'diff': 0.000585763999999999}, {'diff': 0.0005858470000000005}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:44.193" endtime="20201029 18:18:44.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:44.200" level="INFO">${RESULT} = {'diff': [0.0005857220000000003, 0.0005857910000000022, 0.0005857780000000021, 0.000585763999999999, 0.000585763999999999, 0.0005858470000000005, 0.000585763999999999, 0.0005857359999999999, 0.0005858...</msg>
<status status="PASS" starttime="20201029 18:18:44.197" endtime="20201029 18:18:44.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.204" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:44.203" endtime="20201029 18:18:44.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.206" level="INFO">VALUE: [0.0005857220000000003, 0.0005857910000000022, 0.0005857780000000021, 0.000585763999999999, 0.000585763999999999, 0.0005858470000000005, 0.000585763999999999, 0.0005857359999999999, 0.0005858060000000012, 0.0005857780000000021, 0.0005858059999999977, 0.0005857920000000016, 0.0005857910000000022, 0.0005857769999999991, 0.0005857639999999956, 0.0005857089999999968, 0.0005857920000000016, 0.0005857780000000021, 0.0005857640000000025, 0.0005857640000000025, 0.0005857920000000016, 0.0005857639999999956, 0.0005857919999999947, 0.0005857779999999951, 0.0005857360000000034, 0.0005857910000000022, 0.0005857770000000026, 0.0005857910000000022, 0.0005858470000000005, 0.0005857769999999957, 0.0005856950000000041, 0.0005857360000000034, 0.0005857500000000029, 0.0005857500000000029, 0.0005857780000000021, 0.0005857779999999951, 0.0005857639999999956, 0.0005857910000000022, 0.0005857770000000026, 0.0005858190000000013, 0.0005857780000000021, 0.0005857779999999951, 0.0005857779999999951, 0.0005857639999999956, 0.0005857780000000021, 0.0005857639999999886, 0.0005858339999999934, 0.000585778000000009, 0.0005857920000000016, 0.0005857640000000025]</msg>
<status status="PASS" starttime="20201029 18:18:44.205" endtime="20201029 18:18:44.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.200" endtime="20201029 18:18:44.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.813" endtime="20201029 18:18:44.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.791" endtime="20201029 18:18:44.221"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:44.223" endtime="20201029 18:18:44.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.222" endtime="20201029 18:18:44.243"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.251" endtime="20201029 18:18:44.311"></status>
</kw>
<msg timestamp="20201029 18:18:44.312" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.250" endtime="20201029 18:18:44.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.317" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.315" endtime="20201029 18:18:44.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.320" endtime="20201029 18:18:44.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.247" endtime="20201029 18:18:44.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.245" endtime="20201029 18:18:44.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.338" endtime="20201029 18:18:44.629"></status>
</kw>
<msg timestamp="20201029 18:18:44.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017722861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018328722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:44.335" endtime="20201029 18:18:44.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017722861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018328722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:44.633" endtime="20201029 18:18:44.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.640" endtime="20201029 18:18:44.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.330" endtime="20201029 18:18:44.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.326" endtime="20201029 18:18:44.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:44.647" level="INFO">${PHILIP_RES} = [{'diff': 0.0006058609999999992}, {'diff': 0.000605917000000001}, {'diff': 0.0006058609999999992}, {'diff': 0.0006059030000000014}, {'diff': 0.0006059029999999979}, {'diff': 0.0006059030000000014}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:44.644" endtime="20201029 18:18:44.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:44.651" level="INFO">${RESULT} = {'diff': [0.0006058609999999992, 0.000605917000000001, 0.0006058609999999992, 0.0006059030000000014, 0.0006059029999999979, 0.0006059030000000014, 0.0006058880000000023, 0.0006058750000000022, 0.00060...</msg>
<status status="PASS" starttime="20201029 18:18:44.648" endtime="20201029 18:18:44.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.656" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:44.655" endtime="20201029 18:18:44.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.658" level="INFO">VALUE: [0.0006058609999999992, 0.000605917000000001, 0.0006058609999999992, 0.0006059030000000014, 0.0006059029999999979, 0.0006059030000000014, 0.0006058880000000023, 0.0006058750000000022, 0.0006058890000000018, 0.000605917000000001, 0.0006059019999999984, 0.0006059450000000001, 0.000605917000000001, 0.0006059160000000015, 0.0006058889999999983, 0.0006059029999999979, 0.0006059030000000049, 0.0006059299999999976, 0.0006058749999999988, 0.0006058889999999983, 0.0006059029999999979, 0.000605916000000005, 0.0006058889999999983, 0.0006059030000000049, 0.000605915999999998, 0.0006059169999999975, 0.0006058890000000053, 0.0006059859999999959, 0.0006059020000000054, 0.0006059029999999979, 0.0006059029999999979, 0.0006059020000000054, 0.0006058609999999992, 0.0006059170000000044, 0.0006059719999999963, 0.0006058469999999996, 0.0006059170000000044, 0.0006058889999999983, 0.0006059030000000049, 0.0006059029999999979, 0.0006059170000000044, 0.0006058889999999983, 0.000605915999999998, 0.0006059449999999966, 0.0006058609999999992, 0.0006059030000000049, 0.0006059579999999898, 0.0006059030000000049, 0.000605902999999991, 0.0006059020000000054]</msg>
<status status="PASS" starttime="20201029 18:18:44.657" endtime="20201029 18:18:44.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.652" endtime="20201029 18:18:44.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.244" endtime="20201029 18:18:44.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.221" endtime="20201029 18:18:44.660"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:44.662" endtime="20201029 18:18:44.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.661" endtime="20201029 18:18:44.683"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.691" endtime="20201029 18:18:44.751"></status>
</kw>
<msg timestamp="20201029 18:18:44.752" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.689" endtime="20201029 18:18:44.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.754" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.753" endtime="20201029 18:18:44.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.755" endtime="20201029 18:18:44.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.687" endtime="20201029 18:18:44.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.685" endtime="20201029 18:18:44.758"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.764" endtime="20201029 18:18:45.050"></status>
</kw>
<msg timestamp="20201029 18:18:45.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01769875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018325069, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:44.763" endtime="20201029 18:18:45.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01769875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018325069, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:45.054" endtime="20201029 18:18:45.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.062" endtime="20201029 18:18:45.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.760" endtime="20201029 18:18:45.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.758" endtime="20201029 18:18:45.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:45.068" level="INFO">${PHILIP_RES} = [{'diff': 0.0006263190000000002}, {'diff': 0.0006263050000000006}, {'diff': 0.0006263060000000001}, {'diff': 0.0006263610000000024}, {'diff': 0.0006263469999999993}, {'diff': 0.0006263469999999993}, {...</msg>
<status status="PASS" starttime="20201029 18:18:45.065" endtime="20201029 18:18:45.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:45.072" level="INFO">${RESULT} = {'diff': [0.0006263190000000002, 0.0006263050000000006, 0.0006263060000000001, 0.0006263610000000024, 0.0006263469999999993, 0.0006263469999999993, 0.0006263339999999992, 0.0006263339999999992, 0.0006...</msg>
<status status="PASS" starttime="20201029 18:18:45.069" endtime="20201029 18:18:45.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.080" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:45.078" endtime="20201029 18:18:45.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.085" level="INFO">VALUE: [0.0006263190000000002, 0.0006263050000000006, 0.0006263060000000001, 0.0006263610000000024, 0.0006263469999999993, 0.0006263469999999993, 0.0006263339999999992, 0.0006263339999999992, 0.0006263749999999985, 0.0006263329999999998, 0.0006263329999999998, 0.0006263469999999993, 0.0006263199999999997, 0.0006263469999999993, 0.0006263339999999992, 0.0006263469999999993, 0.0006263469999999993, 0.0006263469999999993, 0.0006263469999999993, 0.0006263470000000063, 0.0006263469999999993, 0.0006263339999999992, 0.0006263339999999992, 0.0006263469999999993, 0.0006263469999999993, 0.0006263609999999989, 0.0006263329999999998, 0.0006263469999999993, 0.0006263480000000057, 0.0006263469999999993, 0.0006263190000000002, 0.0006263190000000002, 0.0006263610000000058, 0.0006263190000000002, 0.0006263469999999993, 0.0006263479999999988, 0.0006264030000000045, 0.0006263329999999998, 0.0006263469999999993, 0.0006263329999999998, 0.0006263609999999989, 0.0006263339999999992, 0.0006263329999999998, 0.0006263610000000058, 0.0006263610000000058, 0.0006263329999999928, 0.0006263330000000067, 0.0006263330000000067, 0.0006263749999999985, 0.0006263749999999985]</msg>
<status status="PASS" starttime="20201029 18:18:45.082" endtime="20201029 18:18:45.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.073" endtime="20201029 18:18:45.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.683" endtime="20201029 18:18:45.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.660" endtime="20201029 18:18:45.089"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:45.094" endtime="20201029 18:18:45.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.091" endtime="20201029 18:18:45.117"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.133" endtime="20201029 18:18:45.198"></status>
</kw>
<msg timestamp="20201029 18:18:45.199" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:45.130" endtime="20201029 18:18:45.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.204" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:45.201" endtime="20201029 18:18:45.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.206" endtime="20201029 18:18:45.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.125" endtime="20201029 18:18:45.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.121" endtime="20201029 18:18:45.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.227" endtime="20201029 18:18:45.519"></status>
</kw>
<msg timestamp="20201029 18:18:45.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029521042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030168097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:45.224" endtime="20201029 18:18:45.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029521042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030168097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:45.523" endtime="20201029 18:18:45.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.531" endtime="20201029 18:18:45.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.218" endtime="20201029 18:18:45.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.215" endtime="20201029 18:18:45.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:45.537" level="INFO">${PHILIP_RES} = [{'diff': 0.0006470550000000005}, {'diff': 0.0006471249999999984}, {'diff': 0.0006470829999999997}, {'diff': 0.0006470829999999997}, {'diff': 0.0006470970000000062}, {'diff': 0.0006470829999999997}, {...</msg>
<status status="PASS" starttime="20201029 18:18:45.534" endtime="20201029 18:18:45.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:45.541" level="INFO">${RESULT} = {'diff': [0.0006470550000000005, 0.0006471249999999984, 0.0006470829999999997, 0.0006470829999999997, 0.0006470970000000062, 0.0006470829999999997, 0.0006470690000000001, 0.0006470829999999997, 0.0006...</msg>
<status status="PASS" starttime="20201029 18:18:45.538" endtime="20201029 18:18:45.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.545" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:45.544" endtime="20201029 18:18:45.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.548" level="INFO">VALUE: [0.0006470550000000005, 0.0006471249999999984, 0.0006470829999999997, 0.0006470829999999997, 0.0006470970000000062, 0.0006470829999999997, 0.0006470690000000001, 0.0006470829999999997, 0.0006471669999999971, 0.0006471519999999981, 0.0006470969999999993, 0.0006470829999999997, 0.0006470690000000001, 0.0006470969999999993, 0.0006470829999999997, 0.0006470829999999997, 0.0006470970000000062, 0.0006470969999999993, 0.0006470550000000005, 0.0006470969999999993, 0.0006470829999999997, 0.0006470280000000009, 0.0006470969999999993, 0.0006470829999999997, 0.0006470969999999993, 0.0006470969999999993, 0.0006471109999999988, 0.0006470840000000061, 0.0006470970000000062, 0.0006470829999999997, 0.0006470969999999993, 0.0006470829999999927, 0.0006471390000000049, 0.0006470979999999987, 0.0006470969999999993, 0.0006470969999999993, 0.0006470830000000066, 0.0006470829999999927, 0.0006470829999999927, 0.0006470699999999996, 0.0006471109999999919, 0.0006470829999999927, 0.0006470830000000066, 0.0006470830000000066, 0.0006470969999999993, 0.0006470699999999996, 0.0006470830000000066, 0.0006470699999999996, 0.0006470969999999993, 0.0006470830000000066]</msg>
<status status="PASS" starttime="20201029 18:18:45.546" endtime="20201029 18:18:45.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.542" endtime="20201029 18:18:45.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.118" endtime="20201029 18:18:45.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.090" endtime="20201029 18:18:45.550"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:45.553" endtime="20201029 18:18:45.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.551" endtime="20201029 18:18:45.573"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.581" endtime="20201029 18:18:45.644"></status>
</kw>
<msg timestamp="20201029 18:18:45.644" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:45.579" endtime="20201029 18:18:45.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.647" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:45.645" endtime="20201029 18:18:45.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.648" endtime="20201029 18:18:45.649"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.577" endtime="20201029 18:18:45.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.575" endtime="20201029 18:18:45.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.657" endtime="20201029 18:18:45.942"></status>
</kw>
<msg timestamp="20201029 18:18:45.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017591736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018259833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:45.655" endtime="20201029 18:18:45.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017591736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018259833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:45.946" endtime="20201029 18:18:45.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.954" endtime="20201029 18:18:45.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.653" endtime="20201029 18:18:45.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.651" endtime="20201029 18:18:45.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:45.960" level="INFO">${PHILIP_RES} = [{'diff': 0.0006680969999999994}, {'diff': 0.0006681670000000008}, {'diff': 0.0006681670000000008}, {'diff': 0.0006681530000000012}, {'diff': 0.0006681529999999977}, {'diff': 0.0006681660000000013}, {...</msg>
<status status="PASS" starttime="20201029 18:18:45.957" endtime="20201029 18:18:45.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:45.965" level="INFO">${RESULT} = {'diff': [0.0006680969999999994, 0.0006681670000000008, 0.0006681670000000008, 0.0006681530000000012, 0.0006681529999999977, 0.0006681660000000013, 0.0006681670000000008, 0.000668110999999999, 0.00066...</msg>
<status status="PASS" starttime="20201029 18:18:45.961" endtime="20201029 18:18:45.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.969" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:45.968" endtime="20201029 18:18:45.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.972" level="INFO">VALUE: [0.0006680969999999994, 0.0006681670000000008, 0.0006681670000000008, 0.0006681530000000012, 0.0006681529999999977, 0.0006681660000000013, 0.0006681670000000008, 0.000668110999999999, 0.0006681660000000013, 0.0006681530000000012, 0.0006681670000000008, 0.0006681519999999982, 0.0006681249999999986, 0.0006681669999999973, 0.0006681530000000047, 0.0006682080000000035, 0.000668110999999999, 0.0006681949999999964, 0.0006681669999999973, 0.0006681519999999982, 0.0006680969999999994, 0.0006681670000000042, 0.0006681800000000043, 0.0006681530000000047, 0.0006681529999999977, 0.0006681809999999969, 0.0006681809999999969, 0.0006681249999999986, 0.0006681389999999982, 0.0006681670000000042, 0.0006681800000000043, 0.0006681389999999982, 0.0006681669999999973, 0.0006681659999999978, 0.0006681669999999973, 0.0006681670000000042, 0.0006681530000000047, 0.0006681390000000051, 0.0006681670000000042, 0.0006681809999999969, 0.0006681940000000108, 0.0006681800000000043, 0.0006681669999999973, 0.0006681530000000047, 0.0006681519999999913, 0.0006681809999999899, 0.0006681669999999973, 0.0006681389999999982, 0.0006681389999999982, 0.0006681799999999904]</msg>
<status status="PASS" starttime="20201029 18:18:45.970" endtime="20201029 18:18:45.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.966" endtime="20201029 18:18:45.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.573" endtime="20201029 18:18:45.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.551" endtime="20201029 18:18:45.973"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:45.976" endtime="20201029 18:18:45.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.974" endtime="20201029 18:18:45.997"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.014" endtime="20201029 18:18:46.081"></status>
</kw>
<msg timestamp="20201029 18:18:46.082" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:46.011" endtime="20201029 18:18:46.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.087" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:46.085" endtime="20201029 18:18:46.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.090" endtime="20201029 18:18:46.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.006" endtime="20201029 18:18:46.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.002" endtime="20201029 18:18:46.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.108" endtime="20201029 18:18:46.400"></status>
</kw>
<msg timestamp="20201029 18:18:46.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029664625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030354111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:46.105" endtime="20201029 18:18:46.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029664625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030354111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:46.404" endtime="20201029 18:18:46.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.412" endtime="20201029 18:18:46.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.100" endtime="20201029 18:18:46.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.096" endtime="20201029 18:18:46.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:46.418" level="INFO">${PHILIP_RES} = [{'diff': 0.0006894859999999996}, {'diff': 0.0006895410000000018}, {'diff': 0.0006895279999999948}, {'diff': 0.0006895420000000013}, {'diff': 0.0006895280000000018}, {'diff': 0.0006895270000000023}, {...</msg>
<status status="PASS" starttime="20201029 18:18:46.415" endtime="20201029 18:18:46.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:46.422" level="INFO">${RESULT} = {'diff': [0.0006894859999999996, 0.0006895410000000018, 0.0006895279999999948, 0.0006895420000000013, 0.0006895280000000018, 0.0006895270000000023, 0.0006895420000000013, 0.0006895279999999948, 0.0006...</msg>
<status status="PASS" starttime="20201029 18:18:46.419" endtime="20201029 18:18:46.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.426" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:46.425" endtime="20201029 18:18:46.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.429" level="INFO">VALUE: [0.0006894859999999996, 0.0006895410000000018, 0.0006895279999999948, 0.0006895420000000013, 0.0006895280000000018, 0.0006895270000000023, 0.0006895420000000013, 0.0006895279999999948, 0.0006895410000000018, 0.0006895420000000013, 0.0006895280000000018, 0.0006895280000000018, 0.0006895269999999953, 0.0006895420000000013, 0.0006895280000000018, 0.0006895280000000018, 0.0006895280000000018, 0.0006895419999999944, 0.0006895280000000018, 0.0006895550000000014, 0.0006895420000000013, 0.0006895560000000009, 0.0006895279999999948, 0.0006895410000000018, 0.0006895280000000018, 0.0006895560000000009, 0.0006895410000000018, 0.0006895549999999945, 0.0006895279999999948, 0.0006894719999999965, 0.0006895270000000092, 0.0006895279999999948, 0.0006895140000000022, 0.0006895280000000087, 0.0006895279999999948, 0.0006895829999999936, 0.0006895140000000022, 0.0006895829999999936, 0.0006895140000000022, 0.000689555999999994, 0.0006895140000000022, 0.0006895549999999945, 0.0006895000000000095, 0.0006895420000000013, 0.0006895140000000022, 0.0006895279999999948, 0.0006894859999999892, 0.0006895420000000013, 0.0006895410000000018, 0.0006895420000000013]</msg>
<status status="PASS" starttime="20201029 18:18:46.428" endtime="20201029 18:18:46.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.423" endtime="20201029 18:18:46.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.998" endtime="20201029 18:18:46.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.974" endtime="20201029 18:18:46.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.651" endtime="20201029 18:18:46.431"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:24.336" endtime="20201029 18:18:46.431" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:18:04.021" endtime="20201029 18:18:46.440"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.508" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:18:46.516" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:18:47.715" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:18:46.507" endtime="20201029 18:18:47.717"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.722" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:18:47.719" endtime="20201029 18:18:47.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.505" endtime="20201029 18:18:47.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:47.728" endtime="20201029 18:18:47.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.725" endtime="20201029 18:18:47.993"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.005" endtime="20201029 18:18:48.019"></status>
</kw>
<msg timestamp="20201029 18:18:48.020" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [': This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success...</msg>
<status status="PASS" starttime="20201029 18:18:48.004" endtime="20201029 18:18:48.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.022" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [': This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success...</msg>
<status status="PASS" starttime="20201029 18:18:48.021" endtime="20201029 18:18:48.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.025" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:48.023" endtime="20201029 18:18:48.026"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:48.001" endtime="20201029 18:18:48.026"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:47.999" endtime="20201029 18:18:48.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.997" endtime="20201029 18:18:48.027"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:48.031" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:48.030" endtime="20201029 18:18:48.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.028" endtime="20201029 18:18:48.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.997" endtime="20201029 18:18:48.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.996" endtime="20201029 18:18:48.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.033" endtime="20201029 18:18:48.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.995" endtime="20201029 18:18:48.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.035" endtime="20201029 18:18:48.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.993" endtime="20201029 18:18:48.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.504" endtime="20201029 18:18:48.038"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:48.043" endtime="20201029 18:18:48.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.042" endtime="20201029 18:18:48.064"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.078" endtime="20201029 18:18:48.091"></status>
</kw>
<msg timestamp="20201029 18:18:48.091" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.076" endtime="20201029 18:18:48.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.094" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.092" endtime="20201029 18:18:48.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.097" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:48.095" endtime="20201029 18:18:48.097"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:48.074" endtime="20201029 18:18:48.098"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:48.071" endtime="20201029 18:18:48.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.070" endtime="20201029 18:18:48.099"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:48.102" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:48.102" endtime="20201029 18:18:48.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.099" endtime="20201029 18:18:48.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.069" endtime="20201029 18:18:48.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.068" endtime="20201029 18:18:48.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.104" endtime="20201029 18:18:48.106"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.066" endtime="20201029 18:18:48.106"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.064" endtime="20201029 18:18:48.106"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.041" endtime="20201029 18:18:48.107"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.117" endtime="20201029 18:18:48.134"></status>
</kw>
<msg timestamp="20201029 18:18:48.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.115" endtime="20201029 18:18:48.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.136" endtime="20201029 18:18:48.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.138" endtime="20201029 18:18:48.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.112" endtime="20201029 18:18:48.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.110" endtime="20201029 18:18:48.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.147" endtime="20201029 18:18:48.438"></status>
</kw>
<msg timestamp="20201029 18:18:48.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066445097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066467833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.146" endtime="20201029 18:18:48.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066445097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066467833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.442" endtime="20201029 18:18:48.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.450" endtime="20201029 18:18:48.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.143" endtime="20201029 18:18:48.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.141" endtime="20201029 18:18:48.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:48.457" level="INFO">${RESULT} = [{'diff': 2.2736000000009304e-05}, {'diff': 2.2250000000001435e-05}, {'diff': 2.1971999999995107e-05}, {'diff': 2.1736000000008304e-05}, {'diff': 2.2179999999996647e-05}, {'diff': 2.2221999999988418e-...</msg>
<status status="PASS" starttime="20201029 18:18:48.454" endtime="20201029 18:18:48.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:48.461" level="INFO">${ACCURACY} = {'diff': [2.2736000000009304e-05, 2.2250000000001435e-05, 2.1971999999995107e-05, 2.1736000000008304e-05, 2.2179999999996647e-05, 2.2221999999988418e-05, 2.2722000000002796e-05, 2.269500000000313e-05,...</msg>
<status status="PASS" starttime="20201029 18:18:48.458" endtime="20201029 18:18:48.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.466" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 18:18:48.465" endtime="20201029 18:18:48.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.468" level="INFO">VALUE: [2.2736000000009304e-05, 2.2250000000001435e-05, 2.1971999999995107e-05, 2.1736000000008304e-05, 2.2179999999996647e-05, 2.2221999999988418e-05, 2.2722000000002796e-05, 2.269500000000313e-05, 2.2181000000009998e-05, 2.2055999999992526e-05, 2.2069999999999035e-05, 2.2250000000001435e-05, 2.187500000000453e-05, 2.2263999999994066e-05, 2.2263999999994066e-05, 2.2486000000002115e-05, 2.2542000000000395e-05, 2.2707999999996287e-05, 2.188899999999716e-05, 2.265299999999748e-05, 2.2582999999992692e-05, 2.183299999999888e-05, 2.2112000000004683e-05, 2.2137999999990998e-05, 2.208300000000607e-05, 2.2250000000001435e-05, 2.2222000000002295e-05, 2.187500000000453e-05, 2.238899999999766e-05, 2.181900000000625e-05, 2.25969999999992e-05, 2.206899999999956e-05, 2.2069999999999035e-05, 2.2056000000006404e-05, 2.2069999999999035e-05, 2.237500000000503e-05, 2.243100000000331e-05, 2.2250000000001435e-05, 2.212499999999784e-05, 2.244499999999594e-05, 2.240300000000417e-05, 2.212499999999784e-05, 2.2319999999992346e-05, 2.2569999999999535e-05, 2.2305999999999715e-05, 2.240300000000417e-05, 2.194499999999544e-05, 2.23610000000124e-05, 2.1916000000010705e-05, 2.2207999999995787e-05]</msg>
<status status="PASS" starttime="20201029 18:18:48.467" endtime="20201029 18:18:48.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.462" endtime="20201029 18:18:48.469"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:48.472" endtime="20201029 18:18:48.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.471" endtime="20201029 18:18:48.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.470" endtime="20201029 18:18:48.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.108" endtime="20201029 18:18:48.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.108" endtime="20201029 18:18:48.494"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.506" endtime="20201029 18:18:48.522"></status>
</kw>
<msg timestamp="20201029 18:18:48.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.504" endtime="20201029 18:18:48.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.524" endtime="20201029 18:18:48.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.526" endtime="20201029 18:18:48.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.500" endtime="20201029 18:18:48.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.497" endtime="20201029 18:18:48.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.536" endtime="20201029 18:18:48.821"></status>
</kw>
<msg timestamp="20201029 18:18:48.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026401444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026423847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.534" endtime="20201029 18:18:48.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026401444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026423847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.825" endtime="20201029 18:18:48.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.834" endtime="20201029 18:18:48.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.531" endtime="20201029 18:18:48.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.529" endtime="20201029 18:18:48.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:48.843" level="INFO">${RESULT} = [{'diff': 2.24030000000007e-05}, {'diff': 2.263899999999791e-05}, {'diff': 2.2221999999998826e-05}, {'diff': 2.208299999999913e-05}, {'diff': 2.2013999999997286e-05}, {'diff': 2.2207999999999256e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:48.839" endtime="20201029 18:18:48.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:48.847" level="INFO">${ACCURACY} = {'diff': [2.24030000000007e-05, 2.263899999999791e-05, 2.2221999999998826e-05, 2.208299999999913e-05, 2.2013999999997286e-05, 2.2207999999999256e-05, 2.2250000000001435e-05, 2.187500000000106e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 18:18:48.844" endtime="20201029 18:18:48.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.852" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 18:18:48.850" endtime="20201029 18:18:48.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.855" level="INFO">VALUE: [2.24030000000007e-05, 2.263899999999791e-05, 2.2221999999998826e-05, 2.208299999999913e-05, 2.2013999999997286e-05, 2.2207999999999256e-05, 2.2250000000001435e-05, 2.187500000000106e-05, 2.2555999999999965e-05, 2.1805999999999215e-05, 2.212500000000131e-05, 2.2514000000001255e-05, 2.24030000000007e-05, 2.245899999999898e-05, 2.2083999999998605e-05, 2.2041999999999895e-05, 2.237500000000156e-05, 2.261100000000224e-05, 2.27229999999988e-05, 2.206899999999956e-05, 2.2416000000000796e-05, 2.209700000000217e-05, 2.2430000000000366e-05, 2.2387999999998187e-05, 2.1972000000002045e-05, 2.179100000000017e-05, 2.2430000000000366e-05, 2.212499999999784e-05, 2.238900000000113e-05, 2.2000000000001185e-05, 2.25969999999992e-05, 2.2250000000001435e-05, 2.243099999999984e-05, 2.256900000000006e-05, 2.236100000000199e-05, 2.2069999999999035e-05, 2.2041999999999895e-05, 2.2041999999999895e-05, 2.2069999999999035e-05, 2.2542000000000395e-05, 2.245900000000245e-05, 2.230500000000024e-05, 2.243099999999984e-05, 2.2235999999998396e-05, 2.2597999999998675e-05, 2.258299999999963e-05, 2.2250000000001435e-05, 2.261099999999877e-05, 2.213899999999741e-05, 2.2694000000000186e-05]</msg>
<status status="PASS" starttime="20201029 18:18:48.853" endtime="20201029 18:18:48.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.848" endtime="20201029 18:18:48.856"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:48.859" endtime="20201029 18:18:48.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.858" endtime="20201029 18:18:48.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.857" endtime="20201029 18:18:48.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.495" endtime="20201029 18:18:48.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.494" endtime="20201029 18:18:48.880"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.888" endtime="20201029 18:18:48.904"></status>
</kw>
<msg timestamp="20201029 18:18:48.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.887" endtime="20201029 18:18:48.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.906" endtime="20201029 18:18:48.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.908" endtime="20201029 18:18:48.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.884" endtime="20201029 18:18:48.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.882" endtime="20201029 18:18:48.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.918" endtime="20201029 18:18:49.203"></status>
</kw>
<msg timestamp="20201029 18:18:49.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021693847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021716444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.916" endtime="20201029 18:18:49.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021693847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021716444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:49.208" endtime="20201029 18:18:49.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.217" endtime="20201029 18:18:49.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.914" endtime="20201029 18:18:49.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.912" endtime="20201029 18:18:49.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:49.225" level="INFO">${RESULT} = [{'diff': 2.259700000000267e-05}, {'diff': 2.2221999999998826e-05}, {'diff': 2.1735999999997896e-05}, {'diff': 2.2221999999998826e-05}, {'diff': 2.2014000000000755e-05}, {'diff': 2.206899999999956e-05...</msg>
<status status="PASS" starttime="20201029 18:18:49.221" endtime="20201029 18:18:49.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:49.236" level="INFO">${ACCURACY} = {'diff': [2.259700000000267e-05, 2.2221999999998826e-05, 2.1735999999997896e-05, 2.2221999999998826e-05, 2.2014000000000755e-05, 2.206899999999956e-05, 2.24030000000007e-05, 2.211099999999827e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 18:18:49.226" endtime="20201029 18:18:49.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.240" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 18:18:49.239" endtime="20201029 18:18:49.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.244" level="INFO">VALUE: [2.259700000000267e-05, 2.2221999999998826e-05, 2.1735999999997896e-05, 2.2221999999998826e-05, 2.2014000000000755e-05, 2.206899999999956e-05, 2.24030000000007e-05, 2.211099999999827e-05, 2.2278000000000575e-05, 2.208299999999913e-05, 2.238899999999766e-05, 2.1764000000000505e-05, 2.2235999999998396e-05, 2.2542000000000395e-05, 2.1958000000002476e-05, 2.213900000000088e-05, 2.215300000000045e-05, 2.2249999999997966e-05, 2.211099999999827e-05, 2.198700000000109e-05, 2.263900000000138e-05, 2.2542000000000395e-05, 2.2014000000000755e-05, 2.2652000000001477e-05, 2.258299999999963e-05, 2.244499999999941e-05, 2.2750000000001935e-05, 2.2707999999999756e-05, 2.2540999999997452e-05, 2.1985999999998146e-05, 2.266700000000052e-05, 2.187500000000106e-05, 2.24030000000007e-05, 2.183299999999888e-05, 2.205499999999999e-05, 2.2292000000000145e-05, 2.2250000000001435e-05, 2.195899999999848e-05, 2.2277999999997106e-05, 2.266699999999705e-05, 2.2221999999998826e-05, 2.1957999999999006e-05, 2.2499999999998216e-05, 2.1999999999997716e-05, 2.215300000000045e-05, 2.2249999999997966e-05, 2.2277999999997106e-05, 2.251300000000178e-05, 2.2221999999998826e-05, 2.187499999999759e-05]</msg>
<status status="PASS" starttime="20201029 18:18:49.242" endtime="20201029 18:18:49.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.237" endtime="20201029 18:18:49.246"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:49.252" endtime="20201029 18:18:49.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.250" endtime="20201029 18:18:49.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.248" endtime="20201029 18:18:49.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.881" endtime="20201029 18:18:49.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.880" endtime="20201029 18:18:49.273"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.281" endtime="20201029 18:18:49.298"></status>
</kw>
<msg timestamp="20201029 18:18:49.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.280" endtime="20201029 18:18:49.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.299" endtime="20201029 18:18:49.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.302" endtime="20201029 18:18:49.304"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.277" endtime="20201029 18:18:49.305"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.275" endtime="20201029 18:18:49.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.311" endtime="20201029 18:18:49.618"></status>
</kw>
<msg timestamp="20201029 18:18:49.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022373653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022396028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:49.310" endtime="20201029 18:18:49.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022373653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022396028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:49.623" endtime="20201029 18:18:49.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.631" endtime="20201029 18:18:49.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.307" endtime="20201029 18:18:49.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.306" endtime="20201029 18:18:49.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:49.638" level="INFO">${RESULT} = [{'diff': 2.237499999999809e-05}, {'diff': 2.195899999999848e-05}, {'diff': 2.195899999999848e-05}, {'diff': 2.2098000000001644e-05}, {'diff': 2.2319999999999285e-05}, {'diff': 2.1902000000000726e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:49.634" endtime="20201029 18:18:49.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:49.642" level="INFO">${ACCURACY} = {'diff': [2.237499999999809e-05, 2.195899999999848e-05, 2.195899999999848e-05, 2.2098000000001644e-05, 2.2319999999999285e-05, 2.1902000000000726e-05, 2.269499999999966e-05, 2.2138000000001407e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:18:49.638" endtime="20201029 18:18:49.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.646" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 18:18:49.645" endtime="20201029 18:18:49.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.648" level="INFO">VALUE: [2.237499999999809e-05, 2.195899999999848e-05, 2.195899999999848e-05, 2.2098000000001644e-05, 2.2319999999999285e-05, 2.1902000000000726e-05, 2.269499999999966e-05, 2.2138000000001407e-05, 2.206899999999956e-05, 2.206899999999956e-05, 2.187500000000106e-05, 2.2249999999997966e-05, 2.1805999999999215e-05, 2.206899999999956e-05, 2.20830000000026e-05, 2.2236000000001865e-05, 2.187500000000106e-05, 2.241700000000027e-05, 2.1957999999999006e-05, 2.265300000000095e-05, 2.2555999999999965e-05, 2.265300000000095e-05, 2.238899999999766e-05, 2.1764000000000505e-05, 2.240299999999723e-05, 2.244499999999941e-05, 2.234699999999895e-05, 2.197299999999805e-05, 2.193100000000281e-05, 2.181899999999931e-05, 2.2098000000001644e-05, 2.2278000000000575e-05, 2.2512999999998312e-05, 2.213900000000088e-05, 2.256900000000006e-05, 2.230500000000024e-05, 2.256900000000006e-05, 2.181899999999931e-05, 2.212500000000131e-05, 2.2000000000001185e-05, 2.1999999999997716e-05, 2.222300000000177e-05, 2.193099999999934e-05, 2.2735999999998896e-05, 2.266700000000052e-05, 2.268100000000009e-05, 2.1791999999999645e-05, 2.1944000000002906e-05, 2.2292000000000145e-05, 2.187500000000106e-05]</msg>
<status status="PASS" starttime="20201029 18:18:49.647" endtime="20201029 18:18:49.649"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.642" endtime="20201029 18:18:49.649"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:49.653" endtime="20201029 18:18:49.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.651" endtime="20201029 18:18:49.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.650" endtime="20201029 18:18:49.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.274" endtime="20201029 18:18:49.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.273" endtime="20201029 18:18:49.674"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.683" endtime="20201029 18:18:49.700"></status>
</kw>
<msg timestamp="20201029 18:18:49.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.681" endtime="20201029 18:18:49.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.701" endtime="20201029 18:18:49.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.704" endtime="20201029 18:18:49.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.678" endtime="20201029 18:18:49.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.676" endtime="20201029 18:18:49.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.713" endtime="20201029 18:18:50.000"></status>
</kw>
<msg timestamp="20201029 18:18:50.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023065458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023087722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:49.711" endtime="20201029 18:18:50.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023065458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023087722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:50.004" endtime="20201029 18:18:50.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.013" endtime="20201029 18:18:50.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.709" endtime="20201029 18:18:50.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.707" endtime="20201029 18:18:50.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:50.019" level="INFO">${RESULT} = [{'diff': 2.2264000000001005e-05}, {'diff': 2.265299999999748e-05}, {'diff': 2.19030000000002e-05}, {'diff': 2.24030000000007e-05}, {'diff': 2.258299999999963e-05}, {'diff': 2.2749999999998466e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:50.016" endtime="20201029 18:18:50.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:50.023" level="INFO">${ACCURACY} = {'diff': [2.2264000000001005e-05, 2.265299999999748e-05, 2.19030000000002e-05, 2.24030000000007e-05, 2.258299999999963e-05, 2.2749999999998466e-05, 2.2749999999998466e-05, 2.256900000000006e-05, 2.215...</msg>
<status status="PASS" starttime="20201029 18:18:50.020" endtime="20201029 18:18:50.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.028" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 18:18:50.027" endtime="20201029 18:18:50.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.030" level="INFO">VALUE: [2.2264000000001005e-05, 2.265299999999748e-05, 2.19030000000002e-05, 2.24030000000007e-05, 2.258299999999963e-05, 2.2749999999998466e-05, 2.2749999999998466e-05, 2.256900000000006e-05, 2.215300000000045e-05, 2.2055999999999465e-05, 2.237500000000156e-05, 2.211100000000174e-05, 2.212500000000131e-05, 2.2319999999999285e-05, 2.2569999999999535e-05, 2.269499999999966e-05, 2.2193999999999686e-05, 2.2055999999999465e-05, 2.270899999999923e-05, 2.248699999999812e-05, 2.2542000000000395e-05, 2.1986000000001615e-05, 2.19030000000002e-05, 2.2651999999998007e-05, 2.2500000000001685e-05, 2.245899999999898e-05, 2.202700000000085e-05, 2.2221999999998826e-05, 2.255500000000049e-05, 2.1943999999999436e-05, 2.1972000000002045e-05, 2.2290999999997202e-05, 2.191699999999977e-05, 2.2694000000000186e-05, 2.1791999999999645e-05, 2.2292000000000145e-05, 2.20969999999987e-05, 2.2221999999998826e-05, 2.187500000000106e-05, 2.2542000000000395e-05, 2.2707999999999756e-05, 2.238900000000113e-05, 2.1778000000000075e-05, 2.2416000000000796e-05, 2.180499999999974e-05, 2.2250000000001435e-05, 2.2542000000000395e-05, 2.244499999999941e-05, 2.1916000000000296e-05, 2.2207999999999256e-05]</msg>
<status status="PASS" starttime="20201029 18:18:50.029" endtime="20201029 18:18:50.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.024" endtime="20201029 18:18:50.032"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:50.036" endtime="20201029 18:18:50.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.034" endtime="20201029 18:18:50.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.033" endtime="20201029 18:18:50.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.674" endtime="20201029 18:18:50.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.674" endtime="20201029 18:18:50.056"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.065" endtime="20201029 18:18:50.081"></status>
</kw>
<msg timestamp="20201029 18:18:50.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.064" endtime="20201029 18:18:50.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.083" endtime="20201029 18:18:50.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.085" endtime="20201029 18:18:50.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.061" endtime="20201029 18:18:50.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.059" endtime="20201029 18:18:50.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.094" endtime="20201029 18:18:50.400"></status>
</kw>
<msg timestamp="20201029 18:18:50.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022427847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022450375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:50.093" endtime="20201029 18:18:50.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022427847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022450375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:50.405" endtime="20201029 18:18:50.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.413" endtime="20201029 18:18:50.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.090" endtime="20201029 18:18:50.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.088" endtime="20201029 18:18:50.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:50.420" level="INFO">${RESULT} = [{'diff': 2.2528000000000825e-05}, {'diff': 2.1958000000002476e-05}, {'diff': 2.2333999999998855e-05}, {'diff': 2.2249999999997966e-05}, {'diff': 2.211100000000174e-05}, {'diff': 2.1764000000000505e-0...</msg>
<status status="PASS" starttime="20201029 18:18:50.417" endtime="20201029 18:18:50.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:50.425" level="INFO">${ACCURACY} = {'diff': [2.2528000000000825e-05, 2.1958000000002476e-05, 2.2333999999998855e-05, 2.2249999999997966e-05, 2.211100000000174e-05, 2.1764000000000505e-05, 2.263900000000138e-05, 2.191699999999977e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:18:50.421" endtime="20201029 18:18:50.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.430" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 18:18:50.429" endtime="20201029 18:18:50.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.432" level="INFO">VALUE: [2.2528000000000825e-05, 2.1958000000002476e-05, 2.2333999999998855e-05, 2.2249999999997966e-05, 2.211100000000174e-05, 2.1764000000000505e-05, 2.263900000000138e-05, 2.191699999999977e-05, 2.187500000000106e-05, 2.2222000000002295e-05, 2.2457999999999506e-05, 2.273699999999837e-05, 2.2555999999999965e-05, 2.2000000000001185e-05, 2.1972000000002045e-05, 2.212499999999784e-05, 2.209700000000217e-05, 2.2221999999998826e-05, 2.205499999999999e-05, 2.238900000000113e-05, 2.2236000000001865e-05, 2.237500000000156e-05, 2.2749999999998466e-05, 2.2735999999998896e-05, 2.208299999999913e-05, 2.187500000000106e-05, 2.2083999999998605e-05, 2.2333999999998855e-05, 2.2264000000001005e-05, 2.1971999999998576e-05, 2.2500000000001685e-05, 2.272300000000227e-05, 2.247300000000202e-05, 2.238899999999766e-05, 2.262500000000181e-05, 2.206899999999956e-05, 2.2278000000000575e-05, 2.2721999999999326e-05, 2.2486000000002115e-05, 2.240299999999723e-05, 2.1971999999998576e-05, 2.1943999999999436e-05, 2.1971999999998576e-05, 2.209700000000217e-05, 2.1764000000000505e-05, 2.211099999999827e-05, 2.265300000000095e-05, 2.2056000000002934e-05, 2.238900000000113e-05, 2.1819999999998785e-05]</msg>
<status status="PASS" starttime="20201029 18:18:50.431" endtime="20201029 18:18:50.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.426" endtime="20201029 18:18:50.433"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:50.437" endtime="20201029 18:18:50.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.435" endtime="20201029 18:18:50.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.434" endtime="20201029 18:18:50.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.057" endtime="20201029 18:18:50.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.057" endtime="20201029 18:18:50.458"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.467" endtime="20201029 18:18:50.483"></status>
</kw>
<msg timestamp="20201029 18:18:50.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.465" endtime="20201029 18:18:50.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.485" endtime="20201029 18:18:50.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.487" endtime="20201029 18:18:50.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.462" endtime="20201029 18:18:50.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.460" endtime="20201029 18:18:50.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.496" endtime="20201029 18:18:50.787"></status>
</kw>
<msg timestamp="20201029 18:18:50.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02231675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022338819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:50.495" endtime="20201029 18:18:50.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02231675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022338819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:50.791" endtime="20201029 18:18:50.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.800" endtime="20201029 18:18:50.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.492" endtime="20201029 18:18:50.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.490" endtime="20201029 18:18:50.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:50.807" level="INFO">${RESULT} = [{'diff': 2.206899999999956e-05}, {'diff': 2.1888000000001157e-05}, {'diff': 2.1916000000000296e-05}, {'diff': 2.2235999999998396e-05}, {'diff': 2.187500000000106e-05}, {'diff': 2.208299999999913e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:50.804" endtime="20201029 18:18:50.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:50.811" level="INFO">${ACCURACY} = {'diff': [2.206899999999956e-05, 2.1888000000001157e-05, 2.1916000000000296e-05, 2.2235999999998396e-05, 2.187500000000106e-05, 2.208299999999913e-05, 2.2694000000000186e-05, 2.2500000000001685e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:18:50.808" endtime="20201029 18:18:50.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.816" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 18:18:50.815" endtime="20201029 18:18:50.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.818" level="INFO">VALUE: [2.206899999999956e-05, 2.1888000000001157e-05, 2.1916000000000296e-05, 2.2235999999998396e-05, 2.187500000000106e-05, 2.208299999999913e-05, 2.2694000000000186e-05, 2.2500000000001685e-05, 2.2028000000000325e-05, 2.24030000000007e-05, 2.213900000000088e-05, 2.1986000000001615e-05, 2.208299999999913e-05, 2.2486000000002115e-05, 2.2208000000002726e-05, 2.238899999999766e-05, 2.233299999999938e-05, 2.2500000000001685e-05, 2.243099999999984e-05, 2.1791999999999645e-05, 2.2069999999999035e-05, 2.187499999999759e-05, 2.2083999999998605e-05, 2.2542000000000395e-05, 2.234699999999895e-05, 2.2569999999999535e-05, 2.2651999999998007e-05, 2.2387999999998187e-05, 2.2457999999999506e-05, 2.1916000000000296e-05, 2.237500000000156e-05, 2.180499999999974e-05, 2.24030000000007e-05, 2.1957999999999006e-05, 2.229100000000067e-05, 2.255500000000049e-05, 2.2514000000001255e-05, 2.2235999999998396e-05, 2.208299999999913e-05, 2.187499999999759e-05, 2.2263999999997536e-05, 2.1957999999999006e-05, 2.209700000000217e-05, 2.1957999999999006e-05, 2.2292000000000145e-05, 2.2084000000002074e-05, 2.2070000000002504e-05, 2.241700000000027e-05, 2.2652000000001477e-05, 2.2250000000001435e-05]</msg>
<status status="PASS" starttime="20201029 18:18:50.817" endtime="20201029 18:18:50.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.812" endtime="20201029 18:18:50.820"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:50.824" endtime="20201029 18:18:50.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.822" endtime="20201029 18:18:50.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.821" endtime="20201029 18:18:50.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.459" endtime="20201029 18:18:50.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.458" endtime="20201029 18:18:50.844"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.854" endtime="20201029 18:18:50.870"></status>
</kw>
<msg timestamp="20201029 18:18:50.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.852" endtime="20201029 18:18:50.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.872" endtime="20201029 18:18:50.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.875" endtime="20201029 18:18:50.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.849" endtime="20201029 18:18:50.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.847" endtime="20201029 18:18:50.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.884" endtime="20201029 18:18:51.207"></status>
</kw>
<msg timestamp="20201029 18:18:51.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023250444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023273181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:50.883" endtime="20201029 18:18:51.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023250444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023273181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:51.211" endtime="20201029 18:18:51.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.219" endtime="20201029 18:18:51.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.880" endtime="20201029 18:18:51.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.878" endtime="20201029 18:18:51.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:51.226" level="INFO">${RESULT} = [{'diff': 2.273700000000184e-05}, {'diff': 2.238900000000113e-05}, {'diff': 2.22770000000011e-05}, {'diff': 2.1971999999998576e-05}, {'diff': 2.2500000000001685e-05}, {'diff': 2.22770000000011e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:51.223" endtime="20201029 18:18:51.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:51.230" level="INFO">${ACCURACY} = {'diff': [2.273700000000184e-05, 2.238900000000113e-05, 2.22770000000011e-05, 2.1971999999998576e-05, 2.2500000000001685e-05, 2.22770000000011e-05, 2.197300000000152e-05, 2.187500000000106e-05, 2.2250...</msg>
<status status="PASS" starttime="20201029 18:18:51.227" endtime="20201029 18:18:51.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.234" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 18:18:51.233" endtime="20201029 18:18:51.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.237" level="INFO">VALUE: [2.273700000000184e-05, 2.238900000000113e-05, 2.22770000000011e-05, 2.1971999999998576e-05, 2.2500000000001685e-05, 2.22770000000011e-05, 2.197300000000152e-05, 2.187500000000106e-05, 2.2250000000001435e-05, 2.1957999999999006e-05, 2.2278000000000575e-05, 2.266700000000052e-05, 2.2027999999996856e-05, 2.2055999999999465e-05, 2.237500000000156e-05, 2.2278000000000575e-05, 2.193100000000281e-05, 2.2486000000002115e-05, 2.186099999999802e-05, 2.2235999999998396e-05, 2.1749999999997466e-05, 2.265300000000095e-05, 2.1791999999999645e-05, 2.195899999999848e-05, 2.191699999999977e-05, 2.197299999999805e-05, 2.230500000000024e-05, 2.20969999999987e-05, 2.187500000000106e-05, 2.2443999999999936e-05, 2.269499999999966e-05, 2.2221999999998826e-05, 2.254100000000092e-05, 2.265299999999748e-05, 2.187500000000106e-05, 2.2207999999999256e-05, 2.1943999999999436e-05, 2.191699999999977e-05, 2.209700000000217e-05, 2.265300000000095e-05, 2.266700000000052e-05, 2.213900000000088e-05, 2.193099999999934e-05, 2.2055999999999465e-05, 2.2069999999999035e-05, 2.237499999999809e-05, 2.212500000000131e-05, 2.244499999999941e-05, 2.2735999999998896e-05, 2.2569999999999535e-05]</msg>
<status status="PASS" starttime="20201029 18:18:51.236" endtime="20201029 18:18:51.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.231" endtime="20201029 18:18:51.239"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:51.243" endtime="20201029 18:18:51.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.241" endtime="20201029 18:18:51.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.240" endtime="20201029 18:18:51.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.845" endtime="20201029 18:18:51.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.845" endtime="20201029 18:18:51.263"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.272" endtime="20201029 18:18:51.287"></status>
</kw>
<msg timestamp="20201029 18:18:51.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.270" endtime="20201029 18:18:51.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.288" endtime="20201029 18:18:51.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.291" endtime="20201029 18:18:51.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.268" endtime="20201029 18:18:51.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.266" endtime="20201029 18:18:51.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.300" endtime="20201029 18:18:51.585"></status>
</kw>
<msg timestamp="20201029 18:18:51.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021683222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021705611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:51.298" endtime="20201029 18:18:51.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021683222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021705611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:51.589" endtime="20201029 18:18:51.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.597" endtime="20201029 18:18:51.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.296" endtime="20201029 18:18:51.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.294" endtime="20201029 18:18:51.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:51.604" level="INFO">${RESULT} = [{'diff': 2.238900000000113e-05}, {'diff': 2.231899999999981e-05}, {'diff': 2.191699999999977e-05}, {'diff': 2.2693999999996717e-05}, {'diff': 2.265300000000095e-05}, {'diff': 2.2542000000000395e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:51.600" endtime="20201029 18:18:51.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:51.611" level="INFO">${ACCURACY} = {'diff': [2.238900000000113e-05, 2.231899999999981e-05, 2.191699999999977e-05, 2.2693999999996717e-05, 2.265300000000095e-05, 2.2542000000000395e-05, 2.1806000000002684e-05, 2.2277999999997106e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:18:51.605" endtime="20201029 18:18:51.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.615" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 18:18:51.614" endtime="20201029 18:18:51.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.618" level="INFO">VALUE: [2.238900000000113e-05, 2.231899999999981e-05, 2.191699999999977e-05, 2.2693999999996717e-05, 2.265300000000095e-05, 2.2542000000000395e-05, 2.1806000000002684e-05, 2.2277999999997106e-05, 2.2500000000001685e-05, 2.24030000000007e-05, 2.195900000000195e-05, 2.2277999999997106e-05, 2.1985999999998146e-05, 2.2666000000001046e-05, 2.259700000000267e-05, 2.212500000000131e-05, 2.2305999999999715e-05, 2.2416000000000796e-05, 2.211099999999827e-05, 2.2458000000002976e-05, 2.20969999999987e-05, 2.184700000000192e-05, 2.206899999999956e-05, 2.186100000000149e-05, 2.255500000000049e-05, 2.212499999999784e-05, 2.2735999999998896e-05, 2.24169999999968e-05, 2.1806000000002684e-05, 2.2292000000000145e-05, 2.2707999999999756e-05, 2.269499999999966e-05, 2.190299999999673e-05, 2.2555999999999965e-05, 2.2278000000000575e-05, 2.20969999999987e-05, 2.2402000000001226e-05, 2.212500000000131e-05, 2.2278000000000575e-05, 2.2569999999999535e-05, 2.2165999999997077e-05, 2.2235999999998396e-05, 2.211099999999827e-05, 2.229100000000067e-05, 2.206899999999956e-05, 2.245899999999898e-05, 2.209700000000217e-05, 2.2443999999999936e-05, 2.19030000000002e-05, 2.2208000000002726e-05]</msg>
<status status="PASS" starttime="20201029 18:18:51.616" endtime="20201029 18:18:51.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.612" endtime="20201029 18:18:51.619"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:51.623" endtime="20201029 18:18:51.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.621" endtime="20201029 18:18:51.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.620" endtime="20201029 18:18:51.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.264" endtime="20201029 18:18:51.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.264" endtime="20201029 18:18:51.643"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.652" endtime="20201029 18:18:51.667"></status>
</kw>
<msg timestamp="20201029 18:18:51.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.650" endtime="20201029 18:18:51.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.669" endtime="20201029 18:18:51.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.671" endtime="20201029 18:18:51.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.648" endtime="20201029 18:18:51.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.646" endtime="20201029 18:18:51.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.680" endtime="20201029 18:18:51.968"></status>
</kw>
<msg timestamp="20201029 18:18:51.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021691792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021714556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:51.679" endtime="20201029 18:18:51.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021691792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021714556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:51.972" endtime="20201029 18:18:51.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.980" endtime="20201029 18:18:51.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.676" endtime="20201029 18:18:51.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.674" endtime="20201029 18:18:51.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:51.987" level="INFO">${RESULT} = [{'diff': 2.2763999999998036e-05}, {'diff': 2.1806000000002684e-05}, {'diff': 2.213899999999741e-05}, {'diff': 2.2707999999999756e-05}, {'diff': 2.266700000000052e-05}, {'diff': 2.2207999999999256e-05...</msg>
<status status="PASS" starttime="20201029 18:18:51.984" endtime="20201029 18:18:51.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:51.991" level="INFO">${ACCURACY} = {'diff': [2.2763999999998036e-05, 2.1806000000002684e-05, 2.213899999999741e-05, 2.2707999999999756e-05, 2.266700000000052e-05, 2.2207999999999256e-05, 2.2055999999999465e-05, 2.2236000000001865e-05, ...</msg>
<status status="PASS" starttime="20201029 18:18:51.988" endtime="20201029 18:18:51.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.995" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 18:18:51.994" endtime="20201029 18:18:51.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.998" level="INFO">VALUE: [2.2763999999998036e-05, 2.1806000000002684e-05, 2.213899999999741e-05, 2.2707999999999756e-05, 2.266700000000052e-05, 2.2207999999999256e-05, 2.2055999999999465e-05, 2.2236000000001865e-05, 2.187500000000106e-05, 2.2527999999997356e-05, 2.1819999999998785e-05, 2.2305999999999715e-05, 2.238900000000113e-05, 2.212500000000131e-05, 2.1820000000002254e-05, 2.2333999999998855e-05, 2.2250000000001435e-05, 2.195899999999848e-05, 2.212500000000131e-05, 2.213899999999741e-05, 2.2514000000001255e-05, 2.205499999999999e-05, 2.2735999999998896e-05, 2.2651999999998007e-05, 2.184700000000192e-05, 2.208299999999913e-05, 2.191699999999977e-05, 2.19030000000002e-05, 2.24030000000007e-05, 2.1805999999999215e-05, 2.2041999999999895e-05, 2.2540999999997452e-05, 2.2457999999999506e-05, 2.2250000000001435e-05, 2.1957999999999006e-05, 2.216700000000002e-05, 2.2347999999998425e-05, 2.2707999999999756e-05, 2.2250000000001435e-05, 2.212500000000131e-05, 2.263900000000138e-05, 2.2443999999999936e-05, 2.2292000000000145e-05, 2.243099999999984e-05, 2.2222000000002295e-05, 2.2250000000001435e-05, 2.244499999999941e-05, 2.273699999999837e-05, 2.2249999999997966e-05, 2.2458000000002976e-05]</msg>
<status status="PASS" starttime="20201029 18:18:51.996" endtime="20201029 18:18:51.999"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.992" endtime="20201029 18:18:51.999"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:52.003" endtime="20201029 18:18:52.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.001" endtime="20201029 18:18:52.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.000" endtime="20201029 18:18:52.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.644" endtime="20201029 18:18:52.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.644" endtime="20201029 18:18:52.024"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.032" endtime="20201029 18:18:52.049"></status>
</kw>
<msg timestamp="20201029 18:18:52.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.031" endtime="20201029 18:18:52.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.050" endtime="20201029 18:18:52.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.053" endtime="20201029 18:18:52.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.028" endtime="20201029 18:18:52.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.026" endtime="20201029 18:18:52.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.061" endtime="20201029 18:18:52.347"></status>
</kw>
<msg timestamp="20201029 18:18:52.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022657653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022681181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:52.060" endtime="20201029 18:18:52.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022657653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022681181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:52.351" endtime="20201029 18:18:52.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.359" endtime="20201029 18:18:52.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.057" endtime="20201029 18:18:52.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.056" endtime="20201029 18:18:52.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:52.365" level="INFO">${RESULT} = [{'diff': 2.3528000000001825e-05}, {'diff': 2.338899999999866e-05}, {'diff': 2.362499999999934e-05}, {'diff': 2.338899999999866e-05}, {'diff': 2.3651999999999007e-05}, {'diff': 2.3528000000001825e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:52.362" endtime="20201029 18:18:52.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:52.369" level="INFO">${ACCURACY} = {'diff': [2.3528000000001825e-05, 2.338899999999866e-05, 2.362499999999934e-05, 2.338899999999866e-05, 2.3651999999999007e-05, 2.3528000000001825e-05, 2.281900000000031e-05, 2.311099999999927e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 18:18:52.366" endtime="20201029 18:18:52.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.374" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 18:18:52.373" endtime="20201029 18:18:52.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.376" level="INFO">VALUE: [2.3528000000001825e-05, 2.338899999999866e-05, 2.362499999999934e-05, 2.338899999999866e-05, 2.3651999999999007e-05, 2.3528000000001825e-05, 2.281900000000031e-05, 2.311099999999927e-05, 2.2958000000000006e-05, 2.2971999999999576e-05, 2.2958000000000006e-05, 2.3472000000000076e-05, 2.2749999999998466e-05, 2.308300000000013e-05, 2.287500000000206e-05, 2.308300000000013e-05, 2.3235999999999396e-05, 2.3541999999997926e-05, 2.2792000000000645e-05, 2.2806000000000215e-05, 2.337500000000256e-05, 2.30969999999997e-05, 2.344500000000041e-05, 2.3070000000000035e-05, 2.288900000000163e-05, 2.338900000000213e-05, 2.3042000000000895e-05, 2.315300000000145e-05, 2.2971999999999576e-05, 2.3249999999998966e-05, 2.3542000000001395e-05, 2.330500000000124e-05, 2.3068999999997092e-05, 2.3207999999996787e-05, 2.306900000000056e-05, 2.34030000000017e-05, 2.329100000000167e-05, 2.306900000000056e-05, 2.3014000000001755e-05, 2.308300000000013e-05, 2.338899999999866e-05, 2.362500000000281e-05, 2.2721999999999326e-05, 2.291700000000077e-05, 2.3708000000000756e-05, 2.3306000000000715e-05, 2.338899999999866e-05, 2.362499999999934e-05, 2.3556000000000965e-05, 2.347299999999955e-05]</msg>
<status status="PASS" starttime="20201029 18:18:52.375" endtime="20201029 18:18:52.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.370" endtime="20201029 18:18:52.378"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:52.382" endtime="20201029 18:18:52.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.380" endtime="20201029 18:18:52.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.379" endtime="20201029 18:18:52.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.024" endtime="20201029 18:18:52.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.024" endtime="20201029 18:18:52.403"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.411" endtime="20201029 18:18:52.427"></status>
</kw>
<msg timestamp="20201029 18:18:52.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.410" endtime="20201029 18:18:52.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.429" endtime="20201029 18:18:52.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.431" endtime="20201029 18:18:52.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.407" endtime="20201029 18:18:52.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.405" endtime="20201029 18:18:52.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.440" endtime="20201029 18:18:52.725"></status>
</kw>
<msg timestamp="20201029 18:18:52.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021761111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021784917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:52.439" endtime="20201029 18:18:52.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021761111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021784917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:52.729" endtime="20201029 18:18:52.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.738" endtime="20201029 18:18:52.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.436" endtime="20201029 18:18:52.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.435" endtime="20201029 18:18:52.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:52.744" level="INFO">${RESULT} = [{'diff': 2.3806000000001215e-05}, {'diff': 2.4306000000001715e-05}, {'diff': 2.4165999999999077e-05}, {'diff': 2.447300000000055e-05}, {'diff': 2.3902000000002727e-05}, {'diff': 2.4249999999999966e-0...</msg>
<status status="PASS" starttime="20201029 18:18:52.741" endtime="20201029 18:18:52.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:52.750" level="INFO">${ACCURACY} = {'diff': [2.3806000000001215e-05, 2.4306000000001715e-05, 2.4165999999999077e-05, 2.447300000000055e-05, 2.3902000000002727e-05, 2.4249999999999966e-05, 2.387499999999959e-05, 2.4415999999999327e-05, ...</msg>
<status status="PASS" starttime="20201029 18:18:52.746" endtime="20201029 18:18:52.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.756" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 18:18:52.754" endtime="20201029 18:18:52.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.759" level="INFO">VALUE: [2.3806000000001215e-05, 2.4306000000001715e-05, 2.4165999999999077e-05, 2.447300000000055e-05, 2.3902000000002727e-05, 2.4249999999999966e-05, 2.387499999999959e-05, 2.4415999999999327e-05, 2.4222000000000826e-05, 2.4290999999999202e-05, 2.408300000000113e-05, 2.4500000000000216e-05, 2.455500000000249e-05, 2.4082999999997662e-05, 2.4457999999998037e-05, 2.3735999999999896e-05, 2.4263999999999536e-05, 2.468099999999862e-05, 2.4306000000001715e-05, 2.415299999999898e-05, 2.413899999999941e-05, 2.4500000000000216e-05, 2.3722000000000326e-05, 2.4555999999998496e-05, 2.413899999999941e-05, 2.44169999999988e-05, 2.4249999999999966e-05, 2.458300000000163e-05, 2.3958000000001006e-05, 2.4554999999999022e-05, 2.4263000000000062e-05, 2.4276999999999632e-05, 2.4500000000000216e-05, 2.40970000000007e-05, 2.440299999999923e-05, 2.4040999999998952e-05, 2.4249999999999966e-05, 2.4665999999999577e-05, 2.461100000000077e-05, 2.388899999999916e-05, 2.443100000000184e-05, 2.4277999999999106e-05, 2.41109999999968e-05, 2.444499999999794e-05, 2.4098000000000175e-05, 2.4249999999999966e-05, 2.388899999999916e-05, 2.4306000000001715e-05, 2.419500000000116e-05, 2.386100000000002e-05]</msg>
<status status="PASS" starttime="20201029 18:18:52.757" endtime="20201029 18:18:52.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.751" endtime="20201029 18:18:52.761"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:52.765" endtime="20201029 18:18:52.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.763" endtime="20201029 18:18:52.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.762" endtime="20201029 18:18:52.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.404" endtime="20201029 18:18:52.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.403" endtime="20201029 18:18:52.785"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.794" endtime="20201029 18:18:52.810"></status>
</kw>
<msg timestamp="20201029 18:18:52.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.792" endtime="20201029 18:18:52.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.812" endtime="20201029 18:18:52.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.815" endtime="20201029 18:18:52.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.790" endtime="20201029 18:18:52.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.788" endtime="20201029 18:18:52.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.824" endtime="20201029 18:18:53.109"></status>
</kw>
<msg timestamp="20201029 18:18:53.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021906347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021931375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:52.823" endtime="20201029 18:18:53.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021906347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021931375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:53.113" endtime="20201029 18:18:53.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.121" endtime="20201029 18:18:53.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.820" endtime="20201029 18:18:53.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.818" endtime="20201029 18:18:53.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:53.128" level="INFO">${RESULT} = [{'diff': 2.5027999999999856e-05}, {'diff': 2.515299999999998e-05}, {'diff': 2.4764000000000036e-05}, {'diff': 2.49030000000032e-05}, {'diff': 2.488900000000016e-05}, {'diff': 2.5513999999997317e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:53.125" endtime="20201029 18:18:53.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:53.132" level="INFO">${ACCURACY} = {'diff': [2.5027999999999856e-05, 2.515299999999998e-05, 2.4764000000000036e-05, 2.49030000000032e-05, 2.488900000000016e-05, 2.5513999999997317e-05, 2.561100000000177e-05, 2.5320000000002285e-05, 2.4...</msg>
<status status="PASS" starttime="20201029 18:18:53.129" endtime="20201029 18:18:53.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.136" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 18:18:53.135" endtime="20201029 18:18:53.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.139" level="INFO">VALUE: [2.5027999999999856e-05, 2.515299999999998e-05, 2.4764000000000036e-05, 2.49030000000032e-05, 2.488900000000016e-05, 2.5513999999997317e-05, 2.561100000000177e-05, 2.5320000000002285e-05, 2.4833999999997886e-05, 2.520899999999826e-05, 2.54169999999998e-05, 2.5068999999999092e-05, 2.4736000000000896e-05, 2.5319999999998816e-05, 2.5320000000002285e-05, 2.5305999999999246e-05, 2.5305999999999246e-05, 2.5666000000000577e-05, 2.5040999999999952e-05, 2.5096999999998232e-05, 2.540300000000023e-05, 2.5152000000000507e-05, 2.488900000000016e-05, 2.54169999999998e-05, 2.5569999999999066e-05, 2.5056000000002465e-05, 2.54169999999998e-05, 2.5735999999998427e-05, 2.543099999999937e-05, 2.562500000000134e-05, 2.5583999999998636e-05, 2.561100000000177e-05, 2.563900000000091e-05, 2.4750000000000466e-05, 2.5526999999997413e-05, 2.5070000000002035e-05, 2.5570000000002535e-05, 2.4749999999996997e-05, 2.5568999999999592e-05, 2.5443999999999467e-05, 2.5612000000001245e-05, 2.55970000000022e-05, 2.4763000000000562e-05, 2.4901999999996788e-05, 2.5054999999999522e-05, 2.5249999999997497e-05, 2.506900000000256e-05, 2.490299999999973e-05, 2.488900000000016e-05, 2.538900000000066e-05]</msg>
<status status="PASS" starttime="20201029 18:18:53.137" endtime="20201029 18:18:53.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.133" endtime="20201029 18:18:53.140"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:53.144" endtime="20201029 18:18:53.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.142" endtime="20201029 18:18:53.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.141" endtime="20201029 18:18:53.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.786" endtime="20201029 18:18:53.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.785" endtime="20201029 18:18:53.165"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.173" endtime="20201029 18:18:53.190"></status>
</kw>
<msg timestamp="20201029 18:18:53.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.171" endtime="20201029 18:18:53.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.192" endtime="20201029 18:18:53.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.194" endtime="20201029 18:18:53.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.169" endtime="20201029 18:18:53.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.167" endtime="20201029 18:18:53.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.203" endtime="20201029 18:18:53.487"></status>
</kw>
<msg timestamp="20201029 18:18:53.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022637708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022664042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:53.202" endtime="20201029 18:18:53.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022637708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022664042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:53.491" endtime="20201029 18:18:53.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.500" endtime="20201029 18:18:53.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.199" endtime="20201029 18:18:53.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.197" endtime="20201029 18:18:53.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:53.506" level="INFO">${RESULT} = [{'diff': 2.6333999999999386e-05}, {'diff': 2.6332999999999912e-05}, {'diff': 2.6124999999998372e-05}, {'diff': 2.6180000000000647e-05}, {'diff': 2.5735999999998427e-05}, {'diff': 2.616700000000055e-0...</msg>
<status status="PASS" starttime="20201029 18:18:53.503" endtime="20201029 18:18:53.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:53.510" level="INFO">${ACCURACY} = {'diff': [2.6333999999999386e-05, 2.6332999999999912e-05, 2.6124999999998372e-05, 2.6180000000000647e-05, 2.5735999999998427e-05, 2.616700000000055e-05, 2.643100000000037e-05, 2.5680000000000147e-05, ...</msg>
<status status="PASS" starttime="20201029 18:18:53.507" endtime="20201029 18:18:53.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.515" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 18:18:53.514" endtime="20201029 18:18:53.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.517" level="INFO">VALUE: [2.6333999999999386e-05, 2.6332999999999912e-05, 2.6124999999998372e-05, 2.6180000000000647e-05, 2.5735999999998427e-05, 2.616700000000055e-05, 2.643100000000037e-05, 2.5680000000000147e-05, 2.6541000000001452e-05, 2.6485999999999177e-05, 2.618100000000012e-05, 2.6540999999997983e-05, 2.5943999999999967e-05, 2.6610999999999302e-05, 2.6083999999999136e-05, 2.5846999999998982e-05, 2.5792000000000176e-05, 2.597300000000205e-05, 2.67230000000028e-05, 2.6055999999999996e-05, 2.616699999999708e-05, 2.6500000000002216e-05, 2.6610999999999302e-05, 2.647300000000255e-05, 2.6306000000000246e-05, 2.6319000000000342e-05, 2.62230000000023e-05, 2.6763999999998567e-05, 2.6194000000000217e-05, 2.640300000000123e-05, 2.590300000000073e-05, 2.5957999999999537e-05, 2.6207999999999787e-05, 2.6014000000001286e-05, 2.6041000000000952e-05, 2.5735999999998427e-05, 2.6624999999998872e-05, 2.6000000000001716e-05, 2.6055999999999996e-05, 2.6027000000001382e-05, 2.6735999999999427e-05, 2.670899999999976e-05, 2.6069999999999566e-05, 2.613900000000141e-05, 2.6306000000000246e-05, 2.6028000000000856e-05, 2.5860999999998552e-05, 2.6735999999999427e-05, 2.6583000000000162e-05, 2.6221999999999357e-05]</msg>
<status status="PASS" starttime="20201029 18:18:53.516" endtime="20201029 18:18:53.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.511" endtime="20201029 18:18:53.519"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:53.523" endtime="20201029 18:18:53.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.521" endtime="20201029 18:18:53.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.520" endtime="20201029 18:18:53.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.165" endtime="20201029 18:18:53.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.165" endtime="20201029 18:18:53.544"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.552" endtime="20201029 18:18:53.568"></status>
</kw>
<msg timestamp="20201029 18:18:53.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.551" endtime="20201029 18:18:53.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.570" endtime="20201029 18:18:53.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.572" endtime="20201029 18:18:53.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.548" endtime="20201029 18:18:53.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.546" endtime="20201029 18:18:53.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.581" endtime="20201029 18:18:53.866"></status>
</kw>
<msg timestamp="20201029 18:18:53.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021912361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021939875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:53.580" endtime="20201029 18:18:53.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021912361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021939875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:53.871" endtime="20201029 18:18:53.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.879" endtime="20201029 18:18:53.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.577" endtime="20201029 18:18:53.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.575" endtime="20201029 18:18:53.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:53.885" level="INFO">${RESULT} = [{'diff': 2.7513999999999317e-05}, {'diff': 2.7486000000000177e-05}, {'diff': 2.6721999999999857e-05}, {'diff': 2.7235999999999927e-05}, {'diff': 2.7222000000000357e-05}, {'diff': 2.6833000000000412e-...</msg>
<status status="PASS" starttime="20201029 18:18:53.882" endtime="20201029 18:18:53.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:53.890" level="INFO">${ACCURACY} = {'diff': [2.7513999999999317e-05, 2.7486000000000177e-05, 2.6721999999999857e-05, 2.7235999999999927e-05, 2.7222000000000357e-05, 2.6833000000000412e-05, 2.7679999999998678e-05, 2.6763999999998567e-05...</msg>
<status status="PASS" starttime="20201029 18:18:53.886" endtime="20201029 18:18:53.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.895" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 18:18:53.894" endtime="20201029 18:18:53.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.897" level="INFO">VALUE: [2.7513999999999317e-05, 2.7486000000000177e-05, 2.6721999999999857e-05, 2.7235999999999927e-05, 2.7222000000000357e-05, 2.6833000000000412e-05, 2.7679999999998678e-05, 2.6763999999998567e-05, 2.7000000000002716e-05, 2.7374999999999622e-05, 2.722299999999983e-05, 2.7083000000000662e-05, 2.7097000000000232e-05, 2.7735999999996958e-05, 2.7040999999998483e-05, 2.6804999999997803e-05, 2.6888999999998692e-05, 2.715299999999851e-05, 2.690299999999826e-05, 2.6943999999997498e-05, 2.6749999999998997e-05, 2.6943999999997498e-05, 2.741699999999833e-05, 2.691699999999783e-05, 2.7388999999999192e-05, 2.7194000000001217e-05, 2.715300000000198e-05, 2.7458000000001037e-05, 2.7235999999999927e-05, 2.6764000000002036e-05, 2.6778000000001606e-05, 2.716700000000155e-05, 2.7056000000000996e-05, 2.7276999999999163e-05, 2.7069000000001092e-05, 2.7151999999999038e-05, 2.6874999999999122e-05, 2.6776999999998663e-05, 2.7556000000001496e-05, 2.7319000000001342e-05, 2.690299999999826e-05, 2.6763999999998567e-05, 2.7305000000001772e-05, 2.6806000000000746e-05, 2.6999999999999247e-05, 2.7111999999999276e-05, 2.7624999999999872e-05, 2.7014000000002286e-05, 2.7056000000000996e-05, 2.7347999999999956e-05]</msg>
<status status="PASS" starttime="20201029 18:18:53.896" endtime="20201029 18:18:53.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.891" endtime="20201029 18:18:53.899"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:53.902" endtime="20201029 18:18:53.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.901" endtime="20201029 18:18:53.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.900" endtime="20201029 18:18:53.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.545" endtime="20201029 18:18:53.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.544" endtime="20201029 18:18:53.923"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.932" endtime="20201029 18:18:53.948"></status>
</kw>
<msg timestamp="20201029 18:18:53.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.930" endtime="20201029 18:18:53.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.950" endtime="20201029 18:18:53.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.952" endtime="20201029 18:18:53.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.928" endtime="20201029 18:18:53.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.925" endtime="20201029 18:18:53.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.961" endtime="20201029 18:18:54.248"></status>
</kw>
<msg timestamp="20201029 18:18:54.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022058278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022086917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:53.960" endtime="20201029 18:18:54.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022058278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022086917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:54.252" endtime="20201029 18:18:54.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.260" endtime="20201029 18:18:54.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.957" endtime="20201029 18:18:54.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.955" endtime="20201029 18:18:54.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:54.267" level="INFO">${RESULT} = [{'diff': 2.8639000000000442e-05}, {'diff': 2.8639000000000442e-05}, {'diff': 2.7791999999998707e-05}, {'diff': 2.8652000000000538e-05}, {'diff': 2.8125000000000372e-05}, {'diff': 2.7943999999998498e-...</msg>
<status status="PASS" starttime="20201029 18:18:54.264" endtime="20201029 18:18:54.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:54.271" level="INFO">${ACCURACY} = {'diff': [2.8639000000000442e-05, 2.8639000000000442e-05, 2.7791999999998707e-05, 2.8652000000000538e-05, 2.8125000000000372e-05, 2.7943999999998498e-05, 2.8264000000000067e-05, 2.7915999999999358e-05...</msg>
<status status="PASS" starttime="20201029 18:18:54.268" endtime="20201029 18:18:54.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.275" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 18:18:54.274" endtime="20201029 18:18:54.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.278" level="INFO">VALUE: [2.8639000000000442e-05, 2.8639000000000442e-05, 2.7791999999998707e-05, 2.8652000000000538e-05, 2.8125000000000372e-05, 2.7943999999998498e-05, 2.8264000000000067e-05, 2.7915999999999358e-05, 2.8639000000000442e-05, 2.8374999999997152e-05, 2.8625000000000872e-05, 2.8653000000000012e-05, 2.7943999999998498e-05, 2.8639000000000442e-05, 2.8306000000002246e-05, 2.791699999999883e-05, 2.8221999999997888e-05, 2.8597999999997736e-05, 2.793100000000187e-05, 2.8666999999999582e-05, 2.8305999999998777e-05, 2.870899999999829e-05, 2.8569999999998597e-05, 2.8070000000001566e-05, 2.8319000000002342e-05, 2.8512999999997374e-05, 2.7708000000001287e-05, 2.8721999999998388e-05, 2.8221999999997888e-05, 2.7833000000001412e-05, 2.8222000000001357e-05, 2.8332999999998443e-05, 2.8666000000000108e-05, 2.8389000000000192e-05, 2.7791999999998707e-05, 2.8541999999999457e-05, 2.8221999999997888e-05, 2.7972000000001107e-05, 2.793100000000187e-05, 2.8110999999997333e-05, 2.8639000000000442e-05, 2.7749999999999997e-05, 2.7888999999999692e-05, 2.8361000000001052e-05, 2.8500000000000747e-05, 2.8277999999999637e-05, 2.82370000000004e-05, 2.798700000000015e-05, 2.7929999999998928e-05, 2.79309999999984e-05]</msg>
<status status="PASS" starttime="20201029 18:18:54.276" endtime="20201029 18:18:54.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.272" endtime="20201029 18:18:54.279"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:54.283" endtime="20201029 18:18:54.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.281" endtime="20201029 18:18:54.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.280" endtime="20201029 18:18:54.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.924" endtime="20201029 18:18:54.304"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.923" endtime="20201029 18:18:54.304"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.312" endtime="20201029 18:18:54.330"></status>
</kw>
<msg timestamp="20201029 18:18:54.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:54.311" endtime="20201029 18:18:54.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:54.331" endtime="20201029 18:18:54.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.334" endtime="20201029 18:18:54.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.308" endtime="20201029 18:18:54.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.306" endtime="20201029 18:18:54.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.343" endtime="20201029 18:18:54.629"></status>
</kw>
<msg timestamp="20201029 18:18:54.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022843528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022872361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:54.341" endtime="20201029 18:18:54.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022843528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022872361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:54.633" endtime="20201029 18:18:54.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.641" endtime="20201029 18:18:54.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.339" endtime="20201029 18:18:54.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.337" endtime="20201029 18:18:54.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:54.647" level="INFO">${RESULT} = [{'diff': 2.8833000000002412e-05}, {'diff': 2.8764000000000567e-05}, {'diff': 2.9167000000000082e-05}, {'diff': 2.9110999999998333e-05}, {'diff': 2.9514000000001317e-05}, {'diff': 2.9457999999999568e-...</msg>
<status status="PASS" starttime="20201029 18:18:54.644" endtime="20201029 18:18:54.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:54.651" level="INFO">${ACCURACY} = {'diff': [2.8833000000002412e-05, 2.8764000000000567e-05, 2.9167000000000082e-05, 2.9110999999998333e-05, 2.9514000000001317e-05, 2.9457999999999568e-05, 2.948699999999818e-05, 2.92370000000014e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:18:54.648" endtime="20201029 18:18:54.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.656" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 18:18:54.655" endtime="20201029 18:18:54.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.658" level="INFO">VALUE: [2.8833000000002412e-05, 2.8764000000000567e-05, 2.9167000000000082e-05, 2.9110999999998333e-05, 2.9514000000001317e-05, 2.9457999999999568e-05, 2.948699999999818e-05, 2.92370000000014e-05, 2.9625000000001872e-05, 2.9416000000000858e-05, 2.897299999999811e-05, 2.9500000000001747e-05, 2.9721999999999388e-05, 2.9097000000002232e-05, 2.9249999999998028e-05, 2.9250000000001497e-05, 2.9652999999997542e-05, 2.9707999999999818e-05, 2.9250000000001497e-05, 2.9485999999998708e-05, 2.9389000000001192e-05, 2.9124999999997903e-05, 2.8916999999999832e-05, 2.8889000000000692e-05, 2.8903000000000262e-05, 2.9542000000000457e-05, 2.8986000000001677e-05, 2.9556000000000027e-05, 2.9569999999999597e-05, 2.920899999999879e-05, 2.897300000000158e-05, 2.8985999999998208e-05, 2.8736000000001427e-05, 2.9222000000002357e-05, 2.8804999999999803e-05, 2.9277000000001163e-05, 2.8749999999997528e-05, 2.9403000000000762e-05, 2.9277000000001163e-05, 2.9221999999998888e-05, 2.9457999999999568e-05, 2.894499999999897e-05, 2.9250000000001497e-05, 2.9110999999998333e-05, 2.9681000000000152e-05, 2.8957999999999068e-05, 2.8778000000000137e-05, 2.9292000000000207e-05, 2.8916999999999832e-05, 2.9639000000001442e-05]</msg>
<status status="PASS" starttime="20201029 18:18:54.657" endtime="20201029 18:18:54.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.652" endtime="20201029 18:18:54.660"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:54.664" endtime="20201029 18:18:54.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.663" endtime="20201029 18:18:54.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.661" endtime="20201029 18:18:54.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.305" endtime="20201029 18:18:54.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.304" endtime="20201029 18:18:54.685"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.693" endtime="20201029 18:18:54.712"></status>
</kw>
<msg timestamp="20201029 18:18:54.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:54.692" endtime="20201029 18:18:54.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:54.713" endtime="20201029 18:18:54.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.716" endtime="20201029 18:18:54.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.689" endtime="20201029 18:18:54.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.687" endtime="20201029 18:18:54.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.725" endtime="20201029 18:18:55.011"></status>
</kw>
<msg timestamp="20201029 18:18:55.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022493819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022523986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:54.723" endtime="20201029 18:18:55.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022493819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022523986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:55.015" endtime="20201029 18:18:55.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.023" endtime="20201029 18:18:55.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.721" endtime="20201029 18:18:55.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.719" endtime="20201029 18:18:55.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:55.029" level="INFO">${RESULT} = [{'diff': 3.0166999999997612e-05}, {'diff': 3.0568999999997654e-05}, {'diff': 3.066700000000158e-05}, {'diff': 3.0513999999998848e-05}, {'diff': 3.063900000000244e-05}, {'diff': 3.070800000000082e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:55.026" endtime="20201029 18:18:55.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:55.037" level="INFO">${ACCURACY} = {'diff': [3.0166999999997612e-05, 3.0568999999997654e-05, 3.066700000000158e-05, 3.0513999999998848e-05, 3.063900000000244e-05, 3.070800000000082e-05, 3.0152999999998042e-05, 3.0083999999999667e-05, 3...</msg>
<status status="PASS" starttime="20201029 18:18:55.030" endtime="20201029 18:18:55.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.041" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 18:18:55.040" endtime="20201029 18:18:55.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.044" level="INFO">VALUE: [3.0166999999997612e-05, 3.0568999999997654e-05, 3.066700000000158e-05, 3.0513999999998848e-05, 3.063900000000244e-05, 3.070800000000082e-05, 3.0152999999998042e-05, 3.0083999999999667e-05, 3.052800000000189e-05, 3.065199999999907e-05, 3.073599999999996e-05, 2.997299999999911e-05, 3.0152999999998042e-05, 2.9930000000000928e-05, 2.9860999999999083e-05, 3.0083000000000193e-05, 3.072200000000039e-05, 3.0333000000000443e-05, 2.9777999999997667e-05, 3.0263999999998598e-05, 2.9985999999999208e-05, 3.0096999999999763e-05, 3.0306000000000777e-05, 3.0403000000001762e-05, 3.063899999999897e-05, 3.070800000000082e-05, 2.9916999999997362e-05, 2.9819999999999847e-05, 3.0235999999999458e-05, 3.05700000000006e-05, 3.0167000000001082e-05, 2.9735999999998958e-05, 3.0069000000000623e-05, 3.069500000000072e-05, 3.065199999999907e-05, 3.0264000000002067e-05, 2.9874999999998653e-05, 3.0125000000002372e-05, 2.9874999999998653e-05, 2.9721999999999388e-05, 2.9902999999997792e-05, 3.0402999999998293e-05, 2.9958000000000068e-05, 2.9792000000000707e-05, 3.042999999999796e-05, 3.0250000000002497e-05, 2.9778000000001137e-05, 3.070800000000082e-05, 2.9819999999999847e-05, 3.0139000000001942e-05]</msg>
<status status="PASS" starttime="20201029 18:18:55.042" endtime="20201029 18:18:55.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.038" endtime="20201029 18:18:55.045"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:55.049" endtime="20201029 18:18:55.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.047" endtime="20201029 18:18:55.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.046" endtime="20201029 18:18:55.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.686" endtime="20201029 18:18:55.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.685" endtime="20201029 18:18:55.069"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.078" endtime="20201029 18:18:55.094"></status>
</kw>
<msg timestamp="20201029 18:18:55.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.076" endtime="20201029 18:18:55.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.096" endtime="20201029 18:18:55.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.098" endtime="20201029 18:18:55.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.074" endtime="20201029 18:18:55.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.071" endtime="20201029 18:18:55.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.107" endtime="20201029 18:18:55.393"></status>
</kw>
<msg timestamp="20201029 18:18:55.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021808903, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:55.106" endtime="20201029 18:18:55.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021808903, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:55.397" endtime="20201029 18:18:55.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.405" endtime="20201029 18:18:55.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.103" endtime="20201029 18:18:55.408"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.101" endtime="20201029 18:18:55.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:55.412" level="INFO">${RESULT} = [{'diff': 3.090300000000226e-05}, {'diff': 3.113899999999947e-05}, {'diff': 3.097200000000064e-05}, {'diff': 3.079200000000171e-05}, {'diff': 3.169400000000225e-05}, {'diff': 3.1332999999997974e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:55.409" endtime="20201029 18:18:55.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:55.416" level="INFO">${ACCURACY} = {'diff': [3.090300000000226e-05, 3.113899999999947e-05, 3.097200000000064e-05, 3.079200000000171e-05, 3.169400000000225e-05, 3.1332999999997974e-05, 3.097200000000064e-05, 3.150000000000028e-05, 3.091...</msg>
<status status="PASS" starttime="20201029 18:18:55.413" endtime="20201029 18:18:55.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.420" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 18:18:55.419" endtime="20201029 18:18:55.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.423" level="INFO">VALUE: [3.090300000000226e-05, 3.113899999999947e-05, 3.097200000000064e-05, 3.079200000000171e-05, 3.169400000000225e-05, 3.1332999999997974e-05, 3.097200000000064e-05, 3.150000000000028e-05, 3.091699999999836e-05, 3.109700000000076e-05, 3.140300000000276e-05, 3.102800000000239e-05, 3.154199999999899e-05, 3.147200000000114e-05, 3.08050000000018e-05, 3.142999999999896e-05, 3.145900000000104e-05, 3.11249999999999e-05, 3.098699999999968e-05, 3.100000000000325e-05, 3.086100000000008e-05, 3.1026999999999444e-05, 3.076400000000257e-05, 3.073599999999996e-05, 3.072200000000039e-05, 3.141699999999886e-05, 3.111100000000033e-05, 3.094399999999803e-05, 3.147200000000114e-05, 3.090300000000226e-05, 3.073599999999996e-05, 3.125000000000003e-05, 3.119499999999775e-05, 3.120900000000079e-05, 3.088899999999922e-05, 3.14310000000019e-05, 3.09310000000014e-05, 3.161100000000083e-05, 3.155599999999856e-05, 3.165200000000007e-05, 3.074999999999953e-05, 3.125000000000003e-05, 3.138899999999972e-05, 3.143099999999843e-05, 3.123600000000046e-05, 3.14579999999981e-05, 3.077799999999867e-05, 3.156999999999813e-05, 3.11249999999999e-05, 3.127799999999917e-05]</msg>
<status status="PASS" starttime="20201029 18:18:55.421" endtime="20201029 18:18:55.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.417" endtime="20201029 18:18:55.424"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:55.428" endtime="20201029 18:18:55.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.426" endtime="20201029 18:18:55.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.425" endtime="20201029 18:18:55.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.070" endtime="20201029 18:18:55.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.069" endtime="20201029 18:18:55.448"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.457" endtime="20201029 18:18:55.474"></status>
</kw>
<msg timestamp="20201029 18:18:55.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.455" endtime="20201029 18:18:55.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.476" endtime="20201029 18:18:55.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.478" endtime="20201029 18:18:55.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.453" endtime="20201029 18:18:55.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.451" endtime="20201029 18:18:55.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.487" endtime="20201029 18:18:55.772"></status>
</kw>
<msg timestamp="20201029 18:18:55.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022628153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022660486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:55.486" endtime="20201029 18:18:55.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022628153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022660486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:55.776" endtime="20201029 18:18:55.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.784" endtime="20201029 18:18:55.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.483" endtime="20201029 18:18:55.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.481" endtime="20201029 18:18:55.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:55.791" level="INFO">${RESULT} = [{'diff': 3.2332999999998974e-05}, {'diff': 3.170800000000182e-05}, {'diff': 3.200000000000078e-05}, {'diff': 3.195899999999807e-05}, {'diff': 3.223699999999746e-05}, {'diff': 3.173600000000096e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:55.787" endtime="20201029 18:18:55.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:55.795" level="INFO">${ACCURACY} = {'diff': [3.2332999999998974e-05, 3.170800000000182e-05, 3.200000000000078e-05, 3.195899999999807e-05, 3.223699999999746e-05, 3.173600000000096e-05, 3.266700000000011e-05, 3.220799999999885e-05, 3.222...</msg>
<status status="PASS" starttime="20201029 18:18:55.792" endtime="20201029 18:18:55.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.799" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 18:18:55.798" endtime="20201029 18:18:55.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.801" level="INFO">VALUE: [3.2332999999998974e-05, 3.170800000000182e-05, 3.200000000000078e-05, 3.195899999999807e-05, 3.223699999999746e-05, 3.173600000000096e-05, 3.266700000000011e-05, 3.220799999999885e-05, 3.222199999999842e-05, 3.205600000000253e-05, 3.261100000000183e-05, 3.261199999999784e-05, 3.229199999999974e-05, 3.1818999999998904e-05, 3.1818999999998904e-05, 3.1818999999998904e-05, 3.2568999999999654e-05, 3.225000000000103e-05, 3.22640000000006e-05, 3.24310000000029e-05, 3.204199999999949e-05, 3.2054999999999584e-05, 3.2444999999999e-05, 3.2596999999998794e-05, 3.213900000000047e-05, 3.191699999999936e-05, 3.26250000000014e-05, 3.273699999999796e-05, 3.191699999999936e-05, 3.186100000000108e-05, 3.265300000000054e-05, 3.266700000000011e-05, 3.2290999999996794e-05, 3.251400000000085e-05, 3.247199999999867e-05, 3.24579999999991e-05, 3.167999999999921e-05, 3.269399999999978e-05, 3.2041000000000014e-05, 3.190299999999979e-05, 3.255599999999956e-05, 3.265300000000054e-05, 3.248600000000171e-05, 3.191700000000283e-05, 3.170799999999835e-05, 3.248599999999824e-05, 3.240300000000029e-05, 3.219500000000222e-05, 3.243099999999943e-05, 3.254199999999999e-05]</msg>
<status status="PASS" starttime="20201029 18:18:55.800" endtime="20201029 18:18:55.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.796" endtime="20201029 18:18:55.804"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:55.807" endtime="20201029 18:18:55.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.806" endtime="20201029 18:18:55.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.805" endtime="20201029 18:18:55.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.449" endtime="20201029 18:18:55.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.449" endtime="20201029 18:18:55.828"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.837" endtime="20201029 18:18:55.853"></status>
</kw>
<msg timestamp="20201029 18:18:55.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.835" endtime="20201029 18:18:55.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.855" endtime="20201029 18:18:55.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.858" endtime="20201029 18:18:55.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.832" endtime="20201029 18:18:55.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.830" endtime="20201029 18:18:55.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.867" endtime="20201029 18:18:56.153"></status>
</kw>
<msg timestamp="20201029 18:18:56.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021854278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021887306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:55.866" endtime="20201029 18:18:56.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021854278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021887306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:56.157" endtime="20201029 18:18:56.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.165" endtime="20201029 18:18:56.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.863" endtime="20201029 18:18:56.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.861" endtime="20201029 18:18:56.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:56.171" level="INFO">${RESULT} = [{'diff': 3.302799999999745e-05}, {'diff': 3.3610999999999364e-05}, {'diff': 3.279200000000024e-05}, {'diff': 3.323699999999846e-05}, {'diff': 3.3082999999999724e-05}, {'diff': 3.277800000000067e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:56.168" endtime="20201029 18:18:56.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:56.176" level="INFO">${ACCURACY} = {'diff': [3.302799999999745e-05, 3.3610999999999364e-05, 3.279200000000024e-05, 3.323699999999846e-05, 3.3082999999999724e-05, 3.277800000000067e-05, 3.36250000000024e-05, 3.284700000000251e-05, 3.306...</msg>
<status status="PASS" starttime="20201029 18:18:56.172" endtime="20201029 18:18:56.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.181" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 18:18:56.180" endtime="20201029 18:18:56.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.183" level="INFO">VALUE: [3.302799999999745e-05, 3.3610999999999364e-05, 3.279200000000024e-05, 3.323699999999846e-05, 3.3082999999999724e-05, 3.277800000000067e-05, 3.36250000000024e-05, 3.284700000000251e-05, 3.3069000000000154e-05, 3.3110999999998864e-05, 3.29579999999996e-05, 3.3638999999998503e-05, 3.3805000000001334e-05, 3.336100000000258e-05, 3.341700000000086e-05, 3.320799999999985e-05, 3.32640000000016e-05, 3.365300000000154e-05, 3.320799999999985e-05, 3.288900000000122e-05, 3.287500000000165e-05, 3.374999999999906e-05, 3.329200000000074e-05, 3.2874999999998183e-05, 3.3082999999999724e-05, 3.2776999999997725e-05, 3.3610999999999364e-05, 3.338900000000172e-05, 3.336100000000258e-05, 3.3555000000001084e-05, 3.288900000000122e-05, 3.2805000000000334e-05, 3.3583000000000224e-05, 3.355599999999709e-05, 3.305600000000006e-05, 3.315299999999757e-05, 3.3610999999999364e-05, 3.316699999999714e-05, 3.3374999999998683e-05, 3.273600000000196e-05, 3.279200000000024e-05, 3.290300000000079e-05, 3.2846999999999044e-05, 3.374999999999906e-05, 3.319499999999975e-05, 3.3610999999999364e-05, 3.3582999999996754e-05, 3.3569000000000654e-05, 3.288899999999775e-05, 3.3138999999998e-05]</msg>
<status status="PASS" starttime="20201029 18:18:56.182" endtime="20201029 18:18:56.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.177" endtime="20201029 18:18:56.185"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:56.188" endtime="20201029 18:18:56.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.187" endtime="20201029 18:18:56.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.186" endtime="20201029 18:18:56.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.829" endtime="20201029 18:18:56.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.828" endtime="20201029 18:18:56.209"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.217" endtime="20201029 18:18:56.234"></status>
</kw>
<msg timestamp="20201029 18:18:56.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.216" endtime="20201029 18:18:56.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.236" endtime="20201029 18:18:56.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.238" endtime="20201029 18:18:56.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.213" endtime="20201029 18:18:56.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.211" endtime="20201029 18:18:56.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.247" endtime="20201029 18:18:56.533"></status>
</kw>
<msg timestamp="20201029 18:18:56.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021690292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0217245, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:56.246" endtime="20201029 18:18:56.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021690292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0217245, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:56.537" endtime="20201029 18:18:56.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.545" endtime="20201029 18:18:56.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.243" endtime="20201029 18:18:56.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.241" endtime="20201029 18:18:56.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:56.552" level="INFO">${RESULT} = [{'diff': 3.420800000000085e-05}, {'diff': 3.430599999999784e-05}, {'diff': 3.4361000000000114e-05}, {'diff': 3.42779999999987e-05}, {'diff': 3.455600000000156e-05}, {'diff': 3.416699999999814e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:56.549" endtime="20201029 18:18:56.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:56.556" level="INFO">${ACCURACY} = {'diff': [3.420800000000085e-05, 3.430599999999784e-05, 3.4361000000000114e-05, 3.42779999999987e-05, 3.455600000000156e-05, 3.416699999999814e-05, 3.433400000000045e-05, 3.4611000000000364e-05, 3.401...</msg>
<status status="PASS" starttime="20201029 18:18:56.553" endtime="20201029 18:18:56.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.560" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 18:18:56.559" endtime="20201029 18:18:56.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.563" level="INFO">VALUE: [3.420800000000085e-05, 3.430599999999784e-05, 3.4361000000000114e-05, 3.42779999999987e-05, 3.455600000000156e-05, 3.416699999999814e-05, 3.433400000000045e-05, 3.4611000000000364e-05, 3.401399999999888e-05, 3.425000000000303e-05, 3.406999999999716e-05, 3.4638999999999504e-05, 3.382000000000038e-05, 3.390299999999832e-05, 3.4624999999999934e-05, 3.39450000000005e-05, 3.391599999999842e-05, 3.4638999999999504e-05, 3.39580000000006e-05, 3.370799999999688e-05, 3.4624999999999934e-05, 3.4110999999999864e-05, 3.4055000000001584e-05, 3.451399999999938e-05, 3.380599999999734e-05, 3.45840000000007e-05, 3.4361000000000114e-05, 3.427800000000217e-05, 3.448600000000024e-05, 3.475000000000006e-05, 3.475000000000006e-05, 3.404199999999802e-05, 3.4624999999999934e-05, 3.4290999999998795e-05, 3.4055000000001584e-05, 3.463800000000003e-05, 3.447200000000067e-05, 3.447200000000067e-05, 3.4055000000001584e-05, 3.4611000000000364e-05, 3.3805000000001334e-05, 3.423599999999999e-05, 3.3860999999999614e-05, 3.4611000000000364e-05, 3.463900000000297e-05, 3.416600000000214e-05, 3.420800000000085e-05, 3.432000000000088e-05, 3.429200000000174e-05, 3.45840000000007e-05]</msg>
<status status="PASS" starttime="20201029 18:18:56.561" endtime="20201029 18:18:56.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.557" endtime="20201029 18:18:56.564"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:56.568" endtime="20201029 18:18:56.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.566" endtime="20201029 18:18:56.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.565" endtime="20201029 18:18:56.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.210" endtime="20201029 18:18:56.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.209" endtime="20201029 18:18:56.588"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.597" endtime="20201029 18:18:56.614"></status>
</kw>
<msg timestamp="20201029 18:18:56.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.595" endtime="20201029 18:18:56.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.615" endtime="20201029 18:18:56.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.618" endtime="20201029 18:18:56.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.593" endtime="20201029 18:18:56.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.591" endtime="20201029 18:18:56.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.627" endtime="20201029 18:18:56.913"></status>
</kw>
<msg timestamp="20201029 18:18:56.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022879681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022915167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:56.625" endtime="20201029 18:18:56.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022879681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022915167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:56.918" endtime="20201029 18:18:56.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.926" endtime="20201029 18:18:56.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.623" endtime="20201029 18:18:56.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.621" endtime="20201029 18:18:56.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:56.932" level="INFO">${RESULT} = [{'diff': 3.548600000000124e-05}, {'diff': 3.5125000000000434e-05}, {'diff': 3.536199999999712e-05}, {'diff': 3.490199999999985e-05}, {'diff': 3.545799999999863e-05}, {'diff': 3.57780000000002e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:56.929" endtime="20201029 18:18:56.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:56.937" level="INFO">${ACCURACY} = {'diff': [3.548600000000124e-05, 3.5125000000000434e-05, 3.536199999999712e-05, 3.490199999999985e-05, 3.545799999999863e-05, 3.57780000000002e-05, 3.476399999999963e-05, 3.517999999999924e-05, 3.5681...</msg>
<status status="PASS" starttime="20201029 18:18:56.933" endtime="20201029 18:18:56.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.941" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 18:18:56.940" endtime="20201029 18:18:56.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.944" level="INFO">VALUE: [3.548600000000124e-05, 3.5125000000000434e-05, 3.536199999999712e-05, 3.490199999999985e-05, 3.545799999999863e-05, 3.57780000000002e-05, 3.476399999999963e-05, 3.517999999999924e-05, 3.568100000000268e-05, 3.479199999999877e-05, 3.4804999999998865e-05, 3.549999999999734e-05, 3.5639000000000504e-05, 3.5611000000001364e-05, 3.5374999999997214e-05, 3.498599999999727e-05, 3.4833000000001474e-05, 3.49450000000015e-05, 3.5389000000000254e-05, 3.4763000000000155e-05, 3.5402999999999823e-05, 3.475000000000006e-05, 3.5040999999999545e-05, 3.476399999999963e-05, 3.5068999999998685e-05, 3.538799999999731e-05, 3.4875000000000184e-05, 3.473599999999702e-05, 3.5639000000000504e-05, 3.544399999999906e-05, 3.5402999999999823e-05, 3.5666999999999643e-05, 3.548600000000124e-05, 3.572199999999845e-05, 3.491699999999889e-05, 3.5110999999997394e-05, 3.507000000000163e-05, 3.50840000000012e-05, 3.473699999999996e-05, 3.554199999999952e-05, 3.4763000000000155e-05, 3.5166999999999143e-05, 3.511200000000034e-05, 3.523600000000099e-05, 3.500000000000031e-05, 3.522199999999795e-05, 3.5332999999998504e-05, 3.517999999999924e-05, 3.484800000000052e-05, 3.518099999999871e-05]</msg>
<status status="PASS" starttime="20201029 18:18:56.942" endtime="20201029 18:18:56.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.937" endtime="20201029 18:18:56.946"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:56.949" endtime="20201029 18:18:56.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.948" endtime="20201029 18:18:56.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.947" endtime="20201029 18:18:56.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.589" endtime="20201029 18:18:56.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.588" endtime="20201029 18:18:56.970"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.979" endtime="20201029 18:18:56.995"></status>
</kw>
<msg timestamp="20201029 18:18:56.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.977" endtime="20201029 18:18:56.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.997" endtime="20201029 18:18:56.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.999" endtime="20201029 18:18:57.001"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.975" endtime="20201029 18:18:57.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.972" endtime="20201029 18:18:57.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.008" endtime="20201029 18:18:57.294"></status>
</kw>
<msg timestamp="20201029 18:18:57.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021829444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021866181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:57.007" endtime="20201029 18:18:57.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021829444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021866181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:57.298" endtime="20201029 18:18:57.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.306" endtime="20201029 18:18:57.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.004" endtime="20201029 18:18:57.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.003" endtime="20201029 18:18:57.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:57.313" level="INFO">${RESULT} = [{'diff': 3.673699999999849e-05}, {'diff': 3.6138999999997534e-05}, {'diff': 3.623600000000199e-05}, {'diff': 3.648599999999877e-05}, {'diff': 3.672199999999945e-05}, {'diff': 3.6374999999998214e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:57.310" endtime="20201029 18:18:57.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:57.318" level="INFO">${ACCURACY} = {'diff': [3.673699999999849e-05, 3.6138999999997534e-05, 3.623600000000199e-05, 3.648599999999877e-05, 3.672199999999945e-05, 3.6374999999998214e-05, 3.59719999999987e-05, 3.654200000000052e-05, 3.641...</msg>
<status status="PASS" starttime="20201029 18:18:57.314" endtime="20201029 18:18:57.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.322" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 18:18:57.321" endtime="20201029 18:18:57.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.325" level="INFO">VALUE: [3.673699999999849e-05, 3.6138999999997534e-05, 3.623600000000199e-05, 3.648599999999877e-05, 3.672199999999945e-05, 3.6374999999998214e-05, 3.59719999999987e-05, 3.654200000000052e-05, 3.6417000000000394e-05, 3.666600000000117e-05, 3.6291000000000795e-05, 3.622300000000189e-05, 3.5804999999999865e-05, 3.624999999999809e-05, 3.640200000000135e-05, 3.6402999999997354e-05, 3.6055000000000115e-05, 3.6055000000000115e-05, 3.6375000000001684e-05, 3.580599999999934e-05, 3.619499999999928e-05, 3.6569000000000185e-05, 3.6389000000001254e-05, 3.650000000000181e-05, 3.623600000000199e-05, 3.6110999999998394e-05, 3.6652999999997604e-05, 3.6110999999998394e-05, 3.600000000000131e-05, 3.591600000000042e-05, 3.654200000000052e-05, 3.613799999999806e-05, 3.577799999999673e-05, 3.5903000000000324e-05, 3.6041000000000545e-05, 3.6110999999998394e-05, 3.6068999999999685e-05, 3.625000000000156e-05, 3.643000000000049e-05, 3.6389000000001254e-05, 3.598599999999827e-05, 3.6389000000001254e-05, 3.631999999999941e-05, 3.5902999999996854e-05, 3.656999999999966e-05, 3.6153000000000574e-05, 3.574999999999759e-05, 3.623599999999852e-05, 3.6111000000001864e-05, 3.6138999999997534e-05]</msg>
<status status="PASS" starttime="20201029 18:18:57.323" endtime="20201029 18:18:57.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.319" endtime="20201029 18:18:57.326"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:57.330" endtime="20201029 18:18:57.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.328" endtime="20201029 18:18:57.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.327" endtime="20201029 18:18:57.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.971" endtime="20201029 18:18:57.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.970" endtime="20201029 18:18:57.350"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.359" endtime="20201029 18:18:57.375"></status>
</kw>
<msg timestamp="20201029 18:18:57.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.357" endtime="20201029 18:18:57.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.377" endtime="20201029 18:18:57.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.379" endtime="20201029 18:18:57.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.355" endtime="20201029 18:18:57.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.353" endtime="20201029 18:18:57.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.388" endtime="20201029 18:18:57.674"></status>
</kw>
<msg timestamp="20201029 18:18:57.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021829306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021866681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:57.387" endtime="20201029 18:18:57.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021829306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021866681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:57.678" endtime="20201029 18:18:57.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.686" endtime="20201029 18:18:57.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.384" endtime="20201029 18:18:57.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.382" endtime="20201029 18:18:57.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:57.693" level="INFO">${RESULT} = [{'diff': 3.7374999999999214e-05}, {'diff': 3.770900000000035e-05}, {'diff': 3.730600000000084e-05}, {'diff': 3.7388999999998784e-05}, {'diff': 3.69589999999996e-05}, {'diff': 3.74720000000002e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:57.689" endtime="20201029 18:18:57.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:57.697" level="INFO">${ACCURACY} = {'diff': [3.7374999999999214e-05, 3.770900000000035e-05, 3.730600000000084e-05, 3.7388999999998784e-05, 3.69589999999996e-05, 3.74720000000002e-05, 3.691599999999795e-05, 3.722199999999995e-05, 3.7555...</msg>
<status status="PASS" starttime="20201029 18:18:57.694" endtime="20201029 18:18:57.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.702" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 18:18:57.700" endtime="20201029 18:18:57.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.705" level="INFO">VALUE: [3.7374999999999214e-05, 3.770900000000035e-05, 3.730600000000084e-05, 3.7388999999998784e-05, 3.69589999999996e-05, 3.74720000000002e-05, 3.691599999999795e-05, 3.722199999999995e-05, 3.7555000000001615e-05, 3.744399999999759e-05, 3.7361000000003114e-05, 3.680600000000034e-05, 3.730600000000084e-05, 3.751400000000238e-05, 3.720800000000038e-05, 3.772200000000045e-05, 3.754200000000152e-05, 3.708399999999973e-05, 3.772200000000045e-05, 3.699999999999884e-05, 3.698599999999927e-05, 3.748699999999924e-05, 3.723599999999952e-05, 3.7139000000002004e-05, 3.720800000000038e-05, 3.720799999999691e-05, 3.720800000000038e-05, 3.7346999999996605e-05, 3.7597000000000325e-05, 3.7083000000000255e-05, 3.6874999999998714e-05, 3.7360999999999644e-05, 3.694400000000056e-05, 3.69719999999997e-05, 3.7638999999999034e-05, 3.770800000000088e-05, 3.748599999999977e-05, 3.6888999999998284e-05, 3.709800000000277e-05, 3.706999999999669e-05, 3.722199999999995e-05, 3.6874999999998714e-05, 3.725000000000256e-05, 3.7445000000000533e-05, 3.694399999999709e-05, 3.7554999999998145e-05, 3.7262999999999186e-05, 3.7568999999997715e-05, 3.7681000000001214e-05, 3.774999999999959e-05]</msg>
<status status="PASS" starttime="20201029 18:18:57.703" endtime="20201029 18:18:57.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.697" endtime="20201029 18:18:57.707"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:57.710" endtime="20201029 18:18:57.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.709" endtime="20201029 18:18:57.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.708" endtime="20201029 18:18:57.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.351" endtime="20201029 18:18:57.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.351" endtime="20201029 18:18:57.731"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.740" endtime="20201029 18:18:57.757"></status>
</kw>
<msg timestamp="20201029 18:18:57.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.738" endtime="20201029 18:18:57.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.759" endtime="20201029 18:18:57.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.761" endtime="20201029 18:18:57.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.736" endtime="20201029 18:18:57.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.734" endtime="20201029 18:18:57.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.770" endtime="20201029 18:18:58.056"></status>
</kw>
<msg timestamp="20201029 18:18:58.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023078792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023116958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:57.769" endtime="20201029 18:18:58.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023078792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023116958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:58.061" endtime="20201029 18:18:58.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.069" endtime="20201029 18:18:58.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.766" endtime="20201029 18:18:58.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.765" endtime="20201029 18:18:58.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:58.075" level="INFO">${RESULT} = [{'diff': 3.81659999999992e-05}, {'diff': 3.7889000000002754e-05}, {'diff': 3.825000000000009e-05}, {'diff': 3.7874999999999714e-05}, {'diff': 3.8402999999999354e-05}, {'diff': 3.780600000000134e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:58.072" endtime="20201029 18:18:58.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:58.079" level="INFO">${ACCURACY} = {'diff': [3.81659999999992e-05, 3.7889000000002754e-05, 3.825000000000009e-05, 3.7874999999999714e-05, 3.8402999999999354e-05, 3.780600000000134e-05, 3.823600000000052e-05, 3.823599999999705e-05, 3.86...</msg>
<status status="PASS" starttime="20201029 18:18:58.076" endtime="20201029 18:18:58.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.084" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 18:18:58.083" endtime="20201029 18:18:58.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.086" level="INFO">VALUE: [3.81659999999992e-05, 3.7889000000002754e-05, 3.825000000000009e-05, 3.7874999999999714e-05, 3.8402999999999354e-05, 3.780600000000134e-05, 3.823600000000052e-05, 3.823599999999705e-05, 3.8694999999998314e-05, 3.8138999999999534e-05, 3.829200000000227e-05, 3.79720000000007e-05, 3.8124999999999964e-05, 3.7804999999998395e-05, 3.81659999999992e-05, 3.8041000000002545e-05, 3.7903000000002324e-05, 3.8111000000000395e-05, 3.872199999999798e-05, 3.7805000000001865e-05, 3.8569000000002185e-05, 3.848600000000077e-05, 3.848600000000077e-05, 3.825000000000009e-05, 3.7888999999999284e-05, 3.8569000000002185e-05, 3.801399999999941e-05, 3.829200000000227e-05, 3.8680999999998744e-05, 3.8388999999999784e-05, 3.8667000000002644e-05, 3.8111000000000395e-05, 3.830600000000184e-05, 3.848700000000024e-05, 3.841599999999945e-05, 3.845799999999816e-05, 3.869400000000231e-05, 3.8597000000001325e-05, 3.77919999999983e-05, 3.8554999999999146e-05, 3.8554999999999146e-05, 3.7902999999998854e-05, 3.825000000000009e-05, 3.823600000000052e-05, 3.8375000000000214e-05, 3.857000000000166e-05, 3.8445000000001534e-05, 3.833400000000098e-05, 3.774999999999959e-05, 3.7695000000000783e-05]</msg>
<status status="PASS" starttime="20201029 18:18:58.085" endtime="20201029 18:18:58.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.080" endtime="20201029 18:18:58.088"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:58.092" endtime="20201029 18:18:58.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.090" endtime="20201029 18:18:58.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.089" endtime="20201029 18:18:58.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.732" endtime="20201029 18:18:58.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.731" endtime="20201029 18:18:58.113"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.121" endtime="20201029 18:18:58.138"></status>
</kw>
<msg timestamp="20201029 18:18:58.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:58.120" endtime="20201029 18:18:58.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:58.140" endtime="20201029 18:18:58.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.142" endtime="20201029 18:18:58.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.117" endtime="20201029 18:18:58.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.115" endtime="20201029 18:18:58.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.151" endtime="20201029 18:18:58.436"></status>
</kw>
<msg timestamp="20201029 18:18:58.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021874306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021913667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:58.150" endtime="20201029 18:18:58.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021874306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021913667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:58.440" endtime="20201029 18:18:58.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.448" endtime="20201029 18:18:58.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.147" endtime="20201029 18:18:58.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.145" endtime="20201029 18:18:58.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:58.455" level="INFO">${RESULT} = [{'diff': 3.9361000000001645e-05}, {'diff': 3.902799999999998e-05}, {'diff': 3.907000000000216e-05}, {'diff': 3.8902999999999854e-05}, {'diff': 3.941600000000045e-05}, {'diff': 3.8875000000000715e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:58.451" endtime="20201029 18:18:58.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:58.462" level="INFO">${ACCURACY} = {'diff': [3.9361000000001645e-05, 3.902799999999998e-05, 3.907000000000216e-05, 3.8902999999999854e-05, 3.941600000000045e-05, 3.8875000000000715e-05, 3.9332999999999035e-05, 3.91660000000002e-05, 3.9...</msg>
<status status="PASS" starttime="20201029 18:18:58.455" endtime="20201029 18:18:58.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.466" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 18:18:58.465" endtime="20201029 18:18:58.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.469" level="INFO">VALUE: [3.9361000000001645e-05, 3.902799999999998e-05, 3.907000000000216e-05, 3.8902999999999854e-05, 3.941600000000045e-05, 3.8875000000000715e-05, 3.9332999999999035e-05, 3.91660000000002e-05, 3.9139000000000534e-05, 3.9611000000001895e-05, 3.9125000000000965e-05, 3.927800000000023e-05, 3.927800000000023e-05, 3.9639000000001035e-05, 3.9304999999999896e-05, 3.920800000000238e-05, 3.907000000000216e-05, 3.958399999999876e-05, 3.923700000000099e-05, 3.9111000000001395e-05, 3.9403000000000354e-05, 3.9736999999998024e-05, 3.9389000000000784e-05, 3.8902999999999854e-05, 3.9568999999999716e-05, 3.9402999999996885e-05, 3.920799999999891e-05, 3.9596999999998855e-05, 3.895799999999866e-05, 3.901400000000041e-05, 3.920800000000238e-05, 3.8861000000001145e-05, 3.947199999999873e-05, 3.90980000000013e-05, 3.8889000000000284e-05, 3.9416999999999924e-05, 3.9416999999999924e-05, 3.9097000000001825e-05, 3.947199999999873e-05, 3.9403000000000354e-05, 3.9208999999998384e-05, 3.9568999999999716e-05, 3.894399999999909e-05, 3.940200000000088e-05, 3.8847000000001575e-05, 3.94859999999983e-05, 3.877799999999973e-05, 3.8846999999998105e-05, 3.8889000000000284e-05, 3.9304999999999896e-05]</msg>
<status status="PASS" starttime="20201029 18:18:58.467" endtime="20201029 18:18:58.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.463" endtime="20201029 18:18:58.470"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:58.474" endtime="20201029 18:18:58.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.472" endtime="20201029 18:18:58.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.471" endtime="20201029 18:18:58.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.114" endtime="20201029 18:18:58.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.113" endtime="20201029 18:18:58.494"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.503" endtime="20201029 18:18:58.520"></status>
</kw>
<msg timestamp="20201029 18:18:58.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:58.501" endtime="20201029 18:18:58.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:58.521" endtime="20201029 18:18:58.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.524" endtime="20201029 18:18:58.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.499" endtime="20201029 18:18:58.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.497" endtime="20201029 18:18:58.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.533" endtime="20201029 18:18:58.820"></status>
</kw>
<msg timestamp="20201029 18:18:58.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021847361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021887361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:58.531" endtime="20201029 18:18:58.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021847361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021887361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:58.824" endtime="20201029 18:18:58.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.832" endtime="20201029 18:18:58.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.529" endtime="20201029 18:18:58.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.527" endtime="20201029 18:18:58.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:58.838" level="INFO">${RESULT} = [{'diff': 4.000000000000184e-05}, {'diff': 4.045800000000016e-05}, {'diff': 3.976400000000116e-05}, {'diff': 3.975000000000159e-05}, {'diff': 4.002799999999751e-05}, {'diff': 4.020799999999991e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:58.835" endtime="20201029 18:18:58.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:58.842" level="INFO">${ACCURACY} = {'diff': [4.000000000000184e-05, 4.045800000000016e-05, 3.976400000000116e-05, 3.975000000000159e-05, 4.002799999999751e-05, 4.020799999999991e-05, 3.972199999999898e-05, 4.0153000000001104e-05, 4.038...</msg>
<status status="PASS" starttime="20201029 18:18:58.839" endtime="20201029 18:18:58.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.847" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 18:18:58.846" endtime="20201029 18:18:58.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.849" level="INFO">VALUE: [4.000000000000184e-05, 4.045800000000016e-05, 3.976400000000116e-05, 3.975000000000159e-05, 4.002799999999751e-05, 4.020799999999991e-05, 3.972199999999898e-05, 4.0153000000001104e-05, 4.0388999999998315e-05, 4.0402999999997885e-05, 4.0596999999999855e-05, 4.0375000000002215e-05, 4.0110999999998925e-05, 4.0054999999997176e-05, 3.9889000000001285e-05, 4.066599999999823e-05, 4.0403000000001354e-05, 4.019400000000034e-05, 4.0417000000000924e-05, 4.0652999999998135e-05, 4.020799999999991e-05, 4.0069000000000216e-05, 4.005600000000012e-05, 4.020799999999991e-05, 3.9917000000000424e-05, 4.0167000000000674e-05, 4.0139000000001535e-05, 4.0374999999998745e-05, 4.0431000000000494e-05, 4.0222999999998954e-05, 3.9875000000001715e-05, 4.01660000000012e-05, 3.9930999999999994e-05, 3.972200000000245e-05, 3.9791000000000826e-05, 4.001399999999794e-05, 4.024999999999862e-05, 4.0431000000000494e-05, 4.020799999999991e-05, 4.0389000000001785e-05, 4.022199999999948e-05, 4.005600000000012e-05, 3.973600000000202e-05, 4.0540999999998106e-05, 4.0445000000000064e-05, 4.0610999999999425e-05, 3.9847000000002575e-05, 4.004200000000055e-05, 3.9832999999999535e-05, 3.9874999999998245e-05]</msg>
<status status="PASS" starttime="20201029 18:18:58.848" endtime="20201029 18:18:58.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.843" endtime="20201029 18:18:58.851"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:58.854" endtime="20201029 18:18:58.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.853" endtime="20201029 18:18:58.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.852" endtime="20201029 18:18:58.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.495" endtime="20201029 18:18:58.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.495" endtime="20201029 18:18:58.875"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.883" endtime="20201029 18:18:58.902"></status>
</kw>
<msg timestamp="20201029 18:18:58.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:58.882" endtime="20201029 18:18:58.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:58.904" endtime="20201029 18:18:58.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.906" endtime="20201029 18:18:58.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.879" endtime="20201029 18:18:58.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.877" endtime="20201029 18:18:58.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.916" endtime="20201029 18:18:59.201"></status>
</kw>
<msg timestamp="20201029 18:18:59.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022623306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022664153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:58.914" endtime="20201029 18:18:59.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022623306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022664153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.205" endtime="20201029 18:18:59.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.213" endtime="20201029 18:18:59.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.912" endtime="20201029 18:18:59.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.910" endtime="20201029 18:18:59.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:59.220" level="INFO">${RESULT} = [{'diff': 4.0847000000000105e-05}, {'diff': 4.1388999999999315e-05}, {'diff': 4.1388999999999315e-05}, {'diff': 4.1403000000002355e-05}, {'diff': 4.0777000000002256e-05}, {'diff': 4.076399999999869e-0...</msg>
<status status="PASS" starttime="20201029 18:18:59.217" endtime="20201029 18:18:59.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:59.224" level="INFO">${ACCURACY} = {'diff': [4.0847000000000105e-05, 4.1388999999999315e-05, 4.1388999999999315e-05, 4.1403000000002355e-05, 4.0777000000002256e-05, 4.076399999999869e-05, 4.080600000000087e-05, 4.1083000000000786e-05, ...</msg>
<status status="PASS" starttime="20201029 18:18:59.221" endtime="20201029 18:18:59.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.228" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 18:18:59.227" endtime="20201029 18:18:59.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.231" level="INFO">VALUE: [4.0847000000000105e-05, 4.1388999999999315e-05, 4.1388999999999315e-05, 4.1403000000002355e-05, 4.0777000000002256e-05, 4.076399999999869e-05, 4.080600000000087e-05, 4.1083000000000786e-05, 4.101400000000241e-05, 4.175000000000012e-05, 4.0917000000001424e-05, 4.127799999999876e-05, 4.1054999999998176e-05, 4.1596999999997386e-05, 4.130600000000137e-05, 4.120799999999744e-05, 4.101399999999894e-05, 4.149999999999987e-05, 4.1082999999997316e-05, 4.083400000000001e-05, 4.1639000000003035e-05, 4.1790999999999356e-05, 4.1209000000000384e-05, 4.133400000000051e-05, 4.1597000000000856e-05, 4.1125000000002965e-05, 4.124999999999962e-05, 4.123600000000005e-05, 4.097200000000023e-05, 4.1167000000001674e-05, 4.1527000000003006e-05, 4.124999999999962e-05, 4.1445000000001064e-05, 4.1583000000001286e-05, 4.102800000000198e-05, 4.095800000000066e-05, 4.0818999999997496e-05, 4.0945000000000564e-05, 4.159799999999686e-05, 4.1374999999999745e-05, 4.1374999999999745e-05, 4.070800000000041e-05, 4.142999999999855e-05, 4.123600000000005e-05, 4.11660000000022e-05, 4.0888999999998815e-05, 4.1318999999997996e-05, 4.158400000000076e-05, 4.122200000000048e-05, 4.1083000000000786e-05]</msg>
<status status="PASS" starttime="20201029 18:18:59.229" endtime="20201029 18:18:59.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.225" endtime="20201029 18:18:59.233"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:59.237" endtime="20201029 18:18:59.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.235" endtime="20201029 18:18:59.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.234" endtime="20201029 18:18:59.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.876" endtime="20201029 18:18:59.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.875" endtime="20201029 18:18:59.257"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.266" endtime="20201029 18:18:59.283"></status>
</kw>
<msg timestamp="20201029 18:18:59.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.264" endtime="20201029 18:18:59.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.284" endtime="20201029 18:18:59.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.287" endtime="20201029 18:18:59.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.262" endtime="20201029 18:18:59.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.260" endtime="20201029 18:18:59.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.296" endtime="20201029 18:18:59.580"></status>
</kw>
<msg timestamp="20201029 18:18:59.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021743111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021785306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.294" endtime="20201029 18:18:59.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021743111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021785306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.584" endtime="20201029 18:18:59.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.592" endtime="20201029 18:18:59.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.291" endtime="20201029 18:18:59.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.290" endtime="20201029 18:18:59.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:59.599" level="INFO">${RESULT} = [{'diff': 4.2195000000001814e-05}, {'diff': 4.2110999999997456e-05}, {'diff': 4.177799999999926e-05}, {'diff': 4.2277000000000287e-05}, {'diff': 4.272199999999851e-05}, {'diff': 4.240200000000041e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:59.596" endtime="20201029 18:18:59.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:59.604" level="INFO">${ACCURACY} = {'diff': [4.2195000000001814e-05, 4.2110999999997456e-05, 4.177799999999926e-05, 4.2277000000000287e-05, 4.272199999999851e-05, 4.240200000000041e-05, 4.240200000000041e-05, 4.223599999999758e-05, 4.2...</msg>
<status status="PASS" starttime="20201029 18:18:59.600" endtime="20201029 18:18:59.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.608" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 18:18:59.607" endtime="20201029 18:18:59.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.611" level="INFO">VALUE: [4.2195000000001814e-05, 4.2110999999997456e-05, 4.177799999999926e-05, 4.2277000000000287e-05, 4.272199999999851e-05, 4.240200000000041e-05, 4.240200000000041e-05, 4.223599999999758e-05, 4.2333000000002036e-05, 4.220800000000191e-05, 4.2139000000000065e-05, 4.175000000000012e-05, 4.256999999999872e-05, 4.175000000000012e-05, 4.2597000000001856e-05, 4.1889000000003285e-05, 4.265199999999719e-05, 4.1888999999999815e-05, 4.2722999999997985e-05, 4.255599999999915e-05, 4.2236999999997055e-05, 4.2638999999997096e-05, 4.245799999999869e-05, 4.240200000000041e-05, 4.192999999999905e-05, 4.176399999999969e-05, 4.227799999999976e-05, 4.1917000000002425e-05, 4.204200000000255e-05, 4.2111000000000925e-05, 4.177800000000273e-05, 4.207000000000169e-05, 4.1944999999998095e-05, 4.180600000000187e-05, 4.259800000000133e-05, 4.1917000000002425e-05, 4.1931000000001994e-05, 4.216599999999973e-05, 4.2708999999998415e-05, 4.2069000000002216e-05, 4.195800000000166e-05, 4.2554999999999676e-05, 4.2068999999998746e-05, 4.2139000000000065e-05, 4.2555000000003146e-05, 4.2402999999999885e-05, 4.1916999999998955e-05, 4.254199999999958e-05, 4.197199999999776e-05, 4.256999999999872e-05]</msg>
<status status="PASS" starttime="20201029 18:18:59.609" endtime="20201029 18:18:59.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.605" endtime="20201029 18:18:59.616"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:59.620" endtime="20201029 18:18:59.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.619" endtime="20201029 18:18:59.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.617" endtime="20201029 18:18:59.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.258" endtime="20201029 18:18:59.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.258" endtime="20201029 18:18:59.641"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.649" endtime="20201029 18:18:59.666"></status>
</kw>
<msg timestamp="20201029 18:18:59.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.648" endtime="20201029 18:18:59.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.668" endtime="20201029 18:18:59.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.670" endtime="20201029 18:18:59.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.645" endtime="20201029 18:18:59.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.643" endtime="20201029 18:18:59.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.679" endtime="20201029 18:18:59.965"></status>
</kw>
<msg timestamp="20201029 18:18:59.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021974736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022017736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.678" endtime="20201029 18:18:59.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021974736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022017736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.969" endtime="20201029 18:18:59.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.977" endtime="20201029 18:18:59.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.675" endtime="20201029 18:18:59.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.673" endtime="20201029 18:18:59.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:59.984" level="INFO">${RESULT} = [{'diff': 4.29999999999979e-05}, {'diff': 4.277800000000026e-05}, {'diff': 4.2903000000000385e-05}, {'diff': 4.3375000000001745e-05}, {'diff': 4.28059999999994e-05}, {'diff': 4.3138999999997596e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:59.981" endtime="20201029 18:18:59.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:59.988" level="INFO">${ACCURACY} = {'diff': [4.29999999999979e-05, 4.277800000000026e-05, 4.2903000000000385e-05, 4.3375000000001745e-05, 4.28059999999994e-05, 4.3138999999997596e-05, 4.275000000000112e-05, 4.3389000000001315e-05, 4.29...</msg>
<status status="PASS" starttime="20201029 18:18:59.985" endtime="20201029 18:18:59.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.992" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 18:18:59.991" endtime="20201029 18:18:59.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.995" level="INFO">VALUE: [4.29999999999979e-05, 4.277800000000026e-05, 4.2903000000000385e-05, 4.3375000000001745e-05, 4.28059999999994e-05, 4.3138999999997596e-05, 4.275000000000112e-05, 4.3389000000001315e-05, 4.298599999999833e-05, 4.283399999999854e-05, 4.3153000000000635e-05, 4.355600000000015e-05, 4.274999999999765e-05, 4.341600000000098e-05, 4.3167000000000205e-05, 4.270800000000241e-05, 4.3361000000002176e-05, 4.2804999999999926e-05, 4.3139000000001065e-05, 4.323600000000205e-05, 4.3111000000001926e-05, 4.324999999999815e-05, 4.3652999999997666e-05, 4.372199999999951e-05, 4.323600000000205e-05, 4.281999999999897e-05, 4.329200000000033e-05, 4.355600000000015e-05, 4.274999999999765e-05, 4.3068999999999746e-05, 4.3374999999998276e-05, 4.3291000000000857e-05, 4.3082999999999316e-05, 4.2832999999999066e-05, 4.291600000000048e-05, 4.354199999999711e-05, 4.3541000000001107e-05, 4.298599999999833e-05, 4.355499999999721e-05, 4.2930999999999525e-05, 4.2889000000000815e-05, 4.3375000000001745e-05, 4.3652999999997666e-05, 4.2902999999996916e-05, 4.3722999999998985e-05, 4.293000000000005e-05, 4.3097000000002356e-05, 4.3708999999999415e-05, 4.3569000000000246e-05, 4.341599999999751e-05]</msg>
<status status="PASS" starttime="20201029 18:18:59.993" endtime="20201029 18:18:59.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.989" endtime="20201029 18:18:59.996"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:00.000" endtime="20201029 18:19:00.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.998" endtime="20201029 18:19:00.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.997" endtime="20201029 18:19:00.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.642" endtime="20201029 18:19:00.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.641" endtime="20201029 18:19:00.020"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.029" endtime="20201029 18:19:00.047"></status>
</kw>
<msg timestamp="20201029 18:19:00.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.028" endtime="20201029 18:19:00.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.049" endtime="20201029 18:19:00.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.051" endtime="20201029 18:19:00.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.025" endtime="20201029 18:19:00.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.023" endtime="20201029 18:19:00.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.060" endtime="20201029 18:19:00.345"></status>
</kw>
<msg timestamp="20201029 18:19:00.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022653069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022697431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:00.059" endtime="20201029 18:19:00.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022653069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022697431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:00.349" endtime="20201029 18:19:00.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.357" endtime="20201029 18:19:00.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.056" endtime="20201029 18:19:00.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.055" endtime="20201029 18:19:00.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:00.364" level="INFO">${RESULT} = [{'diff': 4.436199999999918e-05}, {'diff': 4.473600000000008e-05}, {'diff': 4.432000000000047e-05}, {'diff': 4.405499999999771e-05}, {'diff': 4.4096999999999886e-05}, {'diff': 4.3875000000002246e-05},...</msg>
<status status="PASS" starttime="20201029 18:19:00.360" endtime="20201029 18:19:00.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:00.368" level="INFO">${ACCURACY} = {'diff': [4.436199999999918e-05, 4.473600000000008e-05, 4.432000000000047e-05, 4.405499999999771e-05, 4.4096999999999886e-05, 4.3875000000002246e-05, 4.424999999999915e-05, 4.4666999999998236e-05, 4.4...</msg>
<status status="PASS" starttime="20201029 18:19:00.365" endtime="20201029 18:19:00.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.372" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 18:19:00.371" endtime="20201029 18:19:00.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.374" level="INFO">VALUE: [4.436199999999918e-05, 4.473600000000008e-05, 4.432000000000047e-05, 4.405499999999771e-05, 4.4096999999999886e-05, 4.3875000000002246e-05, 4.424999999999915e-05, 4.4666999999998236e-05, 4.425000000000262e-05, 4.4083000000000316e-05, 4.4195000000000345e-05, 4.4319000000000996e-05, 4.424999999999915e-05, 4.4417000000001455e-05, 4.373599999999908e-05, 4.407000000000022e-05, 4.4709000000000415e-05, 4.401300000000247e-05, 4.3973000000002704e-05, 4.4333000000000566e-05, 4.4389000000002315e-05, 4.3819000000000496e-05, 4.4096999999999886e-05, 4.4139000000002065e-05, 4.431899999999753e-05, 4.456899999999778e-05, 4.3819000000000496e-05, 4.38060000000004e-05, 4.379199999999736e-05, 4.472200000000051e-05, 4.4110999999999456e-05, 4.4403000000001885e-05, 4.381999999999997e-05, 4.3874999999998776e-05, 4.405600000000065e-05, 4.420800000000044e-05, 4.404100000000161e-05, 4.455499999999821e-05, 4.445800000000069e-05, 4.377800000000126e-05, 4.4096999999999886e-05, 4.473600000000008e-05, 4.39860000000028e-05, 4.4319000000000996e-05, 4.424999999999915e-05, 4.426400000000219e-05, 4.473600000000008e-05, 4.397199999999976e-05, 4.398599999999933e-05, 4.4124999999999026e-05]</msg>
<status status="PASS" starttime="20201029 18:19:00.373" endtime="20201029 18:19:00.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.368" endtime="20201029 18:19:00.377"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:00.380" endtime="20201029 18:19:00.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.379" endtime="20201029 18:19:00.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.378" endtime="20201029 18:19:00.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.021" endtime="20201029 18:19:00.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.021" endtime="20201029 18:19:00.401"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.409" endtime="20201029 18:19:00.427"></status>
</kw>
<msg timestamp="20201029 18:19:00.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.408" endtime="20201029 18:19:00.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.428" endtime="20201029 18:19:00.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.431" endtime="20201029 18:19:00.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.405" endtime="20201029 18:19:00.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.403" endtime="20201029 18:19:00.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.440" endtime="20201029 18:19:00.726"></status>
</kw>
<msg timestamp="20201029 18:19:00.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021960681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022005861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:00.438" endtime="20201029 18:19:00.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021960681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022005861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:00.730" endtime="20201029 18:19:00.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.739" endtime="20201029 18:19:00.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.436" endtime="20201029 18:19:00.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.434" endtime="20201029 18:19:00.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:00.745" level="INFO">${RESULT} = [{'diff': 4.51800000000023e-05}, {'diff': 4.472200000000051e-05}, {'diff': 4.5138999999999596e-05}, {'diff': 4.4874999999999776e-05}, {'diff': 4.5416999999998986e-05}, {'diff': 4.4973000000000235e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:00.742" endtime="20201029 18:19:00.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:00.750" level="INFO">${ACCURACY} = {'diff': [4.51800000000023e-05, 4.472200000000051e-05, 4.5138999999999596e-05, 4.4874999999999776e-05, 4.5416999999998986e-05, 4.4973000000000235e-05, 4.5388999999999846e-05, 4.551399999999997e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:19:00.746" endtime="20201029 18:19:00.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.755" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 18:19:00.754" endtime="20201029 18:19:00.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.757" level="INFO">VALUE: [4.51800000000023e-05, 4.472200000000051e-05, 4.5138999999999596e-05, 4.4874999999999776e-05, 4.5416999999998986e-05, 4.4973000000000235e-05, 4.5388999999999846e-05, 4.551399999999997e-05, 4.5611000000000956e-05, 4.504099999999914e-05, 4.4861000000000206e-05, 4.474999999999965e-05, 4.527799999999929e-05, 4.505500000000218e-05, 4.506899999999828e-05, 4.4861000000000206e-05, 4.522200000000101e-05, 4.5388999999999846e-05, 4.577799999999979e-05, 4.5138999999999596e-05, 4.5125000000000026e-05, 4.497200000000076e-05, 4.5625000000000526e-05, 4.4917000000001955e-05, 4.473600000000008e-05, 4.473600000000008e-05, 4.474999999999965e-05, 4.542999999999908e-05, 4.5111000000000456e-05, 4.5138999999999596e-05, 4.544399999999865e-05, 4.566599999999976e-05, 4.523600000000058e-05, 4.523600000000058e-05, 4.4874999999999776e-05, 4.525000000000015e-05, 4.5416999999998986e-05, 4.570799999999847e-05, 4.534800000000061e-05, 4.49999999999999e-05, 4.529200000000233e-05, 4.483400000000054e-05, 4.506899999999828e-05, 4.5625000000000526e-05, 4.529199999999886e-05, 4.4874999999999776e-05, 4.542999999999908e-05, 4.479100000000236e-05, 4.4861000000000206e-05, 4.555500000000268e-05]</msg>
<status status="PASS" starttime="20201029 18:19:00.756" endtime="20201029 18:19:00.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.751" endtime="20201029 18:19:00.758"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:00.762" endtime="20201029 18:19:00.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.760" endtime="20201029 18:19:00.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.759" endtime="20201029 18:19:00.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.402" endtime="20201029 18:19:00.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.401" endtime="20201029 18:19:00.783"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.791" endtime="20201029 18:19:00.808"></status>
</kw>
<msg timestamp="20201029 18:19:00.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.790" endtime="20201029 18:19:00.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.810" endtime="20201029 18:19:00.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.812" endtime="20201029 18:19:00.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.787" endtime="20201029 18:19:00.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.785" endtime="20201029 18:19:00.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.821" endtime="20201029 18:19:01.110"></status>
</kw>
<msg timestamp="20201029 18:19:01.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022003444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022049444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:00.820" endtime="20201029 18:19:01.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022003444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022049444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:01.115" endtime="20201029 18:19:01.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.124" endtime="20201029 18:19:01.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.817" endtime="20201029 18:19:01.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.816" endtime="20201029 18:19:01.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:01.130" level="INFO">${RESULT} = [{'diff': 4.60000000000009e-05}, {'diff': 4.6153000000000166e-05}, {'diff': 4.577799999999979e-05}, {'diff': 4.6430999999999556e-05}, {'diff': 4.605499999999971e-05}, {'diff': 4.6416999999999986e-05},...</msg>
<status status="PASS" starttime="20201029 18:19:01.127" endtime="20201029 18:19:01.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:01.134" level="INFO">${ACCURACY} = {'diff': [4.60000000000009e-05, 4.6153000000000166e-05, 4.577799999999979e-05, 4.6430999999999556e-05, 4.605499999999971e-05, 4.6416999999999986e-05, 4.658399999999882e-05, 4.587499999999731e-05, 4.61...</msg>
<status status="PASS" starttime="20201029 18:19:01.131" endtime="20201029 18:19:01.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.139" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 18:19:01.138" endtime="20201029 18:19:01.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.141" level="INFO">VALUE: [4.60000000000009e-05, 4.6153000000000166e-05, 4.577799999999979e-05, 4.6430999999999556e-05, 4.605499999999971e-05, 4.6416999999999986e-05, 4.658399999999882e-05, 4.587499999999731e-05, 4.6153000000000166e-05, 4.645800000000269e-05, 4.6653000000000666e-05, 4.626299999999778e-05, 4.604199999999961e-05, 4.608299999999885e-05, 4.591600000000001e-05, 4.577799999999979e-05, 4.5902999999999916e-05, 4.673599999999861e-05, 4.630499999999996e-05, 4.595800000000219e-05, 4.6403000000000416e-05, 4.654200000000011e-05, 4.624999999999768e-05, 4.575000000000065e-05, 4.663899999999763e-05, 4.6195000000002345e-05, 4.6403000000000416e-05, 4.6208999999998446e-05, 4.5889000000000346e-05, 4.606999999999875e-05, 4.658299999999935e-05, 4.579099999999989e-05, 4.590200000000044e-05, 4.584699999999817e-05, 4.659699999999892e-05, 4.595800000000219e-05, 4.680500000000046e-05, 4.576400000000022e-05, 4.602800000000004e-05, 4.597200000000176e-05, 4.577700000000032e-05, 4.58199999999985e-05, 4.655599999999968e-05, 4.5875000000000776e-05, 4.6639000000001096e-05, 4.592999999999958e-05, 4.658299999999935e-05, 4.630499999999996e-05, 4.6611000000001956e-05, 4.601400000000047e-05]</msg>
<status status="PASS" starttime="20201029 18:19:01.140" endtime="20201029 18:19:01.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.135" endtime="20201029 18:19:01.143"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:01.146" endtime="20201029 18:19:01.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.145" endtime="20201029 18:19:01.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.144" endtime="20201029 18:19:01.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.784" endtime="20201029 18:19:01.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.783" endtime="20201029 18:19:01.167"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.176" endtime="20201029 18:19:01.194"></status>
</kw>
<msg timestamp="20201029 18:19:01.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:01.174" endtime="20201029 18:19:01.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:01.195" endtime="20201029 18:19:01.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.198" endtime="20201029 18:19:01.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.172" endtime="20201029 18:19:01.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.170" endtime="20201029 18:19:01.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.207" endtime="20201029 18:19:01.493"></status>
</kw>
<msg timestamp="20201029 18:19:01.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023296625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023343611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:01.205" endtime="20201029 18:19:01.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023296625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023343611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:01.498" endtime="20201029 18:19:01.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.506" endtime="20201029 18:19:01.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.203" endtime="20201029 18:19:01.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.201" endtime="20201029 18:19:01.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:01.512" level="INFO">${RESULT} = [{'diff': 4.698599999999886e-05}, {'diff': 4.747199999999979e-05}, {'diff': 4.677799999999732e-05}, {'diff': 4.698600000000233e-05}, {'diff': 4.748599999999936e-05}, {'diff': 4.733399999999957e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:01.509" endtime="20201029 18:19:01.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:01.517" level="INFO">${ACCURACY} = {'diff': [4.698599999999886e-05, 4.747199999999979e-05, 4.677799999999732e-05, 4.698600000000233e-05, 4.748599999999936e-05, 4.733399999999957e-05, 4.76529999999982e-05, 4.686099999999874e-05, 4.72229...</msg>
<status status="PASS" starttime="20201029 18:19:01.513" endtime="20201029 18:19:01.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.521" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 18:19:01.520" endtime="20201029 18:19:01.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.523" level="INFO">VALUE: [4.698599999999886e-05, 4.747199999999979e-05, 4.677799999999732e-05, 4.698600000000233e-05, 4.748599999999936e-05, 4.733399999999957e-05, 4.76529999999982e-05, 4.686099999999874e-05, 4.7222999999999016e-05, 4.762499999999906e-05, 4.774999999999918e-05, 4.704199999999714e-05, 4.731900000000053e-05, 4.716699999999727e-05, 4.704100000000114e-05, 4.68329999999996e-05, 4.754200000000111e-05, 4.7375000000002276e-05, 4.720799999999997e-05, 4.7417000000000986e-05, 4.71940000000004e-05, 4.6889000000001346e-05, 4.683399999999907e-05, 4.773599999999961e-05, 4.691600000000101e-05, 4.7472999999999266e-05, 4.734699999999967e-05, 4.745800000000022e-05, 4.736099999999924e-05, 4.772200000000004e-05, 4.774999999999918e-05, 4.704099999999767e-05, 4.690299999999745e-05, 4.713899999999813e-05, 4.723599999999911e-05, 4.705600000000018e-05, 4.7417000000000986e-05, 4.724999999999868e-05, 4.7445000000000126e-05, 4.7417000000000986e-05, 4.694400000000015e-05, 4.7167000000000736e-05, 4.6944999999999626e-05, 4.740199999999847e-05, 4.76940000000009e-05, 4.736099999999924e-05, 4.741600000000151e-05, 4.75139999999985e-05, 4.772200000000004e-05, 4.740299999999795e-05]</msg>
<status status="PASS" starttime="20201029 18:19:01.522" endtime="20201029 18:19:01.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.517" endtime="20201029 18:19:01.526"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:01.529" endtime="20201029 18:19:01.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.528" endtime="20201029 18:19:01.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.527" endtime="20201029 18:19:01.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.168" endtime="20201029 18:19:01.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.167" endtime="20201029 18:19:01.550"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.559" endtime="20201029 18:19:01.576"></status>
</kw>
<msg timestamp="20201029 18:19:01.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:01.557" endtime="20201029 18:19:01.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:01.578" endtime="20201029 18:19:01.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.580" endtime="20201029 18:19:01.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.555" endtime="20201029 18:19:01.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.553" endtime="20201029 18:19:01.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.589" endtime="20201029 18:19:01.875"></status>
</kw>
<msg timestamp="20201029 18:19:01.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022387806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022436, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:19:01.588" endtime="20201029 18:19:01.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022387806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022436, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:19:01.879" endtime="20201029 18:19:01.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.887" endtime="20201029 18:19:01.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.585" endtime="20201029 18:19:01.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.584" endtime="20201029 18:19:01.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:01.894" level="INFO">${RESULT} = [{'diff': 4.81940000000014e-05}, {'diff': 4.794399999999768e-05}, {'diff': 4.788899999999888e-05}, {'diff': 4.831999999999753e-05}, {'diff': 4.804200000000161e-05}, {'diff': 4.848600000000036e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:01.891" endtime="20201029 18:19:01.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:01.901" level="INFO">${ACCURACY} = {'diff': [4.81940000000014e-05, 4.794399999999768e-05, 4.788899999999888e-05, 4.831999999999753e-05, 4.804200000000161e-05, 4.848600000000036e-05, 4.776400000000222e-05, 4.8459000000000696e-05, 4.7792...</msg>
<status status="PASS" starttime="20201029 18:19:01.895" endtime="20201029 18:19:01.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.906" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 18:19:01.905" endtime="20201029 18:19:01.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.909" level="INFO">VALUE: [4.81940000000014e-05, 4.794399999999768e-05, 4.788899999999888e-05, 4.831999999999753e-05, 4.804200000000161e-05, 4.848600000000036e-05, 4.776400000000222e-05, 4.8459000000000696e-05, 4.779200000000136e-05, 4.805600000000118e-05, 4.786099999999974e-05, 4.806900000000128e-05, 4.834700000000067e-05, 4.794400000000115e-05, 4.8389000000002846e-05, 4.775000000000265e-05, 4.863899999999963e-05, 4.792999999999811e-05, 4.805499999999824e-05, 4.847200000000079e-05, 4.847200000000079e-05, 4.830600000000143e-05, 4.8223000000000016e-05, 4.833400000000057e-05, 4.847200000000079e-05, 4.790199999999897e-05, 4.795800000000072e-05, 4.790199999999897e-05, 4.83469999999972e-05, 4.874999999999671e-05, 4.854099999999917e-05, 4.776399999999875e-05, 4.829200000000186e-05, 4.875000000000018e-05, 4.83469999999972e-05, 4.777800000000179e-05, 4.8458999999997227e-05, 4.854199999999864e-05, 4.781899999999756e-05, 4.774999999999918e-05, 4.807000000000075e-05, 4.852799999999907e-05, 4.827800000000229e-05, 4.858300000000135e-05, 4.837499999999981e-05, 4.806899999999781e-05, 4.795800000000072e-05, 4.788899999999888e-05, 4.8153000000002166e-05, 4.773599999999961e-05]</msg>
<status status="PASS" starttime="20201029 18:19:01.907" endtime="20201029 18:19:01.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.902" endtime="20201029 18:19:01.910"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:01.914" endtime="20201029 18:19:01.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.912" endtime="20201029 18:19:01.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.911" endtime="20201029 18:19:01.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.551" endtime="20201029 18:19:01.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.550" endtime="20201029 18:19:01.934"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.946" endtime="20201029 18:19:01.964"></status>
</kw>
<msg timestamp="20201029 18:19:01.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:01.943" endtime="20201029 18:19:01.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:01.966" endtime="20201029 18:19:01.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.968" endtime="20201029 18:19:01.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.939" endtime="20201029 18:19:01.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.937" endtime="20201029 18:19:01.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.980" endtime="20201029 18:19:02.268"></status>
</kw>
<msg timestamp="20201029 18:19:02.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025575278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025624125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:01.978" endtime="20201029 18:19:02.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025575278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025624125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:02.272" endtime="20201029 18:19:02.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.280" endtime="20201029 18:19:02.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.974" endtime="20201029 18:19:02.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.971" endtime="20201029 18:19:02.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:02.287" level="INFO">${RESULT} = [{'diff': 4.884700000000117e-05}, {'diff': 4.875000000000018e-05}, {'diff': 4.937500000000081e-05}, {'diff': 4.9320000000002e-05}, {'diff': 4.937500000000081e-05}, {'diff': 4.8973000000000766e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:02.284" endtime="20201029 18:19:02.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:02.291" level="INFO">${ACCURACY} = {'diff': [4.884700000000117e-05, 4.875000000000018e-05, 4.937500000000081e-05, 4.9320000000002e-05, 4.937500000000081e-05, 4.8973000000000766e-05, 4.884700000000117e-05, 4.956899999999931e-05, 4.89439...</msg>
<status status="PASS" starttime="20201029 18:19:02.288" endtime="20201029 18:19:02.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.296" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 18:19:02.295" endtime="20201029 18:19:02.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.299" level="INFO">VALUE: [4.884700000000117e-05, 4.875000000000018e-05, 4.937500000000081e-05, 4.9320000000002e-05, 4.937500000000081e-05, 4.8973000000000766e-05, 4.884700000000117e-05, 4.956899999999931e-05, 4.894399999999868e-05, 4.945799999999875e-05, 4.922199999999807e-05, 4.912499999999709e-05, 4.956899999999931e-05, 4.906900000000228e-05, 4.88200000000015e-05, 4.897200000000129e-05, 4.923600000000111e-05, 4.88200000000015e-05, 4.925000000000068e-05, 4.934799999999767e-05, 4.954199999999964e-05, 4.924999999999721e-05, 4.916599999999979e-05, 4.88880000000004e-05, 4.91940000000024e-05, 4.895799999999825e-05, 4.906899999999881e-05, 4.912499999999709e-05, 4.923600000000111e-05, 4.96530000000002e-05, 4.880600000000193e-05, 4.91529999999997e-05, 4.9707999999999e-05, 4.940299999999995e-05, 4.902799999999957e-05, 4.966699999999977e-05, 4.948599999999789e-05, 4.969499999999891e-05, 4.9208999999997977e-05, 4.877799999999932e-05, 4.926400000000025e-05, 4.898599999999739e-05, 4.9401999999997004e-05, 4.908300000000185e-05, 4.897199999999782e-05, 4.940299999999995e-05, 4.906899999999881e-05, 4.930599999999896e-05, 4.973600000000161e-05, 4.893099999999859e-05]</msg>
<status status="PASS" starttime="20201029 18:19:02.297" endtime="20201029 18:19:02.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.292" endtime="20201029 18:19:02.300"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:02.304" endtime="20201029 18:19:02.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.302" endtime="20201029 18:19:02.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.301" endtime="20201029 18:19:02.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.935" endtime="20201029 18:19:02.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.935" endtime="20201029 18:19:02.325"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.335" endtime="20201029 18:19:02.356"></status>
</kw>
<msg timestamp="20201029 18:19:02.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:02.333" endtime="20201029 18:19:02.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:02.359" endtime="20201029 18:19:02.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.364" endtime="20201029 18:19:02.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.330" endtime="20201029 18:19:02.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.327" endtime="20201029 18:19:02.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.385" endtime="20201029 18:19:02.680"></status>
</kw>
<msg timestamp="20201029 18:19:02.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024728708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024779361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:02.381" endtime="20201029 18:19:02.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024728708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024779361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:02.684" endtime="20201029 18:19:02.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.693" endtime="20201029 18:19:02.695"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.375" endtime="20201029 18:19:02.695"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.371" endtime="20201029 18:19:02.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:02.700" level="INFO">${RESULT} = [{'diff': 5.06530000000012e-05}, {'diff': 5.012499999999809e-05}, {'diff': 4.993099999999959e-05}, {'diff': 5.034700000000267e-05}, {'diff': 5.012500000000156e-05}, {'diff': 5.05140000000015e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:02.696" endtime="20201029 18:19:02.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:02.704" level="INFO">${ACCURACY} = {'diff': [5.06530000000012e-05, 5.012499999999809e-05, 4.993099999999959e-05, 5.034700000000267e-05, 5.012500000000156e-05, 5.05140000000015e-05, 4.974999999999771e-05, 5.072299999999905e-05, 4.991600...</msg>
<status status="PASS" starttime="20201029 18:19:02.701" endtime="20201029 18:19:02.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.708" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 18:19:02.707" endtime="20201029 18:19:02.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.711" level="INFO">VALUE: [5.06530000000012e-05, 5.012499999999809e-05, 4.993099999999959e-05, 5.034700000000267e-05, 5.012500000000156e-05, 5.05140000000015e-05, 4.974999999999771e-05, 5.072299999999905e-05, 4.991600000000054e-05, 4.991600000000054e-05, 4.9901999999997504e-05, 5.037499999999834e-05, 5.047199999999932e-05, 5.05140000000015e-05, 5.043000000000061e-05, 5.011100000000199e-05, 4.98330000000026e-05, 5.066700000000077e-05, 5.009800000000189e-05, 5.029200000000039e-05, 4.973599999999814e-05, 4.994399999999968e-05, 4.990300000000045e-05, 5.011100000000199e-05, 5.037499999999834e-05, 5.050000000000193e-05, 5.023599999999864e-05, 4.979100000000042e-05, 4.980599999999946e-05, 4.994400000000315e-05, 4.972199999999857e-05, 5.048599999999889e-05, 5.058399999999935e-05, 5.036100000000224e-05, 5.0708e-05, 4.976399999999728e-05, 5.040299999999748e-05, 5.01530000000007e-05, 5.044400000000018e-05, 5.033299999999963e-05, 5.054100000000117e-05, 4.980499999999999e-05, 5.061099999999902e-05, 5.068100000000034e-05, 5.075000000000218e-05, 5.009699999999895e-05, 5.026399999999778e-05, 4.976400000000075e-05, 5.055600000000021e-05, 4.981999999999903e-05]</msg>
<status status="PASS" starttime="20201029 18:19:02.710" endtime="20201029 18:19:02.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.705" endtime="20201029 18:19:02.713"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:02.717" endtime="20201029 18:19:02.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.716" endtime="20201029 18:19:02.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.714" endtime="20201029 18:19:02.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.326" endtime="20201029 18:19:02.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.325" endtime="20201029 18:19:02.738"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.747" endtime="20201029 18:19:02.765"></status>
</kw>
<msg timestamp="20201029 18:19:02.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:02.745" endtime="20201029 18:19:02.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:02.766" endtime="20201029 18:19:02.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.769" endtime="20201029 18:19:02.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.743" endtime="20201029 18:19:02.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.740" endtime="20201029 18:19:02.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.778" endtime="20201029 18:19:03.064"></status>
</kw>
<msg timestamp="20201029 18:19:03.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022457861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022509236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:02.777" endtime="20201029 18:19:03.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022457861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022509236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:03.069" endtime="20201029 18:19:03.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.077" endtime="20201029 18:19:03.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.774" endtime="20201029 18:19:03.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.772" endtime="20201029 18:19:03.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:03.084" level="INFO">${RESULT} = [{'diff': 5.137499999999934e-05}, {'diff': 5.15270000000026e-05}, {'diff': 5.168100000000134e-05}, {'diff': 5.1708000000001e-05}, {'diff': 5.149999999999946e-05}, {'diff': 5.140300000000195e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:19:03.080" endtime="20201029 18:19:03.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:03.089" level="INFO">${ACCURACY} = {'diff': [5.137499999999934e-05, 5.15270000000026e-05, 5.168100000000134e-05, 5.1708000000001e-05, 5.149999999999946e-05, 5.140300000000195e-05, 5.082000000000003e-05, 5.172200000000057e-05, 5.1124999...</msg>
<status status="PASS" starttime="20201029 18:19:03.085" endtime="20201029 18:19:03.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.094" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 18:19:03.093" endtime="20201029 18:19:03.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.096" level="INFO">VALUE: [5.137499999999934e-05, 5.15270000000026e-05, 5.168100000000134e-05, 5.1708000000001e-05, 5.149999999999946e-05, 5.140300000000195e-05, 5.082000000000003e-05, 5.172200000000057e-05, 5.112499999999909e-05, 5.094400000000068e-05, 5.172300000000005e-05, 5.168100000000134e-05, 5.140299999999848e-05, 5.109799999999942e-05, 5.112499999999909e-05, 5.1137999999999184e-05, 5.072199999999957e-05, 5.090299999999798e-05, 5.155499999999827e-05, 5.118100000000084e-05, 5.111099999999952e-05, 5.075000000000218e-05, 5.155600000000121e-05, 5.16669999999983e-05, 5.118099999999737e-05, 5.101399999999853e-05, 5.1401999999999004e-05, 5.079200000000089e-05, 5.106900000000081e-05, 5.140299999999848e-05, 5.127700000000235e-05, 5.151399999999903e-05, 5.141700000000152e-05, 5.111099999999952e-05, 5.081900000000056e-05, 5.079200000000089e-05, 5.154200000000164e-05, 5.130600000000096e-05, 5.141700000000152e-05, 5.1707999999997534e-05, 5.087499999999884e-05, 5.141700000000152e-05, 5.14729999999998e-05, 5.138899999999891e-05, 5.113900000000213e-05, 5.149999999999946e-05, 5.138899999999891e-05, 5.094400000000068e-05, 5.081900000000056e-05, 5.173600000000014e-05]</msg>
<status status="PASS" starttime="20201029 18:19:03.095" endtime="20201029 18:19:03.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.090" endtime="20201029 18:19:03.098"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:03.101" endtime="20201029 18:19:03.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.100" endtime="20201029 18:19:03.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.099" endtime="20201029 18:19:03.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.739" endtime="20201029 18:19:03.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.738" endtime="20201029 18:19:03.122"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.132" endtime="20201029 18:19:03.150"></status>
</kw>
<msg timestamp="20201029 18:19:03.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.131" endtime="20201029 18:19:03.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.152" endtime="20201029 18:19:03.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.154" endtime="20201029 18:19:03.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.127" endtime="20201029 18:19:03.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.125" endtime="20201029 18:19:03.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.164" endtime="20201029 18:19:03.451"></status>
</kw>
<msg timestamp="20201029 18:19:03.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023827542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023880069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:03.162" endtime="20201029 18:19:03.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023827542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023880069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:03.455" endtime="20201029 18:19:03.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.464" endtime="20201029 18:19:03.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.159" endtime="20201029 18:19:03.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.158" endtime="20201029 18:19:03.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:03.471" level="INFO">${RESULT} = [{'diff': 5.252700000000013e-05}, {'diff': 5.222200000000107e-05}, {'diff': 5.256899999999884e-05}, {'diff': 5.18470000000007e-05}, {'diff': 5.225000000000021e-05}, {'diff': 5.223600000000064e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:03.467" endtime="20201029 18:19:03.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:03.475" level="INFO">${ACCURACY} = {'diff': [5.252700000000013e-05, 5.222200000000107e-05, 5.256899999999884e-05, 5.18470000000007e-05, 5.225000000000021e-05, 5.223600000000064e-05, 5.190299999999898e-05, 5.176399999999928e-05, 5.17220...</msg>
<status status="PASS" starttime="20201029 18:19:03.472" endtime="20201029 18:19:03.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.480" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 18:19:03.478" endtime="20201029 18:19:03.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.482" level="INFO">VALUE: [5.252700000000013e-05, 5.222200000000107e-05, 5.256899999999884e-05, 5.18470000000007e-05, 5.225000000000021e-05, 5.223600000000064e-05, 5.190299999999898e-05, 5.176399999999928e-05, 5.172200000000057e-05, 5.172200000000057e-05, 5.257000000000178e-05, 5.230599999999849e-05, 5.198600000000039e-05, 5.212500000000009e-05, 5.180499999999852e-05, 5.2402000000000004e-05, 5.2235999999997174e-05, 5.2707999999998534e-05, 5.263900000000016e-05, 5.188900000000288e-05, 5.256899999999884e-05, 5.212500000000009e-05, 5.262500000000059e-05, 5.174999999999971e-05, 5.188899999999941e-05, 5.186100000000027e-05, 5.209799999999695e-05, 5.272200000000157e-05, 5.183299999999766e-05, 5.258299999999841e-05, 5.212499999999662e-05, 5.226399999999978e-05, 5.230500000000249e-05, 5.2138000000000184e-05, 5.198600000000039e-05, 5.230500000000249e-05, 5.186100000000027e-05, 5.2430000000002613e-05, 5.230499999999902e-05, 5.225000000000021e-05, 5.238899999999991e-05, 5.204199999999867e-05, 5.258400000000135e-05, 5.244500000000166e-05, 5.190299999999898e-05, 5.206899999999834e-05, 5.256900000000231e-05, 5.176399999999928e-05, 5.225000000000021e-05, 5.273600000000114e-05]</msg>
<status status="PASS" starttime="20201029 18:19:03.481" endtime="20201029 18:19:03.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.476" endtime="20201029 18:19:03.484"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:03.487" endtime="20201029 18:19:03.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.486" endtime="20201029 18:19:03.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.485" endtime="20201029 18:19:03.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.123" endtime="20201029 18:19:03.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.123" endtime="20201029 18:19:03.508"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.517" endtime="20201029 18:19:03.536"></status>
</kw>
<msg timestamp="20201029 18:19:03.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.516" endtime="20201029 18:19:03.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.537" endtime="20201029 18:19:03.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.540" endtime="20201029 18:19:03.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.513" endtime="20201029 18:19:03.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.511" endtime="20201029 18:19:03.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.549" endtime="20201029 18:19:03.837"></status>
</kw>
<msg timestamp="20201029 18:19:03.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023498736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023551917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:03.548" endtime="20201029 18:19:03.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023498736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023551917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:03.841" endtime="20201029 18:19:03.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.850" endtime="20201029 18:19:03.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.545" endtime="20201029 18:19:03.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.543" endtime="20201029 18:19:03.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:03.857" level="INFO">${RESULT} = [{'diff': 5.318099999999937e-05}, {'diff': 5.331999999999906e-05}, {'diff': 5.333399999999863e-05}, {'diff': 5.343099999999962e-05}, {'diff': 5.355500000000027e-05}, {'diff': 5.361099999999855e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:03.854" endtime="20201029 18:19:03.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:03.861" level="INFO">${ACCURACY} = {'diff': [5.318099999999937e-05, 5.331999999999906e-05, 5.333399999999863e-05, 5.343099999999962e-05, 5.355500000000027e-05, 5.361099999999855e-05, 5.333299999999916e-05, 5.3152000000000754e-05, 5.330...</msg>
<status status="PASS" starttime="20201029 18:19:03.858" endtime="20201029 18:19:03.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.866" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 18:19:03.865" endtime="20201029 18:19:03.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.868" level="INFO">VALUE: [5.318099999999937e-05, 5.331999999999906e-05, 5.333399999999863e-05, 5.343099999999962e-05, 5.355500000000027e-05, 5.361099999999855e-05, 5.333299999999916e-05, 5.3152000000000754e-05, 5.330500000000002e-05, 5.2985999999997924e-05, 5.341700000000005e-05, 5.359800000000192e-05, 5.341700000000005e-05, 5.372299999999858e-05, 5.330599999999949e-05, 5.3152000000000754e-05, 5.356899999999984e-05, 5.3721999999999104e-05, 5.361199999999802e-05, 5.311099999999805e-05, 5.361100000000202e-05, 5.359699999999898e-05, 5.361100000000202e-05, 5.315300000000023e-05, 5.281899999999909e-05, 5.304199999999967e-05, 5.340300000000048e-05, 5.357000000000278e-05, 5.319499999999894e-05, 5.361099999999855e-05, 5.361099999999855e-05, 5.28340000000016e-05, 5.320899999999851e-05, 5.359699999999898e-05, 5.329100000000045e-05, 5.329100000000045e-05, 5.325000000000121e-05, 5.281899999999909e-05, 5.304199999999967e-05, 5.272200000000157e-05, 5.318099999999937e-05, 5.329199999999992e-05, 5.281999999999856e-05, 5.36670000000003e-05, 5.336100000000177e-05, 5.361099999999855e-05, 5.281999999999856e-05, 5.3693999999999964e-05, 5.315300000000023e-05, 5.356899999999984e-05]</msg>
<status status="PASS" starttime="20201029 18:19:03.867" endtime="20201029 18:19:03.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.862" endtime="20201029 18:19:03.871"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:03.875" endtime="20201029 18:19:03.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.873" endtime="20201029 18:19:03.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.872" endtime="20201029 18:19:03.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.509" endtime="20201029 18:19:03.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.508" endtime="20201029 18:19:03.895"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.905" endtime="20201029 18:19:03.923"></status>
</kw>
<msg timestamp="20201029 18:19:03.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.903" endtime="20201029 18:19:03.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.924" endtime="20201029 18:19:03.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.927" endtime="20201029 18:19:03.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.900" endtime="20201029 18:19:03.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.898" endtime="20201029 18:19:03.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.937" endtime="20201029 18:19:04.224"></status>
</kw>
<msg timestamp="20201029 18:19:04.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02319275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023246903, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:03.936" endtime="20201029 18:19:04.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02319275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023246903, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:04.228" endtime="20201029 18:19:04.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.236" endtime="20201029 18:19:04.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.933" endtime="20201029 18:19:04.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.931" endtime="20201029 18:19:04.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:04.243" level="INFO">${RESULT} = [{'diff': 5.415299999999776e-05}, {'diff': 5.4485999999999424e-05}, {'diff': 5.432000000000006e-05}, {'diff': 5.393100000000012e-05}, {'diff': 5.40280000000011e-05}, {'diff': 5.458300000000041e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:04.240" endtime="20201029 18:19:04.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:04.248" level="INFO">${ACCURACY} = {'diff': [5.415299999999776e-05, 5.4485999999999424e-05, 5.432000000000006e-05, 5.393100000000012e-05, 5.40280000000011e-05, 5.458300000000041e-05, 5.390300000000098e-05, 5.3971999999999354e-05, 5.404...</msg>
<status status="PASS" starttime="20201029 18:19:04.244" endtime="20201029 18:19:04.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.253" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 18:19:04.252" endtime="20201029 18:19:04.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.255" level="INFO">VALUE: [5.415299999999776e-05, 5.4485999999999424e-05, 5.432000000000006e-05, 5.393100000000012e-05, 5.40280000000011e-05, 5.458300000000041e-05, 5.390300000000098e-05, 5.3971999999999354e-05, 5.404099999999773e-05, 5.416699999999733e-05, 5.4458000000000284e-05, 5.413900000000166e-05, 5.4722000000000104e-05, 5.455600000000074e-05, 5.379200000000042e-05, 5.433399999999963e-05, 5.445900000000323e-05, 5.377800000000085e-05, 5.408299999999991e-05, 5.459699999999998e-05, 5.458299999999694e-05, 5.455500000000127e-05, 5.405500000000077e-05, 5.381900000000009e-05, 5.386100000000227e-05, 5.469499999999697e-05, 5.433300000000016e-05, 5.409699999999948e-05, 5.4208000000000034e-05, 5.444500000000019e-05, 5.404200000000067e-05, 5.433399999999963e-05, 5.379200000000042e-05, 5.390300000000098e-05, 5.390300000000098e-05, 5.4722000000000104e-05, 5.4208000000000034e-05, 5.4430000000001144e-05, 5.437499999999887e-05, 5.4180000000000894e-05, 5.406900000000034e-05, 5.43609999999993e-05, 5.4193999999996995e-05, 5.459800000000292e-05, 5.404200000000067e-05, 5.430600000000049e-05, 5.44730000000028e-05, 5.401400000000153e-05, 5.4722000000000104e-05, 5.4166000000001324e-05]</msg>
<status status="PASS" starttime="20201029 18:19:04.254" endtime="20201029 18:19:04.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.249" endtime="20201029 18:19:04.257"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:04.261" endtime="20201029 18:19:04.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.259" endtime="20201029 18:19:04.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.258" endtime="20201029 18:19:04.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.896" endtime="20201029 18:19:04.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.896" endtime="20201029 18:19:04.281"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.290" endtime="20201029 18:19:04.309"></status>
</kw>
<msg timestamp="20201029 18:19:04.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:04.289" endtime="20201029 18:19:04.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:04.311" endtime="20201029 18:19:04.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.314" endtime="20201029 18:19:04.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.286" endtime="20201029 18:19:04.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.284" endtime="20201029 18:19:04.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.323" endtime="20201029 18:19:04.610"></status>
</kw>
<msg timestamp="20201029 18:19:04.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022705625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022760958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:04.321" endtime="20201029 18:19:04.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022705625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022760958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:04.614" endtime="20201029 18:19:04.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.623" endtime="20201029 18:19:04.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.319" endtime="20201029 18:19:04.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.317" endtime="20201029 18:19:04.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:04.630" level="INFO">${RESULT} = [{'diff': 5.533300000000116e-05}, {'diff': 5.533300000000116e-05}, {'diff': 5.5721999999997635e-05}, {'diff': 5.507000000000081e-05}, {'diff': 5.515299999999876e-05}, {'diff': 5.493100000000112e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:04.626" endtime="20201029 18:19:04.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:04.634" level="INFO">${ACCURACY} = {'diff': [5.533300000000116e-05, 5.533300000000116e-05, 5.5721999999997635e-05, 5.507000000000081e-05, 5.515299999999876e-05, 5.493100000000112e-05, 5.511100000000005e-05, 5.5236000000000174e-05, 5.52...</msg>
<status status="PASS" starttime="20201029 18:19:04.631" endtime="20201029 18:19:04.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.639" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 18:19:04.637" endtime="20201029 18:19:04.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.641" level="INFO">VALUE: [5.533300000000116e-05, 5.533300000000116e-05, 5.5721999999997635e-05, 5.507000000000081e-05, 5.515299999999876e-05, 5.493100000000112e-05, 5.511100000000005e-05, 5.5236000000000174e-05, 5.5222000000000604e-05, 5.540300000000248e-05, 5.5208000000001034e-05, 5.4749999999999244e-05, 5.509799999999995e-05, 5.4708000000000534e-05, 5.561100000000055e-05, 5.529200000000192e-05, 5.504099999999873e-05, 5.5499999999999994e-05, 5.563899999999969e-05, 5.477800000000185e-05, 5.5208000000001034e-05, 5.53610000000003e-05, 5.505599999999777e-05, 5.4999999999999494e-05, 5.538899999999944e-05, 5.509700000000048e-05, 5.4999999999999494e-05, 5.5222000000000604e-05, 5.50280000000021e-05, 5.5235999999996704e-05, 5.533300000000116e-05, 5.531999999999759e-05, 5.488899999999894e-05, 5.5499999999999994e-05, 5.538900000000291e-05, 5.540299999999901e-05, 5.559799999999698e-05, 5.5736000000000674e-05, 5.5665999999999355e-05, 5.537499999999987e-05, 5.507000000000081e-05, 5.483300000000066e-05, 5.4749999999999244e-05, 5.533399999999716e-05, 5.5208000000001034e-05, 5.533300000000116e-05, 5.479200000000142e-05, 5.534700000000073e-05, 5.515300000000223e-05, 5.515299999999876e-05]</msg>
<status status="PASS" starttime="20201029 18:19:04.640" endtime="20201029 18:19:04.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.635" endtime="20201029 18:19:04.649"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:04.653" endtime="20201029 18:19:04.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.651" endtime="20201029 18:19:04.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.650" endtime="20201029 18:19:04.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.282" endtime="20201029 18:19:04.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.282" endtime="20201029 18:19:04.674"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.683" endtime="20201029 18:19:04.701"></status>
</kw>
<msg timestamp="20201029 18:19:04.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:04.681" endtime="20201029 18:19:04.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:04.703" endtime="20201029 18:19:04.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.705" endtime="20201029 18:19:04.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.679" endtime="20201029 18:19:04.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.676" endtime="20201029 18:19:04.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.715" endtime="20201029 18:19:05.002"></status>
</kw>
<msg timestamp="20201029 18:19:05.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023504236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023560736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:04.713" endtime="20201029 18:19:05.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023504236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023560736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:05.006" endtime="20201029 18:19:05.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.015" endtime="20201029 18:19:05.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.710" endtime="20201029 18:19:05.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.709" endtime="20201029 18:19:05.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:05.022" level="INFO">${RESULT} = [{'diff': 5.6499999999997524e-05}, {'diff': 5.665300000000026e-05}, {'diff': 5.6291999999999454e-05}, {'diff': 5.609800000000095e-05}, {'diff': 5.616699999999933e-05}, {'diff': 5.6528000000000134e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:05.018" endtime="20201029 18:19:05.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:05.026" level="INFO">${ACCURACY} = {'diff': [5.6499999999997524e-05, 5.665300000000026e-05, 5.6291999999999454e-05, 5.609800000000095e-05, 5.616699999999933e-05, 5.6528000000000134e-05, 5.6471999999998385e-05, 5.6014000000000064e-05, 5...</msg>
<status status="PASS" starttime="20201029 18:19:05.023" endtime="20201029 18:19:05.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.031" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 18:19:05.029" endtime="20201029 18:19:05.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.033" level="INFO">VALUE: [5.6499999999997524e-05, 5.665300000000026e-05, 5.6291999999999454e-05, 5.609800000000095e-05, 5.616699999999933e-05, 5.6528000000000134e-05, 5.6471999999998385e-05, 5.6014000000000064e-05, 5.612500000000062e-05, 5.6402000000000535e-05, 5.606899999999887e-05, 5.641699999999958e-05, 5.6208000000002034e-05, 5.577800000000285e-05, 5.61809999999989e-05, 5.6208000000002034e-05, 5.5971999999997885e-05, 5.591700000000255e-05, 5.577800000000285e-05, 5.5791999999998954e-05, 5.651300000000109e-05, 5.633300000000216e-05, 5.5736000000000674e-05, 5.5902000000000035e-05, 5.6707999999999065e-05, 5.638900000000044e-05, 5.6236000000001174e-05, 5.61809999999989e-05, 5.606900000000234e-05, 5.5929999999999175e-05, 5.58610000000008e-05, 5.591699999999908e-05, 5.594499999999822e-05, 5.6000000000000494e-05, 5.576300000000034e-05, 5.622300000000108e-05, 5.6679999999999925e-05, 5.609799999999748e-05, 5.6416000000000105e-05, 5.606899999999887e-05, 5.630499999999955e-05, 5.593100000000212e-05, 5.6222000000001604e-05, 5.611100000000105e-05, 5.6555999999999274e-05, 5.593099999999865e-05, 5.6250000000000744e-05, 5.6555999999999274e-05, 5.620900000000151e-05, 5.666699999999983e-05]</msg>
<status status="PASS" starttime="20201029 18:19:05.032" endtime="20201029 18:19:05.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.027" endtime="20201029 18:19:05.036"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:05.039" endtime="20201029 18:19:05.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.038" endtime="20201029 18:19:05.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.037" endtime="20201029 18:19:05.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.675" endtime="20201029 18:19:05.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.674" endtime="20201029 18:19:05.060"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.069" endtime="20201029 18:19:05.087"></status>
</kw>
<msg timestamp="20201029 18:19:05.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:05.067" endtime="20201029 18:19:05.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:05.089" endtime="20201029 18:19:05.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.091" endtime="20201029 18:19:05.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.065" endtime="20201029 18:19:05.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.063" endtime="20201029 18:19:05.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.101" endtime="20201029 18:19:05.388"></status>
</kw>
<msg timestamp="20201029 18:19:05.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022387694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022444708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:05.099" endtime="20201029 18:19:05.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022387694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022444708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:05.392" endtime="20201029 18:19:05.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.400" endtime="20201029 18:19:05.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.096" endtime="20201029 18:19:05.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.094" endtime="20201029 18:19:05.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:05.407" level="INFO">${RESULT} = [{'diff': 5.7014000000001064e-05}, {'diff': 5.6736000000001674e-05}, {'diff': 5.7042000000000204e-05}, {'diff': 5.7249999999998274e-05}, {'diff': 5.6916000000000605e-05}, {'diff': 5.6791999999999954e-...</msg>
<status status="PASS" starttime="20201029 18:19:05.404" endtime="20201029 18:19:05.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:05.415" level="INFO">${ACCURACY} = {'diff': [5.7014000000001064e-05, 5.6736000000001674e-05, 5.7042000000000204e-05, 5.7249999999998274e-05, 5.6916000000000605e-05, 5.6791999999999954e-05, 5.7292000000000454e-05, 5.691700000000008e-05,...</msg>
<status status="PASS" starttime="20201029 18:19:05.408" endtime="20201029 18:19:05.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.420" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 18:19:05.419" endtime="20201029 18:19:05.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.422" level="INFO">VALUE: [5.7014000000001064e-05, 5.6736000000001674e-05, 5.7042000000000204e-05, 5.7249999999998274e-05, 5.6916000000000605e-05, 5.6791999999999954e-05, 5.7292000000000454e-05, 5.691700000000008e-05, 5.737500000000187e-05, 5.695899999999879e-05, 5.7694000000000495e-05, 5.6791999999999954e-05, 5.677700000000091e-05, 5.726300000000184e-05, 5.6916000000000605e-05, 5.690300000000051e-05, 5.754100000000123e-05, 5.769499999999997e-05, 5.762499999999865e-05, 5.738899999999797e-05, 5.7471999999999385e-05, 5.7708000000000065e-05, 5.7569999999999844e-05, 5.738899999999797e-05, 5.6971999999998885e-05, 5.729099999999751e-05, 5.7152000000001285e-05, 5.7250000000001744e-05, 5.765299999999779e-05, 5.731900000000012e-05, 5.7457999999999815e-05, 5.688900000000094e-05, 5.708400000000238e-05, 5.7236000000002174e-05, 5.6791999999999954e-05, 5.7028000000000634e-05, 5.7528000000001134e-05, 5.690300000000051e-05, 5.6916000000000605e-05, 5.722300000000208e-05, 5.693099999999965e-05, 5.679100000000048e-05, 5.6985999999998455e-05, 5.681899999999962e-05, 5.7152000000001285e-05, 5.738899999999797e-05, 5.76810000000004e-05, 5.7457999999999815e-05, 5.741700000000058e-05, 5.713900000000119e-05]</msg>
<status status="PASS" starttime="20201029 18:19:05.421" endtime="20201029 18:19:05.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.416" endtime="20201029 18:19:05.424"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:05.427" endtime="20201029 18:19:05.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.426" endtime="20201029 18:19:05.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.425" endtime="20201029 18:19:05.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.061" endtime="20201029 18:19:05.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.060" endtime="20201029 18:19:05.448"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.457" endtime="20201029 18:19:05.475"></status>
</kw>
<msg timestamp="20201029 18:19:05.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:05.456" endtime="20201029 18:19:05.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:05.477" endtime="20201029 18:19:05.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.480" endtime="20201029 18:19:05.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.453" endtime="20201029 18:19:05.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.451" endtime="20201029 18:19:05.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.489" endtime="20201029 18:19:05.777"></status>
</kw>
<msg timestamp="20201029 18:19:05.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022834514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022892681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:05.487" endtime="20201029 18:19:05.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022834514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022892681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:05.781" endtime="20201029 18:19:05.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.790" endtime="20201029 18:19:05.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.485" endtime="20201029 18:19:05.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.483" endtime="20201029 18:19:05.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:05.796" level="INFO">${RESULT} = [{'diff': 5.816700000000133e-05}, {'diff': 5.8319999999997124e-05}, {'diff': 5.813900000000219e-05}, {'diff': 5.859700000000051e-05}, {'diff': 5.855499999999833e-05}, {'diff': 5.7958000000000315e-05},...</msg>
<status status="PASS" starttime="20201029 18:19:05.793" endtime="20201029 18:19:05.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:05.801" level="INFO">${ACCURACY} = {'diff': [5.816700000000133e-05, 5.8319999999997124e-05, 5.813900000000219e-05, 5.859700000000051e-05, 5.855499999999833e-05, 5.7958000000000315e-05, 5.8458000000000815e-05, 5.8070000000000344e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:19:05.797" endtime="20201029 18:19:05.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.805" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 18:19:05.804" endtime="20201029 18:19:05.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.808" level="INFO">VALUE: [5.816700000000133e-05, 5.8319999999997124e-05, 5.813900000000219e-05, 5.859700000000051e-05, 5.855499999999833e-05, 5.7958000000000315e-05, 5.8458000000000815e-05, 5.8070000000000344e-05, 5.8056000000000774e-05, 5.8542000000001704e-05, 5.7806000000000524e-05, 5.811099999999958e-05, 5.8306000000001024e-05, 5.831900000000112e-05, 5.8277999999998414e-05, 5.7985999999999455e-05, 5.8151999999998816e-05, 5.7735999999999205e-05, 5.808300000000044e-05, 5.841699999999811e-05, 5.858300000000094e-05, 5.8292000000001454e-05, 5.812499999999915e-05, 5.863900000000269e-05, 5.822299999999961e-05, 5.8430000000001675e-05, 5.8278000000001884e-05, 5.8320000000000594e-05, 5.861100000000008e-05, 5.7971999999999885e-05, 5.8152000000002285e-05, 5.7708000000000065e-05, 5.843099999999768e-05, 5.783300000000019e-05, 5.7971999999999885e-05, 5.8264000000002314e-05, 5.7792000000000954e-05, 5.7971999999999885e-05, 5.788899999999847e-05, 5.8249999999999275e-05, 5.8249999999999275e-05, 5.861100000000008e-05, 5.8570000000000844e-05, 5.7971999999999885e-05, 5.781899999999715e-05, 5.812499999999915e-05, 5.781900000000062e-05, 5.781900000000062e-05, 5.7958000000000315e-05, 5.8444000000001245e-05]</msg>
<status status="PASS" starttime="20201029 18:19:05.806" endtime="20201029 18:19:05.809"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.801" endtime="20201029 18:19:05.809"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:05.813" endtime="20201029 18:19:05.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.811" endtime="20201029 18:19:05.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.810" endtime="20201029 18:19:05.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.449" endtime="20201029 18:19:05.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.449" endtime="20201029 18:19:05.834"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.843" endtime="20201029 18:19:05.861"></status>
</kw>
<msg timestamp="20201029 18:19:05.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:05.841" endtime="20201029 18:19:05.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:05.863" endtime="20201029 18:19:05.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.866" endtime="20201029 18:19:05.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.839" endtime="20201029 18:19:05.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.837" endtime="20201029 18:19:05.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.875" endtime="20201029 18:19:06.162"></status>
</kw>
<msg timestamp="20201029 18:19:06.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023434806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023493667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:05.873" endtime="20201029 18:19:06.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023434806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023493667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:06.166" endtime="20201029 18:19:06.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.175" endtime="20201029 18:19:06.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.871" endtime="20201029 18:19:06.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.869" endtime="20201029 18:19:06.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:06.181" level="INFO">${RESULT} = [{'diff': 5.886100000000033e-05}, {'diff': 5.8985999999996985e-05}, {'diff': 5.9291999999998984e-05}, {'diff': 5.9486000000000955e-05}, {'diff': 5.8915999999999136e-05}, {'diff': 5.8763999999999345e-0...</msg>
<status status="PASS" starttime="20201029 18:19:06.178" endtime="20201029 18:19:06.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:06.186" level="INFO">${ACCURACY} = {'diff': [5.886100000000033e-05, 5.8985999999996985e-05, 5.9291999999998984e-05, 5.9486000000000955e-05, 5.8915999999999136e-05, 5.8763999999999345e-05, 5.952700000000019e-05, 5.912500000000015e-05, 5...</msg>
<status status="PASS" starttime="20201029 18:19:06.182" endtime="20201029 18:19:06.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.190" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 18:19:06.189" endtime="20201029 18:19:06.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.193" level="INFO">VALUE: [5.886100000000033e-05, 5.8985999999996985e-05, 5.9291999999998984e-05, 5.9486000000000955e-05, 5.8915999999999136e-05, 5.8763999999999345e-05, 5.952700000000019e-05, 5.912500000000015e-05, 5.962500000000065e-05, 5.8722000000000635e-05, 5.958299999999847e-05, 5.9305999999998554e-05, 5.966699999999936e-05, 5.926300000000037e-05, 5.9569999999998374e-05, 5.895900000000079e-05, 5.9028000000002634e-05, 5.956900000000237e-05, 5.9138000000000246e-05, 5.9098000000000483e-05, 5.933299999999822e-05, 5.95689999999989e-05, 5.912500000000015e-05, 5.8819999999997624e-05, 5.9236000000000705e-05, 5.9570000000001844e-05, 5.9486000000000955e-05, 5.91810000000019e-05, 5.9457999999998346e-05, 5.9583999999997944e-05, 5.9000000000000025e-05, 5.8972000000000885e-05, 5.9402000000000066e-05, 5.9735999999997735e-05, 5.8763999999999345e-05, 5.938899999999997e-05, 5.9721999999998165e-05, 5.9249999999996805e-05, 5.933299999999822e-05, 5.909699999999754e-05, 5.888900000000294e-05, 5.9084000000000914e-05, 5.9056000000001774e-05, 5.9250000000000275e-05, 5.9415999999999636e-05, 5.8887999999999996e-05, 5.912500000000015e-05, 5.9222000000001135e-05, 5.888899999999947e-05, 5.8901999999999566e-05]</msg>
<status status="PASS" starttime="20201029 18:19:06.192" endtime="20201029 18:19:06.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.187" endtime="20201029 18:19:06.195"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:06.199" endtime="20201029 18:19:06.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.197" endtime="20201029 18:19:06.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.196" endtime="20201029 18:19:06.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.835" endtime="20201029 18:19:06.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.834" endtime="20201029 18:19:06.220"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.229" endtime="20201029 18:19:06.246"></status>
</kw>
<msg timestamp="20201029 18:19:06.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:06.227" endtime="20201029 18:19:06.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:06.247" endtime="20201029 18:19:06.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.250" endtime="20201029 18:19:06.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.224" endtime="20201029 18:19:06.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.222" endtime="20201029 18:19:06.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.260" endtime="20201029 18:19:06.545"></status>
</kw>
<msg timestamp="20201029 18:19:06.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022353278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022413292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:06.258" endtime="20201029 18:19:06.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022353278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022413292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:06.549" endtime="20201029 18:19:06.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.557" endtime="20201029 18:19:06.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.255" endtime="20201029 18:19:06.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.253" endtime="20201029 18:19:06.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:06.564" level="INFO">${RESULT} = [{'diff': 6.0014000000000595e-05}, {'diff': 5.984699999999829e-05}, {'diff': 5.981899999999915e-05}, {'diff': 5.981899999999915e-05}, {'diff': 6.045899999999882e-05}, {'diff': 5.988900000000047e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:06.561" endtime="20201029 18:19:06.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:06.570" level="INFO">${ACCURACY} = {'diff': [6.0014000000000595e-05, 5.984699999999829e-05, 5.981899999999915e-05, 5.981899999999915e-05, 6.045899999999882e-05, 5.988900000000047e-05, 6.063900000000122e-05, 5.988900000000047e-05, 5.973...</msg>
<status status="PASS" starttime="20201029 18:19:06.565" endtime="20201029 18:19:06.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.574" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 18:19:06.573" endtime="20201029 18:19:06.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.577" level="INFO">VALUE: [6.0014000000000595e-05, 5.984699999999829e-05, 5.981899999999915e-05, 5.981899999999915e-05, 6.045899999999882e-05, 5.988900000000047e-05, 6.063900000000122e-05, 5.988900000000047e-05, 5.9735999999997735e-05, 6.06949999999995e-05, 5.9749999999997305e-05, 6.0485999999998485e-05, 6.0069999999998874e-05, 6.0264000000000845e-05, 6.0429999999996736e-05, 6.0014000000000595e-05, 6.0278000000000415e-05, 6.0735999999998735e-05, 5.9972000000001885e-05, 6.0721999999999166e-05, 6.061099999999861e-05, 6.063900000000122e-05, 6.00689999999994e-05, 6.041700000000011e-05, 6.0569999999999374e-05, 6.072299999999864e-05, 6.0278000000000415e-05, 6.061099999999861e-05, 6.047300000000186e-05, 5.972299999999764e-05, 5.986099999999786e-05, 6.0764000000001345e-05, 6.059699999999904e-05, 6.012500000000115e-05, 6.015300000000029e-05, 5.9943999999999276e-05, 6.0570000000002844e-05, 6.069500000000297e-05, 5.995899999999832e-05, 6.0555999999999804e-05, 6.0499999999998055e-05, 6.0041999999999734e-05, 6.0430000000000206e-05, 6.037499999999793e-05, 6.0221999999998665e-05, 6.005499999999983e-05, 6.0250000000001275e-05, 6.058299999999947e-05, 6.05689999999999e-05, 6.0193999999999526e-05]</msg>
<status status="PASS" starttime="20201029 18:19:06.575" endtime="20201029 18:19:06.578"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.570" endtime="20201029 18:19:06.578"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:06.582" endtime="20201029 18:19:06.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.580" endtime="20201029 18:19:06.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.579" endtime="20201029 18:19:06.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.221" endtime="20201029 18:19:06.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.220" endtime="20201029 18:19:06.603"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.612" endtime="20201029 18:19:06.631"></status>
</kw>
<msg timestamp="20201029 18:19:06.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:06.610" endtime="20201029 18:19:06.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:06.632" endtime="20201029 18:19:06.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.635" endtime="20201029 18:19:06.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.608" endtime="20201029 18:19:06.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.605" endtime="20201029 18:19:06.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.644" endtime="20201029 18:19:06.932"></status>
</kw>
<msg timestamp="20201029 18:19:06.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022597736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022659208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:06.643" endtime="20201029 18:19:06.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022597736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022659208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:06.936" endtime="20201029 18:19:06.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.945" endtime="20201029 18:19:06.946"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.640" endtime="20201029 18:19:06.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.638" endtime="20201029 18:19:06.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:06.951" level="INFO">${RESULT} = [{'diff': 6.147199999999992e-05}, {'diff': 6.0750000000001775e-05}, {'diff': 6.079100000000101e-05}, {'diff': 6.13750000000024e-05}, {'diff': 6.136100000000283e-05}, {'diff': 6.108399999999944e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:06.948" endtime="20201029 18:19:06.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:06.956" level="INFO">${ACCURACY} = {'diff': [6.147199999999992e-05, 6.0750000000001775e-05, 6.079100000000101e-05, 6.13750000000024e-05, 6.136100000000283e-05, 6.108399999999944e-05, 6.125000000000227e-05, 6.143100000000068e-05, 6.1222...</msg>
<status status="PASS" starttime="20201029 18:19:06.952" endtime="20201029 18:19:06.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.960" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 18:19:06.959" endtime="20201029 18:19:06.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.963" level="INFO">VALUE: [6.147199999999992e-05, 6.0750000000001775e-05, 6.079100000000101e-05, 6.13750000000024e-05, 6.136100000000283e-05, 6.108399999999944e-05, 6.125000000000227e-05, 6.143100000000068e-05, 6.122299999999914e-05, 6.141600000000164e-05, 6.1582999999997e-05, 6.0888000000001996e-05, 6.113899999999825e-05, 6.122199999999967e-05, 6.161099999999961e-05, 6.157000000000037e-05, 6.0888999999998e-05, 6.116700000000086e-05, 6.090299999999757e-05, 6.145800000000035e-05, 6.0819999999999624e-05, 6.0721999999999166e-05, 6.0999999999998555e-05, 6.10560000000003e-05, 6.163899999999875e-05, 6.129200000000098e-05, 6.10690000000004e-05, 6.161099999999961e-05, 6.08750000000019e-05, 6.0986000000002455e-05, 6.087499999999843e-05, 6.116699999999739e-05, 6.165299999999832e-05, 6.104200000000073e-05, 6.1013999999998125e-05, 6.10560000000003e-05, 6.083299999999972e-05, 6.126399999999838e-05, 6.105500000000083e-05, 6.125000000000227e-05, 6.159700000000004e-05, 6.133300000000022e-05, 6.090299999999757e-05, 6.166699999999789e-05, 6.104199999999727e-05, 6.0735999999998735e-05, 6.0986000000002455e-05, 6.088900000000147e-05, 6.145900000000329e-05, 6.0791999999997015e-05]</msg>
<status status="PASS" starttime="20201029 18:19:06.961" endtime="20201029 18:19:06.964"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.957" endtime="20201029 18:19:06.964"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:06.968" endtime="20201029 18:19:06.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.967" endtime="20201029 18:19:06.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.965" endtime="20201029 18:19:06.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.604" endtime="20201029 18:19:06.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.603" endtime="20201029 18:19:06.989"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.998" endtime="20201029 18:19:07.017"></status>
</kw>
<msg timestamp="20201029 18:19:07.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:06.996" endtime="20201029 18:19:07.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:07.019" endtime="20201029 18:19:07.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.022" endtime="20201029 18:19:07.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.994" endtime="20201029 18:19:07.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.991" endtime="20201029 18:19:07.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.033" endtime="20201029 18:19:07.320"></status>
</kw>
<msg timestamp="20201029 18:19:07.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023522014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023583875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:07.030" endtime="20201029 18:19:07.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023522014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023583875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:07.324" endtime="20201029 18:19:07.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.333" endtime="20201029 18:19:07.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.027" endtime="20201029 18:19:07.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.025" endtime="20201029 18:19:07.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:07.340" level="INFO">${RESULT} = [{'diff': 6.186099999999986e-05}, {'diff': 6.187499999999943e-05}, {'diff': 6.248599999999702e-05}, {'diff': 6.202800000000216e-05}, {'diff': 6.247300000000039e-05}, {'diff': 6.170900000000007e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:07.337" endtime="20201029 18:19:07.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:07.344" level="INFO">${ACCURACY} = {'diff': [6.186099999999986e-05, 6.187499999999943e-05, 6.248599999999702e-05, 6.202800000000216e-05, 6.247300000000039e-05, 6.170900000000007e-05, 6.265300000000279e-05, 6.186100000000333e-05, 6.2361...</msg>
<status status="PASS" starttime="20201029 18:19:07.341" endtime="20201029 18:19:07.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.349" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 18:19:07.348" endtime="20201029 18:19:07.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.352" level="INFO">VALUE: [6.186099999999986e-05, 6.187499999999943e-05, 6.248599999999702e-05, 6.202800000000216e-05, 6.247300000000039e-05, 6.170900000000007e-05, 6.265300000000279e-05, 6.186100000000333e-05, 6.236199999999983e-05, 6.237499999999993e-05, 6.222200000000067e-05, 6.259700000000104e-05, 6.237499999999993e-05, 6.240299999999907e-05, 6.195900000000032e-05, 6.248600000000049e-05, 6.245900000000082e-05, 6.220900000000057e-05, 6.265299999999932e-05, 6.251300000000015e-05, 6.247199999999745e-05, 6.247200000000092e-05, 6.18750000000029e-05, 6.212499999999968e-05, 6.261100000000061e-05, 6.223600000000024e-05, 6.247199999999745e-05, 6.261100000000061e-05, 6.209700000000054e-05, 6.20279999999987e-05, 6.231999999999766e-05, 6.272300000000064e-05, 6.223699999999971e-05, 6.250000000000006e-05, 6.230500000000208e-05, 6.205499999999836e-05, 6.265299999999932e-05, 6.231899999999818e-05, 6.190299999999857e-05, 6.258300000000147e-05, 6.229199999999852e-05, 6.209800000000001e-05, 6.240299999999907e-05, 6.199999999999956e-05, 6.180599999999759e-05, 6.17499999999993e-05, 6.241599999999917e-05, 6.20560000000013e-05, 6.248600000000049e-05, 6.19439999999978e-05]</msg>
<status status="PASS" starttime="20201029 18:19:07.350" endtime="20201029 18:19:07.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.345" endtime="20201029 18:19:07.354"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:07.358" endtime="20201029 18:19:07.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.356" endtime="20201029 18:19:07.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.355" endtime="20201029 18:19:07.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.990" endtime="20201029 18:19:07.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.989" endtime="20201029 18:19:07.379"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.388" endtime="20201029 18:19:07.405"></status>
</kw>
<msg timestamp="20201029 18:19:07.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:07.386" endtime="20201029 18:19:07.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:07.407" endtime="20201029 18:19:07.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.409" endtime="20201029 18:19:07.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.383" endtime="20201029 18:19:07.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.381" endtime="20201029 18:19:07.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.419" endtime="20201029 18:19:07.706"></status>
</kw>
<msg timestamp="20201029 18:19:07.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022527458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022590444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:07.417" endtime="20201029 18:19:07.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022527458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022590444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:07.710" endtime="20201029 18:19:07.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.718" endtime="20201029 18:19:07.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.414" endtime="20201029 18:19:07.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.413" endtime="20201029 18:19:07.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:07.725" level="INFO">${RESULT} = [{'diff': 6.298600000000099e-05}, {'diff': 6.351400000000063e-05}, {'diff': 6.32219999999982e-05}, {'diff': 6.366600000000042e-05}, {'diff': 6.334699999999832e-05}, {'diff': 6.370799999999913e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:07.722" endtime="20201029 18:19:07.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:07.731" level="INFO">${ACCURACY} = {'diff': [6.298600000000099e-05, 6.351400000000063e-05, 6.32219999999982e-05, 6.366600000000042e-05, 6.334699999999832e-05, 6.370799999999913e-05, 6.276399999999988e-05, 6.32080000000021e-05, 6.279199...</msg>
<status status="PASS" starttime="20201029 18:19:07.726" endtime="20201029 18:19:07.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.736" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 18:19:07.735" endtime="20201029 18:19:07.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.739" level="INFO">VALUE: [6.298600000000099e-05, 6.351400000000063e-05, 6.32219999999982e-05, 6.366600000000042e-05, 6.334699999999832e-05, 6.370799999999913e-05, 6.276399999999988e-05, 6.32080000000021e-05, 6.279199999999902e-05, 6.365300000000032e-05, 6.365300000000032e-05, 6.294499999999828e-05, 6.350000000000106e-05, 6.277799999999945e-05, 6.331899999999918e-05, 6.37219999999987e-05, 6.27500000000003e-05, 6.32219999999982e-05, 6.330499999999961e-05, 6.370799999999913e-05, 6.356899999999943e-05, 6.3582999999999e-05, 6.340300000000007e-05, 6.30560000000023e-05, 6.348700000000096e-05, 6.291600000000314e-05, 6.306899999999893e-05, 6.311200000000058e-05, 6.306899999999893e-05, 6.315299999999982e-05, 6.323600000000124e-05, 6.366699999999989e-05, 6.331899999999918e-05, 6.291700000000261e-05, 6.2889e-05, 6.295800000000185e-05, 6.307000000000187e-05, 6.362500000000118e-05, 6.290299999999957e-05, 6.320900000000157e-05, 6.298599999999752e-05, 6.323600000000124e-05, 6.316599999999992e-05, 6.283300000000172e-05, 6.32219999999982e-05, 6.300000000000056e-05, 6.32500000000008e-05, 6.298600000000099e-05, 6.341699999999964e-05, 6.357000000000237e-05]</msg>
<status status="PASS" starttime="20201029 18:19:07.737" endtime="20201029 18:19:07.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.732" endtime="20201029 18:19:07.740"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:07.744" endtime="20201029 18:19:07.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.742" endtime="20201029 18:19:07.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.741" endtime="20201029 18:19:07.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.379" endtime="20201029 18:19:07.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.379" endtime="20201029 18:19:07.765"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.774" endtime="20201029 18:19:07.791"></status>
</kw>
<msg timestamp="20201029 18:19:07.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:07.772" endtime="20201029 18:19:07.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:07.793" endtime="20201029 18:19:07.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.796" endtime="20201029 18:19:07.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.769" endtime="20201029 18:19:07.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.767" endtime="20201029 18:19:07.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.805" endtime="20201029 18:19:08.093"></status>
</kw>
<msg timestamp="20201029 18:19:08.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02242, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022484528, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:19:07.804" endtime="20201029 18:19:08.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02242, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022484528, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:19:08.097" endtime="20201029 18:19:08.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.106" endtime="20201029 18:19:08.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.801" endtime="20201029 18:19:08.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.799" endtime="20201029 18:19:08.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:08.113" level="INFO">${RESULT} = [{'diff': 6.45280000000012e-05}, {'diff': 6.411099999999864e-05}, {'diff': 6.454099999999782e-05}, {'diff': 6.393000000000024e-05}, {'diff': 6.44020000000016e-05}, {'diff': 6.379200000000002e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:08.110" endtime="20201029 18:19:08.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:08.117" level="INFO">${ACCURACY} = {'diff': [6.45280000000012e-05, 6.411099999999864e-05, 6.454099999999782e-05, 6.393000000000024e-05, 6.44020000000016e-05, 6.379200000000002e-05, 6.379100000000054e-05, 6.434699999999932e-05, 6.420799...</msg>
<status status="PASS" starttime="20201029 18:19:08.114" endtime="20201029 18:19:08.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.122" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 18:19:08.121" endtime="20201029 18:19:08.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.124" level="INFO">VALUE: [6.45280000000012e-05, 6.411099999999864e-05, 6.454099999999782e-05, 6.393000000000024e-05, 6.44020000000016e-05, 6.379200000000002e-05, 6.379100000000054e-05, 6.434699999999932e-05, 6.420799999999963e-05, 6.377800000000045e-05, 6.398600000000199e-05, 6.433299999999975e-05, 6.408399999999898e-05, 6.388899999999753e-05, 6.3889000000001e-05, 6.40699999999994e-05, 6.454200000000077e-05, 6.415299999999735e-05, 6.42639999999979e-05, 6.380500000000011e-05, 6.397199999999895e-05, 6.448599999999902e-05, 6.454100000000129e-05, 6.466700000000089e-05, 6.412500000000168e-05, 6.384699999999882e-05, 6.409699999999907e-05, 6.379100000000054e-05, 6.423699999999824e-05, 6.379100000000054e-05, 6.397199999999895e-05, 6.463900000000175e-05, 6.40829999999995e-05, 6.42500000000018e-05, 6.44440000000003e-05, 6.411099999999864e-05, 6.393000000000024e-05, 6.416699999999692e-05, 6.43890000000015e-05, 6.415300000000082e-05, 6.423599999999877e-05, 6.447300000000239e-05, 6.474999999999884e-05, 6.423700000000171e-05, 6.394499999999928e-05, 6.398599999999852e-05, 6.401400000000113e-05, 6.393000000000024e-05, 6.465299999999785e-05, 6.412500000000168e-05]</msg>
<status status="PASS" starttime="20201029 18:19:08.123" endtime="20201029 18:19:08.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.118" endtime="20201029 18:19:08.126"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:08.131" endtime="20201029 18:19:08.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.129" endtime="20201029 18:19:08.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.127" endtime="20201029 18:19:08.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.766" endtime="20201029 18:19:08.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.765" endtime="20201029 18:19:08.151"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.161" endtime="20201029 18:19:08.179"></status>
</kw>
<msg timestamp="20201029 18:19:08.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.159" endtime="20201029 18:19:08.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.181" endtime="20201029 18:19:08.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.184" endtime="20201029 18:19:08.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.156" endtime="20201029 18:19:08.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.154" endtime="20201029 18:19:08.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.193" endtime="20201029 18:19:08.479"></status>
</kw>
<msg timestamp="20201029 18:19:08.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023697931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023763458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.191" endtime="20201029 18:19:08.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023697931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023763458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.484" endtime="20201029 18:19:08.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.492" endtime="20201029 18:19:08.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.189" endtime="20201029 18:19:08.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.187" endtime="20201029 18:19:08.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:08.499" level="INFO">${RESULT} = [{'diff': 6.552700000000272e-05}, {'diff': 6.50830000000005e-05}, {'diff': 6.526400000000238e-05}, {'diff': 6.570799999999766e-05}, {'diff': 6.548600000000002e-05}, {'diff': 6.481900000000068e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:08.496" endtime="20201029 18:19:08.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:08.503" level="INFO">${ACCURACY} = {'diff': [6.552700000000272e-05, 6.50830000000005e-05, 6.526400000000238e-05, 6.570799999999766e-05, 6.548600000000002e-05, 6.481900000000068e-05, 6.513799999999931e-05, 6.555600000000134e-05, 6.52920...</msg>
<status status="PASS" starttime="20201029 18:19:08.500" endtime="20201029 18:19:08.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.508" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 18:19:08.507" endtime="20201029 18:19:08.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.510" level="INFO">VALUE: [6.552700000000272e-05, 6.50830000000005e-05, 6.526400000000238e-05, 6.570799999999766e-05, 6.548600000000002e-05, 6.481900000000068e-05, 6.513799999999931e-05, 6.555600000000134e-05, 6.529200000000152e-05, 6.526299999999943e-05, 6.481900000000068e-05, 6.574999999999984e-05, 6.568000000000199e-05, 6.533300000000075e-05, 6.497199999999995e-05, 6.530500000000161e-05, 6.541700000000164e-05, 6.547200000000045e-05, 6.52639999999989e-05, 6.495899999999985e-05, 6.509700000000007e-05, 6.545800000000088e-05, 6.524999999999934e-05, 6.559700000000057e-05, 6.509700000000007e-05, 6.552700000000272e-05, 6.529099999999857e-05, 6.493000000000124e-05, 6.554099999999882e-05, 6.515299999999835e-05, 6.481900000000068e-05, 6.529200000000152e-05, 6.479200000000102e-05, 6.54029999999986e-05, 6.495800000000038e-05, 6.565299999999885e-05, 6.570899999999713e-05, 6.536099999999989e-05, 6.52639999999989e-05, 6.545799999999741e-05, 6.50830000000005e-05, 6.487499999999896e-05, 6.495899999999985e-05, 6.505599999999737e-05, 6.523599999999977e-05, 6.55700000000009e-05, 6.545900000000035e-05, 6.55419999999983e-05, 6.500000000000256e-05, 6.498600000000299e-05]</msg>
<status status="PASS" starttime="20201029 18:19:08.509" endtime="20201029 18:19:08.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.504" endtime="20201029 18:19:08.513"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:08.517" endtime="20201029 18:19:08.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.515" endtime="20201029 18:19:08.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.514" endtime="20201029 18:19:08.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.152" endtime="20201029 18:19:08.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.152" endtime="20201029 18:19:08.537"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.546" endtime="20201029 18:19:08.565"></status>
</kw>
<msg timestamp="20201029 18:19:08.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.545" endtime="20201029 18:19:08.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.566" endtime="20201029 18:19:08.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.569" endtime="20201029 18:19:08.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.542" endtime="20201029 18:19:08.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.540" endtime="20201029 18:19:08.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.578" endtime="20201029 18:19:08.864"></status>
</kw>
<msg timestamp="20201029 18:19:08.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022458903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022525597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.577" endtime="20201029 18:19:08.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022458903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022525597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.868" endtime="20201029 18:19:08.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.877" endtime="20201029 18:19:08.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.574" endtime="20201029 18:19:08.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.572" endtime="20201029 18:19:08.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:08.884" level="INFO">${RESULT} = [{'diff': 6.669400000000256e-05}, {'diff': 6.676399999999694e-05}, {'diff': 6.598600000000052e-05}, {'diff': 6.579199999999855e-05}, {'diff': 6.594499999999781e-05}, {'diff': 6.586100000000039e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:08.880" endtime="20201029 18:19:08.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:08.891" level="INFO">${ACCURACY} = {'diff': [6.669400000000256e-05, 6.676399999999694e-05, 6.598600000000052e-05, 6.579199999999855e-05, 6.594499999999781e-05, 6.586100000000039e-05, 6.656899999999896e-05, 6.597200000000095e-05, 6.6665...</msg>
<status status="PASS" starttime="20201029 18:19:08.885" endtime="20201029 18:19:08.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.896" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 18:19:08.895" endtime="20201029 18:19:08.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.899" level="INFO">VALUE: [6.669400000000256e-05, 6.676399999999694e-05, 6.598600000000052e-05, 6.579199999999855e-05, 6.594499999999781e-05, 6.586100000000039e-05, 6.656899999999896e-05, 6.597200000000095e-05, 6.666599999999995e-05, 6.655599999999887e-05, 6.637500000000046e-05, 6.632000000000166e-05, 6.569500000000103e-05, 6.573600000000027e-05, 6.594399999999834e-05, 6.644399999999884e-05, 6.625000000000034e-05, 6.582000000000116e-05, 6.602799999999923e-05, 6.641699999999917e-05, 6.651400000000016e-05, 6.641699999999917e-05, 6.620800000000163e-05, 6.609800000000055e-05, 6.613899999999978e-05, 6.637500000000046e-05, 6.666599999999995e-05, 6.673600000000127e-05, 6.630499999999914e-05, 6.630500000000261e-05, 6.590300000000257e-05, 6.574999999999984e-05, 6.570800000000113e-05, 6.655599999999887e-05, 6.582000000000116e-05, 6.605599999999837e-05, 6.6277e-05, 6.629200000000252e-05, 6.658299999999853e-05, 6.597200000000095e-05, 6.600000000000009e-05, 6.608299999999803e-05, 6.605499999999889e-05, 6.6583000000002e-05, 6.645800000000188e-05, 6.641700000000264e-05, 6.616599999999945e-05, 6.62639999999999e-05, 6.591699999999867e-05, 6.638900000000003e-05]</msg>
<status status="PASS" starttime="20201029 18:19:08.897" endtime="20201029 18:19:08.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.892" endtime="20201029 18:19:08.900"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:08.904" endtime="20201029 18:19:08.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.902" endtime="20201029 18:19:08.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.901" endtime="20201029 18:19:08.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.538" endtime="20201029 18:19:08.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.538" endtime="20201029 18:19:08.925"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.935" endtime="20201029 18:19:08.953"></status>
</kw>
<msg timestamp="20201029 18:19:08.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.933" endtime="20201029 18:19:08.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.954" endtime="20201029 18:19:08.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.957" endtime="20201029 18:19:08.959"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.930" endtime="20201029 18:19:08.959"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.927" endtime="20201029 18:19:08.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.966" endtime="20201029 18:19:09.253"></status>
</kw>
<msg timestamp="20201029 18:19:09.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023939778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024007125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.965" endtime="20201029 18:19:09.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023939778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024007125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:09.257" endtime="20201029 18:19:09.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.266" endtime="20201029 18:19:09.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.962" endtime="20201029 18:19:09.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.960" endtime="20201029 18:19:09.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:09.273" level="INFO">${RESULT} = [{'diff': 6.734700000000232e-05}, {'diff': 6.694500000000228e-05}, {'diff': 6.743099999999974e-05}, {'diff': 6.687499999999749e-05}, {'diff': 6.69030000000001e-05}, {'diff': 6.740200000000113e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:09.269" endtime="20201029 18:19:09.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:09.277" level="INFO">${ACCURACY} = {'diff': [6.734700000000232e-05, 6.694500000000228e-05, 6.743099999999974e-05, 6.687499999999749e-05, 6.69030000000001e-05, 6.740200000000113e-05, 6.755500000000039e-05, 6.772199999999923e-05, 6.67770...</msg>
<status status="PASS" starttime="20201029 18:19:09.274" endtime="20201029 18:19:09.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.281" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 18:19:09.280" endtime="20201029 18:19:09.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.284" level="INFO">VALUE: [6.734700000000232e-05, 6.694500000000228e-05, 6.743099999999974e-05, 6.687499999999749e-05, 6.69030000000001e-05, 6.740200000000113e-05, 6.755500000000039e-05, 6.772199999999923e-05, 6.67770000000005e-05, 6.705499999999989e-05, 6.756899999999996e-05, 6.695800000000238e-05, 6.773600000000227e-05, 6.730599999999962e-05, 6.681999999999869e-05, 6.756999999999944e-05, 6.773600000000227e-05, 6.712500000000121e-05, 6.687499999999749e-05, 6.748700000000149e-05, 6.74160000000007e-05, 6.705499999999989e-05, 6.672199999999823e-05, 6.730500000000014e-05, 6.699999999999762e-05, 6.744399999999984e-05, 6.698599999999805e-05, 6.720800000000263e-05, 6.673600000000127e-05, 6.701300000000118e-05, 6.730500000000014e-05, 6.745800000000288e-05, 6.745800000000288e-05, 6.715200000000088e-05, 6.762500000000171e-05, 6.74030000000006e-05, 6.702800000000023e-05, 6.69030000000001e-05, 6.67359999999978e-05, 6.730599999999962e-05, 6.704100000000032e-05, 6.765200000000138e-05, 6.683399999999826e-05, 6.706899999999946e-05, 6.672300000000117e-05, 6.748600000000202e-05, 6.725000000000134e-05, 6.74030000000006e-05, 6.720800000000263e-05, 6.688900000000053e-05]</msg>
<status status="PASS" starttime="20201029 18:19:09.283" endtime="20201029 18:19:09.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.278" endtime="20201029 18:19:09.286"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:09.289" endtime="20201029 18:19:09.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.288" endtime="20201029 18:19:09.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.286" endtime="20201029 18:19:09.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.926" endtime="20201029 18:19:09.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.925" endtime="20201029 18:19:09.310"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.319" endtime="20201029 18:19:09.339"></status>
</kw>
<msg timestamp="20201029 18:19:09.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:09.318" endtime="20201029 18:19:09.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:09.341" endtime="20201029 18:19:09.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.343" endtime="20201029 18:19:09.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.315" endtime="20201029 18:19:09.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.313" endtime="20201029 18:19:09.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.353" endtime="20201029 18:19:09.640"></status>
</kw>
<msg timestamp="20201029 18:19:09.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023842681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023911014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:09.351" endtime="20201029 18:19:09.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023842681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023911014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:09.644" endtime="20201029 18:19:09.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.652" endtime="20201029 18:19:09.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.348" endtime="20201029 18:19:09.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.347" endtime="20201029 18:19:09.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:09.659" level="INFO">${RESULT} = [{'diff': 6.833300000000028e-05}, {'diff': 6.833399999999976e-05}, {'diff': 6.798599999999905e-05}, {'diff': 6.873699999999927e-05}, {'diff': 6.87359999999998e-05}, {'diff': 6.83619999999989e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:09.656" endtime="20201029 18:19:09.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:09.664" level="INFO">${ACCURACY} = {'diff': [6.833300000000028e-05, 6.833399999999976e-05, 6.798599999999905e-05, 6.873699999999927e-05, 6.87359999999998e-05, 6.83619999999989e-05, 6.790199999999816e-05, 6.801399999999819e-05, 6.804100...</msg>
<status status="PASS" starttime="20201029 18:19:09.660" endtime="20201029 18:19:09.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.668" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 18:19:09.667" endtime="20201029 18:19:09.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.671" level="INFO">VALUE: [6.833300000000028e-05, 6.833399999999976e-05, 6.798599999999905e-05, 6.873699999999927e-05, 6.87359999999998e-05, 6.83619999999989e-05, 6.790199999999816e-05, 6.801399999999819e-05, 6.804100000000132e-05, 6.784699999999935e-05, 6.822199999999973e-05, 6.823600000000277e-05, 6.806899999999699e-05, 6.822199999999973e-05, 6.82359999999993e-05, 6.859799999999958e-05, 6.819500000000006e-05, 6.779200000000055e-05, 6.780500000000064e-05, 6.806900000000046e-05, 6.858300000000053e-05, 6.781900000000021e-05, 6.813900000000178e-05, 6.786099999999892e-05, 6.862499999999924e-05, 6.813899999999831e-05, 6.794499999999981e-05, 6.80839999999995e-05, 6.823600000000277e-05, 6.822300000000267e-05, 6.845800000000041e-05, 6.837499999999899e-05, 6.856899999999749e-05, 6.79030000000011e-05, 6.847199999999998e-05, 6.815300000000135e-05, 6.806999999999994e-05, 6.848599999999955e-05, 6.819500000000006e-05, 6.795899999999938e-05, 6.774999999999837e-05, 6.863899999999881e-05, 6.834699999999985e-05, 6.79030000000011e-05, 6.856900000000096e-05, 6.784699999999935e-05, 6.815299999999788e-05, 6.858299999999706e-05, 6.87359999999998e-05, 6.857000000000044e-05]</msg>
<status status="PASS" starttime="20201029 18:19:09.669" endtime="20201029 18:19:09.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.664" endtime="20201029 18:19:09.677"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:09.681" endtime="20201029 18:19:09.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.679" endtime="20201029 18:19:09.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.678" endtime="20201029 18:19:09.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.311" endtime="20201029 18:19:09.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.310" endtime="20201029 18:19:09.701"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.710" endtime="20201029 18:19:09.730"></status>
</kw>
<msg timestamp="20201029 18:19:09.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:09.709" endtime="20201029 18:19:09.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:09.732" endtime="20201029 18:19:09.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.734" endtime="20201029 18:19:09.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.706" endtime="20201029 18:19:09.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.704" endtime="20201029 18:19:09.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.744" endtime="20201029 18:19:10.030"></status>
</kw>
<msg timestamp="20201029 18:19:10.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022522514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022591708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:09.742" endtime="20201029 18:19:10.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022522514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022591708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:10.034" endtime="20201029 18:19:10.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.043" endtime="20201029 18:19:10.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.739" endtime="20201029 18:19:10.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.738" endtime="20201029 18:19:10.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:10.049" level="INFO">${RESULT} = [{'diff': 6.919399999999812e-05}, {'diff': 6.895799999999744e-05}, {'diff': 6.940199999999966e-05}, {'diff': 6.893100000000124e-05}, {'diff': 6.897199999999701e-05}, {'diff': 6.890299999999863e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:10.046" endtime="20201029 18:19:10.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:10.054" level="INFO">${ACCURACY} = {'diff': [6.919399999999812e-05, 6.895799999999744e-05, 6.940199999999966e-05, 6.893100000000124e-05, 6.897199999999701e-05, 6.890299999999863e-05, 6.899999999999962e-05, 6.890299999999863e-05, 6.8987...</msg>
<status status="PASS" starttime="20201029 18:19:10.050" endtime="20201029 18:19:10.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.059" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 18:19:10.058" endtime="20201029 18:19:10.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.062" level="INFO">VALUE: [6.919399999999812e-05, 6.895799999999744e-05, 6.940199999999966e-05, 6.893100000000124e-05, 6.897199999999701e-05, 6.890299999999863e-05, 6.899999999999962e-05, 6.890299999999863e-05, 6.898700000000299e-05, 6.95970000000011e-05, 6.904199999999833e-05, 6.879199999999808e-05, 6.95970000000011e-05, 6.955499999999892e-05, 6.924999999999987e-05, 6.899999999999962e-05, 6.915299999999888e-05, 6.888899999999906e-05, 6.90970000000006e-05, 6.959800000000058e-05, 6.905600000000137e-05, 6.962500000000024e-05, 6.895900000000038e-05, 6.923699999999977e-05, 6.909699999999713e-05, 6.899999999999962e-05, 6.959699999999763e-05, 6.932000000000119e-05, 6.954199999999883e-05, 6.917999999999855e-05, 6.899999999999962e-05, 6.938899999999956e-05, 6.874999999999937e-05, 6.945899999999741e-05, 6.906900000000146e-05, 6.913799999999984e-05, 6.94160000000027e-05, 6.945800000000141e-05, 6.922200000000073e-05, 6.948600000000055e-05, 6.951399999999969e-05, 6.932000000000119e-05, 6.970799999999819e-05, 6.938899999999956e-05, 6.90559999999979e-05, 6.918099999999802e-05, 6.89299999999983e-05, 6.912499999999974e-05, 6.938899999999956e-05, 6.875000000000284e-05]</msg>
<status status="PASS" starttime="20201029 18:19:10.060" endtime="20201029 18:19:10.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.055" endtime="20201029 18:19:10.064"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:10.068" endtime="20201029 18:19:10.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.066" endtime="20201029 18:19:10.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.065" endtime="20201029 18:19:10.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.702" endtime="20201029 18:19:10.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.702" endtime="20201029 18:19:10.089"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.098" endtime="20201029 18:19:10.116"></status>
</kw>
<msg timestamp="20201029 18:19:10.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:10.096" endtime="20201029 18:19:10.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:10.118" endtime="20201029 18:19:10.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.120" endtime="20201029 18:19:10.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.094" endtime="20201029 18:19:10.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.091" endtime="20201029 18:19:10.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.131" endtime="20201029 18:19:10.418"></status>
</kw>
<msg timestamp="20201029 18:19:10.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022536306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022606486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:10.129" endtime="20201029 18:19:10.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022536306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022606486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:10.422" endtime="20201029 18:19:10.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.431" endtime="20201029 18:19:10.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.125" endtime="20201029 18:19:10.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.124" endtime="20201029 18:19:10.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:10.437" level="INFO">${RESULT} = [{'diff': 7.017999999999955e-05}, {'diff': 7.040300000000013e-05}, {'diff': 7.05689999999995e-05}, {'diff': 7.027800000000001e-05}, {'diff': 7.058399999999854e-05}, {'diff': 7.004199999999933e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:10.434" endtime="20201029 18:19:10.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:10.442" level="INFO">${ACCURACY} = {'diff': [7.017999999999955e-05, 7.040300000000013e-05, 7.05689999999995e-05, 7.027800000000001e-05, 7.058399999999854e-05, 7.004199999999933e-05, 7.012500000000074e-05, 7.02360000000013e-05, 7.033299...</msg>
<status status="PASS" starttime="20201029 18:19:10.438" endtime="20201029 18:19:10.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.446" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 18:19:10.445" endtime="20201029 18:19:10.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.449" level="INFO">VALUE: [7.017999999999955e-05, 7.040300000000013e-05, 7.05689999999995e-05, 7.027800000000001e-05, 7.058399999999854e-05, 7.004199999999933e-05, 7.012500000000074e-05, 7.02360000000013e-05, 7.033299999999881e-05, 6.990200000000016e-05, 7.038900000000056e-05, 7.063899999999734e-05, 7.030599999999915e-05, 6.990299999999963e-05, 6.99169999999992e-05, 7.070799999999919e-05, 7.027800000000001e-05, 7.016700000000292e-05, 7.073599999999833e-05, 7.041700000000317e-05, 7.00559999999989e-05, 6.997199999999801e-05, 7.01109999999977e-05, 7.000000000000062e-05, 6.966699999999895e-05, 7.040300000000013e-05, 6.975000000000037e-05, 7.037500000000099e-05, 7.034799999999786e-05, 7.020800000000216e-05, 7.048599999999808e-05, 7.05689999999995e-05, 6.990200000000016e-05, 6.977799999999951e-05, 6.998600000000105e-05, 7.02360000000013e-05, 7.020899999999816e-05, 6.990299999999963e-05, 7.040300000000013e-05, 7.004199999999933e-05, 6.975000000000037e-05, 7.020800000000216e-05, 7.047300000000145e-05, 7.007000000000194e-05, 6.997200000000148e-05, 7.017999999999955e-05, 7.01109999999977e-05, 7.013900000000031e-05, 7.006899999999899e-05, 6.983399999999779e-05]</msg>
<status status="PASS" starttime="20201029 18:19:10.447" endtime="20201029 18:19:10.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.443" endtime="20201029 18:19:10.450"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:10.454" endtime="20201029 18:19:10.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.452" endtime="20201029 18:19:10.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.451" endtime="20201029 18:19:10.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.090" endtime="20201029 18:19:10.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.089" endtime="20201029 18:19:10.475"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.484" endtime="20201029 18:19:10.504"></status>
</kw>
<msg timestamp="20201029 18:19:10.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:10.482" endtime="20201029 18:19:10.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:10.505" endtime="20201029 18:19:10.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.508" endtime="20201029 18:19:10.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.480" endtime="20201029 18:19:10.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.477" endtime="20201029 18:19:10.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.517" endtime="20201029 18:19:10.804"></status>
</kw>
<msg timestamp="20201029 18:19:10.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023328819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023400181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:10.516" endtime="20201029 18:19:10.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023328819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023400181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:10.808" endtime="20201029 18:19:10.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.817" endtime="20201029 18:19:10.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.513" endtime="20201029 18:19:10.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.511" endtime="20201029 18:19:10.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:10.824" level="INFO">${RESULT} = [{'diff': 7.136199999999843e-05}, {'diff': 7.104100000000085e-05}, {'diff': 7.091600000000073e-05}, {'diff': 7.169400000000062e-05}, {'diff': 7.138899999999809e-05}, {'diff': 7.081899999999974e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:10.820" endtime="20201029 18:19:10.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:10.828" level="INFO">${ACCURACY} = {'diff': [7.136199999999843e-05, 7.104100000000085e-05, 7.091600000000073e-05, 7.169400000000062e-05, 7.138899999999809e-05, 7.081899999999974e-05, 7.137500000000199e-05, 7.172199999999976e-05, 7.1083...</msg>
<status status="PASS" starttime="20201029 18:19:10.825" endtime="20201029 18:19:10.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.833" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 18:19:10.832" endtime="20201029 18:19:10.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.835" level="INFO">VALUE: [7.136199999999843e-05, 7.104100000000085e-05, 7.091600000000073e-05, 7.169400000000062e-05, 7.138899999999809e-05, 7.081899999999974e-05, 7.137500000000199e-05, 7.172199999999976e-05, 7.108300000000303e-05, 7.130600000000015e-05, 7.097200000000248e-05, 7.10840000000025e-05, 7.095799999999944e-05, 7.1069e-05, 7.13620000000019e-05, 7.113800000000184e-05, 7.095799999999944e-05, 7.170800000000019e-05, 7.12360000000023e-05, 7.102800000000076e-05, 7.115300000000088e-05, 7.14170000000007e-05, 7.115300000000088e-05, 7.16109999999992e-05, 7.108399999999904e-05, 7.129200000000058e-05, 7.15970000000031e-05, 7.159699999999963e-05, 7.073599999999833e-05, 7.123599999999883e-05, 7.080599999999965e-05, 7.127799999999754e-05, 7.12360000000023e-05, 7.168000000000105e-05, 7.123599999999883e-05, 7.093099999999977e-05, 7.115300000000088e-05, 7.076300000000146e-05, 7.091600000000073e-05, 7.090199999999769e-05, 7.168000000000105e-05, 7.090300000000063e-05, 7.137500000000199e-05, 7.113900000000131e-05, 7.108299999999956e-05, 7.162500000000224e-05, 7.137500000000199e-05, 7.166599999999801e-05, 7.10970000000026e-05, 7.172199999999976e-05]</msg>
<status status="PASS" starttime="20201029 18:19:10.834" endtime="20201029 18:19:10.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.829" endtime="20201029 18:19:10.838"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:10.841" endtime="20201029 18:19:10.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.840" endtime="20201029 18:19:10.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.839" endtime="20201029 18:19:10.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.476" endtime="20201029 18:19:10.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.475" endtime="20201029 18:19:10.862"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.871" endtime="20201029 18:19:10.890"></status>
</kw>
<msg timestamp="20201029 18:19:10.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:10.870" endtime="20201029 18:19:10.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:10.892" endtime="20201029 18:19:10.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.894" endtime="20201029 18:19:10.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.867" endtime="20201029 18:19:10.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.865" endtime="20201029 18:19:10.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.904" endtime="20201029 18:19:11.192"></status>
</kw>
<msg timestamp="20201029 18:19:11.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022493486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:10.902" endtime="20201029 18:19:11.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022493486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:11.196" endtime="20201029 18:19:11.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.204" endtime="20201029 18:19:11.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.899" endtime="20201029 18:19:11.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.898" endtime="20201029 18:19:11.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:11.211" level="INFO">${RESULT} = [{'diff': 7.198599999999958e-05}, {'diff': 7.219500000000059e-05}, {'diff': 7.244400000000137e-05}, {'diff': 7.19309999999973e-05}, {'diff': 7.254200000000183e-05}, {'diff': 7.247299999999998e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:11.208" endtime="20201029 18:19:11.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:11.216" level="INFO">${ACCURACY} = {'diff': [7.198599999999958e-05, 7.219500000000059e-05, 7.244400000000137e-05, 7.19309999999973e-05, 7.254200000000183e-05, 7.247299999999998e-05, 7.230599999999768e-05, 7.197200000000001e-05, 7.22779...</msg>
<status status="PASS" starttime="20201029 18:19:11.212" endtime="20201029 18:19:11.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.220" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 18:19:11.219" endtime="20201029 18:19:11.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.223" level="INFO">VALUE: [7.198599999999958e-05, 7.219500000000059e-05, 7.244400000000137e-05, 7.19309999999973e-05, 7.254200000000183e-05, 7.247299999999998e-05, 7.230599999999768e-05, 7.197200000000001e-05, 7.227799999999854e-05, 7.226399999999897e-05, 7.21109999999997e-05, 7.231900000000124e-05, 7.22499999999994e-05, 7.21109999999997e-05, 7.241699999999823e-05, 7.208400000000004e-05, 7.205599999999743e-05, 7.187499999999902e-05, 7.192999999999783e-05, 7.25560000000014e-05, 7.212499999999927e-05, 7.233299999999734e-05, 7.256899999999802e-05, 7.231900000000124e-05, 7.216600000000198e-05, 7.236099999999995e-05, 7.194500000000034e-05, 7.26110000000002e-05, 7.211199999999918e-05, 7.22369999999993e-05, 7.21109999999997e-05, 7.188899999999859e-05, 7.240300000000213e-05, 7.183300000000031e-05, 7.215299999999841e-05, 7.197200000000001e-05, 7.251399999999922e-05, 7.195899999999991e-05, 7.272200000000076e-05, 7.177800000000151e-05, 7.227799999999854e-05, 7.238899999999909e-05, 7.230600000000115e-05, 7.22499999999994e-05, 7.263899999999934e-05, 7.192999999999783e-05, 7.19170000000012e-05, 7.255500000000192e-05, 7.183300000000031e-05, 7.229200000000158e-05]</msg>
<status status="PASS" starttime="20201029 18:19:11.221" endtime="20201029 18:19:11.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.217" endtime="20201029 18:19:11.224"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:11.228" endtime="20201029 18:19:11.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.226" endtime="20201029 18:19:11.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.225" endtime="20201029 18:19:11.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.863" endtime="20201029 18:19:11.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.863" endtime="20201029 18:19:11.248"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.257" endtime="20201029 18:19:11.275"></status>
</kw>
<msg timestamp="20201029 18:19:11.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:11.256" endtime="20201029 18:19:11.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:11.276" endtime="20201029 18:19:11.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.279" endtime="20201029 18:19:11.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.253" endtime="20201029 18:19:11.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.251" endtime="20201029 18:19:11.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.288" endtime="20201029 18:19:11.574"></status>
</kw>
<msg timestamp="20201029 18:19:11.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022019653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022093333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:11.286" endtime="20201029 18:19:11.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022019653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022093333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:11.579" endtime="20201029 18:19:11.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.587" endtime="20201029 18:19:11.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.284" endtime="20201029 18:19:11.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.282" endtime="20201029 18:19:11.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:11.593" level="INFO">${RESULT} = [{'diff': 7.367999999999958e-05}, {'diff': 7.323600000000083e-05}, {'diff': 7.287500000000002e-05}, {'diff': 7.309699999999766e-05}, {'diff': 7.366699999999948e-05}, {'diff': 7.345800000000194e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:11.590" endtime="20201029 18:19:11.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:11.598" level="INFO">${ACCURACY} = {'diff': [7.367999999999958e-05, 7.323600000000083e-05, 7.287500000000002e-05, 7.309699999999766e-05, 7.366699999999948e-05, 7.345800000000194e-05, 7.291699999999873e-05, 7.327799999999954e-05, 7.2888...</msg>
<status status="PASS" starttime="20201029 18:19:11.594" endtime="20201029 18:19:11.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.602" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 18:19:11.601" endtime="20201029 18:19:11.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.605" level="INFO">VALUE: [7.367999999999958e-05, 7.323600000000083e-05, 7.287500000000002e-05, 7.309699999999766e-05, 7.366699999999948e-05, 7.345800000000194e-05, 7.291699999999873e-05, 7.327799999999954e-05, 7.288899999999959e-05, 7.307000000000147e-05, 7.305599999999843e-05, 7.35699999999985e-05, 7.363899999999687e-05, 7.327799999999954e-05, 7.288899999999959e-05, 7.290299999999916e-05, 7.355499999999945e-05, 7.300000000000015e-05, 7.329199999999911e-05, 7.298600000000058e-05, 7.313899999999984e-05, 7.28049999999987e-05, 7.288800000000012e-05, 7.29300000000023e-05, 7.3069000000002e-05, 7.370799999999872e-05, 7.329099999999963e-05, 7.331900000000224e-05, 7.309700000000113e-05, 7.358399999999807e-05, 7.313899999999984e-05, 7.362500000000077e-05, 7.358400000000154e-05, 7.297200000000101e-05, 7.362500000000077e-05, 7.32500000000004e-05, 7.354099999999988e-05, 7.277799999999904e-05, 7.324999999999693e-05, 7.288899999999959e-05, 7.302799999999929e-05, 7.323599999999736e-05, 7.372199999999829e-05, 7.36110000000012e-05, 7.308399999999757e-05, 7.354099999999988e-05, 7.295799999999797e-05, 7.340299999999966e-05, 7.355499999999945e-05, 7.329199999999911e-05]</msg>
<status status="PASS" starttime="20201029 18:19:11.603" endtime="20201029 18:19:11.605"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.598" endtime="20201029 18:19:11.606"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:11.610" endtime="20201029 18:19:11.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.608" endtime="20201029 18:19:11.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.607" endtime="20201029 18:19:11.631"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.249" endtime="20201029 18:19:11.631"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.249" endtime="20201029 18:19:11.632"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.650" endtime="20201029 18:19:11.674"></status>
</kw>
<msg timestamp="20201029 18:19:11.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:11.647" endtime="20201029 18:19:11.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:11.677" endtime="20201029 18:19:11.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.682" endtime="20201029 18:19:11.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.641" endtime="20201029 18:19:11.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.637" endtime="20201029 18:19:11.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.701" endtime="20201029 18:19:11.992"></status>
</kw>
<msg timestamp="20201029 18:19:11.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036083667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036158014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:11.698" endtime="20201029 18:19:11.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036083667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036158014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:11.996" endtime="20201029 18:19:12.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.005" endtime="20201029 18:19:12.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.692" endtime="20201029 18:19:12.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.689" endtime="20201029 18:19:12.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:12.011" level="INFO">${RESULT} = [{'diff': 7.434700000000238e-05}, {'diff': 7.390300000000016e-05}, {'diff': 7.373599999999786e-05}, {'diff': 7.445899999999894e-05}, {'diff': 7.443000000000033e-05}, {'diff': 7.480600000000365e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:12.008" endtime="20201029 18:19:12.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:12.015" level="INFO">${ACCURACY} = {'diff': [7.434700000000238e-05, 7.390300000000016e-05, 7.373599999999786e-05, 7.445899999999894e-05, 7.443000000000033e-05, 7.480600000000365e-05, 7.43189999999963e-05, 7.412500000000127e-05, 7.47219...</msg>
<status status="PASS" starttime="20201029 18:19:12.012" endtime="20201029 18:19:12.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.020" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 18:19:12.019" endtime="20201029 18:19:12.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.022" level="INFO">VALUE: [7.434700000000238e-05, 7.390300000000016e-05, 7.373599999999786e-05, 7.445899999999894e-05, 7.443000000000033e-05, 7.480600000000365e-05, 7.43189999999963e-05, 7.412500000000127e-05, 7.472199999999929e-05, 7.413900000000084e-05, 7.422199999999879e-05, 7.444499999999937e-05, 7.444499999999937e-05, 7.380599999999571e-05, 7.458299999999612e-05, 7.398700000000452e-05, 7.404199999999639e-05, 7.390200000000069e-05, 7.427799999999707e-05, 7.387500000000102e-05, 7.431900000000324e-05, 7.465300000000091e-05, 7.408300000000256e-05, 7.465300000000091e-05, 7.384700000000188e-05, 7.441700000000023e-05, 7.45690000000035e-05, 7.387500000000102e-05, 7.448599999999861e-05, 7.405500000000342e-05, 7.443000000000033e-05, 7.440299999999372e-05, 7.386099999999451e-05, 7.44439999999999e-05, 7.420899999999869e-05, 7.45839999999956e-05, 7.388900000000059e-05, 7.463900000000134e-05, 7.434700000000238e-05, 7.440200000000119e-05, 7.404100000000385e-05, 7.390200000000069e-05, 7.373599999999786e-05, 7.415300000000041e-05, 7.469499999999962e-05, 7.462500000000177e-05, 7.377799999999657e-05, 7.390300000000016e-05, 7.406999999999553e-05, 7.390300000000016e-05]</msg>
<status status="PASS" starttime="20201029 18:19:12.021" endtime="20201029 18:19:12.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.016" endtime="20201029 18:19:12.024"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:12.028" endtime="20201029 18:19:12.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.026" endtime="20201029 18:19:12.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.025" endtime="20201029 18:19:12.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.633" endtime="20201029 18:19:12.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.632" endtime="20201029 18:19:12.049"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.057" endtime="20201029 18:19:12.076"></status>
</kw>
<msg timestamp="20201029 18:19:12.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:12.056" endtime="20201029 18:19:12.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:12.078" endtime="20201029 18:19:12.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.080" endtime="20201029 18:19:12.082"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.053" endtime="20201029 18:19:12.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.051" endtime="20201029 18:19:12.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.089" endtime="20201029 18:19:12.377"></status>
</kw>
<msg timestamp="20201029 18:19:12.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022373111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022448458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:12.088" endtime="20201029 18:19:12.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022373111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022448458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:12.382" endtime="20201029 18:19:12.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.390" endtime="20201029 18:19:12.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.085" endtime="20201029 18:19:12.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.084" endtime="20201029 18:19:12.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:12.396" level="INFO">${RESULT} = [{'diff': 7.534699999999991e-05}, {'diff': 7.565300000000191e-05}, {'diff': 7.505500000000095e-05}, {'diff': 7.50830000000001e-05}, {'diff': 7.559700000000016e-05}, {'diff': 7.520800000000022e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:12.393" endtime="20201029 18:19:12.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:12.403" level="INFO">${ACCURACY} = {'diff': [7.534699999999991e-05, 7.565300000000191e-05, 7.505500000000095e-05, 7.50830000000001e-05, 7.559700000000016e-05, 7.520800000000022e-05, 7.559799999999964e-05, 7.555600000000093e-05, 7.55700...</msg>
<status status="PASS" starttime="20201029 18:19:12.397" endtime="20201029 18:19:12.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.408" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 18:19:12.407" endtime="20201029 18:19:12.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.410" level="INFO">VALUE: [7.534699999999991e-05, 7.565300000000191e-05, 7.505500000000095e-05, 7.50830000000001e-05, 7.559700000000016e-05, 7.520800000000022e-05, 7.559799999999964e-05, 7.555600000000093e-05, 7.55700000000005e-05, 7.487499999999855e-05, 7.498599999999911e-05, 7.52500000000024e-05, 7.490200000000169e-05, 7.490300000000116e-05, 7.520800000000022e-05, 7.559700000000016e-05, 7.502800000000129e-05, 7.516700000000098e-05, 7.548600000000308e-05, 7.56249999999993e-05, 7.545899999999994e-05, 7.518000000000108e-05, 7.523599999999936e-05, 7.490199999999822e-05, 7.484700000000288e-05, 7.502799999999782e-05, 7.516700000000098e-05, 7.544500000000037e-05, 7.513900000000184e-05, 7.537499999999905e-05, 7.490300000000116e-05, 7.532000000000025e-05, 7.530499999999773e-05, 7.530499999999773e-05, 7.556900000000102e-05, 7.556900000000102e-05, 7.573599999999986e-05, 7.505500000000095e-05, 7.529200000000111e-05, 7.561099999999973e-05, 7.545800000000047e-05, 7.547200000000004e-05, 7.484799999999889e-05, 7.573599999999986e-05, 7.488800000000212e-05, 7.488900000000159e-05, 7.559700000000016e-05, 7.519400000000065e-05, 7.47500000000019e-05, 7.48050000000007e-05]</msg>
<status status="PASS" starttime="20201029 18:19:12.409" endtime="20201029 18:19:12.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.404" endtime="20201029 18:19:12.412"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:12.415" endtime="20201029 18:19:12.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.414" endtime="20201029 18:19:12.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.413" endtime="20201029 18:19:12.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.050" endtime="20201029 18:19:12.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.049" endtime="20201029 18:19:12.436"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.447" endtime="20201029 18:19:12.468"></status>
</kw>
<msg timestamp="20201029 18:19:12.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:12.443" endtime="20201029 18:19:12.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:12.472" endtime="20201029 18:19:12.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.477" endtime="20201029 18:19:12.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.440" endtime="20201029 18:19:12.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.438" endtime="20201029 18:19:12.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.495" endtime="20201029 18:19:12.788"></status>
</kw>
<msg timestamp="20201029 18:19:12.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025481181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025557194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:12.492" endtime="20201029 18:19:12.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025481181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025557194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:12.792" endtime="20201029 18:19:12.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.800" endtime="20201029 18:19:12.801"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.487" endtime="20201029 18:19:12.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.483" endtime="20201029 18:19:12.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:12.806" level="INFO">${RESULT} = [{'diff': 7.601299999999978e-05}, {'diff': 7.655500000000245e-05}, {'diff': 7.622199999999732e-05}, {'diff': 7.661100000000073e-05}, {'diff': 7.673600000000086e-05}, {'diff': 7.605600000000143e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:12.803" endtime="20201029 18:19:12.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:12.810" level="INFO">${ACCURACY} = {'diff': [7.601299999999978e-05, 7.655500000000245e-05, 7.622199999999732e-05, 7.661100000000073e-05, 7.673600000000086e-05, 7.605600000000143e-05, 7.577799999999857e-05, 7.605600000000143e-05, 7.6652...</msg>
<status status="PASS" starttime="20201029 18:19:12.807" endtime="20201029 18:19:12.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.815" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 18:19:12.814" endtime="20201029 18:19:12.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.817" level="INFO">VALUE: [7.601299999999978e-05, 7.655500000000245e-05, 7.622199999999732e-05, 7.661100000000073e-05, 7.673600000000086e-05, 7.605600000000143e-05, 7.577799999999857e-05, 7.605600000000143e-05, 7.665299999999944e-05, 7.597300000000001e-05, 7.638899999999962e-05, 7.608299999999762e-05, 7.666599999999954e-05, 7.650000000000018e-05, 7.586099999999998e-05, 7.622200000000079e-05, 7.622200000000079e-05, 7.590300000000216e-05, 7.630600000000168e-05, 7.590300000000216e-05, 7.611100000000023e-05, 7.623600000000036e-05, 7.622300000000026e-05, 7.645800000000147e-05, 7.623600000000036e-05, 7.634700000000091e-05, 7.624999999999993e-05, 7.619399999999818e-05, 7.666699999999901e-05, 7.65830000000016e-05, 7.666699999999901e-05, 7.615299999999894e-05, 7.604200000000186e-05, 7.615199999999947e-05, 7.669400000000215e-05, 7.6070000000001e-05, 7.615299999999894e-05, 7.637500000000005e-05, 7.644500000000137e-05, 7.60830000000011e-05, 7.616699999999851e-05, 7.605599999999796e-05, 7.651300000000028e-05, 7.641600000000276e-05, 7.673700000000033e-05, 7.605599999999796e-05, 7.648600000000061e-05, 7.647200000000104e-05, 7.620800000000122e-05, 7.58189999999978e-05]</msg>
<status status="PASS" starttime="20201029 18:19:12.816" endtime="20201029 18:19:12.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.811" endtime="20201029 18:19:12.819"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:12.822" endtime="20201029 18:19:12.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.821" endtime="20201029 18:19:12.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.820" endtime="20201029 18:19:12.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.437" endtime="20201029 18:19:12.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.436" endtime="20201029 18:19:12.843"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.851" endtime="20201029 18:19:12.872"></status>
</kw>
<msg timestamp="20201029 18:19:12.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:12.850" endtime="20201029 18:19:12.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:12.873" endtime="20201029 18:19:12.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.876" endtime="20201029 18:19:12.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.847" endtime="20201029 18:19:12.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.845" endtime="20201029 18:19:12.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.885" endtime="20201029 18:19:13.171"></status>
</kw>
<msg timestamp="20201029 18:19:13.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02277725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022854903, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:12.883" endtime="20201029 18:19:13.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02277725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022854903, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:13.175" endtime="20201029 18:19:13.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.183" endtime="20201029 18:19:13.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.881" endtime="20201029 18:19:13.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.879" endtime="20201029 18:19:13.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:13.189" level="INFO">${RESULT} = [{'diff': 7.765300000000044e-05}, {'diff': 7.765200000000097e-05}, {'diff': 7.730499999999974e-05}, {'diff': 7.720900000000169e-05}, {'diff': 7.763900000000087e-05}, {'diff': 7.69440000000024e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:13.186" endtime="20201029 18:19:13.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:13.194" level="INFO">${ACCURACY} = {'diff': [7.765300000000044e-05, 7.765200000000097e-05, 7.730499999999974e-05, 7.720900000000169e-05, 7.763900000000087e-05, 7.69440000000024e-05, 7.716699999999951e-05, 7.770799999999925e-05, 7.71939...</msg>
<status status="PASS" starttime="20201029 18:19:13.190" endtime="20201029 18:19:13.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.198" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 18:19:13.197" endtime="20201029 18:19:13.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.200" level="INFO">VALUE: [7.765300000000044e-05, 7.765200000000097e-05, 7.730499999999974e-05, 7.720900000000169e-05, 7.763900000000087e-05, 7.69440000000024e-05, 7.716699999999951e-05, 7.770799999999925e-05, 7.719399999999918e-05, 7.718099999999908e-05, 7.697200000000154e-05, 7.773599999999839e-05, 7.7070000000002e-05, 7.73189999999993e-05, 7.7151999999997e-05, 7.752800000000032e-05, 7.691699999999926e-05, 7.697300000000101e-05, 7.768000000000011e-05, 7.6764e-05, 7.769399999999968e-05, 7.675000000000043e-05, 7.706999999999853e-05, 7.695900000000144e-05, 7.681999999999828e-05, 7.6764e-05, 7.690200000000022e-05, 7.772199999999882e-05, 7.677800000000304e-05, 7.77229999999983e-05, 7.705500000000295e-05, 7.681999999999828e-05, 7.718100000000255e-05, 7.706999999999853e-05, 7.681900000000227e-05, 7.695900000000144e-05, 7.691599999999979e-05, 7.712499999999733e-05, 7.693000000000283e-05, 7.701400000000025e-05, 7.733299999999887e-05, 7.705599999999896e-05, 7.695800000000197e-05, 7.750000000000118e-05, 7.76250000000013e-05, 7.69029999999997e-05, 7.72229999999978e-05, 7.766599999999707e-05, 7.76250000000013e-05, 7.74030000000002e-05]</msg>
<status status="PASS" starttime="20201029 18:19:13.199" endtime="20201029 18:19:13.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.194" endtime="20201029 18:19:13.203"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:13.206" endtime="20201029 18:19:13.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.205" endtime="20201029 18:19:13.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.203" endtime="20201029 18:19:13.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.844" endtime="20201029 18:19:13.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.843" endtime="20201029 18:19:13.227"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.235" endtime="20201029 18:19:13.254"></status>
</kw>
<msg timestamp="20201029 18:19:13.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:13.234" endtime="20201029 18:19:13.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:13.256" endtime="20201029 18:19:13.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.258" endtime="20201029 18:19:13.260"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.231" endtime="20201029 18:19:13.260"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.229" endtime="20201029 18:19:13.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.267" endtime="20201029 18:19:13.550"></status>
</kw>
<msg timestamp="20201029 18:19:13.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021886028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:13.266" endtime="20201029 18:19:13.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021886028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:13.554" endtime="20201029 18:19:13.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.562" endtime="20201029 18:19:13.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.263" endtime="20201029 18:19:13.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.261" endtime="20201029 18:19:13.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:13.569" level="INFO">${RESULT} = [{'diff': 7.848599999999914e-05}, {'diff': 7.827800000000107e-05}, {'diff': 7.840299999999772e-05}, {'diff': 7.826300000000203e-05}, {'diff': 7.823599999999889e-05}, {'diff': 7.809700000000266e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:13.566" endtime="20201029 18:19:13.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:13.574" level="INFO">${ACCURACY} = {'diff': [7.848599999999914e-05, 7.827800000000107e-05, 7.840299999999772e-05, 7.826300000000203e-05, 7.823599999999889e-05, 7.809700000000266e-05, 7.802800000000082e-05, 7.790299999999722e-05, 7.8069...</msg>
<status status="PASS" starttime="20201029 18:19:13.570" endtime="20201029 18:19:13.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.578" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 18:19:13.577" endtime="20201029 18:19:13.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.581" level="INFO">VALUE: [7.848599999999914e-05, 7.827800000000107e-05, 7.840299999999772e-05, 7.826300000000203e-05, 7.823599999999889e-05, 7.809700000000266e-05, 7.802800000000082e-05, 7.790299999999722e-05, 7.806900000000006e-05, 7.822200000000279e-05, 7.805599999999996e-05, 7.798599999999864e-05, 7.793099999999983e-05, 7.79030000000007e-05, 7.855600000000046e-05, 7.836099999999901e-05, 7.834799999999892e-05, 7.830499999999727e-05, 7.809700000000266e-05, 7.822199999999932e-05, 7.790299999999722e-05, 7.837499999999858e-05, 7.797199999999907e-05, 7.868099999999711e-05, 7.78189999999998e-05, 7.79449999999994e-05, 7.834699999999944e-05, 7.869500000000015e-05, 7.80969999999992e-05, 7.80969999999992e-05, 7.81389999999979e-05, 7.79030000000007e-05, 7.837499999999858e-05, 7.81250000000018e-05, 7.793099999999983e-05, 7.836100000000248e-05, 7.847300000000251e-05, 7.808299999999962e-05, 7.790200000000122e-05, 7.837499999999858e-05, 7.81389999999979e-05, 7.843100000000033e-05, 7.869500000000015e-05, 7.779200000000014e-05, 7.862499999999883e-05, 7.866700000000101e-05, 7.774999999999796e-05, 7.840299999999772e-05, 7.830600000000021e-05, 7.782000000000275e-05]</msg>
<status status="PASS" starttime="20201029 18:19:13.579" endtime="20201029 18:19:13.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.575" endtime="20201029 18:19:13.582"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:13.586" endtime="20201029 18:19:13.605"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.584" endtime="20201029 18:19:13.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.583" endtime="20201029 18:19:13.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.228" endtime="20201029 18:19:13.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.227" endtime="20201029 18:19:13.606"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.615" endtime="20201029 18:19:13.634"></status>
</kw>
<msg timestamp="20201029 18:19:13.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:13.613" endtime="20201029 18:19:13.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:13.636" endtime="20201029 18:19:13.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.638" endtime="20201029 18:19:13.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.611" endtime="20201029 18:19:13.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.609" endtime="20201029 18:19:13.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.647" endtime="20201029 18:19:13.933"></status>
</kw>
<msg timestamp="20201029 18:19:13.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021848264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021927792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:13.646" endtime="20201029 18:19:13.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021848264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021927792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:13.937" endtime="20201029 18:19:13.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.945" endtime="20201029 18:19:13.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.643" endtime="20201029 18:19:13.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.641" endtime="20201029 18:19:13.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:13.951" level="INFO">${RESULT} = [{'diff': 7.952800000000232e-05}, {'diff': 7.955599999999799e-05}, {'diff': 7.951399999999928e-05}, {'diff': 7.876399999999853e-05}, {'diff': 7.866699999999754e-05}, {'diff': 7.908300000000063e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:13.948" endtime="20201029 18:19:13.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:13.956" level="INFO">${ACCURACY} = {'diff': [7.952800000000232e-05, 7.955599999999799e-05, 7.951399999999928e-05, 7.876399999999853e-05, 7.866699999999754e-05, 7.908300000000063e-05, 7.902799999999835e-05, 7.955500000000199e-05, 7.8833...</msg>
<status status="PASS" starttime="20201029 18:19:13.952" endtime="20201029 18:19:13.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.960" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 18:19:13.959" endtime="20201029 18:19:13.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.963" level="INFO">VALUE: [7.952800000000232e-05, 7.955599999999799e-05, 7.951399999999928e-05, 7.876399999999853e-05, 7.866699999999754e-05, 7.908300000000063e-05, 7.902799999999835e-05, 7.955500000000199e-05, 7.883300000000037e-05, 7.932000000000078e-05, 7.91389999999989e-05, 7.87909999999982e-05, 7.957000000000103e-05, 7.938899999999915e-05, 7.957000000000103e-05, 7.951399999999928e-05, 7.945799999999753e-05, 7.894400000000093e-05, 7.965299999999897e-05, 7.938900000000262e-05, 7.9458000000001e-05, 7.872199999999982e-05, 7.94030000000022e-05, 7.969400000000168e-05, 7.934799999999992e-05, 7.877699999999863e-05, 7.906900000000106e-05, 7.954099999999895e-05, 7.93190000000013e-05, 7.941700000000176e-05, 7.883300000000037e-05, 7.912499999999933e-05, 7.9458000000001e-05, 7.911099999999976e-05, 7.972200000000082e-05, 7.965299999999897e-05, 7.938799999999968e-05, 7.881899999999734e-05, 7.974999999999996e-05, 7.897200000000007e-05, 7.881899999999734e-05, 7.897200000000007e-05, 7.882000000000028e-05, 7.891700000000126e-05, 7.961100000000026e-05, 7.893099999999736e-05, 7.925000000000293e-05, 7.922200000000032e-05, 7.906899999999759e-05, 7.955500000000199e-05]</msg>
<status status="PASS" starttime="20201029 18:19:13.961" endtime="20201029 18:19:13.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.956" endtime="20201029 18:19:13.964"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:13.967" endtime="20201029 18:19:13.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.966" endtime="20201029 18:19:13.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.965" endtime="20201029 18:19:13.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.607" endtime="20201029 18:19:13.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.607" endtime="20201029 18:19:13.988"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.997" endtime="20201029 18:19:14.016"></status>
</kw>
<msg timestamp="20201029 18:19:14.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:13.995" endtime="20201029 18:19:14.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:14.018" endtime="20201029 18:19:14.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.020" endtime="20201029 18:19:14.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.993" endtime="20201029 18:19:14.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.990" endtime="20201029 18:19:14.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.029" endtime="20201029 18:19:14.315"></status>
</kw>
<msg timestamp="20201029 18:19:14.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022882208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022962208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:14.028" endtime="20201029 18:19:14.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022882208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022962208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:14.319" endtime="20201029 18:19:14.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.328" endtime="20201029 18:19:14.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.025" endtime="20201029 18:19:14.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.024" endtime="20201029 18:19:14.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:14.334" level="INFO">${RESULT} = [{'diff': 8.000000000000021e-05}, {'diff': 8.019499999999818e-05}, {'diff': 8.070900000000172e-05}, {'diff': 8.005599999999849e-05}, {'diff': 7.972200000000082e-05}, {'diff': 8.057000000000203e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:14.331" endtime="20201029 18:19:14.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:14.338" level="INFO">${ACCURACY} = {'diff': [8.000000000000021e-05, 8.019499999999818e-05, 8.070900000000172e-05, 8.005599999999849e-05, 7.972200000000082e-05, 8.057000000000203e-05, 8.059699999999823e-05, 8.041599999999982e-05, 8.0111...</msg>
<status status="PASS" starttime="20201029 18:19:14.335" endtime="20201029 18:19:14.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.343" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 18:19:14.342" endtime="20201029 18:19:14.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.345" level="INFO">VALUE: [8.000000000000021e-05, 8.019499999999818e-05, 8.070900000000172e-05, 8.005599999999849e-05, 7.972200000000082e-05, 8.057000000000203e-05, 8.059699999999823e-05, 8.041599999999982e-05, 8.011100000000076e-05, 7.995799999999803e-05, 8.016599999999957e-05, 8.069400000000268e-05, 8.000000000000021e-05, 8.012500000000033e-05, 8.06390000000004e-05, 8.023600000000089e-05, 7.987500000000008e-05, 8.043099999999886e-05, 8.061100000000126e-05, 7.990299999999922e-05, 8.025000000000046e-05, 8.022199999999785e-05, 8.070800000000225e-05, 7.997200000000107e-05, 8.029199999999917e-05, 7.983399999999738e-05, 8.002799999999935e-05, 8.00979999999972e-05, 8.070900000000172e-05, 8.012500000000033e-05, 8.030599999999874e-05, 7.983300000000138e-05, 8.068099999999911e-05, 8.009699999999773e-05, 8.023600000000089e-05, 8.040299999999972e-05, 8.04719999999981e-05, 8.005599999999849e-05, 7.988899999999965e-05, 7.973600000000039e-05, 8.065299999999997e-05, 8.012500000000033e-05, 8.006900000000206e-05, 8.01389999999999e-05, 8.045799999999853e-05, 7.988899999999965e-05, 7.988899999999965e-05, 7.974999999999996e-05, 7.988899999999965e-05, 8.00840000000011e-05]</msg>
<status status="PASS" starttime="20201029 18:19:14.344" endtime="20201029 18:19:14.347"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.339" endtime="20201029 18:19:14.347"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:14.351" endtime="20201029 18:19:14.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.349" endtime="20201029 18:19:14.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.348" endtime="20201029 18:19:14.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.989" endtime="20201029 18:19:14.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.988" endtime="20201029 18:19:14.372"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.380" endtime="20201029 18:19:14.399"></status>
</kw>
<msg timestamp="20201029 18:19:14.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:14.379" endtime="20201029 18:19:14.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:14.401" endtime="20201029 18:19:14.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.403" endtime="20201029 18:19:14.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.376" endtime="20201029 18:19:14.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.374" endtime="20201029 18:19:14.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.412" endtime="20201029 18:19:14.697"></status>
</kw>
<msg timestamp="20201029 18:19:14.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021840097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021921611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:14.411" endtime="20201029 18:19:14.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021840097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021921611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:14.701" endtime="20201029 18:19:14.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.709" endtime="20201029 18:19:14.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.408" endtime="20201029 18:19:14.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.406" endtime="20201029 18:19:14.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:14.715" level="INFO">${RESULT} = [{'diff': 8.151400000000128e-05}, {'diff': 8.124999999999799e-05}, {'diff': 8.125000000000146e-05}, {'diff': 8.108300000000263e-05}, {'diff': 8.123600000000189e-05}, {'diff': 8.156999999999956e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:14.712" endtime="20201029 18:19:14.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:14.720" level="INFO">${ACCURACY} = {'diff': [8.151400000000128e-05, 8.124999999999799e-05, 8.125000000000146e-05, 8.108300000000263e-05, 8.123600000000189e-05, 8.156999999999956e-05, 8.158299999999966e-05, 8.151299999999834e-05, 8.1221...</msg>
<status status="PASS" starttime="20201029 18:19:14.716" endtime="20201029 18:19:14.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.725" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 18:19:14.724" endtime="20201029 18:19:14.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.727" level="INFO">VALUE: [8.151400000000128e-05, 8.124999999999799e-05, 8.125000000000146e-05, 8.108300000000263e-05, 8.123600000000189e-05, 8.156999999999956e-05, 8.158299999999966e-05, 8.151299999999834e-05, 8.122199999999885e-05, 8.081999999999881e-05, 8.084700000000195e-05, 8.174999999999849e-05, 8.11390000000009e-05, 8.174999999999849e-05, 8.112499999999787e-05, 8.143000000000039e-05, 8.145799999999953e-05, 8.090200000000075e-05, 8.119399999999971e-05, 8.130500000000027e-05, 8.081899999999934e-05, 8.105500000000002e-05, 8.137500000000158e-05, 8.122199999999885e-05, 8.09169999999998e-05, 8.090300000000022e-05, 8.095799999999903e-05, 8.15979999999987e-05, 8.09719999999986e-05, 8.145799999999953e-05, 8.138899999999769e-05, 8.176399999999806e-05, 8.084799999999795e-05, 8.073600000000139e-05, 8.102799999999688e-05, 8.07780000000001e-05, 8.126400000000103e-05, 8.090300000000022e-05, 8.083399999999838e-05, 8.15970000000027e-05, 8.140200000000125e-05, 8.118000000000014e-05, 8.075000000000096e-05, 8.148600000000214e-05, 8.090300000000022e-05, 8.09169999999998e-05, 8.105599999999949e-05, 8.145799999999953e-05, 8.170899999999925e-05, 8.144399999999996e-05]</msg>
<status status="PASS" starttime="20201029 18:19:14.726" endtime="20201029 18:19:14.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.721" endtime="20201029 18:19:14.732"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:14.736" endtime="20201029 18:19:14.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.734" endtime="20201029 18:19:14.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.733" endtime="20201029 18:19:14.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.372" endtime="20201029 18:19:14.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.372" endtime="20201029 18:19:14.756"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.765" endtime="20201029 18:19:14.784"></status>
</kw>
<msg timestamp="20201029 18:19:14.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:14.764" endtime="20201029 18:19:14.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:14.786" endtime="20201029 18:19:14.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.788" endtime="20201029 18:19:14.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.761" endtime="20201029 18:19:14.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.759" endtime="20201029 18:19:14.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.797" endtime="20201029 18:19:15.085"></status>
</kw>
<msg timestamp="20201029 18:19:15.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022000944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:14.796" endtime="20201029 18:19:15.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022000944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:15.089" endtime="20201029 18:19:15.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.097" endtime="20201029 18:19:15.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.793" endtime="20201029 18:19:15.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.791" endtime="20201029 18:19:15.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:15.104" level="INFO">${RESULT} = [{'diff': 8.23330000000004e-05}, {'diff': 8.2152999999998e-05}, {'diff': 8.19719999999996e-05}, {'diff': 8.209699999999973e-05}, {'diff': 8.190199999999828e-05}, {'diff': 8.200000000000221e-05}, {'dif...</msg>
<status status="PASS" starttime="20201029 18:19:15.100" endtime="20201029 18:19:15.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:15.108" level="INFO">${ACCURACY} = {'diff': [8.23330000000004e-05, 8.2152999999998e-05, 8.19719999999996e-05, 8.209699999999973e-05, 8.190199999999828e-05, 8.200000000000221e-05, 8.256900000000109e-05, 8.222199999999985e-05, 8.22499999...</msg>
<status status="PASS" starttime="20201029 18:19:15.105" endtime="20201029 18:19:15.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.112" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 18:19:15.111" endtime="20201029 18:19:15.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.115" level="INFO">VALUE: [8.23330000000004e-05, 8.2152999999998e-05, 8.19719999999996e-05, 8.209699999999973e-05, 8.190199999999828e-05, 8.200000000000221e-05, 8.256900000000109e-05, 8.222199999999985e-05, 8.224999999999899e-05, 8.188899999999819e-05, 8.224999999999899e-05, 8.232000000000031e-05, 8.176399999999806e-05, 8.207000000000006e-05, 8.258300000000066e-05, 8.222200000000332e-05, 8.224999999999899e-05, 8.173599999999892e-05, 8.24720000000001e-05, 8.231900000000084e-05, 8.249999999999924e-05, 8.26109999999998e-05, 8.26529999999985e-05, 8.208399999999963e-05, 8.240199999999878e-05, 8.255500000000152e-05, 8.223600000000289e-05, 8.188900000000165e-05, 8.218100000000061e-05, 8.262500000000284e-05, 8.232000000000031e-05, 8.254199999999795e-05, 8.26109999999998e-05, 8.21659999999981e-05, 8.237499999999912e-05, 8.172299999999882e-05, 8.191599999999785e-05, 8.205500000000102e-05, 8.216700000000104e-05, 8.17780000000011e-05, 8.223599999999942e-05, 8.190300000000122e-05, 8.230600000000074e-05, 8.216700000000104e-05, 8.233399999999988e-05, 8.173599999999892e-05, 8.263799999999946e-05, 8.231900000000084e-05, 8.177700000000163e-05, 8.241699999999783e-05]</msg>
<status status="PASS" starttime="20201029 18:19:15.113" endtime="20201029 18:19:15.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.109" endtime="20201029 18:19:15.116"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:15.120" endtime="20201029 18:19:15.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.118" endtime="20201029 18:19:15.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.117" endtime="20201029 18:19:15.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.757" endtime="20201029 18:19:15.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.757" endtime="20201029 18:19:15.140"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.150" endtime="20201029 18:19:15.171"></status>
</kw>
<msg timestamp="20201029 18:19:15.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:15.148" endtime="20201029 18:19:15.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:15.173" endtime="20201029 18:19:15.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.175" endtime="20201029 18:19:15.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.146" endtime="20201029 18:19:15.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.143" endtime="20201029 18:19:15.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.184" endtime="20201029 18:19:15.469"></status>
</kw>
<msg timestamp="20201029 18:19:15.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024058431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024141444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:15.183" endtime="20201029 18:19:15.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024058431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024141444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:15.473" endtime="20201029 18:19:15.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.482" endtime="20201029 18:19:15.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.180" endtime="20201029 18:19:15.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.178" endtime="20201029 18:19:15.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:15.488" level="INFO">${RESULT} = [{'diff': 8.301299999999984e-05}, {'diff': 8.290299999999876e-05}, {'diff': 8.331900000000184e-05}, {'diff': 8.338899999999969e-05}, {'diff': 8.356900000000209e-05}, {'diff': 8.305499999999855e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:15.485" endtime="20201029 18:19:15.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:15.492" level="INFO">${ACCURACY} = {'diff': [8.301299999999984e-05, 8.290299999999876e-05, 8.331900000000184e-05, 8.338899999999969e-05, 8.356900000000209e-05, 8.305499999999855e-05, 8.294400000000146e-05, 8.31110000000003e-05, 8.31670...</msg>
<status status="PASS" starttime="20201029 18:19:15.489" endtime="20201029 18:19:15.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.497" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 18:19:15.496" endtime="20201029 18:19:15.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.499" level="INFO">VALUE: [8.301299999999984e-05, 8.290299999999876e-05, 8.331900000000184e-05, 8.338899999999969e-05, 8.356900000000209e-05, 8.305499999999855e-05, 8.294400000000146e-05, 8.31110000000003e-05, 8.316700000000204e-05, 8.327799999999913e-05, 8.33330000000014e-05, 8.27780000000021e-05, 8.280599999999777e-05, 8.35980000000007e-05, 8.372199999999788e-05, 8.293000000000189e-05, 8.295799999999756e-05, 8.341599999999935e-05, 8.336100000000055e-05, 8.340299999999926e-05, 8.290300000000222e-05, 8.330599999999827e-05, 8.355600000000199e-05, 8.358399999999766e-05, 8.37370000000004e-05, 8.323600000000042e-05, 8.302800000000235e-05, 8.354099999999948e-05, 8.288899999999919e-05, 8.281900000000134e-05, 8.340299999999926e-05, 8.291699999999833e-05, 8.3152999999999e-05, 8.354199999999895e-05, 8.323600000000042e-05, 8.27369999999994e-05, 8.350000000000024e-05, 8.355499999999905e-05, 8.342999999999892e-05, 8.358299999999819e-05, 8.290299999999876e-05, 8.345800000000153e-05, 8.338899999999969e-05, 8.336100000000055e-05, 8.324999999999999e-05, 8.307000000000106e-05, 8.315199999999953e-05, 8.374999999999702e-05, 8.293000000000189e-05, 8.344399999999849e-05]</msg>
<status status="PASS" starttime="20201029 18:19:15.498" endtime="20201029 18:19:15.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.493" endtime="20201029 18:19:15.501"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:15.505" endtime="20201029 18:19:15.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.503" endtime="20201029 18:19:15.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.502" endtime="20201029 18:19:15.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.141" endtime="20201029 18:19:15.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.141" endtime="20201029 18:19:15.525"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.534" endtime="20201029 18:19:15.553"></status>
</kw>
<msg timestamp="20201029 18:19:15.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:15.533" endtime="20201029 18:19:15.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:15.555" endtime="20201029 18:19:15.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.557" endtime="20201029 18:19:15.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.530" endtime="20201029 18:19:15.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.528" endtime="20201029 18:19:15.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.566" endtime="20201029 18:19:15.851"></status>
</kw>
<msg timestamp="20201029 18:19:15.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021925653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022009681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:15.565" endtime="20201029 18:19:15.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021925653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022009681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:15.856" endtime="20201029 18:19:15.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.865" endtime="20201029 18:19:15.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.562" endtime="20201029 18:19:15.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.560" endtime="20201029 18:19:15.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:15.872" level="INFO">${RESULT} = [{'diff': 8.402799999999988e-05}, {'diff': 8.391599999999985e-05}, {'diff': 8.438800000000121e-05}, {'diff': 8.433299999999894e-05}, {'diff': 8.454100000000048e-05}, {'diff': 8.413899999999697e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:15.869" endtime="20201029 18:19:15.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:15.880" level="INFO">${ACCURACY} = {'diff': [8.402799999999988e-05, 8.391599999999985e-05, 8.438800000000121e-05, 8.433299999999894e-05, 8.454100000000048e-05, 8.413899999999697e-05, 8.395800000000203e-05, 8.376399999999659e-05, 8.4694...</msg>
<status status="PASS" starttime="20201029 18:19:15.873" endtime="20201029 18:19:15.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.884" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 18:19:15.883" endtime="20201029 18:19:15.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.887" level="INFO">VALUE: [8.402799999999988e-05, 8.391599999999985e-05, 8.438800000000121e-05, 8.433299999999894e-05, 8.454100000000048e-05, 8.413899999999697e-05, 8.395800000000203e-05, 8.376399999999659e-05, 8.469499999999922e-05, 8.425000000000099e-05, 8.398600000000117e-05, 8.419499999999872e-05, 8.434700000000198e-05, 8.406899999999912e-05, 8.377700000000016e-05, 8.431899999999937e-05, 8.438900000000069e-05, 8.42919999999997e-05, 8.454199999999995e-05, 8.441699999999983e-05, 8.405599999999902e-05, 8.427800000000013e-05, 8.391599999999985e-05, 8.454100000000048e-05, 8.441600000000035e-05, 8.456899999999962e-05, 8.39309999999989e-05, 8.427800000000013e-05, 8.425000000000099e-05, 8.388900000000019e-05, 8.419499999999872e-05, 8.416699999999958e-05, 8.448600000000167e-05, 8.376400000000006e-05, 8.391599999999985e-05, 8.455500000000005e-05, 8.441699999999983e-05, 8.408299999999869e-05, 8.395799999999856e-05, 8.456900000000309e-05, 8.423599999999795e-05, 8.434799999999798e-05, 8.46110000000018e-05, 8.457000000000256e-05, 8.383400000000138e-05, 8.405499999999955e-05, 8.377799999999963e-05, 8.388900000000019e-05, 8.39309999999989e-05, 8.394399999999899e-05]</msg>
<status status="PASS" starttime="20201029 18:19:15.885" endtime="20201029 18:19:15.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.880" endtime="20201029 18:19:15.888"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:15.891" endtime="20201029 18:19:15.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.890" endtime="20201029 18:19:15.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.889" endtime="20201029 18:19:15.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.526" endtime="20201029 18:19:15.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.526" endtime="20201029 18:19:15.912"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.921" endtime="20201029 18:19:15.941"></status>
</kw>
<msg timestamp="20201029 18:19:15.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:15.919" endtime="20201029 18:19:15.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:15.942" endtime="20201029 18:19:15.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.945" endtime="20201029 18:19:15.946"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.917" endtime="20201029 18:19:15.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.915" endtime="20201029 18:19:15.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.954" endtime="20201029 18:19:16.240"></status>
</kw>
<msg timestamp="20201029 18:19:16.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022212431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022297264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:15.952" endtime="20201029 18:19:16.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022212431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022297264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:16.245" endtime="20201029 18:19:16.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.253" endtime="20201029 18:19:16.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.950" endtime="20201029 18:19:16.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.948" endtime="20201029 18:19:16.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:16.259" level="INFO">${RESULT} = [{'diff': 8.483299999999944e-05}, {'diff': 8.508399999999916e-05}, {'diff': 8.51110000000023e-05}, {'diff': 8.533299999999994e-05}, {'diff': 8.575000000000249e-05}, {'diff': 8.476399999999759e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:16.256" endtime="20201029 18:19:16.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:16.263" level="INFO">${ACCURACY} = {'diff': [8.483299999999944e-05, 8.508399999999916e-05, 8.51110000000023e-05, 8.533299999999994e-05, 8.575000000000249e-05, 8.476399999999759e-05, 8.505499999999708e-05, 8.491699999999686e-05, 8.52359...</msg>
<status status="PASS" starttime="20201029 18:19:16.260" endtime="20201029 18:19:16.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.268" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 18:19:16.267" endtime="20201029 18:19:16.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.270" level="INFO">VALUE: [8.483299999999944e-05, 8.508399999999916e-05, 8.51110000000023e-05, 8.533299999999994e-05, 8.575000000000249e-05, 8.476399999999759e-05, 8.505499999999708e-05, 8.491699999999686e-05, 8.523599999999895e-05, 8.526400000000156e-05, 8.540299999999779e-05, 8.498600000000217e-05, 8.540299999999779e-05, 8.53050000000008e-05, 8.490199999999781e-05, 8.508299999999969e-05, 8.555500000000105e-05, 8.568100000000065e-05, 8.486099999999858e-05, 8.498600000000217e-05, 8.53469999999995e-05, 8.557000000000009e-05, 8.511099999999883e-05, 8.545800000000006e-05, 8.508299999999969e-05, 8.477699999999769e-05, 8.56249999999989e-05, 8.523600000000242e-05, 8.51110000000023e-05, 8.551400000000181e-05, 8.491700000000033e-05, 8.508400000000263e-05, 8.527700000000166e-05, 8.477800000000063e-05, 8.519400000000024e-05, 8.569400000000074e-05, 8.492999999999695e-05, 8.565299999999804e-05, 8.509699999999926e-05, 8.554199999999748e-05, 8.486200000000152e-05, 8.49859999999987e-05, 8.476400000000106e-05, 8.540300000000126e-05, 8.53469999999995e-05, 8.523599999999895e-05, 8.533299999999994e-05, 8.506900000000012e-05, 8.494399999999999e-05, 8.550000000000224e-05]</msg>
<status status="PASS" starttime="20201029 18:19:16.269" endtime="20201029 18:19:16.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.264" endtime="20201029 18:19:16.271"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:16.275" endtime="20201029 18:19:16.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.274" endtime="20201029 18:19:16.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.272" endtime="20201029 18:19:16.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.913" endtime="20201029 18:19:16.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.913" endtime="20201029 18:19:16.296"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.304" endtime="20201029 18:19:16.324"></status>
</kw>
<msg timestamp="20201029 18:19:16.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:16.303" endtime="20201029 18:19:16.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:16.325" endtime="20201029 18:19:16.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.328" endtime="20201029 18:19:16.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.300" endtime="20201029 18:19:16.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.298" endtime="20201029 18:19:16.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.337" endtime="20201029 18:19:16.621"></status>
</kw>
<msg timestamp="20201029 18:19:16.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022820625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022907319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:16.335" endtime="20201029 18:19:16.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022820625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022907319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:16.625" endtime="20201029 18:19:16.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.633" endtime="20201029 18:19:16.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.333" endtime="20201029 18:19:16.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.331" endtime="20201029 18:19:16.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:16.639" level="INFO">${RESULT} = [{'diff': 8.669399999999827e-05}, {'diff': 8.598600000000317e-05}, {'diff': 8.659700000000076e-05}, {'diff': 8.570800000000031e-05}, {'diff': 8.611099999999983e-05}, {'diff': 8.611099999999983e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:16.636" endtime="20201029 18:19:16.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:16.644" level="INFO">${ACCURACY} = {'diff': [8.669399999999827e-05, 8.598600000000317e-05, 8.659700000000076e-05, 8.570800000000031e-05, 8.611099999999983e-05, 8.611099999999983e-05, 8.623599999999995e-05, 8.608400000000016e-05, 8.6124...</msg>
<status status="PASS" starttime="20201029 18:19:16.640" endtime="20201029 18:19:16.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.648" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 18:19:16.647" endtime="20201029 18:19:16.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.650" level="INFO">VALUE: [8.669399999999827e-05, 8.598600000000317e-05, 8.659700000000076e-05, 8.570800000000031e-05, 8.611099999999983e-05, 8.611099999999983e-05, 8.623599999999995e-05, 8.608400000000016e-05, 8.61249999999994e-05, 8.636100000000008e-05, 8.622200000000038e-05, 8.66799999999987e-05, 8.588899999999872e-05, 8.626399999999909e-05, 8.645799999999759e-05, 8.637499999999965e-05, 8.586099999999958e-05, 8.591699999999786e-05, 8.644500000000097e-05, 8.640299999999879e-05, 8.581900000000087e-05, 8.576300000000259e-05, 8.644399999999802e-05, 8.627699999999919e-05, 8.651399999999934e-05, 8.654199999999848e-05, 8.597200000000013e-05, 8.62920000000017e-05, 8.658400000000066e-05, 8.66249999999999e-05, 8.641600000000235e-05, 8.58050000000013e-05, 8.588799999999924e-05, 8.573599999999945e-05, 8.624999999999952e-05, 8.644399999999802e-05, 8.580600000000077e-05, 8.656900000000162e-05, 8.631999999999737e-05, 8.657000000000109e-05, 8.649999999999977e-05, 8.657000000000109e-05, 8.652799999999891e-05, 8.656899999999815e-05, 8.587499999999915e-05, 8.611099999999983e-05, 8.580499999999783e-05, 8.5847e-05, 8.594500000000047e-05, 8.643099999999793e-05]</msg>
<status status="PASS" starttime="20201029 18:19:16.649" endtime="20201029 18:19:16.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.644" endtime="20201029 18:19:16.653"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:16.656" endtime="20201029 18:19:16.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.655" endtime="20201029 18:19:16.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.654" endtime="20201029 18:19:16.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.297" endtime="20201029 18:19:16.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.296" endtime="20201029 18:19:16.677"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.685" endtime="20201029 18:19:16.704"></status>
</kw>
<msg timestamp="20201029 18:19:16.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:16.684" endtime="20201029 18:19:16.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:16.706" endtime="20201029 18:19:16.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.708" endtime="20201029 18:19:16.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.681" endtime="20201029 18:19:16.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.679" endtime="20201029 18:19:16.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.717" endtime="20201029 18:19:17.003"></status>
</kw>
<msg timestamp="20201029 18:19:17.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022188556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022275417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:16.716" endtime="20201029 18:19:17.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022188556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022275417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:17.007" endtime="20201029 18:19:17.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.016" endtime="20201029 18:19:17.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.713" endtime="20201029 18:19:17.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.711" endtime="20201029 18:19:17.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:17.022" level="INFO">${RESULT} = [{'diff': 8.686099999999711e-05}, {'diff': 8.74730000000011e-05}, {'diff': 8.708299999999822e-05}, {'diff': 8.772199999999841e-05}, {'diff': 8.700000000000027e-05}, {'diff': 8.745799999999859e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:17.019" endtime="20201029 18:19:17.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:17.027" level="INFO">${ACCURACY} = {'diff': [8.686099999999711e-05, 8.74730000000011e-05, 8.708299999999822e-05, 8.772199999999841e-05, 8.700000000000027e-05, 8.745799999999859e-05, 8.730499999999933e-05, 8.690299999999929e-05, 8.70969...</msg>
<status status="PASS" starttime="20201029 18:19:17.023" endtime="20201029 18:19:17.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.031" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 18:19:17.030" endtime="20201029 18:19:17.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.034" level="INFO">VALUE: [8.686099999999711e-05, 8.74730000000011e-05, 8.708299999999822e-05, 8.772199999999841e-05, 8.700000000000027e-05, 8.745799999999859e-05, 8.730499999999933e-05, 8.690299999999929e-05, 8.709699999999779e-05, 8.723599999999748e-05, 8.757000000000209e-05, 8.769400000000274e-05, 8.673600000000045e-05, 8.690299999999929e-05, 8.742999999999945e-05, 8.740299999999979e-05, 8.686100000000058e-05, 8.745799999999859e-05, 8.755499999999958e-05, 8.758299999999872e-05, 8.719399999999877e-05, 8.763900000000047e-05, 8.742999999999945e-05, 8.713899999999997e-05, 8.71250000000004e-05, 8.726400000000009e-05, 8.747199999999816e-05, 8.673600000000045e-05, 8.723600000000095e-05, 8.687500000000015e-05, 8.690299999999929e-05, 8.754199999999948e-05, 8.763900000000047e-05, 8.708299999999822e-05, 8.688800000000024e-05, 8.742999999999945e-05, 8.7638999999997e-05, 8.69310000000019e-05, 8.713899999999997e-05, 8.690299999999929e-05, 8.758400000000166e-05, 8.71250000000004e-05, 8.698700000000018e-05, 8.757000000000209e-05, 8.692999999999895e-05, 8.742999999999945e-05, 8.71250000000004e-05, 8.747200000000163e-05, 8.675000000000002e-05, 8.688899999999972e-05]</msg>
<status status="PASS" starttime="20201029 18:19:17.033" endtime="20201029 18:19:17.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.028" endtime="20201029 18:19:17.035"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:17.039" endtime="20201029 18:19:17.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.037" endtime="20201029 18:19:17.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.036" endtime="20201029 18:19:17.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.678" endtime="20201029 18:19:17.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.677" endtime="20201029 18:19:17.059"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.068" endtime="20201029 18:19:17.087"></status>
</kw>
<msg timestamp="20201029 18:19:17.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:17.067" endtime="20201029 18:19:17.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:17.089" endtime="20201029 18:19:17.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.091" endtime="20201029 18:19:17.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.064" endtime="20201029 18:19:17.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.062" endtime="20201029 18:19:17.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.100" endtime="20201029 18:19:17.387"></status>
</kw>
<msg timestamp="20201029 18:19:17.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021742236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02183025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:17.099" endtime="20201029 18:19:17.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021742236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02183025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:17.392" endtime="20201029 18:19:17.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.400" endtime="20201029 18:19:17.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.096" endtime="20201029 18:19:17.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.094" endtime="20201029 18:19:17.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:17.406" level="INFO">${RESULT} = [{'diff': 8.801399999999737e-05}, {'diff': 8.86670000000006e-05}, {'diff': 8.841700000000036e-05}, {'diff': 8.820900000000229e-05}, {'diff': 8.827699999999772e-05}, {'diff': 8.806900000000312e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:17.403" endtime="20201029 18:19:17.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:17.410" level="INFO">${ACCURACY} = {'diff': [8.801399999999737e-05, 8.86670000000006e-05, 8.841700000000036e-05, 8.820900000000229e-05, 8.827699999999772e-05, 8.806900000000312e-05, 8.844400000000002e-05, 8.840300000000079e-05, 8.82359...</msg>
<status status="PASS" starttime="20201029 18:19:17.407" endtime="20201029 18:19:17.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.415" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 18:19:17.414" endtime="20201029 18:19:17.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.417" level="INFO">VALUE: [8.801399999999737e-05, 8.86670000000006e-05, 8.841700000000036e-05, 8.820900000000229e-05, 8.827699999999772e-05, 8.806900000000312e-05, 8.844400000000002e-05, 8.840300000000079e-05, 8.823599999999848e-05, 8.858299999999972e-05, 8.779199999999973e-05, 8.826400000000109e-05, 8.838899999999775e-05, 8.838900000000122e-05, 8.873600000000245e-05, 8.818099999999968e-05, 8.804099999999704e-05, 8.844400000000002e-05, 8.797200000000213e-05, 8.806899999999965e-05, 8.773599999999798e-05, 8.79860000000017e-05, 8.815300000000054e-05, 8.822300000000186e-05, 8.859699999999929e-05, 8.86120000000018e-05, 8.83189999999999e-05, 8.859700000000276e-05, 8.773600000000145e-05, 8.865299999999757e-05, 8.805599999999955e-05, 8.841700000000036e-05, 8.856999999999962e-05, 8.822300000000186e-05, 8.769499999999875e-05, 8.815300000000054e-05, 8.800000000000127e-05, 8.874999999999855e-05, 8.813900000000097e-05, 8.806899999999965e-05, 8.773599999999798e-05, 8.81670000000001e-05, 8.869400000000027e-05, 8.772200000000188e-05, 8.832000000000284e-05, 8.784699999999854e-05, 8.820799999999934e-05, 8.841699999999689e-05, 8.874999999999855e-05, 8.843000000000045e-05]</msg>
<status status="PASS" starttime="20201029 18:19:17.416" endtime="20201029 18:19:17.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.411" endtime="20201029 18:19:17.418"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:17.422" endtime="20201029 18:19:17.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.421" endtime="20201029 18:19:17.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.419" endtime="20201029 18:19:17.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.060" endtime="20201029 18:19:17.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.060" endtime="20201029 18:19:17.443"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.451" endtime="20201029 18:19:17.471"></status>
</kw>
<msg timestamp="20201029 18:19:17.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:17.450" endtime="20201029 18:19:17.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:17.473" endtime="20201029 18:19:17.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.475" endtime="20201029 18:19:17.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.447" endtime="20201029 18:19:17.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.445" endtime="20201029 18:19:17.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.484" endtime="20201029 18:19:17.770"></status>
</kw>
<msg timestamp="20201029 18:19:17.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023123403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023212903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:17.483" endtime="20201029 18:19:17.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023123403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023212903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:17.774" endtime="20201029 18:19:17.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.782" endtime="20201029 18:19:17.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.480" endtime="20201029 18:19:17.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.479" endtime="20201029 18:19:17.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:17.788" level="INFO">${RESULT} = [{'diff': 8.94999999999993e-05}, {'diff': 8.941700000000136e-05}, {'diff': 8.972200000000041e-05}, {'diff': 8.972200000000041e-05}, {'diff': 8.906899999999718e-05}, {'diff': 8.901399999999837e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:17.785" endtime="20201029 18:19:17.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:17.793" level="INFO">${ACCURACY} = {'diff': [8.94999999999993e-05, 8.941700000000136e-05, 8.972200000000041e-05, 8.972200000000041e-05, 8.906899999999718e-05, 8.901399999999837e-05, 8.904100000000151e-05, 8.902800000000141e-05, 8.88890...</msg>
<status status="PASS" starttime="20201029 18:19:17.789" endtime="20201029 18:19:17.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.797" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 18:19:17.796" endtime="20201029 18:19:17.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.799" level="INFO">VALUE: [8.94999999999993e-05, 8.941700000000136e-05, 8.972200000000041e-05, 8.972200000000041e-05, 8.906899999999718e-05, 8.901399999999837e-05, 8.904100000000151e-05, 8.902800000000141e-05, 8.888900000000172e-05, 8.947200000000016e-05, 8.886099999999911e-05, 8.908399999999969e-05, 8.936099999999961e-05, 8.956899999999768e-05, 8.920800000000034e-05, 8.874999999999855e-05, 8.898599999999923e-05, 8.923600000000295e-05, 8.873600000000245e-05, 8.93190000000009e-05, 8.913900000000197e-05, 8.890300000000129e-05, 8.915200000000206e-05, 8.937499999999918e-05, 8.905500000000108e-05, 8.923599999999948e-05, 8.873599999999898e-05, 8.898599999999923e-05, 8.886099999999911e-05, 8.897199999999966e-05, 8.909699999999979e-05, 8.933399999999994e-05, 8.93190000000009e-05, 8.931899999999743e-05, 8.886100000000258e-05, 8.962499999999943e-05, 8.883299999999997e-05, 8.956899999999768e-05, 8.958400000000019e-05, 8.887500000000215e-05, 8.947200000000016e-05, 8.879200000000073e-05, 8.958300000000072e-05, 8.886199999999858e-05, 8.886099999999911e-05, 8.915300000000154e-05, 8.905499999999761e-05, 8.941699999999789e-05, 8.905600000000055e-05, 8.969500000000075e-05]</msg>
<status status="PASS" starttime="20201029 18:19:17.798" endtime="20201029 18:19:17.801"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.793" endtime="20201029 18:19:17.801"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:17.805" endtime="20201029 18:19:17.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.804" endtime="20201029 18:19:17.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.802" endtime="20201029 18:19:17.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.444" endtime="20201029 18:19:17.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.443" endtime="20201029 18:19:17.826"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.834" endtime="20201029 18:19:17.854"></status>
</kw>
<msg timestamp="20201029 18:19:17.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:17.833" endtime="20201029 18:19:17.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:17.855" endtime="20201029 18:19:17.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.858" endtime="20201029 18:19:17.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.830" endtime="20201029 18:19:17.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.828" endtime="20201029 18:19:17.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.867" endtime="20201029 18:19:18.152"></status>
</kw>
<msg timestamp="20201029 18:19:18.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021874528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021964389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:17.865" endtime="20201029 18:19:18.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021874528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021964389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:18.156" endtime="20201029 18:19:18.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.164" endtime="20201029 18:19:18.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.863" endtime="20201029 18:19:18.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.861" endtime="20201029 18:19:18.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:18.171" level="INFO">${RESULT} = [{'diff': 8.986100000000011e-05}, {'diff': 9.037499999999671e-05}, {'diff': 9.041700000000236e-05}, {'diff': 8.973699999999946e-05}, {'diff': 9.070800000000184e-05}, {'diff': 9.033300000000147e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:18.168" endtime="20201029 18:19:18.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:18.176" level="INFO">${ACCURACY} = {'diff': [8.986100000000011e-05, 9.037499999999671e-05, 9.041700000000236e-05, 8.973699999999946e-05, 9.070800000000184e-05, 9.033300000000147e-05, 9.038800000000027e-05, 8.993000000000195e-05, 9.0153...</msg>
<status status="PASS" starttime="20201029 18:19:18.172" endtime="20201029 18:19:18.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.180" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 18:19:18.179" endtime="20201029 18:19:18.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.183" level="INFO">VALUE: [8.986100000000011e-05, 9.037499999999671e-05, 9.041700000000236e-05, 8.973699999999946e-05, 9.070800000000184e-05, 9.033300000000147e-05, 9.038800000000027e-05, 8.993000000000195e-05, 9.015300000000254e-05, 9.037500000000018e-05, 9.041699999999889e-05, 9.009700000000079e-05, 9.043099999999846e-05, 9.062500000000043e-05, 9.01389999999995e-05, 9.041599999999941e-05, 8.983300000000097e-05, 9.03190000000019e-05, 9.055499999999911e-05, 9.055599999999858e-05, 9.005600000000155e-05, 8.980599999999783e-05, 8.993100000000143e-05, 9.066599999999966e-05, 9.048600000000073e-05, 9.030499999999886e-05, 8.994399999999805e-05, 9.041699999999889e-05, 9.041699999999889e-05, 9.023600000000048e-05, 8.990299999999882e-05, 9.048600000000073e-05, 9.029200000000223e-05, 9.068099999999871e-05, 9.008300000000122e-05, 8.979100000000226e-05, 9.008299999999775e-05, 9.038899999999975e-05, 9.045799999999812e-05, 8.987499999999968e-05, 9.008300000000122e-05, 9.059800000000076e-05, 9.054200000000248e-05, 9.040300000000279e-05, 8.986100000000011e-05, 9.047200000000116e-05, 8.972200000000041e-05, 9.008300000000122e-05, 8.991699999999839e-05, 9.061100000000086e-05]</msg>
<status status="PASS" starttime="20201029 18:19:18.181" endtime="20201029 18:19:18.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.176" endtime="20201029 18:19:18.185"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:18.188" endtime="20201029 18:19:18.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.187" endtime="20201029 18:19:18.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.186" endtime="20201029 18:19:18.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.827" endtime="20201029 18:19:18.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.826" endtime="20201029 18:19:18.209"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.218" endtime="20201029 18:19:18.238"></status>
</kw>
<msg timestamp="20201029 18:19:18.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:18.216" endtime="20201029 18:19:18.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:18.239" endtime="20201029 18:19:18.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.242" endtime="20201029 18:19:18.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.214" endtime="20201029 18:19:18.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.212" endtime="20201029 18:19:18.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.251" endtime="20201029 18:19:18.538"></status>
</kw>
<msg timestamp="20201029 18:19:18.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021987917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022079431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:18.249" endtime="20201029 18:19:18.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021987917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022079431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:18.542" endtime="20201029 18:19:18.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.550" endtime="20201029 18:19:18.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.247" endtime="20201029 18:19:18.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.245" endtime="20201029 18:19:18.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:18.557" level="INFO">${RESULT} = [{'diff': 9.151400000000087e-05}, {'diff': 9.13190000000029e-05}, {'diff': 9.090299999999982e-05}, {'diff': 9.140300000000032e-05}, {'diff': 9.166700000000014e-05}, {'diff': 9.11390000000005e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:18.554" endtime="20201029 18:19:18.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:18.561" level="INFO">${ACCURACY} = {'diff': [9.151400000000087e-05, 9.13190000000029e-05, 9.090299999999982e-05, 9.140300000000032e-05, 9.166700000000014e-05, 9.11390000000005e-05, 9.08329999999985e-05, 9.077799999999969e-05, 9.1485999...</msg>
<status status="PASS" starttime="20201029 18:19:18.558" endtime="20201029 18:19:18.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.565" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 18:19:18.564" endtime="20201029 18:19:18.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.568" level="INFO">VALUE: [9.151400000000087e-05, 9.13190000000029e-05, 9.090299999999982e-05, 9.140300000000032e-05, 9.166700000000014e-05, 9.11390000000005e-05, 9.08329999999985e-05, 9.077799999999969e-05, 9.148599999999826e-05, 9.13199999999989e-05, 9.117999999999973e-05, 9.084699999999807e-05, 9.136100000000161e-05, 9.090200000000034e-05, 9.106899999999918e-05, 9.132000000000237e-05, 9.172199999999894e-05, 9.156999999999915e-05, 9.141699999999989e-05, 9.079099999999979e-05, 9.120900000000182e-05, 9.130499999999986e-05, 9.120799999999887e-05, 9.148599999999826e-05, 9.140300000000032e-05, 9.097199999999819e-05, 9.138900000000075e-05, 9.155599999999958e-05, 9.108400000000169e-05, 9.08199999999984e-05, 9.168000000000023e-05, 9.168000000000023e-05, 9.162500000000143e-05, 9.158299999999925e-05, 9.145900000000207e-05, 9.076400000000012e-05, 9.170799999999937e-05, 9.098599999999776e-05, 9.093099999999896e-05, 9.105600000000255e-05, 9.16520000000011e-05, 9.11390000000005e-05, 9.156899999999968e-05, 9.156899999999968e-05, 9.106899999999918e-05, 9.13199999999989e-05, 9.108400000000169e-05, 9.077799999999969e-05, 9.11390000000005e-05, 9.095799999999862e-05]</msg>
<status status="PASS" starttime="20201029 18:19:18.566" endtime="20201029 18:19:18.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.562" endtime="20201029 18:19:18.569"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:18.573" endtime="20201029 18:19:18.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.571" endtime="20201029 18:19:18.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.570" endtime="20201029 18:19:18.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.210" endtime="20201029 18:19:18.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.210" endtime="20201029 18:19:18.594"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.602" endtime="20201029 18:19:18.623"></status>
</kw>
<msg timestamp="20201029 18:19:18.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:18.601" endtime="20201029 18:19:18.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:18.624" endtime="20201029 18:19:18.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.627" endtime="20201029 18:19:18.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.598" endtime="20201029 18:19:18.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.596" endtime="20201029 18:19:18.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.636" endtime="20201029 18:19:18.926"></status>
</kw>
<msg timestamp="20201029 18:19:18.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023082514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023174361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:18.634" endtime="20201029 18:19:18.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023082514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023174361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:18.935" endtime="20201029 18:19:18.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.953" endtime="20201029 18:19:18.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.632" endtime="20201029 18:19:18.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.630" endtime="20201029 18:19:18.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:18.967" level="INFO">${RESULT} = [{'diff': 9.184700000000254e-05}, {'diff': 9.206999999999965e-05}, {'diff': 9.244500000000003e-05}, {'diff': 9.222300000000239e-05}, {'diff': 9.19589999999991e-05}, {'diff': 9.272199999999994e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:18.960" endtime="20201029 18:19:18.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:18.976" level="INFO">${ACCURACY} = {'diff': [9.184700000000254e-05, 9.206999999999965e-05, 9.244500000000003e-05, 9.222300000000239e-05, 9.19589999999991e-05, 9.272199999999994e-05, 9.262499999999896e-05, 9.206900000000018e-05, 9.20829...</msg>
<status status="PASS" starttime="20201029 18:19:18.969" endtime="20201029 18:19:18.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.985" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 18:19:18.983" endtime="20201029 18:19:18.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.990" level="INFO">VALUE: [9.184700000000254e-05, 9.206999999999965e-05, 9.244500000000003e-05, 9.222300000000239e-05, 9.19589999999991e-05, 9.272199999999994e-05, 9.262499999999896e-05, 9.206900000000018e-05, 9.208299999999975e-05, 9.191700000000039e-05, 9.238900000000175e-05, 9.213899999999803e-05, 9.208400000000269e-05, 9.187500000000168e-05, 9.198699999999824e-05, 9.199999999999833e-05, 9.206900000000018e-05, 9.180500000000036e-05, 9.244400000000055e-05, 9.190300000000082e-05, 9.236099999999914e-05, 9.266700000000114e-05, 9.211100000000236e-05, 9.238899999999828e-05, 9.248699999999874e-05, 9.238899999999828e-05, 9.211099999999889e-05, 9.223599999999901e-05, 9.179100000000079e-05, 9.248599999999926e-05, 9.206999999999965e-05, 9.190300000000082e-05, 9.190300000000082e-05, 9.202700000000147e-05, 9.236099999999914e-05, 9.231900000000043e-05, 9.190200000000134e-05, 9.237499999999871e-05, 9.21390000000015e-05, 9.194499999999953e-05, 9.211100000000236e-05, 9.206999999999965e-05, 9.195799999999962e-05, 9.237500000000218e-05, 9.229200000000076e-05, 9.208300000000322e-05, 9.174999999999808e-05, 9.194400000000005e-05, 9.266699999999767e-05, 9.224999999999858e-05]</msg>
<status status="PASS" starttime="20201029 18:19:18.987" endtime="20201029 18:19:18.993"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.978" endtime="20201029 18:19:18.994"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:19.002" endtime="20201029 18:19:19.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.999" endtime="20201029 18:19:19.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.996" endtime="20201029 18:19:19.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.594" endtime="20201029 18:19:19.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.594" endtime="20201029 18:19:19.024"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.032" endtime="20201029 18:19:19.052"></status>
</kw>
<msg timestamp="20201029 18:19:19.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:19.031" endtime="20201029 18:19:19.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:19.053" endtime="20201029 18:19:19.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.056" endtime="20201029 18:19:19.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.028" endtime="20201029 18:19:19.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.026" endtime="20201029 18:19:19.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.065" endtime="20201029 18:19:19.350"></status>
</kw>
<msg timestamp="20201029 18:19:19.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021878264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021971292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:19.063" endtime="20201029 18:19:19.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021878264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021971292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:19.354" endtime="20201029 18:19:19.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.362" endtime="20201029 18:19:19.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.061" endtime="20201029 18:19:19.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.059" endtime="20201029 18:19:19.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:19.368" level="INFO">${RESULT} = [{'diff': 9.302799999999847e-05}, {'diff': 9.341700000000189e-05}, {'diff': 9.367999999999876e-05}, {'diff': 9.287500000000268e-05}, {'diff': 9.312499999999946e-05}, {'diff': 9.341699999999842e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:19.365" endtime="20201029 18:19:19.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:19.376" level="INFO">${ACCURACY} = {'diff': [9.302799999999847e-05, 9.341700000000189e-05, 9.367999999999876e-05, 9.287500000000268e-05, 9.312499999999946e-05, 9.341699999999842e-05, 9.311099999999989e-05, 9.313899999999903e-05, 9.3513...</msg>
<status status="PASS" starttime="20201029 18:19:19.369" endtime="20201029 18:19:19.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.380" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 18:19:19.379" endtime="20201029 18:19:19.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.383" level="INFO">VALUE: [9.302799999999847e-05, 9.341700000000189e-05, 9.367999999999876e-05, 9.287500000000268e-05, 9.312499999999946e-05, 9.341699999999842e-05, 9.311099999999989e-05, 9.313899999999903e-05, 9.35139999999994e-05, 9.337499999999971e-05, 9.312499999999946e-05, 9.293100000000096e-05, 9.365199999999962e-05, 9.306899999999771e-05, 9.308300000000075e-05, 9.340299999999885e-05, 9.362499999999996e-05, 9.307000000000065e-05, 9.305599999999761e-05, 9.323699999999949e-05, 9.307000000000065e-05, 9.299999999999933e-05, 9.340199999999937e-05, 9.344400000000155e-05, 9.26940000000008e-05, 9.272199999999994e-05, 9.308300000000075e-05, 9.323600000000001e-05, 9.352799999999897e-05, 9.312499999999946e-05, 9.351299999999993e-05, 9.370900000000085e-05, 9.3333000000001e-05, 9.356899999999821e-05, 9.313899999999903e-05, 9.279199999999779e-05, 9.273599999999951e-05, 9.355600000000158e-05, 9.298599999999976e-05, 9.298599999999976e-05, 9.286099999999964e-05, 9.295799999999715e-05, 9.363899999999953e-05, 9.354099999999907e-05, 9.280600000000083e-05, 9.344400000000155e-05, 9.274999999999908e-05, 9.341699999999842e-05, 9.347300000000017e-05, 9.308300000000075e-05]</msg>
<status status="PASS" starttime="20201029 18:19:19.381" endtime="20201029 18:19:19.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.377" endtime="20201029 18:19:19.384"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:19.388" endtime="20201029 18:19:19.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.386" endtime="20201029 18:19:19.408"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.385" endtime="20201029 18:19:19.408"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.024" endtime="20201029 18:19:19.408"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.024" endtime="20201029 18:19:19.408"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.417" endtime="20201029 18:19:19.438"></status>
</kw>
<msg timestamp="20201029 18:19:19.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:19.416" endtime="20201029 18:19:19.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:19.439" endtime="20201029 18:19:19.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.441" endtime="20201029 18:19:19.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.413" endtime="20201029 18:19:19.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.411" endtime="20201029 18:19:19.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.450" endtime="20201029 18:19:19.742"></status>
</kw>
<msg timestamp="20201029 18:19:19.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021861542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021955889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:19.449" endtime="20201029 18:19:19.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021861542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021955889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:19.751" endtime="20201029 18:19:19.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.769" endtime="20201029 18:19:19.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.446" endtime="20201029 18:19:19.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.445" endtime="20201029 18:19:19.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:19.783" level="INFO">${RESULT} = [{'diff': 9.43469999999981e-05}, {'diff': 9.441700000000289e-05}, {'diff': 9.461100000000139e-05}, {'diff': 9.408400000000122e-05}, {'diff': 9.440200000000037e-05}, {'diff': 9.406899999999871e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:19.776" endtime="20201029 18:19:19.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:19.791" level="INFO">${ACCURACY} = {'diff': [9.43469999999981e-05, 9.441700000000289e-05, 9.461100000000139e-05, 9.408400000000122e-05, 9.440200000000037e-05, 9.406899999999871e-05, 9.367999999999876e-05, 9.426400000000015e-05, 9.47500...</msg>
<status status="PASS" starttime="20201029 18:19:19.785" endtime="20201029 18:19:19.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.800" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 18:19:19.798" endtime="20201029 18:19:19.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.806" level="INFO">VALUE: [9.43469999999981e-05, 9.441700000000289e-05, 9.461100000000139e-05, 9.408400000000122e-05, 9.440200000000037e-05, 9.406899999999871e-05, 9.367999999999876e-05, 9.426400000000015e-05, 9.475000000000108e-05, 9.461099999999792e-05, 9.390300000000282e-05, 9.387500000000021e-05, 9.390299999999935e-05, 9.408299999999828e-05, 9.455499999999964e-05, 9.444399999999908e-05, 9.431899999999896e-05, 9.408300000000175e-05, 9.390300000000282e-05, 9.452799999999997e-05, 9.449999999999736e-05, 9.393100000000196e-05, 9.416699999999917e-05, 9.425000000000058e-05, 9.394400000000205e-05, 9.376399999999965e-05, 9.442999999999951e-05, 9.443000000000298e-05, 9.430499999999939e-05, 9.425000000000058e-05, 9.454199999999954e-05, 9.430599999999886e-05, 9.448600000000126e-05, 9.408300000000175e-05, 9.46530000000001e-05, 9.444399999999908e-05, 9.449999999999736e-05, 9.390299999999935e-05, 9.406999999999818e-05, 9.388899999999978e-05, 9.373600000000051e-05, 9.375000000000008e-05, 9.373699999999999e-05, 9.462500000000096e-05, 9.445799999999865e-05, 9.391700000000239e-05, 9.390299999999935e-05, 9.443099999999899e-05, 9.413900000000003e-05, 9.431999999999843e-05]</msg>
<status status="PASS" starttime="20201029 18:19:19.803" endtime="20201029 18:19:19.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.793" endtime="20201029 18:19:19.813"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:19.816" endtime="20201029 18:19:19.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.815" endtime="20201029 18:19:19.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.814" endtime="20201029 18:19:19.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.409" endtime="20201029 18:19:19.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.409" endtime="20201029 18:19:19.837"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.846" endtime="20201029 18:19:19.866"></status>
</kw>
<msg timestamp="20201029 18:19:19.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:19.844" endtime="20201029 18:19:19.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:19.867" endtime="20201029 18:19:19.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.870" endtime="20201029 18:19:19.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.841" endtime="20201029 18:19:19.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.839" endtime="20201029 18:19:19.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.879" endtime="20201029 18:19:20.165"></status>
</kw>
<msg timestamp="20201029 18:19:20.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023049625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023145028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:19.877" endtime="20201029 18:19:20.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023049625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023145028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:20.169" endtime="20201029 18:19:20.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.178" endtime="20201029 18:19:20.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.875" endtime="20201029 18:19:20.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.873" endtime="20201029 18:19:20.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:20.184" level="INFO">${RESULT} = [{'diff': 9.540300000000085e-05}, {'diff': 9.479199999999979e-05}, {'diff': 9.533299999999953e-05}, {'diff': 9.547199999999922e-05}, {'diff': 9.473600000000151e-05}, {'diff': 9.49859999999983e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:20.181" endtime="20201029 18:19:20.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:20.188" level="INFO">${ACCURACY} = {'diff': [9.540300000000085e-05, 9.479199999999979e-05, 9.533299999999953e-05, 9.547199999999922e-05, 9.473600000000151e-05, 9.49859999999983e-05, 9.561099999999892e-05, 9.51530000000006e-05, 9.519399...</msg>
<status status="PASS" starttime="20201029 18:19:20.185" endtime="20201029 18:19:20.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.193" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 18:19:20.192" endtime="20201029 18:19:20.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.195" level="INFO">VALUE: [9.540300000000085e-05, 9.479199999999979e-05, 9.533299999999953e-05, 9.547199999999922e-05, 9.473600000000151e-05, 9.49859999999983e-05, 9.561099999999892e-05, 9.51530000000006e-05, 9.519399999999983e-05, 9.544400000000008e-05, 9.483299999999903e-05, 9.541699999999695e-05, 9.491699999999992e-05, 9.51530000000006e-05, 9.527700000000125e-05, 9.547300000000217e-05, 9.483299999999903e-05, 9.501299999999796e-05, 9.526399999999768e-05, 9.488900000000078e-05, 9.51530000000006e-05, 9.480599999999936e-05, 9.505599999999961e-05, 9.490300000000035e-05, 9.506999999999918e-05, 9.526299999999821e-05, 9.554100000000107e-05, 9.493000000000001e-05, 9.54720000000027e-05, 9.506899999999971e-05, 9.490300000000035e-05, 9.536099999999867e-05, 9.540300000000085e-05, 9.520899999999888e-05, 9.477700000000075e-05, 9.518000000000026e-05, 9.563799999999859e-05, 9.527800000000072e-05, 9.49720000000022e-05, 9.527800000000072e-05, 9.486100000000164e-05, 9.563899999999806e-05, 9.473600000000151e-05, 9.533400000000247e-05, 9.531999999999943e-05, 9.522200000000244e-05, 9.562499999999849e-05, 9.540300000000085e-05, 9.522199999999897e-05, 9.490300000000035e-05]</msg>
<status status="PASS" starttime="20201029 18:19:20.194" endtime="20201029 18:19:20.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.189" endtime="20201029 18:19:20.197"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:20.201" endtime="20201029 18:19:20.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.199" endtime="20201029 18:19:20.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.198" endtime="20201029 18:19:20.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.838" endtime="20201029 18:19:20.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.837" endtime="20201029 18:19:20.222"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.231" endtime="20201029 18:19:20.251"></status>
</kw>
<msg timestamp="20201029 18:19:20.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:20.229" endtime="20201029 18:19:20.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:20.252" endtime="20201029 18:19:20.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.255" endtime="20201029 18:19:20.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.226" endtime="20201029 18:19:20.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.224" endtime="20201029 18:19:20.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.264" endtime="20201029 18:19:20.556"></status>
</kw>
<msg timestamp="20201029 18:19:20.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022494639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022591292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:20.262" endtime="20201029 18:19:20.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022494639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022591292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:20.565" endtime="20201029 18:19:20.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.583" endtime="20201029 18:19:20.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.260" endtime="20201029 18:19:20.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.258" endtime="20201029 18:19:20.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:20.597" level="INFO">${RESULT} = [{'diff': 9.665299999999863e-05}, {'diff': 9.590300000000135e-05}, {'diff': 9.619399999999736e-05}, {'diff': 9.61669999999977e-05}, {'diff': 9.656900000000121e-05}, {'diff': 9.674999999999961e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:20.590" endtime="20201029 18:19:20.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:20.607" level="INFO">${ACCURACY} = {'diff': [9.665299999999863e-05, 9.590300000000135e-05, 9.619399999999736e-05, 9.61669999999977e-05, 9.656900000000121e-05, 9.674999999999961e-05, 9.644500000000056e-05, 9.641699999999795e-05, 9.64029...</msg>
<status status="PASS" starttime="20201029 18:19:20.599" endtime="20201029 18:19:20.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.616" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 18:19:20.614" endtime="20201029 18:19:20.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.621" level="INFO">VALUE: [9.665299999999863e-05, 9.590300000000135e-05, 9.619399999999736e-05, 9.61669999999977e-05, 9.656900000000121e-05, 9.674999999999961e-05, 9.644500000000056e-05, 9.641699999999795e-05, 9.640299999999838e-05, 9.626299999999921e-05, 9.590300000000135e-05, 9.618000000000126e-05, 9.595800000000015e-05, 9.661099999999992e-05, 9.588899999999831e-05, 9.644500000000056e-05, 9.645800000000065e-05, 9.613899999999856e-05, 9.602800000000147e-05, 9.601299999999896e-05, 9.591600000000144e-05, 9.633299999999706e-05, 9.631899999999749e-05, 9.588899999999831e-05, 9.631900000000096e-05, 9.576399999999818e-05, 9.658400000000025e-05, 9.657000000000068e-05, 9.607000000000018e-05, 9.599999999999886e-05, 9.626399999999868e-05, 9.591600000000144e-05, 9.61669999999977e-05, 9.663900000000253e-05, 9.579200000000079e-05, 9.644500000000056e-05, 9.602800000000147e-05, 9.623599999999954e-05, 9.581900000000046e-05, 9.642999999999805e-05, 9.674999999999961e-05, 9.655600000000111e-05, 9.656900000000121e-05, 9.606900000000071e-05, 9.600000000000233e-05, 9.62080000000004e-05, 9.641699999999795e-05, 9.623699999999902e-05, 9.588899999999831e-05, 9.58469999999996e-05]</msg>
<status status="PASS" starttime="20201029 18:19:20.619" endtime="20201029 18:19:20.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.609" endtime="20201029 18:19:20.624"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:20.628" endtime="20201029 18:19:20.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.626" endtime="20201029 18:19:20.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.625" endtime="20201029 18:19:20.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.223" endtime="20201029 18:19:20.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.222" endtime="20201029 18:19:20.649"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.657" endtime="20201029 18:19:20.677"></status>
</kw>
<msg timestamp="20201029 18:19:20.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:20.656" endtime="20201029 18:19:20.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:20.679" endtime="20201029 18:19:20.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.681" endtime="20201029 18:19:20.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.653" endtime="20201029 18:19:20.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.651" endtime="20201029 18:19:20.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.690" endtime="20201029 18:19:20.977"></status>
</kw>
<msg timestamp="20201029 18:19:20.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022147778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022244986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:20.689" endtime="20201029 18:19:20.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022147778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022244986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:20.982" endtime="20201029 18:19:20.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.990" endtime="20201029 18:19:20.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.686" endtime="20201029 18:19:20.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.684" endtime="20201029 18:19:20.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:20.996" level="INFO">${RESULT} = [{'diff': 9.72080000000014e-05}, {'diff': 9.727799999999925e-05}, {'diff': 9.738899999999981e-05}, {'diff': 9.725000000000011e-05}, {'diff': 9.709700000000085e-05}, {'diff': 9.745900000000113e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:20.993" endtime="20201029 18:19:20.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:21.001" level="INFO">${ACCURACY} = {'diff': [9.72080000000014e-05, 9.727799999999925e-05, 9.738899999999981e-05, 9.725000000000011e-05, 9.709700000000085e-05, 9.745900000000113e-05, 9.74860000000008e-05, 9.712499999999999e-05, 9.691600...</msg>
<status status="PASS" starttime="20201029 18:19:20.997" endtime="20201029 18:19:21.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.006" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 18:19:21.005" endtime="20201029 18:19:21.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.008" level="INFO">VALUE: [9.72080000000014e-05, 9.727799999999925e-05, 9.738899999999981e-05, 9.725000000000011e-05, 9.709700000000085e-05, 9.745900000000113e-05, 9.74860000000008e-05, 9.712499999999999e-05, 9.691600000000244e-05, 9.697200000000072e-05, 9.669400000000133e-05, 9.73059999999984e-05, 9.705600000000161e-05, 9.677800000000222e-05, 9.705600000000161e-05, 9.766700000000267e-05, 9.682000000000093e-05, 9.688899999999931e-05, 9.679100000000232e-05, 9.69019999999994e-05, 9.712499999999999e-05, 9.776400000000018e-05, 9.776400000000018e-05, 9.757000000000168e-05, 9.740299999999938e-05, 9.741599999999948e-05, 9.676399999999918e-05, 9.725000000000011e-05, 9.716599999999923e-05, 9.702800000000247e-05, 9.699999999999986e-05, 9.68059999999979e-05, 9.741699999999895e-05, 9.693099999999802e-05, 9.745900000000113e-05, 9.71799999999988e-05, 9.725000000000011e-05, 9.722200000000097e-05, 9.69019999999994e-05, 9.679099999999885e-05, 9.719399999999837e-05, 9.688899999999931e-05, 9.686100000000017e-05, 9.690300000000235e-05, 9.74860000000008e-05, 9.711199999999989e-05, 9.761099999999745e-05, 9.774999999999714e-05, 9.755499999999917e-05, 9.706900000000171e-05]</msg>
<status status="PASS" starttime="20201029 18:19:21.007" endtime="20201029 18:19:21.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.002" endtime="20201029 18:19:21.009"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:21.013" endtime="20201029 18:19:21.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.011" endtime="20201029 18:19:21.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.010" endtime="20201029 18:19:21.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.649" endtime="20201029 18:19:21.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.649" endtime="20201029 18:19:21.034"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.042" endtime="20201029 18:19:21.062"></status>
</kw>
<msg timestamp="20201029 18:19:21.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:21.041" endtime="20201029 18:19:21.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:21.064" endtime="20201029 18:19:21.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.066" endtime="20201029 18:19:21.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.038" endtime="20201029 18:19:21.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.036" endtime="20201029 18:19:21.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.075" endtime="20201029 18:19:21.367"></status>
</kw>
<msg timestamp="20201029 18:19:21.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022788361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022886861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:21.074" endtime="20201029 18:19:21.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022788361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022886861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:21.377" endtime="20201029 18:19:21.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.396" endtime="20201029 18:19:21.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.071" endtime="20201029 18:19:21.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.070" endtime="20201029 18:19:21.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:21.413" level="INFO">${RESULT} = [{'diff': 9.850000000000136e-05}, {'diff': 9.787499999999727e-05}, {'diff': 9.791699999999945e-05}, {'diff': 9.847199999999875e-05}, {'diff': 9.870900000000238e-05}, {'diff': 9.823700000000102e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:21.404" endtime="20201029 18:19:21.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:21.423" level="INFO">${ACCURACY} = {'diff': [9.850000000000136e-05, 9.787499999999727e-05, 9.791699999999945e-05, 9.847199999999875e-05, 9.870900000000238e-05, 9.823700000000102e-05, 9.797199999999825e-05, 9.855500000000017e-05, 9.8416...</msg>
<status status="PASS" starttime="20201029 18:19:21.415" endtime="20201029 18:19:21.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.433" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 18:19:21.431" endtime="20201029 18:19:21.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.436" level="INFO">VALUE: [9.850000000000136e-05, 9.787499999999727e-05, 9.791699999999945e-05, 9.847199999999875e-05, 9.870900000000238e-05, 9.823700000000102e-05, 9.797199999999825e-05, 9.855500000000017e-05, 9.841600000000048e-05, 9.808299999999881e-05, 9.78059999999989e-05, 9.863899999999759e-05, 9.78059999999989e-05, 9.816600000000023e-05, 9.791599999999998e-05, 9.808299999999881e-05, 9.795800000000215e-05, 9.780499999999942e-05, 9.806899999999924e-05, 9.78059999999989e-05, 9.83059999999994e-05, 9.822300000000145e-05, 9.862499999999802e-05, 9.844399999999962e-05, 9.873599999999857e-05, 9.773599999999757e-05, 9.806899999999924e-05, 9.829199999999982e-05, 9.841699999999995e-05, 9.856999999999921e-05, 9.768099999999877e-05, 9.837500000000124e-05, 9.81799999999998e-05, 9.837500000000124e-05, 9.795799999999869e-05, 9.836100000000167e-05, 9.793100000000249e-05, 9.847199999999875e-05, 9.801400000000043e-05, 9.863900000000106e-05, 9.8721999999999e-05, 9.840300000000038e-05, 9.776400000000018e-05, 9.856899999999974e-05, 9.856899999999974e-05, 9.806900000000271e-05, 9.84860000000018e-05, 9.805599999999914e-05, 9.829199999999982e-05, 9.841699999999995e-05]</msg>
<status status="PASS" starttime="20201029 18:19:21.435" endtime="20201029 18:19:21.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.426" endtime="20201029 18:19:21.439"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:21.445" endtime="20201029 18:19:21.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.443" endtime="20201029 18:19:21.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.441" endtime="20201029 18:19:21.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.035" endtime="20201029 18:19:21.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.034" endtime="20201029 18:19:21.467"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.476" endtime="20201029 18:19:21.495"></status>
</kw>
<msg timestamp="20201029 18:19:21.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:21.474" endtime="20201029 18:19:21.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:21.497" endtime="20201029 18:19:21.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.499" endtime="20201029 18:19:21.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.471" endtime="20201029 18:19:21.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.469" endtime="20201029 18:19:21.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.508" endtime="20201029 18:19:21.797"></status>
</kw>
<msg timestamp="20201029 18:19:21.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022275736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022375417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:21.507" endtime="20201029 18:19:21.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022275736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022375417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:21.801" endtime="20201029 18:19:21.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.809" endtime="20201029 18:19:21.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.504" endtime="20201029 18:19:21.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.503" endtime="20201029 18:19:21.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:21.816" level="INFO">${RESULT} = [{'diff': 9.968100000000077e-05}, {'diff': 9.897299999999873e-05}, {'diff': 9.900000000000186e-05}, {'diff': 9.956900000000074e-05}, {'diff': 9.955500000000117e-05}, {'diff': 9.893100000000002e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:21.813" endtime="20201029 18:19:21.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:21.821" level="INFO">${ACCURACY} = {'diff': [9.968100000000077e-05, 9.897299999999873e-05, 9.900000000000186e-05, 9.956900000000074e-05, 9.955500000000117e-05, 9.893100000000002e-05, 9.966699999999773e-05, 9.909800000000232e-05, 9.9445...</msg>
<status status="PASS" starttime="20201029 18:19:21.817" endtime="20201029 18:19:21.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.825" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 18:19:21.824" endtime="20201029 18:19:21.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.828" level="INFO">VALUE: [9.968100000000077e-05, 9.897299999999873e-05, 9.900000000000186e-05, 9.956900000000074e-05, 9.955500000000117e-05, 9.893100000000002e-05, 9.966699999999773e-05, 9.909800000000232e-05, 9.944500000000009e-05, 9.909699999999938e-05, 9.895799999999969e-05, 9.94999999999989e-05, 9.891700000000045e-05, 9.95280000000015e-05, 9.968100000000077e-05, 9.879200000000032e-05, 9.879200000000032e-05, 9.879200000000032e-05, 9.963799999999912e-05, 9.926400000000168e-05, 9.948599999999932e-05, 9.911099999999895e-05, 9.965300000000163e-05, 9.937499999999877e-05, 9.959699999999988e-05, 9.973600000000304e-05, 9.893100000000002e-05, 9.95419999999976e-05, 9.902700000000153e-05, 9.959699999999988e-05, 9.879200000000032e-05, 9.954200000000107e-05, 9.900000000000186e-05, 9.923599999999907e-05, 9.879200000000032e-05, 9.894499999999959e-05, 9.881999999999946e-05, 9.90410000000011e-05, 9.911099999999895e-05, 9.908299999999981e-05, 9.933399999999953e-05, 9.973599999999957e-05, 9.875000000000161e-05, 9.976400000000218e-05, 9.890300000000088e-05, 9.955600000000064e-05, 9.898599999999882e-05, 9.958300000000031e-05, 9.909699999999938e-05, 9.911099999999895e-05]</msg>
<status status="PASS" starttime="20201029 18:19:21.826" endtime="20201029 18:19:21.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.821" endtime="20201029 18:19:21.829"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:21.833" endtime="20201029 18:19:21.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.831" endtime="20201029 18:19:21.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.830" endtime="20201029 18:19:21.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.468" endtime="20201029 18:19:21.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.467" endtime="20201029 18:19:21.853"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.862" endtime="20201029 18:19:21.883"></status>
</kw>
<msg timestamp="20201029 18:19:21.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:21.860" endtime="20201029 18:19:21.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:21.884" endtime="20201029 18:19:21.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.886" endtime="20201029 18:19:21.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.858" endtime="20201029 18:19:21.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.856" endtime="20201029 18:19:21.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.895" endtime="20201029 18:19:22.182"></status>
</kw>
<msg timestamp="20201029 18:19:22.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021873514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021973833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:21.894" endtime="20201029 18:19:22.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021873514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021973833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:22.186" endtime="20201029 18:19:22.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.194" endtime="20201029 18:19:22.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.891" endtime="20201029 18:19:22.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.890" endtime="20201029 18:19:22.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:22.201" level="INFO">${RESULT} = [{'diff': 0.00010031900000000149}, {'diff': 0.00010058299999999784}, {'diff': 0.00010011099999999995}, {'diff': 0.00010002799999999853}, {'diff': 9.983300000000056e-05}, {'diff': 9.980599999999742e-05...</msg>
<status status="PASS" starttime="20201029 18:19:22.198" endtime="20201029 18:19:22.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:22.205" level="INFO">${ACCURACY} = {'diff': [0.00010031900000000149, 0.00010058299999999784, 0.00010011099999999995, 0.00010002799999999853, 9.983300000000056e-05, 9.980599999999742e-05, 9.977799999999828e-05, 0.00010044400000000162, 0...</msg>
<status status="PASS" starttime="20201029 18:19:22.202" endtime="20201029 18:19:22.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.209" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 18:19:22.208" endtime="20201029 18:19:22.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.211" level="INFO">VALUE: [0.00010031900000000149, 0.00010058299999999784, 0.00010011099999999995, 0.00010002799999999853, 9.983300000000056e-05, 9.980599999999742e-05, 9.977799999999828e-05, 0.00010044400000000162, 0.00010061199999999992, 0.0001005410000000026, 0.00010016599999999876, 9.994400000000112e-05, 0.000100722000000001, 0.00010066699999999873, 9.990300000000188e-05, 9.973599999999957e-05, 0.00010037499999999977, 0.00010048600000000033, 0.00010059700000000088, 0.00010015199999999919, 0.00010008300000000081, 0.00010054200000000207, 0.0001003199999999975, 0.00010011099999999995, 0.00010038900000000281, 0.00010029200000000182, 0.00010015300000000213, 9.974999999999914e-05, 0.00010026399999999921, 9.980500000000142e-05, 0.00010038899999999934, 0.0001003060000000014, 0.00010008400000000028, 0.00010070900000000091, 0.00010033400000000053, 0.00010029100000000235, 9.997200000000026e-05, 0.00010011099999999995, 0.00010026399999999921, 0.00010026399999999921, 9.997200000000026e-05, 0.00010044399999999815, 9.9722e-05, 0.0001004999999999999, 0.00010051299999999999, 0.00010005500000000167, 0.00010001400000000243, 0.00010070800000000144, 0.00010016699999999823, 0.00010016599999999876]</msg>
<status status="PASS" starttime="20201029 18:19:22.210" endtime="20201029 18:19:22.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.206" endtime="20201029 18:19:22.213"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:22.217" endtime="20201029 18:19:22.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.215" endtime="20201029 18:19:22.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.214" endtime="20201029 18:19:22.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.854" endtime="20201029 18:19:22.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.854" endtime="20201029 18:19:22.237"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.247" endtime="20201029 18:19:22.268"></status>
</kw>
<msg timestamp="20201029 18:19:22.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:22.245" endtime="20201029 18:19:22.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:22.269" endtime="20201029 18:19:22.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.272" endtime="20201029 18:19:22.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.242" endtime="20201029 18:19:22.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.240" endtime="20201029 18:19:22.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.280" endtime="20201029 18:19:22.565"></status>
</kw>
<msg timestamp="20201029 18:19:22.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023896681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023998278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:22.279" endtime="20201029 18:19:22.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023896681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023998278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:22.569" endtime="20201029 18:19:22.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.577" endtime="20201029 18:19:22.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.276" endtime="20201029 18:19:22.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.275" endtime="20201029 18:19:22.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:22.584" level="INFO">${RESULT} = [{'diff': 0.00010159700000000188}, {'diff': 0.00010158300000000231}, {'diff': 0.00010080599999999842}, {'diff': 0.00010083300000000156}, {'diff': 0.00010070900000000091}, {'diff': 0.000101583999999998...</msg>
<status status="PASS" starttime="20201029 18:19:22.581" endtime="20201029 18:19:22.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:22.588" level="INFO">${ACCURACY} = {'diff': [0.00010159700000000188, 0.00010158300000000231, 0.00010080599999999842, 0.00010083300000000156, 0.00010070900000000091, 0.00010158399999999831, 0.00010101300000000049, 0.00010161099999999798...</msg>
<status status="PASS" starttime="20201029 18:19:22.585" endtime="20201029 18:19:22.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.592" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 18:19:22.591" endtime="20201029 18:19:22.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.595" level="INFO">VALUE: [0.00010159700000000188, 0.00010158300000000231, 0.00010080599999999842, 0.00010083300000000156, 0.00010070900000000091, 0.00010158399999999831, 0.00010101300000000049, 0.00010161099999999798, 0.00010112500000000052, 0.00010172199999999854, 0.00010148599999999786, 0.00010156899999999927, 0.0001016809999999993, 0.00010108400000000128, 0.00010105600000000214, 0.00010125000000000065, 0.00010126400000000021, 0.00010088899999999984, 0.00010142999999999958, 0.00010130499999999945, 0.00010112500000000052, 0.00010115299999999966, 0.00010101399999999996, 0.00010163900000000059, 0.00010143099999999905, 0.00010144499999999862, 0.00010167999999999983, 0.00010123600000000108, 0.00010141699999999948, 0.000101722000000002, 0.00010130499999999945, 0.00010168100000000277, 0.00010170799999999897, 0.00010148599999999786, 0.00010107000000000171, 0.00010172300000000148, 0.00010098600000000083, 0.00010113900000000009, 0.00010097199999999779, 0.00010140299999999991, 0.00010126400000000021, 0.00010156999999999874, 0.00010158400000000178, 0.00010075000000000014, 0.00010157000000000221, 0.00010099999999999693, 0.00010144399999999915, 0.00010088899999999984, 0.00010144400000000262, 0.00010113900000000009]</msg>
<status status="PASS" starttime="20201029 18:19:22.593" endtime="20201029 18:19:22.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.588" endtime="20201029 18:19:22.597"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:22.600" endtime="20201029 18:19:22.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.599" endtime="20201029 18:19:22.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.598" endtime="20201029 18:19:22.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.238" endtime="20201029 18:19:22.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.237" endtime="20201029 18:19:22.621"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.630" endtime="20201029 18:19:22.650"></status>
</kw>
<msg timestamp="20201029 18:19:22.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:22.628" endtime="20201029 18:19:22.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:22.652" endtime="20201029 18:19:22.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.654" endtime="20201029 18:19:22.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.626" endtime="20201029 18:19:22.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.624" endtime="20201029 18:19:22.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.663" endtime="20201029 18:19:22.949"></status>
</kw>
<msg timestamp="20201029 18:19:22.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022223833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022326306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:22.661" endtime="20201029 18:19:22.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022223833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022326306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:22.953" endtime="20201029 18:19:22.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.961" endtime="20201029 18:19:22.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.659" endtime="20201029 18:19:22.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.657" endtime="20201029 18:19:22.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:22.968" level="INFO">${RESULT} = [{'diff': 0.00010247300000000223}, {'diff': 0.00010244400000000015}, {'diff': 0.00010198600000000183}, {'diff': 0.00010226399999999775}, {'diff': 0.00010252800000000103}, {'diff': 0.000102582999999999...</msg>
<status status="PASS" starttime="20201029 18:19:22.965" endtime="20201029 18:19:22.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:22.975" level="INFO">${ACCURACY} = {'diff': [0.00010247300000000223, 0.00010244400000000015, 0.00010198600000000183, 0.00010226399999999775, 0.00010252800000000103, 0.00010258299999999984, 0.00010258399999999931, 0.00010188900000000084...</msg>
<status status="PASS" starttime="20201029 18:19:22.969" endtime="20201029 18:19:22.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.979" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 18:19:22.978" endtime="20201029 18:19:22.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.982" level="INFO">VALUE: [0.00010247300000000223, 0.00010244400000000015, 0.00010198600000000183, 0.00010226399999999775, 0.00010252800000000103, 0.00010258299999999984, 0.00010258399999999931, 0.00010188900000000084, 0.00010234799999999863, 0.00010265300000000116, 0.00010258299999999984, 0.00010194399999999965, 0.00010188900000000084, 0.00010184699999999866, 0.0001022359999999986, 0.00010191699999999998, 0.00010227800000000078, 0.00010202799999999707, 0.00010208399999999881, 0.00010259699999999941, 0.00010244400000000015, 0.00010261099999999898, 0.00010170799999999897, 0.0001020000000000014, 0.00010244400000000015, 0.0001021809999999998, 0.00010194499999999912, 0.000102416000000001, 0.00010208299999999934, 0.00010226400000000122, 0.00010275000000000215, 0.0001023480000000021, 0.00010226400000000122, 0.0001023749999999983, 0.00010244499999999962, 0.00010265300000000116, 0.00010191699999999998, 0.00010208299999999934, 0.00010190200000000094, 0.00010173600000000158, 0.00010216699999999676, 0.00010265300000000116, 0.00010172199999999854, 0.00010201400000000097, 0.00010195899999999869, 0.00010274999999999868, 0.00010244499999999962, 0.00010183299999999909, 0.00010243000000000058, 0.00010274999999999868]</msg>
<status status="PASS" starttime="20201029 18:19:22.980" endtime="20201029 18:19:22.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.976" endtime="20201029 18:19:22.983"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:22.987" endtime="20201029 18:19:23.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.985" endtime="20201029 18:19:23.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.984" endtime="20201029 18:19:23.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.622" endtime="20201029 18:19:23.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.621" endtime="20201029 18:19:23.007"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.016" endtime="20201029 18:19:23.036"></status>
</kw>
<msg timestamp="20201029 18:19:23.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:23.014" endtime="20201029 18:19:23.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:23.037" endtime="20201029 18:19:23.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.040" endtime="20201029 18:19:23.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.012" endtime="20201029 18:19:23.042"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.010" endtime="20201029 18:19:23.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.049" endtime="20201029 18:19:23.336"></status>
</kw>
<msg timestamp="20201029 18:19:23.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021821056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021923917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:23.047" endtime="20201029 18:19:23.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021821056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021923917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:23.340" endtime="20201029 18:19:23.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.348" endtime="20201029 18:19:23.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.045" endtime="20201029 18:19:23.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.043" endtime="20201029 18:19:23.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:23.354" level="INFO">${RESULT} = [{'diff': 0.0001028610000000027}, {'diff': 0.00010302799999999807}, {'diff': 0.00010297300000000273}, {'diff': 0.0001028749999999988}, {'diff': 0.00010333300000000059}, {'diff': 0.00010277700000000181...</msg>
<status status="PASS" starttime="20201029 18:19:23.351" endtime="20201029 18:19:23.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:23.358" level="INFO">${ACCURACY} = {'diff': [0.0001028610000000027, 0.00010302799999999807, 0.00010297300000000273, 0.0001028749999999988, 0.00010333300000000059, 0.00010277700000000181, 0.00010268000000000083, 0.00010297200000000326, ...</msg>
<status status="PASS" starttime="20201029 18:19:23.355" endtime="20201029 18:19:23.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.363" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 18:19:23.362" endtime="20201029 18:19:23.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.365" level="INFO">VALUE: [0.0001028610000000027, 0.00010302799999999807, 0.00010297300000000273, 0.0001028749999999988, 0.00010333300000000059, 0.00010277700000000181, 0.00010268000000000083, 0.00010297200000000326, 0.00010305600000000067, 0.00010349999999999943, 0.00010284799999999913, 0.00010305600000000067, 0.00010302700000000206, 0.000103513999999999, 0.00010320800000000047, 0.00010344400000000115, 0.00010372200000000054, 0.00010374999999999968, 0.00010288899999999837, 0.00010280600000000042, 0.00010291700000000098, 0.00010318000000000133, 0.00010279099999999791, 0.00010306900000000077, 0.00010290299999999794, 0.00010331899999999755, 0.0001033200000000005, 0.00010330599999999746, 0.0001037360000000001, 0.0001031949999999969, 0.00010362500000000302, 0.00010369399999999793, 0.0001030550000000012, 0.00010317999999999786, 0.00010348599999999986, 0.00010313900000000209, 0.00010305600000000067, 0.00010318099999999733, 0.00010361099999999998, 0.00010279099999999791, 0.00010359700000000041, 0.00010308300000000034, 0.00010319399999999743, 0.00010279200000000085, 0.00010343099999999758, 0.00010338899999999887, 0.00010324999999999918, 0.00010363899999999912, 0.00010349999999999943, 0.00010376399999999925]</msg>
<status status="PASS" starttime="20201029 18:19:23.364" endtime="20201029 18:19:23.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.359" endtime="20201029 18:19:23.366"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:23.370" endtime="20201029 18:19:23.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.369" endtime="20201029 18:19:23.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.367" endtime="20201029 18:19:23.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.008" endtime="20201029 18:19:23.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.008" endtime="20201029 18:19:23.391"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.399" endtime="20201029 18:19:23.420"></status>
</kw>
<msg timestamp="20201029 18:19:23.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:23.398" endtime="20201029 18:19:23.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:23.422" endtime="20201029 18:19:23.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.424" endtime="20201029 18:19:23.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.395" endtime="20201029 18:19:23.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.393" endtime="20201029 18:19:23.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.433" endtime="20201029 18:19:23.719"></status>
</kw>
<msg timestamp="20201029 18:19:23.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022908556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023013, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:19:23.432" endtime="20201029 18:19:23.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022908556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023013, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:19:23.723" endtime="20201029 18:19:23.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.731" endtime="20201029 18:19:23.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.429" endtime="20201029 18:19:23.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.427" endtime="20201029 18:19:23.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:23.737" level="INFO">${RESULT} = [{'diff': 0.00010444399999999868}, {'diff': 0.0001041810000000018}, {'diff': 0.00010454199999999914}, {'diff': 0.00010388899999999937}, {'diff': 0.00010431900000000202}, {'diff': 0.0001038889999999993...</msg>
<status status="PASS" starttime="20201029 18:19:23.734" endtime="20201029 18:19:23.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:23.741" level="INFO">${ACCURACY} = {'diff': [0.00010444399999999868, 0.0001041810000000018, 0.00010454199999999914, 0.00010388899999999937, 0.00010431900000000202, 0.00010388899999999937, 0.00010429199999999889, 0.00010438899999999987,...</msg>
<status status="PASS" starttime="20201029 18:19:23.738" endtime="20201029 18:19:23.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.746" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 18:19:23.745" endtime="20201029 18:19:23.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.748" level="INFO">VALUE: [0.00010444399999999868, 0.0001041810000000018, 0.00010454199999999914, 0.00010388899999999937, 0.00010431900000000202, 0.00010388899999999937, 0.00010429199999999889, 0.00010438899999999987, 0.00010390299999999894, 0.00010415299999999919, 0.00010390300000000241, 0.00010411100000000048, 0.00010459700000000141, 0.00010406900000000177, 0.00010416699999999876, 0.00010405499999999873, 0.00010412500000000005, 0.00010472199999999807, 0.00010438899999999987, 0.00010391700000000198, 0.00010380599999999796, 0.00010458300000000184, 0.00010388899999999937, 0.00010461099999999751, 0.00010441699999999901, 0.0001040420000000021, 0.00010416700000000223, 0.00010434800000000063, 0.00010391699999999851, 0.00010431999999999803, 0.00010405499999999873, 0.00010463800000000065, 0.00010379100000000238, 0.00010372200000000054, 0.00010408299999999787, 0.00010390300000000241, 0.00010398600000000036, 0.00010391699999999851, 0.00010397300000000026, 0.00010422300000000051, 0.00010445799999999825, 0.0001042360000000006, 0.00010388899999999937, 0.00010433300000000159, 0.00010440299999999944, 0.00010459800000000088, 0.00010390199999999947, 0.00010377799999999882, 0.0001040139999999995, 0.00010440300000000291]</msg>
<status status="PASS" starttime="20201029 18:19:23.747" endtime="20201029 18:19:23.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.742" endtime="20201029 18:19:23.750"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:23.754" endtime="20201029 18:19:23.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.752" endtime="20201029 18:19:23.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.751" endtime="20201029 18:19:23.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.392" endtime="20201029 18:19:23.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.391" endtime="20201029 18:19:23.774"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.783" endtime="20201029 18:19:23.804"></status>
</kw>
<msg timestamp="20201029 18:19:23.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:23.781" endtime="20201029 18:19:23.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:23.806" endtime="20201029 18:19:23.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.808" endtime="20201029 18:19:23.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.779" endtime="20201029 18:19:23.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.777" endtime="20201029 18:19:23.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.817" endtime="20201029 18:19:24.102"></status>
</kw>
<msg timestamp="20201029 18:19:24.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022029347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022134556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:23.815" endtime="20201029 18:19:24.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022029347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022134556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:24.106" endtime="20201029 18:19:24.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.114" endtime="20201029 18:19:24.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.813" endtime="20201029 18:19:24.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.811" endtime="20201029 18:19:24.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:24.120" level="INFO">${RESULT} = [{'diff': 0.00010520899999999847}, {'diff': 0.00010541600000000054}, {'diff': 0.00010563900000000112}, {'diff': 0.00010567999999999689}, {'diff': 0.00010477700000000034}, {'diff': 0.000105166999999999...</msg>
<status status="PASS" starttime="20201029 18:19:24.117" endtime="20201029 18:19:24.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:24.125" level="INFO">${ACCURACY} = {'diff': [0.00010520899999999847, 0.00010541600000000054, 0.00010563900000000112, 0.00010567999999999689, 0.00010477700000000034, 0.00010516699999999976, 0.00010540300000000044, 0.00010523599999999814...</msg>
<status status="PASS" starttime="20201029 18:19:24.121" endtime="20201029 18:19:24.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.130" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 18:19:24.129" endtime="20201029 18:19:24.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.132" level="INFO">VALUE: [0.00010520899999999847, 0.00010541600000000054, 0.00010563900000000112, 0.00010567999999999689, 0.00010477700000000034, 0.00010516699999999976, 0.00010540300000000044, 0.00010523599999999814, 0.00010498600000000136, 0.0001052360000000016, 0.00010498600000000136, 0.00010475000000000068, 0.000105207999999999, 0.00010512500000000105, 0.0001055689999999998, 0.00010506900000000277, 0.00010549999999999796, 0.00010551399999999753, 0.00010493099999999908, 0.00010513800000000115, 0.00010493000000000308, 0.00010479099999999991, 0.00010537499999999783, 0.00010538900000000087, 0.00010500000000000093, 0.00010543099999999958, 0.00010523599999999814, 0.00010530499999999998, 0.00010544400000000315, 0.00010495799999999875, 0.00010475000000000068, 0.0001051940000000029, 0.00010563900000000112, 0.00010530599999999946, 0.00010529100000000041, 0.000104820000000002, 0.00010541700000000001, 0.00010558299999999937, 0.00010476400000000025, 0.00010540300000000044, 0.00010484699999999819, 0.0001052360000000016, 0.0001053339999999986, 0.0001057360000000021, 0.0001050559999999992, 0.00010566599999999732, 0.00010529100000000041, 0.00010522199999999857, 0.00010554200000000014, 0.00010563899999999765]</msg>
<status status="PASS" starttime="20201029 18:19:24.131" endtime="20201029 18:19:24.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.126" endtime="20201029 18:19:24.133"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:24.137" endtime="20201029 18:19:24.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.135" endtime="20201029 18:19:24.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.134" endtime="20201029 18:19:24.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.775" endtime="20201029 18:19:24.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.775" endtime="20201029 18:19:24.157"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.166" endtime="20201029 18:19:24.186"></status>
</kw>
<msg timestamp="20201029 18:19:24.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:24.165" endtime="20201029 18:19:24.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:24.188" endtime="20201029 18:19:24.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.190" endtime="20201029 18:19:24.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.162" endtime="20201029 18:19:24.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.160" endtime="20201029 18:19:24.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.199" endtime="20201029 18:19:24.486"></status>
</kw>
<msg timestamp="20201029 18:19:24.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021883056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021989542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:24.198" endtime="20201029 18:19:24.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021883056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021989542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:24.490" endtime="20201029 18:19:24.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.498" endtime="20201029 18:19:24.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.195" endtime="20201029 18:19:24.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.193" endtime="20201029 18:19:24.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:24.504" level="INFO">${RESULT} = [{'diff': 0.00010648599999999939}, {'diff': 0.00010609800000000238}, {'diff': 0.00010601299999999855}, {'diff': 0.00010658300000000037}, {'diff': 0.0001057499999999982}, {'diff': 0.000106514000000002}...</msg>
<status status="PASS" starttime="20201029 18:19:24.501" endtime="20201029 18:19:24.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:24.508" level="INFO">${ACCURACY} = {'diff': [0.00010648599999999939, 0.00010609800000000238, 0.00010601299999999855, 0.00010658300000000037, 0.0001057499999999982, 0.000106514000000002, 0.00010623699999999861, 0.00010640300000000144, 0...</msg>
<status status="PASS" starttime="20201029 18:19:24.505" endtime="20201029 18:19:24.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.513" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 18:19:24.511" endtime="20201029 18:19:24.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.515" level="INFO">VALUE: [0.00010648599999999939, 0.00010609800000000238, 0.00010601299999999855, 0.00010658300000000037, 0.0001057499999999982, 0.000106514000000002, 0.00010623699999999861, 0.00010640300000000144, 0.00010666700000000126, 0.00010594499999999965, 0.00010613900000000162, 0.0001063889999999984, 0.00010636099999999926, 0.0001062360000000026, 0.00010627799999999785, 0.00010640299999999797, 0.00010615299999999772, 0.0001061949999999999, 0.00010669400000000093, 0.00010622199999999957, 0.00010581900000000005, 0.00010605500000000073, 0.00010599999999999846, 0.00010659699999999994, 0.00010640299999999797, 0.00010584699999999919, 0.00010651399999999853, 0.00010672299999999954, 0.00010657000000000028, 0.0001062499999999987, 0.00010580500000000048, 0.00010591600000000104, 0.00010649999999999896, 0.00010608399999999935, 0.00010606999999999978, 0.00010594399999999671, 0.00010670899999999997, 0.0001062499999999987, 0.00010581900000000005, 0.00010598599999999889, 0.00010668100000000083, 0.00010662499999999908, 0.00010606999999999978, 0.00010615300000000119, 0.00010654200000000114, 0.00010581999999999953, 0.00010668000000000136, 0.00010638799999999893, 0.00010593000000000061, 0.00010644500000000015]</msg>
<status status="PASS" starttime="20201029 18:19:24.514" endtime="20201029 18:19:24.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.509" endtime="20201029 18:19:24.516"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:24.520" endtime="20201029 18:19:24.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.518" endtime="20201029 18:19:24.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.517" endtime="20201029 18:19:24.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.158" endtime="20201029 18:19:24.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.158" endtime="20201029 18:19:24.540"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.550" endtime="20201029 18:19:24.571"></status>
</kw>
<msg timestamp="20201029 18:19:24.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:24.548" endtime="20201029 18:19:24.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:24.572" endtime="20201029 18:19:24.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.575" endtime="20201029 18:19:24.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.545" endtime="20201029 18:19:24.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.543" endtime="20201029 18:19:24.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.585" endtime="20201029 18:19:24.870"></status>
</kw>
<msg timestamp="20201029 18:19:24.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023415528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023522875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:24.583" endtime="20201029 18:19:24.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023415528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023522875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:24.874" endtime="20201029 18:19:24.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.882" endtime="20201029 18:19:24.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.580" endtime="20201029 18:19:24.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.578" endtime="20201029 18:19:24.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:24.889" level="INFO">${RESULT} = [{'diff': 0.00010734699999999722}, {'diff': 0.00010686099999999976}, {'diff': 0.00010751399999999953}, {'diff': 0.00010734800000000017}, {'diff': 0.00010740300000000244}, {'diff': 0.000106762999999999...</msg>
<status status="PASS" starttime="20201029 18:19:24.886" endtime="20201029 18:19:24.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:24.893" level="INFO">${ACCURACY} = {'diff': [0.00010734699999999722, 0.00010686099999999976, 0.00010751399999999953, 0.00010734800000000017, 0.00010740300000000244, 0.0001067629999999993, 0.00010741600000000254, 0.00010761099999999704,...</msg>
<status status="PASS" starttime="20201029 18:19:24.890" endtime="20201029 18:19:24.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.897" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 18:19:24.896" endtime="20201029 18:19:24.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.899" level="INFO">VALUE: [0.00010734699999999722, 0.00010686099999999976, 0.00010751399999999953, 0.00010734800000000017, 0.00010740300000000244, 0.0001067629999999993, 0.00010741600000000254, 0.00010761099999999704, 0.00010694500000000065, 0.0001070829999999974, 0.00010720900000000047, 0.00010743099999999811, 0.00010709700000000044, 0.00010698699999999936, 0.00010715200000000272, 0.00010704200000000164, 0.00010730499999999851, 0.00010756899999999833, 0.00010681899999999758, 0.00010713899999999915, 0.000107514000000003, 0.0001072499999999997, 0.00010754199999999867, 0.00010745800000000125, 0.00010693000000000161, 0.00010756899999999833, 0.00010747200000000082, 0.00010709700000000044, 0.00010736100000000026, 0.00010761100000000051, 0.00010673599999999964, 0.00010677800000000182, 0.00010708300000000087, 0.00010687499999999933, 0.00010690300000000194, 0.00010709700000000044, 0.00010688900000000237, 0.00010693100000000108, 0.0001077089999999975, 0.00010698599999999989, 0.00010695900000000022, 0.0001072629999999998, 0.0001074019999999995, 0.00010713899999999915, 0.00010683300000000062, 0.00010713900000000262, 0.00010715299999999872, 0.00010693100000000108, 0.00010705500000000173, 0.0001072499999999997]</msg>
<status status="PASS" starttime="20201029 18:19:24.898" endtime="20201029 18:19:24.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.893" endtime="20201029 18:19:24.906"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:24.910" endtime="20201029 18:19:24.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.908" endtime="20201029 18:19:24.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.907" endtime="20201029 18:19:24.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.541" endtime="20201029 18:19:24.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.541" endtime="20201029 18:19:24.931"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.939" endtime="20201029 18:19:24.959"></status>
</kw>
<msg timestamp="20201029 18:19:24.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:24.938" endtime="20201029 18:19:24.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:24.960" endtime="20201029 18:19:24.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.963" endtime="20201029 18:19:24.964"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.935" endtime="20201029 18:19:24.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.933" endtime="20201029 18:19:24.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.972" endtime="20201029 18:19:25.257"></status>
</kw>
<msg timestamp="20201029 18:19:25.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021840278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021948611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:24.970" endtime="20201029 18:19:25.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021840278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021948611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:25.261" endtime="20201029 18:19:25.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.269" endtime="20201029 18:19:25.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.968" endtime="20201029 18:19:25.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.966" endtime="20201029 18:19:25.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:25.276" level="INFO">${RESULT} = [{'diff': 0.00010833299999999865}, {'diff': 0.00010844500000000215}, {'diff': 0.00010847199999999835}, {'diff': 0.0001078889999999999}, {'diff': 0.00010773600000000064}, {'diff': 0.0001080549999999992...</msg>
<status status="PASS" starttime="20201029 18:19:25.273" endtime="20201029 18:19:25.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:25.281" level="INFO">${ACCURACY} = {'diff': [0.00010833299999999865, 0.00010844500000000215, 0.00010847199999999835, 0.0001078889999999999, 0.00010773600000000064, 0.00010805499999999926, 0.00010859700000000194, 0.00010812500000000058,...</msg>
<status status="PASS" starttime="20201029 18:19:25.277" endtime="20201029 18:19:25.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.285" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 18:19:25.284" endtime="20201029 18:19:25.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.288" level="INFO">VALUE: [0.00010833299999999865, 0.00010844500000000215, 0.00010847199999999835, 0.0001078889999999999, 0.00010773600000000064, 0.00010805499999999926, 0.00010859700000000194, 0.00010812500000000058, 0.00010829199999999942, 0.00010863900000000065, 0.00010826400000000028, 0.00010823600000000114, 0.00010842999999999964, 0.00010804200000000264, 0.00010773700000000011, 0.0001085690000000028, 0.00010845799999999878, 0.00010859700000000194, 0.00010847200000000182, 0.0001085829999999989, 0.00010800000000000046, 0.00010851400000000053, 0.00010847299999999782, 0.0001080829999999984, 0.0001080690000000023, 0.0001085690000000028, 0.00010801400000000003, 0.00010862500000000108, 0.00010858399999999838, 0.0001078340000000011, 0.00010823599999999767, 0.00010805499999999926, 0.00010844399999999921, 0.00010829099999999994, 0.00010780599999999849, 0.00010840299999999997, 0.0001083890000000004, 0.00010841699999999954, 0.00010823600000000114, 0.00010854100000000019, 0.00010842999999999964, 0.00010833299999999865, 0.0001085690000000028, 0.00010848599999999792, 0.00010827799999999985, 0.00010843099999999911, 0.00010787500000000033, 0.0001080829999999984, 0.00010859699999999847, 0.00010780499999999901]</msg>
<status status="PASS" starttime="20201029 18:19:25.287" endtime="20201029 18:19:25.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.282" endtime="20201029 18:19:25.290"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:25.294" endtime="20201029 18:19:25.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.292" endtime="20201029 18:19:25.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.291" endtime="20201029 18:19:25.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.932" endtime="20201029 18:19:25.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.931" endtime="20201029 18:19:25.314"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.323" endtime="20201029 18:19:25.343"></status>
</kw>
<msg timestamp="20201029 18:19:25.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:25.321" endtime="20201029 18:19:25.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:25.345" endtime="20201029 18:19:25.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.347" endtime="20201029 18:19:25.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.319" endtime="20201029 18:19:25.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.317" endtime="20201029 18:19:25.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.356" endtime="20201029 18:19:25.642"></status>
</kw>
<msg timestamp="20201029 18:19:25.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022082014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022191708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:25.355" endtime="20201029 18:19:25.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022082014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022191708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:25.646" endtime="20201029 18:19:25.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.655" endtime="20201029 18:19:25.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.352" endtime="20201029 18:19:25.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.350" endtime="20201029 18:19:25.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:25.661" level="INFO">${RESULT} = [{'diff': 0.00010969400000000046}, {'diff': 0.00010940300000000097}, {'diff': 0.00010890300000000047}, {'diff': 0.00010901400000000103}, {'diff': 0.00010945799999999978}, {'diff': 0.000109027000000001...</msg>
<status status="PASS" starttime="20201029 18:19:25.658" endtime="20201029 18:19:25.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:25.665" level="INFO">${ACCURACY} = {'diff': [0.00010969400000000046, 0.00010940300000000097, 0.00010890300000000047, 0.00010901400000000103, 0.00010945799999999978, 0.00010902700000000112, 0.00010940300000000097, 0.00010956900000000033...</msg>
<status status="PASS" starttime="20201029 18:19:25.662" endtime="20201029 18:19:25.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.669" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 18:19:25.668" endtime="20201029 18:19:25.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.672" level="INFO">VALUE: [0.00010969400000000046, 0.00010940300000000097, 0.00010890300000000047, 0.00010901400000000103, 0.00010945799999999978, 0.00010902700000000112, 0.00010940300000000097, 0.00010956900000000033, 0.00010974999999999874, 0.00010915300000000072, 0.00010976400000000178, 0.00010915300000000072, 0.0001094029999999975, 0.0001095699999999998, 0.0001095699999999998, 0.00010922300000000204, 0.00010943000000000064, 0.0001095829999999999, 0.00010920799999999953, 0.0001088890000000009, 0.0001095829999999999, 0.00010876399999999731, 0.0001090699999999993, 0.00010944400000000021, 0.00010916700000000029, 0.00010873599999999817, 0.00010944400000000021, 0.00010890199999999753, 0.00010924999999999824, 0.00010908400000000235, 0.00010959699999999947, 0.00010930599999999999, 0.00010945900000000272, 0.00010958399999999938, 0.00010867999999999989, 0.00010884699999999872, 0.00010974999999999874, 0.00010893099999999961, 0.00010941700000000054, 0.00010905599999999974, 0.00010925000000000171, 0.00010922299999999857, 0.00010891600000000057, 0.00010926400000000128, 0.0001092219999999991, 0.00010909699999999897, 0.00010874999999999774, 0.00010899999999999799, 0.00010897299999999832, 0.00010956900000000033]</msg>
<status status="PASS" starttime="20201029 18:19:25.670" endtime="20201029 18:19:25.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.666" endtime="20201029 18:19:25.673"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:25.677" endtime="20201029 18:19:25.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.675" endtime="20201029 18:19:25.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.674" endtime="20201029 18:19:25.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.315" endtime="20201029 18:19:25.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.315" endtime="20201029 18:19:25.697"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.706" endtime="20201029 18:19:25.727"></status>
</kw>
<msg timestamp="20201029 18:19:25.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:25.704" endtime="20201029 18:19:25.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:25.729" endtime="20201029 18:19:25.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.731" endtime="20201029 18:19:25.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.702" endtime="20201029 18:19:25.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.700" endtime="20201029 18:19:25.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.740" endtime="20201029 18:19:26.026"></status>
</kw>
<msg timestamp="20201029 18:19:26.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022988556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02309925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:25.739" endtime="20201029 18:19:26.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022988556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02309925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:26.030" endtime="20201029 18:19:26.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.038" endtime="20201029 18:19:26.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.736" endtime="20201029 18:19:26.040"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.734" endtime="20201029 18:19:26.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:26.044" level="INFO">${RESULT} = [{'diff': 0.00011069400000000146}, {'diff': 0.0001102220000000001}, {'diff': 0.00011043099999999764}, {'diff': 0.0001105700000000008}, {'diff': 0.0001098890000000019}, {'diff': 0.00011030500000000151}...</msg>
<status status="PASS" starttime="20201029 18:19:26.041" endtime="20201029 18:19:26.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:26.048" level="INFO">${ACCURACY} = {'diff': [0.00011069400000000146, 0.0001102220000000001, 0.00011043099999999764, 0.0001105700000000008, 0.0001098890000000019, 0.00011030500000000151, 0.00011031900000000108, 0.00011005500000000126, 0...</msg>
<status status="PASS" starttime="20201029 18:19:26.045" endtime="20201029 18:19:26.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.053" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 18:19:26.051" endtime="20201029 18:19:26.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.055" level="INFO">VALUE: [0.00011069400000000146, 0.0001102220000000001, 0.00011043099999999764, 0.0001105700000000008, 0.0001098890000000019, 0.00011030500000000151, 0.00011031900000000108, 0.00011005500000000126, 0.00010981900000000058, 0.00011045900000000025, 0.00011061100000000004, 0.00011004200000000117, 0.00011049999999999949, 0.00011065299999999875, 0.00011006899999999736, 0.00010990300000000147, 0.00011033300000000065, 0.00010980599999999702, 0.0001102220000000001, 0.00011024999999999924, 0.00011059799999999995, 0.00011032000000000056, 0.00011024999999999924, 0.00011043000000000164, 0.00011037499999999936, 0.0001105830000000009, 0.00011005600000000074, 0.00011017999999999792, 0.00011062499999999961, 0.00010982000000000006, 0.00010991600000000157, 0.00011034700000000022, 0.00011051399999999906, 0.00011063899999999918, 0.0001105700000000008, 0.00011020800000000053, 0.0001100700000000003, 0.00011008399999999988, 0.00011043000000000164, 0.00011002799999999813, 0.00011049999999999949, 0.00011048599999999992, 0.0001107090000000005, 0.00011059700000000047, 0.0001107769999999994, 0.0001103890000000024, 0.00011005600000000074, 0.00011023700000000261, 0.00011022199999999663, 0.00011023599999999967]</msg>
<status status="PASS" starttime="20201029 18:19:26.054" endtime="20201029 18:19:26.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.049" endtime="20201029 18:19:26.057"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:26.061" endtime="20201029 18:19:26.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.059" endtime="20201029 18:19:26.081"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.058" endtime="20201029 18:19:26.081"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.698" endtime="20201029 18:19:26.081"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.698" endtime="20201029 18:19:26.081"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.090" endtime="20201029 18:19:26.110"></status>
</kw>
<msg timestamp="20201029 18:19:26.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:26.088" endtime="20201029 18:19:26.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:26.111" endtime="20201029 18:19:26.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.114" endtime="20201029 18:19:26.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.086" endtime="20201029 18:19:26.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.084" endtime="20201029 18:19:26.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.123" endtime="20201029 18:19:26.408"></status>
</kw>
<msg timestamp="20201029 18:19:26.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021764528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021875542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:26.121" endtime="20201029 18:19:26.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021764528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021875542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:26.412" endtime="20201029 18:19:26.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.420" endtime="20201029 18:19:26.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.119" endtime="20201029 18:19:26.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.117" endtime="20201029 18:19:26.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:26.426" level="INFO">${RESULT} = [{'diff': 0.00011101399999999956}, {'diff': 0.00011123700000000014}, {'diff': 0.00011165299999999975}, {'diff': 0.00011099999999999999}, {'diff': 0.00011136100000000079}, {'diff': 0.000111013999999999...</msg>
<status status="PASS" starttime="20201029 18:19:26.423" endtime="20201029 18:19:26.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:26.434" level="INFO">${ACCURACY} = {'diff': [0.00011101399999999956, 0.00011123700000000014, 0.00011165299999999975, 0.00011099999999999999, 0.00011136100000000079, 0.00011101399999999956, 0.00011099999999999999, 0.00011138899999999993...</msg>
<status status="PASS" starttime="20201029 18:19:26.427" endtime="20201029 18:19:26.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.438" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 18:19:26.437" endtime="20201029 18:19:26.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.440" level="INFO">VALUE: [0.00011101399999999956, 0.00011123700000000014, 0.00011165299999999975, 0.00011099999999999999, 0.00011136100000000079, 0.00011101399999999956, 0.00011099999999999999, 0.00011138899999999993, 0.00011166699999999932, 0.00011137500000000036, 0.00011091699999999857, 0.00011113899999999968, 0.00011138899999999993, 0.00011161100000000104, 0.0001110549999999988, 0.00011098600000000042, 0.00011130499999999904, 0.0001112220000000011, 0.00011108400000000088, 0.00011116600000000282, 0.0001115549999999993, 0.00011106899999999836, 0.00011151400000000006, 0.00011133399999999766, 0.00011169500000000193, 0.0001112359999999972, 0.00011138899999999993, 0.00011074999999999974, 0.00011083299999999768, 0.0001110969999999975, 0.00011088899999999943, 0.00011163900000000018, 0.00011137500000000036, 0.00011105600000000174, 0.00011148600000000092, 0.00011097300000000032, 0.00011090199999999953, 0.00011112500000000011, 0.0001110549999999988, 0.00011131899999999861, 0.00011122199999999763, 0.00011165299999999975, 0.00011148599999999745, 0.00011150000000000049, 0.00011111100000000054, 0.00011090199999999953, 0.00011133299999999818, 0.00011133300000000165, 0.00011091699999999857, 0.00011097200000000085]</msg>
<status status="PASS" starttime="20201029 18:19:26.439" endtime="20201029 18:19:26.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.434" endtime="20201029 18:19:26.442"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:26.445" endtime="20201029 18:19:26.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.444" endtime="20201029 18:19:26.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.443" endtime="20201029 18:19:26.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.082" endtime="20201029 18:19:26.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.082" endtime="20201029 18:19:26.466"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.475" endtime="20201029 18:19:26.495"></status>
</kw>
<msg timestamp="20201029 18:19:26.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:26.473" endtime="20201029 18:19:26.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:26.496" endtime="20201029 18:19:26.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.498" endtime="20201029 18:19:26.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.470" endtime="20201029 18:19:26.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.468" endtime="20201029 18:19:26.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.508" endtime="20201029 18:19:26.794"></status>
</kw>
<msg timestamp="20201029 18:19:26.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022016417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022129056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:26.506" endtime="20201029 18:19:26.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022016417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022129056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:26.798" endtime="20201029 18:19:26.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.806" endtime="20201029 18:19:26.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.503" endtime="20201029 18:19:26.809"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.502" endtime="20201029 18:19:26.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:26.813" level="INFO">${RESULT} = [{'diff': 0.00011263900000000118}, {'diff': 0.00011195799999999881}, {'diff': 0.00011180499999999954}, {'diff': 0.00011192999999999967}, {'diff': 0.00011252800000000063}, {'diff': 0.000112360999999998...</msg>
<status status="PASS" starttime="20201029 18:19:26.810" endtime="20201029 18:19:26.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:26.817" level="INFO">${ACCURACY} = {'diff': [0.00011263900000000118, 0.00011195799999999881, 0.00011180499999999954, 0.00011192999999999967, 0.00011252800000000063, 0.00011236099999999832, 0.00011251400000000106, 0.00011194499999999871...</msg>
<status status="PASS" starttime="20201029 18:19:26.814" endtime="20201029 18:19:26.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.821" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 18:19:26.820" endtime="20201029 18:19:26.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.823" level="INFO">VALUE: [0.00011263900000000118, 0.00011195799999999881, 0.00011180499999999954, 0.00011192999999999967, 0.00011252800000000063, 0.00011236099999999832, 0.00011251400000000106, 0.00011194499999999871, 0.00011198600000000142, 0.00011194400000000271, 0.0001119160000000001, 0.00011234699999999875, 0.00011247200000000235, 0.0001125550000000003, 0.00011224999999999777, 0.00011199999999999752, 0.00011222199999999863, 0.00011200000000000099, 0.00011225000000000124, 0.00011183299999999868, 0.00011244399999999974, 0.00011226400000000081, 0.00011198599999999795, 0.00011205599999999927, 0.00011268000000000042, 0.00011212499999999764, 0.00011179199999999945, 0.00011251299999999811, 0.00011200000000000099, 0.00011248600000000192, 0.0001123749999999979, 0.00011183400000000163, 0.00011198599999999795, 0.00011193099999999914, 0.00011250000000000149, 0.00011230500000000004, 0.00011192999999999967, 0.00011263899999999771, 0.00011216699999999982, 0.00011231999999999909, 0.00011237500000000136, 0.00011233399999999866, 0.0001127229999999986, 0.00011227800000000038, 0.00011265300000000075, 0.00011227800000000038, 0.0001122220000000021, 0.00011195800000000228, 0.0001124030000000005, 0.00011255599999999977]</msg>
<status status="PASS" starttime="20201029 18:19:26.822" endtime="20201029 18:19:26.824"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.817" endtime="20201029 18:19:26.825"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:26.828" endtime="20201029 18:19:26.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.827" endtime="20201029 18:19:26.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.826" endtime="20201029 18:19:26.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.467" endtime="20201029 18:19:26.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.466" endtime="20201029 18:19:26.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.107" endtime="20201029 18:19:26.849"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:48.038" endtime="20201029 18:19:26.850" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:26.856" endtime="20201029 18:19:26.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.855" endtime="20201029 18:19:26.876"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.890" endtime="20201029 18:19:26.905"></status>
</kw>
<msg timestamp="20201029 18:19:26.905" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:26.889" endtime="20201029 18:19:26.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.908" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:26.906" endtime="20201029 18:19:26.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.911" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:19:26.909" endtime="20201029 18:19:26.911"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:26.886" endtime="20201029 18:19:26.911"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:26.884" endtime="20201029 18:19:26.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.881" endtime="20201029 18:19:26.912"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:19:26.916" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:19:26.915" endtime="20201029 18:19:26.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.913" endtime="20201029 18:19:26.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.881" endtime="20201029 18:19:26.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.880" endtime="20201029 18:19:26.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.918" endtime="20201029 18:19:26.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.879" endtime="20201029 18:19:26.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.877" endtime="20201029 18:19:26.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.854" endtime="20201029 18:19:26.920"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.930" endtime="20201029 18:19:26.946"></status>
</kw>
<msg timestamp="20201029 18:19:26.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:26.928" endtime="20201029 18:19:26.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:26.947" endtime="20201029 18:19:26.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.950" endtime="20201029 18:19:26.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.926" endtime="20201029 18:19:26.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.924" endtime="20201029 18:19:26.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.959" endtime="20201029 18:19:27.245"></status>
</kw>
<msg timestamp="20201029 18:19:27.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066150875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066194083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:26.958" endtime="20201029 18:19:27.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066150875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066194083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:27.249" endtime="20201029 18:19:27.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.258" endtime="20201029 18:19:27.259"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.955" endtime="20201029 18:19:27.260"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.954" endtime="20201029 18:19:27.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:27.264" level="INFO">${RESULT} = [{'diff': 4.320800000000291e-05}, {'diff': 4.386099999999227e-05}, {'diff': 4.4402999999998416e-05}, {'diff': 4.323600000000205e-05}, {'diff': 4.402799999998763e-05}, {'diff': 4.441699999999105e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:27.261" endtime="20201029 18:19:27.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:27.268" level="INFO">${ACCURACY} = {'diff': [4.320800000000291e-05, 4.386099999999227e-05, 4.4402999999998416e-05, 4.323600000000205e-05, 4.402799999998763e-05, 4.441699999999105e-05, 4.322200000000942e-05, 4.3666999999997236e-05, 4.30...</msg>
<status status="PASS" starttime="20201029 18:19:27.265" endtime="20201029 18:19:27.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.273" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 18:19:27.272" endtime="20201029 18:19:27.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.275" level="INFO">VALUE: [4.320800000000291e-05, 4.386099999999227e-05, 4.4402999999998416e-05, 4.323600000000205e-05, 4.402799999998763e-05, 4.441699999999105e-05, 4.322200000000942e-05, 4.3666999999997236e-05, 4.302800000000051e-05, 4.402800000000151e-05, 4.31939999999964e-05, 4.3861000000006145e-05, 4.4402999999998416e-05, 4.295799999999572e-05, 4.401400000000888e-05, 4.3181000000003245e-05, 4.3638999999998096e-05, 4.3082999999999316e-05, 4.3902999999997916e-05, 4.3013999999994e-05, 4.2791000000000357e-05, 4.373600000000255e-05, 4.300000000000137e-05, 4.386199999999174e-05, 4.436099999999277e-05, 4.304099999999367e-05, 4.390199999999844e-05, 4.304199999999314e-05, 4.3917000000004425e-05, 4.294400000000309e-05, 4.4013999999995e-05, 4.4417000000004925e-05, 4.305599999999965e-05, 4.3931000000010934e-05, 4.4402999999998416e-05, 4.438899999999191e-05, 4.308399999999879e-05, 4.381999999999997e-05, 4.2874999999997776e-05, 4.404200000000802e-05, 4.3166999999996736e-05, 4.379200000000083e-05, 4.290199999999744e-05, 4.398599999999586e-05, 4.324999999999468e-05, 4.372199999999604e-05, 4.2917000000003425e-05, 4.405600000000065e-05, 4.2694999999995376e-05, 4.4139000000012474e-05]</msg>
<status status="PASS" starttime="20201029 18:19:27.274" endtime="20201029 18:19:27.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.269" endtime="20201029 18:19:27.276"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:27.279" endtime="20201029 18:19:27.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.278" endtime="20201029 18:19:27.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.277" endtime="20201029 18:19:27.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.922" endtime="20201029 18:19:27.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.921" endtime="20201029 18:19:27.300"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.310" endtime="20201029 18:19:27.326"></status>
</kw>
<msg timestamp="20201029 18:19:27.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:27.308" endtime="20201029 18:19:27.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:27.328" endtime="20201029 18:19:27.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.331" endtime="20201029 18:19:27.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.305" endtime="20201029 18:19:27.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.303" endtime="20201029 18:19:27.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.340" endtime="20201029 18:19:27.625"></status>
</kw>
<msg timestamp="20201029 18:19:27.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023557958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023600986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:27.338" endtime="20201029 18:19:27.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023557958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023600986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:27.629" endtime="20201029 18:19:27.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.637" endtime="20201029 18:19:27.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.336" endtime="20201029 18:19:27.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.334" endtime="20201029 18:19:27.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:27.644" level="INFO">${RESULT} = [{'diff': 4.302800000000051e-05}, {'diff': 4.3945000000000095e-05}, {'diff': 4.2930999999999525e-05}, {'diff': 4.397199999999976e-05}, {'diff': 4.327800000000076e-05}, {'diff': 4.3681000000000275e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:27.640" endtime="20201029 18:19:27.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:27.648" level="INFO">${ACCURACY} = {'diff': [4.302800000000051e-05, 4.3945000000000095e-05, 4.2930999999999525e-05, 4.397199999999976e-05, 4.327800000000076e-05, 4.3681000000000275e-05, 4.273600000000155e-05, 4.416600000000173e-05, 4.4...</msg>
<status status="PASS" starttime="20201029 18:19:27.645" endtime="20201029 18:19:27.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.653" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 18:19:27.651" endtime="20201029 18:19:27.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.656" level="INFO">VALUE: [4.302800000000051e-05, 4.3945000000000095e-05, 4.2930999999999525e-05, 4.397199999999976e-05, 4.327800000000076e-05, 4.3681000000000275e-05, 4.273600000000155e-05, 4.416600000000173e-05, 4.4374999999999276e-05, 4.305599999999965e-05, 4.393000000000105e-05, 4.272200000000198e-05, 4.284800000000158e-05, 4.374999999999865e-05, 4.294399999999962e-05, 4.402799999999804e-05, 4.270800000000241e-05, 4.4153000000001635e-05, 4.269399999999937e-05, 4.4153000000001635e-05, 4.295800000000266e-05, 4.400000000000237e-05, 4.4402999999998416e-05, 4.3153000000000635e-05, 4.372199999999951e-05, 4.3068999999999746e-05, 4.384799999999911e-05, 4.301400000000094e-05, 4.393000000000105e-05, 4.2804999999999926e-05, 4.416600000000173e-05, 4.3194999999999345e-05, 4.3666999999997236e-05, 4.272200000000198e-05, 4.4208999999999915e-05, 4.272199999999851e-05, 4.416600000000173e-05, 4.322200000000248e-05, 4.402799999999804e-05, 4.4403000000001885e-05, 4.324999999999815e-05, 4.366600000000123e-05, 4.323599999999858e-05, 4.402799999999804e-05, 4.4417000000001455e-05, 4.322199999999901e-05, 4.402800000000151e-05, 4.433400000000004e-05, 4.304200000000008e-05, 4.404099999999814e-05]</msg>
<status status="PASS" starttime="20201029 18:19:27.654" endtime="20201029 18:19:27.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.649" endtime="20201029 18:19:27.657"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:27.660" endtime="20201029 18:19:27.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.659" endtime="20201029 18:19:27.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.658" endtime="20201029 18:19:27.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.301" endtime="20201029 18:19:27.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.300" endtime="20201029 18:19:27.681"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.690" endtime="20201029 18:19:27.707"></status>
</kw>
<msg timestamp="20201029 18:19:27.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:27.688" endtime="20201029 18:19:27.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:27.708" endtime="20201029 18:19:27.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.711" endtime="20201029 18:19:27.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.686" endtime="20201029 18:19:27.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.683" endtime="20201029 18:19:27.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.720" endtime="20201029 18:19:28.006"></status>
</kw>
<msg timestamp="20201029 18:19:28.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022403417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022446444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:27.718" endtime="20201029 18:19:28.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022403417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022446444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:28.010" endtime="20201029 18:19:28.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.018" endtime="20201029 18:19:28.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.716" endtime="20201029 18:19:28.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.714" endtime="20201029 18:19:28.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:28.025" level="INFO">${RESULT} = [{'diff': 4.302700000000104e-05}, {'diff': 4.3945000000000095e-05}, {'diff': 4.440199999999894e-05}, {'diff': 4.4374999999999276e-05}, {'diff': 4.4416999999997986e-05}, {'diff': 4.322199999999901e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:28.022" endtime="20201029 18:19:28.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:28.030" level="INFO">${ACCURACY} = {'diff': [4.302700000000104e-05, 4.3945000000000095e-05, 4.440199999999894e-05, 4.4374999999999276e-05, 4.4416999999997986e-05, 4.322199999999901e-05, 4.3833000000000066e-05, 4.4374999999999276e-05, 4...</msg>
<status status="PASS" starttime="20201029 18:19:28.026" endtime="20201029 18:19:28.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.034" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 18:19:28.033" endtime="20201029 18:19:28.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.037" level="INFO">VALUE: [4.302700000000104e-05, 4.3945000000000095e-05, 4.440199999999894e-05, 4.4374999999999276e-05, 4.4416999999997986e-05, 4.322199999999901e-05, 4.3833000000000066e-05, 4.4374999999999276e-05, 4.323600000000205e-05, 4.3667000000000705e-05, 4.2889000000000815e-05, 4.277800000000026e-05, 4.379199999999736e-05, 4.4402999999998416e-05, 4.3194999999999345e-05, 4.365199999999819e-05, 4.2889000000000815e-05, 4.2804999999999926e-05, 4.375000000000212e-05, 4.315200000000116e-05, 4.376400000000169e-05, 4.298599999999833e-05, 4.398599999999933e-05, 4.294399999999962e-05, 4.395800000000019e-05, 4.322199999999901e-05, 4.3860999999999206e-05, 4.317999999999683e-05, 4.391599999999801e-05, 4.301399999999747e-05, 4.3945000000000095e-05, 4.442999999999808e-05, 4.4402999999998416e-05, 4.3194999999999345e-05, 4.3624999999998526e-05, 4.441599999999851e-05, 4.324999999999815e-05, 4.367999999999733e-05, 4.440200000000241e-05, 4.293000000000005e-05, 4.275000000000112e-05, 4.3681000000000275e-05, 4.302699999999757e-05, 4.3874999999998776e-05, 4.4403000000001885e-05, 4.3041000000000607e-05, 4.3889000000001815e-05, 4.302800000000051e-05, 4.392999999999758e-05, 4.440200000000241e-05]</msg>
<status status="PASS" starttime="20201029 18:19:28.036" endtime="20201029 18:19:28.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.031" endtime="20201029 18:19:28.038"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:28.041" endtime="20201029 18:19:28.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.040" endtime="20201029 18:19:28.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.039" endtime="20201029 18:19:28.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.682" endtime="20201029 18:19:28.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.681" endtime="20201029 18:19:28.062"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.071" endtime="20201029 18:19:28.087"></status>
</kw>
<msg timestamp="20201029 18:19:28.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.069" endtime="20201029 18:19:28.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.088" endtime="20201029 18:19:28.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.091" endtime="20201029 18:19:28.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.067" endtime="20201029 18:19:28.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.065" endtime="20201029 18:19:28.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.100" endtime="20201029 18:19:28.386"></status>
</kw>
<msg timestamp="20201029 18:19:28.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022391514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022435861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:28.098" endtime="20201029 18:19:28.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022391514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022435861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:28.390" endtime="20201029 18:19:28.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.398" endtime="20201029 18:19:28.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.096" endtime="20201029 18:19:28.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.094" endtime="20201029 18:19:28.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:28.405" level="INFO">${RESULT} = [{'diff': 4.4347000000000136e-05}, {'diff': 4.2861000000001676e-05}, {'diff': 4.398599999999933e-05}, {'diff': 4.304200000000008e-05}, {'diff': 4.3945000000000095e-05}, {'diff': 4.4472999999999735e-05...</msg>
<status status="PASS" starttime="20201029 18:19:28.402" endtime="20201029 18:19:28.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:28.410" level="INFO">${ACCURACY} = {'diff': [4.4347000000000136e-05, 4.2861000000001676e-05, 4.398599999999933e-05, 4.304200000000008e-05, 4.3945000000000095e-05, 4.4472999999999735e-05, 4.297199999999876e-05, 4.394400000000062e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:19:28.406" endtime="20201029 18:19:28.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.414" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 18:19:28.413" endtime="20201029 18:19:28.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.417" level="INFO">VALUE: [4.4347000000000136e-05, 4.2861000000001676e-05, 4.398599999999933e-05, 4.304200000000008e-05, 4.3945000000000095e-05, 4.4472999999999735e-05, 4.297199999999876e-05, 4.394400000000062e-05, 4.4375000000002746e-05, 4.4417000000001455e-05, 4.273600000000155e-05, 4.4195000000000345e-05, 4.265200000000066e-05, 4.2916999999999955e-05, 4.404200000000108e-05, 4.31800000000003e-05, 4.3681000000000275e-05, 4.3041000000000607e-05, 4.3874999999998776e-05, 4.4402999999998416e-05, 4.3068999999999746e-05, 4.3874999999998776e-05, 4.298599999999833e-05, 4.3931000000000525e-05, 4.4403000000001885e-05, 4.29860000000018e-05, 4.402800000000151e-05, 4.436199999999918e-05, 4.323600000000205e-05, 4.36800000000008e-05, 4.2889000000000815e-05, 4.276400000000069e-05, 4.375000000000212e-05, 4.3124999999998026e-05, 4.381899999999703e-05, 4.295799999999919e-05, 4.394400000000062e-05, 4.329200000000033e-05, 4.3846999999999636e-05, 4.4402999999998416e-05, 4.4402999999998416e-05, 4.277799999999679e-05, 4.294399999999962e-05, 4.374999999999865e-05, 4.3125000000001495e-05, 4.370799999999994e-05, 4.440199999999894e-05, 4.4388999999998846e-05, 4.2723000000001454e-05, 4.4152999999998166e-05]</msg>
<status status="PASS" starttime="20201029 18:19:28.416" endtime="20201029 18:19:28.419"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.411" endtime="20201029 18:19:28.420"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:28.425" endtime="20201029 18:19:28.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.423" endtime="20201029 18:19:28.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.421" endtime="20201029 18:19:28.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.063" endtime="20201029 18:19:28.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.063" endtime="20201029 18:19:28.447"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.457" endtime="20201029 18:19:28.475"></status>
</kw>
<msg timestamp="20201029 18:19:28.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.456" endtime="20201029 18:19:28.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.477" endtime="20201029 18:19:28.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.479" endtime="20201029 18:19:28.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.453" endtime="20201029 18:19:28.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.450" endtime="20201029 18:19:28.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.489" endtime="20201029 18:19:28.795"></status>
</kw>
<msg timestamp="20201029 18:19:28.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025558181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025601417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:28.487" endtime="20201029 18:19:28.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025558181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025601417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:28.799" endtime="20201029 18:19:28.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.807" endtime="20201029 18:19:28.809"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.485" endtime="20201029 18:19:28.809"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.483" endtime="20201029 18:19:28.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:28.814" level="INFO">${RESULT} = [{'diff': 4.323600000000205e-05}, {'diff': 4.404199999999761e-05}, {'diff': 4.270799999999894e-05}, {'diff': 4.417999999999783e-05}, {'diff': 4.301399999999747e-05}, {'diff': 4.404100000000161e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:28.811" endtime="20201029 18:19:28.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:28.818" level="INFO">${ACCURACY} = {'diff': [4.323600000000205e-05, 4.404199999999761e-05, 4.270799999999894e-05, 4.417999999999783e-05, 4.301399999999747e-05, 4.404100000000161e-05, 4.444400000000112e-05, 4.4402999999998416e-05, 4.277...</msg>
<status status="PASS" starttime="20201029 18:19:28.815" endtime="20201029 18:19:28.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.823" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 18:19:28.822" endtime="20201029 18:19:28.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.825" level="INFO">VALUE: [4.323600000000205e-05, 4.404199999999761e-05, 4.270799999999894e-05, 4.417999999999783e-05, 4.301399999999747e-05, 4.404100000000161e-05, 4.444400000000112e-05, 4.4402999999998416e-05, 4.277800000000026e-05, 4.277800000000026e-05, 4.277800000000026e-05, 4.3846999999999636e-05, 4.3194999999999345e-05, 4.3846999999999636e-05, 4.440200000000241e-05, 4.4388999999998846e-05, 4.3110999999998456e-05, 4.3874999999998776e-05, 4.302799999999704e-05, 4.3945000000000095e-05, 4.294399999999962e-05, 4.395800000000019e-05, 4.3318999999999996e-05, 4.3653000000001135e-05, 4.4403000000001885e-05, 4.445799999999722e-05, 4.4402999999998416e-05, 4.2709000000001884e-05, 4.2903000000000385e-05, 4.375000000000212e-05, 4.2958999999998665e-05, 4.277800000000026e-05, 4.363799999999862e-05, 4.273599999999808e-05, 4.4167000000001205e-05, 4.272199999999851e-05, 4.4153000000001635e-05, 4.4388999999998846e-05, 4.4389000000002315e-05, 4.279199999999983e-05, 4.4167000000001205e-05, 4.4389000000002315e-05, 4.3055000000000176e-05, 4.3833000000000066e-05, 4.302800000000051e-05, 4.3860999999999206e-05, 4.442999999999808e-05, 4.304200000000008e-05, 4.3874999999998776e-05, 4.4402999999998416e-05]</msg>
<status status="PASS" starttime="20201029 18:19:28.824" endtime="20201029 18:19:28.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.819" endtime="20201029 18:19:28.827"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:28.831" endtime="20201029 18:19:28.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.830" endtime="20201029 18:19:28.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.828" endtime="20201029 18:19:28.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.448" endtime="20201029 18:19:28.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.448" endtime="20201029 18:19:28.852"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.861" endtime="20201029 18:19:28.877"></status>
</kw>
<msg timestamp="20201029 18:19:28.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.859" endtime="20201029 18:19:28.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.879" endtime="20201029 18:19:28.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.881" endtime="20201029 18:19:28.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.856" endtime="20201029 18:19:28.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.854" endtime="20201029 18:19:28.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.890" endtime="20201029 18:19:29.177"></status>
</kw>
<msg timestamp="20201029 18:19:29.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022129403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022172153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:28.889" endtime="20201029 18:19:29.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022129403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022172153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:29.181" endtime="20201029 18:19:29.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.189" endtime="20201029 18:19:29.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.886" endtime="20201029 18:19:29.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.885" endtime="20201029 18:19:29.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:29.196" level="INFO">${RESULT} = [{'diff': 4.275000000000112e-05}, {'diff': 4.4166999999997736e-05}, {'diff': 4.302799999999704e-05}, {'diff': 4.3931000000000525e-05}, {'diff': 4.277800000000026e-05}, {'diff': 4.277800000000026e-05},...</msg>
<status status="PASS" starttime="20201029 18:19:29.193" endtime="20201029 18:19:29.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:29.201" level="INFO">${ACCURACY} = {'diff': [4.275000000000112e-05, 4.4166999999997736e-05, 4.302799999999704e-05, 4.3931000000000525e-05, 4.277800000000026e-05, 4.277800000000026e-05, 4.3945000000000095e-05, 4.2916999999999955e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:19:29.197" endtime="20201029 18:19:29.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.205" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 18:19:29.204" endtime="20201029 18:19:29.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.208" level="INFO">VALUE: [4.275000000000112e-05, 4.4166999999997736e-05, 4.302799999999704e-05, 4.3931000000000525e-05, 4.277800000000026e-05, 4.277800000000026e-05, 4.3945000000000095e-05, 4.2916999999999955e-05, 4.395800000000019e-05, 4.3082999999999316e-05, 4.381999999999997e-05, 4.4417000000001455e-05, 4.329099999999739e-05, 4.404100000000161e-05, 4.3208999999998915e-05, 4.367999999999733e-05, 4.434799999999961e-05, 4.326300000000172e-05, 4.3667000000000705e-05, 4.441599999999851e-05, 4.276400000000069e-05, 4.4181000000000775e-05, 4.270799999999894e-05, 4.2832999999999066e-05, 4.374999999999865e-05, 4.4417000000001455e-05, 4.2694999999998845e-05, 4.416599999999826e-05, 4.29999999999979e-05, 4.275000000000112e-05, 4.369400000000037e-05, 4.322199999999901e-05, 4.402700000000204e-05, 4.3194999999999345e-05, 4.3667000000000705e-05, 4.302800000000051e-05, 4.3875000000002246e-05, 4.324999999999815e-05, 4.3666999999997236e-05, 4.4388999999998846e-05, 4.4388999999998846e-05, 4.4388999999998846e-05, 4.31800000000003e-05, 4.366600000000123e-05, 4.448599999999983e-05, 4.2694999999998845e-05, 4.4166999999997736e-05, 4.28059999999994e-05, 4.404200000000108e-05, 4.2804999999999926e-05]</msg>
<status status="PASS" starttime="20201029 18:19:29.207" endtime="20201029 18:19:29.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.202" endtime="20201029 18:19:29.209"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:29.213" endtime="20201029 18:19:29.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.211" endtime="20201029 18:19:29.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.210" endtime="20201029 18:19:29.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.853" endtime="20201029 18:19:29.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.852" endtime="20201029 18:19:29.234"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.243" endtime="20201029 18:19:29.259"></status>
</kw>
<msg timestamp="20201029 18:19:29.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:29.241" endtime="20201029 18:19:29.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:29.261" endtime="20201029 18:19:29.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.263" endtime="20201029 18:19:29.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.238" endtime="20201029 18:19:29.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.236" endtime="20201029 18:19:29.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.272" endtime="20201029 18:19:29.581"></status>
</kw>
<msg timestamp="20201029 18:19:29.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022106556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022149569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:29.271" endtime="20201029 18:19:29.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022106556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022149569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:29.585" endtime="20201029 18:19:29.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.594" endtime="20201029 18:19:29.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.268" endtime="20201029 18:19:29.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.266" endtime="20201029 18:19:29.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:29.601" level="INFO">${RESULT} = [{'diff': 4.301300000000147e-05}, {'diff': 4.3958999999999665e-05}, {'diff': 4.276400000000069e-05}, {'diff': 4.41800000000013e-05}, {'diff': 4.440199999999894e-05}, {'diff': 4.276400000000069e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:29.597" endtime="20201029 18:19:29.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:29.605" level="INFO">${ACCURACY} = {'diff': [4.301300000000147e-05, 4.3958999999999665e-05, 4.276400000000069e-05, 4.41800000000013e-05, 4.440199999999894e-05, 4.276400000000069e-05, 4.423599999999958e-05, 4.320799999999944e-05, 4.4040...</msg>
<status status="PASS" starttime="20201029 18:19:29.602" endtime="20201029 18:19:29.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.611" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 18:19:29.609" endtime="20201029 18:19:29.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.615" level="INFO">VALUE: [4.301300000000147e-05, 4.3958999999999665e-05, 4.276400000000069e-05, 4.41800000000013e-05, 4.440199999999894e-05, 4.276400000000069e-05, 4.423599999999958e-05, 4.320799999999944e-05, 4.404099999999814e-05, 4.2847000000002106e-05, 4.404100000000161e-05, 4.4402999999998416e-05, 4.2736999999997555e-05, 4.4166999999997736e-05, 4.3194999999999345e-05, 4.401399999999847e-05, 4.4388999999998846e-05, 4.4360999999999706e-05, 4.4388999999998846e-05, 4.448599999999983e-05, 4.302700000000104e-05, 4.402799999999804e-05, 4.320799999999944e-05, 4.3681000000000275e-05, 4.319399999999987e-05, 4.366600000000123e-05, 4.4416999999997986e-05, 4.4417000000001455e-05, 4.4388999999998846e-05, 4.4388999999998846e-05, 4.309800000000183e-05, 4.3874999999998776e-05, 4.3180999999999775e-05, 4.4012999999999e-05, 4.29999999999979e-05, 4.3945000000000095e-05, 4.277700000000079e-05, 4.294399999999962e-05, 4.383399999999954e-05, 4.26799999999998e-05, 4.424999999999915e-05, 4.293000000000005e-05, 4.394400000000062e-05, 4.4388999999998846e-05, 4.4402999999998416e-05, 4.2846999999998636e-05, 4.404099999999814e-05, 4.2846999999998636e-05, 4.404099999999814e-05, 4.323600000000205e-05]</msg>
<status status="PASS" starttime="20201029 18:19:29.613" endtime="20201029 18:19:29.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.606" endtime="20201029 18:19:29.618"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:29.624" endtime="20201029 18:19:29.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.622" endtime="20201029 18:19:29.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.620" endtime="20201029 18:19:29.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.235" endtime="20201029 18:19:29.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.234" endtime="20201029 18:19:29.646"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.657" endtime="20201029 18:19:29.677"></status>
</kw>
<msg timestamp="20201029 18:19:29.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:29.655" endtime="20201029 18:19:29.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:29.679" endtime="20201029 18:19:29.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.682" endtime="20201029 18:19:29.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.652" endtime="20201029 18:19:29.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.649" endtime="20201029 18:19:29.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.691" endtime="20201029 18:19:29.977"></status>
</kw>
<msg timestamp="20201029 18:19:29.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027257014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027299722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:29.690" endtime="20201029 18:19:29.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027257014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027299722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:29.981" endtime="20201029 18:19:29.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.990" endtime="20201029 18:19:29.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.687" endtime="20201029 18:19:29.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.685" endtime="20201029 18:19:29.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:29.997" level="INFO">${RESULT} = [{'diff': 4.270799999999894e-05}, {'diff': 4.4167000000001205e-05}, {'diff': 4.4402999999998416e-05}, {'diff': 4.3068999999999746e-05}, {'diff': 4.3889000000001815e-05}, {'diff': 4.273600000000155e-05...</msg>
<status status="PASS" starttime="20201029 18:19:29.993" endtime="20201029 18:19:29.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:30.001" level="INFO">${ACCURACY} = {'diff': [4.270799999999894e-05, 4.4167000000001205e-05, 4.4402999999998416e-05, 4.3068999999999746e-05, 4.3889000000001815e-05, 4.273600000000155e-05, 4.4181000000000775e-05, 4.2708999999998415e-05, ...</msg>
<status status="PASS" starttime="20201029 18:19:29.998" endtime="20201029 18:19:30.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.006" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 18:19:30.005" endtime="20201029 18:19:30.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.008" level="INFO">VALUE: [4.270799999999894e-05, 4.4167000000001205e-05, 4.4402999999998416e-05, 4.3068999999999746e-05, 4.3889000000001815e-05, 4.273600000000155e-05, 4.4181000000000775e-05, 4.2708999999998415e-05, 4.2889000000000815e-05, 4.384800000000258e-05, 4.304200000000008e-05, 4.393000000000105e-05, 4.308400000000226e-05, 4.376399999999822e-05, 4.269400000000284e-05, 4.424999999999915e-05, 4.4388999999998846e-05, 4.4417000000001455e-05, 4.2846999999998636e-05, 4.404099999999814e-05, 4.2639000000000565e-05, 4.3068999999999746e-05, 4.36800000000008e-05, 4.441600000000198e-05, 4.275000000000112e-05, 4.2889000000000815e-05, 4.374999999999865e-05, 4.444400000000112e-05, 4.29860000000018e-05, 4.277800000000026e-05, 4.3874999999998776e-05, 4.440199999999894e-05, 4.308400000000226e-05, 4.4012999999999e-05, 4.4416999999997986e-05, 4.4402999999998416e-05, 4.4374999999999276e-05, 4.315200000000116e-05, 4.374999999999865e-05, 4.4403000000001885e-05, 4.315200000000116e-05, 4.376399999999822e-05, 4.438799999999937e-05, 4.302800000000051e-05, 4.395799999999672e-05, 4.276400000000069e-05, 4.293000000000005e-05, 4.374999999999865e-05, 4.4389000000002315e-05, 4.3153000000000635e-05]</msg>
<status status="PASS" starttime="20201029 18:19:30.007" endtime="20201029 18:19:30.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.002" endtime="20201029 18:19:30.014"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:30.018" endtime="20201029 18:19:30.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.016" endtime="20201029 18:19:30.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.015" endtime="20201029 18:19:30.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.647" endtime="20201029 18:19:30.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.647" endtime="20201029 18:19:30.039"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.048" endtime="20201029 18:19:30.065"></status>
</kw>
<msg timestamp="20201029 18:19:30.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:30.046" endtime="20201029 18:19:30.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:30.067" endtime="20201029 18:19:30.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.070" endtime="20201029 18:19:30.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.044" endtime="20201029 18:19:30.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.041" endtime="20201029 18:19:30.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.079" endtime="20201029 18:19:30.366"></status>
</kw>
<msg timestamp="20201029 18:19:30.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023078042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023122444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:30.077" endtime="20201029 18:19:30.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023078042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023122444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:30.370" endtime="20201029 18:19:30.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.379" endtime="20201029 18:19:30.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.075" endtime="20201029 18:19:30.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.073" endtime="20201029 18:19:30.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:30.386" level="INFO">${RESULT} = [{'diff': 4.440199999999894e-05}, {'diff': 4.276399999999722e-05}, {'diff': 4.4153000000001635e-05}, {'diff': 4.2861000000001676e-05}, {'diff': 4.411199999999893e-05}, {'diff': 4.4388999999998846e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:30.382" endtime="20201029 18:19:30.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:30.391" level="INFO">${ACCURACY} = {'diff': [4.440199999999894e-05, 4.276399999999722e-05, 4.4153000000001635e-05, 4.2861000000001676e-05, 4.411199999999893e-05, 4.4388999999998846e-05, 4.440199999999894e-05, 4.294399999999962e-05, 4.3...</msg>
<status status="PASS" starttime="20201029 18:19:30.387" endtime="20201029 18:19:30.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.396" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 18:19:30.395" endtime="20201029 18:19:30.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.398" level="INFO">VALUE: [4.440199999999894e-05, 4.276399999999722e-05, 4.4153000000001635e-05, 4.2861000000001676e-05, 4.411199999999893e-05, 4.4388999999998846e-05, 4.440199999999894e-05, 4.294399999999962e-05, 4.395800000000019e-05, 4.322200000000248e-05, 4.367999999999733e-05, 4.440200000000241e-05, 4.440199999999894e-05, 4.295799999999919e-05, 4.397199999999976e-05, 4.442999999999808e-05, 4.28059999999994e-05, 4.4096999999999886e-05, 4.2666999999999705e-05, 4.3097000000002356e-05, 4.3681000000000275e-05, 4.3237000000001524e-05, 4.3681000000000275e-05, 4.4417000000001455e-05, 4.295799999999919e-05, 4.393000000000105e-05, 4.275000000000112e-05, 4.4167000000001205e-05, 4.302700000000104e-05, 4.394399999999715e-05, 4.4402999999998416e-05, 4.4403000000001885e-05, 4.4417000000001455e-05, 4.327799999999729e-05, 4.397199999999976e-05, 4.301399999999747e-05, 4.401400000000194e-05, 4.4319000000000996e-05, 4.279199999999983e-05, 4.417999999999783e-05, 4.276400000000069e-05, 4.4181000000000775e-05, 4.302800000000051e-05, 4.3931000000000525e-05, 4.3110999999998456e-05, 4.376400000000169e-05, 4.4403000000001885e-05, 4.272200000000198e-05, 4.4167000000001205e-05, 4.2889000000000815e-05]</msg>
<status status="PASS" starttime="20201029 18:19:30.397" endtime="20201029 18:19:30.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.392" endtime="20201029 18:19:30.400"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:30.403" endtime="20201029 18:19:30.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.402" endtime="20201029 18:19:30.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.401" endtime="20201029 18:19:30.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.040" endtime="20201029 18:19:30.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.039" endtime="20201029 18:19:30.424"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.433" endtime="20201029 18:19:30.450"></status>
</kw>
<msg timestamp="20201029 18:19:30.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:30.431" endtime="20201029 18:19:30.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:30.451" endtime="20201029 18:19:30.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.454" endtime="20201029 18:19:30.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.429" endtime="20201029 18:19:30.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.426" endtime="20201029 18:19:30.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.463" endtime="20201029 18:19:30.749"></status>
</kw>
<msg timestamp="20201029 18:19:30.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022064319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022108736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:30.461" endtime="20201029 18:19:30.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022064319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022108736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:30.753" endtime="20201029 18:19:30.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.763" endtime="20201029 18:19:30.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.459" endtime="20201029 18:19:30.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.457" endtime="20201029 18:19:30.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:30.769" level="INFO">${RESULT} = [{'diff': 4.4417000000001455e-05}, {'diff': 4.3124999999998026e-05}, {'diff': 4.379199999999736e-05}, {'diff': 4.4417000000001455e-05}, {'diff': 4.4389000000002315e-05}, {'diff': 4.4403000000001885e-0...</msg>
<status status="PASS" starttime="20201029 18:19:30.766" endtime="20201029 18:19:30.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:30.774" level="INFO">${ACCURACY} = {'diff': [4.4417000000001455e-05, 4.3124999999998026e-05, 4.379199999999736e-05, 4.4417000000001455e-05, 4.4389000000002315e-05, 4.4403000000001885e-05, 4.433400000000004e-05, 4.3124999999998026e-05, ...</msg>
<status status="PASS" starttime="20201029 18:19:30.770" endtime="20201029 18:19:30.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.778" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 18:19:30.777" endtime="20201029 18:19:30.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.780" level="INFO">VALUE: [4.4417000000001455e-05, 4.3124999999998026e-05, 4.379199999999736e-05, 4.4417000000001455e-05, 4.4389000000002315e-05, 4.4403000000001885e-05, 4.433400000000004e-05, 4.3124999999998026e-05, 4.376299999999875e-05, 4.2625000000000995e-05, 4.424999999999915e-05, 4.295799999999919e-05, 4.279199999999983e-05, 4.3694999999999845e-05, 4.2874999999997776e-05, 4.277800000000026e-05, 4.372199999999951e-05, 4.283399999999854e-05, 4.404100000000161e-05, 4.2638999999997096e-05, 4.426399999999872e-05, 4.277800000000026e-05, 4.416600000000173e-05, 4.2875000000001245e-05, 4.404200000000108e-05, 4.4403000000001885e-05, 4.288799999999787e-05, 4.406899999999728e-05, 4.295799999999919e-05, 4.404199999999761e-05, 4.4388999999998846e-05, 4.2916999999999955e-05, 4.3972999999999235e-05, 4.323599999999858e-05, 4.3681000000000275e-05, 4.275000000000112e-05, 4.4181000000000775e-05, 4.4402999999998416e-05, 4.322199999999901e-05, 4.3610999999998956e-05, 4.4374999999999276e-05, 4.309800000000183e-05, 4.3833000000000066e-05, 4.4403000000001885e-05, 4.293000000000005e-05, 4.274999999999765e-05, 4.3666999999997236e-05, 4.302700000000104e-05, 4.393000000000105e-05, 4.298599999999833e-05]</msg>
<status status="PASS" starttime="20201029 18:19:30.779" endtime="20201029 18:19:30.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.774" endtime="20201029 18:19:30.782"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:30.786" endtime="20201029 18:19:30.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.784" endtime="20201029 18:19:30.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.783" endtime="20201029 18:19:30.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.425" endtime="20201029 18:19:30.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.424" endtime="20201029 18:19:30.806"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.831" endtime="20201029 18:19:30.855"></status>
</kw>
<msg timestamp="20201029 18:19:30.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:30.823" endtime="20201029 18:19:30.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:30.858" endtime="20201029 18:19:30.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.864" endtime="20201029 18:19:30.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.813" endtime="20201029 18:19:30.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.809" endtime="20201029 18:19:30.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.883" endtime="20201029 18:19:31.174"></status>
</kw>
<msg timestamp="20201029 18:19:31.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043074208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043118708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:30.879" endtime="20201029 18:19:31.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043074208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043118708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:31.178" endtime="20201029 18:19:31.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.186" endtime="20201029 18:19:31.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.874" endtime="20201029 18:19:31.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.870" endtime="20201029 18:19:31.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:31.193" level="INFO">${RESULT} = [{'diff': 4.449999999999593e-05}, {'diff': 4.442999999999808e-05}, {'diff': 4.477799999999532e-05}, {'diff': 4.479200000000183e-05}, {'diff': 4.4610999999999956e-05}, {'diff': 4.482000000000097e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:31.190" endtime="20201029 18:19:31.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:31.197" level="INFO">${ACCURACY} = {'diff': [4.449999999999593e-05, 4.442999999999808e-05, 4.477799999999532e-05, 4.479200000000183e-05, 4.4610999999999956e-05, 4.482000000000097e-05, 4.4610999999999956e-05, 4.459699999999345e-05, 4.46...</msg>
<status status="PASS" starttime="20201029 18:19:31.194" endtime="20201029 18:19:31.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.201" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 18:19:31.200" endtime="20201029 18:19:31.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.204" level="INFO">VALUE: [4.449999999999593e-05, 4.442999999999808e-05, 4.477799999999532e-05, 4.479200000000183e-05, 4.4610999999999956e-05, 4.482000000000097e-05, 4.4610999999999956e-05, 4.459699999999345e-05, 4.4610999999999956e-05, 4.477800000000226e-05, 4.441600000000545e-05, 4.4388999999998846e-05, 4.4374999999999276e-05, 4.4861000000000206e-05, 4.4444999999997126e-05, 4.4374999999999276e-05, 4.4375000000006215e-05, 4.4375000000006215e-05, 4.4402999999998416e-05, 4.4847000000000636e-05, 4.444399999999765e-05, 4.438799999999937e-05, 4.447200000000373e-05, 4.445800000000416e-05, 4.476400000000269e-05, 4.4388999999998846e-05, 4.4374999999999276e-05, 4.4374999999999276e-05, 4.4374999999999276e-05, 4.4374999999999276e-05, 4.4416999999997986e-05, 4.4360999999999706e-05, 4.5013999999996e-05, 4.438799999999937e-05, 4.4374999999999276e-05, 4.433299999999363e-05, 4.447199999999679e-05, 4.477700000000279e-05, 4.494400000000509e-05, 4.474999999999618e-05, 4.4360999999999706e-05, 4.454099999999517e-05, 4.495799999999772e-05, 4.4375000000006215e-05, 4.468000000000527e-05, 4.4374999999999276e-05, 4.4388999999998846e-05, 4.4902999999998916e-05, 4.4430999999997556e-05, 4.4445000000004065e-05]</msg>
<status status="PASS" starttime="20201029 18:19:31.203" endtime="20201029 18:19:31.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.198" endtime="20201029 18:19:31.206"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:31.210" endtime="20201029 18:19:31.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.208" endtime="20201029 18:19:31.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.207" endtime="20201029 18:19:31.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.807" endtime="20201029 18:19:31.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.807" endtime="20201029 18:19:31.230"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.239" endtime="20201029 18:19:31.255"></status>
</kw>
<msg timestamp="20201029 18:19:31.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:31.237" endtime="20201029 18:19:31.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:31.257" endtime="20201029 18:19:31.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.259" endtime="20201029 18:19:31.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.235" endtime="20201029 18:19:31.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.233" endtime="20201029 18:19:31.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.268" endtime="20201029 18:19:31.554"></status>
</kw>
<msg timestamp="20201029 18:19:31.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022219972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022265806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:31.267" endtime="20201029 18:19:31.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022219972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022265806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:31.559" endtime="20201029 18:19:31.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.567" endtime="20201029 18:19:31.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.264" endtime="20201029 18:19:31.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.263" endtime="20201029 18:19:31.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:31.573" level="INFO">${RESULT} = [{'diff': 4.583399999999807e-05}, {'diff': 4.579099999999989e-05}, {'diff': 4.594399999999915e-05}, {'diff': 4.548600000000083e-05}, {'diff': 4.5597000000001386e-05}, {'diff': 4.576400000000022e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:31.570" endtime="20201029 18:19:31.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:31.578" level="INFO">${ACCURACY} = {'diff': [4.583399999999807e-05, 4.579099999999989e-05, 4.594399999999915e-05, 4.548600000000083e-05, 4.5597000000001386e-05, 4.576400000000022e-05, 4.542999999999908e-05, 4.505500000000218e-05, 4.544...</msg>
<status status="PASS" starttime="20201029 18:19:31.574" endtime="20201029 18:19:31.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.583" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 18:19:31.582" endtime="20201029 18:19:31.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.585" level="INFO">VALUE: [4.583399999999807e-05, 4.579099999999989e-05, 4.594399999999915e-05, 4.548600000000083e-05, 4.5597000000001386e-05, 4.576400000000022e-05, 4.542999999999908e-05, 4.505500000000218e-05, 4.544399999999865e-05, 4.558299999999835e-05, 4.576400000000022e-05, 4.577799999999979e-05, 4.5097000000000886e-05, 4.5097000000000886e-05, 4.5416999999998986e-05, 4.5444999999998126e-05, 4.527799999999929e-05, 4.5930999999999056e-05, 4.5125000000000026e-05, 4.577799999999979e-05, 4.509800000000036e-05, 4.538800000000037e-05, 4.594399999999915e-05, 4.587499999999731e-05, 4.544399999999865e-05, 4.509699999999742e-05, 4.5611000000000956e-05, 4.525000000000015e-05, 4.5611000000000956e-05, 4.529200000000233e-05, 4.5430999999998556e-05, 4.544399999999865e-05, 4.5458999999997696e-05, 4.5459000000001165e-05, 4.577799999999979e-05, 4.5931000000002525e-05, 4.5111000000000456e-05, 4.5889000000000346e-05, 4.5444999999998126e-05, 4.545800000000169e-05, 4.579099999999989e-05, 4.5625000000000526e-05, 4.542999999999908e-05, 4.574999999999718e-05, 4.597200000000176e-05, 4.5583000000001817e-05, 4.544399999999865e-05, 4.592999999999958e-05, 4.5417000000002455e-05, 4.593000000000305e-05]</msg>
<status status="PASS" starttime="20201029 18:19:31.584" endtime="20201029 18:19:31.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.579" endtime="20201029 18:19:31.586"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:31.590" endtime="20201029 18:19:31.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.589" endtime="20201029 18:19:31.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.587" endtime="20201029 18:19:31.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.231" endtime="20201029 18:19:31.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.231" endtime="20201029 18:19:31.612"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.627" endtime="20201029 18:19:31.644"></status>
</kw>
<msg timestamp="20201029 18:19:31.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:31.624" endtime="20201029 18:19:31.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:31.646" endtime="20201029 18:19:31.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.648" endtime="20201029 18:19:31.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.619" endtime="20201029 18:19:31.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.617" endtime="20201029 18:19:31.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.657" endtime="20201029 18:19:31.944"></status>
</kw>
<msg timestamp="20201029 18:19:31.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030029486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030076153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:31.656" endtime="20201029 18:19:31.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030029486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030076153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:31.948" endtime="20201029 18:19:31.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.957" endtime="20201029 18:19:31.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.653" endtime="20201029 18:19:31.959"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.651" endtime="20201029 18:19:31.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:31.963" level="INFO">${RESULT} = [{'diff': 4.6667000000000236e-05}, {'diff': 4.627800000000029e-05}, {'diff': 4.627799999999682e-05}, {'diff': 4.6430999999999556e-05}, {'diff': 4.677800000000079e-05}, {'diff': 4.6903000000000916e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:31.960" endtime="20201029 18:19:31.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:31.967" level="INFO">${ACCURACY} = {'diff': [4.6667000000000236e-05, 4.627800000000029e-05, 4.627799999999682e-05, 4.6430999999999556e-05, 4.677800000000079e-05, 4.6903000000000916e-05, 4.611099999999799e-05, 4.645799999999922e-05, 4.6...</msg>
<status status="PASS" starttime="20201029 18:19:31.964" endtime="20201029 18:19:31.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.972" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 18:19:31.971" endtime="20201029 18:19:31.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.974" level="INFO">VALUE: [4.6667000000000236e-05, 4.627800000000029e-05, 4.627799999999682e-05, 4.6430999999999556e-05, 4.677800000000079e-05, 4.6903000000000916e-05, 4.611099999999799e-05, 4.645799999999922e-05, 4.611099999999799e-05, 4.694400000000015e-05, 4.643000000000008e-05, 4.662499999999806e-05, 4.629199999999986e-05, 4.662499999999806e-05, 4.659699999999892e-05, 4.672199999999904e-05, 4.608299999999885e-05, 4.622200000000201e-05, 4.6931000000000056e-05, 4.609699999999842e-05, 4.627800000000029e-05, 4.6445000000002595e-05, 4.6944999999999626e-05, 4.6944999999999626e-05, 4.606999999999528e-05, 4.6430999999999556e-05, 4.611200000000093e-05, 4.629100000000386e-05, 4.626299999999778e-05, 4.644399999999965e-05, 4.6139000000000596e-05, 4.659699999999545e-05, 4.6583000000002817e-05, 4.624999999999768e-05, 4.644399999999965e-05, 4.676399999999775e-05, 4.633400000000204e-05, 4.6125000000001026e-05, 4.6625000000001526e-05, 4.6931000000000056e-05, 4.607000000000222e-05, 4.6458999999998696e-05, 4.6097000000001886e-05, 4.6444999999999126e-05, 4.658400000000229e-05, 4.629100000000386e-05, 4.622199999999854e-05, 4.695799999999972e-05, 4.695799999999972e-05, 4.645799999999922e-05]</msg>
<status status="PASS" starttime="20201029 18:19:31.973" endtime="20201029 18:19:31.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.968" endtime="20201029 18:19:31.975"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:31.979" endtime="20201029 18:19:31.998"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.977" endtime="20201029 18:19:31.999"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.976" endtime="20201029 18:19:31.999"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.614" endtime="20201029 18:19:32.000"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.613" endtime="20201029 18:19:32.000"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.008" endtime="20201029 18:19:32.026"></status>
</kw>
<msg timestamp="20201029 18:19:32.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:32.007" endtime="20201029 18:19:32.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:32.028" endtime="20201029 18:19:32.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.030" endtime="20201029 18:19:32.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.004" endtime="20201029 18:19:32.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.002" endtime="20201029 18:19:32.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.039" endtime="20201029 18:19:32.325"></status>
</kw>
<msg timestamp="20201029 18:19:32.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023266125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023313444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:32.038" endtime="20201029 18:19:32.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023266125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023313444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:32.329" endtime="20201029 18:19:32.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.338" endtime="20201029 18:19:32.339"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.035" endtime="20201029 18:19:32.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.033" endtime="20201029 18:19:32.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:32.344" level="INFO">${RESULT} = [{'diff': 4.731900000000053e-05}, {'diff': 4.711099999999899e-05}, {'diff': 4.759699999999992e-05}, {'diff': 4.791600000000201e-05}, {'diff': 4.779200000000136e-05}, {'diff': 4.727800000000129e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:32.341" endtime="20201029 18:19:32.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:32.348" level="INFO">${ACCURACY} = {'diff': [4.731900000000053e-05, 4.711099999999899e-05, 4.759699999999992e-05, 4.791600000000201e-05, 4.779200000000136e-05, 4.727800000000129e-05, 4.729200000000086e-05, 4.772200000000004e-05, 4.7444...</msg>
<status status="PASS" starttime="20201029 18:19:32.345" endtime="20201029 18:19:32.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.353" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 18:19:32.352" endtime="20201029 18:19:32.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.355" level="INFO">VALUE: [4.731900000000053e-05, 4.711099999999899e-05, 4.759699999999992e-05, 4.791600000000201e-05, 4.779200000000136e-05, 4.727800000000129e-05, 4.729200000000086e-05, 4.772200000000004e-05, 4.744400000000065e-05, 4.740299999999795e-05, 4.776400000000222e-05, 4.726399999999825e-05, 4.780599999999746e-05, 4.762499999999906e-05, 4.731900000000053e-05, 4.7445000000000126e-05, 4.773599999999961e-05, 4.797200000000029e-05, 4.711099999999899e-05, 4.711099999999899e-05, 4.709699999999942e-05, 4.777799999999832e-05, 4.794400000000115e-05, 4.744400000000065e-05, 4.795800000000072e-05, 4.777800000000179e-05, 4.7667000000001236e-05, 4.745800000000022e-05, 4.766699999999777e-05, 4.711099999999899e-05, 4.779200000000136e-05, 4.726399999999825e-05, 4.729199999999739e-05, 4.747199999999979e-05, 4.793099999999759e-05, 4.711199999999846e-05, 4.761099999999949e-05, 4.794400000000115e-05, 4.762499999999906e-05, 4.779099999999842e-05, 4.727700000000182e-05, 4.755500000000121e-05, 4.794400000000115e-05, 4.745800000000022e-05, 4.726400000000172e-05, 4.777800000000179e-05, 4.759699999999992e-05, 4.774999999999918e-05, 4.726400000000172e-05, 4.7917000000001486e-05]</msg>
<status status="PASS" starttime="20201029 18:19:32.354" endtime="20201029 18:19:32.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.349" endtime="20201029 18:19:32.357"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:32.361" endtime="20201029 18:19:32.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.360" endtime="20201029 18:19:32.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.358" endtime="20201029 18:19:32.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.001" endtime="20201029 18:19:32.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.000" endtime="20201029 18:19:32.382"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.390" endtime="20201029 18:19:32.407"></status>
</kw>
<msg timestamp="20201029 18:19:32.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:32.389" endtime="20201029 18:19:32.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:32.409" endtime="20201029 18:19:32.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.412" endtime="20201029 18:19:32.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.386" endtime="20201029 18:19:32.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.384" endtime="20201029 18:19:32.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.422" endtime="20201029 18:19:32.711"></status>
</kw>
<msg timestamp="20201029 18:19:32.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022036639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022085139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:32.420" endtime="20201029 18:19:32.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022036639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022085139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:32.715" endtime="20201029 18:19:32.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.723" endtime="20201029 18:19:32.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.417" endtime="20201029 18:19:32.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.415" endtime="20201029 18:19:32.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:32.729" level="INFO">${RESULT} = [{'diff': 4.849999999999993e-05}, {'diff': 4.879200000000236e-05}, {'diff': 4.876400000000322e-05}, {'diff': 4.824999999999968e-05}, {'diff': 4.852799999999907e-05}, {'diff': 4.8931000000002056e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:32.726" endtime="20201029 18:19:32.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:32.734" level="INFO">${ACCURACY} = {'diff': [4.849999999999993e-05, 4.879200000000236e-05, 4.876400000000322e-05, 4.824999999999968e-05, 4.852799999999907e-05, 4.8931000000002056e-05, 4.8417000000001986e-05, 4.880499999999899e-05, 4.86...</msg>
<status status="PASS" starttime="20201029 18:19:32.730" endtime="20201029 18:19:32.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.739" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 18:19:32.738" endtime="20201029 18:19:32.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.741" level="INFO">VALUE: [4.849999999999993e-05, 4.879200000000236e-05, 4.876400000000322e-05, 4.824999999999968e-05, 4.852799999999907e-05, 4.8931000000002056e-05, 4.8417000000001986e-05, 4.880499999999899e-05, 4.861100000000049e-05, 4.876399999999975e-05, 4.895800000000172e-05, 4.808300000000085e-05, 4.877799999999932e-05, 4.859700000000092e-05, 4.861100000000049e-05, 4.811099999999999e-05, 4.811099999999999e-05, 4.8431000000001556e-05, 4.900000000000043e-05, 4.811099999999999e-05, 4.8945000000001626e-05, 4.8431000000001556e-05, 4.811099999999999e-05, 4.812499999999956e-05, 4.897200000000129e-05, 4.897199999999782e-05, 4.892999999999911e-05, 4.877699999999985e-05, 4.826399999999925e-05, 4.827699999999935e-05, 4.894399999999868e-05, 4.861100000000049e-05, 4.827799999999882e-05, 4.856899999999831e-05, 4.894399999999868e-05, 4.829199999999839e-05, 4.807000000000075e-05, 4.8959000000001196e-05, 4.876399999999975e-05, 4.875000000000018e-05, 4.875000000000018e-05, 4.843099999999809e-05, 4.895800000000172e-05, 4.859800000000039e-05, 4.8431000000001556e-05, 4.877699999999985e-05, 4.858299999999788e-05, 4.845799999999775e-05, 4.859700000000092e-05, 4.81529999999987e-05]</msg>
<status status="PASS" starttime="20201029 18:19:32.740" endtime="20201029 18:19:32.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.735" endtime="20201029 18:19:32.743"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:32.746" endtime="20201029 18:19:32.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.745" endtime="20201029 18:19:32.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.744" endtime="20201029 18:19:32.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.383" endtime="20201029 18:19:32.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.382" endtime="20201029 18:19:32.767"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.775" endtime="20201029 18:19:32.792"></status>
</kw>
<msg timestamp="20201029 18:19:32.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:32.774" endtime="20201029 18:19:32.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:32.794" endtime="20201029 18:19:32.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.796" endtime="20201029 18:19:32.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.771" endtime="20201029 18:19:32.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.769" endtime="20201029 18:19:32.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.806" endtime="20201029 18:19:33.092"></status>
</kw>
<msg timestamp="20201029 18:19:33.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022057847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022107333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:32.804" endtime="20201029 18:19:33.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022057847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022107333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:33.096" endtime="20201029 18:19:33.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.105" endtime="20201029 18:19:33.106"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.801" endtime="20201029 18:19:33.107"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.800" endtime="20201029 18:19:33.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:33.111" level="INFO">${RESULT} = [{'diff': 4.948600000000136e-05}, {'diff': 4.933400000000157e-05}, {'diff': 4.911100000000099e-05}, {'diff': 4.942999999999961e-05}, {'diff': 4.976400000000075e-05}, {'diff': 4.911100000000099e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:33.108" endtime="20201029 18:19:33.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:33.115" level="INFO">${ACCURACY} = {'diff': [4.948600000000136e-05, 4.933400000000157e-05, 4.911100000000099e-05, 4.942999999999961e-05, 4.976400000000075e-05, 4.911100000000099e-05, 4.927800000000329e-05, 4.958399999999835e-05, 4.9277...</msg>
<status status="PASS" starttime="20201029 18:19:33.112" endtime="20201029 18:19:33.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.120" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 18:19:33.119" endtime="20201029 18:19:33.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.122" level="INFO">VALUE: [4.948600000000136e-05, 4.933400000000157e-05, 4.911100000000099e-05, 4.942999999999961e-05, 4.976400000000075e-05, 4.911100000000099e-05, 4.927800000000329e-05, 4.958399999999835e-05, 4.927799999999982e-05, 4.976400000000075e-05, 4.961099999999802e-05, 4.929199999999939e-05, 4.927799999999982e-05, 4.9637999999997684e-05, 4.9431000000002556e-05, 4.912500000000056e-05, 4.923600000000111e-05, 4.973600000000161e-05, 4.927700000000035e-05, 4.945799999999875e-05, 4.96530000000002e-05, 4.975000000000118e-05, 4.975000000000118e-05, 4.994399999999968e-05, 4.907000000000175e-05, 4.909700000000142e-05, 4.959699999999845e-05, 4.994499999999916e-05, 4.9445000000002126e-05, 4.940299999999995e-05, 4.961100000000149e-05, 4.980499999999999e-05, 4.981899999999956e-05, 4.927799999999982e-05, 4.9431000000002556e-05, 4.926300000000078e-05, 4.993000000000011e-05, 4.909700000000142e-05, 4.941600000000004e-05, 4.955499999999974e-05, 4.942999999999961e-05, 4.994399999999968e-05, 4.999999999999796e-05, 4.943099999999909e-05, 4.926400000000025e-05, 4.994499999999916e-05, 4.944499999999866e-05, 4.977800000000032e-05, 4.994499999999916e-05, 4.944499999999866e-05]</msg>
<status status="PASS" starttime="20201029 18:19:33.121" endtime="20201029 18:19:33.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.116" endtime="20201029 18:19:33.124"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:33.127" endtime="20201029 18:19:33.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.126" endtime="20201029 18:19:33.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.125" endtime="20201029 18:19:33.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.768" endtime="20201029 18:19:33.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.767" endtime="20201029 18:19:33.148"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.157" endtime="20201029 18:19:33.177"></status>
</kw>
<msg timestamp="20201029 18:19:33.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:33.155" endtime="20201029 18:19:33.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:33.179" endtime="20201029 18:19:33.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.182" endtime="20201029 18:19:33.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.153" endtime="20201029 18:19:33.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.150" endtime="20201029 18:19:33.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.190" endtime="20201029 18:19:33.475"></status>
</kw>
<msg timestamp="20201029 18:19:33.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025541792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025592264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:33.189" endtime="20201029 18:19:33.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025541792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025592264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:33.479" endtime="20201029 18:19:33.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.487" endtime="20201029 18:19:33.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.186" endtime="20201029 18:19:33.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.185" endtime="20201029 18:19:33.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:33.493" level="INFO">${RESULT} = [{'diff': 5.047199999999932e-05}, {'diff': 5.094500000000016e-05}, {'diff': 5.011100000000199e-05}, {'diff': 5.011099999999852e-05}, {'diff': 5.094500000000016e-05}, {'diff': 5.061199999999849e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:33.490" endtime="20201029 18:19:33.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:33.498" level="INFO">${ACCURACY} = {'diff': [5.047199999999932e-05, 5.094500000000016e-05, 5.011100000000199e-05, 5.011099999999852e-05, 5.094500000000016e-05, 5.061199999999849e-05, 5.094400000000068e-05, 5.011099999999852e-05, 5.0943...</msg>
<status status="PASS" starttime="20201029 18:19:33.494" endtime="20201029 18:19:33.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.502" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 18:19:33.501" endtime="20201029 18:19:33.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.505" level="INFO">VALUE: [5.047199999999932e-05, 5.094500000000016e-05, 5.011100000000199e-05, 5.011099999999852e-05, 5.094500000000016e-05, 5.061199999999849e-05, 5.094400000000068e-05, 5.011099999999852e-05, 5.0943999999997214e-05, 5.044400000000018e-05, 5.097199999999982e-05, 5.029200000000039e-05, 5.069400000000043e-05, 5.093100000000059e-05, 5.0957999999996784e-05, 5.076399999999828e-05, 5.061099999999902e-05, 5.095899999999973e-05, 5.012499999999809e-05, 5.077800000000132e-05, 5.062499999999859e-05, 5.0137999999998184e-05, 5.077800000000132e-05, 5.062499999999859e-05, 5.095800000000025e-05, 5.027699999999788e-05, 5.027700000000135e-05, 5.02079999999995e-05, 5.061099999999902e-05, 5.044400000000018e-05, 5.012500000000156e-05, 5.026399999999778e-05, 5.027800000000082e-05, 5.009699999999895e-05, 5.009699999999895e-05, 5.08469999999997e-05, 5.061099999999902e-05, 5.026399999999778e-05, 5.094500000000016e-05, 5.044499999999966e-05, 5.011099999999852e-05, 5.012500000000156e-05, 5.018099999999984e-05, 5.059800000000239e-05, 5.044400000000018e-05, 5.027699999999788e-05, 5.094400000000068e-05, 5.059699999999945e-05, 5.012499999999809e-05, 5.094400000000068e-05]</msg>
<status status="PASS" starttime="20201029 18:19:33.503" endtime="20201029 18:19:33.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.498" endtime="20201029 18:19:33.507"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:33.510" endtime="20201029 18:19:33.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.509" endtime="20201029 18:19:33.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.508" endtime="20201029 18:19:33.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.149" endtime="20201029 18:19:33.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.148" endtime="20201029 18:19:33.531"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.539" endtime="20201029 18:19:33.557"></status>
</kw>
<msg timestamp="20201029 18:19:33.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:33.538" endtime="20201029 18:19:33.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:33.558" endtime="20201029 18:19:33.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.561" endtime="20201029 18:19:33.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.535" endtime="20201029 18:19:33.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.533" endtime="20201029 18:19:33.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.570" endtime="20201029 18:19:33.856"></status>
</kw>
<msg timestamp="20201029 18:19:33.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02217175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022223764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:33.568" endtime="20201029 18:19:33.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02217175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022223764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:33.860" endtime="20201029 18:19:33.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.868" endtime="20201029 18:19:33.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.566" endtime="20201029 18:19:33.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.564" endtime="20201029 18:19:33.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:33.875" level="INFO">${RESULT} = [{'diff': 5.201399999999953e-05}, {'diff': 5.112499999999909e-05}, {'diff': 5.144500000000066e-05}, {'diff': 5.161100000000002e-05}, {'diff': 5.112499999999909e-05}, {'diff': 5.161100000000002e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:33.871" endtime="20201029 18:19:33.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:33.879" level="INFO">${ACCURACY} = {'diff': [5.201399999999953e-05, 5.112499999999909e-05, 5.144500000000066e-05, 5.161100000000002e-05, 5.112499999999909e-05, 5.161100000000002e-05, 5.161199999999949e-05, 5.176400000000275e-05, 5.1431...</msg>
<status status="PASS" starttime="20201029 18:19:33.876" endtime="20201029 18:19:33.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.884" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 18:19:33.883" endtime="20201029 18:19:33.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.886" level="INFO">VALUE: [5.201399999999953e-05, 5.112499999999909e-05, 5.144500000000066e-05, 5.161100000000002e-05, 5.112499999999909e-05, 5.161100000000002e-05, 5.161199999999949e-05, 5.176400000000275e-05, 5.143100000000109e-05, 5.158300000000088e-05, 5.193000000000211e-05, 5.161100000000002e-05, 5.177700000000285e-05, 5.159699999999698e-05, 5.176399999999928e-05, 5.195800000000125e-05, 5.108300000000038e-05, 5.177799999999885e-05, 5.132000000000053e-05, 5.145899999999676e-05, 5.145900000000023e-05, 5.177800000000232e-05, 5.144500000000066e-05, 5.109799999999942e-05, 5.127799999999835e-05, 5.176399999999928e-05, 5.144500000000066e-05, 5.131899999999759e-05, 5.188899999999941e-05, 5.109699999999995e-05, 5.145800000000075e-05, 5.1943999999998214e-05, 5.112499999999909e-05, 5.144400000000118e-05, 5.1443999999997714e-05, 5.111099999999952e-05, 5.162499999999959e-05, 5.144500000000066e-05, 5.162499999999959e-05, 5.176399999999928e-05, 5.158400000000035e-05, 5.112499999999909e-05, 5.126400000000225e-05, 5.129100000000192e-05, 5.159799999999992e-05, 5.1457999999997284e-05, 5.158299999999741e-05, 5.1443999999997714e-05, 5.198600000000039e-05, 5.180599999999799e-05]</msg>
<status status="PASS" starttime="20201029 18:19:33.885" endtime="20201029 18:19:33.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.880" endtime="20201029 18:19:33.888"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:33.891" endtime="20201029 18:19:33.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.890" endtime="20201029 18:19:33.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.889" endtime="20201029 18:19:33.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.532" endtime="20201029 18:19:33.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.531" endtime="20201029 18:19:33.912"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.921" endtime="20201029 18:19:33.938"></status>
</kw>
<msg timestamp="20201029 18:19:33.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:33.919" endtime="20201029 18:19:33.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:33.940" endtime="20201029 18:19:33.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.942" endtime="20201029 18:19:33.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.917" endtime="20201029 18:19:33.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.915" endtime="20201029 18:19:33.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.951" endtime="20201029 18:19:34.238"></status>
</kw>
<msg timestamp="20201029 18:19:34.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022078361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022130528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:33.950" endtime="20201029 18:19:34.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022078361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022130528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:34.242" endtime="20201029 18:19:34.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.250" endtime="20201029 18:19:34.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.947" endtime="20201029 18:19:34.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.946" endtime="20201029 18:19:34.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:34.257" level="INFO">${RESULT} = [{'diff': 5.21669999999988e-05}, {'diff': 5.212500000000009e-05}, {'diff': 5.211199999999999e-05}, {'diff': 5.261200000000049e-05}, {'diff': 5.281899999999909e-05}, {'diff': 5.295800000000225e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:34.253" endtime="20201029 18:19:34.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:34.261" level="INFO">${ACCURACY} = {'diff': [5.21669999999988e-05, 5.212500000000009e-05, 5.211199999999999e-05, 5.261200000000049e-05, 5.281899999999909e-05, 5.295800000000225e-05, 5.294400000000268e-05, 5.261099999999755e-05, 5.22780...</msg>
<status status="PASS" starttime="20201029 18:19:34.258" endtime="20201029 18:19:34.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.265" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 18:19:34.264" endtime="20201029 18:19:34.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.268" level="INFO">VALUE: [5.21669999999988e-05, 5.212500000000009e-05, 5.211199999999999e-05, 5.261200000000049e-05, 5.281899999999909e-05, 5.295800000000225e-05, 5.294400000000268e-05, 5.261099999999755e-05, 5.227800000000282e-05, 5.261100000000102e-05, 5.227799999999935e-05, 5.294400000000268e-05, 5.277800000000332e-05, 5.211099999999705e-05, 5.277799999999985e-05, 5.208300000000138e-05, 5.209699999999748e-05, 5.283299999999866e-05, 5.247200000000132e-05, 5.277799999999985e-05, 5.226399999999978e-05, 5.241699999999905e-05, 5.277700000000038e-05, 5.277700000000038e-05, 5.254100000000317e-05, 5.229199999999892e-05, 5.263900000000016e-05, 5.298600000000139e-05, 5.227800000000282e-05, 5.276400000000028e-05, 5.227799999999935e-05, 5.211100000000052e-05, 5.259700000000145e-05, 5.211100000000052e-05, 5.293099999999912e-05, 5.262500000000059e-05, 5.279200000000289e-05, 5.279099999999995e-05, 5.227800000000282e-05, 5.208300000000138e-05, 5.226300000000031e-05, 5.261099999999755e-05, 5.211100000000052e-05, 5.2443999999998714e-05, 5.227799999999935e-05, 5.2443999999998714e-05, 5.261100000000102e-05, 5.243099999999862e-05, 5.261100000000102e-05, 5.24730000000008e-05]</msg>
<status status="PASS" starttime="20201029 18:19:34.266" endtime="20201029 18:19:34.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.262" endtime="20201029 18:19:34.269"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:34.273" endtime="20201029 18:19:34.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.271" endtime="20201029 18:19:34.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.270" endtime="20201029 18:19:34.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.913" endtime="20201029 18:19:34.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.912" endtime="20201029 18:19:34.293"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.302" endtime="20201029 18:19:34.320"></status>
</kw>
<msg timestamp="20201029 18:19:34.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:34.300" endtime="20201029 18:19:34.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:34.322" endtime="20201029 18:19:34.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.324" endtime="20201029 18:19:34.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.298" endtime="20201029 18:19:34.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.296" endtime="20201029 18:19:34.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.333" endtime="20201029 18:19:34.620"></status>
</kw>
<msg timestamp="20201029 18:19:34.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023155861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023209569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:34.331" endtime="20201029 18:19:34.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023155861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023209569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:34.625" endtime="20201029 18:19:34.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.633" endtime="20201029 18:19:34.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.329" endtime="20201029 18:19:34.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.327" endtime="20201029 18:19:34.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:34.639" level="INFO">${RESULT} = [{'diff': 5.3707999999999534e-05}, {'diff': 5.327800000000035e-05}, {'diff': 5.309799999999795e-05}, {'diff': 5.327800000000035e-05}, {'diff': 5.3430000000000144e-05}, {'diff': 5.312499999999762e-05},...</msg>
<status status="PASS" starttime="20201029 18:19:34.636" endtime="20201029 18:19:34.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:34.644" level="INFO">${ACCURACY} = {'diff': [5.3707999999999534e-05, 5.327800000000035e-05, 5.309799999999795e-05, 5.327800000000035e-05, 5.3430000000000144e-05, 5.312499999999762e-05, 5.308299999999891e-05, 5.361100000000202e-05, 5.37...</msg>
<status status="PASS" starttime="20201029 18:19:34.640" endtime="20201029 18:19:34.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.648" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 18:19:34.647" endtime="20201029 18:19:34.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.650" level="INFO">VALUE: [5.3707999999999534e-05, 5.327800000000035e-05, 5.309799999999795e-05, 5.327800000000035e-05, 5.3430000000000144e-05, 5.312499999999762e-05, 5.308299999999891e-05, 5.361100000000202e-05, 5.3777999999997383e-05, 5.3430000000000144e-05, 5.3443999999999714e-05, 5.327800000000035e-05, 5.362500000000159e-05, 5.344499999999919e-05, 5.327800000000035e-05, 5.376400000000128e-05, 5.345800000000275e-05, 5.3652000000001254e-05, 5.393100000000012e-05, 5.400000000000196e-05, 5.311100000000152e-05, 5.361200000000149e-05, 5.3457999999999284e-05, 5.326300000000131e-05, 5.3957999999999784e-05, 5.379099999999748e-05, 5.361099999999855e-05, 5.3443999999999714e-05, 5.3430000000000144e-05, 5.391700000000055e-05, 5.3944000000000214e-05, 5.383299999999966e-05, 5.344499999999919e-05, 5.358299999999941e-05, 5.327800000000035e-05, 5.395899999999926e-05, 5.311100000000152e-05, 5.365300000000073e-05, 5.395800000000325e-05, 5.3944000000000214e-05, 5.377700000000138e-05, 5.362500000000159e-05, 5.3944000000000214e-05, 5.326400000000078e-05, 5.3430000000000144e-05, 5.3957999999999784e-05, 5.377800000000085e-05, 5.359699999999898e-05, 5.384699999999923e-05, 5.313900000000066e-05]</msg>
<status status="PASS" starttime="20201029 18:19:34.649" endtime="20201029 18:19:34.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.644" endtime="20201029 18:19:34.653"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:34.656" endtime="20201029 18:19:34.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.655" endtime="20201029 18:19:34.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.654" endtime="20201029 18:19:34.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.294" endtime="20201029 18:19:34.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.294" endtime="20201029 18:19:34.677"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.686" endtime="20201029 18:19:34.703"></status>
</kw>
<msg timestamp="20201029 18:19:34.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:34.684" endtime="20201029 18:19:34.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:34.705" endtime="20201029 18:19:34.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.707" endtime="20201029 18:19:34.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.682" endtime="20201029 18:19:34.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.679" endtime="20201029 18:19:34.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.716" endtime="20201029 18:19:35.004"></status>
</kw>
<msg timestamp="20201029 18:19:35.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022372125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022426792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:34.715" endtime="20201029 18:19:35.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022372125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022426792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:35.008" endtime="20201029 18:19:35.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.016" endtime="20201029 18:19:35.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.712" endtime="20201029 18:19:35.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.710" endtime="20201029 18:19:35.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:35.023" level="INFO">${RESULT} = [{'diff': 5.46670000000013e-05}, {'diff': 5.412500000000209e-05}, {'diff': 5.408399999999938e-05}, {'diff': 5.427800000000135e-05}, {'diff': 5.4777999999998384e-05}, {'diff': 5.429099999999798e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:35.019" endtime="20201029 18:19:35.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:35.027" level="INFO">${ACCURACY} = {'diff': [5.46670000000013e-05, 5.412500000000209e-05, 5.408399999999938e-05, 5.427800000000135e-05, 5.4777999999998384e-05, 5.429099999999798e-05, 5.4943999999997745e-05, 5.415299999999776e-05, 5.443...</msg>
<status status="PASS" starttime="20201029 18:19:35.024" endtime="20201029 18:19:35.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.032" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 18:19:35.031" endtime="20201029 18:19:35.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.034" level="INFO">VALUE: [5.46670000000013e-05, 5.412500000000209e-05, 5.408399999999938e-05, 5.427800000000135e-05, 5.4777999999998384e-05, 5.429099999999798e-05, 5.4943999999997745e-05, 5.415299999999776e-05, 5.4430000000001144e-05, 5.479200000000142e-05, 5.409699999999948e-05, 5.411099999999905e-05, 5.426400000000178e-05, 5.462499999999912e-05, 5.4277999999997883e-05, 5.461099999999955e-05, 5.481900000000109e-05, 5.459699999999998e-05, 5.409700000000295e-05, 5.444500000000019e-05, 5.493099999999765e-05, 5.4958000000000784e-05, 5.426299999999884e-05, 5.427700000000188e-05, 5.434699999999973e-05, 5.4429999999997675e-05, 5.4971999999996884e-05, 5.4958000000000784e-05, 5.456900000000084e-05, 5.411099999999905e-05, 5.412499999999862e-05, 5.4722000000000104e-05, 5.479200000000142e-05, 5.443100000000062e-05, 5.494499999999722e-05, 5.493100000000112e-05, 5.461099999999955e-05, 5.409800000000242e-05, 5.427800000000135e-05, 5.461099999999955e-05, 5.4401999999998535e-05, 5.461099999999955e-05, 5.479099999999848e-05, 5.480499999999805e-05, 5.409699999999948e-05, 5.459699999999998e-05, 5.4929999999998175e-05, 5.4179999999997425e-05, 5.4443999999997245e-05, 5.448700000000237e-05]</msg>
<status status="PASS" starttime="20201029 18:19:35.033" endtime="20201029 18:19:35.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.028" endtime="20201029 18:19:35.039"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:35.043" endtime="20201029 18:19:35.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.042" endtime="20201029 18:19:35.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.040" endtime="20201029 18:19:35.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.678" endtime="20201029 18:19:35.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.677" endtime="20201029 18:19:35.064"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.072" endtime="20201029 18:19:35.090"></status>
</kw>
<msg timestamp="20201029 18:19:35.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:35.071" endtime="20201029 18:19:35.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:35.092" endtime="20201029 18:19:35.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.094" endtime="20201029 18:19:35.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.068" endtime="20201029 18:19:35.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.066" endtime="20201029 18:19:35.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.103" endtime="20201029 18:19:35.390"></status>
</kw>
<msg timestamp="20201029 18:19:35.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0224575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022512653, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:19:35.101" endtime="20201029 18:19:35.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0224575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022512653, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:19:35.394" endtime="20201029 18:19:35.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.402" endtime="20201029 18:19:35.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.099" endtime="20201029 18:19:35.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.097" endtime="20201029 18:19:35.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:35.409" level="INFO">${RESULT} = [{'diff': 5.515300000000223e-05}, {'diff': 5.5665999999999355e-05}, {'diff': 5.595899999999779e-05}, {'diff': 5.544500000000119e-05}, {'diff': 5.5777999999999384e-05}, {'diff': 5.5972000000001354e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:35.406" endtime="20201029 18:19:35.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:35.413" level="INFO">${ACCURACY} = {'diff': [5.515300000000223e-05, 5.5665999999999355e-05, 5.595899999999779e-05, 5.544500000000119e-05, 5.5777999999999384e-05, 5.5972000000001354e-05, 5.50410000000022e-05, 5.5444000000001714e-05, 5.5...</msg>
<status status="PASS" starttime="20201029 18:19:35.410" endtime="20201029 18:19:35.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.417" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 18:19:35.416" endtime="20201029 18:19:35.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.420" level="INFO">VALUE: [5.515300000000223e-05, 5.5665999999999355e-05, 5.595899999999779e-05, 5.544500000000119e-05, 5.5777999999999384e-05, 5.5972000000001354e-05, 5.50410000000022e-05, 5.5444000000001714e-05, 5.509700000000048e-05, 5.5929999999999175e-05, 5.5929999999999175e-05, 5.561100000000055e-05, 5.527800000000235e-05, 5.543099999999815e-05, 5.526400000000278e-05, 5.558399999999741e-05, 5.5179999999998425e-05, 5.561100000000055e-05, 5.562500000000012e-05, 5.543099999999815e-05, 5.5457999999997815e-05, 5.5263999999999314e-05, 5.5444000000001714e-05, 5.5944000000002214e-05, 5.577699999999991e-05, 5.511100000000005e-05, 5.5929999999999175e-05, 5.5763999999999814e-05, 5.5805999999998523e-05, 5.5943999999998745e-05, 5.5277999999998884e-05, 5.5263999999999314e-05, 5.5763999999999814e-05, 5.5263999999999314e-05, 5.593099999999865e-05, 5.5791999999998954e-05, 5.516699999999833e-05, 5.527700000000288e-05, 5.5458000000001284e-05, 5.511100000000005e-05, 5.5943999999998745e-05, 5.562500000000012e-05, 5.511100000000005e-05, 5.5486000000000424e-05, 5.579200000000242e-05, 5.5943999999998745e-05, 5.5443999999998245e-05, 5.504200000000167e-05, 5.540300000000248e-05, 5.5249999999999744e-05]</msg>
<status status="PASS" starttime="20201029 18:19:35.418" endtime="20201029 18:19:35.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.414" endtime="20201029 18:19:35.421"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:35.425" endtime="20201029 18:19:35.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.423" endtime="20201029 18:19:35.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.422" endtime="20201029 18:19:35.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.065" endtime="20201029 18:19:35.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.064" endtime="20201029 18:19:35.445"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.454" endtime="20201029 18:19:35.473"></status>
</kw>
<msg timestamp="20201029 18:19:35.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:35.453" endtime="20201029 18:19:35.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:35.474" endtime="20201029 18:19:35.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.477" endtime="20201029 18:19:35.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.450" endtime="20201029 18:19:35.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.448" endtime="20201029 18:19:35.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.486" endtime="20201029 18:19:35.771"></status>
</kw>
<msg timestamp="20201029 18:19:35.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02367775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023734389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:35.484" endtime="20201029 18:19:35.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02367775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023734389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:35.776" endtime="20201029 18:19:35.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.784" endtime="20201029 18:19:35.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.482" endtime="20201029 18:19:35.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.480" endtime="20201029 18:19:35.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:35.790" level="INFO">${RESULT} = [{'diff': 5.663900000000069e-05}, {'diff': 5.6486000000001424e-05}, {'diff': 5.693099999999965e-05}, {'diff': 5.6778000000000384e-05}, {'diff': 5.6429999999999675e-05}, {'diff': 5.6458000000002284e-05...</msg>
<status status="PASS" starttime="20201029 18:19:35.787" endtime="20201029 18:19:35.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:35.794" level="INFO">${ACCURACY} = {'diff': [5.663900000000069e-05, 5.6486000000001424e-05, 5.693099999999965e-05, 5.6778000000000384e-05, 5.6429999999999675e-05, 5.6458000000002284e-05, 5.676299999999787e-05, 5.6888000000001465e-05, 5...</msg>
<status status="PASS" starttime="20201029 18:19:35.791" endtime="20201029 18:19:35.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.799" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 18:19:35.798" endtime="20201029 18:19:35.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.801" level="INFO">VALUE: [5.663900000000069e-05, 5.6486000000001424e-05, 5.693099999999965e-05, 5.6778000000000384e-05, 5.6429999999999675e-05, 5.6458000000002284e-05, 5.676299999999787e-05, 5.6888000000001465e-05, 5.6958000000002784e-05, 5.661099999999808e-05, 5.6791999999999954e-05, 5.6930000000000175e-05, 5.6778000000000384e-05, 5.659700000000198e-05, 5.6777999999996914e-05, 5.612500000000062e-05, 5.694499999999922e-05, 5.659699999999851e-05, 5.629200000000292e-05, 5.6819999999999093e-05, 5.644500000000219e-05, 5.612499999999715e-05, 5.609800000000095e-05, 5.633300000000216e-05, 5.6471999999998385e-05, 5.662499999999765e-05, 5.6943999999999745e-05, 5.611100000000105e-05, 5.611100000000105e-05, 5.608300000000191e-05, 5.611100000000105e-05, 5.659699999999851e-05, 5.611100000000105e-05, 5.609700000000148e-05, 5.661100000000155e-05, 5.6138000000000715e-05, 5.6500000000000994e-05, 5.661200000000102e-05, 5.611099999999758e-05, 5.6429999999999675e-05, 5.6443999999999245e-05, 5.6264000000000314e-05, 5.677700000000091e-05, 5.611100000000105e-05, 5.6236000000001174e-05, 5.6457999999998815e-05, 5.661100000000155e-05, 5.662500000000112e-05, 5.694499999999922e-05, 5.657000000000231e-05]</msg>
<status status="PASS" starttime="20201029 18:19:35.800" endtime="20201029 18:19:35.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.795" endtime="20201029 18:19:35.803"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:35.807" endtime="20201029 18:19:35.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.805" endtime="20201029 18:19:35.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.804" endtime="20201029 18:19:35.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.446" endtime="20201029 18:19:35.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.446" endtime="20201029 18:19:35.828"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.836" endtime="20201029 18:19:35.854"></status>
</kw>
<msg timestamp="20201029 18:19:35.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:35.835" endtime="20201029 18:19:35.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:35.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:35.856" endtime="20201029 18:19:35.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.858" endtime="20201029 18:19:35.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.832" endtime="20201029 18:19:35.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.830" endtime="20201029 18:19:35.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:35.867" endtime="20201029 18:19:36.152"></status>
</kw>
<msg timestamp="20201029 18:19:36.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022045, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022102333, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:19:35.866" endtime="20201029 18:19:36.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022045, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022102333, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:19:36.156" endtime="20201029 18:19:36.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.164" endtime="20201029 18:19:36.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.863" endtime="20201029 18:19:36.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.862" endtime="20201029 18:19:36.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:36.171" level="INFO">${RESULT} = [{'diff': 5.733299999999969e-05}, {'diff': 5.7429999999997206e-05}, {'diff': 5.711100000000205e-05}, {'diff': 5.7763999999998344e-05}, {'diff': 5.7306000000000024e-05}, {'diff': 5.743100000000015e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:36.168" endtime="20201029 18:19:36.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:36.176" level="INFO">${ACCURACY} = {'diff': [5.733299999999969e-05, 5.7429999999997206e-05, 5.711100000000205e-05, 5.7763999999998344e-05, 5.7306000000000024e-05, 5.743100000000015e-05, 5.793099999999718e-05, 5.7306000000000024e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:19:36.172" endtime="20201029 18:19:36.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.180" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 18:19:36.179" endtime="20201029 18:19:36.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.183" level="INFO">VALUE: [5.733299999999969e-05, 5.7429999999997206e-05, 5.711100000000205e-05, 5.7763999999998344e-05, 5.7306000000000024e-05, 5.743100000000015e-05, 5.793099999999718e-05, 5.7306000000000024e-05, 5.745899999999929e-05, 5.7985999999999455e-05, 5.744499999999972e-05, 5.730500000000055e-05, 5.762499999999865e-05, 5.7278000000000884e-05, 5.779100000000148e-05, 5.7680000000000925e-05, 5.727699999999794e-05, 5.7264000000001314e-05, 5.7916000000001605e-05, 5.7457999999999815e-05, 5.7778000000001384e-05, 5.761099999999908e-05, 5.7763999999998344e-05, 5.711099999999858e-05, 5.7792000000000954e-05, 5.7264000000001314e-05, 5.709799999999848e-05, 5.761099999999908e-05, 5.756900000000037e-05, 5.7207999999999565e-05, 5.730500000000055e-05, 5.777700000000191e-05, 5.727700000000141e-05, 5.7763999999998344e-05, 5.7443999999996775e-05, 5.7778000000001384e-05, 5.7944000000000745e-05, 5.7820000000000094e-05, 5.7278000000000884e-05, 5.744499999999972e-05, 5.741700000000058e-05, 5.712499999999815e-05, 5.709799999999848e-05, 5.7778000000001384e-05, 5.793100000000065e-05, 5.759799999999898e-05, 5.777699999999844e-05, 5.7485999999998955e-05, 5.7235999999998705e-05, 5.7944000000000745e-05]</msg>
<status status="PASS" starttime="20201029 18:19:36.181" endtime="20201029 18:19:36.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.177" endtime="20201029 18:19:36.184"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:36.188" endtime="20201029 18:19:36.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.186" endtime="20201029 18:19:36.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.185" endtime="20201029 18:19:36.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.829" endtime="20201029 18:19:36.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:35.828" endtime="20201029 18:19:36.208"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.217" endtime="20201029 18:19:36.236"></status>
</kw>
<msg timestamp="20201029 18:19:36.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:36.215" endtime="20201029 18:19:36.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:36.237" endtime="20201029 18:19:36.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.240" endtime="20201029 18:19:36.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.213" endtime="20201029 18:19:36.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.211" endtime="20201029 18:19:36.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.249" endtime="20201029 18:19:36.537"></status>
</kw>
<msg timestamp="20201029 18:19:36.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022235847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022294722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:36.247" endtime="20201029 18:19:36.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022235847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022294722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:36.543" endtime="20201029 18:19:36.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.551" endtime="20201029 18:19:36.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.245" endtime="20201029 18:19:36.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.243" endtime="20201029 18:19:36.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:36.558" level="INFO">${RESULT} = [{'diff': 5.88749999999999e-05}, {'diff': 5.8250000000002744e-05}, {'diff': 5.8278000000001884e-05}, {'diff': 5.861100000000008e-05}, {'diff': 5.858300000000094e-05}, {'diff': 5.880499999999858e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:36.555" endtime="20201029 18:19:36.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:36.562" level="INFO">${ACCURACY} = {'diff': [5.88749999999999e-05, 5.8250000000002744e-05, 5.8278000000001884e-05, 5.861100000000008e-05, 5.858300000000094e-05, 5.880499999999858e-05, 5.876299999999987e-05, 5.877699999999944e-05, 5.877...</msg>
<status status="PASS" starttime="20201029 18:19:36.559" endtime="20201029 18:19:36.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.567" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 18:19:36.566" endtime="20201029 18:19:36.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.569" level="INFO">VALUE: [5.88749999999999e-05, 5.8250000000002744e-05, 5.8278000000001884e-05, 5.861100000000008e-05, 5.858300000000094e-05, 5.880499999999858e-05, 5.876299999999987e-05, 5.877699999999944e-05, 5.877699999999944e-05, 5.8458000000000815e-05, 5.8777999999998914e-05, 5.805499999999783e-05, 5.8472000000000385e-05, 5.812499999999915e-05, 5.859700000000051e-05, 5.808300000000044e-05, 5.881900000000162e-05, 5.811099999999958e-05, 5.8569999999997374e-05, 5.822299999999961e-05, 5.894500000000122e-05, 5.8944000000001745e-05, 5.883300000000119e-05, 5.8444000000001245e-05, 5.877700000000291e-05, 5.8444000000001245e-05, 5.8277999999998414e-05, 5.8777999999998914e-05, 5.841700000000158e-05, 5.812499999999915e-05, 5.844499999999725e-05, 5.844499999999725e-05, 5.894499999999775e-05, 5.861100000000008e-05, 5.8972000000000885e-05, 5.8763999999999345e-05, 5.894500000000122e-05, 5.8597999999999983e-05, 5.811099999999958e-05, 5.8764000000002814e-05, 5.8777999999998914e-05, 5.861100000000008e-05, 5.8777999999998914e-05, 5.8834000000000664e-05, 5.8763999999999345e-05, 5.8292000000001454e-05, 5.894500000000122e-05, 5.841700000000158e-05, 5.811099999999958e-05, 5.844500000000072e-05]</msg>
<status status="PASS" starttime="20201029 18:19:36.568" endtime="20201029 18:19:36.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.563" endtime="20201029 18:19:36.570"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:36.574" endtime="20201029 18:19:36.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.572" endtime="20201029 18:19:36.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.571" endtime="20201029 18:19:36.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.209" endtime="20201029 18:19:36.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.209" endtime="20201029 18:19:36.595"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.603" endtime="20201029 18:19:36.624"></status>
</kw>
<msg timestamp="20201029 18:19:36.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:36.602" endtime="20201029 18:19:36.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:36.625" endtime="20201029 18:19:36.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.628" endtime="20201029 18:19:36.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.599" endtime="20201029 18:19:36.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.597" endtime="20201029 18:19:36.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.637" endtime="20201029 18:19:36.923"></status>
</kw>
<msg timestamp="20201029 18:19:36.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025477042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025536375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:36.635" endtime="20201029 18:19:36.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025477042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025536375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:36.927" endtime="20201029 18:19:36.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.935" endtime="20201029 18:19:36.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.632" endtime="20201029 18:19:36.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.631" endtime="20201029 18:19:36.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:36.941" level="INFO">${RESULT} = [{'diff': 5.933300000000169e-05}, {'diff': 5.994499999999875e-05}, {'diff': 5.994500000000222e-05}, {'diff': 5.911100000000058e-05}, {'diff': 5.936100000000083e-05}, {'diff': 5.9598000000000984e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:36.938" endtime="20201029 18:19:36.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:36.945" level="INFO">${ACCURACY} = {'diff': [5.933300000000169e-05, 5.994499999999875e-05, 5.994500000000222e-05, 5.911100000000058e-05, 5.936100000000083e-05, 5.9598000000000984e-05, 5.943099999999868e-05, 5.9250000000000275e-05, 5.92...</msg>
<status status="PASS" starttime="20201029 18:19:36.942" endtime="20201029 18:19:36.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.950" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 18:19:36.949" endtime="20201029 18:19:36.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.952" level="INFO">VALUE: [5.933300000000169e-05, 5.994499999999875e-05, 5.994500000000222e-05, 5.911100000000058e-05, 5.936100000000083e-05, 5.9598000000000984e-05, 5.943099999999868e-05, 5.9250000000000275e-05, 5.927699999999994e-05, 5.979100000000001e-05, 5.977700000000044e-05, 5.9777999999999915e-05, 5.912500000000015e-05, 5.9263999999999845e-05, 5.9791999999999484e-05, 5.915299999999929e-05, 5.9735999999997735e-05, 5.9777999999999915e-05, 5.920900000000104e-05, 5.991699999999961e-05, 5.993099999999918e-05, 5.9277999999999414e-05, 5.9278000000002884e-05, 5.9611999999997084e-05, 5.9250000000000275e-05, 5.9943999999999276e-05, 5.9443999999998776e-05, 5.911100000000058e-05, 5.963899999999675e-05, 5.9458000000001815e-05, 5.912500000000015e-05, 5.961100000000108e-05, 5.9944000000002745e-05, 5.9777999999999915e-05, 5.945899999999782e-05, 5.961100000000108e-05, 5.9278000000002884e-05, 5.9263999999999845e-05, 5.9957999999998846e-05, 5.9486000000000955e-05, 5.981899999999915e-05, 5.911100000000058e-05, 5.927699999999994e-05, 5.9291999999998984e-05, 5.912500000000015e-05, 5.9444000000002245e-05, 5.9443999999998776e-05, 5.9791999999999484e-05, 5.9277999999999414e-05, 5.911100000000058e-05]</msg>
<status status="PASS" starttime="20201029 18:19:36.951" endtime="20201029 18:19:36.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.946" endtime="20201029 18:19:36.954"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:36.958" endtime="20201029 18:19:36.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.956" endtime="20201029 18:19:36.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.955" endtime="20201029 18:19:36.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.596" endtime="20201029 18:19:36.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.595" endtime="20201029 18:19:36.979"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.987" endtime="20201029 18:19:37.005"></status>
</kw>
<msg timestamp="20201029 18:19:37.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:36.986" endtime="20201029 18:19:37.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:37.006" endtime="20201029 18:19:37.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.009" endtime="20201029 18:19:37.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.983" endtime="20201029 18:19:37.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.981" endtime="20201029 18:19:37.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.018" endtime="20201029 18:19:37.303"></status>
</kw>
<msg timestamp="20201029 18:19:37.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022055431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022116444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:37.016" endtime="20201029 18:19:37.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022055431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022116444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:37.307" endtime="20201029 18:19:37.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.315" endtime="20201029 18:19:37.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.014" endtime="20201029 18:19:37.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.012" endtime="20201029 18:19:37.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:37.322" level="INFO">${RESULT} = [{'diff': 6.101299999999865e-05}, {'diff': 6.061100000000208e-05}, {'diff': 6.079100000000101e-05}, {'diff': 6.061099999999861e-05}, {'diff': 6.011100000000158e-05}, {'diff': 6.058299999999947e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:37.318" endtime="20201029 18:19:37.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:37.327" level="INFO">${ACCURACY} = {'diff': [6.101299999999865e-05, 6.061100000000208e-05, 6.079100000000101e-05, 6.061099999999861e-05, 6.011100000000158e-05, 6.058299999999947e-05, 6.061099999999861e-05, 6.011099999999811e-05, 6.0111...</msg>
<status status="PASS" starttime="20201029 18:19:37.323" endtime="20201029 18:19:37.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.331" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 18:19:37.330" endtime="20201029 18:19:37.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.334" level="INFO">VALUE: [6.101299999999865e-05, 6.061100000000208e-05, 6.079100000000101e-05, 6.061099999999861e-05, 6.011100000000158e-05, 6.058299999999947e-05, 6.061099999999861e-05, 6.011099999999811e-05, 6.011100000000158e-05, 6.061099999999861e-05, 6.0778000000000915e-05, 6.009699999999854e-05, 6.0278000000000415e-05, 6.0097999999998014e-05, 6.095899999999932e-05, 6.029100000000051e-05, 6.0457999999999346e-05, 6.061099999999861e-05, 6.0443999999999776e-05, 6.006900000000287e-05, 6.005499999999983e-05, 6.0930000000000706e-05, 6.055500000000033e-05, 6.0944000000000276e-05, 6.066700000000036e-05, 6.093100000000018e-05, 6.040300000000054e-05, 6.011099999999811e-05, 6.0111999999997584e-05, 6.0612000000001554e-05, 6.011100000000158e-05, 6.0472000000002385e-05, 6.0444000000003245e-05, 6.0985999999998985e-05, 6.0778000000000915e-05, 6.0430000000000206e-05, 6.0957999999999846e-05, 6.0778000000000915e-05, 6.0778000000000915e-05, 6.0500000000001525e-05, 6.011099999999811e-05, 6.044499999999925e-05, 6.0278000000000415e-05, 6.043099999999968e-05, 6.0291999999999984e-05, 6.0584000000002414e-05, 6.044499999999925e-05, 6.0944000000000276e-05, 6.0443999999999776e-05, 6.0930000000000706e-05]</msg>
<status status="PASS" starttime="20201029 18:19:37.332" endtime="20201029 18:19:37.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.327" endtime="20201029 18:19:37.335"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:37.338" endtime="20201029 18:19:37.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.337" endtime="20201029 18:19:37.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.336" endtime="20201029 18:19:37.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.979" endtime="20201029 18:19:37.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.979" endtime="20201029 18:19:37.359"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.368" endtime="20201029 18:19:37.386"></status>
</kw>
<msg timestamp="20201029 18:19:37.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:37.366" endtime="20201029 18:19:37.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:37.388" endtime="20201029 18:19:37.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.390" endtime="20201029 18:19:37.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.364" endtime="20201029 18:19:37.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.362" endtime="20201029 18:19:37.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.399" endtime="20201029 18:19:37.686"></status>
</kw>
<msg timestamp="20201029 18:19:37.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022443222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022504528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:37.398" endtime="20201029 18:19:37.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022443222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022504528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:37.690" endtime="20201029 18:19:37.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.698" endtime="20201029 18:19:37.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.395" endtime="20201029 18:19:37.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.393" endtime="20201029 18:19:37.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:37.704" level="INFO">${RESULT} = [{'diff': 6.130600000000055e-05}, {'diff': 6.179200000000148e-05}, {'diff': 6.159799999999951e-05}, {'diff': 6.180499999999811e-05}, {'diff': 6.130499999999761e-05}, {'diff': 6.14439999999973e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:37.701" endtime="20201029 18:19:37.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:37.709" level="INFO">${ACCURACY} = {'diff': [6.130600000000055e-05, 6.179200000000148e-05, 6.159799999999951e-05, 6.180499999999811e-05, 6.130499999999761e-05, 6.14439999999973e-05, 6.181899999999768e-05, 6.119400000000053e-05, 6.16109...</msg>
<status status="PASS" starttime="20201029 18:19:37.705" endtime="20201029 18:19:37.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.713" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 18:19:37.712" endtime="20201029 18:19:37.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.716" level="INFO">VALUE: [6.130600000000055e-05, 6.179200000000148e-05, 6.159799999999951e-05, 6.180499999999811e-05, 6.130499999999761e-05, 6.14439999999973e-05, 6.181899999999768e-05, 6.119400000000053e-05, 6.161099999999961e-05, 6.159700000000004e-05, 6.134799999999926e-05, 6.202699999999922e-05, 6.157000000000037e-05, 6.194500000000075e-05, 6.194500000000075e-05, 6.195900000000032e-05, 6.126399999999838e-05, 6.111100000000258e-05, 6.145800000000035e-05, 6.123700000000218e-05, 6.192999999999824e-05, 6.109699999999954e-05, 6.112499999999868e-05, 6.194400000000128e-05, 6.112499999999868e-05, 6.180600000000105e-05, 6.141700000000111e-05, 6.144400000000078e-05, 6.147299999999939e-05, 6.111099999999911e-05, 6.129200000000098e-05, 6.162499999999918e-05, 6.141700000000111e-05, 6.129100000000151e-05, 6.177800000000191e-05, 6.127699999999847e-05, 6.112499999999868e-05, 6.111100000000258e-05, 6.127800000000141e-05, 6.111099999999911e-05, 6.177799999999845e-05, 6.13889999999985e-05, 6.144400000000078e-05, 6.170799999999713e-05, 6.194499999999728e-05, 6.162499999999918e-05, 6.111099999999911e-05, 6.193100000000118e-05, 6.133300000000022e-05, 6.177799999999845e-05]</msg>
<status status="PASS" starttime="20201029 18:19:37.714" endtime="20201029 18:19:37.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.709" endtime="20201029 18:19:37.717"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:37.720" endtime="20201029 18:19:37.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.719" endtime="20201029 18:19:37.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.718" endtime="20201029 18:19:37.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.360" endtime="20201029 18:19:37.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.359" endtime="20201029 18:19:37.741"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.750" endtime="20201029 18:19:37.768"></status>
</kw>
<msg timestamp="20201029 18:19:37.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:37.748" endtime="20201029 18:19:37.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:37.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:37.770" endtime="20201029 18:19:37.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.772" endtime="20201029 18:19:37.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.746" endtime="20201029 18:19:37.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.743" endtime="20201029 18:19:37.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:37.781" endtime="20201029 18:19:38.066"></status>
</kw>
<msg timestamp="20201029 18:19:38.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022795847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022857986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:37.779" endtime="20201029 18:19:38.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022795847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022857986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:38.070" endtime="20201029 18:19:38.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.079" endtime="20201029 18:19:38.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.777" endtime="20201029 18:19:38.081"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.775" endtime="20201029 18:19:38.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:38.085" level="INFO">${RESULT} = [{'diff': 6.213899999999925e-05}, {'diff': 6.291699999999914e-05}, {'diff': 6.262500000000018e-05}, {'diff': 6.227799999999895e-05}, {'diff': 6.243099999999821e-05}, {'diff': 6.229199999999852e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:38.082" endtime="20201029 18:19:38.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:38.089" level="INFO">${ACCURACY} = {'diff': [6.213899999999925e-05, 6.291699999999914e-05, 6.262500000000018e-05, 6.227799999999895e-05, 6.243099999999821e-05, 6.229199999999852e-05, 6.244499999999778e-05, 6.293099999999871e-05, 6.2180...</msg>
<status status="PASS" starttime="20201029 18:19:38.086" endtime="20201029 18:19:38.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.094" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 18:19:38.093" endtime="20201029 18:19:38.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.096" level="INFO">VALUE: [6.213899999999925e-05, 6.291699999999914e-05, 6.262500000000018e-05, 6.227799999999895e-05, 6.243099999999821e-05, 6.229199999999852e-05, 6.244499999999778e-05, 6.293099999999871e-05, 6.218000000000196e-05, 6.294499999999828e-05, 6.211199999999958e-05, 6.276399999999988e-05, 6.22499999999998e-05, 6.277699999999997e-05, 6.24439999999983e-05, 6.24439999999983e-05, 6.261100000000061e-05, 6.294400000000228e-05, 6.226399999999938e-05, 6.244500000000125e-05, 6.280600000000205e-05, 6.244500000000125e-05, 6.293100000000218e-05, 6.294499999999828e-05, 6.277799999999945e-05, 6.211100000000011e-05, 6.227699999999947e-05, 6.294400000000228e-05, 6.226399999999938e-05, 6.29439999999988e-05, 6.277799999999945e-05, 6.226399999999938e-05, 6.212499999999968e-05, 6.277800000000291e-05, 6.209700000000054e-05, 6.243100000000168e-05, 6.261100000000061e-05, 6.294499999999828e-05, 6.276399999999988e-05, 6.229200000000198e-05, 6.279099999999954e-05, 6.22629999999999e-05, 6.24439999999983e-05, 6.230499999999861e-05, 6.229099999999904e-05, 6.279200000000248e-05, 6.24439999999983e-05, 6.272200000000117e-05, 6.243100000000168e-05, 6.276399999999988e-05]</msg>
<status status="PASS" starttime="20201029 18:19:38.095" endtime="20201029 18:19:38.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.090" endtime="20201029 18:19:38.098"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:38.102" endtime="20201029 18:19:38.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.100" endtime="20201029 18:19:38.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.099" endtime="20201029 18:19:38.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.742" endtime="20201029 18:19:38.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:37.741" endtime="20201029 18:19:38.122"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.131" endtime="20201029 18:19:38.149"></status>
</kw>
<msg timestamp="20201029 18:19:38.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:38.129" endtime="20201029 18:19:38.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:38.151" endtime="20201029 18:19:38.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.153" endtime="20201029 18:19:38.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.127" endtime="20201029 18:19:38.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.125" endtime="20201029 18:19:38.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.162" endtime="20201029 18:19:38.448"></status>
</kw>
<msg timestamp="20201029 18:19:38.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022539417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022603236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:38.161" endtime="20201029 18:19:38.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022539417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022603236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:38.452" endtime="20201029 18:19:38.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.460" endtime="20201029 18:19:38.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.158" endtime="20201029 18:19:38.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.156" endtime="20201029 18:19:38.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:38.467" level="INFO">${RESULT} = [{'diff': 6.381899999999968e-05}, {'diff': 6.326400000000038e-05}, {'diff': 6.327799999999995e-05}, {'diff': 6.317999999999949e-05}, {'diff': 6.347300000000139e-05}, {'diff': 6.343099999999921e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:38.464" endtime="20201029 18:19:38.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:38.472" level="INFO">${ACCURACY} = {'diff': [6.381899999999968e-05, 6.326400000000038e-05, 6.327799999999995e-05, 6.317999999999949e-05, 6.347300000000139e-05, 6.343099999999921e-05, 6.361099999999814e-05, 6.361200000000108e-05, 6.3444...</msg>
<status status="PASS" starttime="20201029 18:19:38.468" endtime="20201029 18:19:38.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.477" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 18:19:38.476" endtime="20201029 18:19:38.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.479" level="INFO">VALUE: [6.381899999999968e-05, 6.326400000000038e-05, 6.327799999999995e-05, 6.317999999999949e-05, 6.347300000000139e-05, 6.343099999999921e-05, 6.361099999999814e-05, 6.361200000000108e-05, 6.344499999999878e-05, 6.361100000000161e-05, 6.37630000000014e-05, 6.327700000000047e-05, 6.329199999999952e-05, 6.39439999999998e-05, 6.312500000000068e-05, 6.395799999999938e-05, 6.30690000000024e-05, 6.327799999999995e-05, 6.315299999999982e-05, 6.393099999999971e-05, 6.345900000000182e-05, 6.359799999999804e-05, 6.32639999999969e-05, 6.311199999999711e-05, 6.329100000000004e-05, 6.377700000000097e-05, 6.39439999999998e-05, 6.37639999999974e-05, 6.394500000000275e-05, 6.377799999999698e-05, 6.395799999999938e-05, 6.340300000000007e-05, 6.327799999999995e-05, 6.377800000000045e-05, 6.309699999999807e-05, 6.391700000000014e-05, 6.327799999999995e-05, 6.312500000000068e-05, 6.30690000000024e-05, 6.326299999999743e-05, 6.327700000000047e-05, 6.34439999999993e-05, 6.305499999999936e-05, 6.37639999999974e-05, 6.345799999999888e-05, 6.39439999999998e-05, 6.377800000000045e-05, 6.361099999999814e-05, 6.377800000000045e-05, 6.341699999999964e-05]</msg>
<status status="PASS" starttime="20201029 18:19:38.478" endtime="20201029 18:19:38.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.473" endtime="20201029 18:19:38.480"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:38.484" endtime="20201029 18:19:38.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.483" endtime="20201029 18:19:38.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.481" endtime="20201029 18:19:38.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.123" endtime="20201029 18:19:38.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.123" endtime="20201029 18:19:38.505"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.515" endtime="20201029 18:19:38.532"></status>
</kw>
<msg timestamp="20201029 18:19:38.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:38.513" endtime="20201029 18:19:38.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:38.533" endtime="20201029 18:19:38.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.536" endtime="20201029 18:19:38.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.510" endtime="20201029 18:19:38.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.508" endtime="20201029 18:19:38.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.545" endtime="20201029 18:19:38.831"></status>
</kw>
<msg timestamp="20201029 18:19:38.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023521458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023586472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:38.543" endtime="20201029 18:19:38.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023521458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023586472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:38.836" endtime="20201029 18:19:38.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.844" endtime="20201029 18:19:38.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.541" endtime="20201029 18:19:38.846"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.539" endtime="20201029 18:19:38.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:38.850" level="INFO">${RESULT} = [{'diff': 6.501400000000213e-05}, {'diff': 6.477800000000145e-05}, {'diff': 6.476400000000188e-05}, {'diff': 6.49440000000008e-05}, {'diff': 6.445799999999988e-05}, {'diff': 6.461099999999914e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:38.847" endtime="20201029 18:19:38.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:38.854" level="INFO">${ACCURACY} = {'diff': [6.501400000000213e-05, 6.477800000000145e-05, 6.476400000000188e-05, 6.49440000000008e-05, 6.445799999999988e-05, 6.461099999999914e-05, 6.445899999999935e-05, 6.445900000000282e-05, 6.40969...</msg>
<status status="PASS" starttime="20201029 18:19:38.851" endtime="20201029 18:19:38.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.859" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 18:19:38.858" endtime="20201029 18:19:38.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.861" level="INFO">VALUE: [6.501400000000213e-05, 6.477800000000145e-05, 6.476400000000188e-05, 6.49440000000008e-05, 6.445799999999988e-05, 6.461099999999914e-05, 6.445899999999935e-05, 6.445900000000282e-05, 6.409699999999907e-05, 6.494500000000028e-05, 6.409799999999855e-05, 6.494500000000028e-05, 6.447199999999945e-05, 6.494399999999734e-05, 6.445799999999988e-05, 6.461099999999914e-05, 6.445799999999988e-05, 6.441600000000117e-05, 6.427800000000095e-05, 6.477799999999798e-05, 6.411100000000211e-05, 6.461099999999914e-05, 6.411099999999864e-05, 6.426400000000138e-05, 6.47500000000023e-05, 6.463799999999881e-05, 6.461200000000208e-05, 6.409800000000201e-05, 6.47769999999985e-05, 6.427799999999748e-05, 6.476400000000188e-05, 6.49440000000008e-05, 6.477800000000145e-05, 6.461099999999914e-05, 6.479200000000102e-05, 6.430600000000009e-05, 6.47639999999984e-05, 6.494500000000028e-05, 6.427799999999748e-05, 6.427799999999748e-05, 6.491700000000114e-05, 6.459699999999957e-05, 6.409700000000254e-05, 6.474999999999884e-05, 6.461099999999914e-05, 6.44440000000003e-05, 6.461099999999914e-05, 6.479200000000102e-05, 6.412500000000168e-05, 6.40829999999995e-05]</msg>
<status status="PASS" starttime="20201029 18:19:38.860" endtime="20201029 18:19:38.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.855" endtime="20201029 18:19:38.862"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:38.866" endtime="20201029 18:19:38.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.865" endtime="20201029 18:19:38.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.864" endtime="20201029 18:19:38.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.506" endtime="20201029 18:19:38.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.505" endtime="20201029 18:19:38.887"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.895" endtime="20201029 18:19:38.914"></status>
</kw>
<msg timestamp="20201029 18:19:38.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:38.894" endtime="20201029 18:19:38.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:38.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:38.915" endtime="20201029 18:19:38.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.918" endtime="20201029 18:19:38.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.891" endtime="20201029 18:19:38.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.889" endtime="20201029 18:19:38.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:38.927" endtime="20201029 18:19:39.211"></status>
</kw>
<msg timestamp="20201029 18:19:39.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022954958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023020625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:38.925" endtime="20201029 18:19:39.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022954958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023020625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:39.215" endtime="20201029 18:19:39.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.223" endtime="20201029 18:19:39.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.923" endtime="20201029 18:19:39.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.921" endtime="20201029 18:19:39.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:39.229" level="INFO">${RESULT} = [{'diff': 6.566699999999842e-05}, {'diff': 6.527799999999848e-05}, {'diff': 6.562499999999971e-05}, {'diff': 6.541700000000164e-05}, {'diff': 6.523600000000324e-05}, {'diff': 6.545900000000035e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:39.226" endtime="20201029 18:19:39.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:39.233" level="INFO">${ACCURACY} = {'diff': [6.566699999999842e-05, 6.527799999999848e-05, 6.562499999999971e-05, 6.541700000000164e-05, 6.523600000000324e-05, 6.545900000000035e-05, 6.527799999999848e-05, 6.509700000000007e-05, 6.5110...</msg>
<status status="PASS" starttime="20201029 18:19:39.230" endtime="20201029 18:19:39.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.238" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 18:19:39.237" endtime="20201029 18:19:39.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.240" level="INFO">VALUE: [6.566699999999842e-05, 6.527799999999848e-05, 6.562499999999971e-05, 6.541700000000164e-05, 6.523600000000324e-05, 6.545900000000035e-05, 6.527799999999848e-05, 6.509700000000007e-05, 6.511099999999964e-05, 6.52639999999989e-05, 6.511099999999964e-05, 6.511099999999964e-05, 6.594399999999834e-05, 6.562499999999971e-05, 6.594399999999834e-05, 6.511099999999964e-05, 6.509700000000007e-05, 6.555599999999787e-05, 6.545900000000035e-05, 6.511099999999964e-05, 6.597200000000095e-05, 6.593099999999824e-05, 6.592999999999877e-05, 6.511100000000311e-05, 6.579099999999907e-05, 6.548600000000002e-05, 6.509700000000007e-05, 6.577799999999898e-05, 6.561100000000014e-05, 6.577799999999898e-05, 6.509700000000007e-05, 6.549999999999959e-05, 6.529199999999805e-05, 6.562499999999971e-05, 6.511099999999964e-05, 6.57639999999994e-05, 6.54020000000026e-05, 6.5276999999999e-05, 6.57639999999994e-05, 6.509700000000007e-05, 6.577800000000245e-05, 6.511099999999964e-05, 6.581999999999769e-05, 6.561100000000014e-05, 6.559700000000057e-05, 6.527799999999848e-05, 6.543100000000121e-05, 6.591700000000214e-05, 6.52639999999989e-05, 6.562499999999971e-05]</msg>
<status status="PASS" starttime="20201029 18:19:39.239" endtime="20201029 18:19:39.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.234" endtime="20201029 18:19:39.242"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:39.246" endtime="20201029 18:19:39.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.245" endtime="20201029 18:19:39.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.243" endtime="20201029 18:19:39.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.888" endtime="20201029 18:19:39.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:38.887" endtime="20201029 18:19:39.267"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.275" endtime="20201029 18:19:39.293"></status>
</kw>
<msg timestamp="20201029 18:19:39.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:39.274" endtime="20201029 18:19:39.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:39.294" endtime="20201029 18:19:39.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.297" endtime="20201029 18:19:39.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.271" endtime="20201029 18:19:39.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.269" endtime="20201029 18:19:39.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.305" endtime="20201029 18:19:39.593"></status>
</kw>
<msg timestamp="20201029 18:19:39.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022155944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022222444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:39.304" endtime="20201029 18:19:39.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022155944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022222444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:39.597" endtime="20201029 18:19:39.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.605" endtime="20201029 18:19:39.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.301" endtime="20201029 18:19:39.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.300" endtime="20201029 18:19:39.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:39.611" level="INFO">${RESULT} = [{'diff': 6.650000000000059e-05}, {'diff': 6.65969999999981e-05}, {'diff': 6.676399999999694e-05}, {'diff': 6.613899999999978e-05}, {'diff': 6.659700000000157e-05}, {'diff': 6.694399999999934e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:39.608" endtime="20201029 18:19:39.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:39.616" level="INFO">${ACCURACY} = {'diff': [6.650000000000059e-05, 6.65969999999981e-05, 6.676399999999694e-05, 6.613899999999978e-05, 6.659700000000157e-05, 6.694399999999934e-05, 6.677799999999998e-05, 6.611100000000064e-05, 6.62779...</msg>
<status status="PASS" starttime="20201029 18:19:39.612" endtime="20201029 18:19:39.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.621" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 18:19:39.620" endtime="20201029 18:19:39.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.623" level="INFO">VALUE: [6.650000000000059e-05, 6.65969999999981e-05, 6.676399999999694e-05, 6.613899999999978e-05, 6.659700000000157e-05, 6.694399999999934e-05, 6.677799999999998e-05, 6.611100000000064e-05, 6.627799999999948e-05, 6.661100000000114e-05, 6.661099999999767e-05, 6.694499999999881e-05, 6.643100000000221e-05, 6.659800000000105e-05, 6.644399999999884e-05, 6.675000000000084e-05, 6.642999999999927e-05, 6.658299999999853e-05, 6.643000000000274e-05, 6.694399999999934e-05, 6.60969999999976e-05, 6.623600000000077e-05, 6.613899999999978e-05, 6.661100000000114e-05, 6.677799999999998e-05, 6.611100000000064e-05, 6.609800000000055e-05, 6.663899999999681e-05, 6.6277e-05, 6.67770000000005e-05, 6.661100000000114e-05, 6.694399999999934e-05, 6.620799999999816e-05, 6.648600000000102e-05, 6.611100000000064e-05, 6.606899999999846e-05, 6.677799999999998e-05, 6.67640000000004e-05, 6.691699999999967e-05, 6.629199999999905e-05, 6.661200000000062e-05, 6.622300000000067e-05, 6.629099999999957e-05, 6.681900000000268e-05, 6.612500000000021e-05, 6.64440000000023e-05, 6.661100000000114e-05, 6.694399999999934e-05, 6.642999999999927e-05, 6.665299999999985e-05]</msg>
<status status="PASS" starttime="20201029 18:19:39.622" endtime="20201029 18:19:39.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.617" endtime="20201029 18:19:39.624"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:39.628" endtime="20201029 18:19:39.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.627" endtime="20201029 18:19:39.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.625" endtime="20201029 18:19:39.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.268" endtime="20201029 18:19:39.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.267" endtime="20201029 18:19:39.649"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.657" endtime="20201029 18:19:39.675"></status>
</kw>
<msg timestamp="20201029 18:19:39.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:39.656" endtime="20201029 18:19:39.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:39.676" endtime="20201029 18:19:39.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.679" endtime="20201029 18:19:39.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.653" endtime="20201029 18:19:39.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.651" endtime="20201029 18:19:39.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.688" endtime="20201029 18:19:39.974"></status>
</kw>
<msg timestamp="20201029 18:19:39.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022103319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022171319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:39.686" endtime="20201029 18:19:39.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022103319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022171319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:39.978" endtime="20201029 18:19:39.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.986" endtime="20201029 18:19:39.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.684" endtime="20201029 18:19:39.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.682" endtime="20201029 18:19:39.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:39.993" level="INFO">${RESULT} = [{'diff': 6.799999999999862e-05}, {'diff': 6.7277000000001e-05}, {'diff': 6.784699999999935e-05}, {'diff': 6.712500000000121e-05}, {'diff': 6.777799999999751e-05}, {'diff': 6.727799999999701e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:39.989" endtime="20201029 18:19:39.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:39.997" level="INFO">${ACCURACY} = {'diff': [6.799999999999862e-05, 6.7277000000001e-05, 6.784699999999935e-05, 6.712500000000121e-05, 6.777799999999751e-05, 6.727799999999701e-05, 6.727800000000048e-05, 6.743099999999974e-05, 6.745900...</msg>
<status status="PASS" starttime="20201029 18:19:39.994" endtime="20201029 18:19:39.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.001" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 18:19:40.000" endtime="20201029 18:19:40.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.004" level="INFO">VALUE: [6.799999999999862e-05, 6.7277000000001e-05, 6.784699999999935e-05, 6.712500000000121e-05, 6.777799999999751e-05, 6.727799999999701e-05, 6.727800000000048e-05, 6.743099999999974e-05, 6.745900000000235e-05, 6.793100000000024e-05, 6.794499999999981e-05, 6.745899999999888e-05, 6.749999999999812e-05, 6.781900000000021e-05, 6.773600000000227e-05, 6.77770000000015e-05, 6.780500000000064e-05, 6.777799999999751e-05, 6.779200000000055e-05, 6.744399999999984e-05, 6.777799999999751e-05, 6.772199999999923e-05, 6.711100000000164e-05, 6.780600000000012e-05, 6.793100000000024e-05, 6.761100000000214e-05, 6.743099999999974e-05, 6.729200000000005e-05, 6.770799999999966e-05, 6.725000000000134e-05, 6.744399999999984e-05, 6.752700000000125e-05, 6.727800000000048e-05, 6.711100000000164e-05, 6.744399999999984e-05, 6.744399999999984e-05, 6.793100000000024e-05, 6.711099999999817e-05, 6.794500000000328e-05, 6.777800000000098e-05, 6.711099999999817e-05, 6.727800000000048e-05, 6.794499999999981e-05, 6.729100000000057e-05, 6.776300000000193e-05, 6.781900000000021e-05, 6.793000000000077e-05, 6.718099999999949e-05, 6.795799999999991e-05, 6.744399999999984e-05]</msg>
<status status="PASS" starttime="20201029 18:19:40.003" endtime="20201029 18:19:40.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.997" endtime="20201029 18:19:40.005"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:40.009" endtime="20201029 18:19:40.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.007" endtime="20201029 18:19:40.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.006" endtime="20201029 18:19:40.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.649" endtime="20201029 18:19:40.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.649" endtime="20201029 18:19:40.029"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.038" endtime="20201029 18:19:40.059"></status>
</kw>
<msg timestamp="20201029 18:19:40.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:40.037" endtime="20201029 18:19:40.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:40.060" endtime="20201029 18:19:40.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.063" endtime="20201029 18:19:40.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.034" endtime="20201029 18:19:40.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.032" endtime="20201029 18:19:40.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.072" endtime="20201029 18:19:40.357"></status>
</kw>
<msg timestamp="20201029 18:19:40.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025333167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025402167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:40.071" endtime="20201029 18:19:40.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025333167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025402167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:40.361" endtime="20201029 18:19:40.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.369" endtime="20201029 18:19:40.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.068" endtime="20201029 18:19:40.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.066" endtime="20201029 18:19:40.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:40.376" level="INFO">${RESULT} = [{'diff': 6.899999999999962e-05}, {'diff': 6.812499999999874e-05}, {'diff': 6.844500000000031e-05}, {'diff': 6.811100000000264e-05}, {'diff': 6.862500000000271e-05}, {'diff': 6.827800000000148e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:40.373" endtime="20201029 18:19:40.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:40.380" level="INFO">${ACCURACY} = {'diff': [6.899999999999962e-05, 6.812499999999874e-05, 6.844500000000031e-05, 6.811100000000264e-05, 6.862500000000271e-05, 6.827800000000148e-05, 6.811099999999917e-05, 6.805499999999742e-05, 6.8957...</msg>
<status status="PASS" starttime="20201029 18:19:40.377" endtime="20201029 18:19:40.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.384" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 18:19:40.383" endtime="20201029 18:19:40.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.387" level="INFO">VALUE: [6.899999999999962e-05, 6.812499999999874e-05, 6.844500000000031e-05, 6.811100000000264e-05, 6.862500000000271e-05, 6.827800000000148e-05, 6.811099999999917e-05, 6.805499999999742e-05, 6.895799999999744e-05, 6.897200000000048e-05, 6.824999999999887e-05, 6.85970000000001e-05, 6.861099999999967e-05, 6.877799999999851e-05, 6.829199999999758e-05, 6.879100000000207e-05, 6.893100000000124e-05, 6.822199999999973e-05, 6.880499999999817e-05, 6.82640000000019e-05, 6.812499999999874e-05, 6.843000000000127e-05, 6.811099999999917e-05, 6.893099999999777e-05, 6.843099999999727e-05, 6.877800000000198e-05, 6.85970000000001e-05, 6.877799999999851e-05, 6.895900000000038e-05, 6.844500000000031e-05, 6.827800000000148e-05, 6.808300000000003e-05, 6.894399999999787e-05, 6.877699999999903e-05, 6.829200000000105e-05, 6.827800000000148e-05, 6.877799999999851e-05, 6.858300000000053e-05, 6.866700000000142e-05, 6.812499999999874e-05, 6.876399999999894e-05, 6.827800000000148e-05, 6.827800000000148e-05, 6.877799999999851e-05, 6.830600000000062e-05, 6.827699999999853e-05, 6.85970000000001e-05, 6.879100000000207e-05, 6.812500000000221e-05, 6.894399999999787e-05]</msg>
<status status="PASS" starttime="20201029 18:19:40.386" endtime="20201029 18:19:40.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.381" endtime="20201029 18:19:40.393"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:40.397" endtime="20201029 18:19:40.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.395" endtime="20201029 18:19:40.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.394" endtime="20201029 18:19:40.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.030" endtime="20201029 18:19:40.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.030" endtime="20201029 18:19:40.418"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.426" endtime="20201029 18:19:40.445"></status>
</kw>
<msg timestamp="20201029 18:19:40.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:40.425" endtime="20201029 18:19:40.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:40.446" endtime="20201029 18:19:40.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.448" endtime="20201029 18:19:40.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.422" endtime="20201029 18:19:40.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.420" endtime="20201029 18:19:40.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.458" endtime="20201029 18:19:40.744"></status>
</kw>
<msg timestamp="20201029 18:19:40.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022279722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022349722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:40.456" endtime="20201029 18:19:40.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022279722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022349722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:40.748" endtime="20201029 18:19:40.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.756" endtime="20201029 18:19:40.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.454" endtime="20201029 18:19:40.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.452" endtime="20201029 18:19:40.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:40.763" level="INFO">${RESULT} = [{'diff': 7.000000000000062e-05}, {'diff': 6.927799999999901e-05}, {'diff': 6.994400000000234e-05}, {'diff': 6.963899999999981e-05}, {'diff': 6.912499999999974e-05}, {'diff': 6.927799999999901e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:40.759" endtime="20201029 18:19:40.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:40.768" level="INFO">${ACCURACY} = {'diff': [7.000000000000062e-05, 6.927799999999901e-05, 6.994400000000234e-05, 6.963899999999981e-05, 6.912499999999974e-05, 6.927799999999901e-05, 6.944500000000131e-05, 6.975000000000037e-05, 6.9277...</msg>
<status status="PASS" starttime="20201029 18:19:40.764" endtime="20201029 18:19:40.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.772" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 18:19:40.771" endtime="20201029 18:19:40.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.775" level="INFO">VALUE: [7.000000000000062e-05, 6.927799999999901e-05, 6.994400000000234e-05, 6.963899999999981e-05, 6.912499999999974e-05, 6.927799999999901e-05, 6.944500000000131e-05, 6.975000000000037e-05, 6.927799999999901e-05, 6.918000000000202e-05, 6.954199999999883e-05, 6.977800000000298e-05, 6.911100000000017e-05, 6.927699999999953e-05, 6.927799999999901e-05, 6.945800000000141e-05, 6.97360000000008e-05, 6.945800000000141e-05, 6.958300000000153e-05, 6.944499999999784e-05, 6.994500000000181e-05, 6.927799999999901e-05, 6.912499999999974e-05, 6.980499999999917e-05, 6.977799999999951e-05, 6.924999999999987e-05, 6.943000000000227e-05, 6.994400000000234e-05, 6.994400000000234e-05, 6.963899999999981e-05, 6.961100000000067e-05, 6.943000000000227e-05, 6.990299999999963e-05, 6.995900000000138e-05, 6.979199999999908e-05, 6.911100000000017e-05, 6.963800000000034e-05, 6.977800000000298e-05, 6.961200000000015e-05, 6.958300000000153e-05, 6.934700000000085e-05, 6.998600000000105e-05, 7.000000000000062e-05, 6.933400000000076e-05, 6.944399999999837e-05, 6.927799999999901e-05, 6.911100000000017e-05, 6.94169999999987e-05, 6.994499999999834e-05, 6.994500000000181e-05]</msg>
<status status="PASS" starttime="20201029 18:19:40.773" endtime="20201029 18:19:40.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.769" endtime="20201029 18:19:40.776"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:40.779" endtime="20201029 18:19:40.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.778" endtime="20201029 18:19:40.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.777" endtime="20201029 18:19:40.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.419" endtime="20201029 18:19:40.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.418" endtime="20201029 18:19:40.800"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.809" endtime="20201029 18:19:40.828"></status>
</kw>
<msg timestamp="20201029 18:19:40.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:40.807" endtime="20201029 18:19:40.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:40.830" endtime="20201029 18:19:40.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.834" endtime="20201029 18:19:40.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.805" endtime="20201029 18:19:40.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.802" endtime="20201029 18:19:40.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.849" endtime="20201029 18:19:41.151"></status>
</kw>
<msg timestamp="20201029 18:19:41.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022015486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022085819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:40.846" endtime="20201029 18:19:41.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022015486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022085819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:41.155" endtime="20201029 18:19:41.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.164" endtime="20201029 18:19:41.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.843" endtime="20201029 18:19:41.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.839" endtime="20201029 18:19:41.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:41.171" level="INFO">${RESULT} = [{'diff': 7.033299999999881e-05}, {'diff': 7.094399999999987e-05}, {'diff': 7.011100000000117e-05}, {'diff': 7.045800000000241e-05}, {'diff': 7.027800000000001e-05}, {'diff': 7.076400000000094e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:41.167" endtime="20201029 18:19:41.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:41.175" level="INFO">${ACCURACY} = {'diff': [7.033299999999881e-05, 7.094399999999987e-05, 7.011100000000117e-05, 7.045800000000241e-05, 7.027800000000001e-05, 7.076400000000094e-05, 7.026400000000044e-05, 7.094500000000281e-05, 7.0111...</msg>
<status status="PASS" starttime="20201029 18:19:41.172" endtime="20201029 18:19:41.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.180" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 18:19:41.179" endtime="20201029 18:19:41.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.183" level="INFO">VALUE: [7.033299999999881e-05, 7.094399999999987e-05, 7.011100000000117e-05, 7.045800000000241e-05, 7.027800000000001e-05, 7.076400000000094e-05, 7.026400000000044e-05, 7.094500000000281e-05, 7.011100000000117e-05, 7.058399999999854e-05, 7.095900000000238e-05, 7.011100000000117e-05, 7.044500000000231e-05, 7.077700000000103e-05, 7.077700000000103e-05, 7.062500000000124e-05, 7.049999999999765e-05, 7.012500000000074e-05, 7.077800000000051e-05, 7.077799999999704e-05, 7.011100000000117e-05, 7.012500000000074e-05, 7.080599999999965e-05, 7.026399999999697e-05, 7.012500000000074e-05, 7.045800000000241e-05, 7.031899999999924e-05, 7.01109999999977e-05, 7.01109999999977e-05, 7.011100000000117e-05, 7.094399999999987e-05, 7.095799999999944e-05, 7.06109999999982e-05, 7.044399999999937e-05, 7.029199999999958e-05, 7.047300000000145e-05, 7.077800000000051e-05, 7.094499999999934e-05, 7.01109999999977e-05, 7.065299999999691e-05, 7.044400000000284e-05, 7.00970000000016e-05, 7.04299999999998e-05, 7.063900000000081e-05, 7.061100000000167e-05, 7.044400000000284e-05, 7.027800000000001e-05, 7.052700000000078e-05, 7.062499999999777e-05, 7.077800000000051e-05]</msg>
<status status="PASS" starttime="20201029 18:19:41.181" endtime="20201029 18:19:41.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.176" endtime="20201029 18:19:41.185"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:41.188" endtime="20201029 18:19:41.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.187" endtime="20201029 18:19:41.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.186" endtime="20201029 18:19:41.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.801" endtime="20201029 18:19:41.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.800" endtime="20201029 18:19:41.209"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.218" endtime="20201029 18:19:41.237"></status>
</kw>
<msg timestamp="20201029 18:19:41.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:41.217" endtime="20201029 18:19:41.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:41.239" endtime="20201029 18:19:41.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.242" endtime="20201029 18:19:41.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.214" endtime="20201029 18:19:41.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.212" endtime="20201029 18:19:41.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.251" endtime="20201029 18:19:41.537"></status>
</kw>
<msg timestamp="20201029 18:19:41.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023637431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023709278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:41.250" endtime="20201029 18:19:41.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023637431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023709278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:41.541" endtime="20201029 18:19:41.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.550" endtime="20201029 18:19:41.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.247" endtime="20201029 18:19:41.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.245" endtime="20201029 18:19:41.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:41.558" level="INFO">${RESULT} = [{'diff': 7.184699999999988e-05}, {'diff': 7.162499999999877e-05}, {'diff': 7.111100000000217e-05}, {'diff': 7.1762999999999e-05}, {'diff': 7.159799999999911e-05}, {'diff': 7.161100000000267e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:41.554" endtime="20201029 18:19:41.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:41.562" level="INFO">${ACCURACY} = {'diff': [7.184699999999988e-05, 7.162499999999877e-05, 7.111100000000217e-05, 7.1762999999999e-05, 7.159799999999911e-05, 7.161100000000267e-05, 7.109699999999913e-05, 7.16109999999992e-05, 7.1778000...</msg>
<status status="PASS" starttime="20201029 18:19:41.559" endtime="20201029 18:19:41.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.567" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 18:19:41.566" endtime="20201029 18:19:41.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.570" level="INFO">VALUE: [7.184699999999988e-05, 7.162499999999877e-05, 7.111100000000217e-05, 7.1762999999999e-05, 7.159799999999911e-05, 7.161100000000267e-05, 7.109699999999913e-05, 7.16109999999992e-05, 7.177800000000151e-05, 7.111100000000217e-05, 7.19300000000013e-05, 7.144400000000037e-05, 7.16109999999992e-05, 7.144499999999984e-05, 7.14309999999968e-05, 7.140300000000113e-05, 7.127800000000101e-05, 7.179099999999813e-05, 7.162499999999877e-05, 7.112500000000174e-05, 7.176399999999847e-05, 7.183400000000326e-05, 7.194400000000087e-05, 7.16109999999992e-05, 7.127799999999754e-05, 7.145799999999994e-05, 7.111100000000217e-05, 7.16109999999992e-05, 7.162499999999877e-05, 7.127800000000101e-05, 7.125000000000187e-05, 7.177800000000151e-05, 7.16109999999992e-05, 7.159699999999963e-05, 7.111100000000217e-05, 7.126400000000144e-05, 7.194400000000087e-05, 7.195800000000044e-05, 7.112499999999827e-05, 7.126399999999797e-05, 7.161100000000267e-05, 7.125000000000187e-05, 7.17910000000016e-05, 7.187500000000249e-05, 7.176400000000194e-05, 7.194400000000087e-05, 7.127699999999806e-05, 7.15690000000005e-05, 7.177800000000151e-05, 7.11109999999987e-05]</msg>
<status status="PASS" starttime="20201029 18:19:41.568" endtime="20201029 18:19:41.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.563" endtime="20201029 18:19:41.572"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:41.576" endtime="20201029 18:19:41.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.574" endtime="20201029 18:19:41.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.573" endtime="20201029 18:19:41.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.210" endtime="20201029 18:19:41.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.209" endtime="20201029 18:19:41.597"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.606" endtime="20201029 18:19:41.625"></status>
</kw>
<msg timestamp="20201029 18:19:41.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:41.604" endtime="20201029 18:19:41.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:41.626" endtime="20201029 18:19:41.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.629" endtime="20201029 18:19:41.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.602" endtime="20201029 18:19:41.631"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.599" endtime="20201029 18:19:41.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.638" endtime="20201029 18:19:41.924"></status>
</kw>
<msg timestamp="20201029 18:19:41.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022760347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022833361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:41.637" endtime="20201029 18:19:41.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022760347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022833361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:41.928" endtime="20201029 18:19:41.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.936" endtime="20201029 18:19:41.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.634" endtime="20201029 18:19:41.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.632" endtime="20201029 18:19:41.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:41.943" level="INFO">${RESULT} = [{'diff': 7.301399999999972e-05}, {'diff': 7.255599999999793e-05}, {'diff': 7.29439999999984e-05}, {'diff': 7.27499999999999e-05}, {'diff': 7.21109999999997e-05}, {'diff': 7.245900000000041e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:19:41.940" endtime="20201029 18:19:41.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:41.948" level="INFO">${ACCURACY} = {'diff': [7.301399999999972e-05, 7.255599999999793e-05, 7.29439999999984e-05, 7.27499999999999e-05, 7.21109999999997e-05, 7.245900000000041e-05, 7.244499999999737e-05, 7.26110000000002e-05, 7.26249999...</msg>
<status status="PASS" starttime="20201029 18:19:41.944" endtime="20201029 18:19:41.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.953" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 18:19:41.952" endtime="20201029 18:19:41.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:41.956" level="INFO">VALUE: [7.301399999999972e-05, 7.255599999999793e-05, 7.29439999999984e-05, 7.27499999999999e-05, 7.21109999999997e-05, 7.245900000000041e-05, 7.244499999999737e-05, 7.26110000000002e-05, 7.262499999999977e-05, 7.294400000000187e-05, 7.212499999999927e-05, 7.26110000000002e-05, 7.21109999999997e-05, 7.29170000000022e-05, 7.21109999999997e-05, 7.277799999999904e-05, 7.244500000000084e-05, 7.21109999999997e-05, 7.29309999999983e-05, 7.277799999999904e-05, 7.21109999999997e-05, 7.276399999999947e-05, 7.21109999999997e-05, 7.262499999999977e-05, 7.265299999999891e-05, 7.227799999999854e-05, 7.226399999999897e-05, 7.212499999999927e-05, 7.26110000000002e-05, 7.21109999999997e-05, 7.279199999999861e-05, 7.276399999999947e-05, 7.212499999999927e-05, 7.279199999999861e-05, 7.227799999999854e-05, 7.26110000000002e-05, 7.245800000000094e-05, 7.277700000000303e-05, 7.232000000000072e-05, 7.212499999999927e-05, 7.26110000000002e-05, 7.21109999999997e-05, 7.22499999999994e-05, 7.212499999999927e-05, 7.227799999999854e-05, 7.26110000000002e-05, 7.22629999999995e-05, 7.279099999999913e-05, 7.209799999999961e-05, 7.277699999999956e-05]</msg>
<status status="PASS" starttime="20201029 18:19:41.954" endtime="20201029 18:19:41.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.949" endtime="20201029 18:19:41.957"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:41.961" endtime="20201029 18:19:41.980"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.959" endtime="20201029 18:19:41.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.958" endtime="20201029 18:19:41.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.598" endtime="20201029 18:19:41.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.597" endtime="20201029 18:19:41.982"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:41.991" endtime="20201029 18:19:42.009"></status>
</kw>
<msg timestamp="20201029 18:19:42.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:41.989" endtime="20201029 18:19:42.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:42.010" endtime="20201029 18:19:42.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.013" endtime="20201029 18:19:42.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.986" endtime="20201029 18:19:42.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.984" endtime="20201029 18:19:42.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.022" endtime="20201029 18:19:42.309"></status>
</kw>
<msg timestamp="20201029 18:19:42.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022710375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022783569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:42.021" endtime="20201029 18:19:42.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022710375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022783569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:42.314" endtime="20201029 18:19:42.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.322" endtime="20201029 18:19:42.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.018" endtime="20201029 18:19:42.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.016" endtime="20201029 18:19:42.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:42.329" level="INFO">${RESULT} = [{'diff': 7.319399999999865e-05}, {'diff': 7.311200000000018e-05}, {'diff': 7.327700000000006e-05}, {'diff': 7.342999999999933e-05}, {'diff': 7.342999999999933e-05}, {'diff': 7.329199999999911e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:42.325" endtime="20201029 18:19:42.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:42.333" level="INFO">${ACCURACY} = {'diff': [7.319399999999865e-05, 7.311200000000018e-05, 7.327700000000006e-05, 7.342999999999933e-05, 7.342999999999933e-05, 7.329199999999911e-05, 7.31110000000007e-05, 7.313899999999984e-05, 7.36249...</msg>
<status status="PASS" starttime="20201029 18:19:42.330" endtime="20201029 18:19:42.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.338" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 18:19:42.337" endtime="20201029 18:19:42.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.340" level="INFO">VALUE: [7.319399999999865e-05, 7.311200000000018e-05, 7.327700000000006e-05, 7.342999999999933e-05, 7.342999999999933e-05, 7.329199999999911e-05, 7.31110000000007e-05, 7.313899999999984e-05, 7.36249999999973e-05, 7.34309999999988e-05, 7.370899999999819e-05, 7.309699999999766e-05, 7.395899999999844e-05, 7.377800000000004e-05, 7.362500000000077e-05, 7.326399999999997e-05, 7.377700000000056e-05, 7.34439999999989e-05, 7.379100000000013e-05, 7.327799999999954e-05, 7.377800000000004e-05, 7.329199999999911e-05, 7.398600000000158e-05, 7.32500000000004e-05, 7.329200000000258e-05, 7.358400000000154e-05, 7.313899999999984e-05, 7.312500000000027e-05, 7.327799999999954e-05, 7.313899999999984e-05, 7.36110000000012e-05, 7.326399999999997e-05, 7.39439999999994e-05, 7.309700000000113e-05, 7.309700000000113e-05, 7.391699999999973e-05, 7.379199999999961e-05, 7.377800000000004e-05, 7.380599999999918e-05, 7.327700000000006e-05, 7.327799999999954e-05, 7.35560000000024e-05, 7.306899999999852e-05, 7.309700000000113e-05, 7.32910000000031e-05, 7.313899999999984e-05, 7.327799999999954e-05, 7.377800000000004e-05, 7.361099999999773e-05, 7.395900000000191e-05]</msg>
<status status="PASS" starttime="20201029 18:19:42.339" endtime="20201029 18:19:42.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.334" endtime="20201029 18:19:42.342"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:42.345" endtime="20201029 18:19:42.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.344" endtime="20201029 18:19:42.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.343" endtime="20201029 18:19:42.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.983" endtime="20201029 18:19:42.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:41.982" endtime="20201029 18:19:42.366"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.375" endtime="20201029 18:19:42.395"></status>
</kw>
<msg timestamp="20201029 18:19:42.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:42.374" endtime="20201029 18:19:42.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:42.397" endtime="20201029 18:19:42.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.399" endtime="20201029 18:19:42.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.371" endtime="20201029 18:19:42.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.369" endtime="20201029 18:19:42.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.409" endtime="20201029 18:19:42.694"></status>
</kw>
<msg timestamp="20201029 18:19:42.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024220542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024295042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:42.407" endtime="20201029 18:19:42.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024220542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024295042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:42.699" endtime="20201029 18:19:42.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.707" endtime="20201029 18:19:42.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.405" endtime="20201029 18:19:42.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.403" endtime="20201029 18:19:42.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:42.714" level="INFO">${RESULT} = [{'diff': 7.449999999999818e-05}, {'diff': 7.431899999999977e-05}, {'diff': 7.41249999999978e-05}, {'diff': 7.47769999999981e-05}, {'diff': 7.495799999999997e-05}, {'diff': 7.411099999999823e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:42.711" endtime="20201029 18:19:42.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:42.718" level="INFO">${ACCURACY} = {'diff': [7.449999999999818e-05, 7.431899999999977e-05, 7.41249999999978e-05, 7.47769999999981e-05, 7.495799999999997e-05, 7.411099999999823e-05, 7.445799999999947e-05, 7.477800000000104e-05, 7.461099...</msg>
<status status="PASS" starttime="20201029 18:19:42.715" endtime="20201029 18:19:42.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.723" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 18:19:42.722" endtime="20201029 18:19:42.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.725" level="INFO">VALUE: [7.449999999999818e-05, 7.431899999999977e-05, 7.41249999999978e-05, 7.47769999999981e-05, 7.495799999999997e-05, 7.411099999999823e-05, 7.445799999999947e-05, 7.477800000000104e-05, 7.461099999999873e-05, 7.474999999999843e-05, 7.461099999999873e-05, 7.419499999999912e-05, 7.44309999999998e-05, 7.46110000000022e-05, 7.495799999999997e-05, 7.479200000000061e-05, 7.411099999999823e-05, 7.44439999999999e-05, 7.42769999999976e-05, 7.495799999999997e-05, 7.492999999999736e-05, 7.466700000000048e-05, 7.45829999999996e-05, 7.47500000000019e-05, 7.477799999999757e-05, 7.41110000000017e-05, 7.409800000000161e-05, 7.411200000000118e-05, 7.474999999999843e-05, 7.493000000000083e-05, 7.494399999999693e-05, 7.426400000000097e-05, 7.463899999999787e-05, 7.473600000000233e-05, 7.454199999999689e-05, 7.461099999999873e-05, 7.461099999999873e-05, 7.499999999999868e-05, 7.463900000000134e-05, 7.461099999999873e-05, 7.494499999999987e-05, 7.427800000000054e-05, 7.45829999999996e-05, 7.44439999999999e-05, 7.47769999999981e-05, 7.427800000000054e-05, 7.484800000000236e-05, 7.427800000000054e-05, 7.463900000000134e-05, 7.44309999999998e-05]</msg>
<status status="PASS" starttime="20201029 18:19:42.724" endtime="20201029 18:19:42.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.719" endtime="20201029 18:19:42.728"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:42.732" endtime="20201029 18:19:42.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.730" endtime="20201029 18:19:42.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.729" endtime="20201029 18:19:42.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.367" endtime="20201029 18:19:42.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.367" endtime="20201029 18:19:42.753"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.761" endtime="20201029 18:19:42.781"></status>
</kw>
<msg timestamp="20201029 18:19:42.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:42.760" endtime="20201029 18:19:42.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:42.783" endtime="20201029 18:19:42.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.787" endtime="20201029 18:19:42.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.757" endtime="20201029 18:19:42.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.755" endtime="20201029 18:19:42.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.796" endtime="20201029 18:19:43.083"></status>
</kw>
<msg timestamp="20201029 18:19:43.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022702639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022778319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:42.795" endtime="20201029 18:19:43.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022702639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022778319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:43.087" endtime="20201029 18:19:43.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.095" endtime="20201029 18:19:43.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.792" endtime="20201029 18:19:43.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.790" endtime="20201029 18:19:43.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:43.102" level="INFO">${RESULT} = [{'diff': 7.568000000000158e-05}, {'diff': 7.59440000000014e-05}, {'diff': 7.54440000000009e-05}, {'diff': 7.527800000000154e-05}, {'diff': 7.544399999999743e-05}, {'diff': 7.509699999999966e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:43.099" endtime="20201029 18:19:43.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:43.107" level="INFO">${ACCURACY} = {'diff': [7.568000000000158e-05, 7.59440000000014e-05, 7.54440000000009e-05, 7.527800000000154e-05, 7.544399999999743e-05, 7.509699999999966e-05, 7.59440000000014e-05, 7.561099999999973e-05, 7.5931000...</msg>
<status status="PASS" starttime="20201029 18:19:43.103" endtime="20201029 18:19:43.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.112" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 18:19:43.111" endtime="20201029 18:19:43.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.115" level="INFO">VALUE: [7.568000000000158e-05, 7.59440000000014e-05, 7.54440000000009e-05, 7.527800000000154e-05, 7.544399999999743e-05, 7.509699999999966e-05, 7.59440000000014e-05, 7.561099999999973e-05, 7.59310000000013e-05, 7.586099999999998e-05, 7.51249999999988e-05, 7.576400000000247e-05, 7.561200000000268e-05, 7.59440000000014e-05, 7.540200000000219e-05, 7.545800000000047e-05, 7.56110000000032e-05, 7.547200000000004e-05, 7.545800000000047e-05, 7.544399999999743e-05, 7.597200000000054e-05, 7.545899999999994e-05, 7.591699999999826e-05, 7.527800000000154e-05, 7.552799999999832e-05, 7.51249999999988e-05, 7.529099999999816e-05, 7.542999999999786e-05, 7.56110000000032e-05, 7.51249999999988e-05, 7.59440000000014e-05, 7.591700000000173e-05, 7.51249999999988e-05, 7.527800000000154e-05, 7.527800000000154e-05, 7.59310000000013e-05, 7.579200000000161e-05, 7.577800000000204e-05, 7.52769999999986e-05, 7.545800000000047e-05, 7.545800000000047e-05, 7.56249999999993e-05, 7.527800000000154e-05, 7.565299999999844e-05, 7.56249999999993e-05, 7.594399999999793e-05, 7.54310000000008e-05, 7.51249999999988e-05, 7.529200000000111e-05, 7.574999999999943e-05]</msg>
<status status="PASS" starttime="20201029 18:19:43.113" endtime="20201029 18:19:43.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.108" endtime="20201029 18:19:43.116"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:43.120" endtime="20201029 18:19:43.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.118" endtime="20201029 18:19:43.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.117" endtime="20201029 18:19:43.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.753" endtime="20201029 18:19:43.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.753" endtime="20201029 18:19:43.140"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.150" endtime="20201029 18:19:43.168"></status>
</kw>
<msg timestamp="20201029 18:19:43.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:43.148" endtime="20201029 18:19:43.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:43.170" endtime="20201029 18:19:43.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.173" endtime="20201029 18:19:43.174"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.145" endtime="20201029 18:19:43.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.143" endtime="20201029 18:19:43.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.182" endtime="20201029 18:19:43.469"></status>
</kw>
<msg timestamp="20201029 18:19:43.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022956583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02303325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:43.180" endtime="20201029 18:19:43.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022956583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02303325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:43.474" endtime="20201029 18:19:43.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.482" endtime="20201029 18:19:43.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.178" endtime="20201029 18:19:43.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.176" endtime="20201029 18:19:43.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:43.489" level="INFO">${RESULT} = [{'diff': 7.666700000000248e-05}, {'diff': 7.661099999999726e-05}, {'diff': 7.631900000000177e-05}, {'diff': 7.627799999999907e-05}, {'diff': 7.669499999999815e-05}, {'diff': 7.661200000000021e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:43.486" endtime="20201029 18:19:43.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:43.493" level="INFO">${ACCURACY} = {'diff': [7.666700000000248e-05, 7.661099999999726e-05, 7.631900000000177e-05, 7.627799999999907e-05, 7.669499999999815e-05, 7.661200000000021e-05, 7.61249999999998e-05, 7.66250000000003e-05, 7.694399...</msg>
<status status="PASS" starttime="20201029 18:19:43.490" endtime="20201029 18:19:43.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.498" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 18:19:43.497" endtime="20201029 18:19:43.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.500" level="INFO">VALUE: [7.666700000000248e-05, 7.661099999999726e-05, 7.631900000000177e-05, 7.627799999999907e-05, 7.669499999999815e-05, 7.661200000000021e-05, 7.61249999999998e-05, 7.66250000000003e-05, 7.694399999999893e-05, 7.643000000000233e-05, 7.616700000000198e-05, 7.64440000000019e-05, 7.611100000000023e-05, 7.651300000000028e-05, 7.659700000000116e-05, 7.65839999999976e-05, 7.672199999999782e-05, 7.691699999999926e-05, 7.661100000000073e-05, 7.697200000000154e-05, 7.623600000000036e-05, 7.6764e-05, 7.633400000000082e-05, 7.677800000000304e-05, 7.661099999999726e-05, 7.64440000000019e-05, 7.66250000000003e-05, 7.679200000000261e-05, 7.661100000000073e-05, 7.691700000000273e-05, 7.627799999999907e-05, 7.644500000000137e-05, 7.637500000000005e-05, 7.647200000000104e-05, 7.629100000000263e-05, 7.641699999999876e-05, 7.627799999999907e-05, 7.62639999999995e-05, 7.693099999999883e-05, 7.627799999999907e-05, 7.66250000000003e-05, 7.611100000000023e-05, 7.661100000000073e-05, 7.645900000000094e-05, 7.644500000000137e-05, 7.620800000000122e-05, 7.622200000000079e-05, 7.680499999999923e-05, 7.6764e-05, 7.659700000000116e-05]</msg>
<status status="PASS" starttime="20201029 18:19:43.499" endtime="20201029 18:19:43.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.494" endtime="20201029 18:19:43.502"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:43.506" endtime="20201029 18:19:43.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.504" endtime="20201029 18:19:43.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.503" endtime="20201029 18:19:43.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.141" endtime="20201029 18:19:43.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.141" endtime="20201029 18:19:43.527"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.536" endtime="20201029 18:19:43.557"></status>
</kw>
<msg timestamp="20201029 18:19:43.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:43.534" endtime="20201029 18:19:43.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:43.559" endtime="20201029 18:19:43.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.562" endtime="20201029 18:19:43.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.531" endtime="20201029 18:19:43.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.529" endtime="20201029 18:19:43.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.571" endtime="20201029 18:19:43.859"></status>
</kw>
<msg timestamp="20201029 18:19:43.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026123278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026201111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:43.569" endtime="20201029 18:19:43.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026123278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026201111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:43.863" endtime="20201029 18:19:43.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.871" endtime="20201029 18:19:43.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.567" endtime="20201029 18:19:43.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.565" endtime="20201029 18:19:43.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:43.878" level="INFO">${RESULT} = [{'diff': 7.783299999999937e-05}, {'diff': 7.743099999999933e-05}, {'diff': 7.763900000000087e-05}, {'diff': 7.79449999999994e-05}, {'diff': 7.74030000000002e-05}, {'diff': 7.711200000000071e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:43.875" endtime="20201029 18:19:43.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:43.882" level="INFO">${ACCURACY} = {'diff': [7.783299999999937e-05, 7.743099999999933e-05, 7.763900000000087e-05, 7.79449999999994e-05, 7.74030000000002e-05, 7.711200000000071e-05, 7.747199999999857e-05, 7.779100000000067e-05, 7.744399...</msg>
<status status="PASS" starttime="20201029 18:19:43.879" endtime="20201029 18:19:43.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.887" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201029 18:19:43.886" endtime="20201029 18:19:43.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.890" level="INFO">VALUE: [7.783299999999937e-05, 7.743099999999933e-05, 7.763900000000087e-05, 7.79449999999994e-05, 7.74030000000002e-05, 7.711200000000071e-05, 7.747199999999857e-05, 7.779100000000067e-05, 7.744399999999943e-05, 7.794399999999993e-05, 7.716699999999951e-05, 7.777800000000057e-05, 7.729199999999964e-05, 7.779200000000014e-05, 7.713900000000037e-05, 7.745899999999847e-05, 7.75969999999987e-05, 7.727800000000007e-05, 7.745900000000194e-05, 7.743099999999933e-05, 7.79579999999995e-05, 7.711099999999776e-05, 7.711099999999776e-05, 7.75969999999987e-05, 7.758299999999912e-05, 7.79579999999995e-05, 7.720799999999875e-05, 7.72640000000005e-05, 7.72640000000005e-05, 7.77779999999971e-05, 7.722300000000126e-05, 7.711100000000123e-05, 7.77770000000011e-05, 7.776299999999806e-05, 7.791600000000079e-05, 7.794399999999993e-05, 7.801400000000125e-05, 7.737499999999758e-05, 7.71250000000008e-05, 7.711100000000123e-05, 7.729199999999964e-05, 7.741700000000323e-05, 7.745900000000194e-05, 7.779200000000014e-05, 7.74449999999989e-05, 7.761100000000173e-05, 7.744399999999943e-05, 7.729199999999964e-05, 7.744399999999943e-05, 7.794399999999993e-05]</msg>
<status status="PASS" starttime="20201029 18:19:43.888" endtime="20201029 18:19:43.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.883" endtime="20201029 18:19:43.892"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:43.896" endtime="20201029 18:19:43.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.894" endtime="20201029 18:19:43.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.893" endtime="20201029 18:19:43.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.527" endtime="20201029 18:19:43.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.527" endtime="20201029 18:19:43.917"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.926" endtime="20201029 18:19:43.944"></status>
</kw>
<msg timestamp="20201029 18:19:43.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:43.924" endtime="20201029 18:19:43.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:43.945" endtime="20201029 18:19:43.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.948" endtime="20201029 18:19:43.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.921" endtime="20201029 18:19:43.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.919" endtime="20201029 18:19:43.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.957" endtime="20201029 18:19:44.243"></status>
</kw>
<msg timestamp="20201029 18:19:44.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022734861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022813542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:43.956" endtime="20201029 18:19:44.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022734861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022813542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:44.248" endtime="20201029 18:19:44.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.256" endtime="20201029 18:19:44.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.953" endtime="20201029 18:19:44.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.951" endtime="20201029 18:19:44.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:44.263" level="INFO">${RESULT} = [{'diff': 7.868100000000058e-05}, {'diff': 7.827800000000107e-05}, {'diff': 7.827800000000107e-05}, {'diff': 7.829200000000064e-05}, {'diff': 7.881899999999734e-05}, {'diff': 7.8458e-05}, {'diff': 7.8...</msg>
<status status="PASS" starttime="20201029 18:19:44.259" endtime="20201029 18:19:44.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:44.268" level="INFO">${ACCURACY} = {'diff': [7.868100000000058e-05, 7.827800000000107e-05, 7.827800000000107e-05, 7.829200000000064e-05, 7.881899999999734e-05, 7.8458e-05, 7.841599999999782e-05, 7.8458e-05, 7.879199999999767e-05, 7.812...</msg>
<status status="PASS" starttime="20201029 18:19:44.264" endtime="20201029 18:19:44.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.272" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201029 18:19:44.271" endtime="20201029 18:19:44.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.275" level="INFO">VALUE: [7.868100000000058e-05, 7.827800000000107e-05, 7.827800000000107e-05, 7.829200000000064e-05, 7.881899999999734e-05, 7.8458e-05, 7.841599999999782e-05, 7.8458e-05, 7.879199999999767e-05, 7.81250000000018e-05, 7.827800000000107e-05, 7.862499999999883e-05, 7.883300000000037e-05, 7.82640000000015e-05, 7.873599999999939e-05, 7.84449999999999e-05, 7.843100000000033e-05, 7.894399999999746e-05, 7.815300000000094e-05, 7.88329999999969e-05, 7.827800000000107e-05, 7.877800000000157e-05, 7.856900000000056e-05, 7.84449999999999e-05, 7.862499999999883e-05, 7.84449999999999e-05, 7.898599999999964e-05, 7.84449999999999e-05, 7.895899999999997e-05, 7.851400000000175e-05, 7.86389999999984e-05, 7.827699999999813e-05, 7.8458e-05, 7.894400000000093e-05, 7.861099999999926e-05, 7.831999999999978e-05, 7.879200000000114e-05, 7.829200000000064e-05, 7.862499999999883e-05, 7.880599999999724e-05, 7.897200000000007e-05, 7.843100000000033e-05, 7.898599999999964e-05, 7.8458e-05, 7.861100000000273e-05, 7.861099999999926e-05, 7.8764000000002e-05, 7.862499999999883e-05, 7.85969999999997e-05, 7.845899999999947e-05]</msg>
<status status="PASS" starttime="20201029 18:19:44.274" endtime="20201029 18:19:44.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.269" endtime="20201029 18:19:44.276"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:44.280" endtime="20201029 18:19:44.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.279" endtime="20201029 18:19:44.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.277" endtime="20201029 18:19:44.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.918" endtime="20201029 18:19:44.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.917" endtime="20201029 18:19:44.301"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.310" endtime="20201029 18:19:44.329"></status>
</kw>
<msg timestamp="20201029 18:19:44.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:44.308" endtime="20201029 18:19:44.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:44.330" endtime="20201029 18:19:44.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.333" endtime="20201029 18:19:44.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.306" endtime="20201029 18:19:44.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.304" endtime="20201029 18:19:44.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.343" endtime="20201029 18:19:44.630"></status>
</kw>
<msg timestamp="20201029 18:19:44.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022927486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023006972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:44.341" endtime="20201029 18:19:44.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022927486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023006972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:44.635" endtime="20201029 18:19:44.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.643" endtime="20201029 18:19:44.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.338" endtime="20201029 18:19:44.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.336" endtime="20201029 18:19:44.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:44.650" level="INFO">${RESULT} = [{'diff': 7.948600000000014e-05}, {'diff': 7.977800000000257e-05}, {'diff': 7.926399999999903e-05}, {'diff': 7.92640000000025e-05}, {'diff': 7.96109999999968e-05}, {'diff': 7.929199999999817e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:44.647" endtime="20201029 18:19:44.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:44.654" level="INFO">${ACCURACY} = {'diff': [7.948600000000014e-05, 7.977800000000257e-05, 7.926399999999903e-05, 7.92640000000025e-05, 7.96109999999968e-05, 7.929199999999817e-05, 7.96519999999995e-05, 7.962499999999983e-05, 7.9112000...</msg>
<status status="PASS" starttime="20201029 18:19:44.651" endtime="20201029 18:19:44.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.659" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201029 18:19:44.658" endtime="20201029 18:19:44.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.661" level="INFO">VALUE: [7.948600000000014e-05, 7.977800000000257e-05, 7.926399999999903e-05, 7.92640000000025e-05, 7.96109999999968e-05, 7.929199999999817e-05, 7.96519999999995e-05, 7.962499999999983e-05, 7.911200000000271e-05, 7.983300000000138e-05, 7.994399999999846e-05, 7.977699999999963e-05, 7.929200000000164e-05, 7.911099999999976e-05, 7.926399999999903e-05, 7.994399999999846e-05, 7.962499999999983e-05, 7.92640000000025e-05, 7.923599999999989e-05, 7.941700000000176e-05, 7.959800000000017e-05, 7.906899999999759e-05, 7.944399999999796e-05, 7.977699999999963e-05, 7.958300000000113e-05, 7.911100000000323e-05, 7.998600000000064e-05, 7.994400000000193e-05, 7.94450000000009e-05, 7.99450000000014e-05, 7.945900000000047e-05, 7.92779999999986e-05, 7.9458000000001e-05, 7.976399999999953e-05, 7.943000000000186e-05, 7.95970000000007e-05, 7.95970000000007e-05, 7.976399999999953e-05, 7.99030000000027e-05, 7.924999999999946e-05, 7.911099999999976e-05, 7.976399999999953e-05, 7.97779999999991e-05, 7.980599999999824e-05, 7.937499999999958e-05, 7.994499999999793e-05, 7.962499999999983e-05, 7.95970000000007e-05, 7.965300000000244e-05, 7.994399999999846e-05]</msg>
<status status="PASS" starttime="20201029 18:19:44.660" endtime="20201029 18:19:44.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.655" endtime="20201029 18:19:44.663"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:44.666" endtime="20201029 18:19:44.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.665" endtime="20201029 18:19:44.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.664" endtime="20201029 18:19:44.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.302" endtime="20201029 18:19:44.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.301" endtime="20201029 18:19:44.687"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.696" endtime="20201029 18:19:44.717"></status>
</kw>
<msg timestamp="20201029 18:19:44.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:44.695" endtime="20201029 18:19:44.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:44.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:44.718" endtime="20201029 18:19:44.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.721" endtime="20201029 18:19:44.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.692" endtime="20201029 18:19:44.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.690" endtime="20201029 18:19:44.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:44.730" endtime="20201029 18:19:45.017"></status>
</kw>
<msg timestamp="20201029 18:19:45.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023698528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023779028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:44.729" endtime="20201029 18:19:45.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023698528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023779028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:45.021" endtime="20201029 18:19:45.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.029" endtime="20201029 18:19:45.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.726" endtime="20201029 18:19:45.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.724" endtime="20201029 18:19:45.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:45.036" level="INFO">${RESULT} = [{'diff': 8.050000000000071e-05}, {'diff': 8.043100000000233e-05}, {'diff': 8.07780000000001e-05}, {'diff': 8.097200000000207e-05}, {'diff': 8.00970000000012e-05}, {'diff': 8.077700000000063e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:45.033" endtime="20201029 18:19:45.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:45.040" level="INFO">${ACCURACY} = {'diff': [8.050000000000071e-05, 8.043100000000233e-05, 8.07780000000001e-05, 8.097200000000207e-05, 8.00970000000012e-05, 8.077700000000063e-05, 8.090300000000022e-05, 8.008299999999816e-05, 8.062500...</msg>
<status status="PASS" starttime="20201029 18:19:45.037" endtime="20201029 18:19:45.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.045" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201029 18:19:45.044" endtime="20201029 18:19:45.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.048" level="INFO">VALUE: [8.050000000000071e-05, 8.043100000000233e-05, 8.07780000000001e-05, 8.097200000000207e-05, 8.00970000000012e-05, 8.077700000000063e-05, 8.090300000000022e-05, 8.008299999999816e-05, 8.062500000000083e-05, 8.047200000000157e-05, 8.076399999999706e-05, 8.029200000000264e-05, 8.044499999999843e-05, 8.011100000000076e-05, 8.075000000000096e-05, 8.062500000000083e-05, 8.026300000000056e-05, 8.02909999999997e-05, 8.044400000000243e-05, 8.100000000000121e-05, 8.029199999999917e-05, 8.00970000000012e-05, 8.079199999999967e-05, 8.02779999999996e-05, 8.061100000000126e-05, 8.02779999999996e-05, 8.061199999999727e-05, 8.012500000000033e-05, 8.076299999999759e-05, 8.012500000000033e-05, 8.02779999999996e-05, 8.02779999999996e-05, 8.082000000000228e-05, 8.026400000000003e-05, 8.06109999999978e-05, 8.076400000000053e-05, 8.093099999999936e-05, 8.061100000000126e-05, 8.029200000000264e-05, 8.070800000000225e-05, 8.07910000000002e-05, 8.073599999999792e-05, 8.012500000000033e-05, 8.07780000000001e-05, 8.041700000000276e-05, 8.059699999999823e-05, 8.07780000000001e-05, 8.044499999999843e-05, 8.07780000000001e-05, 8.009800000000067e-05]</msg>
<status status="PASS" starttime="20201029 18:19:45.046" endtime="20201029 18:19:45.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.041" endtime="20201029 18:19:45.050"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:45.054" endtime="20201029 18:19:45.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.052" endtime="20201029 18:19:45.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.051" endtime="20201029 18:19:45.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.688" endtime="20201029 18:19:45.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:44.688" endtime="20201029 18:19:45.075"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.084" endtime="20201029 18:19:45.103"></status>
</kw>
<msg timestamp="20201029 18:19:45.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:45.082" endtime="20201029 18:19:45.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:45.104" endtime="20201029 18:19:45.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.107" endtime="20201029 18:19:45.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.079" endtime="20201029 18:19:45.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.077" endtime="20201029 18:19:45.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.116" endtime="20201029 18:19:45.403"></status>
</kw>
<msg timestamp="20201029 18:19:45.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022654764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022736444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:45.115" endtime="20201029 18:19:45.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022654764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022736444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:45.407" endtime="20201029 18:19:45.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.415" endtime="20201029 18:19:45.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.112" endtime="20201029 18:19:45.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.110" endtime="20201029 18:19:45.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:45.422" level="INFO">${RESULT} = [{'diff': 8.168000000000064e-05}, {'diff': 8.159699999999923e-05}, {'diff': 8.166700000000054e-05}, {'diff': 8.144399999999996e-05}, {'diff': 8.151399999999781e-05}, {'diff': 8.193100000000036e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:45.419" endtime="20201029 18:19:45.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:45.427" level="INFO">${ACCURACY} = {'diff': [8.168000000000064e-05, 8.159699999999923e-05, 8.166700000000054e-05, 8.144399999999996e-05, 8.151399999999781e-05, 8.193100000000036e-05, 8.129200000000017e-05, 8.12780000000006e-05, 8.19309...</msg>
<status status="PASS" starttime="20201029 18:19:45.423" endtime="20201029 18:19:45.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.432" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201029 18:19:45.431" endtime="20201029 18:19:45.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.435" level="INFO">VALUE: [8.168000000000064e-05, 8.159699999999923e-05, 8.166700000000054e-05, 8.144399999999996e-05, 8.151399999999781e-05, 8.193100000000036e-05, 8.129200000000017e-05, 8.12780000000006e-05, 8.19309999999969e-05, 8.162500000000183e-05, 8.158399999999913e-05, 8.145799999999953e-05, 8.194400000000046e-05, 8.127700000000113e-05, 8.19719999999996e-05, 8.190300000000122e-05, 8.145799999999953e-05, 8.125000000000146e-05, 8.19170000000008e-05, 8.161100000000227e-05, 8.112500000000133e-05, 8.177799999999763e-05, 8.176299999999859e-05, 8.144399999999996e-05, 8.10970000000022e-05, 8.162500000000183e-05, 8.195800000000003e-05, 8.16109999999988e-05, 8.194400000000046e-05, 8.143099999999986e-05, 8.17780000000011e-05, 8.17780000000011e-05, 8.129200000000017e-05, 8.148599999999867e-05, 8.122200000000232e-05, 8.180500000000077e-05, 8.200000000000221e-05, 8.193000000000089e-05, 8.177799999999763e-05, 8.194400000000046e-05, 8.11109999999983e-05, 8.108299999999916e-05, 8.136100000000202e-05, 8.194499999999993e-05, 8.1152000000001e-05, 8.12780000000006e-05, 8.112500000000133e-05, 8.10840000000021e-05, 8.111100000000177e-05, 8.161100000000227e-05]</msg>
<status status="PASS" starttime="20201029 18:19:45.433" endtime="20201029 18:19:45.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.428" endtime="20201029 18:19:45.440"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:45.444" endtime="20201029 18:19:45.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.443" endtime="20201029 18:19:45.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.441" endtime="20201029 18:19:45.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.076" endtime="20201029 18:19:45.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.075" endtime="20201029 18:19:45.465"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.474" endtime="20201029 18:19:45.493"></status>
</kw>
<msg timestamp="20201029 18:19:45.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:45.473" endtime="20201029 18:19:45.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:45.495" endtime="20201029 18:19:45.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.497" endtime="20201029 18:19:45.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.470" endtime="20201029 18:19:45.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.468" endtime="20201029 18:19:45.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.507" endtime="20201029 18:19:45.795"></status>
</kw>
<msg timestamp="20201029 18:19:45.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022799819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022882708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:45.505" endtime="20201029 18:19:45.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022799819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022882708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:45.799" endtime="20201029 18:19:45.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.808" endtime="20201029 18:19:45.809"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.503" endtime="20201029 18:19:45.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.501" endtime="20201029 18:19:45.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:45.814" level="INFO">${RESULT} = [{'diff': 8.288900000000265e-05}, {'diff': 8.26109999999998e-05}, {'diff': 8.294500000000093e-05}, {'diff': 8.290199999999928e-05}, {'diff': 8.226299999999909e-05}, {'diff': 8.294400000000146e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:45.811" endtime="20201029 18:19:45.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:45.819" level="INFO">${ACCURACY} = {'diff': [8.288900000000265e-05, 8.26109999999998e-05, 8.294500000000093e-05, 8.290199999999928e-05, 8.226299999999909e-05, 8.294400000000146e-05, 8.27919999999982e-05, 8.244400000000096e-05, 8.263899...</msg>
<status status="PASS" starttime="20201029 18:19:45.815" endtime="20201029 18:19:45.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.823" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201029 18:19:45.822" endtime="20201029 18:19:45.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.826" level="INFO">VALUE: [8.288900000000265e-05, 8.26109999999998e-05, 8.294500000000093e-05, 8.290199999999928e-05, 8.226299999999909e-05, 8.294400000000146e-05, 8.27919999999982e-05, 8.244400000000096e-05, 8.263899999999894e-05, 8.295799999999756e-05, 8.26109999999998e-05, 8.227799999999813e-05, 8.276399999999906e-05, 8.294499999999747e-05, 8.277699999999916e-05, 8.27910000000022e-05, 8.277699999999916e-05, 8.227700000000213e-05, 8.226399999999856e-05, 8.230600000000074e-05, 8.22780000000016e-05, 8.21109999999993e-05, 8.243100000000086e-05, 8.294499999999747e-05, 8.258400000000013e-05, 8.262499999999937e-05, 8.229099999999823e-05, 8.21109999999993e-05, 8.26109999999998e-05, 8.224999999999899e-05, 8.27780000000021e-05, 8.284799999999995e-05, 8.208300000000016e-05, 8.257000000000056e-05, 8.277799999999863e-05, 8.26109999999998e-05, 8.299999999999974e-05, 8.211200000000224e-05, 8.26109999999998e-05, 8.242999999999792e-05, 8.262499999999937e-05, 8.259700000000023e-05, 8.21109999999993e-05, 8.258300000000066e-05, 8.212499999999887e-05, 8.211100000000277e-05, 8.244499999999697e-05, 8.258400000000013e-05, 8.24170000000013e-05, 8.29590000000005e-05]</msg>
<status status="PASS" starttime="20201029 18:19:45.825" endtime="20201029 18:19:45.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.819" endtime="20201029 18:19:45.827"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:45.831" endtime="20201029 18:19:45.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.830" endtime="20201029 18:19:45.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.828" endtime="20201029 18:19:45.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.466" endtime="20201029 18:19:45.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.465" endtime="20201029 18:19:45.852"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.861" endtime="20201029 18:19:45.881"></status>
</kw>
<msg timestamp="20201029 18:19:45.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:45.860" endtime="20201029 18:19:45.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:45.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:45.882" endtime="20201029 18:19:45.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.885" endtime="20201029 18:19:45.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.857" endtime="20201029 18:19:45.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.855" endtime="20201029 18:19:45.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:45.895" endtime="20201029 18:19:46.180"></status>
</kw>
<msg timestamp="20201029 18:19:46.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023734514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023817806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:45.893" endtime="20201029 18:19:46.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023734514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023817806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:46.185" endtime="20201029 18:19:46.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.193" endtime="20201029 18:19:46.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.890" endtime="20201029 18:19:46.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.888" endtime="20201029 18:19:46.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:46.200" level="INFO">${RESULT} = [{'diff': 8.32919999999987e-05}, {'diff': 8.36110000000008e-05}, {'diff': 8.363899999999994e-05}, {'diff': 8.394399999999899e-05}, {'diff': 8.394400000000246e-05}, {'diff': 8.329099999999923e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:46.197" endtime="20201029 18:19:46.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:46.204" level="INFO">${ACCURACY} = {'diff': [8.32919999999987e-05, 8.36110000000008e-05, 8.363899999999994e-05, 8.394399999999899e-05, 8.394400000000246e-05, 8.329099999999923e-05, 8.377799999999963e-05, 8.377799999999963e-05, 8.348700...</msg>
<status status="PASS" starttime="20201029 18:19:46.201" endtime="20201029 18:19:46.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.209" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201029 18:19:46.208" endtime="20201029 18:19:46.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.211" level="INFO">VALUE: [8.32919999999987e-05, 8.36110000000008e-05, 8.363899999999994e-05, 8.394399999999899e-05, 8.394400000000246e-05, 8.329099999999923e-05, 8.377799999999963e-05, 8.377799999999963e-05, 8.348700000000014e-05, 8.313899999999944e-05, 8.344499999999797e-05, 8.347300000000057e-05, 8.387500000000062e-05, 8.39590000000015e-05, 8.327799999999913e-05, 8.344399999999849e-05, 8.327699999999966e-05, 8.393000000000289e-05, 8.309700000000073e-05, 8.394399999999899e-05, 8.36110000000008e-05, 8.354199999999895e-05, 8.347300000000057e-05, 8.36110000000008e-05, 8.312499999999987e-05, 8.386100000000105e-05, 8.395799999999856e-05, 8.345800000000153e-05, 8.376400000000006e-05, 8.375000000000049e-05, 8.309700000000073e-05, 8.37919999999992e-05, 8.359700000000123e-05, 8.373599999999745e-05, 8.37919999999992e-05, 8.336100000000055e-05, 8.377799999999963e-05, 8.362500000000037e-05, 8.333299999999794e-05, 8.312499999999987e-05, 8.377700000000016e-05, 8.368099999999865e-05, 8.312499999999987e-05, 8.394399999999899e-05, 8.312500000000334e-05, 8.394499999999847e-05, 8.37919999999992e-05, 8.377799999999963e-05, 8.35980000000007e-05, 8.329099999999923e-05]</msg>
<status status="PASS" starttime="20201029 18:19:46.210" endtime="20201029 18:19:46.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.205" endtime="20201029 18:19:46.214"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:46.217" endtime="20201029 18:19:46.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.216" endtime="20201029 18:19:46.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.215" endtime="20201029 18:19:46.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.853" endtime="20201029 18:19:46.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:45.853" endtime="20201029 18:19:46.238"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.247" endtime="20201029 18:19:46.266"></status>
</kw>
<msg timestamp="20201029 18:19:46.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:46.246" endtime="20201029 18:19:46.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:46.268" endtime="20201029 18:19:46.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.270" endtime="20201029 18:19:46.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.243" endtime="20201029 18:19:46.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.241" endtime="20201029 18:19:46.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.280" endtime="20201029 18:19:46.566"></status>
</kw>
<msg timestamp="20201029 18:19:46.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022724792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022809083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:46.278" endtime="20201029 18:19:46.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022724792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022809083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:46.570" endtime="20201029 18:19:46.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.578" endtime="20201029 18:19:46.580"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.276" endtime="20201029 18:19:46.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.274" endtime="20201029 18:19:46.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:46.585" level="INFO">${RESULT} = [{'diff': 8.429100000000023e-05}, {'diff': 8.409700000000173e-05}, {'diff': 8.493000000000042e-05}, {'diff': 8.46110000000018e-05}, {'diff': 8.41110000000013e-05}, {'diff': 8.41110000000013e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:19:46.582" endtime="20201029 18:19:46.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:46.590" level="INFO">${ACCURACY} = {'diff': [8.429100000000023e-05, 8.409700000000173e-05, 8.493000000000042e-05, 8.46110000000018e-05, 8.41110000000013e-05, 8.41110000000013e-05, 8.495899999999904e-05, 8.495899999999904e-05, 8.4611000...</msg>
<status status="PASS" starttime="20201029 18:19:46.586" endtime="20201029 18:19:46.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.595" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201029 18:19:46.594" endtime="20201029 18:19:46.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.598" level="INFO">VALUE: [8.429100000000023e-05, 8.409700000000173e-05, 8.493000000000042e-05, 8.46110000000018e-05, 8.41110000000013e-05, 8.41110000000013e-05, 8.495899999999904e-05, 8.495899999999904e-05, 8.46110000000018e-05, 8.477800000000063e-05, 8.443100000000286e-05, 8.479100000000073e-05, 8.426300000000109e-05, 8.46249999999979e-05, 8.47920000000002e-05, 8.459699999999876e-05, 8.462500000000137e-05, 8.461099999999833e-05, 8.440300000000026e-05, 8.41110000000013e-05, 8.427800000000013e-05, 8.427800000000013e-05, 8.450000000000124e-05, 8.476300000000159e-05, 8.495799999999956e-05, 8.46110000000018e-05, 8.41110000000013e-05, 8.444399999999949e-05, 8.44720000000021e-05, 8.487499999999815e-05, 8.433299999999894e-05, 8.424999999999752e-05, 8.426400000000056e-05, 8.494499999999947e-05, 8.495799999999956e-05, 8.456899999999962e-05, 8.427700000000066e-05, 8.47920000000002e-05, 8.494399999999999e-05, 8.444400000000296e-05, 8.42919999999997e-05, 8.426400000000056e-05, 8.441699999999983e-05, 8.494499999999947e-05, 8.411099999999783e-05, 8.44859999999982e-05, 8.409699999999826e-05, 8.444400000000296e-05, 8.445799999999906e-05, 8.427800000000013e-05]</msg>
<status status="PASS" starttime="20201029 18:19:46.596" endtime="20201029 18:19:46.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.591" endtime="20201029 18:19:46.599"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:46.603" endtime="20201029 18:19:46.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.601" endtime="20201029 18:19:46.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.600" endtime="20201029 18:19:46.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.239" endtime="20201029 18:19:46.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.239" endtime="20201029 18:19:46.624"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.634" endtime="20201029 18:19:46.653"></status>
</kw>
<msg timestamp="20201029 18:19:46.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:46.632" endtime="20201029 18:19:46.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:46.654" endtime="20201029 18:19:46.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.657" endtime="20201029 18:19:46.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.629" endtime="20201029 18:19:46.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.627" endtime="20201029 18:19:46.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.666" endtime="20201029 18:19:46.954"></status>
</kw>
<msg timestamp="20201029 18:19:46.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024258375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024344, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:19:46.665" endtime="20201029 18:19:46.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024258375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024344, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:19:46.958" endtime="20201029 18:19:46.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.967" endtime="20201029 18:19:46.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.662" endtime="20201029 18:19:46.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.660" endtime="20201029 18:19:46.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:46.979" level="INFO">${RESULT} = [{'diff': 8.562500000000237e-05}, {'diff': 8.526399999999809e-05}, {'diff': 8.511099999999883e-05}, {'diff': 8.51249999999984e-05}, {'diff': 8.54310000000004e-05}, {'diff': 8.522199999999938e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:46.974" endtime="20201029 18:19:46.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:46.986" level="INFO">${ACCURACY} = {'diff': [8.562500000000237e-05, 8.526399999999809e-05, 8.511099999999883e-05, 8.51249999999984e-05, 8.54310000000004e-05, 8.522199999999938e-05, 8.56249999999989e-05, 8.554100000000148e-05, 8.5596999...</msg>
<status status="PASS" starttime="20201029 18:19:46.981" endtime="20201029 18:19:46.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.994" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201029 18:19:46.991" endtime="20201029 18:19:46.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.997" level="INFO">VALUE: [8.562500000000237e-05, 8.526399999999809e-05, 8.511099999999883e-05, 8.51249999999984e-05, 8.54310000000004e-05, 8.522199999999938e-05, 8.56249999999989e-05, 8.554100000000148e-05, 8.559699999999976e-05, 8.544400000000049e-05, 8.526400000000156e-05, 8.544399999999702e-05, 8.56110000000028e-05, 8.545899999999954e-05, 8.511099999999883e-05, 8.594500000000047e-05, 8.527800000000113e-05, 8.543000000000092e-05, 8.579099999999826e-05, 8.527699999999819e-05, 8.583399999999991e-05, 8.542999999999745e-05, 8.513900000000144e-05, 8.591700000000133e-05, 8.54720000000031e-05, 8.591700000000133e-05, 8.57920000000012e-05, 8.587499999999915e-05, 8.522299999999886e-05, 8.550000000000224e-05, 8.527799999999766e-05, 8.505500000000055e-05, 8.57920000000012e-05, 8.544400000000049e-05, 8.526400000000156e-05, 8.511099999999883e-05, 8.577799999999816e-05, 8.577799999999816e-05, 8.54310000000004e-05, 8.566700000000108e-05, 8.545800000000006e-05, 8.577700000000216e-05, 8.511099999999883e-05, 8.529199999999723e-05, 8.512500000000187e-05, 8.551299999999887e-05, 8.545800000000006e-05, 8.505600000000002e-05, 8.577799999999816e-05, 8.544499999999997e-05]</msg>
<status status="PASS" starttime="20201029 18:19:46.995" endtime="20201029 18:19:46.999"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.987" endtime="20201029 18:19:46.999"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:47.003" endtime="20201029 18:19:47.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.002" endtime="20201029 18:19:47.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.000" endtime="20201029 18:19:47.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.625" endtime="20201029 18:19:47.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.624" endtime="20201029 18:19:47.024"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.033" endtime="20201029 18:19:47.057"></status>
</kw>
<msg timestamp="20201029 18:19:47.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:47.031" endtime="20201029 18:19:47.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:47.058" endtime="20201029 18:19:47.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.061" endtime="20201029 18:19:47.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.029" endtime="20201029 18:19:47.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.027" endtime="20201029 18:19:47.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.070" endtime="20201029 18:19:47.356"></status>
</kw>
<msg timestamp="20201029 18:19:47.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026641931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026728778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:47.069" endtime="20201029 18:19:47.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026641931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026728778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:47.360" endtime="20201029 18:19:47.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.369" endtime="20201029 18:19:47.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.066" endtime="20201029 18:19:47.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.064" endtime="20201029 18:19:47.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:47.375" level="INFO">${RESULT} = [{'diff': 8.6847000000001e-05}, {'diff': 8.64449999999975e-05}, {'diff': 8.665199999999956e-05}, {'diff': 8.627799999999866e-05}, {'diff': 8.66249999999999e-05}, {'diff': 8.656900000000162e-05}, {'dif...</msg>
<status status="PASS" starttime="20201029 18:19:47.372" endtime="20201029 18:19:47.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:47.380" level="INFO">${ACCURACY} = {'diff': [8.6847000000001e-05, 8.64449999999975e-05, 8.665199999999956e-05, 8.627799999999866e-05, 8.66249999999999e-05, 8.656900000000162e-05, 8.691599999999938e-05, 8.609699999999679e-05, 8.65970000...</msg>
<status status="PASS" starttime="20201029 18:19:47.377" endtime="20201029 18:19:47.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.384" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201029 18:19:47.383" endtime="20201029 18:19:47.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.387" level="INFO">VALUE: [8.6847000000001e-05, 8.64449999999975e-05, 8.665199999999956e-05, 8.627799999999866e-05, 8.66249999999999e-05, 8.656900000000162e-05, 8.691599999999938e-05, 8.609699999999679e-05, 8.659700000000076e-05, 8.627800000000213e-05, 8.677799999999916e-05, 8.66249999999999e-05, 8.61799999999982e-05, 8.661100000000033e-05, 8.629199999999823e-05, 8.676399999999959e-05, 8.627699999999919e-05, 8.644399999999802e-05, 8.677799999999916e-05, 8.694400000000199e-05, 8.676399999999959e-05, 8.661099999999686e-05, 8.63470000000005e-05, 8.665199999999956e-05, 8.66249999999999e-05, 8.677800000000263e-05, 8.677799999999916e-05, 8.644399999999802e-05, 8.627699999999919e-05, 8.644399999999802e-05, 8.697200000000113e-05, 8.611099999999983e-05, 8.66249999999999e-05, 8.651299999999987e-05, 8.632000000000084e-05, 8.661100000000033e-05, 8.694500000000147e-05, 8.623699999999943e-05, 8.659800000000023e-05, 8.695800000000156e-05, 8.608300000000069e-05, 8.624999999999952e-05, 8.644399999999802e-05, 8.694399999999852e-05, 8.627799999999866e-05, 8.626399999999909e-05, 8.64449999999975e-05, 8.645900000000054e-05, 8.69590000000045e-05, 8.629100000000223e-05]</msg>
<status status="PASS" starttime="20201029 18:19:47.386" endtime="20201029 18:19:47.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.381" endtime="20201029 18:19:47.389"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:47.393" endtime="20201029 18:19:47.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.392" endtime="20201029 18:19:47.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.390" endtime="20201029 18:19:47.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.025" endtime="20201029 18:19:47.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.024" endtime="20201029 18:19:47.414"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.423" endtime="20201029 18:19:47.442"></status>
</kw>
<msg timestamp="20201029 18:19:47.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:47.421" endtime="20201029 18:19:47.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:47.444" endtime="20201029 18:19:47.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.446" endtime="20201029 18:19:47.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.419" endtime="20201029 18:19:47.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.417" endtime="20201029 18:19:47.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.456" endtime="20201029 18:19:47.742"></status>
</kw>
<msg timestamp="20201029 18:19:47.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022685944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022773306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:47.454" endtime="20201029 18:19:47.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022685944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022773306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:47.746" endtime="20201029 18:19:47.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.754" endtime="20201029 18:19:47.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.451" endtime="20201029 18:19:47.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.450" endtime="20201029 18:19:47.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:47.761" level="INFO">${RESULT} = [{'diff': 8.736200000000055e-05}, {'diff': 8.729199999999923e-05}, {'diff': 8.744500000000197e-05}, {'diff': 8.777700000000069e-05}, {'diff': 8.744399999999902e-05}, {'diff': 8.711100000000083e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:47.758" endtime="20201029 18:19:47.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:47.766" level="INFO">${ACCURACY} = {'diff': [8.736200000000055e-05, 8.729199999999923e-05, 8.744500000000197e-05, 8.777700000000069e-05, 8.744399999999902e-05, 8.711100000000083e-05, 8.708300000000169e-05, 8.761100000000133e-05, 8.7179...</msg>
<status status="PASS" starttime="20201029 18:19:47.762" endtime="20201029 18:19:47.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.771" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201029 18:19:47.770" endtime="20201029 18:19:47.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.774" level="INFO">VALUE: [8.736200000000055e-05, 8.729199999999923e-05, 8.744500000000197e-05, 8.777700000000069e-05, 8.744399999999902e-05, 8.711100000000083e-05, 8.708300000000169e-05, 8.761100000000133e-05, 8.71799999999992e-05, 8.711100000000083e-05, 8.741699999999936e-05, 8.727799999999966e-05, 8.729199999999923e-05, 8.747199999999816e-05, 8.794399999999952e-05, 8.776400000000059e-05, 8.71250000000004e-05, 8.727799999999966e-05, 8.752799999999991e-05, 8.761199999999733e-05, 8.73059999999988e-05, 8.733300000000194e-05, 8.777800000000016e-05, 8.79860000000017e-05, 8.7944999999999e-05, 8.763900000000047e-05, 8.792999999999995e-05, 8.715299999999954e-05, 8.743000000000292e-05, 8.777799999999669e-05, 8.777800000000016e-05, 8.776400000000059e-05, 8.727800000000313e-05, 8.78059999999993e-05, 8.727799999999966e-05, 8.761100000000133e-05, 8.777700000000069e-05, 8.713899999999997e-05, 8.744400000000249e-05, 8.718100000000215e-05, 8.773600000000145e-05, 8.726400000000009e-05, 8.709700000000126e-05, 8.761100000000133e-05, 8.745900000000154e-05, 8.776400000000059e-05, 8.74449999999985e-05, 8.745800000000206e-05, 8.729099999999976e-05, 8.729099999999976e-05]</msg>
<status status="PASS" starttime="20201029 18:19:47.772" endtime="20201029 18:19:47.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.767" endtime="20201029 18:19:47.775"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:47.779" endtime="20201029 18:19:47.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.777" endtime="20201029 18:19:47.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.776" endtime="20201029 18:19:47.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.415" endtime="20201029 18:19:47.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.414" endtime="20201029 18:19:47.800"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.809" endtime="20201029 18:19:47.828"></status>
</kw>
<msg timestamp="20201029 18:19:47.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:47.807" endtime="20201029 18:19:47.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:47.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:47.830" endtime="20201029 18:19:47.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.833" endtime="20201029 18:19:47.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.804" endtime="20201029 18:19:47.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.802" endtime="20201029 18:19:47.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:47.842" endtime="20201029 18:19:48.130"></status>
</kw>
<msg timestamp="20201029 18:19:48.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022637486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022726264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:47.841" endtime="20201029 18:19:48.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022637486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022726264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:48.134" endtime="20201029 18:19:48.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.143" endtime="20201029 18:19:48.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.838" endtime="20201029 18:19:48.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.836" endtime="20201029 18:19:48.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:48.150" level="INFO">${RESULT} = [{'diff': 8.877800000000116e-05}, {'diff': 8.8945e-05}, {'diff': 8.829200000000023e-05}, {'diff': 8.876400000000159e-05}, {'diff': 8.811100000000183e-05}, {'diff': 8.880500000000083e-05}, {'diff': 8.8...</msg>
<status status="PASS" starttime="20201029 18:19:48.146" endtime="20201029 18:19:48.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:48.154" level="INFO">${ACCURACY} = {'diff': [8.877800000000116e-05, 8.8945e-05, 8.829200000000023e-05, 8.876400000000159e-05, 8.811100000000183e-05, 8.880500000000083e-05, 8.894400000000052e-05, 8.881999999999987e-05, 8.848599999999873...</msg>
<status status="PASS" starttime="20201029 18:19:48.151" endtime="20201029 18:19:48.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.159" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201029 18:19:48.157" endtime="20201029 18:19:48.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.161" level="INFO">VALUE: [8.877800000000116e-05, 8.8945e-05, 8.829200000000023e-05, 8.876400000000159e-05, 8.811100000000183e-05, 8.880500000000083e-05, 8.894400000000052e-05, 8.881999999999987e-05, 8.848599999999873e-05, 8.829200000000023e-05, 8.829200000000023e-05, 8.861100000000233e-05, 8.866600000000113e-05, 8.845899999999907e-05, 8.86250000000019e-05, 8.879100000000126e-05, 8.844400000000002e-05, 8.859699999999929e-05, 8.815300000000054e-05, 8.811099999999836e-05, 8.845800000000306e-05, 8.859700000000276e-05, 8.811099999999836e-05, 8.877800000000116e-05, 8.845899999999907e-05, 8.845799999999959e-05, 8.809799999999826e-05, 8.859700000000276e-05, 8.861099999999886e-05, 8.875000000000202e-05, 8.827800000000066e-05, 8.892999999999748e-05, 8.859699999999929e-05, 8.84449999999995e-05, 8.825000000000152e-05, 8.827800000000066e-05, 8.811199999999783e-05, 8.845800000000306e-05, 8.895800000000009e-05, 8.827800000000066e-05, 8.826399999999762e-05, 8.845799999999959e-05, 8.861099999999886e-05, 8.844400000000002e-05, 8.84449999999995e-05, 8.84449999999995e-05, 8.838900000000122e-05, 8.861100000000233e-05, 8.823599999999848e-05, 8.845800000000306e-05]</msg>
<status status="PASS" starttime="20201029 18:19:48.160" endtime="20201029 18:19:48.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.155" endtime="20201029 18:19:48.163"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:48.167" endtime="20201029 18:19:48.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.165" endtime="20201029 18:19:48.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.164" endtime="20201029 18:19:48.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.801" endtime="20201029 18:19:48.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:47.800" endtime="20201029 18:19:48.187"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.197" endtime="20201029 18:19:48.217"></status>
</kw>
<msg timestamp="20201029 18:19:48.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:48.195" endtime="20201029 18:19:48.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:48.218" endtime="20201029 18:19:48.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.221" endtime="20201029 18:19:48.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.192" endtime="20201029 18:19:48.223"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.190" endtime="20201029 18:19:48.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.230" endtime="20201029 18:19:48.516"></status>
</kw>
<msg timestamp="20201029 18:19:48.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023844944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023934139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:48.229" endtime="20201029 18:19:48.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023844944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023934139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:48.520" endtime="20201029 18:19:48.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.529" endtime="20201029 18:19:48.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.226" endtime="20201029 18:19:48.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.224" endtime="20201029 18:19:48.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:48.536" level="INFO">${RESULT} = [{'diff': 8.919500000000025e-05}, {'diff': 8.927800000000166e-05}, {'diff': 8.977800000000216e-05}, {'diff': 8.993099999999796e-05}, {'diff': 8.929100000000176e-05}, {'diff': 8.973699999999946e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:48.532" endtime="20201029 18:19:48.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:48.540" level="INFO">${ACCURACY} = {'diff': [8.919500000000025e-05, 8.927800000000166e-05, 8.977800000000216e-05, 8.993099999999796e-05, 8.929100000000176e-05, 8.973699999999946e-05, 8.927700000000219e-05, 8.962499999999943e-05, 8.9776...</msg>
<status status="PASS" starttime="20201029 18:19:48.537" endtime="20201029 18:19:48.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.545" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201029 18:19:48.544" endtime="20201029 18:19:48.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.547" level="INFO">VALUE: [8.919500000000025e-05, 8.927800000000166e-05, 8.977800000000216e-05, 8.993099999999796e-05, 8.929100000000176e-05, 8.973699999999946e-05, 8.927700000000219e-05, 8.962499999999943e-05, 8.977699999999922e-05, 8.906899999999718e-05, 8.961099999999986e-05, 8.977799999999869e-05, 8.944499999999703e-05, 8.929199999999776e-05, 8.977800000000216e-05, 8.926399999999862e-05, 8.943100000000093e-05, 8.994399999999805e-05, 8.995800000000109e-05, 8.977800000000216e-05, 8.940300000000179e-05, 8.995800000000109e-05, 8.961099999999986e-05, 8.927800000000166e-05, 8.959700000000029e-05, 8.995900000000057e-05, 8.961099999999986e-05, 8.990300000000229e-05, 8.944499999999703e-05, 8.945800000000059e-05, 8.977699999999922e-05, 8.966699999999814e-05, 8.994400000000152e-05, 8.965299999999857e-05, 8.911099999999936e-05, 8.9945000000001e-05, 8.961099999999986e-05, 8.936099999999961e-05, 8.962499999999943e-05, 8.977800000000216e-05, 8.911099999999936e-05, 8.93190000000009e-05, 8.934799999999951e-05, 8.995799999999762e-05, 8.962499999999943e-05, 8.967999999999823e-05, 8.993100000000143e-05, 8.94450000000005e-05, 8.977799999999869e-05, 8.91250000000024e-05]</msg>
<status status="PASS" starttime="20201029 18:19:48.546" endtime="20201029 18:19:48.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.541" endtime="20201029 18:19:48.549"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:48.553" endtime="20201029 18:19:48.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.552" endtime="20201029 18:19:48.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.550" endtime="20201029 18:19:48.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.188" endtime="20201029 18:19:48.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.188" endtime="20201029 18:19:48.574"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.583" endtime="20201029 18:19:48.602"></status>
</kw>
<msg timestamp="20201029 18:19:48.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:48.582" endtime="20201029 18:19:48.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:48.604" endtime="20201029 18:19:48.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.607" endtime="20201029 18:19:48.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.579" endtime="20201029 18:19:48.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.577" endtime="20201029 18:19:48.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.616" endtime="20201029 18:19:48.902"></status>
</kw>
<msg timestamp="20201029 18:19:48.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022933653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0230245, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:19:48.615" endtime="20201029 18:19:48.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022933653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0230245, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:19:48.906" endtime="20201029 18:19:48.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.915" endtime="20201029 18:19:48.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.612" endtime="20201029 18:19:48.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.610" endtime="20201029 18:19:48.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:48.921" level="INFO">${RESULT} = [{'diff': 9.084700000000154e-05}, {'diff': 9.026399999999962e-05}, {'diff': 9.041699999999889e-05}, {'diff': 9.04589999999976e-05}, {'diff': 9.04450000000015e-05}, {'diff': 9.0945000000002e-05}, {'dif...</msg>
<status status="PASS" starttime="20201029 18:19:48.918" endtime="20201029 18:19:48.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:48.927" level="INFO">${ACCURACY} = {'diff': [9.084700000000154e-05, 9.026399999999962e-05, 9.041699999999889e-05, 9.04589999999976e-05, 9.04450000000015e-05, 9.0945000000002e-05, 9.011199999999983e-05, 9.079099999999979e-05, 9.01950000...</msg>
<status status="PASS" starttime="20201029 18:19:48.922" endtime="20201029 18:19:48.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.931" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201029 18:19:48.930" endtime="20201029 18:19:48.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.934" level="INFO">VALUE: [9.084700000000154e-05, 9.026399999999962e-05, 9.041699999999889e-05, 9.04589999999976e-05, 9.04450000000015e-05, 9.0945000000002e-05, 9.011199999999983e-05, 9.079099999999979e-05, 9.019500000000125e-05, 9.009700000000079e-05, 9.061100000000086e-05, 9.094400000000252e-05, 9.027799999999919e-05, 9.044399999999855e-05, 9.011100000000036e-05, 9.094499999999853e-05, 9.094499999999853e-05, 9.005600000000155e-05, 9.05000000000003e-05, 9.062500000000043e-05, 9.058299999999825e-05, 9.0639e-05, 9.075000000000055e-05, 9.059700000000129e-05, 9.043099999999846e-05, 9.012499999999993e-05, 9.051399999999987e-05, 9.061100000000086e-05, 9.079099999999979e-05, 9.025000000000005e-05, 9.0639e-05, 9.011099999999689e-05, 9.054100000000301e-05, 9.012499999999993e-05, 9.061100000000086e-05, 9.012499999999993e-05, 9.079200000000273e-05, 9.027799999999919e-05, 9.011100000000036e-05, 9.011199999999983e-05, 9.080499999999936e-05, 9.094399999999905e-05, 9.061099999999739e-05, 9.027800000000266e-05, 9.081899999999893e-05, 9.029200000000223e-05, 9.080599999999883e-05, 9.025000000000005e-05, 9.011100000000036e-05, 9.005600000000155e-05]</msg>
<status status="PASS" starttime="20201029 18:19:48.932" endtime="20201029 18:19:48.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.927" endtime="20201029 18:19:48.935"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:48.939" endtime="20201029 18:19:48.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.937" endtime="20201029 18:19:48.959"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.936" endtime="20201029 18:19:48.959"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.575" endtime="20201029 18:19:48.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.574" endtime="20201029 18:19:48.960"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.969" endtime="20201029 18:19:48.988"></status>
</kw>
<msg timestamp="20201029 18:19:48.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:48.967" endtime="20201029 18:19:48.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:48.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:48.990" endtime="20201029 18:19:48.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:48.992" endtime="20201029 18:19:48.994"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.965" endtime="20201029 18:19:48.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.962" endtime="20201029 18:19:48.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.002" endtime="20201029 18:19:49.290"></status>
</kw>
<msg timestamp="20201029 18:19:49.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022999097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023090611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:49.000" endtime="20201029 18:19:49.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022999097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023090611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:49.294" endtime="20201029 18:19:49.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.302" endtime="20201029 18:19:49.304"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.998" endtime="20201029 18:19:49.305"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.996" endtime="20201029 18:19:49.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:49.309" level="INFO">${RESULT} = [{'diff': 9.151400000000087e-05}, {'diff': 9.111099999999789e-05}, {'diff': 9.193099999999996e-05}, {'diff': 9.179200000000026e-05}, {'diff': 9.177799999999722e-05}, {'diff': 9.127800000000019e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:49.306" endtime="20201029 18:19:49.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:49.313" level="INFO">${ACCURACY} = {'diff': [9.151400000000087e-05, 9.111099999999789e-05, 9.193099999999996e-05, 9.179200000000026e-05, 9.177799999999722e-05, 9.127800000000019e-05, 9.177800000000069e-05, 9.194499999999953e-05, 9.1054...</msg>
<status status="PASS" starttime="20201029 18:19:49.310" endtime="20201029 18:19:49.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.318" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201029 18:19:49.317" endtime="20201029 18:19:49.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.321" level="INFO">VALUE: [9.151400000000087e-05, 9.111099999999789e-05, 9.193099999999996e-05, 9.179200000000026e-05, 9.177799999999722e-05, 9.127800000000019e-05, 9.177800000000069e-05, 9.194499999999953e-05, 9.105499999999961e-05, 9.161100000000186e-05, 9.129100000000029e-05, 9.145799999999912e-05, 9.145799999999912e-05, 9.191699999999692e-05, 9.126399999999715e-05, 9.177800000000069e-05, 9.127800000000019e-05, 9.109799999999779e-05, 9.180599999999983e-05, 9.177699999999775e-05, 9.127700000000072e-05, 9.177699999999775e-05, 9.177800000000069e-05, 9.144400000000302e-05, 9.111100000000136e-05, 9.161099999999839e-05, 9.143099999999946e-05, 9.161100000000186e-05, 9.143099999999946e-05, 9.176400000000112e-05, 9.161100000000186e-05, 9.127700000000072e-05, 9.105499999999961e-05, 9.187499999999821e-05, 9.16529999999971e-05, 9.127800000000019e-05, 9.127800000000019e-05, 9.145900000000207e-05, 9.14450000000025e-05, 9.130499999999986e-05, 9.195799999999962e-05, 9.145799999999912e-05, 9.144399999999955e-05, 9.179100000000079e-05, 9.111099999999789e-05, 9.127800000000019e-05, 9.108299999999875e-05, 9.19870000000017e-05, 9.11390000000005e-05, 9.14450000000025e-05]</msg>
<status status="PASS" starttime="20201029 18:19:49.319" endtime="20201029 18:19:49.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.314" endtime="20201029 18:19:49.322"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:49.326" endtime="20201029 18:19:49.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.324" endtime="20201029 18:19:49.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.323" endtime="20201029 18:19:49.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.961" endtime="20201029 18:19:49.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:48.960" endtime="20201029 18:19:49.347"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.356" endtime="20201029 18:19:49.376"></status>
</kw>
<msg timestamp="20201029 18:19:49.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:49.354" endtime="20201029 18:19:49.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:49.378" endtime="20201029 18:19:49.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.380" endtime="20201029 18:19:49.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.351" endtime="20201029 18:19:49.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.349" endtime="20201029 18:19:49.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.390" endtime="20201029 18:19:49.676"></status>
</kw>
<msg timestamp="20201029 18:19:49.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023651542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023744208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:49.388" endtime="20201029 18:19:49.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023651542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023744208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:49.681" endtime="20201029 18:19:49.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.689" endtime="20201029 18:19:49.691"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.385" endtime="20201029 18:19:49.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.384" endtime="20201029 18:19:49.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:49.696" level="INFO">${RESULT} = [{'diff': 9.26659999999982e-05}, {'diff': 9.279100000000179e-05}, {'diff': 9.229200000000076e-05}, {'diff': 9.229200000000076e-05}, {'diff': 9.274999999999908e-05}, {'diff': 9.294500000000053e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:49.693" endtime="20201029 18:19:49.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:49.701" level="INFO">${ACCURACY} = {'diff': [9.26659999999982e-05, 9.279100000000179e-05, 9.229200000000076e-05, 9.229200000000076e-05, 9.274999999999908e-05, 9.294500000000053e-05, 9.24589999999996e-05, 9.28330000000005e-05, 9.2610999...</msg>
<status status="PASS" starttime="20201029 18:19:49.697" endtime="20201029 18:19:49.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.705" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201029 18:19:49.704" endtime="20201029 18:19:49.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.708" level="INFO">VALUE: [9.26659999999982e-05, 9.279100000000179e-05, 9.229200000000076e-05, 9.229200000000076e-05, 9.274999999999908e-05, 9.294500000000053e-05, 9.24589999999996e-05, 9.28330000000005e-05, 9.261099999999939e-05, 9.244500000000003e-05, 9.244400000000055e-05, 9.213899999999803e-05, 9.277799999999822e-05, 9.209699999999932e-05, 9.211099999999889e-05, 9.227799999999772e-05, 9.234699999999957e-05, 9.243100000000046e-05, 9.211099999999889e-05, 9.263800000000252e-05, 9.295800000000062e-05, 9.211100000000236e-05, 9.262499999999896e-05, 9.261099999999939e-05, 9.259699999999982e-05, 9.279200000000126e-05, 9.209699999999932e-05, 9.209699999999932e-05, 9.262500000000243e-05, 9.29590000000001e-05, 9.212500000000193e-05, 9.209699999999932e-05, 9.230500000000086e-05, 9.211099999999889e-05, 9.279200000000126e-05, 9.277799999999822e-05, 9.261100000000286e-05, 9.263899999999853e-05, 9.24589999999996e-05, 9.265199999999862e-05, 9.211099999999889e-05, 9.294500000000053e-05, 9.244400000000055e-05, 9.211099999999889e-05, 9.24719999999997e-05, 9.280500000000136e-05, 9.230600000000033e-05, 9.259699999999982e-05, 9.244500000000003e-05, 9.29590000000001e-05]</msg>
<status status="PASS" starttime="20201029 18:19:49.706" endtime="20201029 18:19:49.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.702" endtime="20201029 18:19:49.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:49.714" endtime="20201029 18:19:49.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.712" endtime="20201029 18:19:49.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.711" endtime="20201029 18:19:49.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.348" endtime="20201029 18:19:49.735"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.347" endtime="20201029 18:19:49.735"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.744" endtime="20201029 18:19:49.764"></status>
</kw>
<msg timestamp="20201029 18:19:49.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:49.742" endtime="20201029 18:19:49.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:49.766" endtime="20201029 18:19:49.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.769" endtime="20201029 18:19:49.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.739" endtime="20201029 18:19:49.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.737" endtime="20201029 18:19:49.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.778" endtime="20201029 18:19:50.064"></status>
</kw>
<msg timestamp="20201029 18:19:50.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023195639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0232895, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:19:49.776" endtime="20201029 18:19:50.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023195639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0232895, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:19:50.068" endtime="20201029 18:19:50.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.077" endtime="20201029 18:19:50.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.774" endtime="20201029 18:19:50.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.772" endtime="20201029 18:19:50.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:50.084" level="INFO">${RESULT} = [{'diff': 9.386100000000064e-05}, {'diff': 9.327799999999872e-05}, {'diff': 9.344400000000155e-05}, {'diff': 9.362499999999996e-05}, {'diff': 9.34590000000006e-05}, {'diff': 9.327799999999872e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:50.080" endtime="20201029 18:19:50.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:50.089" level="INFO">${ACCURACY} = {'diff': [9.386100000000064e-05, 9.327799999999872e-05, 9.344400000000155e-05, 9.362499999999996e-05, 9.34590000000006e-05, 9.327799999999872e-05, 9.344500000000103e-05, 9.361199999999986e-05, 9.37769...</msg>
<status status="PASS" starttime="20201029 18:19:50.085" endtime="20201029 18:19:50.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.093" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201029 18:19:50.092" endtime="20201029 18:19:50.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.096" level="INFO">VALUE: [9.386100000000064e-05, 9.327799999999872e-05, 9.344400000000155e-05, 9.362499999999996e-05, 9.34590000000006e-05, 9.327799999999872e-05, 9.344500000000103e-05, 9.361199999999986e-05, 9.377699999999975e-05, 9.306900000000118e-05, 9.395799999999815e-05, 9.377800000000269e-05, 9.313899999999903e-05, 9.394399999999858e-05, 9.363899999999953e-05, 9.309700000000032e-05, 9.361100000000039e-05, 9.329199999999829e-05, 9.329100000000229e-05, 9.376300000000018e-05, 9.36529999999991e-05, 9.361099999999692e-05, 9.345800000000112e-05, 9.320800000000087e-05, 9.345799999999765e-05, 9.39590000000011e-05, 9.327799999999872e-05, 9.388899999999978e-05, 9.352799999999897e-05, 9.327699999999925e-05, 9.327699999999925e-05, 9.394399999999858e-05, 9.361100000000039e-05, 9.312499999999946e-05, 9.327799999999872e-05, 9.345899999999713e-05, 9.393099999999849e-05, 9.355599999999811e-05, 9.397199999999772e-05, 9.377799999999922e-05, 9.380499999999889e-05, 9.312499999999946e-05, 9.343000000000198e-05, 9.312499999999946e-05, 9.379199999999879e-05, 9.359700000000082e-05, 9.377799999999922e-05, 9.327800000000219e-05, 9.365199999999962e-05, 9.394499999999806e-05]</msg>
<status status="PASS" starttime="20201029 18:19:50.095" endtime="20201029 18:19:50.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.090" endtime="20201029 18:19:50.098"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:50.101" endtime="20201029 18:19:50.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.100" endtime="20201029 18:19:50.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.099" endtime="20201029 18:19:50.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.736" endtime="20201029 18:19:50.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.735" endtime="20201029 18:19:50.122"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.131" endtime="20201029 18:19:50.151"></status>
</kw>
<msg timestamp="20201029 18:19:50.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:50.130" endtime="20201029 18:19:50.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:50.153" endtime="20201029 18:19:50.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.156" endtime="20201029 18:19:50.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.127" endtime="20201029 18:19:50.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.125" endtime="20201029 18:19:50.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.165" endtime="20201029 18:19:50.452"></status>
</kw>
<msg timestamp="20201029 18:19:50.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023112361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023206708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:50.163" endtime="20201029 18:19:50.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023112361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023206708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:50.456" endtime="20201029 18:19:50.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.465" endtime="20201029 18:19:50.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.161" endtime="20201029 18:19:50.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.159" endtime="20201029 18:19:50.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:50.471" level="INFO">${RESULT} = [{'diff': 9.43469999999981e-05}, {'diff': 9.444399999999908e-05}, {'diff': 9.413900000000003e-05}, {'diff': 9.494399999999958e-05}, {'diff': 9.462500000000096e-05}, {'diff': 9.427799999999972e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:50.468" endtime="20201029 18:19:50.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:50.476" level="INFO">${ACCURACY} = {'diff': [9.43469999999981e-05, 9.444399999999908e-05, 9.413900000000003e-05, 9.494399999999958e-05, 9.462500000000096e-05, 9.427799999999972e-05, 9.461099999999792e-05, 9.405600000000208e-05, 9.42779...</msg>
<status status="PASS" starttime="20201029 18:19:50.472" endtime="20201029 18:19:50.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.480" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201029 18:19:50.479" endtime="20201029 18:19:50.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.483" level="INFO">VALUE: [9.43469999999981e-05, 9.444399999999908e-05, 9.413900000000003e-05, 9.494399999999958e-05, 9.462500000000096e-05, 9.427799999999972e-05, 9.461099999999792e-05, 9.405600000000208e-05, 9.427799999999972e-05, 9.429099999999982e-05, 9.463899999999706e-05, 9.477800000000022e-05, 9.429199999999929e-05, 9.409700000000132e-05, 9.463900000000053e-05, 9.404200000000251e-05, 9.411100000000089e-05, 9.406999999999818e-05, 9.44590000000016e-05, 9.493099999999949e-05, 9.427699999999678e-05, 9.429099999999982e-05, 9.50140000000009e-05, 9.462499999999749e-05, 9.429199999999929e-05, 9.462499999999749e-05, 9.475000000000108e-05, 9.495899999999863e-05, 9.429200000000276e-05, 9.445800000000212e-05, 9.412500000000046e-05, 9.404099999999957e-05, 9.459699999999835e-05, 9.494399999999958e-05, 9.495799999999915e-05, 9.412499999999699e-05, 9.445899999999813e-05, 9.462500000000096e-05, 9.404200000000251e-05, 9.459799999999782e-05, 9.411200000000036e-05, 9.427700000000025e-05, 9.412499999999699e-05, 9.481899999999946e-05, 9.461099999999792e-05, 9.475000000000108e-05, 9.444400000000255e-05, 9.459699999999835e-05, 9.481899999999946e-05, 9.441699999999942e-05]</msg>
<status status="PASS" starttime="20201029 18:19:50.481" endtime="20201029 18:19:50.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.477" endtime="20201029 18:19:50.491"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:50.495" endtime="20201029 18:19:50.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.493" endtime="20201029 18:19:50.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.492" endtime="20201029 18:19:50.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.123" endtime="20201029 18:19:50.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.123" endtime="20201029 18:19:50.516"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.525" endtime="20201029 18:19:50.548"></status>
</kw>
<msg timestamp="20201029 18:19:50.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:50.523" endtime="20201029 18:19:50.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:50.550" endtime="20201029 18:19:50.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.552" endtime="20201029 18:19:50.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.520" endtime="20201029 18:19:50.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.518" endtime="20201029 18:19:50.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.562" endtime="20201029 18:19:50.849"></status>
</kw>
<msg timestamp="20201029 18:19:50.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026394986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026490361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:50.560" endtime="20201029 18:19:50.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026394986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026490361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:50.853" endtime="20201029 18:19:50.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.863" endtime="20201029 18:19:50.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.557" endtime="20201029 18:19:50.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.556" endtime="20201029 18:19:50.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:50.873" level="INFO">${RESULT} = [{'diff': 9.537500000000171e-05}, {'diff': 9.527700000000125e-05}, {'diff': 9.569400000000033e-05}, {'diff': 9.544400000000008e-05}, {'diff': 9.577800000000122e-05}, {'diff': 9.561099999999892e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:50.868" endtime="20201029 18:19:50.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:50.880" level="INFO">${ACCURACY} = {'diff': [9.537500000000171e-05, 9.527700000000125e-05, 9.569400000000033e-05, 9.544400000000008e-05, 9.577800000000122e-05, 9.561099999999892e-05, 9.505599999999961e-05, 9.562499999999849e-05, 9.5111...</msg>
<status status="PASS" starttime="20201029 18:19:50.875" endtime="20201029 18:19:50.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.886" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201029 18:19:50.885" endtime="20201029 18:19:50.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.890" level="INFO">VALUE: [9.537500000000171e-05, 9.527700000000125e-05, 9.569400000000033e-05, 9.544400000000008e-05, 9.577800000000122e-05, 9.561099999999892e-05, 9.505599999999961e-05, 9.562499999999849e-05, 9.511100000000189e-05, 9.576400000000165e-05, 9.577700000000175e-05, 9.577699999999828e-05, 9.527800000000072e-05, 9.594400000000058e-05, 9.559699999999935e-05, 9.511099999999842e-05, 9.509699999999885e-05, 9.562499999999849e-05, 9.593100000000049e-05, 9.562499999999849e-05, 9.561100000000239e-05, 9.544400000000008e-05, 9.561099999999892e-05, 9.544400000000008e-05, 9.579200000000079e-05, 9.527800000000072e-05, 9.511100000000189e-05, 9.518000000000026e-05, 9.547300000000217e-05, 9.577800000000122e-05, 9.591700000000092e-05, 9.511099999999842e-05, 9.597199999999972e-05, 9.561099999999892e-05, 9.561099999999892e-05, 9.544400000000008e-05, 9.526400000000115e-05, 9.527800000000072e-05, 9.527800000000072e-05, 9.594500000000006e-05, 9.594500000000006e-05, 9.604200000000104e-05, 9.562500000000196e-05, 9.53469999999991e-05, 9.577799999999775e-05, 9.579200000000079e-05, 9.588899999999831e-05, 9.579199999999732e-05, 9.595899999999963e-05, 9.562499999999502e-05]</msg>
<status status="PASS" starttime="20201029 18:19:50.887" endtime="20201029 18:19:50.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.881" endtime="20201029 18:19:50.938"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:50.942" endtime="20201029 18:19:50.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.940" endtime="20201029 18:19:50.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.939" endtime="20201029 18:19:50.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.517" endtime="20201029 18:19:50.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.516" endtime="20201029 18:19:50.963"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.972" endtime="20201029 18:19:50.991"></status>
</kw>
<msg timestamp="20201029 18:19:50.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:50.970" endtime="20201029 18:19:50.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:50.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:50.993" endtime="20201029 18:19:50.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:50.995" endtime="20201029 18:19:50.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.967" endtime="20201029 18:19:50.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.965" endtime="20201029 18:19:50.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.005" endtime="20201029 18:19:51.290"></status>
</kw>
<msg timestamp="20201029 18:19:51.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022598722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022695556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:51.003" endtime="20201029 18:19:51.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022598722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022695556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:51.294" endtime="20201029 18:19:51.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.303" endtime="20201029 18:19:51.304"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.000" endtime="20201029 18:19:51.305"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.998" endtime="20201029 18:19:51.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:51.310" level="INFO">${RESULT} = [{'diff': 9.683399999999703e-05}, {'diff': 9.611199999999889e-05}, {'diff': 9.612500000000246e-05}, {'diff': 9.611099999999942e-05}, {'diff': 9.611100000000289e-05}, {'diff': 9.677799999999875e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:51.306" endtime="20201029 18:19:51.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:51.314" level="INFO">${ACCURACY} = {'diff': [9.683399999999703e-05, 9.611199999999889e-05, 9.612500000000246e-05, 9.611099999999942e-05, 9.611100000000289e-05, 9.677799999999875e-05, 9.680600000000136e-05, 9.611099999999942e-05, 9.6277...</msg>
<status status="PASS" starttime="20201029 18:19:51.311" endtime="20201029 18:19:51.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.319" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201029 18:19:51.318" endtime="20201029 18:19:51.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.322" level="INFO">VALUE: [9.683399999999703e-05, 9.611199999999889e-05, 9.612500000000246e-05, 9.611099999999942e-05, 9.611100000000289e-05, 9.677799999999875e-05, 9.680600000000136e-05, 9.611099999999942e-05, 9.627799999999825e-05, 9.644500000000056e-05, 9.609799999999932e-05, 9.661200000000286e-05, 9.695800000000115e-05, 9.611100000000289e-05, 9.662499999999949e-05, 9.645800000000065e-05, 9.612499999999899e-05, 9.612499999999899e-05, 9.663900000000253e-05, 9.694500000000106e-05, 9.68059999999979e-05, 9.677799999999875e-05, 9.697200000000072e-05, 9.661099999999992e-05, 9.644400000000108e-05, 9.694399999999812e-05, 9.627800000000172e-05, 9.609699999999985e-05, 9.629199999999782e-05, 9.659700000000035e-05, 9.69730000000002e-05, 9.629199999999782e-05, 9.677800000000222e-05, 9.677699999999928e-05, 9.629099999999835e-05, 9.695799999999768e-05, 9.666700000000167e-05, 9.612500000000246e-05, 9.626400000000215e-05, 9.677799999999875e-05, 9.676399999999918e-05, 9.661099999999992e-05, 9.647200000000022e-05, 9.612500000000246e-05, 9.61530000000016e-05, 9.645800000000065e-05, 9.605500000000114e-05, 9.694400000000158e-05, 9.623599999999954e-05, 9.627800000000172e-05]</msg>
<status status="PASS" starttime="20201029 18:19:51.320" endtime="20201029 18:19:51.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.315" endtime="20201029 18:19:51.323"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:51.327" endtime="20201029 18:19:51.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.325" endtime="20201029 18:19:51.347"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.324" endtime="20201029 18:19:51.347"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.964" endtime="20201029 18:19:51.347"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:50.963" endtime="20201029 18:19:51.347"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.356" endtime="20201029 18:19:51.376"></status>
</kw>
<msg timestamp="20201029 18:19:51.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:51.354" endtime="20201029 18:19:51.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:51.378" endtime="20201029 18:19:51.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.381" endtime="20201029 18:19:51.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.352" endtime="20201029 18:19:51.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.350" endtime="20201029 18:19:51.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.390" endtime="20201029 18:19:51.674"></status>
</kw>
<msg timestamp="20201029 18:19:51.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022733472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022830653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:51.388" endtime="20201029 18:19:51.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022733472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022830653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:51.679" endtime="20201029 18:19:51.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.687" endtime="20201029 18:19:51.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.385" endtime="20201029 18:19:51.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.384" endtime="20201029 18:19:51.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:51.693" level="INFO">${RESULT} = [{'diff': 9.718099999999827e-05}, {'diff': 9.780499999999942e-05}, {'diff': 9.745800000000165e-05}, {'diff': 9.744400000000208e-05}, {'diff': 9.729099999999935e-05}, {'diff': 9.794399999999912e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:51.690" endtime="20201029 18:19:51.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:51.698" level="INFO">${ACCURACY} = {'diff': [9.718099999999827e-05, 9.780499999999942e-05, 9.745800000000165e-05, 9.744400000000208e-05, 9.729099999999935e-05, 9.794399999999912e-05, 9.759699999999788e-05, 9.744399999999862e-05, 9.7444...</msg>
<status status="PASS" starttime="20201029 18:19:51.695" endtime="20201029 18:19:51.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.703" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201029 18:19:51.701" endtime="20201029 18:19:51.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.706" level="INFO">VALUE: [9.718099999999827e-05, 9.780499999999942e-05, 9.745800000000165e-05, 9.744400000000208e-05, 9.729099999999935e-05, 9.794399999999912e-05, 9.759699999999788e-05, 9.744399999999862e-05, 9.744400000000208e-05, 9.777799999999975e-05, 9.745900000000113e-05, 9.729099999999935e-05, 9.729199999999882e-05, 9.779099999999985e-05, 9.729099999999935e-05, 9.777700000000028e-05, 9.779199999999932e-05, 9.765299999999963e-05, 9.711100000000042e-05, 9.709700000000085e-05, 9.79730000000012e-05, 9.712499999999999e-05, 9.747199999999775e-05, 9.777799999999975e-05, 9.742999999999905e-05, 9.777700000000028e-05, 9.759699999999788e-05, 9.795800000000215e-05, 9.744399999999862e-05, 9.729199999999882e-05, 9.709700000000085e-05, 9.740299999999938e-05, 9.759800000000082e-05, 9.794399999999912e-05, 9.727699999999978e-05, 9.745800000000165e-05, 9.745800000000165e-05, 9.744399999999862e-05, 9.762500000000049e-05, 9.709700000000085e-05, 9.715199999999966e-05, 9.794499999999859e-05, 9.711100000000042e-05, 9.729099999999935e-05, 9.779099999999985e-05, 9.726300000000021e-05, 9.729100000000282e-05, 9.711100000000042e-05, 9.727800000000272e-05, 9.791699999999945e-05]</msg>
<status status="PASS" starttime="20201029 18:19:51.704" endtime="20201029 18:19:51.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.699" endtime="20201029 18:19:51.708"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:51.711" endtime="20201029 18:19:51.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.710" endtime="20201029 18:19:51.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.709" endtime="20201029 18:19:51.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.348" endtime="20201029 18:19:51.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.348" endtime="20201029 18:19:51.732"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.741" endtime="20201029 18:19:51.760"></status>
</kw>
<msg timestamp="20201029 18:19:51.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:51.739" endtime="20201029 18:19:51.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:51.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:51.762" endtime="20201029 18:19:51.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.764" endtime="20201029 18:19:51.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.737" endtime="20201029 18:19:51.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.735" endtime="20201029 18:19:51.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:51.773" endtime="20201029 18:19:52.059"></status>
</kw>
<msg timestamp="20201029 18:19:52.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022440653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022538792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:51.772" endtime="20201029 18:19:52.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022440653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022538792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:52.063" endtime="20201029 18:19:52.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.071" endtime="20201029 18:19:52.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.769" endtime="20201029 18:19:52.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.768" endtime="20201029 18:19:52.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:52.078" level="INFO">${RESULT} = [{'diff': 9.813899999999709e-05}, {'diff': 9.811200000000089e-05}, {'diff': 9.859699999999888e-05}, {'diff': 9.888900000000131e-05}, {'diff': 9.826400000000068e-05}, {'diff': 9.856899999999974e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:52.074" endtime="20201029 18:19:52.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:52.082" level="INFO">${ACCURACY} = {'diff': [9.813899999999709e-05, 9.811200000000089e-05, 9.859699999999888e-05, 9.888900000000131e-05, 9.826400000000068e-05, 9.856899999999974e-05, 9.811100000000142e-05, 9.862500000000149e-05, 9.8445...</msg>
<status status="PASS" starttime="20201029 18:19:52.078" endtime="20201029 18:19:52.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.087" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201029 18:19:52.086" endtime="20201029 18:19:52.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.089" level="INFO">VALUE: [9.813899999999709e-05, 9.811200000000089e-05, 9.859699999999888e-05, 9.888900000000131e-05, 9.826400000000068e-05, 9.856899999999974e-05, 9.811100000000142e-05, 9.862500000000149e-05, 9.844500000000256e-05, 9.829199999999982e-05, 9.840300000000038e-05, 9.809800000000132e-05, 9.829100000000035e-05, 9.880500000000042e-05, 9.812500000000099e-05, 9.827800000000025e-05, 9.827800000000025e-05, 9.861099999999845e-05, 9.861099999999845e-05, 9.877800000000075e-05, 9.862499999999802e-05, 9.827800000000025e-05, 9.894499999999959e-05, 9.894400000000012e-05, 9.879100000000085e-05, 9.877799999999728e-05, 9.829199999999982e-05, 9.811100000000142e-05, 9.887499999999827e-05, 9.829199999999982e-05, 9.820899999999841e-05, 9.86670000000002e-05, 9.859800000000182e-05, 9.843000000000005e-05, 9.811100000000142e-05, 9.845799999999919e-05, 9.825000000000111e-05, 9.895799999999969e-05, 9.89730000000022e-05, 9.840300000000038e-05, 9.816600000000023e-05, 9.809800000000132e-05, 9.811200000000089e-05, 9.811100000000142e-05, 9.862499999999802e-05, 9.811100000000142e-05, 9.831999999999896e-05, 9.861099999999845e-05, 9.813900000000056e-05, 9.840300000000038e-05]</msg>
<status status="PASS" starttime="20201029 18:19:52.088" endtime="20201029 18:19:52.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.083" endtime="20201029 18:19:52.091"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:52.094" endtime="20201029 18:19:52.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.093" endtime="20201029 18:19:52.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.092" endtime="20201029 18:19:52.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.733" endtime="20201029 18:19:52.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:51.732" endtime="20201029 18:19:52.115"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.124" endtime="20201029 18:19:52.144"></status>
</kw>
<msg timestamp="20201029 18:19:52.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:52.122" endtime="20201029 18:19:52.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:52.145" endtime="20201029 18:19:52.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.148" endtime="20201029 18:19:52.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.120" endtime="20201029 18:19:52.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.118" endtime="20201029 18:19:52.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.157" endtime="20201029 18:19:52.444"></status>
</kw>
<msg timestamp="20201029 18:19:52.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022133167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022232333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:52.155" endtime="20201029 18:19:52.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022133167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022232333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:52.449" endtime="20201029 18:19:52.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.457" endtime="20201029 18:19:52.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.152" endtime="20201029 18:19:52.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.151" endtime="20201029 18:19:52.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:52.463" level="INFO">${RESULT} = [{'diff': 9.916600000000123e-05}, {'diff': 9.977799999999828e-05}, {'diff': 9.911099999999895e-05}, {'diff': 9.995900000000016e-05}, {'diff': 9.929200000000082e-05}, {'diff': 9.92219999999995e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:52.460" endtime="20201029 18:19:52.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:52.467" level="INFO">${ACCURACY} = {'diff': [9.916600000000123e-05, 9.977799999999828e-05, 9.911099999999895e-05, 9.995900000000016e-05, 9.929200000000082e-05, 9.92219999999995e-05, 9.961099999999945e-05, 9.945899999999966e-05, 9.94579...</msg>
<status status="PASS" starttime="20201029 18:19:52.464" endtime="20201029 18:19:52.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.472" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201029 18:19:52.471" endtime="20201029 18:19:52.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.474" level="INFO">VALUE: [9.916600000000123e-05, 9.977799999999828e-05, 9.911099999999895e-05, 9.995900000000016e-05, 9.929200000000082e-05, 9.92219999999995e-05, 9.961099999999945e-05, 9.945899999999966e-05, 9.945799999999672e-05, 9.943000000000105e-05, 9.927700000000178e-05, 9.911099999999895e-05, 9.944400000000062e-05, 9.927800000000125e-05, 9.994500000000059e-05, 9.944500000000009e-05, 9.997200000000026e-05, 9.912499999999852e-05, 9.968100000000077e-05, 9.961099999999945e-05, 9.916699999999723e-05, 9.926399999999821e-05, 9.976399999999871e-05, 9.927800000000125e-05, 9.965300000000163e-05, 9.959699999999988e-05, 9.945899999999966e-05, 9.929200000000082e-05, 9.962499999999902e-05, 9.912499999999852e-05, 9.944400000000062e-05, 9.961099999999945e-05, 9.956900000000074e-05, 9.979200000000132e-05, 9.977800000000175e-05, 9.9722e-05, 9.984700000000013e-05, 9.959799999999935e-05, 9.927800000000125e-05, 9.974999999999914e-05, 9.96670000000012e-05, 9.944400000000062e-05, 9.977799999999828e-05, 9.927800000000125e-05, 9.976400000000218e-05, 9.973600000000304e-05, 9.997299999999973e-05, 9.979199999999785e-05, 9.962500000000249e-05, 9.963900000000206e-05]</msg>
<status status="PASS" starttime="20201029 18:19:52.473" endtime="20201029 18:19:52.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.468" endtime="20201029 18:19:52.475"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:52.479" endtime="20201029 18:19:52.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.478" endtime="20201029 18:19:52.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.476" endtime="20201029 18:19:52.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.116" endtime="20201029 18:19:52.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.115" endtime="20201029 18:19:52.500"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.508" endtime="20201029 18:19:52.529"></status>
</kw>
<msg timestamp="20201029 18:19:52.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:52.507" endtime="20201029 18:19:52.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:52.531" endtime="20201029 18:19:52.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.533" endtime="20201029 18:19:52.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.504" endtime="20201029 18:19:52.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.502" endtime="20201029 18:19:52.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.543" endtime="20201029 18:19:52.828"></status>
</kw>
<msg timestamp="20201029 18:19:52.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022949653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023050667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:52.541" endtime="20201029 18:19:52.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022949653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023050667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:52.832" endtime="20201029 18:19:52.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.840" endtime="20201029 18:19:52.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.538" endtime="20201029 18:19:52.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.537" endtime="20201029 18:19:52.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:52.846" level="INFO">${RESULT} = [{'diff': 0.00010101399999999996}, {'diff': 0.00010077799999999928}, {'diff': 0.00010043000000000205}, {'diff': 0.00010080499999999895}, {'diff': 0.00010029100000000235}, {'diff': 0.000100625000000000...</msg>
<status status="PASS" starttime="20201029 18:19:52.843" endtime="20201029 18:19:52.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:52.850" level="INFO">${ACCURACY} = {'diff': [0.00010101399999999996, 0.00010077799999999928, 0.00010043000000000205, 0.00010080499999999895, 0.00010029100000000235, 0.00010062500000000002, 0.00010094399999999865, 0.00010044400000000162...</msg>
<status status="PASS" starttime="20201029 18:19:52.847" endtime="20201029 18:19:52.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.855" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201029 18:19:52.854" endtime="20201029 18:19:52.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.858" level="INFO">VALUE: [0.00010101399999999996, 0.00010077799999999928, 0.00010043000000000205, 0.00010080499999999895, 0.00010029100000000235, 0.00010062500000000002, 0.00010094399999999865, 0.00010044400000000162, 0.00010093099999999855, 0.00010027800000000225, 0.00010027799999999878, 0.00010011199999999942, 0.00010044400000000162, 0.00010077699999999981, 0.00010011099999999995, 0.00010027800000000225, 0.0001001809999999978, 0.00010063899999999959, 0.00010095900000000116, 0.00010029200000000182, 0.00010027799999999878, 0.00010044499999999762, 0.00010027699999999931, 0.00010045800000000119, 0.00010059700000000088, 0.00010097200000000126, 0.00010087500000000027, 0.00010063899999999959, 0.00010079199999999885, 0.00010093099999999855, 0.00010011099999999995, 0.00010079099999999938, 0.00010092999999999908, 0.00010044400000000162, 0.00010044400000000162, 0.00010042999999999858, 0.00010052699999999956, 0.00010062500000000002, 0.0001004869999999998, 0.00010027800000000225, 0.00010045899999999719, 0.00010011199999999942, 0.00010004099999999863, 0.00010027699999999931, 0.00010029199999999835, 0.00010012499999999952, 0.00010063899999999959, 0.00010095800000000169, 0.00010012499999999952, 0.00010059699999999741]</msg>
<status status="PASS" starttime="20201029 18:19:52.856" endtime="20201029 18:19:52.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.851" endtime="20201029 18:19:52.859"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:52.863" endtime="20201029 18:19:52.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.861" endtime="20201029 18:19:52.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.860" endtime="20201029 18:19:52.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.501" endtime="20201029 18:19:52.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.500" endtime="20201029 18:19:52.884"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.892" endtime="20201029 18:19:52.913"></status>
</kw>
<msg timestamp="20201029 18:19:52.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:52.891" endtime="20201029 18:19:52.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:52.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:52.914" endtime="20201029 18:19:52.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.917" endtime="20201029 18:19:52.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.888" endtime="20201029 18:19:52.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.886" endtime="20201029 18:19:52.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:52.926" endtime="20201029 18:19:53.211"></status>
</kw>
<msg timestamp="20201029 18:19:53.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022604917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022706764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:52.924" endtime="20201029 18:19:53.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022604917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022706764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:53.215" endtime="20201029 18:19:53.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.224" endtime="20201029 18:19:53.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.921" endtime="20201029 18:19:53.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.920" endtime="20201029 18:19:53.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:53.230" level="INFO">${RESULT} = [{'diff': 0.00010184700000000213}, {'diff': 0.00010194499999999912}, {'diff': 0.00010111100000000095}, {'diff': 0.00010145900000000166}, {'diff': 0.00010111100000000095}, {'diff': 0.000101277999999999...</msg>
<status status="PASS" starttime="20201029 18:19:53.227" endtime="20201029 18:19:53.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:53.236" level="INFO">${ACCURACY} = {'diff': [0.00010184700000000213, 0.00010194499999999912, 0.00010111100000000095, 0.00010145900000000166, 0.00010111100000000095, 0.00010127799999999978, 0.00010195800000000269, 0.0001015000000000009,...</msg>
<status status="PASS" starttime="20201029 18:19:53.231" endtime="20201029 18:19:53.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.240" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201029 18:19:53.239" endtime="20201029 18:19:53.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.243" level="INFO">VALUE: [0.00010184700000000213, 0.00010194499999999912, 0.00010111100000000095, 0.00010145900000000166, 0.00010111100000000095, 0.00010127799999999978, 0.00010195800000000269, 0.0001015000000000009, 0.00010111099999999748, 0.00010123600000000108, 0.00010113900000000009, 0.00010113900000000009, 0.0001015000000000009, 0.00010161200000000092, 0.00010111100000000095, 0.00010143099999999905, 0.00010144399999999915, 0.00010177800000000028, 0.00010111099999999748, 0.00010111100000000095, 0.00010177800000000028, 0.00010126400000000021, 0.00010198599999999836, 0.00010179199999999985, 0.00010159800000000135, 0.00010158300000000231, 0.00010161100000000145, 0.00010127700000000031, 0.00010193000000000008, 0.00010191699999999998, 0.00010193100000000302, 0.00010145799999999872, 0.00010197299999999826, 0.00010127799999999978, 0.00010111100000000095, 0.00010127799999999978, 0.00010145799999999872, 0.00010161100000000145, 0.00010194399999999965, 0.00010161100000000145, 0.00010111100000000095, 0.00010109699999999791, 0.00010179199999999985, 0.00010112500000000052, 0.00010180499999999995, 0.00010130499999999945, 0.00010159699999999841, 0.00010111100000000095, 0.00010159699999999841, 0.00010145800000000219]</msg>
<status status="PASS" starttime="20201029 18:19:53.241" endtime="20201029 18:19:53.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.236" endtime="20201029 18:19:53.244"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:53.248" endtime="20201029 18:19:53.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.246" endtime="20201029 18:19:53.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.245" endtime="20201029 18:19:53.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.885" endtime="20201029 18:19:53.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:52.884" endtime="20201029 18:19:53.269"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.278" endtime="20201029 18:19:53.298"></status>
</kw>
<msg timestamp="20201029 18:19:53.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:53.276" endtime="20201029 18:19:53.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:53.300" endtime="20201029 18:19:53.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.302" endtime="20201029 18:19:53.304"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.274" endtime="20201029 18:19:53.305"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.271" endtime="20201029 18:19:53.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.312" endtime="20201029 18:19:53.624"></status>
</kw>
<msg timestamp="20201029 18:19:53.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023088819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023191167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:53.310" endtime="20201029 18:19:53.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023088819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023191167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:53.628" endtime="20201029 18:19:53.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.637" endtime="20201029 18:19:53.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.307" endtime="20201029 18:19:53.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.306" endtime="20201029 18:19:53.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:53.643" level="INFO">${RESULT} = [{'diff': 0.00010234799999999863}, {'diff': 0.00010229100000000088}, {'diff': 0.00010280499999999748}, {'diff': 0.00010294400000000065}, {'diff': 0.00010277700000000181}, {'diff': 0.000102111000000001...</msg>
<status status="PASS" starttime="20201029 18:19:53.640" endtime="20201029 18:19:53.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:53.648" level="INFO">${ACCURACY} = {'diff': [0.00010234799999999863, 0.00010229100000000088, 0.00010280499999999748, 0.00010294400000000065, 0.00010277700000000181, 0.00010211100000000195, 0.00010209699999999891, 0.00010245800000000319...</msg>
<status status="PASS" starttime="20201029 18:19:53.645" endtime="20201029 18:19:53.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.652" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201029 18:19:53.651" endtime="20201029 18:19:53.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.655" level="INFO">VALUE: [0.00010234799999999863, 0.00010229100000000088, 0.00010280499999999748, 0.00010294400000000065, 0.00010277700000000181, 0.00010211100000000195, 0.00010209699999999891, 0.00010245800000000319, 0.00010249999999999843, 0.00010212500000000152, 0.00010209799999999838, 0.00010213800000000162, 0.00010212500000000152, 0.00010279099999999791, 0.0001029299999999976, 0.00010261100000000245, 0.00010277800000000128, 0.00010212500000000152, 0.00010290299999999794, 0.00010245899999999919, 0.00010245900000000266, 0.00010227800000000078, 0.00010261099999999898, 0.00010244400000000015, 0.00010262499999999855, 0.00010295800000000022, 0.00010294400000000065, 0.00010211100000000195, 0.00010261099999999898, 0.00010288900000000184, 0.00010211100000000195, 0.00010216700000000023, 0.00010281899999999705, 0.00010248599999999886, 0.00010261099999999898, 0.00010227800000000078, 0.00010230599999999992, 0.00010213899999999762, 0.00010295899999999969, 0.00010295899999999969, 0.00010243100000000005, 0.00010261199999999845, 0.00010243000000000058, 0.00010261100000000245, 0.00010261100000000245, 0.00010229199999999689, 0.00010294400000000065, 0.00010261100000000245, 0.00010279200000000085, 0.00010244499999999962]</msg>
<status status="PASS" starttime="20201029 18:19:53.653" endtime="20201029 18:19:53.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.649" endtime="20201029 18:19:53.656"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:53.660" endtime="20201029 18:19:53.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.658" endtime="20201029 18:19:53.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.657" endtime="20201029 18:19:53.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.270" endtime="20201029 18:19:53.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.269" endtime="20201029 18:19:53.681"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.690" endtime="20201029 18:19:53.711"></status>
</kw>
<msg timestamp="20201029 18:19:53.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:53.688" endtime="20201029 18:19:53.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:53.713" endtime="20201029 18:19:53.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.715" endtime="20201029 18:19:53.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.686" endtime="20201029 18:19:53.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.683" endtime="20201029 18:19:53.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.725" endtime="20201029 18:19:54.010"></status>
</kw>
<msg timestamp="20201029 18:19:54.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023908444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024011764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:53.723" endtime="20201029 18:19:54.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023908444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024011764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:54.015" endtime="20201029 18:19:54.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.023" endtime="20201029 18:19:54.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.720" endtime="20201029 18:19:54.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.719" endtime="20201029 18:19:54.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:54.030" level="INFO">${RESULT} = [{'diff': 0.0001033200000000005}, {'diff': 0.00010327800000000179}, {'diff': 0.00010327800000000179}, {'diff': 0.00010312499999999905}, {'diff': 0.00010326300000000274}, {'diff': 0.0001032770000000023...</msg>
<status status="PASS" starttime="20201029 18:19:54.026" endtime="20201029 18:19:54.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:54.034" level="INFO">${ACCURACY} = {'diff': [0.0001033200000000005, 0.00010327800000000179, 0.00010327800000000179, 0.00010312499999999905, 0.00010326300000000274, 0.00010327700000000231, 0.00010379200000000185, 0.0001032359999999996, ...</msg>
<status status="PASS" starttime="20201029 18:19:54.031" endtime="20201029 18:19:54.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.038" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201029 18:19:54.037" endtime="20201029 18:19:54.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.042" level="INFO">VALUE: [0.0001033200000000005, 0.00010327800000000179, 0.00010327800000000179, 0.00010312499999999905, 0.00010326300000000274, 0.00010327700000000231, 0.00010379200000000185, 0.0001032359999999996, 0.00010363899999999912, 0.00010395900000000069, 0.00010374999999999968, 0.00010395900000000069, 0.00010345900000000019, 0.00010379100000000238, 0.00010313899999999862, 0.00010344400000000115, 0.00010377799999999882, 0.00010344399999999768, 0.00010309699999999991, 0.00010327800000000179, 0.00010307000000000024, 0.00010395900000000069, 0.00010362499999999955, 0.00010326299999999927, 0.00010312500000000252, 0.00010381900000000152, 0.00010395800000000122, 0.00010345800000000072, 0.00010362499999999955, 0.00010327800000000179, 0.00010343100000000105, 0.00010311199999999895, 0.00010311199999999895, 0.00010311099999999948, 0.00010362500000000302, 0.00010311099999999948, 0.00010327800000000179, 0.00010334700000000016, 0.00010327800000000179, 0.00010393099999999808, 0.00010362499999999955, 0.00010395900000000069, 0.00010345800000000072, 0.00010344400000000115, 0.00010372200000000054, 0.00010345800000000072, 0.00010361099999999998, 0.00010311099999999948, 0.00010341700000000148, 0.00010394500000000112]</msg>
<status status="PASS" starttime="20201029 18:19:54.039" endtime="20201029 18:19:54.043"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.035" endtime="20201029 18:19:54.043"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:54.047" endtime="20201029 18:19:54.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.045" endtime="20201029 18:19:54.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.044" endtime="20201029 18:19:54.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.682" endtime="20201029 18:19:54.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.681" endtime="20201029 18:19:54.068"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.077" endtime="20201029 18:19:54.097"></status>
</kw>
<msg timestamp="20201029 18:19:54.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:54.075" endtime="20201029 18:19:54.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:54.099" endtime="20201029 18:19:54.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.101" endtime="20201029 18:19:54.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.072" endtime="20201029 18:19:54.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.070" endtime="20201029 18:19:54.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.111" endtime="20201029 18:19:54.396"></status>
</kw>
<msg timestamp="20201029 18:19:54.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022730667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022834903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:54.109" endtime="20201029 18:19:54.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022730667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022834903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:54.401" endtime="20201029 18:19:54.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.409" endtime="20201029 18:19:54.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.107" endtime="20201029 18:19:54.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.105" endtime="20201029 18:19:54.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:54.416" level="INFO">${RESULT} = [{'diff': 0.0001042360000000006}, {'diff': 0.00010480599999999896}, {'diff': 0.00010462500000000055}, {'diff': 0.00010494499999999865}, {'diff': 0.00010444499999999815}, {'diff': 0.0001043059999999984...</msg>
<status status="PASS" starttime="20201029 18:19:54.412" endtime="20201029 18:19:54.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:54.423" level="INFO">${ACCURACY} = {'diff': [0.0001042360000000006, 0.00010480599999999896, 0.00010462500000000055, 0.00010494499999999865, 0.00010444499999999815, 0.00010430599999999846, 0.00010459800000000088, 0.00010494499999999865,...</msg>
<status status="PASS" starttime="20201029 18:19:54.417" endtime="20201029 18:19:54.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.427" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201029 18:19:54.426" endtime="20201029 18:19:54.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.430" level="INFO">VALUE: [0.0001042360000000006, 0.00010480599999999896, 0.00010462500000000055, 0.00010494499999999865, 0.00010444499999999815, 0.00010430599999999846, 0.00010459800000000088, 0.00010494499999999865, 0.00010476300000000077, 0.00010429099999999941, 0.00010477799999999982, 0.00010425000000000018, 0.00010477799999999982, 0.00010447300000000076, 0.00010409700000000091, 0.00010461100000000098, 0.00010427800000000279, 0.00010413899999999962, 0.00010494399999999918, 0.00010442999999999911, 0.00010495799999999875, 0.00010462499999999708, 0.00010412500000000005, 0.00010418000000000233, 0.00010447299999999729, 0.00010477799999999982, 0.00010404100000000263, 0.00010498600000000136, 0.00010411100000000048, 0.00010405499999999873, 0.00010495799999999875, 0.00010444399999999868, 0.00010444500000000162, 0.00010426399999999975, 0.00010458399999999785, 0.00010462500000000055, 0.00010494399999999918, 0.00010444399999999868, 0.00010438899999999987, 0.0001046949999999984, 0.00010472200000000154, 0.00010491699999999951, 0.00010462500000000055, 0.00010443099999999858, 0.00010450000000000043, 0.00010426399999999975, 0.00010427699999999984, 0.00010445800000000172, 0.00010461100000000098, 0.00010445800000000172]</msg>
<status status="PASS" starttime="20201029 18:19:54.429" endtime="20201029 18:19:54.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.424" endtime="20201029 18:19:54.431"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:54.435" endtime="20201029 18:19:54.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.434" endtime="20201029 18:19:54.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.432" endtime="20201029 18:19:54.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.069" endtime="20201029 18:19:54.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.068" endtime="20201029 18:19:54.456"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.465" endtime="20201029 18:19:54.485"></status>
</kw>
<msg timestamp="20201029 18:19:54.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:54.463" endtime="20201029 18:19:54.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:54.486" endtime="20201029 18:19:54.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.489" endtime="20201029 18:19:54.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.461" endtime="20201029 18:19:54.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.458" endtime="20201029 18:19:54.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.498" endtime="20201029 18:19:54.786"></status>
</kw>
<msg timestamp="20201029 18:19:54.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022698431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022804417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:54.497" endtime="20201029 18:19:54.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022698431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022804417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:54.790" endtime="20201029 18:19:54.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.798" endtime="20201029 18:19:54.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.494" endtime="20201029 18:19:54.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.492" endtime="20201029 18:19:54.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:54.806" level="INFO">${RESULT} = [{'diff': 0.00010598599999999889}, {'diff': 0.00010527699999999737}, {'diff': 0.00010577700000000134}, {'diff': 0.00010576399999999778}, {'diff': 0.00010545799999999925}, {'diff': 0.000105264000000000...</msg>
<status status="PASS" starttime="20201029 18:19:54.802" endtime="20201029 18:19:54.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:54.810" level="INFO">${ACCURACY} = {'diff': [0.00010598599999999889, 0.00010527699999999737, 0.00010577700000000134, 0.00010576399999999778, 0.00010545799999999925, 0.00010526400000000075, 0.0001052360000000016, 0.00010595899999999922,...</msg>
<status status="PASS" starttime="20201029 18:19:54.807" endtime="20201029 18:19:54.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.815" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201029 18:19:54.814" endtime="20201029 18:19:54.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.817" level="INFO">VALUE: [0.00010598599999999889, 0.00010527699999999737, 0.00010577700000000134, 0.00010576399999999778, 0.00010545799999999925, 0.00010526400000000075, 0.0001052360000000016, 0.00010595899999999922, 0.00010513900000000062, 0.00010527800000000032, 0.00010579100000000091, 0.00010579100000000091, 0.00010579100000000091, 0.00010526400000000075, 0.00010577800000000082, 0.00010545800000000272, 0.00010563899999999765, 0.00010563899999999765, 0.00010529199999999989, 0.00010544499999999915, 0.00010595799999999975, 0.00010530499999999998, 0.00010545799999999925, 0.00010543000000000011, 0.00010547200000000229, 0.00010511100000000148, 0.00010569399999999993, 0.00010544499999999915, 0.00010533299999999912, 0.00010594499999999965, 0.00010543000000000011, 0.00010558299999999937, 0.00010523599999999814, 0.00010526400000000075, 0.00010557000000000274, 0.00010562500000000155, 0.00010579200000000039, 0.00010530599999999946, 0.00010595899999999922, 0.00010562500000000155, 0.00010512500000000105, 0.00010565300000000069, 0.0001057079999999995, 0.00010594400000000018, 0.00010594400000000018, 0.00010576400000000125, 0.00010594499999999965, 0.00010511100000000148, 0.00010508399999999835, 0.0001052499999999977]</msg>
<status status="PASS" starttime="20201029 18:19:54.816" endtime="20201029 18:19:54.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.811" endtime="20201029 18:19:54.819"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:54.822" endtime="20201029 18:19:54.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.821" endtime="20201029 18:19:54.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.820" endtime="20201029 18:19:54.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.457" endtime="20201029 18:19:54.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.456" endtime="20201029 18:19:54.843"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.852" endtime="20201029 18:19:54.873"></status>
</kw>
<msg timestamp="20201029 18:19:54.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:54.850" endtime="20201029 18:19:54.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:54.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:54.875" endtime="20201029 18:19:54.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.877" endtime="20201029 18:19:54.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.848" endtime="20201029 18:19:54.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.846" endtime="20201029 18:19:54.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:54.886" endtime="20201029 18:19:55.186"></status>
</kw>
<msg timestamp="20201029 18:19:55.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023589097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023695625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:54.885" endtime="20201029 18:19:55.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023589097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023695625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:55.190" endtime="20201029 18:19:55.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.198" endtime="20201029 18:19:55.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.882" endtime="20201029 18:19:55.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.880" endtime="20201029 18:19:55.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:55.205" level="INFO">${RESULT} = [{'diff': 0.00010652800000000157}, {'diff': 0.00010629200000000089}, {'diff': 0.00010611099999999901}, {'diff': 0.00010644500000000015}, {'diff': 0.00010662499999999908}, {'diff': 0.000106971999999996...</msg>
<status status="PASS" starttime="20201029 18:19:55.202" endtime="20201029 18:19:55.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:55.209" level="INFO">${ACCURACY} = {'diff': [0.00010652800000000157, 0.00010629200000000089, 0.00010611099999999901, 0.00010644500000000015, 0.00010662499999999908, 0.00010697199999999685, 0.00010693100000000108, 0.00010695799999999728...</msg>
<status status="PASS" starttime="20201029 18:19:55.206" endtime="20201029 18:19:55.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.213" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201029 18:19:55.212" endtime="20201029 18:19:55.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.216" level="INFO">VALUE: [0.00010652800000000157, 0.00010629200000000089, 0.00010611099999999901, 0.00010644500000000015, 0.00010662499999999908, 0.00010697199999999685, 0.00010693100000000108, 0.00010695799999999728, 0.00010644400000000068, 0.00010661099999999951, 0.00010627800000000132, 0.00010679199999999792, 0.00010627800000000132, 0.00010644500000000015, 0.00010694500000000065, 0.00010609799999999892, 0.00010677699999999887, 0.0001067499999999992, 0.00010627799999999785, 0.00010676399999999878, 0.00010695800000000075, 0.00010695900000000022, 0.00010644500000000015, 0.00010661099999999951, 0.00010645800000000025, 0.00010694400000000118, 0.00010611099999999901, 0.00010682000000000053, 0.00010627800000000132, 0.00010695800000000075, 0.00010663899999999865, 0.00010647300000000276, 0.00010644500000000015, 0.00010662499999999908, 0.00010670899999999997, 0.00010645800000000025, 0.00010644400000000068, 0.00010626400000000175, 0.00010659699999999994, 0.00010661099999999951, 0.00010638900000000187, 0.00010645899999999972, 0.00010611199999999849, 0.00010644500000000015, 0.00010633300000000012, 0.00010661100000000298, 0.00010677799999999835, 0.00010625000000000218, 0.00010662499999999908, 0.00010679199999999792]</msg>
<status status="PASS" starttime="20201029 18:19:55.214" endtime="20201029 18:19:55.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.210" endtime="20201029 18:19:55.218"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:55.222" endtime="20201029 18:19:55.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.220" endtime="20201029 18:19:55.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.219" endtime="20201029 18:19:55.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.844" endtime="20201029 18:19:55.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:54.844" endtime="20201029 18:19:55.242"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.251" endtime="20201029 18:19:55.271"></status>
</kw>
<msg timestamp="20201029 18:19:55.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:55.249" endtime="20201029 18:19:55.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:55.273" endtime="20201029 18:19:55.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.275" endtime="20201029 18:19:55.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.247" endtime="20201029 18:19:55.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.245" endtime="20201029 18:19:55.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.284" endtime="20201029 18:19:55.572"></status>
</kw>
<msg timestamp="20201029 18:19:55.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022506028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022614056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:55.283" endtime="20201029 18:19:55.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022506028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022614056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:55.576" endtime="20201029 18:19:55.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.584" endtime="20201029 18:19:55.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.280" endtime="20201029 18:19:55.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.278" endtime="20201029 18:19:55.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:55.591" level="INFO">${RESULT} = [{'diff': 0.0001080279999999996}, {'diff': 0.00010737499999999983}, {'diff': 0.00010761199999999999}, {'diff': 0.00010761100000000051}, {'diff': 0.00010779099999999944}, {'diff': 0.0001076110000000005...</msg>
<status status="PASS" starttime="20201029 18:19:55.587" endtime="20201029 18:19:55.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:55.595" level="INFO">${ACCURACY} = {'diff': [0.0001080279999999996, 0.00010737499999999983, 0.00010761199999999999, 0.00010761100000000051, 0.00010779099999999944, 0.00010761100000000051, 0.00010776399999999978, 0.00010713899999999915,...</msg>
<status status="PASS" starttime="20201029 18:19:55.591" endtime="20201029 18:19:55.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.600" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201029 18:19:55.599" endtime="20201029 18:19:55.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.602" level="INFO">VALUE: [0.0001080279999999996, 0.00010737499999999983, 0.00010761199999999999, 0.00010761100000000051, 0.00010779099999999944, 0.00010761100000000051, 0.00010776399999999978, 0.00010713899999999915, 0.00010779199999999892, 0.00010731900000000155, 0.00010745900000000072, 0.00010711199999999949, 0.00010744400000000168, 0.00010727699999999937, 0.00010708300000000087, 0.00010795799999999828, 0.00010780599999999849, 0.00010761100000000051, 0.00010747300000000029, 0.00010715199999999925, 0.00010729100000000241, 0.00010801400000000003, 0.00010745799999999778, 0.00010795800000000175, 0.00010756899999999833, 0.00010776399999999978, 0.00010729199999999842, 0.00010711100000000001, 0.00010726400000000275, 0.00010793100000000208, 0.00010776399999999978, 0.00010761100000000051, 0.00010795799999999828, 0.00010793000000000261, 0.00010777799999999935, 0.00010745800000000125, 0.00010727799999999885, 0.00010761100000000051, 0.00010745799999999778, 0.00010784699999999772, 0.00010727699999999937, 0.00010779099999999944, 0.00010713900000000262, 0.00010744400000000168, 0.00010712499999999958, 0.00010709700000000044, 0.00010761100000000051, 0.00010727800000000232, 0.00010744399999999821, 0.00010712500000000305]</msg>
<status status="PASS" starttime="20201029 18:19:55.601" endtime="20201029 18:19:55.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.596" endtime="20201029 18:19:55.609"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:55.612" endtime="20201029 18:19:55.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.611" endtime="20201029 18:19:55.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.610" endtime="20201029 18:19:55.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.243" endtime="20201029 18:19:55.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.243" endtime="20201029 18:19:55.633"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.642" endtime="20201029 18:19:55.662"></status>
</kw>
<msg timestamp="20201029 18:19:55.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:55.640" endtime="20201029 18:19:55.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:55.664" endtime="20201029 18:19:55.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.666" endtime="20201029 18:19:55.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.637" endtime="20201029 18:19:55.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.635" endtime="20201029 18:19:55.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.675" endtime="20201029 18:19:55.975"></status>
</kw>
<msg timestamp="20201029 18:19:55.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0224145, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022523181, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:19:55.673" endtime="20201029 18:19:55.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0224145, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022523181, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:19:55.979" endtime="20201029 18:19:55.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.987" endtime="20201029 18:19:55.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.671" endtime="20201029 18:19:55.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.669" endtime="20201029 18:19:55.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:55.994" level="INFO">${RESULT} = [{'diff': 0.00010868099999999936}, {'diff': 0.00010837500000000083}, {'diff': 0.00010830499999999951}, {'diff': 0.00010866699999999979}, {'diff': 0.00010861100000000151}, {'diff': 0.000108291999999999...</msg>
<status status="PASS" starttime="20201029 18:19:55.990" endtime="20201029 18:19:55.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:55.997" level="INFO">${ACCURACY} = {'diff': [0.00010868099999999936, 0.00010837500000000083, 0.00010830499999999951, 0.00010866699999999979, 0.00010861100000000151, 0.00010829199999999942, 0.00010894399999999971, 0.00010859699999999847...</msg>
<status status="PASS" starttime="20201029 18:19:55.995" endtime="20201029 18:19:55.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.002" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201029 18:19:56.001" endtime="20201029 18:19:56.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.004" level="INFO">VALUE: [0.00010868099999999936, 0.00010837500000000083, 0.00010830499999999951, 0.00010866699999999979, 0.00010861100000000151, 0.00010829199999999942, 0.00010894399999999971, 0.00010859699999999847, 0.00010844500000000215, 0.00010880500000000001, 0.00010877800000000035, 0.00010881899999999958, 0.00010879099999999697, 0.00010893000000000014, 0.00010877800000000035, 0.00010877800000000035, 0.00010877800000000035, 0.00010827799999999985, 0.00010827799999999985, 0.00010859800000000142, 0.00010894399999999971, 0.00010886099999999829, 0.0001085829999999989, 0.00010844399999999921, 0.00010894399999999971, 0.00010895900000000222, 0.00010808399999999788, 0.00010834699999999822, 0.00010877800000000035, 0.00010845799999999878, 0.00010826400000000028, 0.00010811099999999754, 0.00010845799999999878, 0.00010867999999999989, 0.00010895799999999928, 0.00010847299999999782, 0.00010876400000000078, 0.00010895899999999875, 0.0001082500000000007, 0.00010862500000000108, 0.00010812500000000058, 0.00010829199999999942, 0.00010894399999999971, 0.00010881999999999906, 0.00010879199999999992, 0.00010845900000000172, 0.00010893099999999961, 0.00010842999999999964, 0.00010827700000000037, 0.00010826400000000028]</msg>
<status status="PASS" starttime="20201029 18:19:56.003" endtime="20201029 18:19:56.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.998" endtime="20201029 18:19:56.006"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:56.009" endtime="20201029 18:19:56.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.008" endtime="20201029 18:19:56.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.007" endtime="20201029 18:19:56.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.634" endtime="20201029 18:19:56.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.633" endtime="20201029 18:19:56.030"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.039" endtime="20201029 18:19:56.059"></status>
</kw>
<msg timestamp="20201029 18:19:56.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:56.037" endtime="20201029 18:19:56.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:56.060" endtime="20201029 18:19:56.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.063" endtime="20201029 18:19:56.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.034" endtime="20201029 18:19:56.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.032" endtime="20201029 18:19:56.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.071" endtime="20201029 18:19:56.357"></status>
</kw>
<msg timestamp="20201029 18:19:56.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022880375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022989556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:56.070" endtime="20201029 18:19:56.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022880375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022989556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:56.361" endtime="20201029 18:19:56.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.369" endtime="20201029 18:19:56.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.067" endtime="20201029 18:19:56.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.066" endtime="20201029 18:19:56.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:56.375" level="INFO">${RESULT} = [{'diff': 0.00010918099999999986}, {'diff': 0.0001090829999999994}, {'diff': 0.00010994400000000071}, {'diff': 0.00010916700000000029}, {'diff': 0.00010931999999999956}, {'diff': 0.0001094579999999997...</msg>
<status status="PASS" starttime="20201029 18:19:56.372" endtime="20201029 18:19:56.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:56.379" level="INFO">${ACCURACY} = {'diff': [0.00010918099999999986, 0.0001090829999999994, 0.00010994400000000071, 0.00010916700000000029, 0.00010931999999999956, 0.00010945799999999978, 0.00010994500000000018, 0.00010945899999999925,...</msg>
<status status="PASS" starttime="20201029 18:19:56.376" endtime="20201029 18:19:56.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.384" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201029 18:19:56.382" endtime="20201029 18:19:56.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.386" level="INFO">VALUE: [0.00010918099999999986, 0.0001090829999999994, 0.00010994400000000071, 0.00010916700000000029, 0.00010931999999999956, 0.00010945799999999978, 0.00010994500000000018, 0.00010945899999999925, 0.00010913899999999768, 0.00010945899999999925, 0.00010911100000000201, 0.00010930500000000051, 0.00010927800000000085, 0.00010929200000000042, 0.00010916700000000029, 0.00010948600000000239, 0.00010962499999999861, 0.00010962499999999861, 0.00010912500000000158, 0.00010994399999999724, 0.00010981899999999711, 0.00010962500000000208, 0.00010913900000000115, 0.00010995800000000028, 0.00010994500000000018, 0.00010979200000000092, 0.00010991700000000104, 0.00010936100000000226, 0.00010995800000000028, 0.0001092219999999991, 0.00010961100000000251, 0.00010962500000000208, 0.00010959699999999947, 0.00010970800000000003, 0.00010915300000000072, 0.00010962500000000208, 0.00010963800000000218, 0.00010944499999999968, 0.00010962500000000208, 0.0001092769999999979, 0.00010943000000000064, 0.00010927800000000085, 0.00010944399999999674, 0.00010982000000000006, 0.00010933299999999965, 0.0001090699999999993, 0.00010943100000000011, 0.00010994400000000071, 0.00010926400000000128, 0.00010961099999999904]</msg>
<status status="PASS" starttime="20201029 18:19:56.385" endtime="20201029 18:19:56.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.380" endtime="20201029 18:19:56.388"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:56.392" endtime="20201029 18:19:56.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.390" endtime="20201029 18:19:56.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.389" endtime="20201029 18:19:56.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.031" endtime="20201029 18:19:56.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.030" endtime="20201029 18:19:56.412"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.421" endtime="20201029 18:19:56.442"></status>
</kw>
<msg timestamp="20201029 18:19:56.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:56.419" endtime="20201029 18:19:56.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:56.444" endtime="20201029 18:19:56.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.446" endtime="20201029 18:19:56.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.417" endtime="20201029 18:19:56.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.415" endtime="20201029 18:19:56.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.455" endtime="20201029 18:19:56.739"></status>
</kw>
<msg timestamp="20201029 18:19:56.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022273069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022384069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:56.454" endtime="20201029 18:19:56.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022273069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022384069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:56.744" endtime="20201029 18:19:56.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.751" endtime="20201029 18:19:56.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.451" endtime="20201029 18:19:56.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.449" endtime="20201029 18:19:56.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:56.758" level="INFO">${RESULT} = [{'diff': 0.00011099999999999999}, {'diff': 0.000110209}, {'diff': 0.00011019500000000043}, {'diff': 0.00011045800000000078}, {'diff': 0.00011097200000000085}, {'diff': 0.00011095799999999781}, {'diff...</msg>
<status status="PASS" starttime="20201029 18:19:56.755" endtime="20201029 18:19:56.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:56.763" level="INFO">${ACCURACY} = {'diff': [0.00011099999999999999, 0.000110209, 0.00011019500000000043, 0.00011045800000000078, 0.00011097200000000085, 0.00011095799999999781, 0.00011027800000000185, 0.00011066600000000232, 0.0001104...</msg>
<status status="PASS" starttime="20201029 18:19:56.759" endtime="20201029 18:19:56.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.767" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201029 18:19:56.766" endtime="20201029 18:19:56.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.770" level="INFO">VALUE: [0.00011099999999999999, 0.000110209, 0.00011019500000000043, 0.00011045800000000078, 0.00011097200000000085, 0.00011095799999999781, 0.00011027800000000185, 0.00011066600000000232, 0.00011045899999999678, 0.00011094500000000118, 0.00011011099999999954, 0.00011044400000000121, 0.00011044399999999774, 0.00011093000000000214, 0.00011045800000000078, 0.00011009699999999997, 0.00011074999999999974, 0.00011061100000000004, 0.00011038799999999946, 0.00011027700000000237, 0.00011044400000000121, 0.00011094400000000171, 0.00011044399999999774, 0.00011044500000000068, 0.00011041700000000154, 0.00011076399999999931, 0.00011027799999999838, 0.00011027800000000185, 0.00011044400000000121, 0.00011081899999999811, 0.00011013899999999868, 0.00011045800000000078, 0.00011011099999999954, 0.00011061100000000004, 0.00011027799999999838, 0.00011079199999999845, 0.00011094499999999771, 0.00011011099999999954, 0.00011086100000000029, 0.00011095800000000128, 0.00011048599999999992, 0.00011059700000000047, 0.00011088899999999943, 0.00011044500000000068, 0.00011059700000000047, 0.00011093099999999814, 0.00011094400000000171, 0.00011044400000000121, 0.000110596999999997, 0.00011011099999999954]</msg>
<status status="PASS" starttime="20201029 18:19:56.768" endtime="20201029 18:19:56.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.764" endtime="20201029 18:19:56.771"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:56.775" endtime="20201029 18:19:56.795"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.774" endtime="20201029 18:19:56.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.772" endtime="20201029 18:19:56.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.413" endtime="20201029 18:19:56.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.413" endtime="20201029 18:19:56.796"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.805" endtime="20201029 18:19:56.825"></status>
</kw>
<msg timestamp="20201029 18:19:56.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:56.803" endtime="20201029 18:19:56.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:56.826" endtime="20201029 18:19:56.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.829" endtime="20201029 18:19:56.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.801" endtime="20201029 18:19:56.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.799" endtime="20201029 18:19:56.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.838" endtime="20201029 18:19:57.125"></status>
</kw>
<msg timestamp="20201029 18:19:57.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022207764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022319111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:56.836" endtime="20201029 18:19:57.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022207764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022319111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:57.129" endtime="20201029 18:19:57.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.137" endtime="20201029 18:19:57.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.834" endtime="20201029 18:19:57.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.832" endtime="20201029 18:19:57.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:57.143" level="INFO">${RESULT} = [{'diff': 0.00011134699999999775}, {'diff': 0.00011162499999999714}, {'diff': 0.00011130599999999852}, {'diff': 0.00011197299999999785}, {'diff': 0.00011105599999999827}, {'diff': 0.000111958999999998...</msg>
<status status="PASS" starttime="20201029 18:19:57.140" endtime="20201029 18:19:57.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:57.147" level="INFO">${ACCURACY} = {'diff': [0.00011134699999999775, 0.00011162499999999714, 0.00011130599999999852, 0.00011197299999999785, 0.00011105599999999827, 0.00011195899999999828, 0.00011162500000000061, 0.00011111100000000054...</msg>
<status status="PASS" starttime="20201029 18:19:57.144" endtime="20201029 18:19:57.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.152" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201029 18:19:57.151" endtime="20201029 18:19:57.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.154" level="INFO">VALUE: [0.00011134699999999775, 0.00011162499999999714, 0.00011130599999999852, 0.00011197299999999785, 0.00011105599999999827, 0.00011195899999999828, 0.00011162500000000061, 0.00011111100000000054, 0.00011111100000000054, 0.00011197200000000185, 0.00011148599999999745, 0.0001110419999999987, 0.00011112500000000011, 0.00011177799999999988, 0.00011177799999999988, 0.00011134700000000122, 0.00011197199999999838, 0.00011161100000000104, 0.00011163900000000018, 0.00011144400000000221, 0.00011138899999999993, 0.00011194500000000218, 0.00011112500000000011, 0.0001114159999999996, 0.00011112500000000011, 0.0001112769999999999, 0.00011192999999999967, 0.00011143000000000264, 0.00011143099999999864, 0.00011111100000000054, 0.00011143100000000211, 0.00011177799999999988, 0.0001119160000000001, 0.0001112769999999999, 0.00011161099999999757, 0.00011144400000000221, 0.00011111099999999707, 0.00011113899999999968, 0.00011195900000000175, 0.00011143099999999864, 0.00011113899999999968, 0.00011144500000000168, 0.00011179099999999997, 0.00011147200000000135, 0.00011145800000000178, 0.00011144399999999874, 0.00011112499999999664, 0.00011112500000000011, 0.00011129199999999895, 0.00011111100000000054]</msg>
<status status="PASS" starttime="20201029 18:19:57.153" endtime="20201029 18:19:57.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.148" endtime="20201029 18:19:57.155"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:57.159" endtime="20201029 18:19:57.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.157" endtime="20201029 18:19:57.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.156" endtime="20201029 18:19:57.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.797" endtime="20201029 18:19:57.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.797" endtime="20201029 18:19:57.180"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.188" endtime="20201029 18:19:57.209"></status>
</kw>
<msg timestamp="20201029 18:19:57.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:57.187" endtime="20201029 18:19:57.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:57.211" endtime="20201029 18:19:57.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.213" endtime="20201029 18:19:57.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.184" endtime="20201029 18:19:57.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.182" endtime="20201029 18:19:57.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.222" endtime="20201029 18:19:57.507"></status>
</kw>
<msg timestamp="20201029 18:19:57.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023186875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023299375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:57.221" endtime="20201029 18:19:57.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023186875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023299375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:57.511" endtime="20201029 18:19:57.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.519" endtime="20201029 18:19:57.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.218" endtime="20201029 18:19:57.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.217" endtime="20201029 18:19:57.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:57.526" level="INFO">${RESULT} = [{'diff': 0.00011250000000000149}, {'diff': 0.00011261099999999857}, {'diff': 0.00011280600000000002}, {'diff': 0.00011211100000000154}, {'diff': 0.00011295799999999981}, {'diff': 0.000112806000000000...</msg>
<status status="PASS" starttime="20201029 18:19:57.523" endtime="20201029 18:19:57.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:57.530" level="INFO">${ACCURACY} = {'diff': [0.00011250000000000149, 0.00011261099999999857, 0.00011280600000000002, 0.00011211100000000154, 0.00011295799999999981, 0.00011280600000000002, 0.0001127909999999975, 0.00011279100000000097,...</msg>
<status status="PASS" starttime="20201029 18:19:57.527" endtime="20201029 18:19:57.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.534" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201029 18:19:57.533" endtime="20201029 18:19:57.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.537" level="INFO">VALUE: [0.00011250000000000149, 0.00011261099999999857, 0.00011280600000000002, 0.00011211100000000154, 0.00011295799999999981, 0.00011280600000000002, 0.0001127909999999975, 0.00011279100000000097, 0.00011295799999999981, 0.00011208299999999893, 0.00011276399999999784, 0.00011212500000000111, 0.00011280600000000002, 0.00011280500000000054, 0.00011245799999999931, 0.00011211099999999807, 0.00011297199999999938, 0.00011295799999999981, 0.00011297200000000285, 0.00011211100000000154, 0.00011295899999999928, 0.00011259799999999848, 0.00011263899999999771, 0.00011258299999999943, 0.00011229100000000047, 0.0001127359999999987, 0.00011230599999999952, 0.00011244399999999974, 0.00011294499999999971, 0.00011211100000000154, 0.00011244500000000268, 0.00011293100000000014, 0.00011294400000000024, 0.00011262499999999814, 0.00011294400000000024, 0.00011277800000000088, 0.00011227800000000038, 0.00011277799999999741, 0.0001127359999999987, 0.00011244499999999921, 0.00011227799999999691, 0.00011262499999999814, 0.00011277799999999741, 0.00011226400000000081, 0.00011227800000000038, 0.00011277800000000088, 0.00011230600000000299, 0.00011224999999999777, 0.00011276400000000131, 0.00011247200000000235]</msg>
<status status="PASS" starttime="20201029 18:19:57.535" endtime="20201029 18:19:57.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.531" endtime="20201029 18:19:57.539"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:57.542" endtime="20201029 18:19:57.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.541" endtime="20201029 18:19:57.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.540" endtime="20201029 18:19:57.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.180" endtime="20201029 18:19:57.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.180" endtime="20201029 18:19:57.563"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.572" endtime="20201029 18:19:57.592"></status>
</kw>
<msg timestamp="20201029 18:19:57.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:57.570" endtime="20201029 18:19:57.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:57.593" endtime="20201029 18:19:57.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.596" endtime="20201029 18:19:57.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.568" endtime="20201029 18:19:57.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.566" endtime="20201029 18:19:57.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.605" endtime="20201029 18:19:57.891"></status>
</kw>
<msg timestamp="20201029 18:19:57.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022013931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022127931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:57.603" endtime="20201029 18:19:57.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022013931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022127931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:57.896" endtime="20201029 18:19:57.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.904" endtime="20201029 18:19:57.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.601" endtime="20201029 18:19:57.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.599" endtime="20201029 18:19:57.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:57.911" level="INFO">${RESULT} = [{'diff': 0.00011399999999999952}, {'diff': 0.0001135420000000012}, {'diff': 0.00011397199999999691}, {'diff': 0.00011327799999999791}, {'diff': 0.00011377799999999841}, {'diff': 0.0001137780000000018...</msg>
<status status="PASS" starttime="20201029 18:19:57.907" endtime="20201029 18:19:57.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:57.918" level="INFO">${ACCURACY} = {'diff': [0.00011399999999999952, 0.0001135420000000012, 0.00011397199999999691, 0.00011327799999999791, 0.00011377799999999841, 0.00011377800000000188, 0.00011327800000000138, 0.00011398599999999995,...</msg>
<status status="PASS" starttime="20201029 18:19:57.912" endtime="20201029 18:19:57.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.923" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201029 18:19:57.922" endtime="20201029 18:19:57.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.925" level="INFO">VALUE: [0.00011399999999999952, 0.0001135420000000012, 0.00011397199999999691, 0.00011327799999999791, 0.00011377799999999841, 0.00011377800000000188, 0.00011327800000000138, 0.00011398599999999995, 0.00011361099999999957, 0.00011379199999999798, 0.00011329100000000147, 0.00011345800000000031, 0.00011377799999999841, 0.00011379199999999798, 0.00011393099999999767, 0.00011379199999999798, 0.00011362500000000261, 0.00011345899999999978, 0.00011362499999999914, 0.00011347199999999988, 0.00011393000000000167, 0.00011313899999999821, 0.00011395800000000081, 0.00011395800000000081, 0.00011333400000000313, 0.00011344500000000021, 0.00011345899999999978, 0.00011380500000000154, 0.00011365300000000175, 0.00011372200000000013, 0.00011358300000000043, 0.00011344400000000074, 0.00011395800000000081, 0.00011312499999999864, 0.00011379200000000145, 0.00011344500000000021, 0.00011312499999999864, 0.00011315300000000125, 0.00011312499999999864, 0.00011361099999999957, 0.00011361099999999957, 0.000113597, 0.00011344500000000021, 0.00011369500000000046, 0.00011347199999999988, 0.00011345800000000031, 0.00011377699999999893, 0.000113290999999998, 0.00011362499999999914, 0.00011327799999999791]</msg>
<status status="PASS" starttime="20201029 18:19:57.924" endtime="20201029 18:19:57.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.919" endtime="20201029 18:19:57.927"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:57.931" endtime="20201029 18:19:57.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.929" endtime="20201029 18:19:57.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.928" endtime="20201029 18:19:57.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.564" endtime="20201029 18:19:57.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.563" endtime="20201029 18:19:57.951"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.960" endtime="20201029 18:19:57.981"></status>
</kw>
<msg timestamp="20201029 18:19:57.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:57.959" endtime="20201029 18:19:57.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:57.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:57.982" endtime="20201029 18:19:57.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.985" endtime="20201029 18:19:57.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.956" endtime="20201029 18:19:57.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.954" endtime="20201029 18:19:57.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:57.995" endtime="20201029 18:19:58.305"></status>
</kw>
<msg timestamp="20201029 18:19:58.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02265025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022765097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:57.993" endtime="20201029 18:19:58.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02265025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022765097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:58.309" endtime="20201029 18:19:58.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.318" endtime="20201029 18:19:58.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.990" endtime="20201029 18:19:58.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.989" endtime="20201029 18:19:58.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:58.324" level="INFO">${RESULT} = [{'diff': 0.00011484700000000125}, {'diff': 0.00011447199999999741}, {'diff': 0.00011476399999999984}, {'diff': 0.00011412500000000311}, {'diff': 0.00011429200000000195}, {'diff': 0.000114651999999999...</msg>
<status status="PASS" starttime="20201029 18:19:58.321" endtime="20201029 18:19:58.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:58.328" level="INFO">${ACCURACY} = {'diff': [0.00011484700000000125, 0.00011447199999999741, 0.00011476399999999984, 0.00011412500000000311, 0.00011429200000000195, 0.00011465199999999981, 0.00011431900000000161, 0.00011461100000000057...</msg>
<status status="PASS" starttime="20201029 18:19:58.325" endtime="20201029 18:19:58.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.333" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201029 18:19:58.332" endtime="20201029 18:19:58.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.336" level="INFO">VALUE: [0.00011484700000000125, 0.00011447199999999741, 0.00011476399999999984, 0.00011412500000000311, 0.00011429200000000195, 0.00011465199999999981, 0.00011431900000000161, 0.00011461100000000057, 0.00011413899999999921, 0.000114597000000001, 0.00011477799999999941, 0.00011476399999999984, 0.00011427799999999891, 0.00011412499999999964, 0.00011462500000000014, 0.00011494499999999824, 0.0001147909999999995, 0.00011462500000000014, 0.00011477799999999941, 0.00011494399999999877, 0.00011494399999999877, 0.00011427800000000238, 0.00011443100000000164, 0.00011483299999999821, 0.00011443000000000217, 0.00011477699999999993, 0.00011475000000000027, 0.00011412499999999964, 0.00011429200000000195, 0.00011444500000000121, 0.00011482000000000159, 0.0001146109999999971, 0.00011411199999999955, 0.00011462500000000014, 0.00011408299999999746, 0.00011427799999999891, 0.00011444400000000174, 0.00011495800000000181, 0.00011494399999999877, 0.00011481899999999864, 0.00011477799999999941, 0.00011502799999999966, 0.00011495799999999834, 0.00011422200000000063, 0.00011412499999999964, 0.00011461100000000057, 0.00011447199999999741, 0.00011495799999999834, 0.00011429199999999848, 0.00011456999999999787]</msg>
<status status="PASS" starttime="20201029 18:19:58.334" endtime="20201029 18:19:58.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.329" endtime="20201029 18:19:58.337"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:58.341" endtime="20201029 18:19:58.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.339" endtime="20201029 18:19:58.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.338" endtime="20201029 18:19:58.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.952" endtime="20201029 18:19:58.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:57.952" endtime="20201029 18:19:58.362"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.371" endtime="20201029 18:19:58.391"></status>
</kw>
<msg timestamp="20201029 18:19:58.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:58.369" endtime="20201029 18:19:58.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:58.393" endtime="20201029 18:19:58.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.396" endtime="20201029 18:19:58.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.366" endtime="20201029 18:19:58.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.364" endtime="20201029 18:19:58.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.405" endtime="20201029 18:19:58.691"></status>
</kw>
<msg timestamp="20201029 18:19:58.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0236445, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0237605, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:19:58.404" endtime="20201029 18:19:58.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0236445, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0237605, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:19:58.695" endtime="20201029 18:19:58.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.703" endtime="20201029 18:19:58.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.401" endtime="20201029 18:19:58.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.399" endtime="20201029 18:19:58.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:58.710" level="INFO">${RESULT} = [{'diff': 0.00011600000000000152}, {'diff': 0.00011527799999999991}, {'diff': 0.00011519400000000249}, {'diff': 0.00011579199999999998}, {'diff': 0.00011544499999999874}, {'diff': 0.000115972000000002...</msg>
<status status="PASS" starttime="20201029 18:19:58.707" endtime="20201029 18:19:58.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:58.714" level="INFO">${ACCURACY} = {'diff': [0.00011600000000000152, 0.00011527799999999991, 0.00011519400000000249, 0.00011579199999999998, 0.00011544499999999874, 0.00011597200000000238, 0.00011545799999999884, 0.00011562500000000114...</msg>
<status status="PASS" starttime="20201029 18:19:58.711" endtime="20201029 18:19:58.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.719" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201029 18:19:58.718" endtime="20201029 18:19:58.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.721" level="INFO">VALUE: [0.00011600000000000152, 0.00011527799999999991, 0.00011519400000000249, 0.00011579199999999998, 0.00011544499999999874, 0.00011597200000000238, 0.00011545799999999884, 0.00011562500000000114, 0.00011579199999999998, 0.00011529199999999948, 0.00011561100000000157, 0.00011594499999999924, 0.00011544500000000221, 0.00011512500000000064, 0.00011513900000000021, 0.0001151109999999976, 0.00011513900000000021, 0.00011527799999999991, 0.00011593099999999967, 0.00011544500000000221, 0.00011544500000000221, 0.00011575000000000127, 0.00011527799999999991, 0.00011512500000000064, 0.00011594399999999977, 0.00011577800000000041, 0.00011544399999999927, 0.00011543099999999917, 0.00011577800000000041, 0.00011597300000000185, 0.00011595899999999881, 0.00011512500000000064, 0.00011544399999999927, 0.00011513900000000021, 0.00011512500000000064, 0.00011562500000000114, 0.00011597200000000238, 0.00011577800000000041, 0.0001155559999999993, 0.00011515299999999978, 0.00011591600000000063, 0.00011580500000000007, 0.00011544400000000274, 0.00011594399999999977, 0.00011580599999999955, 0.00011577800000000041, 0.00011543100000000264, 0.00011577800000000041, 0.00011504099999999975, 0.00011561100000000157]</msg>
<status status="PASS" starttime="20201029 18:19:58.720" endtime="20201029 18:19:58.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.715" endtime="20201029 18:19:58.723"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:58.727" endtime="20201029 18:19:58.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.726" endtime="20201029 18:19:58.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.724" endtime="20201029 18:19:58.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.363" endtime="20201029 18:19:58.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.362" endtime="20201029 18:19:58.748"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.757" endtime="20201029 18:19:58.778"></status>
</kw>
<msg timestamp="20201029 18:19:58.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:58.755" endtime="20201029 18:19:58.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:58.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:58.779" endtime="20201029 18:19:58.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.782" endtime="20201029 18:19:58.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.753" endtime="20201029 18:19:58.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.750" endtime="20201029 18:19:58.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:58.791" endtime="20201029 18:19:59.078"></status>
</kw>
<msg timestamp="20201029 18:19:59.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022695347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022811861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:58.790" endtime="20201029 18:19:59.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022695347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022811861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:59.082" endtime="20201029 18:19:59.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.090" endtime="20201029 18:19:59.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.787" endtime="20201029 18:19:59.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.785" endtime="20201029 18:19:59.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:59.097" level="INFO">${RESULT} = [{'diff': 0.00011651399999999812}, {'diff': 0.00011627800000000091}, {'diff': 0.00011697199999999991}, {'diff': 0.00011645900000000278}, {'diff': 0.00011663899999999824}, {'diff': 0.000116637999999998...</msg>
<status status="PASS" starttime="20201029 18:19:59.094" endtime="20201029 18:19:59.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:59.102" level="INFO">${ACCURACY} = {'diff': [0.00011651399999999812, 0.00011627800000000091, 0.00011697199999999991, 0.00011645900000000278, 0.00011663899999999824, 0.00011663799999999877, 0.00011613899999999774, 0.00011697199999999991...</msg>
<status status="PASS" starttime="20201029 18:19:59.098" endtime="20201029 18:19:59.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.107" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201029 18:19:59.106" endtime="20201029 18:19:59.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.109" level="INFO">VALUE: [0.00011651399999999812, 0.00011627800000000091, 0.00011697199999999991, 0.00011645900000000278, 0.00011663899999999824, 0.00011663799999999877, 0.00011613899999999774, 0.00011697199999999991, 0.00011677800000000141, 0.00011677800000000141, 0.0001166109999999991, 0.00011609699999999903, 0.00011644499999999974, 0.00011608399999999894, 0.00011680600000000055, 0.00011644400000000027, 0.00011645799999999984, 0.00011634799999999876, 0.00011679200000000098, 0.00011694500000000024, 0.0001161109999999986, 0.00011615200000000131, 0.00011609799999999851, 0.00011659799999999901, 0.00011695800000000034, 0.00011662499999999867, 0.0001167499999999988, 0.00011679200000000098, 0.00011645799999999984, 0.00011663899999999824, 0.00011663899999999824, 0.00011697199999999991, 0.00011679099999999804, 0.00011627699999999797, 0.00011691599999999816, 0.0001167360000000027, 0.00011695800000000034, 0.00011607000000000284, 0.00011647199999999941, 0.0001164170000000006, 0.0001165560000000003, 0.00011677700000000193, 0.0001160689999999999, 0.00011659699999999953, 0.0001161109999999986, 0.00011694400000000077, 0.00011676400000000184, 0.00011679200000000098, 0.00011677800000000141, 0.000116291000000001]</msg>
<status status="PASS" starttime="20201029 18:19:59.108" endtime="20201029 18:19:59.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.103" endtime="20201029 18:19:59.111"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:59.119" endtime="20201029 18:19:59.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.113" endtime="20201029 18:19:59.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.112" endtime="20201029 18:19:59.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.749" endtime="20201029 18:19:59.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:58.748" endtime="20201029 18:19:59.140"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.149" endtime="20201029 18:19:59.169"></status>
</kw>
<msg timestamp="20201029 18:19:59.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:59.147" endtime="20201029 18:19:59.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:59.171" endtime="20201029 18:19:59.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.173" endtime="20201029 18:19:59.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.145" endtime="20201029 18:19:59.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.142" endtime="20201029 18:19:59.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.183" endtime="20201029 18:19:59.470"></status>
</kw>
<msg timestamp="20201029 18:19:59.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022808722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022926389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:59.181" endtime="20201029 18:19:59.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022808722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022926389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:59.474" endtime="20201029 18:19:59.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.482" endtime="20201029 18:19:59.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.178" endtime="20201029 18:19:59.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.177" endtime="20201029 18:19:59.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:59.489" level="INFO">${RESULT} = [{'diff': 0.00011766699999999838}, {'diff': 0.00011777799999999894}, {'diff': 0.00011727800000000191}, {'diff': 0.00011751399999999912}, {'diff': 0.0001174300000000017}, {'diff': 0.0001175830000000009...</msg>
<status status="PASS" starttime="20201029 18:19:59.486" endtime="20201029 18:19:59.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:59.493" level="INFO">${ACCURACY} = {'diff': [0.00011766699999999838, 0.00011777799999999894, 0.00011727800000000191, 0.00011751399999999912, 0.0001174300000000017, 0.00011758300000000096, 0.00011727799999999844, 0.00011745799999999737,...</msg>
<status status="PASS" starttime="20201029 18:19:59.490" endtime="20201029 18:19:59.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.498" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201029 18:19:59.497" endtime="20201029 18:19:59.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.500" level="INFO">VALUE: [0.00011766699999999838, 0.00011777799999999894, 0.00011727800000000191, 0.00011751399999999912, 0.0001174300000000017, 0.00011758300000000096, 0.00011727799999999844, 0.00011745799999999737, 0.00011726400000000234, 0.00011709700000000003, 0.00011744499999999727, 0.00011712499999999917, 0.00011779099999999904, 0.0001174300000000017, 0.0001173049999999981, 0.00011763900000000271, 0.00011762499999999967, 0.00011795899999999734, 0.0001179170000000021, 0.0001176110000000001, 0.00011744499999999727, 0.00011712499999999917, 0.0001174300000000017, 0.00011727800000000191, 0.00011752799999999869, 0.0001176110000000001, 0.00011780599999999808, 0.00011779200000000198, 0.00011780500000000207, 0.0001179439999999983, 0.00011795799999999787, 0.00011745799999999737, 0.00011727799999999844, 0.00011762499999999967, 0.00011777799999999894, 0.00011726399999999887, 0.0001176110000000001, 0.00011780599999999808, 0.00011798600000000048, 0.00011745800000000084, 0.00011726400000000234, 0.00011794400000000177, 0.00011797300000000038, 0.00011745900000000031, 0.00011783299999999775, 0.00011729199999999801, 0.00011744499999999727, 0.00011712499999999917, 0.00011742999999999823, 0.00011780599999999808]</msg>
<status status="PASS" starttime="20201029 18:19:59.499" endtime="20201029 18:19:59.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.494" endtime="20201029 18:19:59.502"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:59.506" endtime="20201029 18:19:59.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.504" endtime="20201029 18:19:59.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.503" endtime="20201029 18:19:59.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.141" endtime="20201029 18:19:59.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.140" endtime="20201029 18:19:59.526"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.536" endtime="20201029 18:19:59.557"></status>
</kw>
<msg timestamp="20201029 18:19:59.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:59.534" endtime="20201029 18:19:59.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:59.559" endtime="20201029 18:19:59.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.561" endtime="20201029 18:19:59.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.531" endtime="20201029 18:19:59.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.529" endtime="20201029 18:19:59.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.571" endtime="20201029 18:19:59.857"></status>
</kw>
<msg timestamp="20201029 18:19:59.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023559708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023678736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:59.569" endtime="20201029 18:19:59.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023559708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023678736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:59.861" endtime="20201029 18:19:59.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.869" endtime="20201029 18:19:59.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.566" endtime="20201029 18:19:59.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.565" endtime="20201029 18:19:59.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:59.876" level="INFO">${RESULT} = [{'diff': 0.00011902800000000019}, {'diff': 0.00011859700000000153}, {'diff': 0.00011879199999999951}, {'diff': 0.00011891699999999963}, {'diff': 0.00011877799999999994}, {'diff': 0.000118500000000000...</msg>
<status status="PASS" starttime="20201029 18:19:59.873" endtime="20201029 18:19:59.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:59.880" level="INFO">${ACCURACY} = {'diff': [0.00011902800000000019, 0.00011859700000000153, 0.00011879199999999951, 0.00011891699999999963, 0.00011877799999999994, 0.00011850000000000055, 0.00011879100000000004, 0.00011827699999999997...</msg>
<status status="PASS" starttime="20201029 18:19:59.877" endtime="20201029 18:19:59.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.885" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201029 18:19:59.884" endtime="20201029 18:19:59.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.887" level="INFO">VALUE: [0.00011902800000000019, 0.00011859700000000153, 0.00011879199999999951, 0.00011891699999999963, 0.00011877799999999994, 0.00011850000000000055, 0.00011879100000000004, 0.00011827699999999997, 0.00011808300000000146, 0.00011812500000000017, 0.0001181110000000006, 0.00011827799999999944, 0.00011894500000000224, 0.00011877799999999994, 0.00011897200000000191, 0.0001186110000000011, 0.00011847200000000141, 0.00011858300000000196, 0.00011845800000000184, 0.00011863900000000024, 0.00011827799999999944, 0.00011826399999999987, 0.00011859800000000101, 0.00011829099999999954, 0.00011869400000000252, 0.00011895799999999887, 0.00011812500000000017, 0.00011847200000000141, 0.00011812500000000017, 0.00011872299999999766, 0.00011866599999999991, 0.0001187500000000008, 0.00011841599999999966, 0.00011862500000000067, 0.00011845800000000184, 0.0001184439999999988, 0.00011832000000000162, 0.00011879199999999951, 0.00011845900000000131, 0.0001189309999999992, 0.00011811200000000008, 0.00011830500000000257, 0.00011895799999999887, 0.00011847200000000141, 0.000118082999999998, 0.00011809700000000103, 0.00011879200000000298, 0.00011862500000000067, 0.00011895899999999834, 0.00011895799999999887]</msg>
<status status="PASS" starttime="20201029 18:19:59.886" endtime="20201029 18:19:59.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.881" endtime="20201029 18:19:59.889"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:59.893" endtime="20201029 18:19:59.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.892" endtime="20201029 18:19:59.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.891" endtime="20201029 18:19:59.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.527" endtime="20201029 18:19:59.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.527" endtime="20201029 18:19:59.914"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.923" endtime="20201029 18:19:59.944"></status>
</kw>
<msg timestamp="20201029 18:19:59.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:59.922" endtime="20201029 18:19:59.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:59.946" endtime="20201029 18:19:59.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.948" endtime="20201029 18:19:59.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.919" endtime="20201029 18:19:59.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.917" endtime="20201029 18:19:59.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.958" endtime="20201029 18:20:00.245"></status>
</kw>
<msg timestamp="20201029 18:20:00.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022898278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023017486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:59.956" endtime="20201029 18:20:00.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:00.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022898278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023017486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:00.249" endtime="20201029 18:20:00.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:00.257" endtime="20201029 18:20:00.259"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.953" endtime="20201029 18:20:00.260"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.952" endtime="20201029 18:20:00.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:00.264" level="INFO">${RESULT} = [{'diff': 0.00011920799999999912}, {'diff': 0.00011927700000000097}, {'diff': 0.00011963900000000124}, {'diff': 0.00011947199999999894}, {'diff': 0.0001196110000000021}, {'diff': 0.0001198470000000027...</msg>
<status status="PASS" starttime="20201029 18:20:00.261" endtime="20201029 18:20:00.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:00.269" level="INFO">${ACCURACY} = {'diff': [0.00011920799999999912, 0.00011927700000000097, 0.00011963900000000124, 0.00011947199999999894, 0.0001196110000000021, 0.00011984700000000278, 0.00011979200000000051, 0.0001197639999999979, ...</msg>
<status status="PASS" starttime="20201029 18:20:00.265" endtime="20201029 18:20:00.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:00.274" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201029 18:20:00.273" endtime="20201029 18:20:00.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:00.276" level="INFO">VALUE: [0.00011920799999999912, 0.00011927700000000097, 0.00011963900000000124, 0.00011947199999999894, 0.0001196110000000021, 0.00011984700000000278, 0.00011979200000000051, 0.0001197639999999979, 0.00011995799999999987, 0.00012002800000000119, 0.00011992999999999726, 0.0001199440000000003, 0.00011976400000000137, 0.0001199310000000002, 0.00011976400000000137, 0.00011927800000000044, 0.0001194309999999997, 0.00011993000000000073, 0.0001196110000000021, 0.00011977800000000094, 0.00012002700000000172, 0.00011930599999999958, 0.00011909799999999804, 0.00011937499999999795, 0.00011962500000000167, 0.0001196110000000021, 0.0001199440000000003, 0.0001194439999999998, 0.00011979200000000051, 0.00011926400000000087, 0.00011994499999999977, 0.00011959700000000253, 0.00011945899999999884, 0.00011923600000000173, 0.00011929099999999707, 0.00011947200000000241, 0.00011987500000000192, 0.00011983399999999922, 0.00011995899999999934, 0.00011944499999999927, 0.00011909800000000151, 0.00011944500000000274, 0.00011915300000000031, 0.00011980499999999714, 0.0001199440000000003, 0.00011929200000000001, 0.00011923600000000173, 0.00011979200000000051, 0.00011945899999999884, 0.00011927800000000044]</msg>
<status status="PASS" starttime="20201029 18:20:00.275" endtime="20201029 18:20:00.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.270" endtime="20201029 18:20:00.278"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:00.282" endtime="20201029 18:20:00.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.280" endtime="20201029 18:20:00.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.279" endtime="20201029 18:20:00.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.915" endtime="20201029 18:20:00.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.915" endtime="20201029 18:20:00.302"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:00.311" endtime="20201029 18:20:00.332"></status>
</kw>
<msg timestamp="20201029 18:20:00.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:00.310" endtime="20201029 18:20:00.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:00.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:00.333" endtime="20201029 18:20:00.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:00.336" endtime="20201029 18:20:00.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.307" endtime="20201029 18:20:00.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.305" endtime="20201029 18:20:00.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:00.346" endtime="20201029 18:20:00.632"></status>
</kw>
<msg timestamp="20201029 18:20:00.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022679056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022799889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:00.344" endtime="20201029 18:20:00.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:00.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022679056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022799889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:00.636" endtime="20201029 18:20:00.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:00.645" endtime="20201029 18:20:00.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.341" endtime="20201029 18:20:00.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.339" endtime="20201029 18:20:00.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:00.651" level="INFO">${RESULT} = [{'diff': 0.00012083300000000075}, {'diff': 0.00012015300000000131}, {'diff': 0.00012058399999999997}, {'diff': 0.00012065199999999887}, {'diff': 0.00012030499999999764}, {'diff': 0.000120124999999998...</msg>
<status status="PASS" starttime="20201029 18:20:00.648" endtime="20201029 18:20:00.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:00.655" level="INFO">${ACCURACY} = {'diff': [0.00012083300000000075, 0.00012015300000000131, 0.00012058399999999997, 0.00012065199999999887, 0.00012030499999999764, 0.0001201249999999987, 0.00012011099999999914, 0.0001209440000000013, ...</msg>
<status status="PASS" starttime="20201029 18:20:00.652" endtime="20201029 18:20:00.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:00.660" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201029 18:20:00.659" endtime="20201029 18:20:00.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:00.663" level="INFO">VALUE: [0.00012083300000000075, 0.00012015300000000131, 0.00012058399999999997, 0.00012065199999999887, 0.00012030499999999764, 0.0001201249999999987, 0.00012011099999999914, 0.0001209440000000013, 0.00012094399999999783, 0.0001207500000000028, 0.00012059700000000007, 0.00012061099999999964, 0.0001209310000000012, 0.00012061099999999964, 0.00012012500000000217, 0.00012045800000000037, 0.00012045800000000037, 0.00012045800000000037, 0.00012009699999999957, 0.0001202089999999996, 0.00012061099999999964, 0.00012027800000000144, 0.000120776999999999, 0.00012023599999999926, 0.00012059700000000007, 0.00012061099999999964, 0.00012027800000000144, 0.00012101399999999915, 0.0001209449999999973, 0.00012095900000000034, 0.00012029099999999807, 0.00012029099999999807, 0.00012072200000000019, 0.00012027800000000144, 0.00012030599999999711, 0.00012031900000000068, 0.00012029199999999754, 0.0001201110000000026, 0.00012077799999999847, 0.00012009699999999957, 0.00012043000000000123, 0.00012082000000000065, 0.0001206249999999992, 0.0001201249999999987, 0.00012045899999999984, 0.00012027799999999797, 0.0001201249999999987, 0.00012094399999999783, 0.0001205830000000005, 0.00012011099999999914]</msg>
<status status="PASS" starttime="20201029 18:20:00.661" endtime="20201029 18:20:00.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.656" endtime="20201029 18:20:00.670"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:00.674" endtime="20201029 18:20:00.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.672" endtime="20201029 18:20:00.694"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.671" endtime="20201029 18:20:00.694"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.303" endtime="20201029 18:20:00.694"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.303" endtime="20201029 18:20:00.694"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:00.704" endtime="20201029 18:20:00.725"></status>
</kw>
<msg timestamp="20201029 18:20:00.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:00.702" endtime="20201029 18:20:00.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:00.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:00.726" endtime="20201029 18:20:00.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:00.729" endtime="20201029 18:20:00.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.699" endtime="20201029 18:20:00.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.697" endtime="20201029 18:20:00.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:00.738" endtime="20201029 18:20:01.025"></status>
</kw>
<msg timestamp="20201029 18:20:01.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023620583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023742361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:00.737" endtime="20201029 18:20:01.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:01.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023620583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023742361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:01.030" endtime="20201029 18:20:01.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.041" endtime="20201029 18:20:01.043"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.734" endtime="20201029 18:20:01.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.732" endtime="20201029 18:20:01.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:01.050" level="INFO">${RESULT} = [{'diff': 0.00012177799999999947}, {'diff': 0.0001216250000000002}, {'diff': 0.0001217639999999999}, {'diff': 0.00012179200000000251}, {'diff': 0.0001212639999999994}, {'diff': 0.0001212769999999995},...</msg>
<status status="PASS" starttime="20201029 18:20:01.045" endtime="20201029 18:20:01.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:01.057" level="INFO">${ACCURACY} = {'diff': [0.00012177799999999947, 0.0001216250000000002, 0.0001217639999999999, 0.00012179200000000251, 0.0001212639999999994, 0.0001212769999999995, 0.00012179099999999957, 0.0001214579999999979, 0.0...</msg>
<status status="PASS" starttime="20201029 18:20:01.051" endtime="20201029 18:20:01.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:01.067" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201029 18:20:01.065" endtime="20201029 18:20:01.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:01.073" level="INFO">VALUE: [0.00012177799999999947, 0.0001216250000000002, 0.0001217639999999999, 0.00012179200000000251, 0.0001212639999999994, 0.0001212769999999995, 0.00012179099999999957, 0.0001214579999999979, 0.0001214440000000018, 0.00012161100000000064, 0.0001214579999999979, 0.00012195900000000134, 0.0001216250000000002, 0.0001212639999999994, 0.00012179099999999957, 0.0001219579999999984, 0.0001214440000000018, 0.00012195800000000187, 0.00012143099999999823, 0.00012127799999999897, 0.00012179199999999904, 0.0001215700000000014, 0.000121777, 0.0001216250000000002, 0.00012142999999999876, 0.0001212639999999994, 0.00012194399999999883, 0.0001216250000000002, 0.00012144500000000127, 0.00012115299999999884, 0.0001219579999999984, 0.0001211249999999997, 0.00012197200000000144, 0.0001216250000000002, 0.00012127799999999897, 0.00012161100000000064, 0.00012161099999999717, 0.00012159800000000054, 0.00012191600000000316, 0.00012144399999999833, 0.00012179099999999957, 0.00012113899999999928, 0.00012111100000000014, 0.00012145800000000137, 0.0001216250000000002, 0.00012112500000000317, 0.00012145800000000137, 0.0001219579999999984, 0.0001210969999999971, 0.00012195800000000187]</msg>
<status status="PASS" starttime="20201029 18:20:01.069" endtime="20201029 18:20:01.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.058" endtime="20201029 18:20:01.075"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:01.082" endtime="20201029 18:20:01.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.079" endtime="20201029 18:20:01.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.076" endtime="20201029 18:20:01.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.695" endtime="20201029 18:20:01.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.695" endtime="20201029 18:20:01.104"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.115" endtime="20201029 18:20:01.136"></status>
</kw>
<msg timestamp="20201029 18:20:01.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:01.113" endtime="20201029 18:20:01.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:01.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:01.137" endtime="20201029 18:20:01.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.140" endtime="20201029 18:20:01.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.110" endtime="20201029 18:20:01.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.107" endtime="20201029 18:20:01.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.150" endtime="20201029 18:20:01.435"></status>
</kw>
<msg timestamp="20201029 18:20:01.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025596, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025718681, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:20:01.148" endtime="20201029 18:20:01.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:01.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025596, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025718681, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:20:01.439" endtime="20201029 18:20:01.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.447" endtime="20201029 18:20:01.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.145" endtime="20201029 18:20:01.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.143" endtime="20201029 18:20:01.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:01.454" level="INFO">${RESULT} = [{'diff': 0.00012268099999999948}, {'diff': 0.0001229579999999994}, {'diff': 0.00012300000000000158}, {'diff': 0.0001220969999999981}, {'diff': 0.00012293000000000026}, {'diff': 0.00012293099999999973...</msg>
<status status="PASS" starttime="20201029 18:20:01.451" endtime="20201029 18:20:01.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:01.462" level="INFO">${ACCURACY} = {'diff': [0.00012268099999999948, 0.0001229579999999994, 0.00012300000000000158, 0.0001220969999999981, 0.00012293000000000026, 0.00012293099999999973, 0.00012243099999999923, 0.00012211100000000114, ...</msg>
<status status="PASS" starttime="20201029 18:20:01.455" endtime="20201029 18:20:01.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:01.466" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201029 18:20:01.465" endtime="20201029 18:20:01.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:01.469" level="INFO">VALUE: [0.00012268099999999948, 0.0001229579999999994, 0.00012300000000000158, 0.0001220969999999981, 0.00012293000000000026, 0.00012293099999999973, 0.00012243099999999923, 0.00012211100000000114, 0.0001229449999999993, 0.0001224579999999989, 0.00012211100000000114, 0.0001224030000000001, 0.0001224579999999989, 0.00012277800000000047, 0.00012211100000000114, 0.00012295899999999887, 0.00012227799999999997, 0.00012277800000000047, 0.00012261099999999817, 0.00012261100000000164, 0.00012224999999999736, 0.00012261100000000164, 0.00012212499999999724, 0.00012247299999999794, 0.00012262499999999774, 0.00012245900000000184, 0.0001222770000000005, 0.0001227909999999971, 0.000122777999999997, 0.0001225969999999986, 0.00012288900000000103, 0.00012261100000000164, 0.0001226389999999973, 0.00012279200000000004, 0.00012215299999999985, 0.00012230499999999964, 0.000122777999999997, 0.00012211100000000114, 0.0001224440000000028, 0.00012211099999999767, 0.00012262499999999774, 0.00012227799999999997, 0.00012227799999999997, 0.0001227359999999983, 0.00012263900000000078, 0.00012204200000000276, 0.0001221109999999942, 0.0001227920000000035, 0.0001221250000000007, 0.0001226250000000012]</msg>
<status status="PASS" starttime="20201029 18:20:01.467" endtime="20201029 18:20:01.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.463" endtime="20201029 18:20:01.470"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:01.474" endtime="20201029 18:20:01.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.472" endtime="20201029 18:20:01.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.471" endtime="20201029 18:20:01.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.105" endtime="20201029 18:20:01.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.104" endtime="20201029 18:20:01.495"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.504" endtime="20201029 18:20:01.525"></status>
</kw>
<msg timestamp="20201029 18:20:01.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:01.502" endtime="20201029 18:20:01.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:01.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:01.526" endtime="20201029 18:20:01.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.529" endtime="20201029 18:20:01.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.499" endtime="20201029 18:20:01.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.497" endtime="20201029 18:20:01.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.538" endtime="20201029 18:20:01.826"></status>
</kw>
<msg timestamp="20201029 18:20:01.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022828472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022952042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:01.537" endtime="20201029 18:20:01.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:01.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022828472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022952042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:01.830" endtime="20201029 18:20:01.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.838" endtime="20201029 18:20:01.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.534" endtime="20201029 18:20:01.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.532" endtime="20201029 18:20:01.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:01.846" level="INFO">${RESULT} = [{'diff': 0.00012356999999999993}, {'diff': 0.00012312499999999824}, {'diff': 0.0001234579999999999}, {'diff': 0.00012362499999999874}, {'diff': 0.00012395899999999987}, {'diff': 0.0001234450000000032...</msg>
<status status="PASS" starttime="20201029 18:20:01.842" endtime="20201029 18:20:01.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:01.850" level="INFO">${ACCURACY} = {'diff': [0.00012356999999999993, 0.00012312499999999824, 0.0001234579999999999, 0.00012362499999999874, 0.00012395899999999987, 0.00012344500000000327, 0.0001231120000000016, 0.00012361099999999917, ...</msg>
<status status="PASS" starttime="20201029 18:20:01.847" endtime="20201029 18:20:01.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:01.855" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201029 18:20:01.854" endtime="20201029 18:20:01.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:01.858" level="INFO">VALUE: [0.00012356999999999993, 0.00012312499999999824, 0.0001234579999999999, 0.00012362499999999874, 0.00012395899999999987, 0.00012344500000000327, 0.0001231120000000016, 0.00012361099999999917, 0.0001239580000000004, 0.000123777999999998, 0.00012327800000000097, 0.00012311099999999867, 0.00012379200000000104, 0.00012327800000000097, 0.00012330500000000064, 0.00012351399999999818, 0.0001239580000000004, 0.00012376399999999843, 0.00012313900000000128, 0.00012329200000000054, 0.0001234449999999998, 0.0001234449999999998, 0.00012347199999999947, 0.0001230969999999991, 0.00012363900000000178, 0.0001237909999999981, 0.00012379200000000104, 0.0001232779999999975, 0.00012327800000000097, 0.00012329200000000054, 0.0001234449999999998, 0.000123777999999998, 0.00012398599999999954, 0.00012365300000000135, 0.00012350000000000208, 0.00012362499999999874, 0.00012311099999999867, 0.00012329200000000054, 0.00012376399999999843, 0.00012369500000000005, 0.0001237909999999981, 0.00012330500000000064, 0.00012327800000000097, 0.0001236250000000022, 0.00012365300000000135, 0.00012347300000000241, 0.00012395899999999987, 0.00012312499999999824, 0.00012343000000000076, 0.0001234579999999999]</msg>
<status status="PASS" starttime="20201029 18:20:01.857" endtime="20201029 18:20:01.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.851" endtime="20201029 18:20:01.860"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:01.864" endtime="20201029 18:20:01.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.862" endtime="20201029 18:20:01.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.861" endtime="20201029 18:20:01.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.496" endtime="20201029 18:20:01.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.495" endtime="20201029 18:20:01.884"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.893" endtime="20201029 18:20:01.916"></status>
</kw>
<msg timestamp="20201029 18:20:01.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:01.892" endtime="20201029 18:20:01.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:01.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:01.917" endtime="20201029 18:20:01.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.920" endtime="20201029 18:20:01.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.889" endtime="20201029 18:20:01.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.887" endtime="20201029 18:20:01.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:01.929" endtime="20201029 18:20:02.215"></status>
</kw>
<msg timestamp="20201029 18:20:02.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023769292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023893806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:01.928" endtime="20201029 18:20:02.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023769292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023893806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:02.219" endtime="20201029 18:20:02.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:02.228" endtime="20201029 18:20:02.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.925" endtime="20201029 18:20:02.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.923" endtime="20201029 18:20:02.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:02.235" level="INFO">${RESULT} = [{'diff': 0.00012451399999999918}, {'diff': 0.00012462499999999974}, {'diff': 0.00012412499999999924}, {'diff': 0.000124084}, {'diff': 0.00012461100000000017}, {'diff': 0.0001242640000000024}, {'diff'...</msg>
<status status="PASS" starttime="20201029 18:20:02.231" endtime="20201029 18:20:02.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:02.239" level="INFO">${ACCURACY} = {'diff': [0.00012451399999999918, 0.00012462499999999974, 0.00012412499999999924, 0.000124084, 0.00012461100000000017, 0.0001242640000000024, 0.00012493099999999827, 0.0001243060000000011, 0.000124291...</msg>
<status status="PASS" starttime="20201029 18:20:02.236" endtime="20201029 18:20:02.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.243" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201029 18:20:02.242" endtime="20201029 18:20:02.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.246" level="INFO">VALUE: [0.00012451399999999918, 0.00012462499999999974, 0.00012412499999999924, 0.000124084, 0.00012461100000000017, 0.0001242640000000024, 0.00012493099999999827, 0.0001243060000000011, 0.00012429199999999807, 0.0001247909999999991, 0.00012497200000000097, 0.00012411099999999967, 0.00012494400000000183, 0.00012462499999999974, 0.00012495900000000087, 0.00012445900000000037, 0.00012495900000000087, 0.00012462499999999974, 0.0001249580000000014, 0.00012494399999999836, 0.00012494400000000183, 0.00012461100000000017, 0.00012461100000000017, 0.00012493100000000174, 0.00012494499999999784, 0.00012445799999999743, 0.00012494400000000183, 0.00012445799999999743, 0.00012462499999999974, 0.0001242779999999985, 0.00012479199999999857, 0.00012479200000000204, 0.00012411199999999914, 0.0001247909999999991, 0.0001249719999999975, 0.0001242909999999986, 0.0001244580000000009, 0.00012461100000000017, 0.00012459699999999713, 0.0001242779999999985, 0.0001244450000000008, 0.00012476299999999996, 0.00012495799999999793, 0.00012493000000000226, 0.0001247360000000003, 0.00012479200000000204, 0.00012445799999999743, 0.0001243060000000011, 0.00012411099999999967, 0.0001243190000000012]</msg>
<status status="PASS" starttime="20201029 18:20:02.245" endtime="20201029 18:20:02.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.240" endtime="20201029 18:20:02.248"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:02.252" endtime="20201029 18:20:02.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.250" endtime="20201029 18:20:02.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.249" endtime="20201029 18:20:02.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.885" endtime="20201029 18:20:02.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:01.885" endtime="20201029 18:20:02.273"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:02.282" endtime="20201029 18:20:02.303"></status>
</kw>
<msg timestamp="20201029 18:20:02.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:02.280" endtime="20201029 18:20:02.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:02.305" endtime="20201029 18:20:02.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:02.307" endtime="20201029 18:20:02.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.277" endtime="20201029 18:20:02.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.275" endtime="20201029 18:20:02.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:02.317" endtime="20201029 18:20:02.602"></status>
</kw>
<msg timestamp="20201029 18:20:02.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022740889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022866056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:02.315" endtime="20201029 18:20:02.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022740889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022866056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:02.606" endtime="20201029 18:20:02.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:02.615" endtime="20201029 18:20:02.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.312" endtime="20201029 18:20:02.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.311" endtime="20201029 18:20:02.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:02.621" level="INFO">${RESULT} = [{'diff': 0.00012516699999999895}, {'diff': 0.00012562500000000074}, {'diff': 0.00012594399999999936}, {'diff': 0.00012597200000000197}, {'diff': 0.000125778}, {'diff': 0.0001252779999999995}, {'diff'...</msg>
<status status="PASS" starttime="20201029 18:20:02.618" endtime="20201029 18:20:02.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:02.626" level="INFO">${ACCURACY} = {'diff': [0.00012516699999999895, 0.00012562500000000074, 0.00012594399999999936, 0.00012597200000000197, 0.000125778, 0.0001252779999999995, 0.00012562500000000074, 0.0001252779999999995, 0.000125318...</msg>
<status status="PASS" starttime="20201029 18:20:02.622" endtime="20201029 18:20:02.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.631" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201029 18:20:02.630" endtime="20201029 18:20:02.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.634" level="INFO">VALUE: [0.00012516699999999895, 0.00012562500000000074, 0.00012594399999999936, 0.00012597200000000197, 0.000125778, 0.0001252779999999995, 0.00012562500000000074, 0.0001252779999999995, 0.00012531899999999874, 0.00012595799999999893, 0.00012562500000000074, 0.00012525000000000036, 0.00012544399999999886, 0.00012594399999999936, 0.00012545900000000137, 0.00012594499999999884, 0.0001255000000000006, 0.00012561200000000064, 0.00012565300000000335, 0.00012562500000000074, 0.0001252779999999995, 0.0001256109999999977, 0.00012544499999999834, 0.00012526399999999993, 0.00012559800000000107, 0.00012526399999999993, 0.0001251389999999998, 0.00012562500000000074, 0.00012587499999999752, 0.00012511100000000067, 0.00012533400000000125, 0.0001259450000000023, 0.00012590200000000065, 0.00012544499999999834, 0.00012547200000000147, 0.00012581899999999924, 0.00012541700000000267, 0.00012562500000000074, 0.00012593099999999927, 0.00012543100000000224, 0.0001254450000000018, 0.000125471999999998, 0.00012594399999999936, 0.00012561100000000117, 0.00012583400000000175, 0.00012529199999999907, 0.0001259719999999985, 0.0001253060000000021, 0.00012525000000000036, 0.000125778]</msg>
<status status="PASS" starttime="20201029 18:20:02.632" endtime="20201029 18:20:02.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.627" endtime="20201029 18:20:02.635"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:02.639" endtime="20201029 18:20:02.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.637" endtime="20201029 18:20:02.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.636" endtime="20201029 18:20:02.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.274" endtime="20201029 18:20:02.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.273" endtime="20201029 18:20:02.659"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:02.669" endtime="20201029 18:20:02.690"></status>
</kw>
<msg timestamp="20201029 18:20:02.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:02.667" endtime="20201029 18:20:02.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:02.691" endtime="20201029 18:20:02.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:02.694" endtime="20201029 18:20:02.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.664" endtime="20201029 18:20:02.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.662" endtime="20201029 18:20:02.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:02.703" endtime="20201029 18:20:02.990"></status>
</kw>
<msg timestamp="20201029 18:20:02.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022898861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023025889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:02.702" endtime="20201029 18:20:02.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:03.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022898861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023025889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:02.995" endtime="20201029 18:20:03.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:03.003" endtime="20201029 18:20:03.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.699" endtime="20201029 18:20:03.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.697" endtime="20201029 18:20:03.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:03.010" level="INFO">${RESULT} = [{'diff': 0.00012702800000000125}, {'diff': 0.00012679200000000057}, {'diff': 0.0001261109999999982}, {'diff': 0.0001269719999999995}, {'diff': 0.00012622200000000222}, {'diff': 0.00012612499999999777...</msg>
<status status="PASS" starttime="20201029 18:20:03.006" endtime="20201029 18:20:03.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:03.014" level="INFO">${ACCURACY} = {'diff': [0.00012702800000000125, 0.00012679200000000057, 0.0001261109999999982, 0.0001269719999999995, 0.00012622200000000222, 0.00012612499999999777, 0.000126471999999999, 0.00012644399999999986, 0....</msg>
<status status="PASS" starttime="20201029 18:20:03.011" endtime="20201029 18:20:03.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:03.018" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201029 18:20:03.017" endtime="20201029 18:20:03.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:03.021" level="INFO">VALUE: [0.00012702800000000125, 0.00012679200000000057, 0.0001261109999999982, 0.0001269719999999995, 0.00012622200000000222, 0.00012612499999999777, 0.000126471999999999, 0.00012644399999999986, 0.00012654200000000032, 0.00012677799999999753, 0.00012644499999999934, 0.00012629200000000007, 0.0001261390000000008, 0.00012612500000000124, 0.00012612499999999777, 0.00012613899999999734, 0.00012643099999999977, 0.0001266109999999987, 0.0001268329999999998, 0.00012662500000000174, 0.00012612500000000124, 0.00012662499999999827, 0.00012661100000000217, 0.00012662500000000174, 0.00012643099999999977, 0.00012612499999999777, 0.00012680500000000067, 0.00012626400000000093, 0.00012611100000000167, 0.0001266390000000013, 0.00012662499999999827, 0.00012680600000000014, 0.00012612500000000124, 0.0001269589999999994, 0.000126778000000001, 0.00012645799999999943, 0.00012693100000000027, 0.00012694499999999984, 0.0001269719999999995, 0.000126471999999999, 0.000126778000000001, 0.00012612499999999777, 0.00012649999999999814, 0.00012612499999999777, 0.00012662499999999827, 0.00012608299999999906, 0.0001264580000000029, 0.00012661100000000217, 0.0001266109999999987, 0.0001264589999999989]</msg>
<status status="PASS" starttime="20201029 18:20:03.020" endtime="20201029 18:20:03.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.015" endtime="20201029 18:20:03.022"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:03.026" endtime="20201029 18:20:03.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.025" endtime="20201029 18:20:03.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.023" endtime="20201029 18:20:03.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.660" endtime="20201029 18:20:03.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.660" endtime="20201029 18:20:03.047"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:03.056" endtime="20201029 18:20:03.078"></status>
</kw>
<msg timestamp="20201029 18:20:03.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:03.054" endtime="20201029 18:20:03.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:03.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:03.080" endtime="20201029 18:20:03.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:03.083" endtime="20201029 18:20:03.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.052" endtime="20201029 18:20:03.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.049" endtime="20201029 18:20:03.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:03.092" endtime="20201029 18:20:03.378"></status>
</kw>
<msg timestamp="20201029 18:20:03.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023508042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023635403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:03.091" endtime="20201029 18:20:03.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:03.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023508042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023635403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:03.382" endtime="20201029 18:20:03.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:03.391" endtime="20201029 18:20:03.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.088" endtime="20201029 18:20:03.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.086" endtime="20201029 18:20:03.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:03.397" level="INFO">${RESULT} = [{'diff': 0.00012736099999999945}, {'diff': 0.00012711100000000267}, {'diff': 0.0001276109999999997}, {'diff': 0.0001272360000000028}, {'diff': 0.00012777799999999853}, {'diff': 0.0001278469999999969}...</msg>
<status status="PASS" starttime="20201029 18:20:03.394" endtime="20201029 18:20:03.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:03.401" level="INFO">${ACCURACY} = {'diff': [0.00012736099999999945, 0.00012711100000000267, 0.0001276109999999997, 0.0001272360000000028, 0.00012777799999999853, 0.0001278469999999969, 0.00012754199999999785, 0.00012712499999999877, 0...</msg>
<status status="PASS" starttime="20201029 18:20:03.398" endtime="20201029 18:20:03.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:03.406" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201029 18:20:03.405" endtime="20201029 18:20:03.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:03.409" level="INFO">VALUE: [0.00012736099999999945, 0.00012711100000000267, 0.0001276109999999997, 0.0001272360000000028, 0.00012777799999999853, 0.0001278469999999969, 0.00012754199999999785, 0.00012712499999999877, 0.00012745800000000043, 0.000127778000000002, 0.00012704200000000082, 0.0001272780000000015, 0.00012794500000000084, 0.00012729099999999813, 0.00012795800000000093, 0.00012779200000000157, 0.0001279720000000005, 0.00012726399999999846, 0.0001273330000000003, 0.0001272780000000015, 0.00012779099999999863, 0.00012745800000000043, 0.00012729099999999813, 0.00012729200000000107, 0.00012799999999999964, 0.00012713899999999834, 0.0001279590000000004, 0.00012744500000000034, 0.00012779099999999863, 0.000127472, 0.00012762499999999927, 0.0001277499999999994, 0.000127778000000002, 0.00012762500000000274, 0.00012779200000000157, 0.00012763799999999936, 0.0001279300000000018, 0.00012795799999999746, 0.00012763899999999884, 0.00012711100000000267, 0.00012711100000000267, 0.000127778000000002, 0.0001275139999999987, 0.0001279590000000004, 0.0001271109999999992, 0.00012719500000000009, 0.00012727799999999803, 0.0001272780000000015, 0.00012759700000000013, 0.000127778000000002]</msg>
<status status="PASS" starttime="20201029 18:20:03.407" endtime="20201029 18:20:03.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.402" endtime="20201029 18:20:03.411"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:03.415" endtime="20201029 18:20:03.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.413" endtime="20201029 18:20:03.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.412" endtime="20201029 18:20:03.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.048" endtime="20201029 18:20:03.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.047" endtime="20201029 18:20:03.435"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:03.445" endtime="20201029 18:20:03.465"></status>
</kw>
<msg timestamp="20201029 18:20:03.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:03.443" endtime="20201029 18:20:03.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:03.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:03.467" endtime="20201029 18:20:03.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:03.469" endtime="20201029 18:20:03.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.440" endtime="20201029 18:20:03.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.438" endtime="20201029 18:20:03.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:03.479" endtime="20201029 18:20:03.764"></status>
</kw>
<msg timestamp="20201029 18:20:03.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022703417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022831931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:03.477" endtime="20201029 18:20:03.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:03.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022703417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022831931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:03.768" endtime="20201029 18:20:03.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:03.777" endtime="20201029 18:20:03.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.475" endtime="20201029 18:20:03.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.473" endtime="20201029 18:20:03.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:03.783" level="INFO">${RESULT} = [{'diff': 0.0001285139999999997}, {'diff': 0.00012847199999999753}, {'diff': 0.00012842999999999882}, {'diff': 0.00012863899999999984}, {'diff': 0.00012812499999999977}, {'diff': 0.0001287919999999991...</msg>
<status status="PASS" starttime="20201029 18:20:03.780" endtime="20201029 18:20:03.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:03.788" level="INFO">${ACCURACY} = {'diff': [0.0001285139999999997, 0.00012847199999999753, 0.00012842999999999882, 0.00012863899999999984, 0.00012812499999999977, 0.0001287919999999991, 0.00012852799999999928, 0.0001286110000000007, 0...</msg>
<status status="PASS" starttime="20201029 18:20:03.784" endtime="20201029 18:20:03.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:03.793" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201029 18:20:03.792" endtime="20201029 18:20:03.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:03.796" level="INFO">VALUE: [0.0001285139999999997, 0.00012847199999999753, 0.00012842999999999882, 0.00012863899999999984, 0.00012812499999999977, 0.0001287919999999991, 0.00012852799999999928, 0.0001286110000000007, 0.00012863899999999984, 0.00012862500000000027, 0.00012862500000000027, 0.00012897199999999803, 0.00012830600000000164, 0.00012862500000000027, 0.00012818000000000204, 0.00012877799999999953, 0.000128778000000003, 0.0001281110000000002, 0.0001286110000000007, 0.0001287919999999991, 0.00012848699999999658, 0.0001281110000000002, 0.00012829200000000207, 0.00012827799999999903, 0.00012879099999999963, 0.00012877700000000006, 0.00012829200000000207, 0.0001281110000000002, 0.00012844499999999787, 0.00012844500000000134, 0.00012895899999999794, 0.00012895899999999794, 0.00012827699999999956, 0.00012844400000000186, 0.0001286110000000007, 0.00012827799999999903, 0.00012886099999999748, 0.0001284590000000009, 0.0001289590000000014, 0.000128472000000001, 0.0001289439999999989, 0.0001284439999999984, 0.0001286110000000007, 0.00012880600000000214, 0.00012862500000000027, 0.00012881999999999824, 0.00012863899999999984, 0.00012811199999999967, 0.0001286110000000007, 0.00012894400000000236]</msg>
<status status="PASS" starttime="20201029 18:20:03.794" endtime="20201029 18:20:03.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.789" endtime="20201029 18:20:03.797"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:03.801" endtime="20201029 18:20:03.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.799" endtime="20201029 18:20:03.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.798" endtime="20201029 18:20:03.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.436" endtime="20201029 18:20:03.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.436" endtime="20201029 18:20:03.822"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:03.832" endtime="20201029 18:20:03.853"></status>
</kw>
<msg timestamp="20201029 18:20:03.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:03.830" endtime="20201029 18:20:03.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:03.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:03.854" endtime="20201029 18:20:03.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:03.857" endtime="20201029 18:20:03.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.827" endtime="20201029 18:20:03.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.825" endtime="20201029 18:20:03.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:03.867" endtime="20201029 18:20:04.155"></status>
</kw>
<msg timestamp="20201029 18:20:04.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023878556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024007722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:03.865" endtime="20201029 18:20:04.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:04.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023878556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024007722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:04.159" endtime="20201029 18:20:04.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:04.167" endtime="20201029 18:20:04.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.862" endtime="20201029 18:20:04.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.860" endtime="20201029 18:20:04.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:04.174" level="INFO">${RESULT} = [{'diff': 0.000129166}, {'diff': 0.00012912500000000077}, {'diff': 0.00012945800000000243}, {'diff': 0.00012995899999999894}, {'diff': 0.0001299590000000024}, {'diff': 0.0001291119999999972}, {'diff':...</msg>
<status status="PASS" starttime="20201029 18:20:04.171" endtime="20201029 18:20:04.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:04.178" level="INFO">${ACCURACY} = {'diff': [0.000129166, 0.00012912500000000077, 0.00012945800000000243, 0.00012995899999999894, 0.0001299590000000024, 0.0001291119999999972, 0.0001292769999999971, 0.0001296249999999978, 0.00012944399...</msg>
<status status="PASS" starttime="20201029 18:20:04.175" endtime="20201029 18:20:04.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:04.183" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201029 18:20:04.182" endtime="20201029 18:20:04.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:04.185" level="INFO">VALUE: [0.000129166, 0.00012912500000000077, 0.00012945800000000243, 0.00012995899999999894, 0.0001299590000000024, 0.0001291119999999972, 0.0001292769999999971, 0.0001296249999999978, 0.0001294439999999994, 0.00012995799999999946, 0.0001296249999999978, 0.00012944500000000234, 0.0001299729999999985, 0.00012927800000000003, 0.00012909700000000163, 0.00012961099999999823, 0.00012969499999999912, 0.00012930599999999917, 0.00012912500000000077, 0.00012961099999999823, 0.00012962500000000127, 0.00012912500000000077, 0.00012945799999999896, 0.00012922200000000175, 0.0001297920000000001, 0.00012995799999999946, 0.0001299729999999985, 0.0001296249999999978, 0.00012981899999999977, 0.0001292769999999971, 0.00012911099999999773, 0.00012977800000000053, 0.0001297920000000001, 0.00012994499999999937, 0.00012980599999999967, 0.00012980599999999967, 0.00012963800000000136, 0.00012979100000000063, 0.00012926400000000046, 0.0001294439999999994, 0.00012927800000000003, 0.0001296110000000017, 0.0001296110000000017, 0.00012930600000000264, 0.0001296249999999978, 0.00012963900000000084, 0.0001299439999999999, 0.00012913900000000034, 0.00012980599999999967, 0.00012977800000000053]</msg>
<status status="PASS" starttime="20201029 18:20:04.184" endtime="20201029 18:20:04.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.179" endtime="20201029 18:20:04.187"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:04.191" endtime="20201029 18:20:04.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.189" endtime="20201029 18:20:04.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.188" endtime="20201029 18:20:04.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.823" endtime="20201029 18:20:04.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.823" endtime="20201029 18:20:04.211"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:04.220" endtime="20201029 18:20:04.243"></status>
</kw>
<msg timestamp="20201029 18:20:04.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:04.219" endtime="20201029 18:20:04.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:04.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:04.245" endtime="20201029 18:20:04.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:04.247" endtime="20201029 18:20:04.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.216" endtime="20201029 18:20:04.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.214" endtime="20201029 18:20:04.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:04.257" endtime="20201029 18:20:04.541"></status>
</kw>
<msg timestamp="20201029 18:20:04.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023759833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023890333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:04.255" endtime="20201029 18:20:04.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:04.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023759833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023890333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:04.546" endtime="20201029 18:20:04.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:04.554" endtime="20201029 18:20:04.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.252" endtime="20201029 18:20:04.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.250" endtime="20201029 18:20:04.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:04.561" level="INFO">${RESULT} = [{'diff': 0.00013049999999999867}, {'diff': 0.0001306110000000027}, {'diff': 0.0001301110000000022}, {'diff': 0.00013063900000000184}, {'diff': 0.00013045899999999944}, {'diff': 0.0001306249999999988}...</msg>
<status status="PASS" starttime="20201029 18:20:04.557" endtime="20201029 18:20:04.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:04.565" level="INFO">${ACCURACY} = {'diff': [0.00013049999999999867, 0.0001306110000000027, 0.0001301110000000022, 0.00013063900000000184, 0.00013045899999999944, 0.0001306249999999988, 0.0001306119999999987, 0.0001308189999999973, 0.0...</msg>
<status status="PASS" starttime="20201029 18:20:04.562" endtime="20201029 18:20:04.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:04.569" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201029 18:20:04.568" endtime="20201029 18:20:04.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:04.573" level="INFO">VALUE: [0.00013049999999999867, 0.0001306110000000027, 0.0001301110000000022, 0.00013063900000000184, 0.00013045899999999944, 0.0001306249999999988, 0.0001306119999999987, 0.0001308189999999973, 0.00013026400000000146, 0.0001309440000000009, 0.00013077800000000153, 0.00013077799999999806, 0.00013011099999999873, 0.00013027800000000103, 0.00013090199999999871, 0.00013074999999999892, 0.00013012500000000177, 0.00013050000000000214, 0.00013095800000000046, 0.0001307639999999985, 0.00013045899999999944, 0.00013047199999999953, 0.0001306119999999987, 0.00013009699999999916, 0.00013012500000000177, 0.00013097200000000003, 0.0001306110000000027, 0.0001309310000000008, 0.00013044499999999987, 0.0001307089999999997, 0.0001306249999999988, 0.000130472000000003, 0.0001306110000000027, 0.00013006900000000002, 0.00013061099999999923, 0.00013029199999999713, 0.0001307920000000011, 0.0001309590000000034, 0.00013027700000000156, 0.00013059699999999966, 0.0001306249999999988, 0.0001301110000000022, 0.00013047199999999953, 0.0001304590000000029, 0.00013077800000000153, 0.00013027800000000103, 0.0001300829999999996, 0.0001308050000000012, 0.00013047199999999953, 0.00013062500000000227]</msg>
<status status="PASS" starttime="20201029 18:20:04.571" endtime="20201029 18:20:04.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.566" endtime="20201029 18:20:04.574"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:04.578" endtime="20201029 18:20:04.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.577" endtime="20201029 18:20:04.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.575" endtime="20201029 18:20:04.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.212" endtime="20201029 18:20:04.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.212" endtime="20201029 18:20:04.599"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:04.608" endtime="20201029 18:20:04.629"></status>
</kw>
<msg timestamp="20201029 18:20:04.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:04.606" endtime="20201029 18:20:04.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:04.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:04.631" endtime="20201029 18:20:04.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:04.634" endtime="20201029 18:20:04.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.604" endtime="20201029 18:20:04.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.601" endtime="20201029 18:20:04.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:04.643" endtime="20201029 18:20:04.930"></status>
</kw>
<msg timestamp="20201029 18:20:04.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022564222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022695417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:04.642" endtime="20201029 18:20:04.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:04.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022564222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022695417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:04.935" endtime="20201029 18:20:04.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:04.943" endtime="20201029 18:20:04.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.639" endtime="20201029 18:20:04.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.637" endtime="20201029 18:20:04.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:04.950" level="INFO">${RESULT} = [{'diff': 0.00013119500000000062}, {'diff': 0.0001317639999999995}, {'diff': 0.000131263999999999}, {'diff': 0.00013141599999999878}, {'diff': 0.000131957999999998}, {'diff': 0.00013141699999999826}, ...</msg>
<status status="PASS" starttime="20201029 18:20:04.947" endtime="20201029 18:20:04.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:04.957" level="INFO">${ACCURACY} = {'diff': [0.00013119500000000062, 0.0001317639999999995, 0.000131263999999999, 0.00013141599999999878, 0.000131957999999998, 0.00013141699999999826, 0.00013147200000000053, 0.0001319310000000018, 0.00...</msg>
<status status="PASS" starttime="20201029 18:20:04.951" endtime="20201029 18:20:04.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:04.962" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201029 18:20:04.961" endtime="20201029 18:20:04.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:04.965" level="INFO">VALUE: [0.00013119500000000062, 0.0001317639999999995, 0.000131263999999999, 0.00013141599999999878, 0.000131957999999998, 0.00013141699999999826, 0.00013147200000000053, 0.0001319310000000018, 0.00013180600000000167, 0.0001311110000000032, 0.00013174999999999992, 0.00013194399999999842, 0.00013177799999999906, 0.00013127799999999856, 0.0001316249999999998, 0.00013141700000000173, 0.00013111099999999973, 0.00013124999999999942, 0.00013195800000000146, 0.00013197200000000103, 0.00013111099999999973, 0.00013118100000000105, 0.00013179199999999863, 0.00013111099999999973, 0.00013195900000000094, 0.00013144399999999792, 0.0001312769999999991, 0.00013161100000000023, 0.0001316249999999998, 0.00013197200000000103, 0.00013132000000000074, 0.00013111099999999973, 0.00013180600000000167, 0.0001311119999999992, 0.00013145800000000096, 0.00013195800000000146, 0.00013111099999999973, 0.00013111099999999973, 0.0001314449999999974, 0.00013161100000000023, 0.00013197200000000103, 0.00013129099999999866, 0.00013112500000000277, 0.00013180499999999873, 0.00013127799999999856, 0.00013144399999999792, 0.00013159700000000066, 0.00013163899999999937, 0.0001316119999999997, 0.00013129099999999866]</msg>
<status status="PASS" starttime="20201029 18:20:04.963" endtime="20201029 18:20:04.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.958" endtime="20201029 18:20:04.966"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:04.970" endtime="20201029 18:20:04.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.968" endtime="20201029 18:20:04.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.967" endtime="20201029 18:20:04.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.600" endtime="20201029 18:20:04.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.599" endtime="20201029 18:20:04.990"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:05.000" endtime="20201029 18:20:05.021"></status>
</kw>
<msg timestamp="20201029 18:20:05.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:04.998" endtime="20201029 18:20:05.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:05.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:05.023" endtime="20201029 18:20:05.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:05.025" endtime="20201029 18:20:05.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.995" endtime="20201029 18:20:05.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.993" endtime="20201029 18:20:05.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:05.035" endtime="20201029 18:20:05.322"></status>
</kw>
<msg timestamp="20201029 18:20:05.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023051972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023184139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:05.033" endtime="20201029 18:20:05.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:05.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023051972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023184139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:05.327" endtime="20201029 18:20:05.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:05.335" endtime="20201029 18:20:05.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.030" endtime="20201029 18:20:05.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.029" endtime="20201029 18:20:05.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:05.341" level="INFO">${RESULT} = [{'diff': 0.000132166999999999}, {'diff': 0.00013225000000000042}, {'diff': 0.00013229199999999913}, {'diff': 0.00013298599999999813}, {'diff': 0.00013280499999999973}, {'diff': 0.0001324579999999985}...</msg>
<status status="PASS" starttime="20201029 18:20:05.338" endtime="20201029 18:20:05.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:05.346" level="INFO">${ACCURACY} = {'diff': [0.000132166999999999, 0.00013225000000000042, 0.00013229199999999913, 0.00013298599999999813, 0.00013280499999999973, 0.0001324579999999985, 0.00013293000000000332, 0.00013209700000000116, 0...</msg>
<status status="PASS" starttime="20201029 18:20:05.343" endtime="20201029 18:20:05.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:05.351" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201029 18:20:05.349" endtime="20201029 18:20:05.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:05.353" level="INFO">VALUE: [0.000132166999999999, 0.00013225000000000042, 0.00013229199999999913, 0.00013298599999999813, 0.00013280499999999973, 0.0001324579999999985, 0.00013293000000000332, 0.00013209700000000116, 0.00013261100000000123, 0.00013263900000000037, 0.0001321380000000004, 0.0001321250000000003, 0.00013262499999999733, 0.0001326250000000008, 0.00013211099999999726, 0.00013229199999999913, 0.00013263900000000037, 0.00013231900000000227, 0.0001324579999999985, 0.00013258299999999862, 0.00013209700000000116, 0.00013244399999999892, 0.00013229199999999913, 0.00013219400000000214, 0.00013297199999999856, 0.00013277800000000006, 0.00013280499999999973, 0.00013227799999999956, 0.00013277800000000006, 0.00013212499999999683, 0.0001324449999999984, 0.00013229199999999913, 0.00013251400000000024, 0.00013292999999999985, 0.00013259700000000166, 0.00013294399999999942, 0.00013292999999999985, 0.00013279199999999963, 0.0001321250000000003, 0.00013241699999999926, 0.0001329310000000028, 0.0001327640000000005, 0.0001321250000000003, 0.0001321250000000003, 0.0001321250000000003, 0.00013277800000000006, 0.00013211100000000073, 0.00013211100000000073, 0.00013283300000000234, 0.00013247199999999806]</msg>
<status status="PASS" starttime="20201029 18:20:05.352" endtime="20201029 18:20:05.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.347" endtime="20201029 18:20:05.355"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:05.358" endtime="20201029 18:20:05.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.357" endtime="20201029 18:20:05.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.355" endtime="20201029 18:20:05.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.991" endtime="20201029 18:20:05.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:04.991" endtime="20201029 18:20:05.379"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:05.388" endtime="20201029 18:20:05.410"></status>
</kw>
<msg timestamp="20201029 18:20:05.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:05.387" endtime="20201029 18:20:05.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:05.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:05.412" endtime="20201029 18:20:05.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:05.415" endtime="20201029 18:20:05.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.384" endtime="20201029 18:20:05.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.382" endtime="20201029 18:20:05.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:05.424" endtime="20201029 18:20:05.710"></status>
</kw>
<msg timestamp="20201029 18:20:05.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024178931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024312111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:05.423" endtime="20201029 18:20:05.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:05.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024178931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024312111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:05.714" endtime="20201029 18:20:05.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:05.722" endtime="20201029 18:20:05.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.420" endtime="20201029 18:20:05.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.418" endtime="20201029 18:20:05.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:05.729" level="INFO">${RESULT} = [{'diff': 0.0001331800000000001}, {'diff': 0.00013325000000000142}, {'diff': 0.0001331389999999974}, {'diff': 0.00013324999999999795}, {'diff': 0.00013394400000000042}, {'diff': 0.000133958}, {'diff':...</msg>
<status status="PASS" starttime="20201029 18:20:05.726" endtime="20201029 18:20:05.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:20:05.733" level="INFO">${ACCURACY} = {'diff': [0.0001331800000000001, 0.00013325000000000142, 0.0001331389999999974, 0.00013324999999999795, 0.00013394400000000042, 0.000133958, 0.00013397299999999904, 0.00013363900000000137, 0.000133125...</msg>
<status status="PASS" starttime="20201029 18:20:05.730" endtime="20201029 18:20:05.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:05.738" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201029 18:20:05.737" endtime="20201029 18:20:05.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:05.740" level="INFO">VALUE: [0.0001331800000000001, 0.00013325000000000142, 0.0001331389999999974, 0.00013324999999999795, 0.00013394400000000042, 0.000133958, 0.00013397299999999904, 0.00013363900000000137, 0.0001331250000000013, 0.0001334579999999995, 0.00013347200000000253, 0.00013350000000000167, 0.00013363900000000137, 0.0001333059999999997, 0.0001339449999999999, 0.0001331120000000012, 0.0001331250000000013, 0.00013344399999999992, 0.0001337909999999977, 0.0001337779999999976, 0.00013361099999999876, 0.0001334449999999994, 0.00013362499999999833, 0.00013329100000000066, 0.00013377699999999812, 0.00013394400000000042, 0.00013327800000000056, 0.00013329200000000013, 0.00013361099999999876, 0.00013312499999999783, 0.0001337640000000015, 0.00013359800000000213, 0.00013393000000000085, 0.00013312499999999783, 0.0001338060000000002, 0.00013379200000000063, 0.00013361099999999876, 0.00013329200000000013, 0.00013397199999999956, 0.0001337909999999977, 0.00013311099999999826, 0.00013361099999999876, 0.00013326399999999752, 0.00013327800000000056, 0.00013348599999999863, 0.0001339449999999999, 0.00013379200000000063, 0.00013397199999999956, 0.000133264000000001, 0.0001331250000000013]</msg>
<status status="PASS" starttime="20201029 18:20:05.739" endtime="20201029 18:20:05.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.734" endtime="20201029 18:20:05.749"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:05.753" endtime="20201029 18:20:05.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.751" endtime="20201029 18:20:05.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.750" endtime="20201029 18:20:05.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.380" endtime="20201029 18:20:05.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.379" endtime="20201029 18:20:05.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.921" endtime="20201029 18:20:05.774"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 18:19:26.851" endtime="20201029 18:20:05.775" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:18:46.462" endtime="20201029 18:20:05.778"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:20:05.833" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:20:05.842" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:20:06.971" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:20:05.832" endtime="20201029 18:20:06.972"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:20:06.975" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:20:06.973" endtime="20201029 18:20:06.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.831" endtime="20201029 18:20:06.975"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:06.978" endtime="20201029 18:20:07.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.976" endtime="20201029 18:20:07.165"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:07.177" endtime="20201029 18:20:07.193"></status>
</kw>
<msg timestamp="20201029 18:20:07.193" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['0.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:07.176" endtime="20201029 18:20:07.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:07.196" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['0.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:07.194" endtime="20201029 18:20:07.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:20:07.199" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:20:07.197" endtime="20201029 18:20:07.200"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:07.173" endtime="20201029 18:20:07.200"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:07.171" endtime="20201029 18:20:07.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.170" endtime="20201029 18:20:07.201"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:20:07.205" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:20:07.204" endtime="20201029 18:20:07.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.202" endtime="20201029 18:20:07.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.169" endtime="20201029 18:20:07.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.168" endtime="20201029 18:20:07.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:07.207" endtime="20201029 18:20:07.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.167" endtime="20201029 18:20:07.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:07.210" endtime="20201029 18:20:07.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.165" endtime="20201029 18:20:07.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:05.829" endtime="20201029 18:20:07.212"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:07.219" endtime="20201029 18:20:07.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.217" endtime="20201029 18:20:07.238"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:07.252" endtime="20201029 18:20:07.266"></status>
</kw>
<msg timestamp="20201029 18:20:07.267" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:07.250" endtime="20201029 18:20:07.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:07.269" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:07.268" endtime="20201029 18:20:07.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:20:07.274" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:20:07.271" endtime="20201029 18:20:07.274"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:07.248" endtime="20201029 18:20:07.275"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:07.245" endtime="20201029 18:20:07.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.244" endtime="20201029 18:20:07.275"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:20:07.279" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:20:07.279" endtime="20201029 18:20:07.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.276" endtime="20201029 18:20:07.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.243" endtime="20201029 18:20:07.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.242" endtime="20201029 18:20:07.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:07.281" endtime="20201029 18:20:07.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.241" endtime="20201029 18:20:07.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.239" endtime="20201029 18:20:07.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.216" endtime="20201029 18:20:07.284"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:07.293" endtime="20201029 18:20:13.417"></status>
</kw>
<msg timestamp="20201029 18:20:13.418" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:07.291" endtime="20201029 18:20:13.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.423" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:13.420" endtime="20201029 18:20:13.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:13.426" endtime="20201029 18:20:13.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.288" endtime="20201029 18:20:13.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.286" endtime="20201029 18:20:13.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:13.437" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201029 18:20:13.433" endtime="20201029 18:20:13.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.447" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:13.445" endtime="20201029 18:20:13.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.452" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:20:13.449" endtime="20201029 18:20:13.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.439" endtime="20201029 18:20:13.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.468" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:13.464" endtime="20201029 18:20:13.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.476" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:20:13.472" endtime="20201029 18:20:13.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.457" endtime="20201029 18:20:13.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.488" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:20:13.487" endtime="20201029 18:20:13.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.492" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 18:20:13.489" endtime="20201029 18:20:13.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.483" endtime="20201029 18:20:13.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:13.503" endtime="20201029 18:20:13.805"></status>
</kw>
<msg timestamp="20201029 18:20:13.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064665333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164709014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:13.501" endtime="20201029 18:20:13.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064665333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164709014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:13.810" endtime="20201029 18:20:13.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:13.818" endtime="20201029 18:20:13.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.498" endtime="20201029 18:20:13.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.495" endtime="20201029 18:20:13.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:20:13.825" level="INFO">${FILTERED} = [{'diff': 0.10004368099999998}, {'diff': 0.10001084699999999}, {'diff': 0.100010875}, {'diff': 0.10001083399999999}, {'diff': 0.100010861}, {'diff': 0.100010861}, {'diff': 0.100010861}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201029 18:20:13.821" endtime="20201029 18:20:13.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:13.829" level="INFO">${RESULT} = {'diff': [0.10004368099999998, 0.10001084699999999, 0.100010875, 0.10001083399999999, 0.100010861, 0.100010861, 0.100010861, 0.100010861, 0.100010861, 0.10001086199999998, 0.10001086100000012, 0.10001...</msg>
<status status="PASS" starttime="20201029 18:20:13.826" endtime="20201029 18:20:13.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.833" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:20:13.832" endtime="20201029 18:20:13.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.836" level="INFO">VALUE: [0.10004368099999998, 0.10001084699999999, 0.100010875, 0.10001083399999999, 0.100010861, 0.100010861, 0.100010861, 0.100010861, 0.100010861, 0.10001086199999998, 0.10001086100000012, 0.10001084700000007, 0.10001087500000017, 0.10001090300000004, 0.10001084700000007, 0.10001094499999996, 0.10001087499999994, 0.10001084799999993, 0.1000108609999999, 0.1000108609999999, 0.10001084800000015, 0.1000108049999997, 0.10001080500000015, 0.10001079199999996, 0.10001077800000013, 0.10001079199999996, 0.1000108609999999, 0.1000107920000004, 0.10001083400000033, 0.10001081899999997, 0.10001077700000005, 0.10001079199999996, 0.10001082000000006, 0.10001079099999988, 0.10001081899999997, 0.10001080600000023, 0.10001080599999979, 0.10001080500000015, 0.10001081899999997, 0.10001077800000013, 0.10001080600000023, 0.10001081900000042, 0.10001080599999934, 0.10001077799999969, 0.10001081899999953, 0.10001079199999996, 0.10001079199999996, 0.10001080600000023, 0.10001080500000015, 0.10001080600000023, 0.10001079199999996]</msg>
<status status="PASS" starttime="20201029 18:20:13.834" endtime="20201029 18:20:13.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.830" endtime="20201029 18:20:13.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:07.285" endtime="20201029 18:20:13.838"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 18:20:07.213" endtime="20201029 18:20:13.838" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:13.845" endtime="20201029 18:20:13.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.843" endtime="20201029 18:20:13.865"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:13.880" endtime="20201029 18:20:13.894"></status>
</kw>
<msg timestamp="20201029 18:20:13.895" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:13.878" endtime="20201029 18:20:13.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.898" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:13.896" endtime="20201029 18:20:13.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.901" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:20:13.899" endtime="20201029 18:20:13.901"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:13.875" endtime="20201029 18:20:13.902"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:13.873" endtime="20201029 18:20:13.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.870" endtime="20201029 18:20:13.903"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:20:13.907" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:20:13.906" endtime="20201029 18:20:13.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.904" endtime="20201029 18:20:13.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.870" endtime="20201029 18:20:13.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.869" endtime="20201029 18:20:13.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:13.908" endtime="20201029 18:20:13.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.867" endtime="20201029 18:20:13.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.866" endtime="20201029 18:20:13.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.842" endtime="20201029 18:20:13.911"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:13.920" endtime="20201029 18:20:20.043"></status>
</kw>
<msg timestamp="20201029 18:20:20.044" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:13.918" endtime="20201029 18:20:20.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.050" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:20.046" endtime="20201029 18:20:20.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:20.052" endtime="20201029 18:20:20.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.915" endtime="20201029 18:20:20.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.913" endtime="20201029 18:20:20.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:20.063" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201029 18:20:20.059" endtime="20201029 18:20:20.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.073" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:20.071" endtime="20201029 18:20:20.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.078" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:20:20.075" endtime="20201029 18:20:20.078"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.066" endtime="20201029 18:20:20.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.090" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:20.086" endtime="20201029 18:20:20.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.095" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:20:20.093" endtime="20201029 18:20:20.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.081" endtime="20201029 18:20:20.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.106" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:20:20.103" endtime="20201029 18:20:20.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.110" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 18:20:20.108" endtime="20201029 18:20:20.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.098" endtime="20201029 18:20:20.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:20.127" endtime="20201029 18:20:20.426"></status>
</kw>
<msg timestamp="20201029 18:20:20.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065622083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165695681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:20.123" endtime="20201029 18:20:20.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065622083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165695681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:20.430" endtime="20201029 18:20:20.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:20.438" endtime="20201029 18:20:20.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.117" endtime="20201029 18:20:20.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.114" endtime="20201029 18:20:20.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:20:20.444" level="INFO">${FILTERED} = [{'diff': 0.10007359800000001}, {'diff': 0.09998269400000001}, {'diff': 0.10001083399999999}, {'diff': 0.10001083300000002}, {'diff': 0.10001083400000005}, {'diff': 0.10001081900000008}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201029 18:20:20.441" endtime="20201029 18:20:20.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:20.448" level="INFO">${RESULT} = {'diff': [0.10007359800000001, 0.09998269400000001, 0.10001083399999999, 0.10001083300000002, 0.10001083400000005, 0.10001081900000008, 0.10001082000000006, 0.10001083300000002, 0.10001081999999994, 0...</msg>
<status status="PASS" starttime="20201029 18:20:20.445" endtime="20201029 18:20:20.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.453" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:20:20.452" endtime="20201029 18:20:20.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.456" level="INFO">VALUE: [0.10007359800000001, 0.09998269400000001, 0.10001083399999999, 0.10001083300000002, 0.10001083400000005, 0.10001081900000008, 0.10001082000000006, 0.10001083300000002, 0.10001081999999994, 0.10001083299999991, 0.10001081999999983, 0.10001083300000002, 0.1000108340000001, 0.10001083300000002, 0.10001084700000007, 0.10001077800000013, 0.1000107910000001, 0.10001076400000009, 0.1000107910000001, 0.10001077799999991, 0.10001076400000031, 0.10001076399999986, 0.10001077700000005, 0.10001079100000032, 0.10001077700000005, 0.10001077700000005, 0.10001076299999978, 0.10001076300000022, 0.10001076299999978, 0.10001077700000005, 0.10001077800000013, 0.10001076399999986, 0.10001077800000013, 0.10001076399999986, 0.10001077800000013, 0.10001077800000013, 0.10001076399999986, 0.10001079199999996, 0.10001077799999969, 0.10001079199999952, 0.10001075000000004, 0.10001077799999969, 0.10001076400000031, 0.10001081899999953, 0.1000108329999998, 0.10001081900000042, 0.10001076400000031, 0.10001077799999969, 0.10001077799999969, 0.10001076400000031, 0.1000107770000005]</msg>
<status status="PASS" starttime="20201029 18:20:20.454" endtime="20201029 18:20:20.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.449" endtime="20201029 18:20:20.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.912" endtime="20201029 18:20:20.457"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 18:20:13.840" endtime="20201029 18:20:20.458" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:20.464" endtime="20201029 18:20:20.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.463" endtime="20201029 18:20:20.484"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:20.497" endtime="20201029 18:20:20.511"></status>
</kw>
<msg timestamp="20201029 18:20:20.511" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:20.496" endtime="20201029 18:20:20.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.514" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:20.513" endtime="20201029 18:20:20.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:20:20.517" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:20:20.515" endtime="20201029 18:20:20.517"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:20.493" endtime="20201029 18:20:20.518"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:20.490" endtime="20201029 18:20:20.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.489" endtime="20201029 18:20:20.519"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:20:20.524" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:20:20.523" endtime="20201029 18:20:20.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.520" endtime="20201029 18:20:20.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.488" endtime="20201029 18:20:20.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.488" endtime="20201029 18:20:20.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:20.525" endtime="20201029 18:20:20.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.486" endtime="20201029 18:20:20.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.485" endtime="20201029 18:20:20.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.461" endtime="20201029 18:20:20.528"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:20.540" endtime="20201029 18:20:26.663"></status>
</kw>
<msg timestamp="20201029 18:20:26.664" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:20.535" endtime="20201029 18:20:26.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.670" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:26.667" endtime="20201029 18:20:26.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:26.673" endtime="20201029 18:20:26.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.532" endtime="20201029 18:20:26.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.530" endtime="20201029 18:20:26.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:26.684" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201029 18:20:26.680" endtime="20201029 18:20:26.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.693" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:26.691" endtime="20201029 18:20:26.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.698" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:20:26.696" endtime="20201029 18:20:26.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.686" endtime="20201029 18:20:26.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.708" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:26.706" endtime="20201029 18:20:26.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.713" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:20:26.711" endtime="20201029 18:20:26.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.701" endtime="20201029 18:20:26.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.723" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:20:26.721" endtime="20201029 18:20:26.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:26.728" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 18:20:26.726" endtime="20201029 18:20:26.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.716" endtime="20201029 18:20:26.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:26.744" endtime="20201029 18:20:27.042"></status>
</kw>
<msg timestamp="20201029 18:20:27.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066417597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.166606389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:26.741" endtime="20201029 18:20:27.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066417597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.166606389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:27.046" endtime="20201029 18:20:27.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:27.054" endtime="20201029 18:20:27.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.735" endtime="20201029 18:20:27.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:26.731" endtime="20201029 18:20:27.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:20:27.061" level="INFO">${FILTERED} = [{'diff': 0.100188792}, {'diff': 0.099866236}, {'diff': 0.10001186100000004}, {'diff': 0.100010777}, {'diff': 0.10001079099999999}, {'diff': 0.10001081999999994}, {'diff': 0.10001080600000001}, {'diff...</msg>
<status status="PASS" starttime="20201029 18:20:27.058" endtime="20201029 18:20:27.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:27.066" level="INFO">${RESULT} = {'diff': [0.100188792, 0.099866236, 0.10001186100000004, 0.100010777, 0.10001079099999999, 0.10001081999999994, 0.10001080600000001, 0.10001079099999999, 0.10001088899999999, 0.10001079199999996, 0.10...</msg>
<status status="PASS" starttime="20201029 18:20:27.062" endtime="20201029 18:20:27.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.070" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:20:27.069" endtime="20201029 18:20:27.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.073" level="INFO">VALUE: [0.100188792, 0.099866236, 0.10001186100000004, 0.100010777, 0.10001079099999999, 0.10001081999999994, 0.10001080600000001, 0.10001079099999999, 0.10001088899999999, 0.10001079199999996, 0.10001080500000015, 0.10001080600000001, 0.10001080600000001, 0.10001081899999997, 0.10001079200000018, 0.10001076399999986, 0.10001076400000009, 0.10001072300000002, 0.10001075000000004, 0.10001076400000009, 0.10001075000000004, 0.10001076399999986, 0.10001076400000031, 0.10001076399999986, 0.10001086100000034, 0.10001087500000017, 0.10001087500000017, 0.1000108609999999, 0.10001087499999972, 0.10001087500000017, 0.10001084800000015, 0.1000108609999999, 0.1000108609999999, 0.1000108609999999, 0.10001086199999998, 0.10001090200000018, 0.10001087499999972, 0.10001086100000034, 0.10001087500000017, 0.10001084799999971, 0.10001087499999972, 0.10001087499999972, 0.10001087500000061, 0.10001086199999953, 0.10001086100000034, 0.10001086100000034, 0.10001087499999972, 0.10001086100000034, 0.10001086100000034, 0.10001087499999972, 0.10001086100000034]</msg>
<status status="PASS" starttime="20201029 18:20:27.071" endtime="20201029 18:20:27.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.067" endtime="20201029 18:20:27.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:20.529" endtime="20201029 18:20:27.074"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 18:20:20.459" endtime="20201029 18:20:27.075" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:27.082" endtime="20201029 18:20:27.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.080" endtime="20201029 18:20:27.102"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:27.116" endtime="20201029 18:20:27.130"></status>
</kw>
<msg timestamp="20201029 18:20:27.130" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:27.114" endtime="20201029 18:20:27.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.133" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:27.131" endtime="20201029 18:20:27.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:20:27.137" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:20:27.134" endtime="20201029 18:20:27.137"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:27.111" endtime="20201029 18:20:27.138"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:27.109" endtime="20201029 18:20:27.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.107" endtime="20201029 18:20:27.139"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:20:27.143" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:20:27.142" endtime="20201029 18:20:27.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.140" endtime="20201029 18:20:27.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.106" endtime="20201029 18:20:27.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.106" endtime="20201029 18:20:27.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:27.145" endtime="20201029 18:20:27.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.104" endtime="20201029 18:20:27.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.103" endtime="20201029 18:20:27.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.079" endtime="20201029 18:20:27.147"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:27.156" endtime="20201029 18:20:33.280"></status>
</kw>
<msg timestamp="20201029 18:20:33.281" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:27.154" endtime="20201029 18:20:33.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:33.286" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:33.283" endtime="20201029 18:20:33.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:33.289" endtime="20201029 18:20:33.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.152" endtime="20201029 18:20:33.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.150" endtime="20201029 18:20:33.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:33.301" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201029 18:20:33.296" endtime="20201029 18:20:33.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:33.310" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:33.307" endtime="20201029 18:20:33.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:33.314" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:20:33.312" endtime="20201029 18:20:33.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.302" endtime="20201029 18:20:33.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:33.325" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:33.323" endtime="20201029 18:20:33.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:33.329" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:20:33.327" endtime="20201029 18:20:33.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.317" endtime="20201029 18:20:33.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:33.340" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:20:33.338" endtime="20201029 18:20:33.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:33.345" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 18:20:33.343" endtime="20201029 18:20:33.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.333" endtime="20201029 18:20:33.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:33.357" endtime="20201029 18:20:33.655"></status>
</kw>
<msg timestamp="20201029 18:20:33.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065071278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165359444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:33.356" endtime="20201029 18:20:33.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:33.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065071278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165359444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:33.659" endtime="20201029 18:20:33.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:33.667" endtime="20201029 18:20:33.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.352" endtime="20201029 18:20:33.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.348" endtime="20201029 18:20:33.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:20:33.674" level="INFO">${FILTERED} = [{'diff': 0.100288166}, {'diff': 0.09976768000000003}, {'diff': 0.10038112500000002}, {'diff': 0.09960997199999999}, {'diff': 0.10001190299999996}, {'diff': 0.100010861}, {'diff': 0.1000108890000001},...</msg>
<status status="PASS" starttime="20201029 18:20:33.671" endtime="20201029 18:20:33.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:33.679" level="INFO">${RESULT} = {'diff': [0.100288166, 0.09976768000000003, 0.10038112500000002, 0.09960997199999999, 0.10001190299999996, 0.100010861, 0.1000108890000001, 0.10001088899999999, 0.10001088899999999, 0.1000109309999999...</msg>
<status status="PASS" starttime="20201029 18:20:33.676" endtime="20201029 18:20:33.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:33.684" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:20:33.682" endtime="20201029 18:20:33.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:33.686" level="INFO">VALUE: [0.100288166, 0.09976768000000003, 0.10038112500000002, 0.09960997199999999, 0.10001190299999996, 0.100010861, 0.1000108890000001, 0.10001088899999999, 0.10001088899999999, 0.10001093099999991, 0.1000108609999999, 0.10001088899999999, 0.10001090300000004, 0.10001088899999999, 0.10001088899999999, 0.10001088899999999, 0.10001090300000004, 0.10001087499999994, 0.10001081899999997, 0.10001082000000006, 0.1000108329999998, 0.10001082000000006, 0.10001081899999997, 0.10001084800000015, 0.10001083300000024, 0.10001088899999999, 0.10001080500000015, 0.10001083400000033, 0.1000108329999998, 0.10001083400000033, 0.10001083300000024, 0.10001084700000007, 0.10001081899999997, 0.10001083300000024, 0.10001084700000007, 0.10001084700000007, 0.10001083300000024, 0.1000108609999999, 0.10001080600000023, 0.1000108329999998, 0.10001087499999972, 0.10001084700000007, 0.10001081999999961, 0.10001084699999918, 0.10001090299999937, 0.10001086100000034, 0.10001084700000007, 0.10001084700000007, 0.1000108329999998, 0.10001088799999991, 0.1000108329999998]</msg>
<status status="PASS" starttime="20201029 18:20:33.685" endtime="20201029 18:20:33.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.680" endtime="20201029 18:20:33.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:27.148" endtime="20201029 18:20:33.688"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 18:20:27.076" endtime="20201029 18:20:33.689" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:33.695" endtime="20201029 18:20:33.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.694" endtime="20201029 18:20:33.715"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:33.730" endtime="20201029 18:20:33.745"></status>
</kw>
<msg timestamp="20201029 18:20:33.745" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:33.728" endtime="20201029 18:20:33.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:33.748" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:33.746" endtime="20201029 18:20:33.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:20:33.751" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:20:33.749" endtime="20201029 18:20:33.751"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:33.726" endtime="20201029 18:20:33.752"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:33.722" endtime="20201029 18:20:33.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.721" endtime="20201029 18:20:33.753"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:20:33.757" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:20:33.756" endtime="20201029 18:20:33.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.754" endtime="20201029 18:20:33.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.720" endtime="20201029 18:20:33.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.719" endtime="20201029 18:20:33.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:33.759" endtime="20201029 18:20:33.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.718" endtime="20201029 18:20:33.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.716" endtime="20201029 18:20:33.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.693" endtime="20201029 18:20:33.761"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:33.770" endtime="20201029 18:20:39.894"></status>
</kw>
<msg timestamp="20201029 18:20:39.895" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:33.768" endtime="20201029 18:20:39.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:39.900" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:39.897" endtime="20201029 18:20:39.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:39.903" endtime="20201029 18:20:39.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.765" endtime="20201029 18:20:39.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.763" endtime="20201029 18:20:39.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:39.918" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201029 18:20:39.910" endtime="20201029 18:20:39.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:39.937" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:39.933" endtime="20201029 18:20:39.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:39.942" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:20:39.940" endtime="20201029 18:20:39.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.920" endtime="20201029 18:20:39.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:39.952" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:39.949" endtime="20201029 18:20:39.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:39.954" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:20:39.953" endtime="20201029 18:20:39.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.945" endtime="20201029 18:20:39.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:39.959" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:20:39.958" endtime="20201029 18:20:39.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:39.963" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 18:20:39.960" endtime="20201029 18:20:39.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.955" endtime="20201029 18:20:39.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:39.970" endtime="20201029 18:20:40.266"></status>
</kw>
<msg timestamp="20201029 18:20:40.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065401556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165811681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:39.969" endtime="20201029 18:20:40.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:40.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065401556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165811681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:40.270" endtime="20201029 18:20:40.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:40.278" endtime="20201029 18:20:40.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.966" endtime="20201029 18:20:40.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:39.964" endtime="20201029 18:20:40.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:20:40.285" level="INFO">${FILTERED} = [{'diff': 0.10041012499999999}, {'diff': 0.10008954200000003}, {'diff': 0.09956641699999996}, {'diff': 0.10001186099999998}, {'diff': 0.100010861}, {'diff': 0.10001087499999994}, {'diff': 0.1000108749...</msg>
<status status="PASS" starttime="20201029 18:20:40.282" endtime="20201029 18:20:40.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:40.289" level="INFO">${RESULT} = {'diff': [0.10041012499999999, 0.10008954200000003, 0.09956641699999996, 0.10001186099999998, 0.100010861, 0.10001087499999994, 0.10001087499999994, 0.100010861, 0.100010861, 0.1000108609999999, 0.100...</msg>
<status status="PASS" starttime="20201029 18:20:40.286" endtime="20201029 18:20:40.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:40.294" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:20:40.293" endtime="20201029 18:20:40.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:40.297" level="INFO">VALUE: [0.10041012499999999, 0.10008954200000003, 0.09956641699999996, 0.10001186099999998, 0.100010861, 0.10001087499999994, 0.10001087499999994, 0.100010861, 0.100010861, 0.1000108609999999, 0.10001086100000012, 0.10001084700000007, 0.10001091700000009, 0.10001088899999999, 0.10001086100000012, 0.10001086100000012, 0.10001087500000017, 0.10001086199999998, 0.1000108609999999, 0.1000108609999999, 0.10001088899999999, 0.10001077799999969, 0.10001080600000023, 0.1000108329999998, 0.10001079099999988, 0.1000108609999999, 0.10001082000000006, 0.1000108049999997, 0.10001080599999979, 0.10001081899999997, 0.10001081899999997, 0.10001079199999996, 0.10001083300000024, 0.10001081899999997, 0.10001080600000023, 0.10001080500000015, 0.10001081899999997, 0.1000108609999999, 0.10001079099999988, 0.10001080599999979, 0.10001080600000023, 0.10001081900000042, 0.1000108200000005, 0.10001080599999934, 0.1000108329999998, 0.10001079199999996, 0.1000108329999998, 0.10001080600000023, 0.10001079199999996, 0.10001080500000015, 0.10001080600000023]</msg>
<status status="PASS" starttime="20201029 18:20:40.295" endtime="20201029 18:20:40.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.290" endtime="20201029 18:20:40.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:33.762" endtime="20201029 18:20:40.299"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 18:20:33.690" endtime="20201029 18:20:40.299" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:40.306" endtime="20201029 18:20:40.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.305" endtime="20201029 18:20:40.326"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:40.340" endtime="20201029 18:20:40.353"></status>
</kw>
<msg timestamp="20201029 18:20:40.354" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:40.338" endtime="20201029 18:20:40.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:40.356" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:40.355" endtime="20201029 18:20:40.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:20:40.360" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:20:40.358" endtime="20201029 18:20:40.360"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:40.335" endtime="20201029 18:20:40.361"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:40.333" endtime="20201029 18:20:40.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.331" endtime="20201029 18:20:40.362"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:20:40.365" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:20:40.365" endtime="20201029 18:20:40.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.362" endtime="20201029 18:20:40.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.331" endtime="20201029 18:20:40.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.330" endtime="20201029 18:20:40.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:40.367" endtime="20201029 18:20:40.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.328" endtime="20201029 18:20:40.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.327" endtime="20201029 18:20:40.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.303" endtime="20201029 18:20:40.370"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:40.380" endtime="20201029 18:20:46.503"></status>
</kw>
<msg timestamp="20201029 18:20:46.504" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:40.377" endtime="20201029 18:20:46.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:46.510" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:46.507" endtime="20201029 18:20:46.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:46.512" endtime="20201029 18:20:46.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.374" endtime="20201029 18:20:46.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.372" endtime="20201029 18:20:46.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:46.524" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201029 18:20:46.520" endtime="20201029 18:20:46.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:46.533" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:46.531" endtime="20201029 18:20:46.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:46.538" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:20:46.536" endtime="20201029 18:20:46.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.526" endtime="20201029 18:20:46.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:46.548" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:46.546" endtime="20201029 18:20:46.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:46.553" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:20:46.551" endtime="20201029 18:20:46.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.541" endtime="20201029 18:20:46.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:46.564" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:20:46.561" endtime="20201029 18:20:46.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:46.568" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 18:20:46.566" endtime="20201029 18:20:46.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.556" endtime="20201029 18:20:46.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:46.584" endtime="20201029 18:20:46.886"></status>
</kw>
<msg timestamp="20201029 18:20:46.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064616625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165190611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:46.581" endtime="20201029 18:20:46.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:46.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064616625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165190611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:46.891" endtime="20201029 18:20:46.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:46.903" endtime="20201029 18:20:46.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.575" endtime="20201029 18:20:46.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.571" endtime="20201029 18:20:46.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:20:46.909" level="INFO">${FILTERED} = [{'diff': 0.10057398599999999}, {'diff': 0.10008452799999998}, {'diff': 0.09940823599999998}, {'diff': 0.10019904200000002}, {'diff': 0.10040158300000007}, {'diff': 0.09974111100000005}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201029 18:20:46.906" endtime="20201029 18:20:46.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:46.914" level="INFO">${RESULT} = {'diff': [0.10057398599999999, 0.10008452799999998, 0.09940823599999998, 0.10019904200000002, 0.10040158300000007, 0.09974111100000005, 0.100070361, 0.100007458, 0.09989899999999996, 0.099696804999999...</msg>
<status status="PASS" starttime="20201029 18:20:46.910" endtime="20201029 18:20:46.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:46.919" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:20:46.918" endtime="20201029 18:20:46.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:46.921" level="INFO">VALUE: [0.10057398599999999, 0.10008452799999998, 0.09940823599999998, 0.10019904200000002, 0.10040158300000007, 0.09974111100000005, 0.100070361, 0.100007458, 0.09989899999999996, 0.09969680499999989, 0.10001088899999999, 0.10001084700000007, 0.1000108609999999, 0.10001083300000002, 0.10001084700000007, 0.10001084700000007, 0.10001083300000002, 0.1000108609999999, 0.10001081899999997, 0.10001082000000006, 0.10001076399999986, 0.10001076399999986, 0.10001080599999979, 0.10001076400000031, 0.10001079099999988, 0.10001079100000032, 0.10001079099999988, 0.10001076399999986, 0.10001079199999996, 0.10001079199999996, 0.10001077800000013, 0.10001079199999996, 0.10001080599999979, 0.10001077700000005, 0.10001076300000022, 0.10001080500000015, 0.10001075000000004, 0.10001079199999996, 0.10001077800000013, 0.1000107920000004, 0.10001077799999969, 0.10001079199999996, 0.10001077799999969, 0.10001079099999988, 0.10001079099999988, 0.10001077799999969, 0.10001079199999996, 0.10001080600000023, 0.10001079199999996, 0.10001077800000058, 0.10001080500000015]</msg>
<status status="PASS" starttime="20201029 18:20:46.920" endtime="20201029 18:20:46.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:46.915" endtime="20201029 18:20:46.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:40.371" endtime="20201029 18:20:46.923"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 18:20:40.301" endtime="20201029 18:20:46.923" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:20:05.789" endtime="20201029 18:20:46.930"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f091rc</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 18:18:01.808" endtime="20201029 18:20:46.964"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_nucleo-f091rc</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
