<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 18:30:29.147" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:30:29.708" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:30:29.717" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:30:30.957" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:30:29.707" endtime="20201030 18:30:30.957"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.960" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:30:30.958" endtime="20201030 18:30:30.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.705" endtime="20201030 18:30:30.961"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:30.963" endtime="20201030 18:30:31.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.961" endtime="20201030 18:30:31.199"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.211" endtime="20201030 18:30:31.226"></status>
</kw>
<msg timestamp="20201030 18:30:31.227" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Succ...</msg>
<status status="PASS" starttime="20201030 18:30:31.210" endtime="20201030 18:30:31.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.229" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Succ...</msg>
<status status="PASS" starttime="20201030 18:30:31.228" endtime="20201030 18:30:31.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.233" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:31.231" endtime="20201030 18:30:31.233"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:31.207" endtime="20201030 18:30:31.234"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:31.205" endtime="20201030 18:30:31.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.204" endtime="20201030 18:30:31.235"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:31.239" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:31.238" endtime="20201030 18:30:31.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.235" endtime="20201030 18:30:31.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.203" endtime="20201030 18:30:31.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.202" endtime="20201030 18:30:31.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.241" endtime="20201030 18:30:31.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.201" endtime="20201030 18:30:31.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.243" endtime="20201030 18:30:31.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.199" endtime="20201030 18:30:31.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:29.704" endtime="20201030 18:30:31.246"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:31.252" endtime="20201030 18:30:31.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.250" endtime="20201030 18:30:31.272"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.285" endtime="20201030 18:30:31.298"></status>
</kw>
<msg timestamp="20201030 18:30:31.299" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:31.283" endtime="20201030 18:30:31.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.301" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:31.300" endtime="20201030 18:30:31.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.305" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:31.303" endtime="20201030 18:30:31.305"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:31.281" endtime="20201030 18:30:31.306"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:31.278" endtime="20201030 18:30:31.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.277" endtime="20201030 18:30:31.306"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:31.310" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:31.309" endtime="20201030 18:30:31.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.307" endtime="20201030 18:30:31.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.276" endtime="20201030 18:30:31.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.275" endtime="20201030 18:30:31.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.312" endtime="20201030 18:30:31.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.274" endtime="20201030 18:30:31.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.272" endtime="20201030 18:30:31.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.249" endtime="20201030 18:30:31.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.322" endtime="20201030 18:30:31.332"></status>
</kw>
<msg timestamp="20201030 18:30:31.332" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:31.320" endtime="20201030 18:30:31.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.335" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:31.333" endtime="20201030 18:30:31.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.336" endtime="20201030 18:30:31.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.317" endtime="20201030 18:30:31.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.315" endtime="20201030 18:30:31.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.343" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 18:30:31.342" endtime="20201030 18:30:31.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.346" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201030 18:30:31.345" endtime="20201030 18:30:31.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.339" endtime="20201030 18:30:31.347"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:31.246" endtime="20201030 18:30:31.348" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:30:29.261" endtime="20201030 18:30:31.350"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.407" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:30:31.415" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:30:32.562" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:30:31.406" endtime="20201030 18:30:32.563"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.565" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:30:32.564" endtime="20201030 18:30:32.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.404" endtime="20201030 18:30:32.566"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:32.568" endtime="20201030 18:30:32.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.567" endtime="20201030 18:30:32.843"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.855" endtime="20201030 18:30:32.869"></status>
</kw>
<msg timestamp="20201030 18:30:32.869" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [': This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success...</msg>
<status status="PASS" starttime="20201030 18:30:32.853" endtime="20201030 18:30:32.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.872" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [': This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success...</msg>
<status status="PASS" starttime="20201030 18:30:32.870" endtime="20201030 18:30:32.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.875" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:32.873" endtime="20201030 18:30:32.875"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:32.851" endtime="20201030 18:30:32.876"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:32.849" endtime="20201030 18:30:32.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.848" endtime="20201030 18:30:32.877"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:32.880" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:32.880" endtime="20201030 18:30:32.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.878" endtime="20201030 18:30:32.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.847" endtime="20201030 18:30:32.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.846" endtime="20201030 18:30:32.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.882" endtime="20201030 18:30:32.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.845" endtime="20201030 18:30:32.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.885" endtime="20201030 18:30:32.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.844" endtime="20201030 18:30:32.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.403" endtime="20201030 18:30:32.887"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:32.894" endtime="20201030 18:30:32.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.891" endtime="20201030 18:30:32.914"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.926" endtime="20201030 18:30:32.941"></status>
</kw>
<msg timestamp="20201030 18:30:32.942" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:32.925" endtime="20201030 18:30:32.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.944" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:32.943" endtime="20201030 18:30:32.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.947" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:32.945" endtime="20201030 18:30:32.948"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:32.922" endtime="20201030 18:30:32.948"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:32.920" endtime="20201030 18:30:32.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.919" endtime="20201030 18:30:32.949"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:32.953" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:32.952" endtime="20201030 18:30:32.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.950" endtime="20201030 18:30:32.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.918" endtime="20201030 18:30:32.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.917" endtime="20201030 18:30:32.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.954" endtime="20201030 18:30:32.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.916" endtime="20201030 18:30:32.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.914" endtime="20201030 18:30:32.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.890" endtime="20201030 18:30:32.957"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.965" endtime="20201030 18:30:32.976"></status>
</kw>
<msg timestamp="20201030 18:30:32.977" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:32.964" endtime="20201030 18:30:32.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:32.979" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:32.978" endtime="20201030 18:30:32.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.980" endtime="20201030 18:30:32.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.961" endtime="20201030 18:30:32.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.960" endtime="20201030 18:30:32.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:32.989" endtime="20201030 18:30:33.278"></status>
</kw>
<msg timestamp="20201030 18:30:33.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062703625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062704111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:32.988" endtime="20201030 18:30:33.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062703625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062704111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:33.283" endtime="20201030 18:30:33.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.291" endtime="20201030 18:30:33.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.985" endtime="20201030 18:30:33.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.983" endtime="20201030 18:30:33.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:33.317" level="INFO">${debug} = {'time': [0.062703625, 0.062704111, 0.062715625, 0.062716167, 0.062728958, 0.0627295, 0.062742472, 0.062742944, 0.062754764, 0.06275525, 0.062766194, 0.062766736, 0.062779542, 0.062780028, 0.062791111...</msg>
<status status="PASS" starttime="20201030 18:30:33.294" endtime="20201030 18:30:33.318"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.319" endtime="20201030 18:30:33.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.324" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:33.323" endtime="20201030 18:30:33.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.328" level="INFO">VALUE: {'time': [0.062703625, 0.062704111, 0.062715625, 0.062716167, 0.062728958, 0.0627295, 0.062742472, 0.062742944, 0.062754764, 0.06275525, 0.062766194, 0.062766736, 0.062779542, 0.062780028, 0.062791111, 0.062791653, 0.062800806, 0.062801347, 0.062814736, 0.062815222, 0.062825153, 0.062825639, 0.062836292, 0.062836833, 0.062849472, 0.062850014, 0.062860917, 0.062861458, 0.062873958, 0.0628745, 0.062887444, 0.062887986, 0.062900069, 0.062900542, 0.062910181, 0.062910667, 0.062921903, 0.062922444, 0.06293525, 0.062935736, 0.062949014, 0.062949556, 0.062959583, 0.062960069, 0.062969264, 0.062969806, 0.062980403, 0.062980944, 0.062990833, 0.062991319, 0.063001403, 0.063001889, 0.063011097, 0.063011583, 0.063024569, 0.063025056, 0.063038472, 0.063039014, 0.063052542, 0.063053083, 0.063064139, 0.063064625, 0.063074833, 0.063075375, 0.063087889, 0.063088375, 0.063097708, 0.06309825, 0.063110764, 0.06311125, 0.063122639, 0.063123181, 0.063136111, 0.063136653, 0.063148431, 0.063148972, 0.063161319, 0.063161861, 0.063172472, 0.063173014, 0.063184347, 0.063184889, 0.063197542, 0.063198083, 0.063209708, 0.06321025, 0.063220569, 0.063221056, 0.063234194, 0.063234681, 0.063246944, 0.063247486, 0.063257361, 0.063257903, 0.063270403, 0.063270944, 0.063283875, 0.063284417, 0.063297944, 0.063298486], 'sourcediff': [0, 4.86000000007869e-07, 1.1513999999990254e-05, 5.420000000061487e-07, 1.279099999999811e-05, 5.419999999922709e-07, 1.2971999999999984e-05, 4.720000000013602e-07, 1.18200000000096e-05, 4.859999999939912e-07, 1.0943999999998844e-05, 5.420000000061487e-07, 1.2805999999990214e-05, 4.86000000007869e-07, 1.1082999999995069e-05, 5.420000000061487e-07, 9.152999999997857e-06, 5.409999999927972e-07, 1.3389000000002538e-05, 4.86000000007869e-07, 9.930999999990808e-06, 4.86000000007869e-07, 1.0652999999999357e-05, 5.409999999927972e-07, 1.2639000000008727e-05, 5.419999999922709e-07, 1.0903000000006546e-05, 5.409999999927972e-07, 1.2499999999998623e-05, 5.420000000061487e-07, 1.2944000000000844e-05, 5.420000000061487e-07, 1.2082999999996069e-05, 4.7300000000083386e-07, 9.638999999991849e-06, 4.86000000007869e-07, 1.1235999999997803e-05, 5.409999999927972e-07, 1.2806000000004092e-05, 4.86000000007869e-07, 1.3277999999991574e-05, 5.420000000061487e-07, 1.002699999999579e-05, 4.859999999939912e-07, 9.195000000003506e-06, 5.420000000061487e-07, 1.0597000000001078e-05, 5.409999999927972e-07, 9.888999999999037e-06, 4.86000000007869e-07, 1.0083999999993543e-05, 4.86000000007869e-07, 9.207999999996663e-06, 4.859999999939912e-07, 1.2986000000006492e-05, 4.869999999934649e-07, 1.3416000000002204e-05, 5.420000000061487e-07, 1.3527999999998763e-05, 5.409999999927972e-07, 1.105600000000928e-05, 4.859999999939912e-07, 1.0207999999997663e-05, 5.420000000061487e-07, 1.2513999999991254e-05, 4.86000000007869e-07, 9.333000000000258e-06, 5.419999999922709e-07, 1.2514000000005132e-05, 4.859999999939912e-07, 1.1389000000000538e-05, 5.420000000061487e-07, 1.2929999999994335e-05, 5.420000000061487e-07, 1.1778000000003952e-05, 5.409999999927972e-07, 1.2346999999995889e-05, 5.420000000061487e-07, 1.0610999999993709e-05, 5.420000000061487e-07, 1.1333000000002258e-05, 5.419999999922709e-07, 1.2653000000001358e-05, 5.41000000006675e-07, 1.1625000000001218e-05, 5.419999999922709e-07, 1.0319000000008627e-05, 4.869999999934649e-07, 1.3137999999995875e-05, 4.870000000073427e-07, 1.226299999999847e-05, 5.420000000061487e-07, 9.874999999992529e-06, 5.420000000061487e-07, 1.2499999999998623e-05, 5.409999999927972e-07, 1.2931000000007686e-05, 5.419999999922709e-07, 1.352699999999929e-05, 5.420000000061487e-07], 'source_diff': [0, 4.86000000007869e-07, 1.1513999999990254e-05, 5.420000000061487e-07, 1.279099999999811e-05, 5.419999999922709e-07, 1.2971999999999984e-05, 4.720000000013602e-07, 1.18200000000096e-05, 4.859999999939912e-07, 1.0943999999998844e-05, 5.420000000061487e-07, 1.2805999999990214e-05, 4.86000000007869e-07, 1.1082999999995069e-05, 5.420000000061487e-07, 9.152999999997857e-06, 5.409999999927972e-07, 1.3389000000002538e-05, 4.86000000007869e-07, 9.930999999990808e-06, 4.86000000007869e-07, 1.0652999999999357e-05, 5.409999999927972e-07, 1.2639000000008727e-05, 5.419999999922709e-07, 1.0903000000006546e-05, 5.409999999927972e-07, 1.2499999999998623e-05, 5.420000000061487e-07, 1.2944000000000844e-05, 5.420000000061487e-07, 1.2082999999996069e-05, 4.7300000000083386e-07, 9.638999999991849e-06, 4.86000000007869e-07, 1.1235999999997803e-05, 5.409999999927972e-07, 1.2806000000004092e-05, 4.86000000007869e-07, 1.3277999999991574e-05, 5.420000000061487e-07, 1.002699999999579e-05, 4.859999999939912e-07, 9.195000000003506e-06, 5.420000000061487e-07, 1.0597000000001078e-05, 5.409999999927972e-07, 9.888999999999037e-06, 4.86000000007869e-07, 1.0083999999993543e-05, 4.86000000007869e-07, 9.207999999996663e-06, 4.859999999939912e-07, 1.2986000000006492e-05, 4.869999999934649e-07, 1.3416000000002204e-05, 5.420000000061487e-07, 1.3527999999998763e-05, 5.409999999927972e-07, 1.105600000000928e-05, 4.859999999939912e-07, 1.0207999999997663e-05, 5.420000000061487e-07, 1.2513999999991254e-05, 4.86000000007869e-07, 9.333000000000258e-06, 5.419999999922709e-07, 1.2514000000005132e-05, 4.859999999939912e-07, 1.1389000000000538e-05, 5.420000000061487e-07, 1.2929999999994335e-05, 5.420000000061487e-07, 1.1778000000003952e-05, 5.409999999927972e-07, 1.2346999999995889e-05, 5.420000000061487e-07, 1.0610999999993709e-05, 5.420000000061487e-07, 1.1333000000002258e-05, 5.419999999922709e-07, 1.2653000000001358e-05, 5.41000000006675e-07, 1.1625000000001218e-05, 5.419999999922709e-07, 1.0319000000008627e-05, 4.869999999934649e-07, 1.3137999999995875e-05, 4.870000000073427e-07, 1.226299999999847e-05, 5.420000000061487e-07, 9.874999999992529e-06, 5.420000000061487e-07, 1.2499999999998623e-05, 5.409999999927972e-07, 1.2931000000007686e-05, 5.419999999922709e-07, 1.352699999999929e-05, 5.420000000061487e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:30:33.325" endtime="20201030 18:30:33.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.321" endtime="20201030 18:30:33.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:33.333" level="INFO">${RESULT} = [{'diff': 4.86000000007869e-07}, {'diff': 5.420000000061487e-07}, {'diff': 5.419999999922709e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.859999999939912e-07}, {'diff': 5.420000000061487e-07}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:33.330" endtime="20201030 18:30:33.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:33.338" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.86000000007869e-07, 5.420000000061487e-07, 5.419999999922709e-07, 4.720000000013602e-07, 4.859999999939912e-07, 5.420000000061487e-07, 4.86000000007869e-07, 5.420000000061487e-07, 5.409999...</msg>
<status status="PASS" starttime="20201030 18:30:33.334" endtime="20201030 18:30:33.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.342" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:33.341" endtime="20201030 18:30:33.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.345" level="INFO">VALUE: [4.86000000007869e-07, 5.420000000061487e-07, 5.419999999922709e-07, 4.720000000013602e-07, 4.859999999939912e-07, 5.420000000061487e-07, 4.86000000007869e-07, 5.420000000061487e-07, 5.409999999927972e-07, 4.86000000007869e-07, 4.86000000007869e-07, 5.409999999927972e-07, 5.419999999922709e-07, 5.409999999927972e-07, 5.420000000061487e-07, 5.420000000061487e-07, 4.7300000000083386e-07, 4.86000000007869e-07, 5.409999999927972e-07, 4.86000000007869e-07, 5.420000000061487e-07, 4.859999999939912e-07, 5.420000000061487e-07, 5.409999999927972e-07, 4.86000000007869e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.869999999934649e-07, 5.420000000061487e-07, 5.409999999927972e-07, 4.859999999939912e-07, 5.420000000061487e-07, 4.86000000007869e-07, 5.419999999922709e-07, 4.859999999939912e-07, 5.420000000061487e-07, 5.420000000061487e-07, 5.409999999927972e-07, 5.420000000061487e-07, 5.420000000061487e-07, 5.419999999922709e-07, 5.41000000006675e-07, 5.419999999922709e-07, 4.869999999934649e-07, 4.870000000073427e-07, 5.420000000061487e-07, 5.420000000061487e-07, 5.409999999927972e-07, 5.419999999922709e-07, 5.420000000061487e-07]</msg>
<status status="PASS" starttime="20201030 18:30:33.343" endtime="20201030 18:30:33.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.339" endtime="20201030 18:30:33.345"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:33.349" endtime="20201030 18:30:33.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.347" endtime="20201030 18:30:33.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.346" endtime="20201030 18:30:33.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.958" endtime="20201030 18:30:33.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.958" endtime="20201030 18:30:33.370"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.377" endtime="20201030 18:30:33.387"></status>
</kw>
<msg timestamp="20201030 18:30:33.388" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:33.376" endtime="20201030 18:30:33.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.390" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:33.389" endtime="20201030 18:30:33.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.391" endtime="20201030 18:30:33.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.373" endtime="20201030 18:30:33.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.372" endtime="20201030 18:30:33.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.400" endtime="20201030 18:30:33.687"></status>
</kw>
<msg timestamp="20201030 18:30:33.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018351472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018352014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:33.398" endtime="20201030 18:30:33.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018351472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018352014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:33.691" endtime="20201030 18:30:33.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.700" endtime="20201030 18:30:33.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.396" endtime="20201030 18:30:33.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.394" endtime="20201030 18:30:33.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:33.727" level="INFO">${debug} = {'time': [0.018351472, 0.018352014, 0.018363083, 0.018363556, 0.018375972, 0.018376458, 0.018385792, 0.018386333, 0.018397958, 0.0183985, 0.018409417, 0.018409903, 0.018419125, 0.018419597, 0.01843256...</msg>
<status status="PASS" starttime="20201030 18:30:33.703" endtime="20201030 18:30:33.728"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.728" endtime="20201030 18:30:33.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.733" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:33.732" endtime="20201030 18:30:33.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.737" level="INFO">VALUE: {'time': [0.018351472, 0.018352014, 0.018363083, 0.018363556, 0.018375972, 0.018376458, 0.018385792, 0.018386333, 0.018397958, 0.0183985, 0.018409417, 0.018409903, 0.018419125, 0.018419597, 0.018432569, 0.018433111, 0.018442847, 0.018443389, 0.018455444, 0.018455986, 0.018469222, 0.018469764, 0.018480361, 0.018480903, 0.0184905, 0.018491042, 0.018502222, 0.018502764, 0.018515319, 0.018515792, 0.018527431, 0.018527972, 0.01853875, 0.018539222, 0.018550319, 0.018550806, 0.018563069, 0.018563611, 0.018574653, 0.018575194, 0.018584778, 0.018585319, 0.018596806, 0.018597292, 0.018607069, 0.018607611, 0.018619833, 0.018620319, 0.018629722, 0.018630194, 0.018643722, 0.018644264, 0.018655458, 0.018655944, 0.018665292, 0.018665778, 0.018675722, 0.018676208, 0.018689639, 0.018690125, 0.01869975, 0.018700292, 0.018712056, 0.018712597, 0.018724681, 0.018725167, 0.018734667, 0.018735139, 0.018744194, 0.018744736, 0.018756375, 0.018756861, 0.018767069, 0.018767611, 0.018778375, 0.018778861, 0.018792292, 0.018792778, 0.018805764, 0.018806306, 0.018816625, 0.018817111, 0.018829806, 0.018830347, 0.018840083, 0.018840569, 0.018851222, 0.018851764, 0.018861931, 0.018862472, 0.018873667, 0.018874208, 0.018884083, 0.018884625, 0.018897556, 0.018898097, 0.018908125, 0.018908667, 0.018921542, 0.018922014], 'sourcediff': [0, 5.419999999992098e-07, 1.1068999999998969e-05, 4.7300000000083386e-07, 1.2416000000001204e-05, 4.859999999974607e-07, 9.334000000003201e-06, 5.409999999997361e-07, 1.1624999999997748e-05, 5.420000000026792e-07, 1.0916999999999177e-05, 4.859999999974607e-07, 9.222000000003172e-06, 4.7199999999789077e-07, 1.2971999999999984e-05, 5.419999999992098e-07, 9.735999999999773e-06, 5.420000000026792e-07, 1.2055000000000399e-05, 5.419999999992098e-07, 1.3235999999999803e-05, 5.419999999992098e-07, 1.0597000000001078e-05, 5.419999999992098e-07, 9.597000000000078e-06, 5.419999999992098e-07, 1.1179999999999524e-05, 5.420000000026792e-07, 1.255499999999743e-05, 4.7300000000083386e-07, 1.1639000000000788e-05, 5.409999999997361e-07, 1.0777999999999482e-05, 4.720000000013602e-07, 1.1096999999998108e-05, 4.870000000004038e-07, 1.2263000000001939e-05, 5.419999999992098e-07, 1.1041999999999302e-05, 5.409999999997361e-07, 9.583999999999981e-06, 5.409999999997361e-07, 1.1487000000000996e-05, 4.860000000009301e-07, 9.776999999999009e-06, 5.419999999992098e-07, 1.2221999999999233e-05, 4.860000000009301e-07, 9.403000000001577e-06, 4.7199999999789077e-07, 1.3528000000002233e-05, 5.419999999992098e-07, 1.1193999999999094e-05, 4.860000000009301e-07, 9.347999999999301e-06, 4.860000000009301e-07, 9.943999999997843e-06, 4.860000000009301e-07, 1.3431000000001247e-05, 4.859999999974607e-07, 9.625000000002687e-06, 5.419999999992098e-07, 1.1764000000000913e-05, 5.409999999997361e-07, 1.2083999999999012e-05, 4.860000000009301e-07, 9.499999999999093e-06, 4.720000000013602e-07, 9.054999999997398e-06, 5.420000000026792e-07, 1.1638999999997318e-05, 4.860000000009301e-07, 1.0208000000001133e-05, 5.419999999992098e-07, 1.0763999999999913e-05, 4.860000000009301e-07, 1.3430999999997778e-05, 4.860000000009301e-07, 1.2985999999999553e-05, 5.419999999992098e-07, 1.0319000000001688e-05, 4.860000000009301e-07, 1.2695000000000067e-05, 5.409999999997361e-07, 9.735999999999773e-06, 4.860000000009301e-07, 1.0652999999999357e-05, 5.419999999992098e-07, 1.0166999999998427e-05, 5.410000000032056e-07, 1.1194999999998567e-05, 5.409999999997361e-07, 9.874999999999468e-06, 5.419999999992098e-07, 1.2931000000000747e-05, 5.409999999997361e-07, 1.0028000000002202e-05, 5.419999999992098e-07, 1.2874999999998998e-05, 4.720000000013602e-07], 'source_diff': [0, 5.419999999992098e-07, 1.1068999999998969e-05, 4.7300000000083386e-07, 1.2416000000001204e-05, 4.859999999974607e-07, 9.334000000003201e-06, 5.409999999997361e-07, 1.1624999999997748e-05, 5.420000000026792e-07, 1.0916999999999177e-05, 4.859999999974607e-07, 9.222000000003172e-06, 4.7199999999789077e-07, 1.2971999999999984e-05, 5.419999999992098e-07, 9.735999999999773e-06, 5.420000000026792e-07, 1.2055000000000399e-05, 5.419999999992098e-07, 1.3235999999999803e-05, 5.419999999992098e-07, 1.0597000000001078e-05, 5.419999999992098e-07, 9.597000000000078e-06, 5.419999999992098e-07, 1.1179999999999524e-05, 5.420000000026792e-07, 1.255499999999743e-05, 4.7300000000083386e-07, 1.1639000000000788e-05, 5.409999999997361e-07, 1.0777999999999482e-05, 4.720000000013602e-07, 1.1096999999998108e-05, 4.870000000004038e-07, 1.2263000000001939e-05, 5.419999999992098e-07, 1.1041999999999302e-05, 5.409999999997361e-07, 9.583999999999981e-06, 5.409999999997361e-07, 1.1487000000000996e-05, 4.860000000009301e-07, 9.776999999999009e-06, 5.419999999992098e-07, 1.2221999999999233e-05, 4.860000000009301e-07, 9.403000000001577e-06, 4.7199999999789077e-07, 1.3528000000002233e-05, 5.419999999992098e-07, 1.1193999999999094e-05, 4.860000000009301e-07, 9.347999999999301e-06, 4.860000000009301e-07, 9.943999999997843e-06, 4.860000000009301e-07, 1.3431000000001247e-05, 4.859999999974607e-07, 9.625000000002687e-06, 5.419999999992098e-07, 1.1764000000000913e-05, 5.409999999997361e-07, 1.2083999999999012e-05, 4.860000000009301e-07, 9.499999999999093e-06, 4.720000000013602e-07, 9.054999999997398e-06, 5.420000000026792e-07, 1.1638999999997318e-05, 4.860000000009301e-07, 1.0208000000001133e-05, 5.419999999992098e-07, 1.0763999999999913e-05, 4.860000000009301e-07, 1.3430999999997778e-05, 4.860000000009301e-07, 1.2985999999999553e-05, 5.419999999992098e-07, 1.0319000000001688e-05, 4.860000000009301e-07, 1.2695000000000067e-05, 5.409999999997361e-07, 9.735999999999773e-06, 4.860000000009301e-07, 1.0652999999999357e-05, 5.419999999992098e-07, 1.0166999999998427e-05, 5.410000000032056e-07, 1.1194999999998567e-05, 5.409999999997361e-07, 9.874999999999468e-06, 5.419999999992098e-07, 1.2931000000000747e-05, 5.409999999997361e-07, 1.0028000000002202e-05, 5.419999999992098e-07, 1.2874999999998998e-05, 4.720000000013602e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:30:33.734" endtime="20201030 18:30:33.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.730" endtime="20201030 18:30:33.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:33.743" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.859999999974607e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.420000000026792e-07}, {'diff': 4.859999999974607e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:30:33.740" endtime="20201030 18:30:33.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:33.747" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 5.409999999997361e-07, 5.420000000026792e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 5.42...</msg>
<status status="PASS" starttime="20201030 18:30:33.744" endtime="20201030 18:30:33.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.752" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:33.751" endtime="20201030 18:30:33.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.754" level="INFO">VALUE: [5.419999999992098e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 5.409999999997361e-07, 5.420000000026792e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.870000000004038e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.720000000013602e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.410000000032056e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:30:33.753" endtime="20201030 18:30:33.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.748" endtime="20201030 18:30:33.756"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:33.760" endtime="20201030 18:30:33.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.758" endtime="20201030 18:30:33.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.757" endtime="20201030 18:30:33.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.370" endtime="20201030 18:30:33.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.370" endtime="20201030 18:30:33.781"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.793" endtime="20201030 18:30:33.804"></status>
</kw>
<msg timestamp="20201030 18:30:33.804" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:33.791" endtime="20201030 18:30:33.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.807" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:33.806" endtime="20201030 18:30:33.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.808" endtime="20201030 18:30:33.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.787" endtime="20201030 18:30:33.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.784" endtime="20201030 18:30:33.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.819" endtime="20201030 18:30:34.107"></status>
</kw>
<msg timestamp="20201030 18:30:34.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023742347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023742833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:33.818" endtime="20201030 18:30:34.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023742347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023742833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:34.112" endtime="20201030 18:30:34.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.120" endtime="20201030 18:30:34.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.814" endtime="20201030 18:30:34.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.812" endtime="20201030 18:30:34.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:34.147" level="INFO">${debug} = {'time': [0.023742347, 0.023742833, 0.023753514, 0.023753986, 0.023767, 0.023767472, 0.023781028, 0.023781569, 0.023791458, 0.023791944, 0.023803625, 0.023804167, 0.023815792, 0.023816333, 0.023827806...</msg>
<status status="PASS" starttime="20201030 18:30:34.124" endtime="20201030 18:30:34.148"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.149" endtime="20201030 18:30:34.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.154" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:34.153" endtime="20201030 18:30:34.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.158" level="INFO">VALUE: {'time': [0.023742347, 0.023742833, 0.023753514, 0.023753986, 0.023767, 0.023767472, 0.023781028, 0.023781569, 0.023791458, 0.023791944, 0.023803625, 0.023804167, 0.023815792, 0.023816333, 0.023827806, 0.023828347, 0.023837347, 0.023837889, 0.023851264, 0.023851806, 0.023862611, 0.023863083, 0.023876042, 0.023876583, 0.023888944, 0.023889486, 0.023902708, 0.02390325, 0.023914292, 0.023914833, 0.023926333, 0.023926819, 0.023937764, 0.023938306, 0.023948917, 0.023949403, 0.023959472, 0.023960014, 0.023970792, 0.023971264, 0.023982347, 0.023982889, 0.023993222, 0.023993708, 0.02400275, 0.024003292, 0.024014333, 0.024014875, 0.024026931, 0.024027472, 0.024040417, 0.024040958, 0.02405025, 0.024050792, 0.024063583, 0.024064125, 0.024076486, 0.024077028, 0.024086903, 0.024087444, 0.024099653, 0.024100194, 0.024112861, 0.024113347, 0.024122986, 0.024123472, 0.024132944, 0.024133486, 0.024142639, 0.024143181, 0.024154806, 0.024155347, 0.024165097, 0.024165569, 0.024179, 0.024179542, 0.024190875, 0.024191417, 0.0242045, 0.024205042, 0.024214764, 0.024215306, 0.024225389, 0.024225861, 0.024239181, 0.024239653, 0.024252167, 0.024252653, 0.024266208, 0.02426675, 0.024277653, 0.024278194, 0.024289833, 0.024290319, 0.024300167, 0.024300639, 0.024313875, 0.024314361, 0.024327347, 0.024327889], 'sourcediff': [0, 4.860000000009301e-07, 1.0680999999998497e-05, 4.720000000013602e-07, 1.3013999999998693e-05, 4.720000000013602e-07, 1.3555999999997903e-05, 5.409999999997361e-07, 9.889000000002507e-06, 4.859999999974607e-07, 1.1680999999999497e-05, 5.420000000026792e-07, 1.1624999999997748e-05, 5.409999999997361e-07, 1.1473000000001427e-05, 5.409999999997361e-07, 8.999999999998592e-06, 5.420000000026792e-07, 1.3374999999999498e-05, 5.419999999992098e-07, 1.0804999999999149e-05, 4.720000000013602e-07, 1.2958999999999887e-05, 5.409999999997361e-07, 1.2360999999998928e-05, 5.420000000026792e-07, 1.3222000000000234e-05, 5.419999999992098e-07, 1.1041999999999302e-05, 5.409999999997361e-07, 1.1500000000001093e-05, 4.859999999974607e-07, 1.0945000000001787e-05, 5.419999999992098e-07, 1.0611000000000648e-05, 4.860000000009301e-07, 1.0068999999997968e-05, 5.420000000026792e-07, 1.0777999999999482e-05, 4.7199999999789077e-07, 1.1083000000002008e-05, 5.419999999992098e-07, 1.0333000000001258e-05, 4.859999999974607e-07, 9.042000000000772e-06, 5.419999999992098e-07, 1.1040999999999829e-05, 5.420000000026792e-07, 1.2055999999999872e-05, 5.409999999997361e-07, 1.2945000000000317e-05, 5.409999999997361e-07, 9.291999999997552e-06, 5.420000000026792e-07, 1.279099999999811e-05, 5.419999999992098e-07, 1.2361000000002398e-05, 5.419999999992098e-07, 9.874999999999468e-06, 5.409999999997361e-07, 1.2208999999999137e-05, 5.409999999997361e-07, 1.2667000000000928e-05, 4.860000000009301e-07, 9.638999999998787e-06, 4.860000000009301e-07, 9.471999999999953e-06, 5.419999999992098e-07, 9.153000000001327e-06, 5.419999999992098e-07, 1.1625000000001218e-05, 5.409999999997361e-07, 9.749999999999343e-06, 4.720000000013602e-07, 1.3430999999997778e-05, 5.419999999992098e-07, 1.1333000000002258e-05, 5.419999999992098e-07, 1.3083000000000539e-05, 5.419999999992098e-07, 9.722000000000203e-06, 5.419999999992098e-07, 1.0083000000001008e-05, 4.720000000013602e-07, 1.3319999999997223e-05, 4.720000000013602e-07, 1.2514000000001663e-05, 4.859999999974607e-07, 1.3555000000001899e-05, 5.419999999992098e-07, 1.0902999999999607e-05, 5.409999999997361e-07, 1.1639000000000788e-05, 4.860000000009301e-07, 9.847999999999801e-06, 4.7199999999789077e-07, 1.3235999999999803e-05, 4.860000000009301e-07, 1.2985999999999553e-05, 5.419999999992098e-07], 'source_diff': [0, 4.860000000009301e-07, 1.0680999999998497e-05, 4.720000000013602e-07, 1.3013999999998693e-05, 4.720000000013602e-07, 1.3555999999997903e-05, 5.409999999997361e-07, 9.889000000002507e-06, 4.859999999974607e-07, 1.1680999999999497e-05, 5.420000000026792e-07, 1.1624999999997748e-05, 5.409999999997361e-07, 1.1473000000001427e-05, 5.409999999997361e-07, 8.999999999998592e-06, 5.420000000026792e-07, 1.3374999999999498e-05, 5.419999999992098e-07, 1.0804999999999149e-05, 4.720000000013602e-07, 1.2958999999999887e-05, 5.409999999997361e-07, 1.2360999999998928e-05, 5.420000000026792e-07, 1.3222000000000234e-05, 5.419999999992098e-07, 1.1041999999999302e-05, 5.409999999997361e-07, 1.1500000000001093e-05, 4.859999999974607e-07, 1.0945000000001787e-05, 5.419999999992098e-07, 1.0611000000000648e-05, 4.860000000009301e-07, 1.0068999999997968e-05, 5.420000000026792e-07, 1.0777999999999482e-05, 4.7199999999789077e-07, 1.1083000000002008e-05, 5.419999999992098e-07, 1.0333000000001258e-05, 4.859999999974607e-07, 9.042000000000772e-06, 5.419999999992098e-07, 1.1040999999999829e-05, 5.420000000026792e-07, 1.2055999999999872e-05, 5.409999999997361e-07, 1.2945000000000317e-05, 5.409999999997361e-07, 9.291999999997552e-06, 5.420000000026792e-07, 1.279099999999811e-05, 5.419999999992098e-07, 1.2361000000002398e-05, 5.419999999992098e-07, 9.874999999999468e-06, 5.409999999997361e-07, 1.2208999999999137e-05, 5.409999999997361e-07, 1.2667000000000928e-05, 4.860000000009301e-07, 9.638999999998787e-06, 4.860000000009301e-07, 9.471999999999953e-06, 5.419999999992098e-07, 9.153000000001327e-06, 5.419999999992098e-07, 1.1625000000001218e-05, 5.409999999997361e-07, 9.749999999999343e-06, 4.720000000013602e-07, 1.3430999999997778e-05, 5.419999999992098e-07, 1.1333000000002258e-05, 5.419999999992098e-07, 1.3083000000000539e-05, 5.419999999992098e-07, 9.722000000000203e-06, 5.419999999992098e-07, 1.0083000000001008e-05, 4.720000000013602e-07, 1.3319999999997223e-05, 4.720000000013602e-07, 1.2514000000001663e-05, 4.859999999974607e-07, 1.3555000000001899e-05, 5.419999999992098e-07, 1.0902999999999607e-05, 5.409999999997361e-07, 1.1639000000000788e-05, 4.860000000009301e-07, 9.847999999999801e-06, 4.7199999999789077e-07, 1.3235999999999803e-05, 4.860000000009301e-07, 1.2985999999999553e-05, 5.419999999992098e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:30:34.155" endtime="20201030 18:30:34.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.151" endtime="20201030 18:30:34.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:34.165" level="INFO">${RESULT} = [{'diff': 4.860000000009301e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 5.409999999997361e-07}, {'diff': 4.859999999974607e-07}, {'diff': 5.420000000026792e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:30:34.160" endtime="20201030 18:30:34.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:34.170" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.4200...</msg>
<status status="PASS" starttime="20201030 18:30:34.166" endtime="20201030 18:30:34.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.176" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:34.174" endtime="20201030 18:30:34.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.180" level="INFO">VALUE: [4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.420000000026792e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201030 18:30:34.178" endtime="20201030 18:30:34.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.171" endtime="20201030 18:30:34.181"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:34.187" endtime="20201030 18:30:34.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.185" endtime="20201030 18:30:34.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.183" endtime="20201030 18:30:34.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.782" endtime="20201030 18:30:34.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.781" endtime="20201030 18:30:34.208"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.217" endtime="20201030 18:30:34.228"></status>
</kw>
<msg timestamp="20201030 18:30:34.228" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:34.215" endtime="20201030 18:30:34.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.231" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:34.229" endtime="20201030 18:30:34.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.232" endtime="20201030 18:30:34.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.212" endtime="20201030 18:30:34.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.210" endtime="20201030 18:30:34.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.243" endtime="20201030 18:30:34.528"></status>
</kw>
<msg timestamp="20201030 18:30:34.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019841194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019841736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:34.241" endtime="20201030 18:30:34.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019841194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019841736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:34.533" endtime="20201030 18:30:34.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.541" endtime="20201030 18:30:34.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.238" endtime="20201030 18:30:34.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.236" endtime="20201030 18:30:34.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:34.569" level="INFO">${debug} = {'time': [0.019841194, 0.019841736, 0.019850736, 0.019851278, 0.019862319, 0.019862861, 0.019876111, 0.019876583, 0.019888278, 0.019888764, 0.019900569, 0.019901111, 0.019913917, 0.019914403, 0.019927...</msg>
<status status="PASS" starttime="20201030 18:30:34.545" endtime="20201030 18:30:34.569"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.570" endtime="20201030 18:30:34.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.575" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:34.574" endtime="20201030 18:30:34.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.579" level="INFO">VALUE: {'time': [0.019841194, 0.019841736, 0.019850736, 0.019851278, 0.019862319, 0.019862861, 0.019876111, 0.019876583, 0.019888278, 0.019888764, 0.019900569, 0.019901111, 0.019913917, 0.019914403, 0.019927972, 0.019928514, 0.019941903, 0.019942389, 0.019953472, 0.019954014, 0.019963167, 0.019963708, 0.019973722, 0.019974264, 0.019987792, 0.019988333, 0.019998208, 0.01999875, 0.020008917, 0.020009458, 0.020020111, 0.020020583, 0.020030958, 0.020031431, 0.020042806, 0.020043292, 0.020056722, 0.020057264, 0.020067431, 0.020067972, 0.020078569, 0.020079111, 0.020091958, 0.020092431, 0.020102903, 0.020103444, 0.020116097, 0.020116639, 0.020127972, 0.020128514, 0.02014175, 0.020142292, 0.020152167, 0.020152708, 0.020162014, 0.0201625, 0.020175333, 0.020175875, 0.020187944, 0.020188486, 0.020200278, 0.02020075, 0.020213875, 0.020214417, 0.020224736, 0.020225278, 0.020234431, 0.020234972, 0.020245569, 0.020246111, 0.020256861, 0.020257403, 0.020269472, 0.020270014, 0.020282653, 0.020283194, 0.020296722, 0.020297264, 0.020307458, 0.020307931, 0.020318722, 0.020319264, 0.020329, 0.020329542, 0.020341306, 0.020341847, 0.020352333, 0.020352819, 0.020365958, 0.020366444, 0.020378403, 0.020378944, 0.02038925, 0.020389792, 0.020401431, 0.020401917, 0.020411569, 0.020412042, 0.020421528, 0.020422069], 'sourcediff': [0, 5.419999999992098e-07, 9.000000000002062e-06, 5.419999999992098e-07, 1.1040999999999829e-05, 5.419999999992098e-07, 1.3249999999999373e-05, 4.720000000013602e-07, 1.1694999999999067e-05, 4.860000000009301e-07, 1.1805000000000149e-05, 5.419999999992098e-07, 1.2806000000000622e-05, 4.860000000009301e-07, 1.3568999999998e-05, 5.420000000026792e-07, 1.3388999999999068e-05, 4.860000000009301e-07, 1.1082999999998538e-05, 5.419999999992098e-07, 9.153000000001327e-06, 5.409999999997361e-07, 1.0013999999999162e-05, 5.419999999992098e-07, 1.3528000000002233e-05, 5.409999999997361e-07, 9.874999999999468e-06, 5.419999999992098e-07, 1.0167000000001897e-05, 5.409999999997361e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 1.0374999999999968e-05, 4.729999999973644e-07, 1.1375000000000968e-05, 4.860000000009301e-07, 1.3429999999998304e-05, 5.420000000026792e-07, 1.0166999999998427e-05, 5.409999999997361e-07, 1.0597000000001078e-05, 5.419999999992098e-07, 1.2846999999999859e-05, 4.7300000000083386e-07, 1.0471999999997483e-05, 5.410000000032056e-07, 1.2652999999997888e-05, 5.419999999992098e-07, 1.1333000000002258e-05, 5.419999999992098e-07, 1.3235999999999803e-05, 5.419999999992098e-07, 9.874999999999468e-06, 5.409999999997361e-07, 9.306000000000592e-06, 4.860000000009301e-07, 1.2833000000000289e-05, 5.419999999992098e-07, 1.2068999999999969e-05, 5.419999999992098e-07, 1.1792000000000052e-05, 4.720000000013602e-07, 1.3124999999999248e-05, 5.419999999992098e-07, 1.0319000000001688e-05, 5.419999999992098e-07, 9.153000000001327e-06, 5.409999999997361e-07, 1.0597000000001078e-05, 5.419999999992098e-07, 1.0750000000000343e-05, 5.419999999992098e-07, 1.2068999999999969e-05, 5.419999999992098e-07, 1.2639000000001788e-05, 5.409999999997361e-07, 1.3527999999998763e-05, 5.419999999992098e-07, 1.0194000000001563e-05, 4.7300000000083386e-07, 1.0790999999999579e-05, 5.419999999992098e-07, 9.735999999999773e-06, 5.419999999992098e-07, 1.1764000000000913e-05, 5.409999999997361e-07, 1.0486000000000523e-05, 4.860000000009301e-07, 1.3138999999998818e-05, 4.860000000009301e-07, 1.1958999999998887e-05, 5.409999999997361e-07, 1.0306000000001592e-05, 5.419999999992098e-07, 1.1639000000000788e-05, 4.859999999974607e-07, 9.652000000002353e-06, 4.729999999973644e-07, 9.486000000002992e-06, 5.409999999997361e-07], 'source_diff': [0, 5.419999999992098e-07, 9.000000000002062e-06, 5.419999999992098e-07, 1.1040999999999829e-05, 5.419999999992098e-07, 1.3249999999999373e-05, 4.720000000013602e-07, 1.1694999999999067e-05, 4.860000000009301e-07, 1.1805000000000149e-05, 5.419999999992098e-07, 1.2806000000000622e-05, 4.860000000009301e-07, 1.3568999999998e-05, 5.420000000026792e-07, 1.3388999999999068e-05, 4.860000000009301e-07, 1.1082999999998538e-05, 5.419999999992098e-07, 9.153000000001327e-06, 5.409999999997361e-07, 1.0013999999999162e-05, 5.419999999992098e-07, 1.3528000000002233e-05, 5.409999999997361e-07, 9.874999999999468e-06, 5.419999999992098e-07, 1.0167000000001897e-05, 5.409999999997361e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 1.0374999999999968e-05, 4.729999999973644e-07, 1.1375000000000968e-05, 4.860000000009301e-07, 1.3429999999998304e-05, 5.420000000026792e-07, 1.0166999999998427e-05, 5.409999999997361e-07, 1.0597000000001078e-05, 5.419999999992098e-07, 1.2846999999999859e-05, 4.7300000000083386e-07, 1.0471999999997483e-05, 5.410000000032056e-07, 1.2652999999997888e-05, 5.419999999992098e-07, 1.1333000000002258e-05, 5.419999999992098e-07, 1.3235999999999803e-05, 5.419999999992098e-07, 9.874999999999468e-06, 5.409999999997361e-07, 9.306000000000592e-06, 4.860000000009301e-07, 1.2833000000000289e-05, 5.419999999992098e-07, 1.2068999999999969e-05, 5.419999999992098e-07, 1.1792000000000052e-05, 4.720000000013602e-07, 1.3124999999999248e-05, 5.419999999992098e-07, 1.0319000000001688e-05, 5.419999999992098e-07, 9.153000000001327e-06, 5.409999999997361e-07, 1.0597000000001078e-05, 5.419999999992098e-07, 1.0750000000000343e-05, 5.419999999992098e-07, 1.2068999999999969e-05, 5.419999999992098e-07, 1.2639000000001788e-05, 5.409999999997361e-07, 1.3527999999998763e-05, 5.419999999992098e-07, 1.0194000000001563e-05, 4.7300000000083386e-07, 1.0790999999999579e-05, 5.419999999992098e-07, 9.735999999999773e-06, 5.419999999992098e-07, 1.1764000000000913e-05, 5.409999999997361e-07, 1.0486000000000523e-05, 4.860000000009301e-07, 1.3138999999998818e-05, 4.860000000009301e-07, 1.1958999999998887e-05, 5.409999999997361e-07, 1.0306000000001592e-05, 5.419999999992098e-07, 1.1639000000000788e-05, 4.859999999974607e-07, 9.652000000002353e-06, 4.729999999973644e-07, 9.486000000002992e-06, 5.409999999997361e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:30:34.576" endtime="20201030 18:30:34.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.572" endtime="20201030 18:30:34.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:34.585" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, {'diff': 5.419999999992098e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:30:34.582" endtime="20201030 18:30:34.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:34.590" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.420000000026792e-07, 4.8600...</msg>
<status status="PASS" starttime="20201030 18:30:34.586" endtime="20201030 18:30:34.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.594" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:34.593" endtime="20201030 18:30:34.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.596" level="INFO">VALUE: [5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 5.410000000032056e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.729999999973644e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201030 18:30:34.595" endtime="20201030 18:30:34.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.591" endtime="20201030 18:30:34.597"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:34.601" endtime="20201030 18:30:34.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.599" endtime="20201030 18:30:34.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.598" endtime="20201030 18:30:34.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.209" endtime="20201030 18:30:34.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.208" endtime="20201030 18:30:34.621"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.630" endtime="20201030 18:30:34.641"></status>
</kw>
<msg timestamp="20201030 18:30:34.642" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:34.628" endtime="20201030 18:30:34.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.645" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:34.643" endtime="20201030 18:30:34.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.646" endtime="20201030 18:30:34.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.625" endtime="20201030 18:30:34.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.624" endtime="20201030 18:30:34.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.660" endtime="20201030 18:30:34.945"></status>
</kw>
<msg timestamp="20201030 18:30:34.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019042639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019043125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:34.657" endtime="20201030 18:30:34.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019042639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019043125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:34.949" endtime="20201030 18:30:34.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.958" endtime="20201030 18:30:34.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.653" endtime="20201030 18:30:34.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.651" endtime="20201030 18:30:34.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:34.985" level="INFO">${debug} = {'time': [0.019042639, 0.019043125, 0.0190545, 0.019055042, 0.019067986, 0.019068528, 0.019079069, 0.019079542, 0.019092611, 0.019093153, 0.019105944, 0.019106486, 0.019116653, 0.019117194, 0.01912780...</msg>
<status status="PASS" starttime="20201030 18:30:34.961" endtime="20201030 18:30:34.985"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.986" endtime="20201030 18:30:34.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.991" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:34.990" endtime="20201030 18:30:34.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:34.995" level="INFO">VALUE: {'time': [0.019042639, 0.019043125, 0.0190545, 0.019055042, 0.019067986, 0.019068528, 0.019079069, 0.019079542, 0.019092611, 0.019093153, 0.019105944, 0.019106486, 0.019116653, 0.019117194, 0.019127806, 0.019128347, 0.0191375, 0.019137986, 0.019149667, 0.019150208, 0.019160083, 0.019160625, 0.019172097, 0.019172639, 0.019183264, 0.01918375, 0.019195139, 0.019195625, 0.019208028, 0.019208569, 0.019220778, 0.019221319, 0.019233083, 0.019233625, 0.0192435, 0.019244042, 0.019253333, 0.019253875, 0.019265958, 0.019266444, 0.019277097, 0.019277639, 0.019288389, 0.019288931, 0.019299972, 0.019300514, 0.019312736, 0.019313222, 0.01932475, 0.019325236, 0.019335014, 0.019335556, 0.019347194, 0.019347681, 0.01936125, 0.019361792, 0.019375042, 0.019375514, 0.019387208, 0.019387681, 0.019398778, 0.019399319, 0.019411597, 0.019412069, 0.019421208, 0.01942175, 0.019433083, 0.019433625, 0.019443667, 0.019444153, 0.019456403, 0.019456944, 0.019470319, 0.019470861, 0.019482653, 0.019483139, 0.019493194, 0.019493736, 0.0195035, 0.019503972, 0.019514472, 0.019515014, 0.019525778, 0.019526264, 0.019539292, 0.019539764, 0.019552, 0.019552542, 0.019564611, 0.019565097, 0.0195775, 0.019578042, 0.019588361, 0.019588903, 0.019598625, 0.019599167, 0.019608333, 0.019608819, 0.019618583, 0.019619125], 'sourcediff': [0, 4.860000000009301e-07, 1.1374999999997498e-05, 5.420000000026792e-07, 1.2943999999997374e-05, 5.420000000026792e-07, 1.0540999999999329e-05, 4.7300000000083386e-07, 1.30689999999975e-05, 5.420000000026792e-07, 1.279099999999811e-05, 5.419999999992098e-07, 1.0167000000001897e-05, 5.409999999997361e-07, 1.0612000000000121e-05, 5.409999999997361e-07, 9.153000000001327e-06, 4.859999999974607e-07, 1.1680999999999497e-05, 5.409999999997361e-07, 9.875000000002937e-06, 5.419999999992098e-07, 1.1471999999998483e-05, 5.419999999992098e-07, 1.0625000000000218e-05, 4.860000000009301e-07, 1.1389000000000538e-05, 4.860000000009301e-07, 1.2402999999997638e-05, 5.410000000032056e-07, 1.2208999999999137e-05, 5.409999999997361e-07, 1.1764000000000913e-05, 5.419999999992098e-07, 9.874999999999468e-06, 5.419999999992098e-07, 9.291000000001548e-06, 5.419999999992098e-07, 1.2082999999999539e-05, 4.860000000009301e-07, 1.0652999999999357e-05, 5.419999999992098e-07, 1.0750000000000343e-05, 5.419999999992098e-07, 1.1040999999999829e-05, 5.420000000026792e-07, 1.2221999999999233e-05, 4.860000000009301e-07, 1.1528000000000233e-05, 4.859999999974607e-07, 9.778000000001952e-06, 5.419999999992098e-07, 1.1638000000001314e-05, 4.869999999969343e-07, 1.3569000000001469e-05, 5.419999999992098e-07, 1.3249999999999373e-05, 4.720000000013602e-07, 1.1693999999999594e-05, 4.7300000000083386e-07, 1.1096999999998108e-05, 5.410000000032056e-07, 1.2277999999997513e-05, 4.720000000013602e-07, 9.138999999998287e-06, 5.420000000026792e-07, 1.1332999999998788e-05, 5.419999999992098e-07, 1.0042000000001772e-05, 4.859999999974607e-07, 1.2250000000001843e-05, 5.409999999997361e-07, 1.3374999999999498e-05, 5.419999999992098e-07, 1.1792000000000052e-05, 4.860000000009301e-07, 1.0054999999998399e-05, 5.420000000026792e-07, 9.763999999998912e-06, 4.720000000013602e-07, 1.0500000000000093e-05, 5.419999999992098e-07, 1.0763999999999913e-05, 4.860000000009301e-07, 1.3027999999998263e-05, 4.720000000013602e-07, 1.2235999999998803e-05, 5.419999999992098e-07, 1.2068999999999969e-05, 4.860000000009301e-07, 1.2403000000001108e-05, 5.419999999992098e-07, 1.0318999999998218e-05, 5.420000000026792e-07, 9.722000000000203e-06, 5.419999999992098e-07, 9.165999999997954e-06, 4.860000000009301e-07, 9.763999999998912e-06, 5.420000000026792e-07], 'source_diff': [0, 4.860000000009301e-07, 1.1374999999997498e-05, 5.420000000026792e-07, 1.2943999999997374e-05, 5.420000000026792e-07, 1.0540999999999329e-05, 4.7300000000083386e-07, 1.30689999999975e-05, 5.420000000026792e-07, 1.279099999999811e-05, 5.419999999992098e-07, 1.0167000000001897e-05, 5.409999999997361e-07, 1.0612000000000121e-05, 5.409999999997361e-07, 9.153000000001327e-06, 4.859999999974607e-07, 1.1680999999999497e-05, 5.409999999997361e-07, 9.875000000002937e-06, 5.419999999992098e-07, 1.1471999999998483e-05, 5.419999999992098e-07, 1.0625000000000218e-05, 4.860000000009301e-07, 1.1389000000000538e-05, 4.860000000009301e-07, 1.2402999999997638e-05, 5.410000000032056e-07, 1.2208999999999137e-05, 5.409999999997361e-07, 1.1764000000000913e-05, 5.419999999992098e-07, 9.874999999999468e-06, 5.419999999992098e-07, 9.291000000001548e-06, 5.419999999992098e-07, 1.2082999999999539e-05, 4.860000000009301e-07, 1.0652999999999357e-05, 5.419999999992098e-07, 1.0750000000000343e-05, 5.419999999992098e-07, 1.1040999999999829e-05, 5.420000000026792e-07, 1.2221999999999233e-05, 4.860000000009301e-07, 1.1528000000000233e-05, 4.859999999974607e-07, 9.778000000001952e-06, 5.419999999992098e-07, 1.1638000000001314e-05, 4.869999999969343e-07, 1.3569000000001469e-05, 5.419999999992098e-07, 1.3249999999999373e-05, 4.720000000013602e-07, 1.1693999999999594e-05, 4.7300000000083386e-07, 1.1096999999998108e-05, 5.410000000032056e-07, 1.2277999999997513e-05, 4.720000000013602e-07, 9.138999999998287e-06, 5.420000000026792e-07, 1.1332999999998788e-05, 5.419999999992098e-07, 1.0042000000001772e-05, 4.859999999974607e-07, 1.2250000000001843e-05, 5.409999999997361e-07, 1.3374999999999498e-05, 5.419999999992098e-07, 1.1792000000000052e-05, 4.860000000009301e-07, 1.0054999999998399e-05, 5.420000000026792e-07, 9.763999999998912e-06, 4.720000000013602e-07, 1.0500000000000093e-05, 5.419999999992098e-07, 1.0763999999999913e-05, 4.860000000009301e-07, 1.3027999999998263e-05, 4.720000000013602e-07, 1.2235999999998803e-05, 5.419999999992098e-07, 1.2068999999999969e-05, 4.860000000009301e-07, 1.2403000000001108e-05, 5.419999999992098e-07, 1.0318999999998218e-05, 5.420000000026792e-07, 9.722000000000203e-06, 5.419999999992098e-07, 9.165999999997954e-06, 4.860000000009301e-07, 9.763999999998912e-06, 5.420000000026792e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:30:34.992" endtime="20201030 18:30:34.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.988" endtime="20201030 18:30:34.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:35.001" level="INFO">${RESULT} = [{'diff': 4.860000000009301e-07}, {'diff': 5.420000000026792e-07}, {'diff': 5.420000000026792e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 5.420000000026792e-07}, {'diff': 5.419999999992098e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:30:34.997" endtime="20201030 18:30:35.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:35.005" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 5.420000000026792e-07, 5.420000000026792e-07, 4.7300000000083386e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.859...</msg>
<status status="PASS" starttime="20201030 18:30:35.002" endtime="20201030 18:30:35.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.010" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:35.009" endtime="20201030 18:30:35.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.012" level="INFO">VALUE: [4.860000000009301e-07, 5.420000000026792e-07, 5.420000000026792e-07, 4.7300000000083386e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.410000000032056e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.860000000009301e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.869999999969343e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.410000000032056e-07, 4.720000000013602e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.420000000026792e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.420000000026792e-07]</msg>
<status status="PASS" starttime="20201030 18:30:35.011" endtime="20201030 18:30:35.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.006" endtime="20201030 18:30:35.013"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:35.017" endtime="20201030 18:30:35.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.015" endtime="20201030 18:30:35.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.014" endtime="20201030 18:30:35.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.622" endtime="20201030 18:30:35.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:34.622" endtime="20201030 18:30:35.038"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.045" endtime="20201030 18:30:35.056"></status>
</kw>
<msg timestamp="20201030 18:30:35.056" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:35.044" endtime="20201030 18:30:35.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.060" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:35.057" endtime="20201030 18:30:35.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.061" endtime="20201030 18:30:35.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.041" endtime="20201030 18:30:35.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.040" endtime="20201030 18:30:35.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.070" endtime="20201030 18:30:35.359"></status>
</kw>
<msg timestamp="20201030 18:30:35.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018500431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018500972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:35.069" endtime="20201030 18:30:35.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018500431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018500972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:35.363" endtime="20201030 18:30:35.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.372" endtime="20201030 18:30:35.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.066" endtime="20201030 18:30:35.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.064" endtime="20201030 18:30:35.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:35.400" level="INFO">${debug} = {'time': [0.018500431, 0.018500972, 0.018511153, 0.018511639, 0.018523306, 0.018523847, 0.018533583, 0.018534069, 0.018544139, 0.018544681, 0.01855475, 0.018555222, 0.018565708, 0.01856625, 0.01857568...</msg>
<status status="PASS" starttime="20201030 18:30:35.375" endtime="20201030 18:30:35.400"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.401" endtime="20201030 18:30:35.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.406" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:35.405" endtime="20201030 18:30:35.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.410" level="INFO">VALUE: {'time': [0.018500431, 0.018500972, 0.018511153, 0.018511639, 0.018523306, 0.018523847, 0.018533583, 0.018534069, 0.018544139, 0.018544681, 0.01855475, 0.018555222, 0.018565708, 0.01856625, 0.018575681, 0.018576222, 0.018586542, 0.018587083, 0.018600611, 0.018601097, 0.018611458, 0.018612, 0.018621583, 0.018622125, 0.018635361, 0.018635903, 0.018646653, 0.018647194, 0.018657944, 0.018658486, 0.018668236, 0.018668722, 0.018681556, 0.018682097, 0.018693569, 0.018694111, 0.018706667, 0.018707139, 0.018718806, 0.018719278, 0.018730958, 0.0187315, 0.018743708, 0.01874425, 0.018757042, 0.018757583, 0.018770389, 0.018770875, 0.018784292, 0.018784833, 0.018797792, 0.018798278, 0.018808486, 0.018809028, 0.018822403, 0.018822944, 0.018834278, 0.018834819, 0.018844111, 0.018844653, 0.018855847, 0.018856389, 0.018869486, 0.018869972, 0.018881194, 0.018881736, 0.018894833, 0.018895319, 0.018906708, 0.01890725, 0.018918292, 0.018918833, 0.018931472, 0.018932014, 0.018944806, 0.018945347, 0.018954806, 0.018955292, 0.018966958, 0.0189675, 0.01898, 0.018980542, 0.018989833, 0.018990375, 0.019002333, 0.019002806, 0.019016361, 0.019016903, 0.019026417, 0.019026889, 0.019036903, 0.019037444, 0.01904675, 0.019047236, 0.019057153, 0.019057694, 0.019067639, 0.019068111, 0.019079306, 0.019079847], 'sourcediff': [0, 5.409999999997361e-07, 1.0180999999997997e-05, 4.860000000009301e-07, 1.1666999999999927e-05, 5.409999999997361e-07, 9.735999999999773e-06, 4.860000000009301e-07, 1.0070000000000912e-05, 5.419999999992098e-07, 1.0068999999997968e-05, 4.720000000013602e-07, 1.0486000000000523e-05, 5.419999999992098e-07, 9.431000000000717e-06, 5.409999999997361e-07, 1.0320000000001162e-05, 5.409999999997361e-07, 1.3527999999998763e-05, 4.860000000009301e-07, 1.0361000000000398e-05, 5.419999999992098e-07, 9.583000000000508e-06, 5.419999999992098e-07, 1.3235999999999803e-05, 5.419999999992098e-07, 1.0750000000000343e-05, 5.409999999997361e-07, 1.0750000000000343e-05, 5.419999999992098e-07, 9.750000000002812e-06, 4.859999999974607e-07, 1.2833999999999762e-05, 5.410000000032056e-07, 1.1471999999998483e-05, 5.419999999992098e-07, 1.2556000000000372e-05, 4.720000000013602e-07, 1.1666999999999927e-05, 4.7199999999789077e-07, 1.1680000000000024e-05, 5.420000000026792e-07, 1.2207999999999664e-05, 5.419999999992098e-07, 1.2792000000001053e-05, 5.409999999997361e-07, 1.2805999999997153e-05, 4.860000000009301e-07, 1.3417000000001678e-05, 5.409999999997361e-07, 1.2958999999999887e-05, 4.860000000009301e-07, 1.0207999999997663e-05, 5.419999999992098e-07, 1.3375000000002968e-05, 5.409999999997361e-07, 1.1333999999998262e-05, 5.409999999997361e-07, 9.292000000001022e-06, 5.419999999992098e-07, 1.1193999999999094e-05, 5.420000000026792e-07, 1.3097000000000109e-05, 4.859999999974607e-07, 1.1222000000001703e-05, 5.419999999992098e-07, 1.3097000000000109e-05, 4.860000000009301e-07, 1.1389000000000538e-05, 5.419999999992098e-07, 1.1041999999999302e-05, 5.409999999997361e-07, 1.2639000000001788e-05, 5.419999999992098e-07, 1.2792000000001053e-05, 5.409999999997361e-07, 9.458999999999856e-06, 4.859999999974607e-07, 1.1666000000000454e-05, 5.420000000026792e-07, 1.2499999999998623e-05, 5.419999999992098e-07, 9.291000000001548e-06, 5.419999999992098e-07, 1.1957999999999414e-05, 4.7300000000083386e-07, 1.355499999999843e-05, 5.420000000026792e-07, 9.513999999998662e-06, 4.720000000013602e-07, 1.0013999999999162e-05, 5.409999999997361e-07, 9.306000000000592e-06, 4.859999999974607e-07, 9.917000000001647e-06, 5.409999999997361e-07, 9.945000000000787e-06, 4.7199999999789077e-07, 1.1195000000002037e-05, 5.409999999997361e-07], 'source_diff': [0, 5.409999999997361e-07, 1.0180999999997997e-05, 4.860000000009301e-07, 1.1666999999999927e-05, 5.409999999997361e-07, 9.735999999999773e-06, 4.860000000009301e-07, 1.0070000000000912e-05, 5.419999999992098e-07, 1.0068999999997968e-05, 4.720000000013602e-07, 1.0486000000000523e-05, 5.419999999992098e-07, 9.431000000000717e-06, 5.409999999997361e-07, 1.0320000000001162e-05, 5.409999999997361e-07, 1.3527999999998763e-05, 4.860000000009301e-07, 1.0361000000000398e-05, 5.419999999992098e-07, 9.583000000000508e-06, 5.419999999992098e-07, 1.3235999999999803e-05, 5.419999999992098e-07, 1.0750000000000343e-05, 5.409999999997361e-07, 1.0750000000000343e-05, 5.419999999992098e-07, 9.750000000002812e-06, 4.859999999974607e-07, 1.2833999999999762e-05, 5.410000000032056e-07, 1.1471999999998483e-05, 5.419999999992098e-07, 1.2556000000000372e-05, 4.720000000013602e-07, 1.1666999999999927e-05, 4.7199999999789077e-07, 1.1680000000000024e-05, 5.420000000026792e-07, 1.2207999999999664e-05, 5.419999999992098e-07, 1.2792000000001053e-05, 5.409999999997361e-07, 1.2805999999997153e-05, 4.860000000009301e-07, 1.3417000000001678e-05, 5.409999999997361e-07, 1.2958999999999887e-05, 4.860000000009301e-07, 1.0207999999997663e-05, 5.419999999992098e-07, 1.3375000000002968e-05, 5.409999999997361e-07, 1.1333999999998262e-05, 5.409999999997361e-07, 9.292000000001022e-06, 5.419999999992098e-07, 1.1193999999999094e-05, 5.420000000026792e-07, 1.3097000000000109e-05, 4.859999999974607e-07, 1.1222000000001703e-05, 5.419999999992098e-07, 1.3097000000000109e-05, 4.860000000009301e-07, 1.1389000000000538e-05, 5.419999999992098e-07, 1.1041999999999302e-05, 5.409999999997361e-07, 1.2639000000001788e-05, 5.419999999992098e-07, 1.2792000000001053e-05, 5.409999999997361e-07, 9.458999999999856e-06, 4.859999999974607e-07, 1.1666000000000454e-05, 5.420000000026792e-07, 1.2499999999998623e-05, 5.419999999992098e-07, 9.291000000001548e-06, 5.419999999992098e-07, 1.1957999999999414e-05, 4.7300000000083386e-07, 1.355499999999843e-05, 5.420000000026792e-07, 9.513999999998662e-06, 4.720000000013602e-07, 1.0013999999999162e-05, 5.409999999997361e-07, 9.306000000000592e-06, 4.859999999974607e-07, 9.917000000001647e-06, 5.409999999997361e-07, 9.945000000000787e-06, 4.7199999999789077e-07, 1.1195000000002037e-05, 5.409999999997361e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:30:35.407" endtime="20201030 18:30:35.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.403" endtime="20201030 18:30:35.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:35.416" level="INFO">${RESULT} = [{'diff': 5.409999999997361e-07}, {'diff': 4.860000000009301e-07}, {'diff': 5.409999999997361e-07}, {'diff': 4.860000000009301e-07}, {'diff': 5.419999999992098e-07}, {'diff': 4.720000000013602e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:30:35.412" endtime="20201030 18:30:35.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:35.420" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.4099...</msg>
<status status="PASS" starttime="20201030 18:30:35.417" endtime="20201030 18:30:35.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.424" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:35.423" endtime="20201030 18:30:35.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.426" level="INFO">VALUE: [5.409999999997361e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.410000000032056e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 5.420000000026792e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201030 18:30:35.425" endtime="20201030 18:30:35.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.421" endtime="20201030 18:30:35.427"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:35.431" endtime="20201030 18:30:35.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.429" endtime="20201030 18:30:35.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.428" endtime="20201030 18:30:35.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.038" endtime="20201030 18:30:35.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.038" endtime="20201030 18:30:35.452"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.461" endtime="20201030 18:30:35.472"></status>
</kw>
<msg timestamp="20201030 18:30:35.472" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:35.460" endtime="20201030 18:30:35.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.475" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:35.473" endtime="20201030 18:30:35.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.476" endtime="20201030 18:30:35.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.455" endtime="20201030 18:30:35.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.454" endtime="20201030 18:30:35.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.485" endtime="20201030 18:30:35.772"></status>
</kw>
<msg timestamp="20201030 18:30:35.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020471514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020471986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:35.483" endtime="20201030 18:30:35.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020471514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020471986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:35.776" endtime="20201030 18:30:35.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.785" endtime="20201030 18:30:35.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.481" endtime="20201030 18:30:35.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.479" endtime="20201030 18:30:35.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:35.812" level="INFO">${debug} = {'time': [0.020471514, 0.020471986, 0.020485556, 0.020486097, 0.020499042, 0.020499583, 0.020511389, 0.020511861, 0.020522792, 0.020523333, 0.020532639, 0.020533125, 0.020544208, 0.02054475, 0.0205541...</msg>
<status status="PASS" starttime="20201030 18:30:35.788" endtime="20201030 18:30:35.812"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.813" endtime="20201030 18:30:35.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.818" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:35.817" endtime="20201030 18:30:35.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.822" level="INFO">VALUE: {'time': [0.020471514, 0.020471986, 0.020485556, 0.020486097, 0.020499042, 0.020499583, 0.020511389, 0.020511861, 0.020522792, 0.020523333, 0.020532639, 0.020533125, 0.020544208, 0.02054475, 0.020554194, 0.020554736, 0.020565486, 0.020566028, 0.020575639, 0.020576111, 0.020587931, 0.020588417, 0.020597778, 0.020598264, 0.020609194, 0.020609736, 0.020622097, 0.020622639, 0.020636153, 0.020636694, 0.020646292, 0.020646778, 0.020656722, 0.020657208, 0.020668444, 0.020668931, 0.020680306, 0.020680847, 0.020692042, 0.020692583, 0.020705958, 0.0207065, 0.020719167, 0.020719653, 0.020729569, 0.020730111, 0.020742167, 0.020742708, 0.020752306, 0.020752792, 0.020763222, 0.020763694, 0.020776486, 0.020777028, 0.020790403, 0.020790944, 0.020800389, 0.020800931, 0.02081125, 0.020811736, 0.020825167, 0.020825653, 0.020834847, 0.020835389, 0.020846736, 0.020847222, 0.020856556, 0.020857097, 0.020866111, 0.020866597, 0.020876083, 0.020876625, 0.020889, 0.020889486, 0.020902181, 0.020902667, 0.0209155, 0.020916042, 0.020926972, 0.020927444, 0.020941028, 0.0209415, 0.020952306, 0.020952792, 0.020966361, 0.020966903, 0.020975917, 0.020976403, 0.020986042, 0.020986528, 0.020995861, 0.020996403, 0.021005417, 0.021005903, 0.021019056, 0.021019542, 0.021028875, 0.021029417, 0.021040889, 0.021041431], 'sourcediff': [0, 4.720000000013602e-07, 1.3569999999997473e-05, 5.410000000032056e-07, 1.2944999999996848e-05, 5.409999999997361e-07, 1.1806000000003092e-05, 4.7199999999789077e-07, 1.0931000000002217e-05, 5.409999999997361e-07, 9.305999999997122e-06, 4.860000000009301e-07, 1.1083000000002008e-05, 5.419999999992098e-07, 9.444000000000813e-06, 5.419999999992098e-07, 1.0750000000000343e-05, 5.419999999992098e-07, 9.610999999999648e-06, 4.720000000013602e-07, 1.1819999999999192e-05, 4.860000000009301e-07, 9.360999999999398e-06, 4.860000000009301e-07, 1.0929999999999274e-05, 5.419999999992098e-07, 1.2360999999998928e-05, 5.420000000026792e-07, 1.3513999999999193e-05, 5.409999999997361e-07, 9.597999999999551e-06, 4.860000000009301e-07, 9.943999999997843e-06, 4.860000000009301e-07, 1.1236000000001273e-05, 4.870000000004038e-07, 1.1374999999997498e-05, 5.409999999997361e-07, 1.1195000000002037e-05, 5.409999999997361e-07, 1.3374999999999498e-05, 5.419999999992098e-07, 1.2667000000000928e-05, 4.860000000009301e-07, 9.915999999998704e-06, 5.419999999992098e-07, 1.2055999999999872e-05, 5.409999999997361e-07, 9.59800000000302e-06, 4.859999999974607e-07, 1.0430000000002243e-05, 4.7199999999789077e-07, 1.2792000000001053e-05, 5.419999999992098e-07, 1.3374999999999498e-05, 5.409999999997361e-07, 9.445000000000286e-06, 5.420000000026792e-07, 1.0318999999998218e-05, 4.860000000009301e-07, 1.3430999999997778e-05, 4.860000000009301e-07, 9.194000000000563e-06, 5.419999999992098e-07, 1.1347000000001828e-05, 4.859999999974607e-07, 9.333999999999731e-06, 5.410000000032056e-07, 9.013999999998162e-06, 4.860000000009301e-07, 9.485999999999523e-06, 5.419999999992098e-07, 1.2375000000001968e-05, 4.859999999974607e-07, 1.2695000000000067e-05, 4.860000000009301e-07, 1.2833000000000289e-05, 5.419999999992098e-07, 1.0929999999999274e-05, 4.720000000013602e-07, 1.3584000000000512e-05, 4.7199999999789077e-07, 1.0806000000002092e-05, 4.860000000009301e-07, 1.3568999999998e-05, 5.419999999992098e-07, 9.014000000001632e-06, 4.860000000009301e-07, 9.638999999998787e-06, 4.860000000009301e-07, 9.333000000000258e-06, 5.419999999992098e-07, 9.013999999998162e-06, 4.860000000009301e-07, 1.3153000000001858e-05, 4.859999999974607e-07, 9.333000000000258e-06, 5.420000000026792e-07, 1.1471999999998483e-05, 5.419999999992098e-07], 'source_diff': [0, 4.720000000013602e-07, 1.3569999999997473e-05, 5.410000000032056e-07, 1.2944999999996848e-05, 5.409999999997361e-07, 1.1806000000003092e-05, 4.7199999999789077e-07, 1.0931000000002217e-05, 5.409999999997361e-07, 9.305999999997122e-06, 4.860000000009301e-07, 1.1083000000002008e-05, 5.419999999992098e-07, 9.444000000000813e-06, 5.419999999992098e-07, 1.0750000000000343e-05, 5.419999999992098e-07, 9.610999999999648e-06, 4.720000000013602e-07, 1.1819999999999192e-05, 4.860000000009301e-07, 9.360999999999398e-06, 4.860000000009301e-07, 1.0929999999999274e-05, 5.419999999992098e-07, 1.2360999999998928e-05, 5.420000000026792e-07, 1.3513999999999193e-05, 5.409999999997361e-07, 9.597999999999551e-06, 4.860000000009301e-07, 9.943999999997843e-06, 4.860000000009301e-07, 1.1236000000001273e-05, 4.870000000004038e-07, 1.1374999999997498e-05, 5.409999999997361e-07, 1.1195000000002037e-05, 5.409999999997361e-07, 1.3374999999999498e-05, 5.419999999992098e-07, 1.2667000000000928e-05, 4.860000000009301e-07, 9.915999999998704e-06, 5.419999999992098e-07, 1.2055999999999872e-05, 5.409999999997361e-07, 9.59800000000302e-06, 4.859999999974607e-07, 1.0430000000002243e-05, 4.7199999999789077e-07, 1.2792000000001053e-05, 5.419999999992098e-07, 1.3374999999999498e-05, 5.409999999997361e-07, 9.445000000000286e-06, 5.420000000026792e-07, 1.0318999999998218e-05, 4.860000000009301e-07, 1.3430999999997778e-05, 4.860000000009301e-07, 9.194000000000563e-06, 5.419999999992098e-07, 1.1347000000001828e-05, 4.859999999974607e-07, 9.333999999999731e-06, 5.410000000032056e-07, 9.013999999998162e-06, 4.860000000009301e-07, 9.485999999999523e-06, 5.419999999992098e-07, 1.2375000000001968e-05, 4.859999999974607e-07, 1.2695000000000067e-05, 4.860000000009301e-07, 1.2833000000000289e-05, 5.419999999992098e-07, 1.0929999999999274e-05, 4.720000000013602e-07, 1.3584000000000512e-05, 4.7199999999789077e-07, 1.0806000000002092e-05, 4.860000000009301e-07, 1.3568999999998e-05, 5.419999999992098e-07, 9.014000000001632e-06, 4.860000000009301e-07, 9.638999999998787e-06, 4.860000000009301e-07, 9.333000000000258e-06, 5.419999999992098e-07, 9.013999999998162e-06, 4.860000000009301e-07, 1.3153000000001858e-05, 4.859999999974607e-07, 9.333000000000258e-06, 5.420000000026792e-07, 1.1471999999998483e-05, 5.419999999992098e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:30:35.819" endtime="20201030 18:30:35.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.815" endtime="20201030 18:30:35.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:35.828" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 5.410000000032056e-07}, {'diff': 5.409999999997361e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 5.409999999997361e-07}, {'diff': 4.860000000009301e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:30:35.824" endtime="20201030 18:30:35.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:35.832" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 5.410000000032056e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419...</msg>
<status status="PASS" starttime="20201030 18:30:35.829" endtime="20201030 18:30:35.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.837" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:35.836" endtime="20201030 18:30:35.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.839" level="INFO">VALUE: [4.720000000013602e-07, 5.410000000032056e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.870000000004038e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.420000000026792e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.410000000032056e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.859999999974607e-07, 5.420000000026792e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201030 18:30:35.838" endtime="20201030 18:30:35.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.833" endtime="20201030 18:30:35.840"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:35.844" endtime="20201030 18:30:35.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.842" endtime="20201030 18:30:35.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.841" endtime="20201030 18:30:35.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.452" endtime="20201030 18:30:35.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.452" endtime="20201030 18:30:35.865"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.879" endtime="20201030 18:30:35.889"></status>
</kw>
<msg timestamp="20201030 18:30:35.889" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:35.876" endtime="20201030 18:30:35.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:35.892" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:35.890" endtime="20201030 18:30:35.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.893" endtime="20201030 18:30:35.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.872" endtime="20201030 18:30:35.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.869" endtime="20201030 18:30:35.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:35.902" endtime="20201030 18:30:36.191"></status>
</kw>
<msg timestamp="20201030 18:30:36.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025660944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025661486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:35.900" endtime="20201030 18:30:36.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025660944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025661486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:36.196" endtime="20201030 18:30:36.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.204" endtime="20201030 18:30:36.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.898" endtime="20201030 18:30:36.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.896" endtime="20201030 18:30:36.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:36.231" level="INFO">${debug} = {'time': [0.025660944, 0.025661486, 0.025673986, 0.025674528, 0.025687986, 0.025688458, 0.025701986, 0.025702472, 0.025714875, 0.025715417, 0.025727931, 0.025728417, 0.025737889, 0.025738431, 0.025748...</msg>
<status status="PASS" starttime="20201030 18:30:36.208" endtime="20201030 18:30:36.232"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.233" endtime="20201030 18:30:36.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.238" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:36.237" endtime="20201030 18:30:36.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.242" level="INFO">VALUE: {'time': [0.025660944, 0.025661486, 0.025673986, 0.025674528, 0.025687986, 0.025688458, 0.025701986, 0.025702472, 0.025714875, 0.025715417, 0.025727931, 0.025728417, 0.025737889, 0.025738431, 0.025748472, 0.025748958, 0.02576225, 0.025762736, 0.025773542, 0.025774028, 0.025787444, 0.025787986, 0.025799028, 0.025799569, 0.025811486, 0.025812028, 0.025825431, 0.025825903, 0.025836708, 0.025837194, 0.025847125, 0.025847611, 0.025857833, 0.025858319, 0.025868972, 0.025869514, 0.025880708, 0.02588125, 0.025893042, 0.025893514, 0.0259065, 0.025907042, 0.025919847, 0.025920333, 0.025929875, 0.025930347, 0.025943153, 0.025943694, 0.025956208, 0.025956694, 0.025967486, 0.025968028, 0.025979361, 0.025979903, 0.025991819, 0.025992361, 0.026001806, 0.026002347, 0.026015431, 0.026015972, 0.026028778, 0.026029264, 0.026039028, 0.026039569, 0.026051056, 0.026051597, 0.026062125, 0.026062597, 0.026072944, 0.026073417, 0.026083194, 0.026083681, 0.026096222, 0.026096764, 0.026106931, 0.026107472, 0.026118958, 0.0261195, 0.026132306, 0.026132792, 0.026144792, 0.026145264, 0.026155028, 0.026155569, 0.026166486, 0.026166958, 0.026178056, 0.026178597, 0.026187597, 0.026188139, 0.026201236, 0.026201722, 0.026214417, 0.026214903, 0.026225278, 0.026225764, 0.026235403, 0.026235889, 0.026248931, 0.026249403], 'sourcediff': [0, 5.419999999992098e-07, 1.2499999999998623e-05, 5.419999999992098e-07, 1.3458000000000914e-05, 4.720000000013602e-07, 1.3527999999998763e-05, 4.860000000009301e-07, 1.2403000000001108e-05, 5.419999999992098e-07, 1.2513999999998193e-05, 4.860000000009301e-07, 9.471999999999953e-06, 5.419999999992098e-07, 1.0041000000002298e-05, 4.859999999974607e-07, 1.3292000000001553e-05, 4.860000000009301e-07, 1.0805999999998622e-05, 4.860000000009301e-07, 1.3415999999998734e-05, 5.419999999992098e-07, 1.1042000000002772e-05, 5.409999999997361e-07, 1.1917000000000177e-05, 5.419999999992098e-07, 1.3402999999998638e-05, 4.720000000013602e-07, 1.0804999999999149e-05, 4.860000000009301e-07, 9.930999999997747e-06, 4.860000000009301e-07, 1.0222000000000703e-05, 4.860000000009301e-07, 1.0652999999999357e-05, 5.419999999992098e-07, 1.1193999999999094e-05, 5.420000000026792e-07, 1.1792000000000052e-05, 4.7199999999789077e-07, 1.2985999999999553e-05, 5.420000000026792e-07, 1.280499999999768e-05, 4.860000000009301e-07, 9.542000000001272e-06, 4.7199999999789077e-07, 1.2806000000000622e-05, 5.409999999997361e-07, 1.2514000000001663e-05, 4.859999999974607e-07, 1.0792000000002522e-05, 5.419999999992098e-07, 1.1332999999998788e-05, 5.419999999992098e-07, 1.1916000000000704e-05, 5.419999999992098e-07, 9.445000000000286e-06, 5.409999999997361e-07, 1.3084000000000012e-05, 5.409999999997361e-07, 1.2806000000000622e-05, 4.860000000009301e-07, 9.763999999998912e-06, 5.409999999997361e-07, 1.1487000000000996e-05, 5.409999999997361e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 1.0347000000000828e-05, 4.7300000000083386e-07, 9.776999999999009e-06, 4.870000000004038e-07, 1.254099999999786e-05, 5.420000000026792e-07, 1.0166999999998427e-05, 5.409999999997361e-07, 1.1486000000001523e-05, 5.419999999992098e-07, 1.2806000000000622e-05, 4.859999999974607e-07, 1.2000000000001593e-05, 4.720000000013602e-07, 9.763999999998912e-06, 5.409999999997361e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 1.1098000000001051e-05, 5.409999999997361e-07, 8.999999999998592e-06, 5.419999999992098e-07, 1.3097000000000109e-05, 4.860000000009301e-07, 1.2695000000000067e-05, 4.860000000009301e-07, 1.0374999999999968e-05, 4.859999999974607e-07, 9.639000000002257e-06, 4.859999999974607e-07, 1.3042000000001303e-05, 4.720000000013602e-07], 'source_diff': [0, 5.419999999992098e-07, 1.2499999999998623e-05, 5.419999999992098e-07, 1.3458000000000914e-05, 4.720000000013602e-07, 1.3527999999998763e-05, 4.860000000009301e-07, 1.2403000000001108e-05, 5.419999999992098e-07, 1.2513999999998193e-05, 4.860000000009301e-07, 9.471999999999953e-06, 5.419999999992098e-07, 1.0041000000002298e-05, 4.859999999974607e-07, 1.3292000000001553e-05, 4.860000000009301e-07, 1.0805999999998622e-05, 4.860000000009301e-07, 1.3415999999998734e-05, 5.419999999992098e-07, 1.1042000000002772e-05, 5.409999999997361e-07, 1.1917000000000177e-05, 5.419999999992098e-07, 1.3402999999998638e-05, 4.720000000013602e-07, 1.0804999999999149e-05, 4.860000000009301e-07, 9.930999999997747e-06, 4.860000000009301e-07, 1.0222000000000703e-05, 4.860000000009301e-07, 1.0652999999999357e-05, 5.419999999992098e-07, 1.1193999999999094e-05, 5.420000000026792e-07, 1.1792000000000052e-05, 4.7199999999789077e-07, 1.2985999999999553e-05, 5.420000000026792e-07, 1.280499999999768e-05, 4.860000000009301e-07, 9.542000000001272e-06, 4.7199999999789077e-07, 1.2806000000000622e-05, 5.409999999997361e-07, 1.2514000000001663e-05, 4.859999999974607e-07, 1.0792000000002522e-05, 5.419999999992098e-07, 1.1332999999998788e-05, 5.419999999992098e-07, 1.1916000000000704e-05, 5.419999999992098e-07, 9.445000000000286e-06, 5.409999999997361e-07, 1.3084000000000012e-05, 5.409999999997361e-07, 1.2806000000000622e-05, 4.860000000009301e-07, 9.763999999998912e-06, 5.409999999997361e-07, 1.1487000000000996e-05, 5.409999999997361e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 1.0347000000000828e-05, 4.7300000000083386e-07, 9.776999999999009e-06, 4.870000000004038e-07, 1.254099999999786e-05, 5.420000000026792e-07, 1.0166999999998427e-05, 5.409999999997361e-07, 1.1486000000001523e-05, 5.419999999992098e-07, 1.2806000000000622e-05, 4.859999999974607e-07, 1.2000000000001593e-05, 4.720000000013602e-07, 9.763999999998912e-06, 5.409999999997361e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 1.1098000000001051e-05, 5.409999999997361e-07, 8.999999999998592e-06, 5.419999999992098e-07, 1.3097000000000109e-05, 4.860000000009301e-07, 1.2695000000000067e-05, 4.860000000009301e-07, 1.0374999999999968e-05, 4.859999999974607e-07, 9.639000000002257e-06, 4.859999999974607e-07, 1.3042000000001303e-05, 4.720000000013602e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:30:36.239" endtime="20201030 18:30:36.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.235" endtime="20201030 18:30:36.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:36.247" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, {'diff': 5.419999999992098e-07}, {'diff': 4.860000000009301e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:30:36.244" endtime="20201030 18:30:36.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:36.251" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.8600...</msg>
<status status="PASS" starttime="20201030 18:30:36.248" endtime="20201030 18:30:36.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.256" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:36.255" endtime="20201030 18:30:36.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.260" level="INFO">VALUE: [5.419999999992098e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.7199999999789077e-07, 5.420000000026792e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:30:36.257" endtime="20201030 18:30:36.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.252" endtime="20201030 18:30:36.261"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:36.264" endtime="20201030 18:30:36.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.263" endtime="20201030 18:30:36.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.262" endtime="20201030 18:30:36.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.867" endtime="20201030 18:30:36.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:35.866" endtime="20201030 18:30:36.285"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.293" endtime="20201030 18:30:36.303"></status>
</kw>
<msg timestamp="20201030 18:30:36.304" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:36.291" endtime="20201030 18:30:36.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.306" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:36.305" endtime="20201030 18:30:36.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.307" endtime="20201030 18:30:36.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.289" endtime="20201030 18:30:36.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.287" endtime="20201030 18:30:36.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.317" endtime="20201030 18:30:36.605"></status>
</kw>
<msg timestamp="20201030 18:30:36.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018531889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018532431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:36.315" endtime="20201030 18:30:36.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018531889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018532431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:36.609" endtime="20201030 18:30:36.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.618" endtime="20201030 18:30:36.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.312" endtime="20201030 18:30:36.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.311" endtime="20201030 18:30:36.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:36.650" level="INFO">${debug} = {'time': [0.018531889, 0.018532431, 0.018541444, 0.018541931, 0.0185555, 0.018556042, 0.018567375, 0.018567917, 0.018578958, 0.0185795, 0.018588958, 0.018589444, 0.018602444, 0.018602917, 0.018615181,...</msg>
<status status="PASS" starttime="20201030 18:30:36.622" endtime="20201030 18:30:36.650"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.651" endtime="20201030 18:30:36.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.658" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:36.657" endtime="20201030 18:30:36.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.668" level="INFO">VALUE: {'time': [0.018531889, 0.018532431, 0.018541444, 0.018541931, 0.0185555, 0.018556042, 0.018567375, 0.018567917, 0.018578958, 0.0185795, 0.018588958, 0.018589444, 0.018602444, 0.018602917, 0.018615181, 0.018615722, 0.018628653, 0.018629194, 0.018641403, 0.018641944, 0.018652111, 0.018652653, 0.018663417, 0.018663903, 0.018672958, 0.0186735, 0.018684028, 0.0186845, 0.018695681, 0.018696222, 0.018708, 0.018708542, 0.018719903, 0.018720375, 0.01873175, 0.018732292, 0.018741514, 0.018741986, 0.018752306, 0.018752792, 0.018763583, 0.018764125, 0.018774458, 0.018774944, 0.018785153, 0.018785694, 0.018796014, 0.018796556, 0.018808917, 0.018809403, 0.018822097, 0.018822639, 0.018834014, 0.018834486, 0.018843514, 0.018844056, 0.018855833, 0.018856375, 0.01886625, 0.018866792, 0.018879597, 0.018880083, 0.018892042, 0.018892583, 0.018906111, 0.018906597, 0.018918708, 0.01891925, 0.018932333, 0.018932875, 0.018943042, 0.018943583, 0.018953458, 0.018954, 0.018963736, 0.018964278, 0.018974153, 0.018974694, 0.018984444, 0.018984931, 0.018995917, 0.018996389, 0.019009931, 0.019010472, 0.019022861, 0.019023333, 0.019035875, 0.019036417, 0.019046597, 0.019047083, 0.0190605, 0.019061042, 0.019072806, 0.019073347, 0.019083681, 0.019084167, 0.019093361, 0.019093847, 0.019105681, 0.019106167], 'sourcediff': [0, 5.419999999992098e-07, 9.013000000002158e-06, 4.870000000004038e-07, 1.3568999999998e-05, 5.419999999992098e-07, 1.1333000000002258e-05, 5.419999999992098e-07, 1.1040999999999829e-05, 5.419999999992098e-07, 9.458000000000383e-06, 4.860000000009301e-07, 1.2999999999999123e-05, 4.7300000000083386e-07, 1.2264000000001413e-05, 5.409999999997361e-07, 1.2930999999997278e-05, 5.410000000032056e-07, 1.2208999999999137e-05, 5.409999999997361e-07, 1.0166999999998427e-05, 5.420000000026792e-07, 1.0763999999999913e-05, 4.859999999974607e-07, 9.055000000000868e-06, 5.419999999992098e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 1.1180999999998997e-05, 5.409999999997361e-07, 1.1778000000000483e-05, 5.420000000026792e-07, 1.1360999999997928e-05, 4.720000000013602e-07, 1.1374999999997498e-05, 5.420000000026792e-07, 9.221999999999703e-06, 4.7199999999789077e-07, 1.0320000000001162e-05, 4.860000000009301e-07, 1.0790999999999579e-05, 5.419999999992098e-07, 1.0333000000001258e-05, 4.859999999974607e-07, 1.0209000000000606e-05, 5.409999999997361e-07, 1.0320000000001162e-05, 5.419999999992098e-07, 1.2361000000002398e-05, 4.859999999974607e-07, 1.2694000000000594e-05, 5.419999999992098e-07, 1.1375000000000968e-05, 4.720000000013602e-07, 9.027999999997732e-06, 5.420000000026792e-07, 1.177699999999754e-05, 5.420000000026792e-07, 9.874999999999468e-06, 5.419999999992098e-07, 1.2805000000001149e-05, 4.859999999974607e-07, 1.1959000000002357e-05, 5.409999999997361e-07, 1.3527999999998763e-05, 4.860000000009301e-07, 1.2110999999998678e-05, 5.419999999992098e-07, 1.3083000000000539e-05, 5.419999999992098e-07, 1.0167000000001897e-05, 5.409999999997361e-07, 9.874999999999468e-06, 5.419999999992098e-07, 9.735999999999773e-06, 5.420000000026792e-07, 9.874999999999468e-06, 5.409999999997361e-07, 9.749999999999343e-06, 4.870000000004038e-07, 1.0986000000001023e-05, 4.7199999999789077e-07, 1.3542000000001803e-05, 5.409999999997361e-07, 1.2388999999998068e-05, 4.720000000013602e-07, 1.2542000000000803e-05, 5.419999999992098e-07, 1.0179999999998524e-05, 4.860000000009301e-07, 1.3417000000001678e-05, 5.419999999992098e-07, 1.1764000000000913e-05, 5.409999999997361e-07, 1.0334000000000731e-05, 4.859999999974607e-07, 9.194000000000563e-06, 4.860000000009301e-07, 1.1833999999998762e-05, 4.860000000009301e-07], 'source_diff': [0, 5.419999999992098e-07, 9.013000000002158e-06, 4.870000000004038e-07, 1.3568999999998e-05, 5.419999999992098e-07, 1.1333000000002258e-05, 5.419999999992098e-07, 1.1040999999999829e-05, 5.419999999992098e-07, 9.458000000000383e-06, 4.860000000009301e-07, 1.2999999999999123e-05, 4.7300000000083386e-07, 1.2264000000001413e-05, 5.409999999997361e-07, 1.2930999999997278e-05, 5.410000000032056e-07, 1.2208999999999137e-05, 5.409999999997361e-07, 1.0166999999998427e-05, 5.420000000026792e-07, 1.0763999999999913e-05, 4.859999999974607e-07, 9.055000000000868e-06, 5.419999999992098e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 1.1180999999998997e-05, 5.409999999997361e-07, 1.1778000000000483e-05, 5.420000000026792e-07, 1.1360999999997928e-05, 4.720000000013602e-07, 1.1374999999997498e-05, 5.420000000026792e-07, 9.221999999999703e-06, 4.7199999999789077e-07, 1.0320000000001162e-05, 4.860000000009301e-07, 1.0790999999999579e-05, 5.419999999992098e-07, 1.0333000000001258e-05, 4.859999999974607e-07, 1.0209000000000606e-05, 5.409999999997361e-07, 1.0320000000001162e-05, 5.419999999992098e-07, 1.2361000000002398e-05, 4.859999999974607e-07, 1.2694000000000594e-05, 5.419999999992098e-07, 1.1375000000000968e-05, 4.720000000013602e-07, 9.027999999997732e-06, 5.420000000026792e-07, 1.177699999999754e-05, 5.420000000026792e-07, 9.874999999999468e-06, 5.419999999992098e-07, 1.2805000000001149e-05, 4.859999999974607e-07, 1.1959000000002357e-05, 5.409999999997361e-07, 1.3527999999998763e-05, 4.860000000009301e-07, 1.2110999999998678e-05, 5.419999999992098e-07, 1.3083000000000539e-05, 5.419999999992098e-07, 1.0167000000001897e-05, 5.409999999997361e-07, 9.874999999999468e-06, 5.419999999992098e-07, 9.735999999999773e-06, 5.420000000026792e-07, 9.874999999999468e-06, 5.409999999997361e-07, 9.749999999999343e-06, 4.870000000004038e-07, 1.0986000000001023e-05, 4.7199999999789077e-07, 1.3542000000001803e-05, 5.409999999997361e-07, 1.2388999999998068e-05, 4.720000000013602e-07, 1.2542000000000803e-05, 5.419999999992098e-07, 1.0179999999998524e-05, 4.860000000009301e-07, 1.3417000000001678e-05, 5.419999999992098e-07, 1.1764000000000913e-05, 5.409999999997361e-07, 1.0334000000000731e-05, 4.859999999974607e-07, 9.194000000000563e-06, 4.860000000009301e-07, 1.1833999999998762e-05, 4.860000000009301e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:30:36.660" endtime="20201030 18:30:36.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.654" endtime="20201030 18:30:36.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:36.677" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 4.870000000004038e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 4.860000000009301e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:30:36.673" endtime="20201030 18:30:36.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:36.682" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 4.870000000004038e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 5.410...</msg>
<status status="PASS" starttime="20201030 18:30:36.678" endtime="20201030 18:30:36.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.688" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:36.687" endtime="20201030 18:30:36.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.691" level="INFO">VALUE: [5.419999999992098e-07, 4.870000000004038e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 5.410000000032056e-07, 5.409999999997361e-07, 5.420000000026792e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.409999999997361e-07, 5.420000000026792e-07, 4.720000000013602e-07, 5.420000000026792e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.420000000026792e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.409999999997361e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201030 18:30:36.689" endtime="20201030 18:30:36.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.684" endtime="20201030 18:30:36.691"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:36.695" endtime="20201030 18:30:36.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.694" endtime="20201030 18:30:36.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.692" endtime="20201030 18:30:36.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.286" endtime="20201030 18:30:36.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.285" endtime="20201030 18:30:36.716"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.725" endtime="20201030 18:30:36.735"></status>
</kw>
<msg timestamp="20201030 18:30:36.736" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:36.723" endtime="20201030 18:30:36.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:36.738" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:36.737" endtime="20201030 18:30:36.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.739" endtime="20201030 18:30:36.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.719" endtime="20201030 18:30:36.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.718" endtime="20201030 18:30:36.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:36.748" endtime="20201030 18:30:37.060"></status>
</kw>
<msg timestamp="20201030 18:30:37.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019648139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019648625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:36.747" endtime="20201030 18:30:37.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019648139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019648625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:37.064" endtime="20201030 18:30:37.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.072" endtime="20201030 18:30:37.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.744" endtime="20201030 18:30:37.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.743" endtime="20201030 18:30:37.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:37.100" level="INFO">${debug} = {'time': [0.019648139, 0.019648625, 0.019658986, 0.019659528, 0.019672319, 0.019672861, 0.019685069, 0.019685611, 0.019698694, 0.019699236, 0.019709264, 0.019709806, 0.019720583, 0.019721056, 0.019732...</msg>
<status status="PASS" starttime="20201030 18:30:37.076" endtime="20201030 18:30:37.100"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.101" endtime="20201030 18:30:37.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.106" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:37.105" endtime="20201030 18:30:37.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.110" level="INFO">VALUE: {'time': [0.019648139, 0.019648625, 0.019658986, 0.019659528, 0.019672319, 0.019672861, 0.019685069, 0.019685611, 0.019698694, 0.019699236, 0.019709264, 0.019709806, 0.019720583, 0.019721056, 0.019732861, 0.019733403, 0.019742556, 0.019743097, 0.019752542, 0.019753083, 0.019766597, 0.019767139, 0.019777028, 0.019777514, 0.019787139, 0.019787681, 0.019797708, 0.01979825, 0.019807403, 0.019807889, 0.019816958, 0.019817444, 0.01982925, 0.019829792, 0.019840833, 0.019841375, 0.019854056, 0.019854528, 0.019868097, 0.019868583, 0.019879819, 0.019880361, 0.019892861, 0.019893403, 0.019902986, 0.019903528, 0.019915458, 0.019915944, 0.019926014, 0.019926556, 0.019938181, 0.019938722, 0.019949042, 0.019949583, 0.019960764, 0.019961306, 0.019972083, 0.019972556, 0.019982042, 0.019982583, 0.019995389, 0.019995875, 0.020008861, 0.020009403, 0.020020875, 0.020021417, 0.020032333, 0.020032819, 0.020043611, 0.020044153, 0.020055639, 0.020056181, 0.020067806, 0.020068347, 0.020080556, 0.020081097, 0.020092861, 0.020093403, 0.020106653, 0.020107139, 0.020119097, 0.020119639, 0.020130097, 0.020130639, 0.020139653, 0.020140139, 0.020149236, 0.020149708, 0.020160361, 0.020160833, 0.020173236, 0.020173722, 0.020185861, 0.020186333, 0.020196597, 0.020197069, 0.020208, 0.020208486, 0.020217958, 0.0202185], 'sourcediff': [0, 4.860000000009301e-07, 1.0361000000000398e-05, 5.419999999992098e-07, 1.2791000000001579e-05, 5.419999999992098e-07, 1.2207999999999664e-05, 5.419999999992098e-07, 1.3083000000000539e-05, 5.419999999992098e-07, 1.0028000000002202e-05, 5.419999999992098e-07, 1.0777000000000009e-05, 4.7300000000083386e-07, 1.1805000000000149e-05, 5.419999999992098e-07, 9.153000000001327e-06, 5.409999999997361e-07, 9.445000000000286e-06, 5.409999999997361e-07, 1.3513999999999193e-05, 5.419999999992098e-07, 9.888999999999037e-06, 4.860000000009301e-07, 9.624999999999218e-06, 5.420000000026792e-07, 1.0026999999999259e-05, 5.419999999992098e-07, 9.153000000001327e-06, 4.859999999974607e-07, 9.069000000000438e-06, 4.860000000009301e-07, 1.1805999999999622e-05, 5.419999999992098e-07, 1.1040999999999829e-05, 5.420000000026792e-07, 1.2680999999997028e-05, 4.720000000013602e-07, 1.3569000000001469e-05, 4.859999999974607e-07, 1.1236000000001273e-05, 5.419999999992098e-07, 1.2500000000002093e-05, 5.419999999992098e-07, 9.583000000000508e-06, 5.419999999992098e-07, 1.1930000000000274e-05, 4.860000000009301e-07, 1.0069999999997442e-05, 5.420000000026792e-07, 1.1624999999997748e-05, 5.409999999997361e-07, 1.0320000000001162e-05, 5.409999999997361e-07, 1.1180999999998997e-05, 5.420000000026792e-07, 1.0777000000000009e-05, 4.729999999973644e-07, 9.485999999999523e-06, 5.410000000032056e-07, 1.2805999999997153e-05, 4.860000000009301e-07, 1.2985999999999553e-05, 5.419999999992098e-07, 1.1472000000001953e-05, 5.419999999992098e-07, 1.0915999999999704e-05, 4.860000000009301e-07, 1.0791999999999052e-05, 5.419999999992098e-07, 1.1486000000001523e-05, 5.419999999992098e-07, 1.1625000000001218e-05, 5.409999999997361e-07, 1.2208999999999137e-05, 5.409999999997361e-07, 1.1764000000000913e-05, 5.419999999992098e-07, 1.3249999999999373e-05, 4.860000000009301e-07, 1.1957999999999414e-05, 5.420000000026792e-07, 1.0457999999997913e-05, 5.419999999992098e-07, 9.014000000001632e-06, 4.860000000009301e-07, 9.096999999999578e-06, 4.7199999999789077e-07, 1.0653000000002827e-05, 4.7199999999789077e-07, 1.2403000000001108e-05, 4.860000000009301e-07, 1.2138999999997818e-05, 4.720000000013602e-07, 1.0263999999999412e-05, 4.720000000013602e-07, 1.0930999999998747e-05, 4.860000000009301e-07, 9.471999999999953e-06, 5.419999999992098e-07], 'source_diff': [0, 4.860000000009301e-07, 1.0361000000000398e-05, 5.419999999992098e-07, 1.2791000000001579e-05, 5.419999999992098e-07, 1.2207999999999664e-05, 5.419999999992098e-07, 1.3083000000000539e-05, 5.419999999992098e-07, 1.0028000000002202e-05, 5.419999999992098e-07, 1.0777000000000009e-05, 4.7300000000083386e-07, 1.1805000000000149e-05, 5.419999999992098e-07, 9.153000000001327e-06, 5.409999999997361e-07, 9.445000000000286e-06, 5.409999999997361e-07, 1.3513999999999193e-05, 5.419999999992098e-07, 9.888999999999037e-06, 4.860000000009301e-07, 9.624999999999218e-06, 5.420000000026792e-07, 1.0026999999999259e-05, 5.419999999992098e-07, 9.153000000001327e-06, 4.859999999974607e-07, 9.069000000000438e-06, 4.860000000009301e-07, 1.1805999999999622e-05, 5.419999999992098e-07, 1.1040999999999829e-05, 5.420000000026792e-07, 1.2680999999997028e-05, 4.720000000013602e-07, 1.3569000000001469e-05, 4.859999999974607e-07, 1.1236000000001273e-05, 5.419999999992098e-07, 1.2500000000002093e-05, 5.419999999992098e-07, 9.583000000000508e-06, 5.419999999992098e-07, 1.1930000000000274e-05, 4.860000000009301e-07, 1.0069999999997442e-05, 5.420000000026792e-07, 1.1624999999997748e-05, 5.409999999997361e-07, 1.0320000000001162e-05, 5.409999999997361e-07, 1.1180999999998997e-05, 5.420000000026792e-07, 1.0777000000000009e-05, 4.729999999973644e-07, 9.485999999999523e-06, 5.410000000032056e-07, 1.2805999999997153e-05, 4.860000000009301e-07, 1.2985999999999553e-05, 5.419999999992098e-07, 1.1472000000001953e-05, 5.419999999992098e-07, 1.0915999999999704e-05, 4.860000000009301e-07, 1.0791999999999052e-05, 5.419999999992098e-07, 1.1486000000001523e-05, 5.419999999992098e-07, 1.1625000000001218e-05, 5.409999999997361e-07, 1.2208999999999137e-05, 5.409999999997361e-07, 1.1764000000000913e-05, 5.419999999992098e-07, 1.3249999999999373e-05, 4.860000000009301e-07, 1.1957999999999414e-05, 5.420000000026792e-07, 1.0457999999997913e-05, 5.419999999992098e-07, 9.014000000001632e-06, 4.860000000009301e-07, 9.096999999999578e-06, 4.7199999999789077e-07, 1.0653000000002827e-05, 4.7199999999789077e-07, 1.2403000000001108e-05, 4.860000000009301e-07, 1.2138999999997818e-05, 4.720000000013602e-07, 1.0263999999999412e-05, 4.720000000013602e-07, 1.0930999999998747e-05, 4.860000000009301e-07, 9.471999999999953e-06, 5.419999999992098e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:30:37.107" endtime="20201030 18:30:37.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.103" endtime="20201030 18:30:37.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:37.115" level="INFO">${RESULT} = [{'diff': 4.860000000009301e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:30:37.112" endtime="20201030 18:30:37.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:37.120" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 5.409...</msg>
<status status="PASS" starttime="20201030 18:30:37.116" endtime="20201030 18:30:37.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.124" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:37.123" endtime="20201030 18:30:37.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.127" level="INFO">VALUE: [4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.720000000013602e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.420000000026792e-07, 4.729999999973644e-07, 5.410000000032056e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201030 18:30:37.125" endtime="20201030 18:30:37.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.121" endtime="20201030 18:30:37.128"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:37.131" endtime="20201030 18:30:37.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.130" endtime="20201030 18:30:37.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.129" endtime="20201030 18:30:37.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.717" endtime="20201030 18:30:37.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:36.716" endtime="20201030 18:30:37.152"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.160" endtime="20201030 18:30:37.170"></status>
</kw>
<msg timestamp="20201030 18:30:37.170" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:37.158" endtime="20201030 18:30:37.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.173" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:37.171" endtime="20201030 18:30:37.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.174" endtime="20201030 18:30:37.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.156" endtime="20201030 18:30:37.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.154" endtime="20201030 18:30:37.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.183" endtime="20201030 18:30:37.471"></status>
</kw>
<msg timestamp="20201030 18:30:37.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018389542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018390028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:37.181" endtime="20201030 18:30:37.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018389542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018390028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:37.475" endtime="20201030 18:30:37.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.484" endtime="20201030 18:30:37.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.179" endtime="20201030 18:30:37.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.177" endtime="20201030 18:30:37.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:37.510" level="INFO">${debug} = {'time': [0.018389542, 0.018390028, 0.018402292, 0.018402778, 0.018412986, 0.018413528, 0.018424278, 0.018424819, 0.018435278, 0.018435819, 0.018448181, 0.018448722, 0.018460792, 0.018461278, 0.018473...</msg>
<status status="PASS" starttime="20201030 18:30:37.488" endtime="20201030 18:30:37.511"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.512" endtime="20201030 18:30:37.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.517" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:37.516" endtime="20201030 18:30:37.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.521" level="INFO">VALUE: {'time': [0.018389542, 0.018390028, 0.018402292, 0.018402778, 0.018412986, 0.018413528, 0.018424278, 0.018424819, 0.018435278, 0.018435819, 0.018448181, 0.018448722, 0.018460792, 0.018461278, 0.01847375, 0.018474222, 0.018486722, 0.018487264, 0.018497431, 0.018497972, 0.018509889, 0.018510431, 0.018519889, 0.018520375, 0.018533528, 0.018534, 0.018545958, 0.0185465, 0.018555958, 0.018556444, 0.018566667, 0.018567153, 0.018578958, 0.0185795, 0.018590694, 0.018591236, 0.018603014, 0.018603556, 0.018615319, 0.018615861, 0.018626611, 0.018627153, 0.018638931, 0.018639472, 0.018650083, 0.018650625, 0.018662542, 0.018663083, 0.018673125, 0.018673597, 0.018686139, 0.018686681, 0.018699042, 0.018699583, 0.018709611, 0.018710153, 0.018723667, 0.018724208, 0.018736583, 0.018737069, 0.018749458, 0.01875, 0.018762514, 0.018763, 0.018774681, 0.018775222, 0.018784361, 0.018784903, 0.018796819, 0.018797361, 0.018809861, 0.018810403, 0.018819403, 0.018819944, 0.018831597, 0.018832083, 0.018842875, 0.018843417, 0.018853583, 0.018854125, 0.018865472, 0.018865958, 0.018877917, 0.018878458, 0.018888625, 0.018889167, 0.018898611, 0.018899153, 0.018909319, 0.018909861, 0.018920319, 0.018920861, 0.018934, 0.018934472, 0.018947569, 0.018948111, 0.018960472, 0.018961014, 0.018974236, 0.018974778], 'sourcediff': [0, 4.860000000009301e-07, 1.2264000000001413e-05, 4.860000000009301e-07, 1.0207999999997663e-05, 5.419999999992098e-07, 1.0750000000000343e-05, 5.409999999997361e-07, 1.0459000000000857e-05, 5.409999999997361e-07, 1.2362000000001871e-05, 5.409999999997361e-07, 1.2069999999999442e-05, 4.860000000009301e-07, 1.2471999999999483e-05, 4.7199999999789077e-07, 1.2500000000002093e-05, 5.419999999992098e-07, 1.0167000000001897e-05, 5.409999999997361e-07, 1.1917000000000177e-05, 5.419999999992098e-07, 9.458000000000383e-06, 4.859999999974607e-07, 1.3153000000001858e-05, 4.7199999999789077e-07, 1.1958000000002883e-05, 5.419999999992098e-07, 9.458000000000383e-06, 4.859999999974607e-07, 1.0223000000000176e-05, 4.860000000009301e-07, 1.1805000000000149e-05, 5.419999999992098e-07, 1.1194000000002563e-05, 5.419999999992098e-07, 1.1778000000000483e-05, 5.419999999992098e-07, 1.1763000000001439e-05, 5.419999999992098e-07, 1.0750000000000343e-05, 5.419999999992098e-07, 1.1778000000000483e-05, 5.409999999997361e-07, 1.0611000000000648e-05, 5.419999999992098e-07, 1.1917000000000177e-05, 5.409999999997361e-07, 1.0041999999998302e-05, 4.720000000013602e-07, 1.2542000000000803e-05, 5.419999999992098e-07, 1.2360999999998928e-05, 5.409999999997361e-07, 1.0028000000002202e-05, 5.419999999992098e-07, 1.3513999999999193e-05, 5.409999999997361e-07, 1.2375000000001968e-05, 4.859999999974607e-07, 1.2389000000001538e-05, 5.419999999992098e-07, 1.2514000000001663e-05, 4.859999999974607e-07, 1.1681000000002967e-05, 5.409999999997361e-07, 9.138999999998287e-06, 5.419999999992098e-07, 1.1916000000000704e-05, 5.419999999992098e-07, 1.2500000000002093e-05, 5.419999999992098e-07, 8.999999999998592e-06, 5.410000000032056e-07, 1.1652999999996888e-05, 4.860000000009301e-07, 1.0791999999999052e-05, 5.420000000026792e-07, 1.0165999999998954e-05, 5.419999999992098e-07, 1.1347000000001828e-05, 4.859999999974607e-07, 1.1959000000002357e-05, 5.409999999997361e-07, 1.0166999999998427e-05, 5.419999999992098e-07, 9.444000000000813e-06, 5.419999999992098e-07, 1.0166000000002423e-05, 5.419999999992098e-07, 1.0458000000001383e-05, 5.419999999992098e-07, 1.3138999999998818e-05, 4.720000000013602e-07, 1.3097000000000109e-05, 5.419999999992098e-07, 1.2360999999998928e-05, 5.420000000026792e-07, 1.3221999999996764e-05, 5.420000000026792e-07], 'source_diff': [0, 4.860000000009301e-07, 1.2264000000001413e-05, 4.860000000009301e-07, 1.0207999999997663e-05, 5.419999999992098e-07, 1.0750000000000343e-05, 5.409999999997361e-07, 1.0459000000000857e-05, 5.409999999997361e-07, 1.2362000000001871e-05, 5.409999999997361e-07, 1.2069999999999442e-05, 4.860000000009301e-07, 1.2471999999999483e-05, 4.7199999999789077e-07, 1.2500000000002093e-05, 5.419999999992098e-07, 1.0167000000001897e-05, 5.409999999997361e-07, 1.1917000000000177e-05, 5.419999999992098e-07, 9.458000000000383e-06, 4.859999999974607e-07, 1.3153000000001858e-05, 4.7199999999789077e-07, 1.1958000000002883e-05, 5.419999999992098e-07, 9.458000000000383e-06, 4.859999999974607e-07, 1.0223000000000176e-05, 4.860000000009301e-07, 1.1805000000000149e-05, 5.419999999992098e-07, 1.1194000000002563e-05, 5.419999999992098e-07, 1.1778000000000483e-05, 5.419999999992098e-07, 1.1763000000001439e-05, 5.419999999992098e-07, 1.0750000000000343e-05, 5.419999999992098e-07, 1.1778000000000483e-05, 5.409999999997361e-07, 1.0611000000000648e-05, 5.419999999992098e-07, 1.1917000000000177e-05, 5.409999999997361e-07, 1.0041999999998302e-05, 4.720000000013602e-07, 1.2542000000000803e-05, 5.419999999992098e-07, 1.2360999999998928e-05, 5.409999999997361e-07, 1.0028000000002202e-05, 5.419999999992098e-07, 1.3513999999999193e-05, 5.409999999997361e-07, 1.2375000000001968e-05, 4.859999999974607e-07, 1.2389000000001538e-05, 5.419999999992098e-07, 1.2514000000001663e-05, 4.859999999974607e-07, 1.1681000000002967e-05, 5.409999999997361e-07, 9.138999999998287e-06, 5.419999999992098e-07, 1.1916000000000704e-05, 5.419999999992098e-07, 1.2500000000002093e-05, 5.419999999992098e-07, 8.999999999998592e-06, 5.410000000032056e-07, 1.1652999999996888e-05, 4.860000000009301e-07, 1.0791999999999052e-05, 5.420000000026792e-07, 1.0165999999998954e-05, 5.419999999992098e-07, 1.1347000000001828e-05, 4.859999999974607e-07, 1.1959000000002357e-05, 5.409999999997361e-07, 1.0166999999998427e-05, 5.419999999992098e-07, 9.444000000000813e-06, 5.419999999992098e-07, 1.0166000000002423e-05, 5.419999999992098e-07, 1.0458000000001383e-05, 5.419999999992098e-07, 1.3138999999998818e-05, 4.720000000013602e-07, 1.3097000000000109e-05, 5.419999999992098e-07, 1.2360999999998928e-05, 5.420000000026792e-07, 1.3221999999996764e-05, 5.420000000026792e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:30:37.518" endtime="20201030 18:30:37.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.514" endtime="20201030 18:30:37.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:37.527" level="INFO">${RESULT} = [{'diff': 4.860000000009301e-07}, {'diff': 4.860000000009301e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.409999999997361e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:30:37.523" endtime="20201030 18:30:37.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:37.531" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 5.419...</msg>
<status status="PASS" starttime="20201030 18:30:37.528" endtime="20201030 18:30:37.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.536" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:37.535" endtime="20201030 18:30:37.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.538" level="INFO">VALUE: [4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.410000000032056e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.420000000026792e-07]</msg>
<status status="PASS" starttime="20201030 18:30:37.537" endtime="20201030 18:30:37.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.532" endtime="20201030 18:30:37.539"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:37.543" endtime="20201030 18:30:37.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.541" endtime="20201030 18:30:37.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.540" endtime="20201030 18:30:37.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.153" endtime="20201030 18:30:37.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.152" endtime="20201030 18:30:37.563"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.571" endtime="20201030 18:30:37.581"></status>
</kw>
<msg timestamp="20201030 18:30:37.582" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:37.570" endtime="20201030 18:30:37.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.587" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:37.583" endtime="20201030 18:30:37.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.589" endtime="20201030 18:30:37.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.567" endtime="20201030 18:30:37.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.565" endtime="20201030 18:30:37.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.605" endtime="20201030 18:30:37.893"></status>
</kw>
<msg timestamp="20201030 18:30:37.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018395139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018395625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:37.602" endtime="20201030 18:30:37.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018395139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018395625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:37.897" endtime="20201030 18:30:37.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.910" endtime="20201030 18:30:37.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.597" endtime="20201030 18:30:37.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.596" endtime="20201030 18:30:37.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:37.938" level="INFO">${debug} = {'time': [0.018395139, 0.018395625, 0.018406125, 0.018406667, 0.018417278, 0.018417819, 0.018429, 0.018429542, 0.018440458, 0.018440944, 0.01845275, 0.018453292, 0.018466819, 0.018467361, 0.018480736,...</msg>
<status status="PASS" starttime="20201030 18:30:37.914" endtime="20201030 18:30:37.938"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.939" endtime="20201030 18:30:37.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.944" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:37.943" endtime="20201030 18:30:37.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.948" level="INFO">VALUE: {'time': [0.018395139, 0.018395625, 0.018406125, 0.018406667, 0.018417278, 0.018417819, 0.018429, 0.018429542, 0.018440458, 0.018440944, 0.01845275, 0.018453292, 0.018466819, 0.018467361, 0.018480736, 0.018481278, 0.018492903, 0.018493444, 0.018504792, 0.018505278, 0.018518875, 0.018519347, 0.018528833, 0.018529319, 0.018540847, 0.018541389, 0.018554653, 0.018555125, 0.018568097, 0.018568639, 0.018580583, 0.018581056, 0.018592889, 0.018593375, 0.0186065, 0.018607042, 0.018616917, 0.018617458, 0.018627514, 0.018627986, 0.018640681, 0.018641167, 0.018654153, 0.018654694, 0.018665167, 0.018665653, 0.018676014, 0.018676556, 0.018688319, 0.018688861, 0.018700347, 0.018700889, 0.018710625, 0.018711111, 0.018721486, 0.018721972, 0.018733056, 0.018733597, 0.018746833, 0.018747375, 0.018760764, 0.01876125, 0.018773792, 0.018774333, 0.018785819, 0.018786361, 0.018796528, 0.018797069, 0.018808694, 0.018809236, 0.018819986, 0.018820528, 0.018831139, 0.018831681, 0.018840972, 0.018841514, 0.018853736, 0.018854222, 0.018866903, 0.018867444, 0.018880819, 0.018881361, 0.018893931, 0.018894403, 0.018907931, 0.018908472, 0.018919958, 0.0189205, 0.018933889, 0.018934375, 0.018947653, 0.018948139, 0.01896025, 0.018960792, 0.018971403, 0.018971944, 0.018981097, 0.018981583, 0.018991944, 0.018992486], 'sourcediff': [0, 4.859999999974607e-07, 1.0500000000000093e-05, 5.420000000026792e-07, 1.0610999999997178e-05, 5.409999999997361e-07, 1.1181000000002467e-05, 5.419999999992098e-07, 1.0915999999999704e-05, 4.860000000009301e-07, 1.1805999999999622e-05, 5.419999999992098e-07, 1.352699999999929e-05, 5.420000000026792e-07, 1.3374999999999498e-05, 5.419999999992098e-07, 1.1625000000001218e-05, 5.409999999997361e-07, 1.1347999999997832e-05, 4.860000000009301e-07, 1.3597000000000609e-05, 4.7199999999789077e-07, 9.486000000002992e-06, 4.859999999974607e-07, 1.1528000000000233e-05, 5.419999999992098e-07, 1.3264000000002413e-05, 4.7199999999789077e-07, 1.2971999999999984e-05, 5.420000000026792e-07, 1.1943999999999844e-05, 4.729999999973644e-07, 1.1833000000002758e-05, 4.859999999974607e-07, 1.3125000000002718e-05, 5.419999999992098e-07, 9.874999999999468e-06, 5.409999999997361e-07, 1.0056000000001342e-05, 4.7199999999789077e-07, 1.2695000000000067e-05, 4.860000000009301e-07, 1.2985999999999553e-05, 5.409999999997361e-07, 1.0473000000000426e-05, 4.860000000009301e-07, 1.0361000000000398e-05, 5.419999999992098e-07, 1.176299999999797e-05, 5.420000000026792e-07, 1.1485999999998053e-05, 5.419999999992098e-07, 9.736000000003242e-06, 4.859999999974607e-07, 1.0374999999999968e-05, 4.860000000009301e-07, 1.1084000000001482e-05, 5.409999999997361e-07, 1.3235999999999803e-05, 5.419999999992098e-07, 1.3388999999999068e-05, 4.860000000009301e-07, 1.2542000000000803e-05, 5.409999999997361e-07, 1.1485999999998053e-05, 5.420000000026792e-07, 1.0166999999998427e-05, 5.409999999997361e-07, 1.1625000000001218e-05, 5.419999999992098e-07, 1.0750000000000343e-05, 5.419999999992098e-07, 1.0611000000000648e-05, 5.419999999992098e-07, 9.291000000001548e-06, 5.419999999992098e-07, 1.2221999999999233e-05, 4.860000000009301e-07, 1.2681000000000497e-05, 5.409999999997361e-07, 1.3374999999999498e-05, 5.419999999992098e-07, 1.2569999999999942e-05, 4.720000000013602e-07, 1.3527999999998763e-05, 5.409999999997361e-07, 1.1486000000001523e-05, 5.419999999992098e-07, 1.3388999999999068e-05, 4.860000000009301e-07, 1.3277999999998513e-05, 4.860000000009301e-07, 1.2111000000002148e-05, 5.419999999992098e-07, 1.0611000000000648e-05, 5.409999999997361e-07, 9.152999999997857e-06, 4.860000000009301e-07, 1.0361000000000398e-05, 5.419999999992098e-07], 'source_diff': [0, 4.859999999974607e-07, 1.0500000000000093e-05, 5.420000000026792e-07, 1.0610999999997178e-05, 5.409999999997361e-07, 1.1181000000002467e-05, 5.419999999992098e-07, 1.0915999999999704e-05, 4.860000000009301e-07, 1.1805999999999622e-05, 5.419999999992098e-07, 1.352699999999929e-05, 5.420000000026792e-07, 1.3374999999999498e-05, 5.419999999992098e-07, 1.1625000000001218e-05, 5.409999999997361e-07, 1.1347999999997832e-05, 4.860000000009301e-07, 1.3597000000000609e-05, 4.7199999999789077e-07, 9.486000000002992e-06, 4.859999999974607e-07, 1.1528000000000233e-05, 5.419999999992098e-07, 1.3264000000002413e-05, 4.7199999999789077e-07, 1.2971999999999984e-05, 5.420000000026792e-07, 1.1943999999999844e-05, 4.729999999973644e-07, 1.1833000000002758e-05, 4.859999999974607e-07, 1.3125000000002718e-05, 5.419999999992098e-07, 9.874999999999468e-06, 5.409999999997361e-07, 1.0056000000001342e-05, 4.7199999999789077e-07, 1.2695000000000067e-05, 4.860000000009301e-07, 1.2985999999999553e-05, 5.409999999997361e-07, 1.0473000000000426e-05, 4.860000000009301e-07, 1.0361000000000398e-05, 5.419999999992098e-07, 1.176299999999797e-05, 5.420000000026792e-07, 1.1485999999998053e-05, 5.419999999992098e-07, 9.736000000003242e-06, 4.859999999974607e-07, 1.0374999999999968e-05, 4.860000000009301e-07, 1.1084000000001482e-05, 5.409999999997361e-07, 1.3235999999999803e-05, 5.419999999992098e-07, 1.3388999999999068e-05, 4.860000000009301e-07, 1.2542000000000803e-05, 5.409999999997361e-07, 1.1485999999998053e-05, 5.420000000026792e-07, 1.0166999999998427e-05, 5.409999999997361e-07, 1.1625000000001218e-05, 5.419999999992098e-07, 1.0750000000000343e-05, 5.419999999992098e-07, 1.0611000000000648e-05, 5.419999999992098e-07, 9.291000000001548e-06, 5.419999999992098e-07, 1.2221999999999233e-05, 4.860000000009301e-07, 1.2681000000000497e-05, 5.409999999997361e-07, 1.3374999999999498e-05, 5.419999999992098e-07, 1.2569999999999942e-05, 4.720000000013602e-07, 1.3527999999998763e-05, 5.409999999997361e-07, 1.1486000000001523e-05, 5.419999999992098e-07, 1.3388999999999068e-05, 4.860000000009301e-07, 1.3277999999998513e-05, 4.860000000009301e-07, 1.2111000000002148e-05, 5.419999999992098e-07, 1.0611000000000648e-05, 5.409999999997361e-07, 9.152999999997857e-06, 4.860000000009301e-07, 1.0361000000000398e-05, 5.419999999992098e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:30:37.945" endtime="20201030 18:30:37.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.941" endtime="20201030 18:30:37.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:37.954" level="INFO">${RESULT} = [{'diff': 4.859999999974607e-07}, {'diff': 5.420000000026792e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {'diff': 4.860000000009301e-07}, {'diff': 5.419999999992098e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:30:37.951" endtime="20201030 18:30:37.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:37.958" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.859999999974607e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.4099...</msg>
<status status="PASS" starttime="20201030 18:30:37.955" endtime="20201030 18:30:37.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.962" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:37.961" endtime="20201030 18:30:37.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.964" level="INFO">VALUE: [4.859999999974607e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 5.420000000026792e-07, 4.729999999973644e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201030 18:30:37.963" endtime="20201030 18:30:37.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.959" endtime="20201030 18:30:37.965"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:37.969" endtime="20201030 18:30:37.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.967" endtime="20201030 18:30:37.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.966" endtime="20201030 18:30:37.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.564" endtime="20201030 18:30:37.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.564" endtime="20201030 18:30:37.990"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.998" endtime="20201030 18:30:38.008"></status>
</kw>
<msg timestamp="20201030 18:30:38.009" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:37.997" endtime="20201030 18:30:38.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.011" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:38.010" endtime="20201030 18:30:38.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.012" endtime="20201030 18:30:38.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.994" endtime="20201030 18:30:38.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.992" endtime="20201030 18:30:38.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.021" endtime="20201030 18:30:38.306"></status>
</kw>
<msg timestamp="20201030 18:30:38.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019247931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019248472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:38.020" endtime="20201030 18:30:38.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019247931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019248472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:38.310" endtime="20201030 18:30:38.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.319" endtime="20201030 18:30:38.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.017" endtime="20201030 18:30:38.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.015" endtime="20201030 18:30:38.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:38.345" level="INFO">${debug} = {'time': [0.019247931, 0.019248472, 0.019258486, 0.019259028, 0.019268181, 0.019268722, 0.019279028, 0.019279569, 0.019288792, 0.019289264, 0.019302208, 0.01930275, 0.019314972, 0.019315458, 0.0193253...</msg>
<status status="PASS" starttime="20201030 18:30:38.322" endtime="20201030 18:30:38.345"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.346" endtime="20201030 18:30:38.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.351" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:38.350" endtime="20201030 18:30:38.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.355" level="INFO">VALUE: {'time': [0.019247931, 0.019248472, 0.019258486, 0.019259028, 0.019268181, 0.019268722, 0.019279028, 0.019279569, 0.019288792, 0.019289264, 0.019302208, 0.01930275, 0.019314972, 0.019315458, 0.019325375, 0.019325917, 0.019336222, 0.019336764, 0.019349417, 0.019349958, 0.019359542, 0.019360083, 0.019373472, 0.019373958, 0.019383306, 0.019383792, 0.019393708, 0.01939425, 0.019404736, 0.019405208, 0.019416597, 0.019417139, 0.019430528, 0.019431014, 0.019443889, 0.019444361, 0.019455153, 0.019455639, 0.019465556, 0.019466097, 0.019477722, 0.019478264, 0.019491792, 0.019492333, 0.019504403, 0.019504889, 0.019514528, 0.019515014, 0.019528292, 0.019528833, 0.019538181, 0.019538653, 0.01954825, 0.019548792, 0.019559306, 0.019559778, 0.019570403, 0.019570944, 0.019584028, 0.019584569, 0.01959525, 0.019595722, 0.019605889, 0.019606431, 0.019619514, 0.019620056, 0.019631403, 0.019631889, 0.019644889, 0.019645361, 0.019657056, 0.019657542, 0.019670806, 0.019671347, 0.019684, 0.019684542, 0.019693972, 0.019694514, 0.019705708, 0.01970625, 0.019719042, 0.019719583, 0.019731944, 0.019732486, 0.019745125, 0.019745667, 0.019755986, 0.019756528, 0.019767292, 0.019767778, 0.019779319, 0.019779806, 0.019790056, 0.019790528, 0.019801458, 0.019801944, 0.019814639, 0.019815181, 0.019827681, 0.019828222], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 5.409999999997361e-07, 1.0013999999999162e-05, 5.420000000026792e-07, 9.152999999997857e-06, 5.409999999997361e-07, 1.0306000000001592e-05, 5.409999999997361e-07, 9.222999999999176e-06, 4.720000000013602e-07, 1.2944000000000844e-05, 5.419999999992098e-07, 1.2221999999999233e-05, 4.860000000009301e-07, 9.916999999998177e-06, 5.420000000026792e-07, 1.0304999999998649e-05, 5.419999999992098e-07, 1.2653000000001358e-05, 5.409999999997361e-07, 9.583999999999981e-06, 5.409999999997361e-07, 1.3388999999999068e-05, 4.860000000009301e-07, 9.347999999999301e-06, 4.860000000009301e-07, 9.915999999998704e-06, 5.419999999992098e-07, 1.0486000000000523e-05, 4.720000000013602e-07, 1.1389000000000538e-05, 5.419999999992098e-07, 1.3388999999999068e-05, 4.860000000009301e-07, 1.2874999999998998e-05, 4.720000000013602e-07, 1.0791999999999052e-05, 4.860000000009301e-07, 9.916999999998177e-06, 5.410000000032056e-07, 1.1624999999997748e-05, 5.419999999992098e-07, 1.3528000000002233e-05, 5.409999999997361e-07, 1.2069999999999442e-05, 4.860000000009301e-07, 9.638999999998787e-06, 4.860000000009301e-07, 1.3277999999998513e-05, 5.409999999997361e-07, 9.34800000000277e-06, 4.7199999999789077e-07, 9.597000000000078e-06, 5.419999999992098e-07, 1.0513999999999663e-05, 4.720000000013602e-07, 1.0625000000000218e-05, 5.409999999997361e-07, 1.3084000000000012e-05, 5.409999999997361e-07, 1.0681000000001967e-05, 4.7199999999789077e-07, 1.0167000000001897e-05, 5.419999999992098e-07, 1.3083000000000539e-05, 5.419999999992098e-07, 1.1346999999998358e-05, 4.860000000009301e-07, 1.2999999999999123e-05, 4.720000000013602e-07, 1.1694999999999067e-05, 4.860000000009301e-07, 1.3263999999998943e-05, 5.409999999997361e-07, 1.2653000000001358e-05, 5.419999999992098e-07, 9.430000000001243e-06, 5.419999999992098e-07, 1.1193999999999094e-05, 5.420000000026792e-07, 1.2791999999997583e-05, 5.409999999997361e-07, 1.2361000000002398e-05, 5.419999999992098e-07, 1.2638999999998318e-05, 5.420000000026792e-07, 1.0318999999998218e-05, 5.419999999992098e-07, 1.0763999999999913e-05, 4.860000000009301e-07, 1.1541000000000329e-05, 4.870000000004038e-07, 1.0249999999999843e-05, 4.720000000013602e-07, 1.0929999999999274e-05, 4.859999999974607e-07, 1.2695000000000067e-05, 5.420000000026792e-07, 1.2499999999998623e-05, 5.409999999997361e-07], 'source_diff': [0, 5.409999999997361e-07, 1.0013999999999162e-05, 5.420000000026792e-07, 9.152999999997857e-06, 5.409999999997361e-07, 1.0306000000001592e-05, 5.409999999997361e-07, 9.222999999999176e-06, 4.720000000013602e-07, 1.2944000000000844e-05, 5.419999999992098e-07, 1.2221999999999233e-05, 4.860000000009301e-07, 9.916999999998177e-06, 5.420000000026792e-07, 1.0304999999998649e-05, 5.419999999992098e-07, 1.2653000000001358e-05, 5.409999999997361e-07, 9.583999999999981e-06, 5.409999999997361e-07, 1.3388999999999068e-05, 4.860000000009301e-07, 9.347999999999301e-06, 4.860000000009301e-07, 9.915999999998704e-06, 5.419999999992098e-07, 1.0486000000000523e-05, 4.720000000013602e-07, 1.1389000000000538e-05, 5.419999999992098e-07, 1.3388999999999068e-05, 4.860000000009301e-07, 1.2874999999998998e-05, 4.720000000013602e-07, 1.0791999999999052e-05, 4.860000000009301e-07, 9.916999999998177e-06, 5.410000000032056e-07, 1.1624999999997748e-05, 5.419999999992098e-07, 1.3528000000002233e-05, 5.409999999997361e-07, 1.2069999999999442e-05, 4.860000000009301e-07, 9.638999999998787e-06, 4.860000000009301e-07, 1.3277999999998513e-05, 5.409999999997361e-07, 9.34800000000277e-06, 4.7199999999789077e-07, 9.597000000000078e-06, 5.419999999992098e-07, 1.0513999999999663e-05, 4.720000000013602e-07, 1.0625000000000218e-05, 5.409999999997361e-07, 1.3084000000000012e-05, 5.409999999997361e-07, 1.0681000000001967e-05, 4.7199999999789077e-07, 1.0167000000001897e-05, 5.419999999992098e-07, 1.3083000000000539e-05, 5.419999999992098e-07, 1.1346999999998358e-05, 4.860000000009301e-07, 1.2999999999999123e-05, 4.720000000013602e-07, 1.1694999999999067e-05, 4.860000000009301e-07, 1.3263999999998943e-05, 5.409999999997361e-07, 1.2653000000001358e-05, 5.419999999992098e-07, 9.430000000001243e-06, 5.419999999992098e-07, 1.1193999999999094e-05, 5.420000000026792e-07, 1.2791999999997583e-05, 5.409999999997361e-07, 1.2361000000002398e-05, 5.419999999992098e-07, 1.2638999999998318e-05, 5.420000000026792e-07, 1.0318999999998218e-05, 5.419999999992098e-07, 1.0763999999999913e-05, 4.860000000009301e-07, 1.1541000000000329e-05, 4.870000000004038e-07, 1.0249999999999843e-05, 4.720000000013602e-07, 1.0929999999999274e-05, 4.859999999974607e-07, 1.2695000000000067e-05, 5.420000000026792e-07, 1.2499999999998623e-05, 5.409999999997361e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:30:38.352" endtime="20201030 18:30:38.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.348" endtime="20201030 18:30:38.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:38.361" level="INFO">${RESULT} = [{'diff': 5.409999999997361e-07}, {'diff': 5.420000000026792e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.409999999997361e-07}, {'diff': 4.720000000013602e-07}, {'diff': 5.419999999992098e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:30:38.358" endtime="20201030 18:30:38.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:38.365" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.4199...</msg>
<status status="PASS" starttime="20201030 18:30:38.362" endtime="20201030 18:30:38.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.370" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:38.369" endtime="20201030 18:30:38.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.372" level="INFO">VALUE: [5.409999999997361e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.410000000032056e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.859999999974607e-07, 5.420000000026792e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201030 18:30:38.371" endtime="20201030 18:30:38.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.366" endtime="20201030 18:30:38.373"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:38.377" endtime="20201030 18:30:38.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.375" endtime="20201030 18:30:38.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.374" endtime="20201030 18:30:38.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.990" endtime="20201030 18:30:38.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.990" endtime="20201030 18:30:38.397"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.405" endtime="20201030 18:30:38.416"></status>
</kw>
<msg timestamp="20201030 18:30:38.416" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:38.403" endtime="20201030 18:30:38.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.418" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:38.417" endtime="20201030 18:30:38.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.419" endtime="20201030 18:30:38.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.401" endtime="20201030 18:30:38.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.399" endtime="20201030 18:30:38.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.428" endtime="20201030 18:30:38.720"></status>
</kw>
<msg timestamp="20201030 18:30:38.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018497222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018497764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:38.427" endtime="20201030 18:30:38.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018497222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018497764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:38.726" endtime="20201030 18:30:38.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.738" endtime="20201030 18:30:38.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.424" endtime="20201030 18:30:38.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.423" endtime="20201030 18:30:38.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:38.765" level="INFO">${debug} = {'time': [0.018497222, 0.018497764, 0.018509097, 0.018509639, 0.018522278, 0.018522819, 0.018532611, 0.018533083, 0.018544472, 0.018544944, 0.018558222, 0.018558708, 0.018569208, 0.01856975, 0.0185808...</msg>
<status status="PASS" starttime="20201030 18:30:38.741" endtime="20201030 18:30:38.765"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.766" endtime="20201030 18:30:38.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.771" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:38.770" endtime="20201030 18:30:38.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.776" level="INFO">VALUE: {'time': [0.018497222, 0.018497764, 0.018509097, 0.018509639, 0.018522278, 0.018522819, 0.018532611, 0.018533083, 0.018544472, 0.018544944, 0.018558222, 0.018558708, 0.018569208, 0.01856975, 0.018580819, 0.018581292, 0.018591792, 0.018592333, 0.018603833, 0.018604319, 0.018615847, 0.018616333, 0.018627861, 0.018628403, 0.018637778, 0.01863825, 0.018651181, 0.018651667, 0.018662778, 0.018663264, 0.018676819, 0.018677361, 0.018690889, 0.018691431, 0.018702181, 0.018702722, 0.018715819, 0.018716306, 0.018729722, 0.018730264, 0.018742625, 0.018743167, 0.018755528, 0.018756014, 0.018766528, 0.018767014, 0.018778542, 0.018779083, 0.018788097, 0.018788583, 0.018801125, 0.018801667, 0.018810819, 0.018811361, 0.018821528, 0.018822069, 0.018831806, 0.018832292, 0.018842819, 0.018843306, 0.018855986, 0.018856528, 0.018865528, 0.018866069, 0.018877847, 0.018878389, 0.018888264, 0.018888806, 0.018901306, 0.018901847, 0.018914056, 0.018914597, 0.018925639, 0.018926181, 0.018936056, 0.018936597, 0.018948236, 0.018948722, 0.018961569, 0.018962111, 0.018972278, 0.018972819, 0.01898475, 0.018985236, 0.018998653, 0.018999194, 0.019011847, 0.019012333, 0.019024889, 0.019025431, 0.019038806, 0.019039347, 0.019051111, 0.019051653, 0.019062986, 0.019063528, 0.019076764, 0.019077306, 0.01908975, 0.019090222], 'sourcediff': [0, 5.419999999992098e-07, 1.1332999999998788e-05, 5.420000000026792e-07, 1.2638999999998318e-05, 5.409999999997361e-07, 9.792000000001522e-06, 4.7199999999789077e-07, 1.1389000000000538e-05, 4.720000000013602e-07, 1.3277999999998513e-05, 4.860000000009301e-07, 1.0500000000000093e-05, 5.419999999992098e-07, 1.1068999999998969e-05, 4.7300000000083386e-07, 1.0500000000000093e-05, 5.409999999997361e-07, 1.1500000000001093e-05, 4.860000000009301e-07, 1.1528000000000233e-05, 4.859999999974607e-07, 1.1528000000000233e-05, 5.420000000026792e-07, 9.374999999998967e-06, 4.7199999999789077e-07, 1.2931000000000747e-05, 4.860000000009301e-07, 1.1111000000001148e-05, 4.859999999974607e-07, 1.3555000000001899e-05, 5.419999999992098e-07, 1.3527999999998763e-05, 5.420000000026792e-07, 1.0749999999996873e-05, 5.410000000032056e-07, 1.3097000000000109e-05, 4.869999999969343e-07, 1.3416000000002204e-05, 5.419999999992098e-07, 1.2360999999998928e-05, 5.420000000026792e-07, 1.2360999999998928e-05, 4.860000000009301e-07, 1.0513999999999663e-05, 4.859999999974607e-07, 1.1528000000000233e-05, 5.409999999997361e-07, 9.014000000001632e-06, 4.860000000009301e-07, 1.2541999999997333e-05, 5.420000000026792e-07, 9.151999999998384e-06, 5.419999999992098e-07, 1.0167000000001897e-05, 5.409999999997361e-07, 9.736999999999246e-06, 4.860000000009301e-07, 1.0526999999999759e-05, 4.870000000004038e-07, 1.2680000000001024e-05, 5.419999999992098e-07, 8.999999999998592e-06, 5.409999999997361e-07, 1.1778000000000483e-05, 5.419999999992098e-07, 9.874999999999468e-06, 5.420000000026792e-07, 1.2499999999998623e-05, 5.409999999997361e-07, 1.2208999999999137e-05, 5.409999999997361e-07, 1.1042000000002772e-05, 5.419999999992098e-07, 9.874999999999468e-06, 5.409999999997361e-07, 1.1639000000000788e-05, 4.860000000009301e-07, 1.2846999999999859e-05, 5.419999999992098e-07, 1.0166999999998427e-05, 5.409999999997361e-07, 1.1931000000003217e-05, 4.859999999974607e-07, 1.3417000000001678e-05, 5.409999999997361e-07, 1.2652999999997888e-05, 4.860000000009301e-07, 1.2556000000000372e-05, 5.419999999992098e-07, 1.3374999999999498e-05, 5.410000000032056e-07, 1.1763999999997443e-05, 5.420000000026792e-07, 1.1332999999998788e-05, 5.419999999992098e-07, 1.3235999999999803e-05, 5.419999999992098e-07, 1.2444000000000344e-05, 4.720000000013602e-07], 'source_diff': [0, 5.419999999992098e-07, 1.1332999999998788e-05, 5.420000000026792e-07, 1.2638999999998318e-05, 5.409999999997361e-07, 9.792000000001522e-06, 4.7199999999789077e-07, 1.1389000000000538e-05, 4.720000000013602e-07, 1.3277999999998513e-05, 4.860000000009301e-07, 1.0500000000000093e-05, 5.419999999992098e-07, 1.1068999999998969e-05, 4.7300000000083386e-07, 1.0500000000000093e-05, 5.409999999997361e-07, 1.1500000000001093e-05, 4.860000000009301e-07, 1.1528000000000233e-05, 4.859999999974607e-07, 1.1528000000000233e-05, 5.420000000026792e-07, 9.374999999998967e-06, 4.7199999999789077e-07, 1.2931000000000747e-05, 4.860000000009301e-07, 1.1111000000001148e-05, 4.859999999974607e-07, 1.3555000000001899e-05, 5.419999999992098e-07, 1.3527999999998763e-05, 5.420000000026792e-07, 1.0749999999996873e-05, 5.410000000032056e-07, 1.3097000000000109e-05, 4.869999999969343e-07, 1.3416000000002204e-05, 5.419999999992098e-07, 1.2360999999998928e-05, 5.420000000026792e-07, 1.2360999999998928e-05, 4.860000000009301e-07, 1.0513999999999663e-05, 4.859999999974607e-07, 1.1528000000000233e-05, 5.409999999997361e-07, 9.014000000001632e-06, 4.860000000009301e-07, 1.2541999999997333e-05, 5.420000000026792e-07, 9.151999999998384e-06, 5.419999999992098e-07, 1.0167000000001897e-05, 5.409999999997361e-07, 9.736999999999246e-06, 4.860000000009301e-07, 1.0526999999999759e-05, 4.870000000004038e-07, 1.2680000000001024e-05, 5.419999999992098e-07, 8.999999999998592e-06, 5.409999999997361e-07, 1.1778000000000483e-05, 5.419999999992098e-07, 9.874999999999468e-06, 5.420000000026792e-07, 1.2499999999998623e-05, 5.409999999997361e-07, 1.2208999999999137e-05, 5.409999999997361e-07, 1.1042000000002772e-05, 5.419999999992098e-07, 9.874999999999468e-06, 5.409999999997361e-07, 1.1639000000000788e-05, 4.860000000009301e-07, 1.2846999999999859e-05, 5.419999999992098e-07, 1.0166999999998427e-05, 5.409999999997361e-07, 1.1931000000003217e-05, 4.859999999974607e-07, 1.3417000000001678e-05, 5.409999999997361e-07, 1.2652999999997888e-05, 4.860000000009301e-07, 1.2556000000000372e-05, 5.419999999992098e-07, 1.3374999999999498e-05, 5.410000000032056e-07, 1.1763999999997443e-05, 5.420000000026792e-07, 1.1332999999998788e-05, 5.419999999992098e-07, 1.3235999999999803e-05, 5.419999999992098e-07, 1.2444000000000344e-05, 4.720000000013602e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:30:38.773" endtime="20201030 18:30:38.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.768" endtime="20201030 18:30:38.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:38.781" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 5.420000000026792e-07}, {'diff': 5.409999999997361e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:30:38.778" endtime="20201030 18:30:38.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:38.786" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 5.420000000026792e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 5.40...</msg>
<status status="PASS" starttime="20201030 18:30:38.782" endtime="20201030 18:30:38.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.791" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:38.790" endtime="20201030 18:30:38.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.794" level="INFO">VALUE: [5.419999999992098e-07, 5.420000000026792e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.859999999974607e-07, 5.420000000026792e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.410000000032056e-07, 4.869999999969343e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.860000000009301e-07, 4.859999999974607e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.870000000004038e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.410000000032056e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:30:38.793" endtime="20201030 18:30:38.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.787" endtime="20201030 18:30:38.795"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:38.799" endtime="20201030 18:30:38.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.797" endtime="20201030 18:30:38.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.796" endtime="20201030 18:30:38.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.398" endtime="20201030 18:30:38.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.397" endtime="20201030 18:30:38.819"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.828" endtime="20201030 18:30:38.838"></status>
</kw>
<msg timestamp="20201030 18:30:38.839" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:38.826" endtime="20201030 18:30:38.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.841" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:38.840" endtime="20201030 18:30:38.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.842" endtime="20201030 18:30:38.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.823" endtime="20201030 18:30:38.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.822" endtime="20201030 18:30:38.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.852" endtime="20201030 18:30:39.135"></status>
</kw>
<msg timestamp="20201030 18:30:39.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019000625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019001167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:38.850" endtime="20201030 18:30:39.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019000625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019001167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:39.140" endtime="20201030 18:30:39.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.149" endtime="20201030 18:30:39.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.847" endtime="20201030 18:30:39.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.846" endtime="20201030 18:30:39.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:39.184" level="INFO">${debug} = {'time': [0.019000625, 0.019001167, 0.019012681, 0.019013153, 0.019023236, 0.019023708, 0.019036417, 0.019036903, 0.019046958, 0.0190475, 0.019057958, 0.0190585, 0.019070736, 0.019071208, 0.019080417,...</msg>
<status status="PASS" starttime="20201030 18:30:39.152" endtime="20201030 18:30:39.184"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.186" endtime="20201030 18:30:39.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.197" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:39.195" endtime="20201030 18:30:39.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.207" level="INFO">VALUE: {'time': [0.019000625, 0.019001167, 0.019012681, 0.019013153, 0.019023236, 0.019023708, 0.019036417, 0.019036903, 0.019046958, 0.0190475, 0.019057958, 0.0190585, 0.019070736, 0.019071208, 0.019080417, 0.019080903, 0.019094347, 0.019094819, 0.019105611, 0.019106153, 0.019119417, 0.019119889, 0.019129819, 0.019130306, 0.019140083, 0.019140625, 0.019149931, 0.019150417, 0.019160333, 0.019160875, 0.019173806, 0.019174347, 0.0191835, 0.019184042, 0.019196417, 0.019196903, 0.019207833, 0.019208375, 0.01921825, 0.019218792, 0.019231583, 0.019232125, 0.019244917, 0.019245458, 0.019255347, 0.019255889, 0.019269403, 0.019269944, 0.019279819, 0.019280361, 0.019292736, 0.019293222, 0.019306819, 0.019307292, 0.019317208, 0.01931775, 0.019327778, 0.019328264, 0.019340236, 0.019340722, 0.019352833, 0.019353375, 0.019363972, 0.019364514, 0.019377028, 0.019377569, 0.019390653, 0.019391194, 0.019403694, 0.019404236, 0.019413375, 0.019413917, 0.019425986, 0.019426528, 0.019436556, 0.019437097, 0.019449444, 0.019449986, 0.019459569, 0.019460111, 0.019471889, 0.019472431, 0.019485083, 0.019485569, 0.019498708, 0.01949925, 0.019510431, 0.019510972, 0.019522028, 0.019522514, 0.019532431, 0.019532972, 0.019543153, 0.019543639, 0.019552986, 0.019553528, 0.019562542, 0.019563028, 0.019574403, 0.019574944], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 5.419999999992098e-07, 1.1514000000000663e-05, 4.720000000013602e-07, 1.0082999999997538e-05, 4.720000000013602e-07, 1.2708999999999637e-05, 4.860000000009301e-07, 1.0054999999998399e-05, 5.419999999992098e-07, 1.0458000000001383e-05, 5.419999999992098e-07, 1.2236000000002273e-05, 4.7199999999789077e-07, 9.208999999999606e-06, 4.860000000009301e-07, 1.3444000000001344e-05, 4.7199999999789077e-07, 1.0792000000002522e-05, 5.419999999992098e-07, 1.3263999999998943e-05, 4.720000000013602e-07, 9.929999999998274e-06, 4.870000000004038e-07, 9.776999999999009e-06, 5.420000000026792e-07, 9.305999999997122e-06, 4.860000000009301e-07, 9.916000000002173e-06, 5.419999999992098e-07, 1.2931000000000747e-05, 5.409999999997361e-07, 9.152999999997857e-06, 5.419999999992098e-07, 1.2375000000001968e-05, 4.860000000009301e-07, 1.0929999999999274e-05, 5.419999999992098e-07, 9.874999999999468e-06, 5.419999999992098e-07, 1.2791000000001579e-05, 5.419999999992098e-07, 1.2792000000001053e-05, 5.409999999997361e-07, 9.888999999999037e-06, 5.420000000026792e-07, 1.3513999999999193e-05, 5.409999999997361e-07, 9.874999999999468e-06, 5.419999999992098e-07, 1.2375000000001968e-05, 4.859999999974607e-07, 1.3597000000000609e-05, 4.7300000000083386e-07, 9.915999999998704e-06, 5.420000000026792e-07, 1.0027999999998732e-05, 4.860000000009301e-07, 1.1971999999998983e-05, 4.860000000009301e-07, 1.2110999999998678e-05, 5.419999999992098e-07, 1.0597000000001078e-05, 5.419999999992098e-07, 1.2514000000001663e-05, 5.409999999997361e-07, 1.3084000000000012e-05, 5.409999999997361e-07, 1.2499999999998623e-05, 5.419999999992098e-07, 9.139000000001757e-06, 5.419999999992098e-07, 1.2068999999999969e-05, 5.419999999992098e-07, 1.0028000000002202e-05, 5.409999999997361e-07, 1.2346999999999358e-05, 5.419999999992098e-07, 9.583000000000508e-06, 5.419999999992098e-07, 1.1778000000000483e-05, 5.419999999992098e-07, 1.2652000000001884e-05, 4.860000000009301e-07, 1.3138999999998818e-05, 5.419999999992098e-07, 1.1181000000002467e-05, 5.409999999997361e-07, 1.1055999999998872e-05, 4.860000000009301e-07, 9.916999999998177e-06, 5.409999999997361e-07, 1.0181000000001467e-05, 4.860000000009301e-07, 9.346999999999828e-06, 5.419999999992098e-07, 9.013999999998162e-06, 4.860000000009301e-07, 1.1375000000000968e-05, 5.409999999997361e-07], 'source_diff': [0, 5.419999999992098e-07, 1.1514000000000663e-05, 4.720000000013602e-07, 1.0082999999997538e-05, 4.720000000013602e-07, 1.2708999999999637e-05, 4.860000000009301e-07, 1.0054999999998399e-05, 5.419999999992098e-07, 1.0458000000001383e-05, 5.419999999992098e-07, 1.2236000000002273e-05, 4.7199999999789077e-07, 9.208999999999606e-06, 4.860000000009301e-07, 1.3444000000001344e-05, 4.7199999999789077e-07, 1.0792000000002522e-05, 5.419999999992098e-07, 1.3263999999998943e-05, 4.720000000013602e-07, 9.929999999998274e-06, 4.870000000004038e-07, 9.776999999999009e-06, 5.420000000026792e-07, 9.305999999997122e-06, 4.860000000009301e-07, 9.916000000002173e-06, 5.419999999992098e-07, 1.2931000000000747e-05, 5.409999999997361e-07, 9.152999999997857e-06, 5.419999999992098e-07, 1.2375000000001968e-05, 4.860000000009301e-07, 1.0929999999999274e-05, 5.419999999992098e-07, 9.874999999999468e-06, 5.419999999992098e-07, 1.2791000000001579e-05, 5.419999999992098e-07, 1.2792000000001053e-05, 5.409999999997361e-07, 9.888999999999037e-06, 5.420000000026792e-07, 1.3513999999999193e-05, 5.409999999997361e-07, 9.874999999999468e-06, 5.419999999992098e-07, 1.2375000000001968e-05, 4.859999999974607e-07, 1.3597000000000609e-05, 4.7300000000083386e-07, 9.915999999998704e-06, 5.420000000026792e-07, 1.0027999999998732e-05, 4.860000000009301e-07, 1.1971999999998983e-05, 4.860000000009301e-07, 1.2110999999998678e-05, 5.419999999992098e-07, 1.0597000000001078e-05, 5.419999999992098e-07, 1.2514000000001663e-05, 5.409999999997361e-07, 1.3084000000000012e-05, 5.409999999997361e-07, 1.2499999999998623e-05, 5.419999999992098e-07, 9.139000000001757e-06, 5.419999999992098e-07, 1.2068999999999969e-05, 5.419999999992098e-07, 1.0028000000002202e-05, 5.409999999997361e-07, 1.2346999999999358e-05, 5.419999999992098e-07, 9.583000000000508e-06, 5.419999999992098e-07, 1.1778000000000483e-05, 5.419999999992098e-07, 1.2652000000001884e-05, 4.860000000009301e-07, 1.3138999999998818e-05, 5.419999999992098e-07, 1.1181000000002467e-05, 5.409999999997361e-07, 1.1055999999998872e-05, 4.860000000009301e-07, 9.916999999998177e-06, 5.409999999997361e-07, 1.0181000000001467e-05, 4.860000000009301e-07, 9.346999999999828e-06, 5.419999999992098e-07, 9.013999999998162e-06, 4.860000000009301e-07, 1.1375000000000968e-05, 5.409999999997361e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:30:39.199" endtime="20201030 18:30:39.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.191" endtime="20201030 18:30:39.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:39.219" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:30:39.212" endtime="20201030 18:30:39.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:39.229" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.719...</msg>
<status status="PASS" starttime="20201030 18:30:39.221" endtime="20201030 18:30:39.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.238" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:39.235" endtime="20201030 18:30:39.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.243" level="INFO">VALUE: [5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.870000000004038e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 5.420000000026792e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201030 18:30:39.240" endtime="20201030 18:30:39.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.230" endtime="20201030 18:30:39.245"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:39.253" endtime="20201030 18:30:39.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.250" endtime="20201030 18:30:39.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.247" endtime="20201030 18:30:39.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.820" endtime="20201030 18:30:39.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.820" endtime="20201030 18:30:39.275"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.284" endtime="20201030 18:30:39.294"></status>
</kw>
<msg timestamp="20201030 18:30:39.294" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:39.283" endtime="20201030 18:30:39.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.297" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:39.295" endtime="20201030 18:30:39.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.298" endtime="20201030 18:30:39.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.279" endtime="20201030 18:30:39.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.277" endtime="20201030 18:30:39.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.307" endtime="20201030 18:30:39.593"></status>
</kw>
<msg timestamp="20201030 18:30:39.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020119569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020120042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:39.306" endtime="20201030 18:30:39.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020119569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020120042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:39.598" endtime="20201030 18:30:39.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.607" endtime="20201030 18:30:39.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.303" endtime="20201030 18:30:39.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.301" endtime="20201030 18:30:39.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:39.634" level="INFO">${debug} = {'time': [0.020119569, 0.020120042, 0.020129694, 0.020130181, 0.020139361, 0.020139903, 0.020151875, 0.020152347, 0.020163875, 0.020164347, 0.020177333, 0.020177819, 0.020188333, 0.020188819, 0.020198...</msg>
<status status="PASS" starttime="20201030 18:30:39.610" endtime="20201030 18:30:39.634"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.635" endtime="20201030 18:30:39.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.640" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:39.639" endtime="20201030 18:30:39.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.645" level="INFO">VALUE: {'time': [0.020119569, 0.020120042, 0.020129694, 0.020130181, 0.020139361, 0.020139903, 0.020151875, 0.020152347, 0.020163875, 0.020164347, 0.020177333, 0.020177819, 0.020188333, 0.020188819, 0.020198028, 0.020198514, 0.020208722, 0.020209264, 0.020222347, 0.020222889, 0.020234222, 0.020234764, 0.020244083, 0.020244556, 0.020254778, 0.020255319, 0.020266667, 0.020267153, 0.020280569, 0.020281111, 0.020291417, 0.020291958, 0.020301111, 0.020301653, 0.020313, 0.020313486, 0.020325444, 0.020325986, 0.020338222, 0.020338694, 0.020351236, 0.020351778, 0.020364944, 0.020365417, 0.020376889, 0.020377431, 0.020390806, 0.020391347, 0.020400361, 0.020400847, 0.020410333, 0.020410875, 0.020423667, 0.020424208, 0.020434417, 0.020434889, 0.020446403, 0.020446944, 0.020459875, 0.020460417, 0.020472194, 0.020472736, 0.020482611, 0.020483153, 0.020495944, 0.020496486, 0.020508153, 0.020508625, 0.020518833, 0.020519319, 0.020528806, 0.020529347, 0.020542944, 0.020543417, 0.020556222, 0.020556708, 0.020567639, 0.020568181, 0.020578792, 0.020579333, 0.02059175, 0.020592222, 0.020604444, 0.020604931, 0.020617944, 0.020618417, 0.020629208, 0.02062975, 0.020642708, 0.020643194, 0.020653708, 0.020654194, 0.020666597, 0.020667083, 0.020679944, 0.020680431, 0.020692528, 0.020693069, 0.020703833, 0.020704319], 'sourcediff': [0, 4.7300000000083386e-07, 9.651999999998884e-06, 4.870000000004038e-07, 9.180000000000993e-06, 5.419999999992098e-07, 1.1971999999998983e-05, 4.720000000013602e-07, 1.1528000000000233e-05, 4.7199999999789077e-07, 1.2985999999999553e-05, 4.860000000009301e-07, 1.0513999999999663e-05, 4.860000000009301e-07, 9.208999999999606e-06, 4.860000000009301e-07, 1.0207999999997663e-05, 5.420000000026792e-07, 1.3083000000000539e-05, 5.419999999992098e-07, 1.1332999999998788e-05, 5.419999999992098e-07, 9.319000000000688e-06, 4.7300000000083386e-07, 1.0222000000000703e-05, 5.409999999997361e-07, 1.1347999999997832e-05, 4.860000000009301e-07, 1.3415999999998734e-05, 5.420000000026792e-07, 1.0305999999998122e-05, 5.409999999997361e-07, 9.153000000001327e-06, 5.419999999992098e-07, 1.1347000000001828e-05, 4.859999999974607e-07, 1.1958000000002883e-05, 5.419999999992098e-07, 1.2235999999998803e-05, 4.720000000013602e-07, 1.2542000000000803e-05, 5.419999999992098e-07, 1.3165999999998484e-05, 4.7300000000083386e-07, 1.1471999999998483e-05, 5.420000000026792e-07, 1.3374999999999498e-05, 5.409999999997361e-07, 9.013999999998162e-06, 4.860000000009301e-07, 9.485999999999523e-06, 5.419999999992098e-07, 1.2792000000001053e-05, 5.409999999997361e-07, 1.0209000000000606e-05, 4.720000000013602e-07, 1.1513999999997193e-05, 5.410000000032056e-07, 1.2930999999997278e-05, 5.420000000026792e-07, 1.177699999999754e-05, 5.419999999992098e-07, 9.875000000002937e-06, 5.419999999992098e-07, 1.279099999999811e-05, 5.420000000026792e-07, 1.1666999999999927e-05, 4.7199999999789077e-07, 1.0208000000001133e-05, 4.860000000009301e-07, 9.486999999998996e-06, 5.409999999997361e-07, 1.3597000000000609e-05, 4.7300000000083386e-07, 1.280499999999768e-05, 4.860000000009301e-07, 1.0930999999998747e-05, 5.420000000026792e-07, 1.0610999999997178e-05, 5.409999999997361e-07, 1.2417000000000677e-05, 4.720000000013602e-07, 1.2221999999999233e-05, 4.870000000004038e-07, 1.301299999999922e-05, 4.7300000000083386e-07, 1.0790999999999579e-05, 5.419999999992098e-07, 1.2958000000000414e-05, 4.860000000009301e-07, 1.0513999999999663e-05, 4.860000000009301e-07, 1.2402999999997638e-05, 4.860000000009301e-07, 1.2860999999999428e-05, 4.870000000004038e-07, 1.2097000000002578e-05, 5.409999999997361e-07, 1.0763999999999913e-05, 4.859999999974607e-07], 'source_diff': [0, 4.7300000000083386e-07, 9.651999999998884e-06, 4.870000000004038e-07, 9.180000000000993e-06, 5.419999999992098e-07, 1.1971999999998983e-05, 4.720000000013602e-07, 1.1528000000000233e-05, 4.7199999999789077e-07, 1.2985999999999553e-05, 4.860000000009301e-07, 1.0513999999999663e-05, 4.860000000009301e-07, 9.208999999999606e-06, 4.860000000009301e-07, 1.0207999999997663e-05, 5.420000000026792e-07, 1.3083000000000539e-05, 5.419999999992098e-07, 1.1332999999998788e-05, 5.419999999992098e-07, 9.319000000000688e-06, 4.7300000000083386e-07, 1.0222000000000703e-05, 5.409999999997361e-07, 1.1347999999997832e-05, 4.860000000009301e-07, 1.3415999999998734e-05, 5.420000000026792e-07, 1.0305999999998122e-05, 5.409999999997361e-07, 9.153000000001327e-06, 5.419999999992098e-07, 1.1347000000001828e-05, 4.859999999974607e-07, 1.1958000000002883e-05, 5.419999999992098e-07, 1.2235999999998803e-05, 4.720000000013602e-07, 1.2542000000000803e-05, 5.419999999992098e-07, 1.3165999999998484e-05, 4.7300000000083386e-07, 1.1471999999998483e-05, 5.420000000026792e-07, 1.3374999999999498e-05, 5.409999999997361e-07, 9.013999999998162e-06, 4.860000000009301e-07, 9.485999999999523e-06, 5.419999999992098e-07, 1.2792000000001053e-05, 5.409999999997361e-07, 1.0209000000000606e-05, 4.720000000013602e-07, 1.1513999999997193e-05, 5.410000000032056e-07, 1.2930999999997278e-05, 5.420000000026792e-07, 1.177699999999754e-05, 5.419999999992098e-07, 9.875000000002937e-06, 5.419999999992098e-07, 1.279099999999811e-05, 5.420000000026792e-07, 1.1666999999999927e-05, 4.7199999999789077e-07, 1.0208000000001133e-05, 4.860000000009301e-07, 9.486999999998996e-06, 5.409999999997361e-07, 1.3597000000000609e-05, 4.7300000000083386e-07, 1.280499999999768e-05, 4.860000000009301e-07, 1.0930999999998747e-05, 5.420000000026792e-07, 1.0610999999997178e-05, 5.409999999997361e-07, 1.2417000000000677e-05, 4.720000000013602e-07, 1.2221999999999233e-05, 4.870000000004038e-07, 1.301299999999922e-05, 4.7300000000083386e-07, 1.0790999999999579e-05, 5.419999999992098e-07, 1.2958000000000414e-05, 4.860000000009301e-07, 1.0513999999999663e-05, 4.860000000009301e-07, 1.2402999999997638e-05, 4.860000000009301e-07, 1.2860999999999428e-05, 4.870000000004038e-07, 1.2097000000002578e-05, 5.409999999997361e-07, 1.0763999999999913e-05, 4.859999999974607e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:30:39.641" endtime="20201030 18:30:39.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.637" endtime="20201030 18:30:39.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:39.650" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.870000000004038e-07}, {'diff': 5.419999999992098e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.860000000009301e-07},...</msg>
<status status="PASS" starttime="20201030 18:30:39.647" endtime="20201030 18:30:39.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:39.655" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.870000000004038e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.42...</msg>
<status status="PASS" starttime="20201030 18:30:39.651" endtime="20201030 18:30:39.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.660" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:39.659" endtime="20201030 18:30:39.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.662" level="INFO">VALUE: [4.7300000000083386e-07, 4.870000000004038e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 5.420000000026792e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.410000000032056e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.870000000004038e-07, 5.409999999997361e-07, 4.859999999974607e-07]</msg>
<status status="PASS" starttime="20201030 18:30:39.661" endtime="20201030 18:30:39.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.656" endtime="20201030 18:30:39.663"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:39.667" endtime="20201030 18:30:39.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.665" endtime="20201030 18:30:39.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.664" endtime="20201030 18:30:39.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.276" endtime="20201030 18:30:39.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.276" endtime="20201030 18:30:39.688"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.696" endtime="20201030 18:30:39.706"></status>
</kw>
<msg timestamp="20201030 18:30:39.707" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:39.694" endtime="20201030 18:30:39.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:39.709" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:39.708" endtime="20201030 18:30:39.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.710" endtime="20201030 18:30:39.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.691" endtime="20201030 18:30:39.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.690" endtime="20201030 18:30:39.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:39.720" endtime="20201030 18:30:40.016"></status>
</kw>
<msg timestamp="20201030 18:30:40.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018932597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018933083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:39.718" endtime="20201030 18:30:40.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018932597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018933083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:40.021" endtime="20201030 18:30:40.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:40.035" endtime="20201030 18:30:40.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.716" endtime="20201030 18:30:40.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.714" endtime="20201030 18:30:40.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:40.069" level="INFO">${debug} = {'time': [0.018932597, 0.018933083, 0.018946236, 0.018946722, 0.018959986, 0.018960528, 0.018974056, 0.018974597, 0.018987833, 0.018988319, 0.018999736, 0.019000208, 0.019010861, 0.019011347, 0.019022...</msg>
<status status="PASS" starttime="20201030 18:30:40.041" endtime="20201030 18:30:40.069"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:40.070" endtime="20201030 18:30:40.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.075" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:40.074" endtime="20201030 18:30:40.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.080" level="INFO">VALUE: {'time': [0.018932597, 0.018933083, 0.018946236, 0.018946722, 0.018959986, 0.018960528, 0.018974056, 0.018974597, 0.018987833, 0.018988319, 0.018999736, 0.019000208, 0.019010861, 0.019011347, 0.019022014, 0.0190225, 0.01903475, 0.019035292, 0.019045167, 0.019045708, 0.0190585, 0.019059042, 0.019071125, 0.019071611, 0.019081819, 0.019082361, 0.019095153, 0.019095694, 0.019108208, 0.019108694, 0.019121389, 0.019121931, 0.019134722, 0.019135264, 0.019148389, 0.019148861, 0.019162111, 0.019162653, 0.019172097, 0.019172639, 0.019183097, 0.019183639, 0.019196014, 0.0191965, 0.019206847, 0.019207389, 0.019219472, 0.019219958, 0.019232653, 0.019233139, 0.019244681, 0.019245167, 0.0192545, 0.019255042, 0.019265361, 0.019265903, 0.019276222, 0.019276708, 0.019290278, 0.019290819, 0.019300694, 0.019301236, 0.019313167, 0.019313653, 0.01932475, 0.019325236, 0.019337069, 0.019337556, 0.019347042, 0.019347528, 0.019358056, 0.019358542, 0.019369625, 0.019370167, 0.019380625, 0.019381167, 0.01939075, 0.019391292, 0.019403931, 0.019404472, 0.019415083, 0.019415625, 0.019425069, 0.019425611, 0.019437097, 0.019437583, 0.019447361, 0.019447903, 0.019459236, 0.019459778, 0.019471708, 0.019472194, 0.019482569, 0.019483056, 0.019496208, 0.019496681, 0.019507611, 0.019508153, 0.019518667, 0.019519139], 'sourcediff': [0, 4.860000000009301e-07, 1.3153000000001858e-05, 4.859999999974607e-07, 1.3264000000002413e-05, 5.419999999992098e-07, 1.3527999999998763e-05, 5.409999999997361e-07, 1.3235999999999803e-05, 4.860000000009301e-07, 1.1416999999999677e-05, 4.720000000013602e-07, 1.0652999999999357e-05, 4.860000000009301e-07, 1.0666999999998927e-05, 4.860000000009301e-07, 1.2249999999998373e-05, 5.419999999992098e-07, 9.875000000002937e-06, 5.409999999997361e-07, 1.2791999999997583e-05, 5.420000000026792e-07, 1.2082999999999539e-05, 4.859999999974607e-07, 1.0208000000001133e-05, 5.419999999992098e-07, 1.2792000000001053e-05, 5.409999999997361e-07, 1.2514000000001663e-05, 4.859999999974607e-07, 1.2695000000000067e-05, 5.420000000026792e-07, 1.279099999999811e-05, 5.419999999992098e-07, 1.3124999999999248e-05, 4.720000000013602e-07, 1.3249999999999373e-05, 5.420000000026792e-07, 9.443999999997343e-06, 5.419999999992098e-07, 1.0458000000001383e-05, 5.419999999992098e-07, 1.2375000000001968e-05, 4.859999999974607e-07, 1.0347000000000828e-05, 5.419999999992098e-07, 1.2083000000003008e-05, 4.859999999974607e-07, 1.2695000000000067e-05, 4.860000000009301e-07, 1.1541999999999802e-05, 4.860000000009301e-07, 9.333000000000258e-06, 5.419999999992098e-07, 1.0319000000001688e-05, 5.419999999992098e-07, 1.0318999999998218e-05, 4.860000000009301e-07, 1.3570000000000942e-05, 5.409999999997361e-07, 9.874999999999468e-06, 5.419999999992098e-07, 1.1930999999999747e-05, 4.860000000009301e-07, 1.1097000000001578e-05, 4.859999999974607e-07, 1.1832999999999289e-05, 4.870000000004038e-07, 9.485999999999523e-06, 4.860000000009301e-07, 1.0527999999999232e-05, 4.860000000009301e-07, 1.1083000000002008e-05, 5.419999999992098e-07, 1.0457999999997913e-05, 5.420000000026792e-07, 9.582999999997038e-06, 5.420000000026792e-07, 1.2638999999998318e-05, 5.409999999997361e-07, 1.0611000000000648e-05, 5.419999999992098e-07, 9.444000000000813e-06, 5.419999999992098e-07, 1.1486000000001523e-05, 4.860000000009301e-07, 9.777999999998482e-06, 5.419999999992098e-07, 1.1333000000002258e-05, 5.419999999992098e-07, 1.1930000000000274e-05, 4.860000000009301e-07, 1.0374999999999968e-05, 4.869999999969343e-07, 1.3152000000002384e-05, 4.729999999973644e-07, 1.0930000000002743e-05, 5.419999999992098e-07, 1.0513999999999663e-05, 4.720000000013602e-07], 'source_diff': [0, 4.860000000009301e-07, 1.3153000000001858e-05, 4.859999999974607e-07, 1.3264000000002413e-05, 5.419999999992098e-07, 1.3527999999998763e-05, 5.409999999997361e-07, 1.3235999999999803e-05, 4.860000000009301e-07, 1.1416999999999677e-05, 4.720000000013602e-07, 1.0652999999999357e-05, 4.860000000009301e-07, 1.0666999999998927e-05, 4.860000000009301e-07, 1.2249999999998373e-05, 5.419999999992098e-07, 9.875000000002937e-06, 5.409999999997361e-07, 1.2791999999997583e-05, 5.420000000026792e-07, 1.2082999999999539e-05, 4.859999999974607e-07, 1.0208000000001133e-05, 5.419999999992098e-07, 1.2792000000001053e-05, 5.409999999997361e-07, 1.2514000000001663e-05, 4.859999999974607e-07, 1.2695000000000067e-05, 5.420000000026792e-07, 1.279099999999811e-05, 5.419999999992098e-07, 1.3124999999999248e-05, 4.720000000013602e-07, 1.3249999999999373e-05, 5.420000000026792e-07, 9.443999999997343e-06, 5.419999999992098e-07, 1.0458000000001383e-05, 5.419999999992098e-07, 1.2375000000001968e-05, 4.859999999974607e-07, 1.0347000000000828e-05, 5.419999999992098e-07, 1.2083000000003008e-05, 4.859999999974607e-07, 1.2695000000000067e-05, 4.860000000009301e-07, 1.1541999999999802e-05, 4.860000000009301e-07, 9.333000000000258e-06, 5.419999999992098e-07, 1.0319000000001688e-05, 5.419999999992098e-07, 1.0318999999998218e-05, 4.860000000009301e-07, 1.3570000000000942e-05, 5.409999999997361e-07, 9.874999999999468e-06, 5.419999999992098e-07, 1.1930999999999747e-05, 4.860000000009301e-07, 1.1097000000001578e-05, 4.859999999974607e-07, 1.1832999999999289e-05, 4.870000000004038e-07, 9.485999999999523e-06, 4.860000000009301e-07, 1.0527999999999232e-05, 4.860000000009301e-07, 1.1083000000002008e-05, 5.419999999992098e-07, 1.0457999999997913e-05, 5.420000000026792e-07, 9.582999999997038e-06, 5.420000000026792e-07, 1.2638999999998318e-05, 5.409999999997361e-07, 1.0611000000000648e-05, 5.419999999992098e-07, 9.444000000000813e-06, 5.419999999992098e-07, 1.1486000000001523e-05, 4.860000000009301e-07, 9.777999999998482e-06, 5.419999999992098e-07, 1.1333000000002258e-05, 5.419999999992098e-07, 1.1930000000000274e-05, 4.860000000009301e-07, 1.0374999999999968e-05, 4.869999999969343e-07, 1.3152000000002384e-05, 4.729999999973644e-07, 1.0930000000002743e-05, 5.419999999992098e-07, 1.0513999999999663e-05, 4.720000000013602e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:30:40.077" endtime="20201030 18:30:40.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.072" endtime="20201030 18:30:40.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:40.085" level="INFO">${RESULT} = [{'diff': 4.860000000009301e-07}, {'diff': 4.859999999974607e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.720000000013602e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:30:40.082" endtime="20201030 18:30:40.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:40.090" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.4199...</msg>
<status status="PASS" starttime="20201030 18:30:40.086" endtime="20201030 18:30:40.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.095" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:40.094" endtime="20201030 18:30:40.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.097" level="INFO">VALUE: [4.860000000009301e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.420000000026792e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.869999999969343e-07, 4.729999999973644e-07, 5.419999999992098e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:30:40.096" endtime="20201030 18:30:40.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.091" endtime="20201030 18:30:40.098"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:40.102" endtime="20201030 18:30:40.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.100" endtime="20201030 18:30:40.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.099" endtime="20201030 18:30:40.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.688" endtime="20201030 18:30:40.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:39.688" endtime="20201030 18:30:40.123"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:40.131" endtime="20201030 18:30:40.140"></status>
</kw>
<msg timestamp="20201030 18:30:40.141" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:40.129" endtime="20201030 18:30:40.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.144" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:40.142" endtime="20201030 18:30:40.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:40.145" endtime="20201030 18:30:40.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.127" endtime="20201030 18:30:40.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.125" endtime="20201030 18:30:40.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:40.154" endtime="20201030 18:30:40.439"></status>
</kw>
<msg timestamp="20201030 18:30:40.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018813597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018814139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:40.152" endtime="20201030 18:30:40.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018813597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018814139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:40.443" endtime="20201030 18:30:40.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:40.452" endtime="20201030 18:30:40.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.150" endtime="20201030 18:30:40.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.148" endtime="20201030 18:30:40.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:40.479" level="INFO">${debug} = {'time': [0.018813597, 0.018814139, 0.018826486, 0.018827028, 0.018836319, 0.018836861, 0.018848986, 0.018849458, 0.018862569, 0.018863056, 0.018875889, 0.018876431, 0.018889986, 0.018890458, 0.018899...</msg>
<status status="PASS" starttime="20201030 18:30:40.455" endtime="20201030 18:30:40.479"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:40.480" endtime="20201030 18:30:40.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.485" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:40.484" endtime="20201030 18:30:40.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.489" level="INFO">VALUE: {'time': [0.018813597, 0.018814139, 0.018826486, 0.018827028, 0.018836319, 0.018836861, 0.018848986, 0.018849458, 0.018862569, 0.018863056, 0.018875889, 0.018876431, 0.018889986, 0.018890458, 0.0188995, 0.018900042, 0.018910653, 0.018911139, 0.018924278, 0.018924819, 0.018934986, 0.018935528, 0.018946569, 0.018947111, 0.018960639, 0.018961125, 0.018970319, 0.018970861, 0.018982056, 0.018982597, 0.018992472, 0.018993014, 0.019002611, 0.019003097, 0.019016528, 0.019017014, 0.019029042, 0.019029514, 0.019041056, 0.019041528, 0.019052306, 0.019052792, 0.019066361, 0.019066847, 0.019079111, 0.019079597, 0.019093028, 0.019093569, 0.019104944, 0.019105417, 0.019117653, 0.019118194, 0.019129236, 0.019129778, 0.019140681, 0.019141167, 0.019153778, 0.01915425, 0.019164861, 0.019165403, 0.019174556, 0.019175097, 0.019186139, 0.019186681, 0.019195681, 0.019196222, 0.019208139, 0.019208681, 0.019219722, 0.019220264, 0.019233792, 0.019234333, 0.019243764, 0.019244306, 0.019257194, 0.019257667, 0.019271167, 0.019271708, 0.019283042, 0.019283583, 0.019293028, 0.019293569, 0.019302597, 0.019303069, 0.019315903, 0.019316444, 0.019327389, 0.019327861, 0.019337333, 0.019337819, 0.019347028, 0.0193475, 0.019356986, 0.019357528, 0.019369444, 0.019369986, 0.019380319, 0.019380806, 0.019392347, 0.019392819], 'sourcediff': [0, 5.419999999992098e-07, 1.2346999999999358e-05, 5.419999999992098e-07, 9.291000000001548e-06, 5.419999999992098e-07, 1.2125000000001718e-05, 4.7199999999789077e-07, 1.3110999999999678e-05, 4.870000000004038e-07, 1.2833000000000289e-05, 5.419999999992098e-07, 1.3555000000001899e-05, 4.7199999999789077e-07, 9.042000000000772e-06, 5.419999999992098e-07, 1.0611000000000648e-05, 4.860000000009301e-07, 1.3138999999998818e-05, 5.409999999997361e-07, 1.0167000000001897e-05, 5.419999999992098e-07, 1.1040999999999829e-05, 5.419999999992098e-07, 1.3528000000002233e-05, 4.859999999974607e-07, 9.194000000000563e-06, 5.419999999992098e-07, 1.1195000000002037e-05, 5.409999999997361e-07, 9.874999999999468e-06, 5.419999999992098e-07, 9.597000000000078e-06, 4.860000000009301e-07, 1.3431000000001247e-05, 4.859999999974607e-07, 1.2028000000000733e-05, 4.720000000013602e-07, 1.1541999999999802e-05, 4.7199999999789077e-07, 1.0778000000002952e-05, 4.859999999974607e-07, 1.3569000000001469e-05, 4.860000000009301e-07, 1.2263999999997943e-05, 4.860000000009301e-07, 1.3431000000001247e-05, 5.409999999997361e-07, 1.1374999999997498e-05, 4.7300000000083386e-07, 1.2235999999998803e-05, 5.410000000032056e-07, 1.1041999999999302e-05, 5.419999999992098e-07, 1.0902999999999607e-05, 4.860000000009301e-07, 1.2610999999999178e-05, 4.720000000013602e-07, 1.0610999999997178e-05, 5.420000000026792e-07, 9.152999999997857e-06, 5.409999999997361e-07, 1.1042000000002772e-05, 5.419999999992098e-07, 8.999999999998592e-06, 5.409999999997361e-07, 1.1917000000000177e-05, 5.419999999992098e-07, 1.1041000000003298e-05, 5.419999999992098e-07, 1.3527999999998763e-05, 5.409999999997361e-07, 9.431000000000717e-06, 5.419999999992098e-07, 1.2887999999999095e-05, 4.7300000000083386e-07, 1.3499999999999623e-05, 5.409999999997361e-07, 1.1334000000001732e-05, 5.409999999997361e-07, 9.445000000000286e-06, 5.409999999997361e-07, 9.028000000001202e-06, 4.7199999999789077e-07, 1.2833999999999762e-05, 5.409999999997361e-07, 1.0945000000001787e-05, 4.720000000013602e-07, 9.471999999999953e-06, 4.859999999974607e-07, 9.208999999999606e-06, 4.720000000013602e-07, 9.485999999999523e-06, 5.419999999992098e-07, 1.1916000000000704e-05, 5.419999999992098e-07, 1.0333000000001258e-05, 4.870000000004038e-07, 1.1541000000000329e-05, 4.7199999999789077e-07], 'source_diff': [0, 5.419999999992098e-07, 1.2346999999999358e-05, 5.419999999992098e-07, 9.291000000001548e-06, 5.419999999992098e-07, 1.2125000000001718e-05, 4.7199999999789077e-07, 1.3110999999999678e-05, 4.870000000004038e-07, 1.2833000000000289e-05, 5.419999999992098e-07, 1.3555000000001899e-05, 4.7199999999789077e-07, 9.042000000000772e-06, 5.419999999992098e-07, 1.0611000000000648e-05, 4.860000000009301e-07, 1.3138999999998818e-05, 5.409999999997361e-07, 1.0167000000001897e-05, 5.419999999992098e-07, 1.1040999999999829e-05, 5.419999999992098e-07, 1.3528000000002233e-05, 4.859999999974607e-07, 9.194000000000563e-06, 5.419999999992098e-07, 1.1195000000002037e-05, 5.409999999997361e-07, 9.874999999999468e-06, 5.419999999992098e-07, 9.597000000000078e-06, 4.860000000009301e-07, 1.3431000000001247e-05, 4.859999999974607e-07, 1.2028000000000733e-05, 4.720000000013602e-07, 1.1541999999999802e-05, 4.7199999999789077e-07, 1.0778000000002952e-05, 4.859999999974607e-07, 1.3569000000001469e-05, 4.860000000009301e-07, 1.2263999999997943e-05, 4.860000000009301e-07, 1.3431000000001247e-05, 5.409999999997361e-07, 1.1374999999997498e-05, 4.7300000000083386e-07, 1.2235999999998803e-05, 5.410000000032056e-07, 1.1041999999999302e-05, 5.419999999992098e-07, 1.0902999999999607e-05, 4.860000000009301e-07, 1.2610999999999178e-05, 4.720000000013602e-07, 1.0610999999997178e-05, 5.420000000026792e-07, 9.152999999997857e-06, 5.409999999997361e-07, 1.1042000000002772e-05, 5.419999999992098e-07, 8.999999999998592e-06, 5.409999999997361e-07, 1.1917000000000177e-05, 5.419999999992098e-07, 1.1041000000003298e-05, 5.419999999992098e-07, 1.3527999999998763e-05, 5.409999999997361e-07, 9.431000000000717e-06, 5.419999999992098e-07, 1.2887999999999095e-05, 4.7300000000083386e-07, 1.3499999999999623e-05, 5.409999999997361e-07, 1.1334000000001732e-05, 5.409999999997361e-07, 9.445000000000286e-06, 5.409999999997361e-07, 9.028000000001202e-06, 4.7199999999789077e-07, 1.2833999999999762e-05, 5.409999999997361e-07, 1.0945000000001787e-05, 4.720000000013602e-07, 9.471999999999953e-06, 4.859999999974607e-07, 9.208999999999606e-06, 4.720000000013602e-07, 9.485999999999523e-06, 5.419999999992098e-07, 1.1916000000000704e-05, 5.419999999992098e-07, 1.0333000000001258e-05, 4.870000000004038e-07, 1.1541000000000329e-05, 4.7199999999789077e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:30:40.486" endtime="20201030 18:30:40.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.482" endtime="20201030 18:30:40.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:40.494" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.870000000004038e-07}, {'diff': 5.419999999992098e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:30:40.491" endtime="20201030 18:30:40.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:40.499" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 4.86...</msg>
<status status="PASS" starttime="20201030 18:30:40.495" endtime="20201030 18:30:40.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.503" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:40.502" endtime="20201030 18:30:40.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.505" level="INFO">VALUE: [5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 5.410000000032056e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.720000000013602e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.870000000004038e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201030 18:30:40.504" endtime="20201030 18:30:40.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.499" endtime="20201030 18:30:40.506"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:40.510" endtime="20201030 18:30:40.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.508" endtime="20201030 18:30:40.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.507" endtime="20201030 18:30:40.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.124" endtime="20201030 18:30:40.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.123" endtime="20201030 18:30:40.530"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:40.539" endtime="20201030 18:30:40.549"></status>
</kw>
<msg timestamp="20201030 18:30:40.550" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:40.537" endtime="20201030 18:30:40.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.552" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:40.551" endtime="20201030 18:30:40.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:40.553" endtime="20201030 18:30:40.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.535" endtime="20201030 18:30:40.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.532" endtime="20201030 18:30:40.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:40.562" endtime="20201030 18:30:40.865"></status>
</kw>
<msg timestamp="20201030 18:30:40.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019242083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019242625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:40.561" endtime="20201030 18:30:40.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019242083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019242625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:40.869" endtime="20201030 18:30:40.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:40.877" endtime="20201030 18:30:40.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.558" endtime="20201030 18:30:40.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.556" endtime="20201030 18:30:40.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:40.904" level="INFO">${debug} = {'time': [0.019242083, 0.019242625, 0.019255875, 0.019256361, 0.019267153, 0.019267694, 0.019281208, 0.01928175, 0.019291056, 0.019291542, 0.019304972, 0.019305458, 0.019318889, 0.019319431, 0.0193288...</msg>
<status status="PASS" starttime="20201030 18:30:40.881" endtime="20201030 18:30:40.905"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:40.905" endtime="20201030 18:30:40.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.910" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:40.909" endtime="20201030 18:30:40.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.914" level="INFO">VALUE: {'time': [0.019242083, 0.019242625, 0.019255875, 0.019256361, 0.019267153, 0.019267694, 0.019281208, 0.01928175, 0.019291056, 0.019291542, 0.019304972, 0.019305458, 0.019318889, 0.019319431, 0.019328861, 0.019329403, 0.019340639, 0.019341111, 0.019350431, 0.019350972, 0.019364347, 0.019364889, 0.019373903, 0.019374389, 0.019385042, 0.019385583, 0.019395889, 0.019396431, 0.019408347, 0.019408889, 0.019418792, 0.019419264, 0.019429625, 0.019430167, 0.019442819, 0.019443361, 0.019455861, 0.019456403, 0.019469778, 0.019470319, 0.019483847, 0.019484333, 0.019497778, 0.019498264, 0.01951025, 0.019510722, 0.019523847, 0.019524389, 0.019537486, 0.019537972, 0.019550222, 0.019550764, 0.019562264, 0.01956275, 0.019573542, 0.019574083, 0.019586292, 0.019586833, 0.019596028, 0.0195965, 0.01960875, 0.019609222, 0.019621056, 0.019621542, 0.019632194, 0.019632736, 0.01964625, 0.019646792, 0.019655944, 0.019656486, 0.019665486, 0.019666028, 0.019675319, 0.019675861, 0.019685458, 0.019685944, 0.019696597, 0.019697139, 0.019709944, 0.019710431, 0.019722681, 0.019723222, 0.019732375, 0.019732917, 0.019745125, 0.019745667, 0.01975525, 0.019755792, 0.019764931, 0.019765472, 0.019774472, 0.019775014, 0.019787667, 0.019788208, 0.019800278, 0.019800819, 0.019814333, 0.019814875, 0.019827375, 0.019827917], 'sourcediff': [0, 5.419999999992098e-07, 1.3249999999999373e-05, 4.860000000009301e-07, 1.0791999999999052e-05, 5.409999999997361e-07, 1.3514000000002663e-05, 5.419999999992098e-07, 9.306000000000592e-06, 4.859999999974607e-07, 1.3430000000001774e-05, 4.860000000009301e-07, 1.3430999999997778e-05, 5.420000000026792e-07, 9.429999999997773e-06, 5.419999999992098e-07, 1.1236000000001273e-05, 4.720000000013602e-07, 9.320000000000161e-06, 5.409999999997361e-07, 1.3374999999999498e-05, 5.419999999992098e-07, 9.014000000001632e-06, 4.859999999974607e-07, 1.0653000000002827e-05, 5.409999999997361e-07, 1.0305999999998122e-05, 5.419999999992098e-07, 1.1916000000000704e-05, 5.419999999992098e-07, 9.903000000002077e-06, 4.7199999999789077e-07, 1.0361000000000398e-05, 5.420000000026792e-07, 1.2651999999998415e-05, 5.419999999992098e-07, 1.2500000000002093e-05, 5.419999999992098e-07, 1.3374999999999498e-05, 5.409999999997361e-07, 1.3527999999998763e-05, 4.860000000009301e-07, 1.3445000000000817e-05, 4.860000000009301e-07, 1.1985999999998553e-05, 4.720000000013602e-07, 1.3124999999999248e-05, 5.419999999992098e-07, 1.3097000000000109e-05, 4.860000000009301e-07, 1.2249999999998373e-05, 5.420000000026792e-07, 1.1499999999997623e-05, 4.860000000009301e-07, 1.0791999999999052e-05, 5.409999999997361e-07, 1.2209000000002607e-05, 5.409999999997361e-07, 9.195000000000036e-06, 4.7199999999789077e-07, 1.2250000000001843e-05, 4.7199999999789077e-07, 1.1834000000002232e-05, 4.859999999974607e-07, 1.0651999999999884e-05, 5.420000000026792e-07, 1.3513999999999193e-05, 5.419999999992098e-07, 9.152000000001853e-06, 5.419999999992098e-07, 8.999999999998592e-06, 5.419999999992098e-07, 9.291000000001548e-06, 5.419999999992098e-07, 9.597000000000078e-06, 4.860000000009301e-07, 1.0652999999999357e-05, 5.419999999992098e-07, 1.2805000000001149e-05, 4.870000000004038e-07, 1.2249999999998373e-05, 5.409999999997361e-07, 9.153000000001327e-06, 5.419999999992098e-07, 1.2207999999999664e-05, 5.420000000026792e-07, 9.582999999997038e-06, 5.420000000026792e-07, 9.138999999998287e-06, 5.409999999997361e-07, 9.000000000002062e-06, 5.419999999992098e-07, 1.2652999999997888e-05, 5.410000000032056e-07, 1.2069999999999442e-05, 5.409999999997361e-07, 1.3513999999999193e-05, 5.419999999992098e-07, 1.2500000000002093e-05, 5.419999999992098e-07], 'source_diff': [0, 5.419999999992098e-07, 1.3249999999999373e-05, 4.860000000009301e-07, 1.0791999999999052e-05, 5.409999999997361e-07, 1.3514000000002663e-05, 5.419999999992098e-07, 9.306000000000592e-06, 4.859999999974607e-07, 1.3430000000001774e-05, 4.860000000009301e-07, 1.3430999999997778e-05, 5.420000000026792e-07, 9.429999999997773e-06, 5.419999999992098e-07, 1.1236000000001273e-05, 4.720000000013602e-07, 9.320000000000161e-06, 5.409999999997361e-07, 1.3374999999999498e-05, 5.419999999992098e-07, 9.014000000001632e-06, 4.859999999974607e-07, 1.0653000000002827e-05, 5.409999999997361e-07, 1.0305999999998122e-05, 5.419999999992098e-07, 1.1916000000000704e-05, 5.419999999992098e-07, 9.903000000002077e-06, 4.7199999999789077e-07, 1.0361000000000398e-05, 5.420000000026792e-07, 1.2651999999998415e-05, 5.419999999992098e-07, 1.2500000000002093e-05, 5.419999999992098e-07, 1.3374999999999498e-05, 5.409999999997361e-07, 1.3527999999998763e-05, 4.860000000009301e-07, 1.3445000000000817e-05, 4.860000000009301e-07, 1.1985999999998553e-05, 4.720000000013602e-07, 1.3124999999999248e-05, 5.419999999992098e-07, 1.3097000000000109e-05, 4.860000000009301e-07, 1.2249999999998373e-05, 5.420000000026792e-07, 1.1499999999997623e-05, 4.860000000009301e-07, 1.0791999999999052e-05, 5.409999999997361e-07, 1.2209000000002607e-05, 5.409999999997361e-07, 9.195000000000036e-06, 4.7199999999789077e-07, 1.2250000000001843e-05, 4.7199999999789077e-07, 1.1834000000002232e-05, 4.859999999974607e-07, 1.0651999999999884e-05, 5.420000000026792e-07, 1.3513999999999193e-05, 5.419999999992098e-07, 9.152000000001853e-06, 5.419999999992098e-07, 8.999999999998592e-06, 5.419999999992098e-07, 9.291000000001548e-06, 5.419999999992098e-07, 9.597000000000078e-06, 4.860000000009301e-07, 1.0652999999999357e-05, 5.419999999992098e-07, 1.2805000000001149e-05, 4.870000000004038e-07, 1.2249999999998373e-05, 5.409999999997361e-07, 9.153000000001327e-06, 5.419999999992098e-07, 1.2207999999999664e-05, 5.420000000026792e-07, 9.582999999997038e-06, 5.420000000026792e-07, 9.138999999998287e-06, 5.409999999997361e-07, 9.000000000002062e-06, 5.419999999992098e-07, 1.2652999999997888e-05, 5.410000000032056e-07, 1.2069999999999442e-05, 5.409999999997361e-07, 1.3513999999999193e-05, 5.419999999992098e-07, 1.2500000000002093e-05, 5.419999999992098e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:30:40.911" endtime="20201030 18:30:40.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.908" endtime="20201030 18:30:40.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:40.920" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 4.860000000009301e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {'diff': 4.859999999974607e-07}, {'diff': 4.860000000009301e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:30:40.917" endtime="20201030 18:30:40.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:40.925" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.7200...</msg>
<status status="PASS" starttime="20201030 18:30:40.921" endtime="20201030 18:30:40.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.929" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:40.928" endtime="20201030 18:30:40.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.931" level="INFO">VALUE: [5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.870000000004038e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.410000000032056e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201030 18:30:40.930" endtime="20201030 18:30:40.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.925" endtime="20201030 18:30:40.932"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:40.936" endtime="20201030 18:30:40.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.934" endtime="20201030 18:30:40.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.933" endtime="20201030 18:30:40.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.531" endtime="20201030 18:30:40.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.530" endtime="20201030 18:30:40.957"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:40.965" endtime="20201030 18:30:40.975"></status>
</kw>
<msg timestamp="20201030 18:30:40.975" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:40.964" endtime="20201030 18:30:40.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:40.978" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:40.976" endtime="20201030 18:30:40.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:40.979" endtime="20201030 18:30:40.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.961" endtime="20201030 18:30:40.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.959" endtime="20201030 18:30:40.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:40.988" endtime="20201030 18:30:41.275"></status>
</kw>
<msg timestamp="20201030 18:30:41.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019595111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019595597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:40.986" endtime="20201030 18:30:41.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019595111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019595597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:41.279" endtime="20201030 18:30:41.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.288" endtime="20201030 18:30:41.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.984" endtime="20201030 18:30:41.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.982" endtime="20201030 18:30:41.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:30:41.314" level="INFO">${debug} = {'time': [0.019595111, 0.019595597, 0.019605819, 0.019606306, 0.019618917, 0.019619389, 0.019630139, 0.019630681, 0.019644208, 0.01964475, 0.019656083, 0.019656625, 0.019669431, 0.019669917, 0.0196831...</msg>
<status status="PASS" starttime="20201030 18:30:41.291" endtime="20201030 18:30:41.314"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.315" endtime="20201030 18:30:41.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.320" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:30:41.319" endtime="20201030 18:30:41.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.324" level="INFO">VALUE: {'time': [0.019595111, 0.019595597, 0.019605819, 0.019606306, 0.019618917, 0.019619389, 0.019630139, 0.019630681, 0.019644208, 0.01964475, 0.019656083, 0.019656625, 0.019669431, 0.019669917, 0.019683194, 0.019683681, 0.019694625, 0.019695167, 0.019704472, 0.019704958, 0.019715611, 0.019716153, 0.019728944, 0.019729486, 0.019741111, 0.019741653, 0.019753431, 0.019753972, 0.019766903, 0.019767444, 0.019778639, 0.019779181, 0.019789792, 0.019790278, 0.019799528, 0.0198, 0.019812667, 0.019813208, 0.019826597, 0.019827083, 0.019839042, 0.019839583, 0.019852986, 0.019853458, 0.019862514, 0.019863, 0.019873222, 0.019873708, 0.019882903, 0.019883444, 0.019895944, 0.019896486, 0.019906208, 0.01990675, 0.019917806, 0.019918292, 0.019929389, 0.019929931, 0.019939361, 0.019939903, 0.019952694, 0.019953236, 0.019962972, 0.019963514, 0.019976889, 0.019977431, 0.01998775, 0.019988292, 0.019998014, 0.019998556, 0.020008306, 0.020008792, 0.020020764, 0.02002125, 0.020030875, 0.020031417, 0.020041292, 0.020041833, 0.020054486, 0.020055028, 0.0200665, 0.020067042, 0.020076333, 0.020076875, 0.020090125, 0.020090611, 0.020102722, 0.020103264, 0.020115472, 0.020116014, 0.020129236, 0.020129778, 0.020142278, 0.020142819, 0.020154306, 0.020154847, 0.020167347, 0.020167889, 0.020179375, 0.020179917], 'sourcediff': [0, 4.860000000009301e-07, 1.0222000000000703e-05, 4.870000000004038e-07, 1.2610999999999178e-05, 4.720000000013602e-07, 1.0750000000000343e-05, 5.419999999992098e-07, 1.352699999999929e-05, 5.419999999992098e-07, 1.1333000000002258e-05, 5.419999999992098e-07, 1.2806000000000622e-05, 4.859999999974607e-07, 1.3277000000002509e-05, 4.870000000004038e-07, 1.0943999999998844e-05, 5.419999999992098e-07, 9.305000000001118e-06, 4.860000000009301e-07, 1.0652999999999357e-05, 5.419999999992098e-07, 1.2791000000001579e-05, 5.419999999992098e-07, 1.1624999999997748e-05, 5.420000000026792e-07, 1.1777999999997013e-05, 5.410000000032056e-07, 1.2930999999997278e-05, 5.409999999997361e-07, 1.1195000000002037e-05, 5.419999999992098e-07, 1.0611000000000648e-05, 4.860000000009301e-07, 9.249999999998842e-06, 4.720000000013602e-07, 1.2666999999997458e-05, 5.409999999997361e-07, 1.3389000000002538e-05, 4.859999999974607e-07, 1.1959000000002357e-05, 5.409999999997361e-07, 1.3402999999998638e-05, 4.720000000013602e-07, 9.056000000000342e-06, 4.859999999974607e-07, 1.0222000000000703e-05, 4.860000000009301e-07, 9.195000000000036e-06, 5.409999999997361e-07, 1.2499999999998623e-05, 5.420000000026792e-07, 9.722000000000203e-06, 5.419999999992098e-07, 1.1055999999998872e-05, 4.860000000009301e-07, 1.1096999999998108e-05, 5.420000000026792e-07, 9.429999999997773e-06, 5.419999999992098e-07, 1.2791000000001579e-05, 5.419999999992098e-07, 9.735999999999773e-06, 5.420000000026792e-07, 1.3374999999999498e-05, 5.419999999992098e-07, 1.0318999999998218e-05, 5.420000000026792e-07, 9.722000000000203e-06, 5.419999999992098e-07, 9.749999999999343e-06, 4.860000000009301e-07, 1.1971999999998983e-05, 4.860000000009301e-07, 9.624999999999218e-06, 5.419999999992098e-07, 9.874999999999468e-06, 5.409999999997361e-07, 1.2653000000001358e-05, 5.419999999992098e-07, 1.1472000000001953e-05, 5.419999999992098e-07, 9.290999999998079e-06, 5.420000000026792e-07, 1.3249999999999373e-05, 4.860000000009301e-07, 1.2110999999998678e-05, 5.419999999992098e-07, 1.2207999999999664e-05, 5.420000000026792e-07, 1.3221999999996764e-05, 5.420000000026792e-07, 1.2499999999998623e-05, 5.409999999997361e-07, 1.1487000000000996e-05, 5.409999999997361e-07, 1.2499999999998623e-05, 5.420000000026792e-07, 1.1485999999998053e-05, 5.419999999992098e-07], 'source_diff': [0, 4.860000000009301e-07, 1.0222000000000703e-05, 4.870000000004038e-07, 1.2610999999999178e-05, 4.720000000013602e-07, 1.0750000000000343e-05, 5.419999999992098e-07, 1.352699999999929e-05, 5.419999999992098e-07, 1.1333000000002258e-05, 5.419999999992098e-07, 1.2806000000000622e-05, 4.859999999974607e-07, 1.3277000000002509e-05, 4.870000000004038e-07, 1.0943999999998844e-05, 5.419999999992098e-07, 9.305000000001118e-06, 4.860000000009301e-07, 1.0652999999999357e-05, 5.419999999992098e-07, 1.2791000000001579e-05, 5.419999999992098e-07, 1.1624999999997748e-05, 5.420000000026792e-07, 1.1777999999997013e-05, 5.410000000032056e-07, 1.2930999999997278e-05, 5.409999999997361e-07, 1.1195000000002037e-05, 5.419999999992098e-07, 1.0611000000000648e-05, 4.860000000009301e-07, 9.249999999998842e-06, 4.720000000013602e-07, 1.2666999999997458e-05, 5.409999999997361e-07, 1.3389000000002538e-05, 4.859999999974607e-07, 1.1959000000002357e-05, 5.409999999997361e-07, 1.3402999999998638e-05, 4.720000000013602e-07, 9.056000000000342e-06, 4.859999999974607e-07, 1.0222000000000703e-05, 4.860000000009301e-07, 9.195000000000036e-06, 5.409999999997361e-07, 1.2499999999998623e-05, 5.420000000026792e-07, 9.722000000000203e-06, 5.419999999992098e-07, 1.1055999999998872e-05, 4.860000000009301e-07, 1.1096999999998108e-05, 5.420000000026792e-07, 9.429999999997773e-06, 5.419999999992098e-07, 1.2791000000001579e-05, 5.419999999992098e-07, 9.735999999999773e-06, 5.420000000026792e-07, 1.3374999999999498e-05, 5.419999999992098e-07, 1.0318999999998218e-05, 5.420000000026792e-07, 9.722000000000203e-06, 5.419999999992098e-07, 9.749999999999343e-06, 4.860000000009301e-07, 1.1971999999998983e-05, 4.860000000009301e-07, 9.624999999999218e-06, 5.419999999992098e-07, 9.874999999999468e-06, 5.409999999997361e-07, 1.2653000000001358e-05, 5.419999999992098e-07, 1.1472000000001953e-05, 5.419999999992098e-07, 9.290999999998079e-06, 5.420000000026792e-07, 1.3249999999999373e-05, 4.860000000009301e-07, 1.2110999999998678e-05, 5.419999999992098e-07, 1.2207999999999664e-05, 5.420000000026792e-07, 1.3221999999996764e-05, 5.420000000026792e-07, 1.2499999999998623e-05, 5.409999999997361e-07, 1.1487000000000996e-05, 5.409999999997361e-07, 1.2499999999998623e-05, 5.420000000026792e-07, 1.1485999999998053e-05, 5.419999999992098e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:30:41.321" endtime="20201030 18:30:41.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.317" endtime="20201030 18:30:41.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:41.330" level="INFO">${RESULT} = [{'diff': 4.860000000009301e-07}, {'diff': 4.870000000004038e-07}, {'diff': 4.720000000013602e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:30:41.326" endtime="20201030 18:30:41.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:41.334" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 4.870000000004038e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.870000000004038e-07, 5.4199...</msg>
<status status="PASS" starttime="20201030 18:30:41.330" endtime="20201030 18:30:41.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.338" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:30:41.337" endtime="20201030 18:30:41.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.341" level="INFO">VALUE: [4.860000000009301e-07, 4.870000000004038e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.870000000004038e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.410000000032056e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201030 18:30:41.340" endtime="20201030 18:30:41.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.335" endtime="20201030 18:30:41.342"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:41.346" endtime="20201030 18:30:41.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.344" endtime="20201030 18:30:41.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.343" endtime="20201030 18:30:41.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.958" endtime="20201030 18:30:41.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:40.957" endtime="20201030 18:30:41.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:32.957" endtime="20201030 18:30:41.366"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:41.370" endtime="20201030 18:30:41.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.369" endtime="20201030 18:30:41.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.367" endtime="20201030 18:30:41.390"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:32.888" endtime="20201030 18:30:41.390" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:41.397" endtime="20201030 18:30:41.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.396" endtime="20201030 18:30:41.417"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.430" endtime="20201030 18:30:41.446"></status>
</kw>
<msg timestamp="20201030 18:30:41.446" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:41.428" endtime="20201030 18:30:41.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.449" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:41.447" endtime="20201030 18:30:41.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.452" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:41.450" endtime="20201030 18:30:41.452"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:41.426" endtime="20201030 18:30:41.453"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:41.423" endtime="20201030 18:30:41.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.422" endtime="20201030 18:30:41.454"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:41.458" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:41.457" endtime="20201030 18:30:41.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.455" endtime="20201030 18:30:41.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.421" endtime="20201030 18:30:41.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.421" endtime="20201030 18:30:41.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.460" endtime="20201030 18:30:41.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.419" endtime="20201030 18:30:41.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.418" endtime="20201030 18:30:41.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.395" endtime="20201030 18:30:41.463"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.471" endtime="20201030 18:30:41.483"></status>
</kw>
<msg timestamp="20201030 18:30:41.483" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:41.470" endtime="20201030 18:30:41.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.485" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:41.484" endtime="20201030 18:30:41.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.486" endtime="20201030 18:30:41.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.467" endtime="20201030 18:30:41.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.466" endtime="20201030 18:30:41.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.498" endtime="20201030 18:30:41.804"></status>
</kw>
<msg timestamp="20201030 18:30:41.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065231403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065234417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:41.495" endtime="20201030 18:30:41.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065231403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065234417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:41.808" endtime="20201030 18:30:41.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.816" endtime="20201030 18:30:41.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.491" endtime="20201030 18:30:41.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.490" endtime="20201030 18:30:41.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:41.823" level="INFO">${RESULT} = [{'diff': 3.014000000009509e-06}, {'diff': 3.069000000008315e-06}, {'diff': 3.05600000000128e-06}, {'diff': 3.05600000000128e-06}, {'diff': 3.0409999999952975e-06}, {'diff': 3.0139999999956313e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:30:41.819" endtime="20201030 18:30:41.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:41.828" level="INFO">${OVERHEAD} = {'diff': [3.014000000009509e-06, 3.069000000008315e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.0409999999952975e-06, 3.0139999999956313e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.0690...</msg>
<status status="PASS" starttime="20201030 18:30:41.824" endtime="20201030 18:30:41.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.833" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:41.832" endtime="20201030 18:30:41.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.835" level="INFO">VALUE: [3.014000000009509e-06, 3.069000000008315e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.0409999999952975e-06, 3.0139999999956313e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.069000000008315e-06, 3.069000000008315e-06, 3.041999999994771e-06, 3.0000000000030003e-06, 3.0700000000077887e-06, 3.069000000008315e-06, 3.069000000008315e-06, 3.083000000000946e-06, 3.0700000000077887e-06, 3.05600000000128e-06, 3.0980000000069285e-06, 3.05600000000128e-06, 3.083000000000946e-06, 3.042000000008649e-06, 3.0689999999944373e-06, 3.05600000000128e-06, 3.0689999999944373e-06, 3.0550000000018063e-06, 2.9860000000103692e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.041999999994771e-06, 3.0829999999870683e-06, 3.042000000008649e-06, 3.05600000000128e-06, 3.0980000000069285e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.0410000000091753e-06, 3.0700000000077887e-06, 3.083000000000946e-06, 3.097000000007455e-06, 3.05600000000128e-06, 3.0689999999944373e-06, 3.0700000000077887e-06, 3.0550000000018063e-06, 3.0139999999956313e-06, 3.042000000008649e-06, 3.069000000008315e-06, 3.041999999994771e-06, 3.05600000000128e-06, 3.041999999994771e-06]</msg>
<status status="PASS" starttime="20201030 18:30:41.834" endtime="20201030 18:30:41.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.829" endtime="20201030 18:30:41.836"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:41.840" endtime="20201030 18:30:41.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.838" endtime="20201030 18:30:41.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.837" endtime="20201030 18:30:41.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.464" endtime="20201030 18:30:41.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.464" endtime="20201030 18:30:41.860"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.868" endtime="20201030 18:30:41.880"></status>
</kw>
<msg timestamp="20201030 18:30:41.881" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:41.866" endtime="20201030 18:30:41.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:41.883" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:41.882" endtime="20201030 18:30:41.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.884" endtime="20201030 18:30:41.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.864" endtime="20201030 18:30:41.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.862" endtime="20201030 18:30:41.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:41.896" endtime="20201030 18:30:42.184"></status>
</kw>
<msg timestamp="20201030 18:30:42.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019345139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019348236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:41.893" endtime="20201030 18:30:42.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019345139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019348236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:42.188" endtime="20201030 18:30:42.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.197" endtime="20201030 18:30:42.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.889" endtime="20201030 18:30:42.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.888" endtime="20201030 18:30:42.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:42.204" level="INFO">${RESULT} = [{'diff': 3.097000000000516e-06}, {'diff': 3.069000000001376e-06}, {'diff': 3.0840000000004197e-06}, {'diff': 3.054999999998337e-06}, {'diff': 3.069000000001376e-06}, {'diff': 3.0559999999978105e-06},...</msg>
<status status="PASS" starttime="20201030 18:30:42.200" endtime="20201030 18:30:42.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:42.209" level="INFO">${OVERHEAD} = {'diff': [3.097000000000516e-06, 3.069000000001376e-06, 3.0840000000004197e-06, 3.054999999998337e-06, 3.069000000001376e-06, 3.0559999999978105e-06, 3.083000000000946e-06, 3.0419999999982406e-06, 3.0...</msg>
<status status="PASS" starttime="20201030 18:30:42.205" endtime="20201030 18:30:42.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.213" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:42.212" endtime="20201030 18:30:42.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.216" level="INFO">VALUE: [3.097000000000516e-06, 3.069000000001376e-06, 3.0840000000004197e-06, 3.054999999998337e-06, 3.069000000001376e-06, 3.0559999999978105e-06, 3.083000000000946e-06, 3.0419999999982406e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.111000000000086e-06, 3.0279999999986706e-06, 3.054999999998337e-06, 3.05600000000128e-06, 3.083000000000946e-06, 3.05600000000128e-06, 3.0419999999982406e-06, 3.0550000000018063e-06, 3.0689999999979067e-06, 3.054999999998337e-06, 3.0550000000018063e-06, 3.0699999999973804e-06, 3.0689999999979067e-06, 3.05600000000128e-06, 3.0840000000004197e-06, 3.083000000000946e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.153000000002265e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.07000000000085e-06, 3.0550000000018063e-06, 3.0979999999999897e-06, 3.0559999999978105e-06, 3.069000000001376e-06, 3.0419999999982406e-06, 3.05600000000128e-06, 3.07000000000085e-06, 3.0689999999979067e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.0699999999973804e-06, 3.05600000000128e-06, 3.07000000000085e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.0559999999978105e-06, 3.05600000000128e-06]</msg>
<status status="PASS" starttime="20201030 18:30:42.214" endtime="20201030 18:30:42.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.210" endtime="20201030 18:30:42.216"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:42.220" endtime="20201030 18:30:42.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.218" endtime="20201030 18:30:42.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.217" endtime="20201030 18:30:42.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.861" endtime="20201030 18:30:42.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.861" endtime="20201030 18:30:42.241"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.255" endtime="20201030 18:30:42.267"></status>
</kw>
<msg timestamp="20201030 18:30:42.268" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:42.253" endtime="20201030 18:30:42.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.270" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:42.269" endtime="20201030 18:30:42.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.271" endtime="20201030 18:30:42.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.248" endtime="20201030 18:30:42.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.246" endtime="20201030 18:30:42.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.281" endtime="20201030 18:30:42.583"></status>
</kw>
<msg timestamp="20201030 18:30:42.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026097972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026101028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:42.280" endtime="20201030 18:30:42.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026097972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026101028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:42.587" endtime="20201030 18:30:42.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.595" endtime="20201030 18:30:42.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.276" endtime="20201030 18:30:42.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.274" endtime="20201030 18:30:42.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:42.602" level="INFO">${RESULT} = [{'diff': 3.0559999999978105e-06}, {'diff': 3.054999999998337e-06}, {'diff': 3.069000000001376e-06}, {'diff': 3.069000000001376e-06}, {'diff': 3.1109999999966165e-06}, {'diff': 3.02800000000214e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:30:42.599" endtime="20201030 18:30:42.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:42.606" level="INFO">${OVERHEAD} = {'diff': [3.0559999999978105e-06, 3.054999999998337e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.1109999999966165e-06, 3.02800000000214e-06, 3.05600000000128e-06, 3.0829999999974766e-06, 3.069...</msg>
<status status="PASS" starttime="20201030 18:30:42.603" endtime="20201030 18:30:42.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.610" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:42.609" endtime="20201030 18:30:42.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.613" level="INFO">VALUE: [3.0559999999978105e-06, 3.054999999998337e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.1109999999966165e-06, 3.02800000000214e-06, 3.05600000000128e-06, 3.0829999999974766e-06, 3.069000000001376e-06, 3.0699999999973804e-06, 3.0689999999979067e-06, 3.0559999999978105e-06, 3.0419999999982406e-06, 3.04200000000171e-06, 3.0550000000018063e-06, 3.0689999999979067e-06, 3.054999999998337e-06, 3.0829999999974766e-06, 3.0419999999982406e-06, 3.0550000000018063e-06, 3.069000000001376e-06, 3.0550000000018063e-06, 3.083000000000946e-06, 3.1119999999995596e-06, 3.0419999999982406e-06, 3.0689999999979067e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.040999999998767e-06, 3.0279999999986706e-06, 3.0559999999978105e-06, 3.069000000001376e-06, 3.069000000001376e-06, 2.999999999999531e-06, 3.0410000000022364e-06, 3.0840000000004197e-06, 3.040999999998767e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.0979999999999897e-06, 2.999999999999531e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.04200000000171e-06, 3.0550000000018063e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.07000000000085e-06, 3.1389999999992257e-06]</msg>
<status status="PASS" starttime="20201030 18:30:42.611" endtime="20201030 18:30:42.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.607" endtime="20201030 18:30:42.614"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:42.617" endtime="20201030 18:30:42.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.616" endtime="20201030 18:30:42.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.615" endtime="20201030 18:30:42.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.244" endtime="20201030 18:30:42.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.243" endtime="20201030 18:30:42.639"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.651" endtime="20201030 18:30:42.664"></status>
</kw>
<msg timestamp="20201030 18:30:42.664" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:42.649" endtime="20201030 18:30:42.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.668" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:42.666" endtime="20201030 18:30:42.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.671" endtime="20201030 18:30:42.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.646" endtime="20201030 18:30:42.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.643" endtime="20201030 18:30:42.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.681" endtime="20201030 18:30:42.965"></status>
</kw>
<msg timestamp="20201030 18:30:42.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024223861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024226958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:42.679" endtime="20201030 18:30:42.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024223861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024226958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:42.969" endtime="20201030 18:30:42.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:42.978" endtime="20201030 18:30:42.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.677" endtime="20201030 18:30:42.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.675" endtime="20201030 18:30:42.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:42.986" level="INFO">${RESULT} = [{'diff': 3.097000000000516e-06}, {'diff': 3.0550000000018063e-06}, {'diff': 3.05600000000128e-06}, {'diff': 3.04200000000171e-06}, {'diff': 2.999999999999531e-06}, {'diff': 3.069000000001376e-06}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:42.983" endtime="20201030 18:30:42.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:42.991" level="INFO">${OVERHEAD} = {'diff': [3.097000000000516e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.04200000000171e-06, 2.999999999999531e-06, 3.069000000001376e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.05600...</msg>
<status status="PASS" starttime="20201030 18:30:42.987" endtime="20201030 18:30:42.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.995" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:42.994" endtime="20201030 18:30:42.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:42.998" level="INFO">VALUE: [3.097000000000516e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.04200000000171e-06, 2.999999999999531e-06, 3.069000000001376e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.0699999999973804e-06, 3.0550000000018063e-06, 2.999999999999531e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.0559999999978105e-06, 3.07000000000085e-06, 3.05600000000128e-06, 3.069000000001376e-06, 3.040999999998767e-06, 3.05600000000128e-06, 3.0559999999978105e-06, 3.0559999999978105e-06, 3.054999999998337e-06, 3.0139999999991007e-06, 3.054999999998337e-06, 3.054999999998337e-06, 3.0270000000026664e-06, 3.083000000000946e-06, 3.0550000000018063e-06, 3.0139999999991007e-06, 3.0139999999991007e-06, 3.054999999998337e-06, 3.07000000000085e-06, 3.0279999999986706e-06, 3.0689999999979067e-06, 3.0829999999974766e-06, 3.04200000000171e-06, 3.0840000000004197e-06, 3.0559999999978105e-06, 2.985999999999961e-06, 3.097000000000516e-06, 3.0829999999974766e-06, 3.0840000000004197e-06, 3.111000000000086e-06, 3.0689999999979067e-06, 3.083000000000946e-06, 3.040999999998767e-06, 3.05600000000128e-06, 3.069000000001376e-06, 3.0699999999973804e-06]</msg>
<status status="PASS" starttime="20201030 18:30:42.996" endtime="20201030 18:30:42.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.992" endtime="20201030 18:30:42.999"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:43.002" endtime="20201030 18:30:43.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.001" endtime="20201030 18:30:43.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.000" endtime="20201030 18:30:43.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.640" endtime="20201030 18:30:43.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:42.640" endtime="20201030 18:30:43.023"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.031" endtime="20201030 18:30:43.043"></status>
</kw>
<msg timestamp="20201030 18:30:43.044" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:43.029" endtime="20201030 18:30:43.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.046" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:43.045" endtime="20201030 18:30:43.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.047" endtime="20201030 18:30:43.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.027" endtime="20201030 18:30:43.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.025" endtime="20201030 18:30:43.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.056" endtime="20201030 18:30:43.360"></status>
</kw>
<msg timestamp="20201030 18:30:43.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019464194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01946725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:43.055" endtime="20201030 18:30:43.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019464194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01946725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:43.364" endtime="20201030 18:30:43.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.373" endtime="20201030 18:30:43.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.052" endtime="20201030 18:30:43.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.050" endtime="20201030 18:30:43.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:43.379" level="INFO">${RESULT} = [{'diff': 3.0559999999978105e-06}, {'diff': 3.0559999999978105e-06}, {'diff': 3.083000000000946e-06}, {'diff': 3.083000000000946e-06}, {'diff': 3.069000000001376e-06}, {'diff': 3.0689999999979067e-06}...</msg>
<status status="PASS" starttime="20201030 18:30:43.376" endtime="20201030 18:30:43.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:43.384" level="INFO">${OVERHEAD} = {'diff': [3.0559999999978105e-06, 3.0559999999978105e-06, 3.083000000000946e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3.0689999999979067e-06, 3.0829999999974766e-06, 3.04200000000171e-06, 3.0...</msg>
<status status="PASS" starttime="20201030 18:30:43.380" endtime="20201030 18:30:43.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.389" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:43.388" endtime="20201030 18:30:43.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.391" level="INFO">VALUE: [3.0559999999978105e-06, 3.0559999999978105e-06, 3.083000000000946e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3.0689999999979067e-06, 3.0829999999974766e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.05600000000128e-06, 3.0139999999991007e-06, 3.054999999998337e-06, 3.05600000000128e-06, 3.069000000001376e-06, 3.0689999999979067e-06, 3.05600000000128e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.054999999998337e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.0559999999978105e-06, 3.0419999999982406e-06, 3.054999999998337e-06, 2.999999999999531e-06, 3.026999999999197e-06, 3.0550000000018063e-06, 3.04200000000171e-06, 3.07000000000085e-06, 3.0550000000018063e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.1250000000031253e-06, 3.097000000000516e-06, 3.0689999999979067e-06, 3.0410000000022364e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.02800000000214e-06, 3.0419999999982406e-06, 3.054999999998337e-06, 3.0689999999979067e-06, 3.054999999998337e-06, 3.040999999998767e-06, 2.999999999999531e-06, 3.0419999999982406e-06, 3.04200000000171e-06, 3.0419999999982406e-06]</msg>
<status status="PASS" starttime="20201030 18:30:43.390" endtime="20201030 18:30:43.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.385" endtime="20201030 18:30:43.392"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:43.395" endtime="20201030 18:30:43.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.394" endtime="20201030 18:30:43.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.393" endtime="20201030 18:30:43.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.024" endtime="20201030 18:30:43.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.023" endtime="20201030 18:30:43.416"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.424" endtime="20201030 18:30:43.436"></status>
</kw>
<msg timestamp="20201030 18:30:43.436" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:43.422" endtime="20201030 18:30:43.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.439" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:43.437" endtime="20201030 18:30:43.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.440" endtime="20201030 18:30:43.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.420" endtime="20201030 18:30:43.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.418" endtime="20201030 18:30:43.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.449" endtime="20201030 18:30:43.735"></status>
</kw>
<msg timestamp="20201030 18:30:43.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019617986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019621056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:43.447" endtime="20201030 18:30:43.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019617986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019621056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:43.740" endtime="20201030 18:30:43.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.749" endtime="20201030 18:30:43.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.445" endtime="20201030 18:30:43.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.443" endtime="20201030 18:30:43.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:43.756" level="INFO">${RESULT} = [{'diff': 3.07000000000085e-06}, {'diff': 3.083000000000946e-06}, {'diff': 3.07000000000085e-06}, {'diff': 3.04200000000171e-06}, {'diff': 3.026999999999197e-06}, {'diff': 3.0410000000022364e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 18:30:43.752" endtime="20201030 18:30:43.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:43.760" level="INFO">${OVERHEAD} = {'diff': [3.07000000000085e-06, 3.083000000000946e-06, 3.07000000000085e-06, 3.04200000000171e-06, 3.026999999999197e-06, 3.0410000000022364e-06, 3.07000000000085e-06, 3.04200000000171e-06, 3.05599999...</msg>
<status status="PASS" starttime="20201030 18:30:43.757" endtime="20201030 18:30:43.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.764" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:43.763" endtime="20201030 18:30:43.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.767" level="INFO">VALUE: [3.07000000000085e-06, 3.083000000000946e-06, 3.07000000000085e-06, 3.04200000000171e-06, 3.026999999999197e-06, 3.0410000000022364e-06, 3.07000000000085e-06, 3.04200000000171e-06, 3.0559999999978105e-06, 3.054999999998337e-06, 3.040999999998767e-06, 3.1389999999992257e-06, 3.054999999998337e-06, 3.054999999998337e-06, 3.0699999999973804e-06, 3.054999999998337e-06, 3.0279999999986706e-06, 3.0979999999999897e-06, 3.111000000000086e-06, 3.069000000001376e-06, 3.097000000000516e-06, 3.0270000000026664e-06, 3.0550000000018063e-06, 3.054999999998337e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.07000000000085e-06, 3.040999999998767e-06, 3.097000000000516e-06, 3.05600000000128e-06, 3.054999999998337e-06, 3.111000000000086e-06, 3.0839999999969503e-06, 3.0840000000004197e-06, 3.02800000000214e-06, 3.05600000000128e-06, 3.0410000000022364e-06, 3.069000000001376e-06, 3.124999999999656e-06, 3.0550000000018063e-06, 2.999999999999531e-06, 3.0839999999969503e-06, 3.05600000000128e-06, 3.0689999999979067e-06, 3.0419999999982406e-06, 3.0699999999973804e-06, 3.05600000000128e-06, 3.054999999998337e-06, 3.0689999999979067e-06, 3.0829999999974766e-06]</msg>
<status status="PASS" starttime="20201030 18:30:43.765" endtime="20201030 18:30:43.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.761" endtime="20201030 18:30:43.768"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:43.771" endtime="20201030 18:30:43.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.770" endtime="20201030 18:30:43.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.769" endtime="20201030 18:30:43.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.417" endtime="20201030 18:30:43.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.416" endtime="20201030 18:30:43.792"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.800" endtime="20201030 18:30:43.813"></status>
</kw>
<msg timestamp="20201030 18:30:43.814" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:43.799" endtime="20201030 18:30:43.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.816" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:43.815" endtime="20201030 18:30:43.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.818" endtime="20201030 18:30:43.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.796" endtime="20201030 18:30:43.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.794" endtime="20201030 18:30:43.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.827" endtime="20201030 18:30:44.125"></status>
</kw>
<msg timestamp="20201030 18:30:44.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020976111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020979167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:43.826" endtime="20201030 18:30:44.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020976111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020979167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:44.130" endtime="20201030 18:30:44.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.138" endtime="20201030 18:30:44.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.823" endtime="20201030 18:30:44.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.821" endtime="20201030 18:30:44.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:44.145" level="INFO">${RESULT} = [{'diff': 3.05600000000128e-06}, {'diff': 2.999999999999531e-06}, {'diff': 3.04200000000171e-06}, {'diff': 3.07000000000085e-06}, {'diff': 3.069000000001376e-06}, {'diff': 3.054999999998337e-06}, {'di...</msg>
<status status="PASS" starttime="20201030 18:30:44.142" endtime="20201030 18:30:44.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:44.149" level="INFO">${OVERHEAD} = {'diff': [3.05600000000128e-06, 2.999999999999531e-06, 3.04200000000171e-06, 3.07000000000085e-06, 3.069000000001376e-06, 3.054999999998337e-06, 3.0550000000018063e-06, 3.0689999999979067e-06, 3.06900...</msg>
<status status="PASS" starttime="20201030 18:30:44.146" endtime="20201030 18:30:44.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.154" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:44.153" endtime="20201030 18:30:44.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.156" level="INFO">VALUE: [3.05600000000128e-06, 2.999999999999531e-06, 3.04200000000171e-06, 3.07000000000085e-06, 3.069000000001376e-06, 3.054999999998337e-06, 3.0550000000018063e-06, 3.0689999999979067e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.054999999998337e-06, 3.083000000000946e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.0699999999973804e-06, 3.0550000000018063e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.097000000000516e-06, 3.0689999999979067e-06, 3.069000000001376e-06, 3.0559999999978105e-06, 3.05600000000128e-06, 3.0139999999991007e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.0840000000004197e-06, 3.04200000000171e-06, 2.985999999999961e-06, 3.097000000000516e-06, 3.07000000000085e-06, 3.0689999999979067e-06, 3.054999999998337e-06, 3.0410000000022364e-06, 3.097000000000516e-06, 3.04200000000171e-06, 3.07000000000085e-06, 3.07000000000085e-06, 3.07000000000085e-06, 3.069000000001376e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.040999999998767e-06, 3.0550000000018063e-06, 3.0689999999979067e-06, 3.05600000000128e-06, 3.0689999999979067e-06]</msg>
<status status="PASS" starttime="20201030 18:30:44.155" endtime="20201030 18:30:44.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.150" endtime="20201030 18:30:44.158"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:44.162" endtime="20201030 18:30:44.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.160" endtime="20201030 18:30:44.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.159" endtime="20201030 18:30:44.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.793" endtime="20201030 18:30:44.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.792" endtime="20201030 18:30:44.183"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.191" endtime="20201030 18:30:44.202"></status>
</kw>
<msg timestamp="20201030 18:30:44.203" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:44.189" endtime="20201030 18:30:44.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.205" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:44.204" endtime="20201030 18:30:44.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.207" endtime="20201030 18:30:44.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.186" endtime="20201030 18:30:44.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.185" endtime="20201030 18:30:44.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.216" endtime="20201030 18:30:44.502"></status>
</kw>
<msg timestamp="20201030 18:30:44.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019849653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:44.215" endtime="20201030 18:30:44.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019849653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:44.507" endtime="20201030 18:30:44.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.515" endtime="20201030 18:30:44.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.212" endtime="20201030 18:30:44.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.210" endtime="20201030 18:30:44.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:44.522" level="INFO">${RESULT} = [{'diff': 3.0410000000022364e-06}, {'diff': 3.054999999998337e-06}, {'diff': 3.0689999999979067e-06}, {'diff': 3.0559999999978105e-06}, {'diff': 3.083000000000946e-06}, {'diff': 3.0829999999974766e-06...</msg>
<status status="PASS" starttime="20201030 18:30:44.519" endtime="20201030 18:30:44.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:44.527" level="INFO">${OVERHEAD} = {'diff': [3.0410000000022364e-06, 3.054999999998337e-06, 3.0689999999979067e-06, 3.0559999999978105e-06, 3.083000000000946e-06, 3.0829999999974766e-06, 3.083000000000946e-06, 3.0550000000018063e-06, 3...</msg>
<status status="PASS" starttime="20201030 18:30:44.523" endtime="20201030 18:30:44.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.532" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:44.531" endtime="20201030 18:30:44.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.534" level="INFO">VALUE: [3.0410000000022364e-06, 3.054999999998337e-06, 3.0689999999979067e-06, 3.0559999999978105e-06, 3.083000000000946e-06, 3.0829999999974766e-06, 3.083000000000946e-06, 3.0550000000018063e-06, 3.0419999999982406e-06, 3.0689999999979067e-06, 3.1389999999992257e-06, 3.1389999999992257e-06, 3.05600000000128e-06, 3.054999999998337e-06, 3.0699999999973804e-06, 3.0689999999979067e-06, 3.0559999999978105e-06, 3.083000000000946e-06, 3.0550000000018063e-06, 3.097000000000516e-06, 3.01400000000257e-06, 3.0559999999978105e-06, 3.0410000000022364e-06, 3.0699999999973804e-06, 3.097000000000516e-06, 3.0699999999973804e-06, 3.0139999999991007e-06, 3.040999999998767e-06, 3.083000000000946e-06, 3.0550000000018063e-06, 3.0689999999979067e-06, 3.0689999999979067e-06, 3.083000000000946e-06, 3.0419999999982406e-06, 3.124999999999656e-06, 3.0419999999982406e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.0410000000022364e-06, 3.07000000000085e-06, 3.054999999998337e-06, 3.04200000000171e-06, 3.0419999999982406e-06, 3.069000000001376e-06, 3.083000000000946e-06, 3.054999999998337e-06, 3.0139999999991007e-06, 3.069000000001376e-06, 3.097000000000516e-06, 3.07000000000085e-06]</msg>
<status status="PASS" starttime="20201030 18:30:44.533" endtime="20201030 18:30:44.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.528" endtime="20201030 18:30:44.535"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:44.539" endtime="20201030 18:30:44.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.537" endtime="20201030 18:30:44.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.536" endtime="20201030 18:30:44.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.183" endtime="20201030 18:30:44.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.183" endtime="20201030 18:30:44.560"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.568" endtime="20201030 18:30:44.579"></status>
</kw>
<msg timestamp="20201030 18:30:44.580" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:44.566" endtime="20201030 18:30:44.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.582" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:44.581" endtime="20201030 18:30:44.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.584" endtime="20201030 18:30:44.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.564" endtime="20201030 18:30:44.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.562" endtime="20201030 18:30:44.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.594" endtime="20201030 18:30:44.879"></status>
</kw>
<msg timestamp="20201030 18:30:44.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019995028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019998083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:44.592" endtime="20201030 18:30:44.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019995028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019998083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:44.884" endtime="20201030 18:30:44.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.892" endtime="20201030 18:30:44.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.590" endtime="20201030 18:30:44.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.587" endtime="20201030 18:30:44.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:44.899" level="INFO">${RESULT} = [{'diff': 3.054999999998337e-06}, {'diff': 3.07000000000085e-06}, {'diff': 3.111000000000086e-06}, {'diff': 3.069000000001376e-06}, {'diff': 3.054999999998337e-06}, {'diff': 3.0550000000018063e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:30:44.896" endtime="20201030 18:30:44.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:44.903" level="INFO">${OVERHEAD} = {'diff': [3.054999999998337e-06, 3.07000000000085e-06, 3.111000000000086e-06, 3.069000000001376e-06, 3.054999999998337e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.040999999998767e-06, 3.06899...</msg>
<status status="PASS" starttime="20201030 18:30:44.900" endtime="20201030 18:30:44.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.907" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:44.906" endtime="20201030 18:30:44.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.910" level="INFO">VALUE: [3.054999999998337e-06, 3.07000000000085e-06, 3.111000000000086e-06, 3.069000000001376e-06, 3.054999999998337e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.040999999998767e-06, 3.0689999999979067e-06, 3.04200000000171e-06, 3.054999999998337e-06, 3.05600000000128e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.04200000000171e-06, 3.07000000000085e-06, 3.0419999999982406e-06, 3.07000000000085e-06, 3.05600000000128e-06, 3.0689999999979067e-06, 3.012999999999627e-06, 3.0840000000004197e-06, 3.05600000000128e-06, 3.0689999999979067e-06, 3.0270000000026664e-06, 3.05600000000128e-06, 3.069000000001376e-06, 3.054999999998337e-06, 3.0979999999999897e-06, 3.1389999999992257e-06, 3.083000000000946e-06, 3.0559999999978105e-06, 3.0699999999973804e-06, 3.0699999999973804e-06, 3.054999999998337e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.097000000000516e-06, 3.054999999998337e-06, 3.097000000000516e-06, 3.0550000000018063e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.083000000000946e-06, 3.0840000000004197e-06, 3.0979999999999897e-06, 3.083000000000946e-06, 3.01400000000257e-06, 3.069000000001376e-06, 3.083000000000946e-06]</msg>
<status status="PASS" starttime="20201030 18:30:44.908" endtime="20201030 18:30:44.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.904" endtime="20201030 18:30:44.911"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:44.915" endtime="20201030 18:30:44.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.913" endtime="20201030 18:30:44.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.912" endtime="20201030 18:30:44.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.561" endtime="20201030 18:30:44.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.560" endtime="20201030 18:30:44.935"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.944" endtime="20201030 18:30:44.956"></status>
</kw>
<msg timestamp="20201030 18:30:44.957" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:44.942" endtime="20201030 18:30:44.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:44.959" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:44.958" endtime="20201030 18:30:44.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.961" endtime="20201030 18:30:44.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.939" endtime="20201030 18:30:44.964"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.937" endtime="20201030 18:30:44.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:44.971" endtime="20201030 18:30:45.259"></status>
</kw>
<msg timestamp="20201030 18:30:45.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020227694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020230736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:44.969" endtime="20201030 18:30:45.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020227694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020230736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:45.264" endtime="20201030 18:30:45.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.272" endtime="20201030 18:30:45.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.967" endtime="20201030 18:30:45.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.965" endtime="20201030 18:30:45.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:45.279" level="INFO">${RESULT} = [{'diff': 3.0419999999982406e-06}, {'diff': 3.0699999999973804e-06}, {'diff': 3.054999999998337e-06}, {'diff': 3.05600000000128e-06}, {'diff': 3.0419999999982406e-06}, {'diff': 3.0699999999973804e-06}...</msg>
<status status="PASS" starttime="20201030 18:30:45.276" endtime="20201030 18:30:45.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:45.283" level="INFO">${OVERHEAD} = {'diff': [3.0419999999982406e-06, 3.0699999999973804e-06, 3.054999999998337e-06, 3.05600000000128e-06, 3.0419999999982406e-06, 3.0699999999973804e-06, 3.05600000000128e-06, 3.0689999999979067e-06, 3.0...</msg>
<status status="PASS" starttime="20201030 18:30:45.280" endtime="20201030 18:30:45.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.288" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:45.287" endtime="20201030 18:30:45.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.290" level="INFO">VALUE: [3.0419999999982406e-06, 3.0699999999973804e-06, 3.054999999998337e-06, 3.05600000000128e-06, 3.0419999999982406e-06, 3.0699999999973804e-06, 3.05600000000128e-06, 3.0689999999979067e-06, 3.07000000000085e-06, 3.0699999999973804e-06, 3.05600000000128e-06, 3.0559999999978105e-06, 3.0829999999974766e-06, 3.069000000001376e-06, 3.0559999999978105e-06, 3.02800000000214e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.083000000000946e-06, 3.097000000000516e-06, 3.124999999999656e-06, 3.0689999999979067e-06, 3.0419999999982406e-06, 3.0550000000018063e-06, 3.0279999999986706e-06, 3.083000000000946e-06, 3.0979999999999897e-06, 2.987000000002904e-06, 3.054999999998337e-06, 3.0689999999979067e-06, 3.0840000000004197e-06, 3.040999999998767e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.04200000000171e-06, 3.0550000000018063e-06, 3.040999999998767e-06, 3.0840000000004197e-06, 3.0689999999979067e-06, 3.0559999999978105e-06, 3.0550000000018063e-06, 3.054999999998337e-06, 3.083000000000946e-06, 3.07000000000085e-06, 3.0559999999978105e-06, 3.097000000000516e-06, 3.0279999999986706e-06, 3.054999999998337e-06, 3.0559999999978105e-06]</msg>
<status status="PASS" starttime="20201030 18:30:45.289" endtime="20201030 18:30:45.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.284" endtime="20201030 18:30:45.294"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:45.298" endtime="20201030 18:30:45.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.296" endtime="20201030 18:30:45.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.295" endtime="20201030 18:30:45.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.936" endtime="20201030 18:30:45.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:44.936" endtime="20201030 18:30:45.318"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.327" endtime="20201030 18:30:45.339"></status>
</kw>
<msg timestamp="20201030 18:30:45.339" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:45.325" endtime="20201030 18:30:45.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.342" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:45.341" endtime="20201030 18:30:45.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.343" endtime="20201030 18:30:45.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.322" endtime="20201030 18:30:45.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.320" endtime="20201030 18:30:45.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.353" endtime="20201030 18:30:45.640"></status>
</kw>
<msg timestamp="20201030 18:30:45.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020321472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020324528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:45.351" endtime="20201030 18:30:45.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020321472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020324528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:45.644" endtime="20201030 18:30:45.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.653" endtime="20201030 18:30:45.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.348" endtime="20201030 18:30:45.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.347" endtime="20201030 18:30:45.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:45.659" level="INFO">${RESULT} = [{'diff': 3.05600000000128e-06}, {'diff': 3.137999999999752e-06}, {'diff': 3.069000000001376e-06}, {'diff': 3.07000000000085e-06}, {'diff': 3.05600000000128e-06}, {'diff': 3.07000000000085e-06}, {'dif...</msg>
<status status="PASS" starttime="20201030 18:30:45.656" endtime="20201030 18:30:45.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:45.664" level="INFO">${OVERHEAD} = {'diff': [3.05600000000128e-06, 3.137999999999752e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.05600000000128e-06, 3.07000000000085e-06, 3.069000000001376e-06, 3.0419999999982406e-06, 3.0560000...</msg>
<status status="PASS" starttime="20201030 18:30:45.660" endtime="20201030 18:30:45.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.669" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:45.668" endtime="20201030 18:30:45.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.671" level="INFO">VALUE: [3.05600000000128e-06, 3.137999999999752e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.05600000000128e-06, 3.07000000000085e-06, 3.069000000001376e-06, 3.0419999999982406e-06, 3.05600000000128e-06, 3.0689999999979067e-06, 3.054999999998337e-06, 3.0279999999986706e-06, 3.0550000000018063e-06, 3.097000000000516e-06, 3.0559999999978105e-06, 3.054999999998337e-06, 3.05600000000128e-06, 3.0840000000004197e-06, 3.05600000000128e-06, 3.0839999999969503e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.02800000000214e-06, 3.054999999998337e-06, 3.01400000000257e-06, 3.0550000000018063e-06, 3.111000000000086e-06, 3.054999999998337e-06, 3.05600000000128e-06, 3.0279999999986706e-06, 3.05600000000128e-06, 3.1389999999992257e-06, 3.0559999999978105e-06, 3.0130000000030965e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.0559999999978105e-06, 3.083000000000946e-06, 3.0419999999982406e-06, 3.0689999999979067e-06, 3.07000000000085e-06, 3.040999999998767e-06, 3.054999999998337e-06, 3.0689999999979067e-06, 3.0699999999973804e-06, 3.04200000000171e-06, 3.111000000000086e-06, 3.04200000000171e-06, 3.083000000000946e-06, 3.0550000000018063e-06]</msg>
<status status="PASS" starttime="20201030 18:30:45.670" endtime="20201030 18:30:45.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.665" endtime="20201030 18:30:45.672"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:45.676" endtime="20201030 18:30:45.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.674" endtime="20201030 18:30:45.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.673" endtime="20201030 18:30:45.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.319" endtime="20201030 18:30:45.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.319" endtime="20201030 18:30:45.697"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.705" endtime="20201030 18:30:45.717"></status>
</kw>
<msg timestamp="20201030 18:30:45.718" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:45.704" endtime="20201030 18:30:45.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:45.720" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:45.719" endtime="20201030 18:30:45.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.721" endtime="20201030 18:30:45.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.701" endtime="20201030 18:30:45.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.699" endtime="20201030 18:30:45.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:45.731" endtime="20201030 18:30:46.019"></status>
</kw>
<msg timestamp="20201030 18:30:46.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020342819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020345958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:45.729" endtime="20201030 18:30:46.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020342819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020345958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:46.024" endtime="20201030 18:30:46.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.032" endtime="20201030 18:30:46.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.726" endtime="20201030 18:30:46.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.725" endtime="20201030 18:30:46.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:46.040" level="INFO">${RESULT} = [{'diff': 3.1389999999992257e-06}, {'diff': 3.05600000000128e-06}, {'diff': 3.0689999999979067e-06}, {'diff': 3.0559999999978105e-06}, {'diff': 3.0969999999970466e-06}, {'diff': 3.0840000000004197e-06...</msg>
<status status="PASS" starttime="20201030 18:30:46.037" endtime="20201030 18:30:46.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:46.045" level="INFO">${OVERHEAD} = {'diff': [3.1389999999992257e-06, 3.05600000000128e-06, 3.0689999999979067e-06, 3.0559999999978105e-06, 3.0969999999970466e-06, 3.0840000000004197e-06, 3.0689999999979067e-06, 3.069000000001376e-06, 3...</msg>
<status status="PASS" starttime="20201030 18:30:46.041" endtime="20201030 18:30:46.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.050" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:46.048" endtime="20201030 18:30:46.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.052" level="INFO">VALUE: [3.1389999999992257e-06, 3.05600000000128e-06, 3.0689999999979067e-06, 3.0559999999978105e-06, 3.0969999999970466e-06, 3.0840000000004197e-06, 3.0689999999979067e-06, 3.069000000001376e-06, 3.026999999999197e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.111000000000086e-06, 3.05600000000128e-06, 3.0689999999979067e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.097000000000516e-06, 3.0550000000018063e-06, 3.026999999999197e-06, 3.069000000001376e-06, 3.097000000000516e-06, 3.01400000000257e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.0559999999978105e-06, 3.0699999999973804e-06, 3.040999999998767e-06, 3.054999999998337e-06, 3.0139999999991007e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.012999999999627e-06, 3.0559999999978105e-06, 3.07000000000085e-06, 3.0559999999978105e-06, 3.05600000000128e-06, 3.07000000000085e-06, 3.05600000000128e-06, 3.083000000000946e-06, 3.0559999999978105e-06, 3.054999999998337e-06, 3.0689999999979067e-06, 3.07000000000085e-06, 3.083000000000946e-06, 3.083000000000946e-06, 3.0550000000018063e-06, 3.097000000000516e-06]</msg>
<status status="PASS" starttime="20201030 18:30:46.051" endtime="20201030 18:30:46.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.046" endtime="20201030 18:30:46.054"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:46.057" endtime="20201030 18:30:46.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.056" endtime="20201030 18:30:46.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.055" endtime="20201030 18:30:46.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.698" endtime="20201030 18:30:46.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:45.697" endtime="20201030 18:30:46.078"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.088" endtime="20201030 18:30:46.102"></status>
</kw>
<msg timestamp="20201030 18:30:46.103" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:46.085" endtime="20201030 18:30:46.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.107" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:46.104" endtime="20201030 18:30:46.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.109" endtime="20201030 18:30:46.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.082" endtime="20201030 18:30:46.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.081" endtime="20201030 18:30:46.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.124" endtime="20201030 18:30:46.409"></status>
</kw>
<msg timestamp="20201030 18:30:46.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022350375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022353389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:46.122" endtime="20201030 18:30:46.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022350375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022353389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:46.414" endtime="20201030 18:30:46.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.422" endtime="20201030 18:30:46.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.117" endtime="20201030 18:30:46.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.115" endtime="20201030 18:30:46.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:46.429" level="INFO">${RESULT} = [{'diff': 3.01400000000257e-06}, {'diff': 3.07000000000085e-06}, {'diff': 3.05600000000128e-06}, {'diff': 3.083000000000946e-06}, {'diff': 3.083000000000946e-06}, {'diff': 3.0559999999978105e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 18:30:46.426" endtime="20201030 18:30:46.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:46.433" level="INFO">${OVERHEAD} = {'diff': [3.01400000000257e-06, 3.07000000000085e-06, 3.05600000000128e-06, 3.083000000000946e-06, 3.083000000000946e-06, 3.0559999999978105e-06, 3.040999999998767e-06, 3.069000000001376e-06, 3.070000...</msg>
<status status="PASS" starttime="20201030 18:30:46.430" endtime="20201030 18:30:46.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.438" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:46.437" endtime="20201030 18:30:46.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.440" level="INFO">VALUE: [3.01400000000257e-06, 3.07000000000085e-06, 3.05600000000128e-06, 3.083000000000946e-06, 3.083000000000946e-06, 3.0559999999978105e-06, 3.040999999998767e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.069000000001376e-06, 3.0419999999982406e-06, 3.1250000000031253e-06, 2.999999999999531e-06, 3.0699999999973804e-06, 3.07000000000085e-06, 3.04200000000171e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.0840000000004197e-06, 3.069000000001376e-06, 3.124999999999656e-06, 3.0550000000018063e-06, 3.0550000000018063e-06, 3.0559999999978105e-06, 3.07000000000085e-06, 3.04200000000171e-06, 3.040999999998767e-06, 3.0699999999973804e-06, 3.097000000000516e-06, 3.069000000001376e-06, 3.0419999999982406e-06, 3.0410000000022364e-06, 3.054999999998337e-06, 3.0829999999974766e-06, 3.040999999998767e-06, 3.0559999999978105e-06, 3.0689999999979067e-06, 3.05600000000128e-06, 3.111000000000086e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.083000000000946e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.069000000001376e-06, 3.054999999998337e-06, 3.0689999999979067e-06, 3.054999999998337e-06, 3.0139999999991007e-06]</msg>
<status status="PASS" starttime="20201030 18:30:46.439" endtime="20201030 18:30:46.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.434" endtime="20201030 18:30:46.442"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:46.446" endtime="20201030 18:30:46.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.444" endtime="20201030 18:30:46.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.443" endtime="20201030 18:30:46.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.079" endtime="20201030 18:30:46.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.079" endtime="20201030 18:30:46.467"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.475" endtime="20201030 18:30:46.487"></status>
</kw>
<msg timestamp="20201030 18:30:46.488" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:46.473" endtime="20201030 18:30:46.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.490" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:46.489" endtime="20201030 18:30:46.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.491" endtime="20201030 18:30:46.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.470" endtime="20201030 18:30:46.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.469" endtime="20201030 18:30:46.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.501" endtime="20201030 18:30:46.786"></status>
</kw>
<msg timestamp="20201030 18:30:46.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019789681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01979275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:46.499" endtime="20201030 18:30:46.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019789681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01979275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:46.790" endtime="20201030 18:30:46.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.799" endtime="20201030 18:30:46.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.496" endtime="20201030 18:30:46.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.495" endtime="20201030 18:30:46.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:46.805" level="INFO">${RESULT} = [{'diff': 3.069000000001376e-06}, {'diff': 3.0550000000018063e-06}, {'diff': 3.04200000000171e-06}, {'diff': 3.097000000000516e-06}, {'diff': 3.0410000000022364e-06}, {'diff': 3.05600000000128e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:30:46.802" endtime="20201030 18:30:46.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:46.810" level="INFO">${OVERHEAD} = {'diff': [3.069000000001376e-06, 3.0550000000018063e-06, 3.04200000000171e-06, 3.097000000000516e-06, 3.0410000000022364e-06, 3.05600000000128e-06, 3.0419999999982406e-06, 3.0559999999978105e-06, 3.06...</msg>
<status status="PASS" starttime="20201030 18:30:46.806" endtime="20201030 18:30:46.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.815" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:46.814" endtime="20201030 18:30:46.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.817" level="INFO">VALUE: [3.069000000001376e-06, 3.0550000000018063e-06, 3.04200000000171e-06, 3.097000000000516e-06, 3.0410000000022364e-06, 3.05600000000128e-06, 3.0419999999982406e-06, 3.0559999999978105e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.07000000000085e-06, 3.04200000000171e-06, 3.07000000000085e-06, 3.05600000000128e-06, 3.07000000000085e-06, 3.0979999999999897e-06, 3.083000000000946e-06, 3.0689999999979067e-06, 3.0419999999982406e-06, 3.069000000001376e-06, 3.054999999998337e-06, 3.05600000000128e-06, 3.0559999999978105e-06, 3.05600000000128e-06, 3.054999999998337e-06, 3.0829999999974766e-06, 3.07000000000085e-06, 3.054999999998337e-06, 3.07000000000085e-06, 3.069000000001376e-06, 3.0689999999979067e-06, 3.111000000000086e-06, 3.040999999998767e-06, 3.054999999998337e-06, 3.054999999998337e-06, 3.124999999999656e-06, 3.0550000000018063e-06, 3.054999999998337e-06, 3.0550000000018063e-06, 3.040999999998767e-06, 3.069000000001376e-06, 3.0699999999973804e-06, 3.0829999999974766e-06, 3.097000000000516e-06, 3.0840000000004197e-06, 3.04200000000171e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.0279999999986706e-06, 3.111000000000086e-06]</msg>
<status status="PASS" starttime="20201030 18:30:46.816" endtime="20201030 18:30:46.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.811" endtime="20201030 18:30:46.819"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:46.822" endtime="20201030 18:30:46.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.821" endtime="20201030 18:30:46.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.820" endtime="20201030 18:30:46.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.467" endtime="20201030 18:30:46.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.467" endtime="20201030 18:30:46.843"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.851" endtime="20201030 18:30:46.864"></status>
</kw>
<msg timestamp="20201030 18:30:46.864" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:46.850" endtime="20201030 18:30:46.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.867" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:46.865" endtime="20201030 18:30:46.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.868" endtime="20201030 18:30:46.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.847" endtime="20201030 18:30:46.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.845" endtime="20201030 18:30:46.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.877" endtime="20201030 18:30:47.165"></status>
</kw>
<msg timestamp="20201030 18:30:47.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020225694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02022875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:46.876" endtime="20201030 18:30:47.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020225694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02022875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:47.170" endtime="20201030 18:30:47.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.178" endtime="20201030 18:30:47.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.873" endtime="20201030 18:30:47.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.871" endtime="20201030 18:30:47.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:47.186" level="INFO">${RESULT} = [{'diff': 3.05600000000128e-06}, {'diff': 3.0559999999978105e-06}, {'diff': 3.0559999999978105e-06}, {'diff': 3.0270000000026664e-06}, {'diff': 3.0419999999982406e-06}, {'diff': 3.040999999998767e-06}...</msg>
<status status="PASS" starttime="20201030 18:30:47.183" endtime="20201030 18:30:47.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:47.191" level="INFO">${OVERHEAD} = {'diff': [3.05600000000128e-06, 3.0559999999978105e-06, 3.0559999999978105e-06, 3.0270000000026664e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 3.040999999998767e-06, 3.0699999999973804e-06, 3....</msg>
<status status="PASS" starttime="20201030 18:30:47.187" endtime="20201030 18:30:47.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.195" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:47.194" endtime="20201030 18:30:47.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.198" level="INFO">VALUE: [3.05600000000128e-06, 3.0559999999978105e-06, 3.0559999999978105e-06, 3.0270000000026664e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 3.040999999998767e-06, 3.0699999999973804e-06, 3.05600000000128e-06, 2.999999999999531e-06, 3.0689999999979067e-06, 3.07000000000085e-06, 3.040999999998767e-06, 3.054999999998337e-06, 3.0410000000022364e-06, 3.083000000000946e-06, 3.0689999999979067e-06, 3.07000000000085e-06, 3.0279999999986706e-06, 3.111000000000086e-06, 3.05600000000128e-06, 3.04200000000171e-06, 3.054999999998337e-06, 3.0689999999979067e-06, 2.999999999999531e-06, 3.054999999998337e-06, 3.0699999999973804e-06, 3.07000000000085e-06, 3.04200000000171e-06, 3.07000000000085e-06, 3.097000000000516e-06, 3.054999999998337e-06, 3.0550000000018063e-06, 3.069000000001376e-06, 3.124999999999656e-06, 3.0419999999982406e-06, 3.069000000001376e-06, 3.0559999999978105e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.0689999999979067e-06, 3.040999999998767e-06, 3.111000000000086e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.097000000000516e-06, 3.05600000000128e-06, 3.069000000001376e-06, 3.0559999999978105e-06, 3.0689999999979067e-06]</msg>
<status status="PASS" starttime="20201030 18:30:47.196" endtime="20201030 18:30:47.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.191" endtime="20201030 18:30:47.201"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:47.207" endtime="20201030 18:30:47.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.204" endtime="20201030 18:30:47.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.203" endtime="20201030 18:30:47.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.844" endtime="20201030 18:30:47.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.844" endtime="20201030 18:30:47.229"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.246" endtime="20201030 18:30:47.258"></status>
</kw>
<msg timestamp="20201030 18:30:47.259" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:47.244" endtime="20201030 18:30:47.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.261" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:47.260" endtime="20201030 18:30:47.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.263" endtime="20201030 18:30:47.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.241" endtime="20201030 18:30:47.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.236" endtime="20201030 18:30:47.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.273" endtime="20201030 18:30:47.568"></status>
</kw>
<msg timestamp="20201030 18:30:47.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028891417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028894472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:47.271" endtime="20201030 18:30:47.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028891417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028894472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:47.572" endtime="20201030 18:30:47.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.581" endtime="20201030 18:30:47.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.269" endtime="20201030 18:30:47.583"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.267" endtime="20201030 18:30:47.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:47.587" level="INFO">${RESULT} = [{'diff': 3.0550000000018063e-06}, {'diff': 3.083000000000946e-06}, {'diff': 3.069000000001376e-06}, {'diff': 3.054999999998337e-06}, {'diff': 3.1119999999995596e-06}, {'diff': 3.083000000000946e-06},...</msg>
<status status="PASS" starttime="20201030 18:30:47.584" endtime="20201030 18:30:47.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:47.592" level="INFO">${OVERHEAD} = {'diff': [3.0550000000018063e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3.054999999998337e-06, 3.1119999999995596e-06, 3.083000000000946e-06, 3.0550000000018063e-06, 3.083000000000946e-06, 2.9...</msg>
<status status="PASS" starttime="20201030 18:30:47.588" endtime="20201030 18:30:47.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.596" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:47.595" endtime="20201030 18:30:47.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.598" level="INFO">VALUE: [3.0550000000018063e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3.054999999998337e-06, 3.1119999999995596e-06, 3.083000000000946e-06, 3.0550000000018063e-06, 3.083000000000946e-06, 2.999999999999531e-06, 3.0689999999979067e-06, 3.07000000000085e-06, 3.05600000000128e-06, 3.054999999998337e-06, 3.0419999999982406e-06, 3.083000000000946e-06, 3.05600000000128e-06, 3.0559999999978105e-06, 3.097000000000516e-06, 3.054999999998337e-06, 3.07000000000085e-06, 3.083000000000946e-06, 3.0550000000018063e-06, 3.07000000000085e-06, 3.069000000001376e-06, 3.054999999998337e-06, 3.05600000000128e-06, 3.083000000000946e-06, 3.054999999998337e-06, 3.0419999999982406e-06, 3.0559999999978105e-06, 3.0689999999979067e-06, 3.069000000001376e-06, 3.04200000000171e-06, 3.0550000000018063e-06, 3.0699999999973804e-06, 3.01400000000257e-06, 3.0829999999974766e-06, 3.069000000001376e-06, 3.124999999999656e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3.0419999999982406e-06, 2.999999999999531e-06, 3.0689999999979067e-06, 3.01400000000257e-06, 3.05600000000128e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.0689999999979067e-06]</msg>
<status status="PASS" starttime="20201030 18:30:47.597" endtime="20201030 18:30:47.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.593" endtime="20201030 18:30:47.601"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:47.605" endtime="20201030 18:30:47.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.603" endtime="20201030 18:30:47.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.602" endtime="20201030 18:30:47.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.230" endtime="20201030 18:30:47.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.230" endtime="20201030 18:30:47.625"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.634" endtime="20201030 18:30:47.645"></status>
</kw>
<msg timestamp="20201030 18:30:47.645" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:47.632" endtime="20201030 18:30:47.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.648" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:47.646" endtime="20201030 18:30:47.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.649" endtime="20201030 18:30:47.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.629" endtime="20201030 18:30:47.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.627" endtime="20201030 18:30:47.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.658" endtime="20201030 18:30:47.943"></status>
</kw>
<msg timestamp="20201030 18:30:47.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020093944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020097, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:47.657" endtime="20201030 18:30:47.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020093944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020097, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:47.947" endtime="20201030 18:30:47.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:47.956" endtime="20201030 18:30:47.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.654" endtime="20201030 18:30:47.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.652" endtime="20201030 18:30:47.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:47.963" level="INFO">${RESULT} = [{'diff': 3.05600000000128e-06}, {'diff': 3.0550000000018063e-06}, {'diff': 3.111000000000086e-06}, {'diff': 3.040999999998767e-06}, {'diff': 3.0550000000018063e-06}, {'diff': 3.012999999999627e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:30:47.959" endtime="20201030 18:30:47.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:47.968" level="INFO">${OVERHEAD} = {'diff': [3.05600000000128e-06, 3.0550000000018063e-06, 3.111000000000086e-06, 3.040999999998767e-06, 3.0550000000018063e-06, 3.012999999999627e-06, 3.040999999998767e-06, 3.0419999999982406e-06, 3.06...</msg>
<status status="PASS" starttime="20201030 18:30:47.964" endtime="20201030 18:30:47.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.972" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:47.971" endtime="20201030 18:30:47.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:47.975" level="INFO">VALUE: [3.05600000000128e-06, 3.0550000000018063e-06, 3.111000000000086e-06, 3.040999999998767e-06, 3.0550000000018063e-06, 3.012999999999627e-06, 3.040999999998767e-06, 3.0419999999982406e-06, 3.0689999999979067e-06, 3.054999999998337e-06, 3.097000000000516e-06, 3.0559999999978105e-06, 3.0559999999978105e-06, 3.069000000001376e-06, 3.054999999998337e-06, 3.05600000000128e-06, 3.07000000000085e-06, 3.097000000000516e-06, 3.0689999999979067e-06, 3.083000000000946e-06, 3.0559999999978105e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3.083000000000946e-06, 3.05600000000128e-06, 3.07000000000085e-06, 3.0550000000018063e-06, 3.0279999999986706e-06, 3.0550000000018063e-06, 3.0279999999986706e-06, 3.0689999999979067e-06, 3.0419999999982406e-06, 3.0689999999979067e-06, 3.05600000000128e-06, 3.0699999999973804e-06, 3.04200000000171e-06, 3.07000000000085e-06, 2.999999999999531e-06, 3.069000000001376e-06, 3.054999999998337e-06, 3.040999999998767e-06, 3.0550000000018063e-06, 3.083000000000946e-06, 3.054999999998337e-06, 3.083000000000946e-06, 3.0689999999979067e-06, 3.04200000000171e-06, 3.054999999998337e-06, 3.124999999999656e-06, 2.999999999999531e-06]</msg>
<status status="PASS" starttime="20201030 18:30:47.973" endtime="20201030 18:30:47.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.969" endtime="20201030 18:30:47.984"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:47.988" endtime="20201030 18:30:48.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.986" endtime="20201030 18:30:48.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.985" endtime="20201030 18:30:48.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.626" endtime="20201030 18:30:48.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:47.626" endtime="20201030 18:30:48.008"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.017" endtime="20201030 18:30:48.029"></status>
</kw>
<msg timestamp="20201030 18:30:48.030" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:48.015" endtime="20201030 18:30:48.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.032" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:48.031" endtime="20201030 18:30:48.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.033" endtime="20201030 18:30:48.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.012" endtime="20201030 18:30:48.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.011" endtime="20201030 18:30:48.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.043" endtime="20201030 18:30:48.330"></status>
</kw>
<msg timestamp="20201030 18:30:48.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020125861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020128903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:48.041" endtime="20201030 18:30:48.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020125861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020128903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:48.334" endtime="20201030 18:30:48.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.342" endtime="20201030 18:30:48.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.039" endtime="20201030 18:30:48.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.037" endtime="20201030 18:30:48.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:48.350" level="INFO">${RESULT} = [{'diff': 3.04200000000171e-06}, {'diff': 3.0969999999970466e-06}, {'diff': 3.054999999998337e-06}, {'diff': 3.07000000000085e-06}, {'diff': 3.0699999999973804e-06}, {'diff': 3.1389999999992257e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:30:48.347" endtime="20201030 18:30:48.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:48.354" level="INFO">${OVERHEAD} = {'diff': [3.04200000000171e-06, 3.0969999999970466e-06, 3.054999999998337e-06, 3.07000000000085e-06, 3.0699999999973804e-06, 3.1389999999992257e-06, 3.1119999999995596e-06, 3.054999999998337e-06, 3.05...</msg>
<status status="PASS" starttime="20201030 18:30:48.351" endtime="20201030 18:30:48.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.358" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:48.357" endtime="20201030 18:30:48.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.361" level="INFO">VALUE: [3.04200000000171e-06, 3.0969999999970466e-06, 3.054999999998337e-06, 3.07000000000085e-06, 3.0699999999973804e-06, 3.1389999999992257e-06, 3.1119999999995596e-06, 3.054999999998337e-06, 3.0559999999978105e-06, 3.0689999999979067e-06, 2.999999999999531e-06, 3.069000000001376e-06, 3.0550000000018063e-06, 3.054999999998337e-06, 3.0559999999978105e-06, 3.0550000000018063e-06, 3.083000000000946e-06, 3.0279999999986706e-06, 3.0689999999979067e-06, 3.124999999999656e-06, 3.083000000000946e-06, 3.054999999998337e-06, 3.0689999999979067e-06, 3.02800000000214e-06, 3.04200000000171e-06, 3.07000000000085e-06, 3.07000000000085e-06, 3.07000000000085e-06, 3.069000000001376e-06, 3.0139999999991007e-06, 3.0559999999978105e-06, 3.07000000000085e-06, 3.05600000000128e-06, 3.097000000000516e-06, 3.0689999999979067e-06, 3.0559999999978105e-06, 3.111000000000086e-06, 3.0699999999973804e-06, 3.0689999999979067e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.069000000001376e-06, 3.0419999999982406e-06, 3.0689999999979067e-06, 3.0559999999978105e-06, 3.054999999998337e-06, 3.05600000000128e-06, 3.05600000000128e-06]</msg>
<status status="PASS" starttime="20201030 18:30:48.360" endtime="20201030 18:30:48.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.355" endtime="20201030 18:30:48.362"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:48.366" endtime="20201030 18:30:48.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.365" endtime="20201030 18:30:48.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.363" endtime="20201030 18:30:48.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.009" endtime="20201030 18:30:48.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.009" endtime="20201030 18:30:48.387"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.395" endtime="20201030 18:30:48.407"></status>
</kw>
<msg timestamp="20201030 18:30:48.407" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:48.393" endtime="20201030 18:30:48.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.410" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:48.408" endtime="20201030 18:30:48.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.411" endtime="20201030 18:30:48.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.391" endtime="20201030 18:30:48.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.389" endtime="20201030 18:30:48.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.421" endtime="20201030 18:30:48.707"></status>
</kw>
<msg timestamp="20201030 18:30:48.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019964111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019967236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:48.419" endtime="20201030 18:30:48.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019964111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019967236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:48.711" endtime="20201030 18:30:48.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.720" endtime="20201030 18:30:48.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.417" endtime="20201030 18:30:48.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.415" endtime="20201030 18:30:48.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:48.727" level="INFO">${RESULT} = [{'diff': 3.124999999999656e-06}, {'diff': 3.069000000001376e-06}, {'diff': 3.083000000000946e-06}, {'diff': 3.026999999999197e-06}, {'diff': 3.054999999998337e-06}, {'diff': 3.0419999999982406e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:30:48.724" endtime="20201030 18:30:48.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:48.731" level="INFO">${OVERHEAD} = {'diff': [3.124999999999656e-06, 3.069000000001376e-06, 3.083000000000946e-06, 3.026999999999197e-06, 3.054999999998337e-06, 3.0419999999982406e-06, 3.124999999999656e-06, 3.0689999999979067e-06, 3.05...</msg>
<status status="PASS" starttime="20201030 18:30:48.728" endtime="20201030 18:30:48.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.735" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:48.734" endtime="20201030 18:30:48.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.738" level="INFO">VALUE: [3.124999999999656e-06, 3.069000000001376e-06, 3.083000000000946e-06, 3.026999999999197e-06, 3.054999999998337e-06, 3.0419999999982406e-06, 3.124999999999656e-06, 3.0689999999979067e-06, 3.05600000000128e-06, 3.07000000000085e-06, 3.0969999999970466e-06, 3.0550000000018063e-06, 3.0969999999970466e-06, 3.0550000000018063e-06, 3.111000000000086e-06, 3.0979999999999897e-06, 3.0689999999979067e-06, 3.0689999999979067e-06, 3.097000000000516e-06, 3.0699999999973804e-06, 3.05600000000128e-06, 3.0139999999991007e-06, 3.0689999999979067e-06, 3.04200000000171e-06, 3.0559999999978105e-06, 3.07000000000085e-06, 3.0410000000022364e-06, 3.097000000000516e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.040999999998767e-06, 3.069000000001376e-06, 3.026999999999197e-06, 3.0689999999979067e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.07000000000085e-06, 3.05600000000128e-06, 3.0689999999979067e-06, 3.07000000000085e-06, 3.0699999999973804e-06, 3.040999999998767e-06, 3.069000000001376e-06, 3.040999999998767e-06, 3.083000000000946e-06, 3.0139999999991007e-06, 3.0689999999979067e-06, 3.083000000000946e-06]</msg>
<status status="PASS" starttime="20201030 18:30:48.737" endtime="20201030 18:30:48.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.732" endtime="20201030 18:30:48.742"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:48.746" endtime="20201030 18:30:48.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.744" endtime="20201030 18:30:48.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.743" endtime="20201030 18:30:48.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.388" endtime="20201030 18:30:48.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.387" endtime="20201030 18:30:48.767"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.775" endtime="20201030 18:30:48.787"></status>
</kw>
<msg timestamp="20201030 18:30:48.788" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:48.773" endtime="20201030 18:30:48.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:48.790" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:48.789" endtime="20201030 18:30:48.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.791" endtime="20201030 18:30:48.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.771" endtime="20201030 18:30:48.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.769" endtime="20201030 18:30:48.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:48.801" endtime="20201030 18:30:49.086"></status>
</kw>
<msg timestamp="20201030 18:30:49.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019898028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019901181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:48.799" endtime="20201030 18:30:49.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019898028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019901181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:49.091" endtime="20201030 18:30:49.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.099" endtime="20201030 18:30:49.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.796" endtime="20201030 18:30:49.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.795" endtime="20201030 18:30:49.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:49.106" level="INFO">${RESULT} = [{'diff': 3.1529999999987957e-06}, {'diff': 3.05600000000128e-06}, {'diff': 3.05600000000128e-06}, {'diff': 3.05600000000128e-06}, {'diff': 3.0689999999979067e-06}, {'diff': 3.137999999999752e-06}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:49.103" endtime="20201030 18:30:49.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:49.111" level="INFO">${OVERHEAD} = {'diff': [3.1529999999987957e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.0689999999979067e-06, 3.137999999999752e-06, 3.07000000000085e-06, 3.0000000000030003e-06, 3.06900...</msg>
<status status="PASS" starttime="20201030 18:30:49.107" endtime="20201030 18:30:49.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.116" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:30:49.115" endtime="20201030 18:30:49.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.118" level="INFO">VALUE: [3.1529999999987957e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.0689999999979067e-06, 3.137999999999752e-06, 3.07000000000085e-06, 3.0000000000030003e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.07000000000085e-06, 3.05600000000128e-06, 3.083000000000946e-06, 3.0410000000022364e-06, 3.040999999998767e-06, 3.0419999999982406e-06, 3.0279999999986706e-06, 3.05600000000128e-06, 3.083000000000946e-06, 3.054999999998337e-06, 3.069000000001376e-06, 3.026999999999197e-06, 3.069000000001376e-06, 3.0699999999973804e-06, 3.097000000000516e-06, 3.026999999999197e-06, 3.05600000000128e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.0969999999970466e-06, 3.069000000001376e-06, 3.0689999999979067e-06, 3.083000000000946e-06, 3.0419999999982406e-06, 3.0839999999969503e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.0829999999974766e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.097000000000516e-06, 3.05600000000128e-06, 3.07000000000085e-06, 3.05600000000128e-06, 3.0139999999991007e-06, 2.999999999999531e-06, 3.0689999999979067e-06, 3.07000000000085e-06, 3.0699999999973804e-06]</msg>
<status status="PASS" starttime="20201030 18:30:49.117" endtime="20201030 18:30:49.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.112" endtime="20201030 18:30:49.120"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:49.124" endtime="20201030 18:30:49.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.122" endtime="20201030 18:30:49.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.121" endtime="20201030 18:30:49.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.768" endtime="20201030 18:30:49.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:48.767" endtime="20201030 18:30:49.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:41.463" endtime="20201030 18:30:49.144"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:49.148" endtime="20201030 18:30:49.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.147" endtime="20201030 18:30:49.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.146" endtime="20201030 18:30:49.169"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:41.392" endtime="20201030 18:30:49.169" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:49.176" endtime="20201030 18:30:49.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.175" endtime="20201030 18:30:49.196"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.209" endtime="20201030 18:30:49.224"></status>
</kw>
<msg timestamp="20201030 18:30:49.225" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:49.208" endtime="20201030 18:30:49.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.227" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:49.226" endtime="20201030 18:30:49.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.231" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:49.229" endtime="20201030 18:30:49.231"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:49.205" endtime="20201030 18:30:49.232"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:49.203" endtime="20201030 18:30:49.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.201" endtime="20201030 18:30:49.233"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:49.237" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:49.236" endtime="20201030 18:30:49.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.234" endtime="20201030 18:30:49.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.201" endtime="20201030 18:30:49.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.200" endtime="20201030 18:30:49.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.238" endtime="20201030 18:30:49.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.199" endtime="20201030 18:30:49.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.197" endtime="20201030 18:30:49.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.173" endtime="20201030 18:30:49.241"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.250" endtime="20201030 18:30:49.270"></status>
</kw>
<msg timestamp="20201030 18:30:49.271" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:49.249" endtime="20201030 18:30:49.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.274" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:49.272" endtime="20201030 18:30:49.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.275" endtime="20201030 18:30:49.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.246" endtime="20201030 18:30:49.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.244" endtime="20201030 18:30:49.277"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.280" endtime="20201030 18:30:49.281"></status>
</kw>
<msg timestamp="20201030 18:30:49.282" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:30:49.278" endtime="20201030 18:30:49.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.286" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:30:49.285" endtime="20201030 18:30:49.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.288" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:30:49.287" endtime="20201030 18:30:49.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.283" endtime="20201030 18:30:49.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.293" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:30:49.292" endtime="20201030 18:30:49.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.295" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:30:49.294" endtime="20201030 18:30:49.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.290" endtime="20201030 18:30:49.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.303" endtime="20201030 18:30:49.589"></status>
</kw>
<msg timestamp="20201030 18:30:49.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066663847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066672931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:49.301" endtime="20201030 18:30:49.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066663847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066672931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:49.593" endtime="20201030 18:30:49.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.602" endtime="20201030 18:30:49.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.298" endtime="20201030 18:30:49.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.297" endtime="20201030 18:30:49.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:49.608" level="INFO">${RESULT} = [{'diff': 9.08400000000642e-06}, {'diff': 1.0916999999999177e-05}, {'diff': 1.0916999999999177e-05}, {'diff': 1.0915999999999704e-05}, {'diff': 1.0959000000004826e-05}, {'diff': 1.0916999999999177e-05...</msg>
<status status="PASS" starttime="20201030 18:30:49.605" endtime="20201030 18:30:49.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:49.613" level="INFO">${OVERHEAD} = {'diff': [9.08400000000642e-06, 1.0916999999999177e-05, 1.0916999999999177e-05, 1.0915999999999704e-05, 1.0959000000004826e-05, 1.0916999999999177e-05, 1.0945000000012195e-05, 1.0916999999999177e-05, ...</msg>
<status status="PASS" starttime="20201030 18:30:49.609" endtime="20201030 18:30:49.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.617" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 18:30:49.616" endtime="20201030 18:30:49.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.620" level="INFO">VALUE: [9.08400000000642e-06, 1.0916999999999177e-05, 1.0916999999999177e-05, 1.0915999999999704e-05, 1.0959000000004826e-05, 1.0916999999999177e-05, 1.0945000000012195e-05, 1.0916999999999177e-05, 1.0916999999999177e-05, 1.0889000000000038e-05, 1.0916999999999177e-05, 1.0889000000000038e-05, 1.0943999999998844e-05, 1.0930999999991808e-05, 1.0916999999999177e-05, 1.0861000000000898e-05, 1.0931000000005686e-05, 1.0917000000013055e-05, 1.0916999999999177e-05, 1.0916999999999177e-05, 1.0986000000004492e-05, 1.0943999999998844e-05, 1.0901999999993195e-05, 1.0929999999992335e-05, 1.0903000000006546e-05, 1.0931000000005686e-05, 1.0916999999999177e-05, 1.0943999999998844e-05, 1.0875000000007407e-05, 1.0931000000005686e-05, 1.0931000000005686e-05, 1.0943999999998844e-05, 1.0888000000000564e-05, 1.0916999999999177e-05, 1.0916999999999177e-05, 1.0916999999999177e-05, 1.0903000000006546e-05, 1.0916999999999177e-05, 1.0931000000005686e-05, 1.0889000000000038e-05, 1.0902999999992669e-05, 1.0889000000000038e-05, 1.0915999999999704e-05, 1.0931000000005686e-05, 1.0915999999999704e-05, 1.0915999999999704e-05, 1.0916999999999177e-05, 1.0916999999999177e-05, 1.0931000000005686e-05, 1.0916999999999177e-05]</msg>
<status status="PASS" starttime="20201030 18:30:49.619" endtime="20201030 18:30:49.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.614" endtime="20201030 18:30:49.621"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:49.625" endtime="20201030 18:30:49.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.624" endtime="20201030 18:30:49.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.623" endtime="20201030 18:30:49.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.242" endtime="20201030 18:30:49.646"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:49.171" endtime="20201030 18:30:49.647" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:49.654" endtime="20201030 18:30:49.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.652" endtime="20201030 18:30:49.674"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.688" endtime="20201030 18:30:49.703"></status>
</kw>
<msg timestamp="20201030 18:30:49.703" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:49.687" endtime="20201030 18:30:49.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.706" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:49.704" endtime="20201030 18:30:49.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.709" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:49.707" endtime="20201030 18:30:49.709"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:49.684" endtime="20201030 18:30:49.710"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:49.681" endtime="20201030 18:30:49.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.680" endtime="20201030 18:30:49.711"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:49.715" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:49.714" endtime="20201030 18:30:49.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.712" endtime="20201030 18:30:49.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.679" endtime="20201030 18:30:49.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.679" endtime="20201030 18:30:49.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.717" endtime="20201030 18:30:49.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.676" endtime="20201030 18:30:49.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.675" endtime="20201030 18:30:49.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.651" endtime="20201030 18:30:49.719"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.729" endtime="20201030 18:30:49.800"></status>
</kw>
<msg timestamp="20201030 18:30:49.800" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:49.727" endtime="20201030 18:30:49.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.803" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:49.802" endtime="20201030 18:30:49.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.804" endtime="20201030 18:30:49.806"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.724" endtime="20201030 18:30:49.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.722" endtime="20201030 18:30:49.807"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.809" endtime="20201030 18:30:49.811"></status>
</kw>
<msg timestamp="20201030 18:30:49.811" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:30:49.808" endtime="20201030 18:30:49.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.817" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:30:49.815" endtime="20201030 18:30:49.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.819" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:30:49.818" endtime="20201030 18:30:49.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.812" endtime="20201030 18:30:49.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.824" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:30:49.823" endtime="20201030 18:30:49.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:49.826" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:30:49.825" endtime="20201030 18:30:49.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.820" endtime="20201030 18:30:49.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:49.834" endtime="20201030 18:30:50.127"></status>
</kw>
<msg timestamp="20201030 18:30:50.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0679175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067938972, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:30:49.832" endtime="20201030 18:30:50.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0679175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067938972, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:30:50.132" endtime="20201030 18:30:50.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.140" endtime="20201030 18:30:50.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.829" endtime="20201030 18:30:50.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.827" endtime="20201030 18:30:50.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:50.147" level="INFO">${RESULT} = [{'diff': 2.1471999999994607e-05}, {'diff': 3.366600000000164e-05}, {'diff': 3.363900000000197e-05}, {'diff': 3.3680999999993744e-05}, {'diff': 3.3680999999993744e-05}, {'diff': 3.369400000000078e-05}...</msg>
<status status="PASS" starttime="20201030 18:30:50.144" endtime="20201030 18:30:50.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:50.151" level="INFO">${OVERHEAD} = {'diff': [2.1471999999994607e-05, 3.366600000000164e-05, 3.363900000000197e-05, 3.3680999999993744e-05, 3.3680999999993744e-05, 3.369400000000078e-05, 3.368100000000762e-05, 3.362500000000934e-05, 3.3...</msg>
<status status="PASS" starttime="20201030 18:30:50.148" endtime="20201030 18:30:50.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.157" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 18:30:50.156" endtime="20201030 18:30:50.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.160" level="INFO">VALUE: [2.1471999999994607e-05, 3.366600000000164e-05, 3.363900000000197e-05, 3.3680999999993744e-05, 3.3680999999993744e-05, 3.369400000000078e-05, 3.368100000000762e-05, 3.362500000000934e-05, 3.367999999999427e-05, 3.3652999999994604e-05, 3.3666999999987235e-05, 3.369400000000078e-05, 3.369400000000078e-05, 3.369500000000025e-05, 3.369400000000078e-05, 3.369500000000025e-05, 3.369400000000078e-05, 3.369400000000078e-05, 3.366700000000111e-05, 3.370799999999341e-05, 3.369400000000078e-05, 3.368100000000762e-05, 3.370900000000676e-05, 3.373600000000643e-05, 3.370900000000676e-05, 3.367999999999427e-05, 3.369500000000025e-05, 3.3708999999992884e-05, 3.365300000000848e-05, 3.369500000000025e-05, 3.369400000000078e-05, 3.369500000000025e-05, 3.3680999999993744e-05, 3.367999999999427e-05, 3.369400000000078e-05, 3.370799999999341e-05, 3.369400000000078e-05, 3.368100000000762e-05, 3.369400000000078e-05, 3.368100000000762e-05, 3.369400000000078e-05, 3.369500000000025e-05, 3.367999999999427e-05, 3.37370000000059e-05, 3.369500000000025e-05, 3.370900000000676e-05, 3.3680999999993744e-05, 3.365199999999513e-05, 3.367999999999427e-05, 3.3750000000012936e-05]</msg>
<status status="PASS" starttime="20201030 18:30:50.159" endtime="20201030 18:30:50.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.152" endtime="20201030 18:30:50.161"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:50.165" endtime="20201030 18:30:50.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.163" endtime="20201030 18:30:50.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.162" endtime="20201030 18:30:50.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:49.720" endtime="20201030 18:30:50.185"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:49.648" endtime="20201030 18:30:50.186" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:50.193" endtime="20201030 18:30:50.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.192" endtime="20201030 18:30:50.213"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.227" endtime="20201030 18:30:50.241"></status>
</kw>
<msg timestamp="20201030 18:30:50.242" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:50.225" endtime="20201030 18:30:50.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.245" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:50.243" endtime="20201030 18:30:50.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.248" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:50.246" endtime="20201030 18:30:50.248"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:50.222" endtime="20201030 18:30:50.249"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:50.220" endtime="20201030 18:30:50.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.219" endtime="20201030 18:30:50.249"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:50.253" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:50.253" endtime="20201030 18:30:50.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.250" endtime="20201030 18:30:50.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.218" endtime="20201030 18:30:50.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.217" endtime="20201030 18:30:50.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.255" endtime="20201030 18:30:50.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.216" endtime="20201030 18:30:50.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.214" endtime="20201030 18:30:50.258"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.190" endtime="20201030 18:30:50.258"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.268" endtime="20201030 18:30:50.463"></status>
</kw>
<msg timestamp="20201030 18:30:50.464" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:50.267" endtime="20201030 18:30:50.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.469" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:50.466" endtime="20201030 18:30:50.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.472" endtime="20201030 18:30:50.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.263" endtime="20201030 18:30:50.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.261" endtime="20201030 18:30:50.477"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.482" endtime="20201030 18:30:50.486"></status>
</kw>
<msg timestamp="20201030 18:30:50.487" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:30:50.479" endtime="20201030 18:30:50.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.495" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:30:50.493" endtime="20201030 18:30:50.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.497" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:30:50.496" endtime="20201030 18:30:50.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.488" endtime="20201030 18:30:50.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.502" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:30:50.501" endtime="20201030 18:30:50.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.504" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:30:50.503" endtime="20201030 18:30:50.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.498" endtime="20201030 18:30:50.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.511" endtime="20201030 18:30:50.806"></status>
</kw>
<msg timestamp="20201030 18:30:50.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069295403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0693325, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:30:50.510" endtime="20201030 18:30:50.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069295403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0693325, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:30:50.810" endtime="20201030 18:30:50.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.818" endtime="20201030 18:30:50.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.507" endtime="20201030 18:30:50.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.505" endtime="20201030 18:30:50.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:50.824" level="INFO">${RESULT} = [{'diff': 3.7096999999999825e-05}, {'diff': 6.030600000000996e-05}, {'diff': 6.030499999999661e-05}, {'diff': 6.030499999999661e-05}, {'diff': 6.030500000001049e-05}, {'diff': 6.0263999999990436e-05},...</msg>
<status status="PASS" starttime="20201030 18:30:50.821" endtime="20201030 18:30:50.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:50.830" level="INFO">${OVERHEAD} = {'diff': [3.7096999999999825e-05, 6.030600000000996e-05, 6.030499999999661e-05, 6.030499999999661e-05, 6.030500000001049e-05, 6.0263999999990436e-05, 6.031900000000312e-05, 6.031900000000312e-05, 6.02...</msg>
<status status="PASS" starttime="20201030 18:30:50.826" endtime="20201030 18:30:50.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.835" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 18:30:50.834" endtime="20201030 18:30:50.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.837" level="INFO">VALUE: [3.7096999999999825e-05, 6.030600000000996e-05, 6.030499999999661e-05, 6.030499999999661e-05, 6.030500000001049e-05, 6.0263999999990436e-05, 6.031900000000312e-05, 6.031900000000312e-05, 6.0277999999996945e-05, 6.0305999999996085e-05, 6.0305999999996085e-05, 6.031900000000312e-05, 6.031900000000312e-05, 6.031900000000312e-05, 6.0305999999996085e-05, 6.0305999999996085e-05, 6.031900000000312e-05, 6.030599999998221e-05, 6.033299999999575e-05, 6.034699999998838e-05, 6.030500000001049e-05, 6.03750000000014e-05, 6.031900000000312e-05, 6.031900000000312e-05, 6.031900000000312e-05, 6.033300000002351e-05, 6.0291999999989576e-05, 6.031900000000312e-05, 6.0264000000004314e-05, 6.0320000000002594e-05, 6.031900000000312e-05, 6.033299999999575e-05, 6.0320000000002594e-05, 6.030599999998221e-05, 6.0320000000002594e-05, 6.0264000000004314e-05, 6.0320000000002594e-05, 6.030500000001049e-05, 6.030500000001049e-05, 6.0333999999995225e-05, 6.0277999999996945e-05, 6.0320000000002594e-05, 6.0320000000002594e-05, 6.033299999999575e-05, 6.0291999999989576e-05, 6.033299999999575e-05, 6.024999999998393e-05, 6.02909999999901e-05, 6.031900000000312e-05, 6.029200000001733e-05]</msg>
<status status="PASS" starttime="20201030 18:30:50.836" endtime="20201030 18:30:50.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.831" endtime="20201030 18:30:50.838"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:50.842" endtime="20201030 18:30:50.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.841" endtime="20201030 18:30:50.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.839" endtime="20201030 18:30:50.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.259" endtime="20201030 18:30:50.863"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:50.187" endtime="20201030 18:30:50.863" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:50.870" endtime="20201030 18:30:50.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.869" endtime="20201030 18:30:50.890"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.904" endtime="20201030 18:30:50.918"></status>
</kw>
<msg timestamp="20201030 18:30:50.919" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:50.902" endtime="20201030 18:30:50.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.921" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:50.920" endtime="20201030 18:30:50.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.925" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:50.923" endtime="20201030 18:30:50.925"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:50.900" endtime="20201030 18:30:50.926"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:50.897" endtime="20201030 18:30:50.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.896" endtime="20201030 18:30:50.927"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:50.930" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:50.930" endtime="20201030 18:30:50.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.927" endtime="20201030 18:30:50.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.895" endtime="20201030 18:30:50.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.894" endtime="20201030 18:30:50.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.932" endtime="20201030 18:30:50.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.893" endtime="20201030 18:30:50.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.891" endtime="20201030 18:30:50.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.868" endtime="20201030 18:30:50.935"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.944" endtime="20201030 18:30:50.965"></status>
</kw>
<msg timestamp="20201030 18:30:50.966" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:50.943" endtime="20201030 18:30:50.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.968" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:50.967" endtime="20201030 18:30:50.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.970" endtime="20201030 18:30:50.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.940" endtime="20201030 18:30:50.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.938" endtime="20201030 18:30:50.972"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.975" endtime="20201030 18:30:50.976"></status>
</kw>
<msg timestamp="20201030 18:30:50.977" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:30:50.973" endtime="20201030 18:30:50.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.981" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:30:50.980" endtime="20201030 18:30:50.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.983" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:30:50.982" endtime="20201030 18:30:50.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.977" endtime="20201030 18:30:50.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.988" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:30:50.987" endtime="20201030 18:30:50.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:50.990" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:30:50.989" endtime="20201030 18:30:50.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.984" endtime="20201030 18:30:50.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:50.998" endtime="20201030 18:30:51.288"></status>
</kw>
<msg timestamp="20201030 18:30:51.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066829306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066839181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:50.996" endtime="20201030 18:30:51.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066829306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066839181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:51.292" endtime="20201030 18:30:51.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.302" endtime="20201030 18:30:51.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.993" endtime="20201030 18:30:51.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.991" endtime="20201030 18:30:51.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:51.313" level="INFO">${RESULT} = [{'diff': 9.874999999992529e-06}, {'diff': 9.888999999999037e-06}, {'diff': 9.861999999999371e-06}, {'diff': 9.819000000008127e-06}, {'diff': 9.846999999993389e-06}, {'diff': 9.833000000000758e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:30:51.307" endtime="20201030 18:30:51.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:51.319" level="INFO">${OVERHEAD} = {'diff': [9.874999999992529e-06, 9.888999999999037e-06, 9.861999999999371e-06, 9.819000000008127e-06, 9.846999999993389e-06, 9.833000000000758e-06, 9.860999999999898e-06, 9.860999999999898e-06, 9.8469...</msg>
<status status="PASS" starttime="20201030 18:30:51.315" endtime="20201030 18:30:51.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.326" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 18:30:51.324" endtime="20201030 18:30:51.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.330" level="INFO">VALUE: [9.874999999992529e-06, 9.888999999999037e-06, 9.861999999999371e-06, 9.819000000008127e-06, 9.846999999993389e-06, 9.833000000000758e-06, 9.860999999999898e-06, 9.860999999999898e-06, 9.846999999993389e-06, 9.860999999999898e-06, 9.84800000000674e-06, 9.818999999994249e-06, 9.791999999994583e-06, 9.833000000000758e-06, 9.846999999993389e-06, 9.915999999998704e-06, 9.903000000005546e-06, 9.875000000006406e-06, 9.8200000000076e-06, 9.833000000000758e-06, 9.860999999999898e-06, 9.915999999998704e-06, 9.860999999999898e-06, 9.847000000007267e-06, 9.847000000007267e-06, 9.860999999999898e-06, 9.903000000005546e-06, 9.84800000000674e-06, 9.847000000007267e-06, 9.901999999992195e-06, 9.79200000000846e-06, 9.875000000006406e-06, 9.860999999999898e-06, 9.846999999993389e-06, 9.915999999998704e-06, 9.860999999999898e-06, 9.834000000000231e-06, 9.805000000001618e-06, 9.846999999993389e-06, 9.860999999999898e-06, 9.819000000008127e-06, 9.79099999999511e-06, 9.874999999992529e-06, 9.860999999999898e-06, 9.846999999993389e-06, 9.833000000000758e-06, 9.860999999999898e-06, 9.860999999999898e-06, 9.860999999999898e-06, 9.875000000006406e-06]</msg>
<status status="PASS" starttime="20201030 18:30:51.327" endtime="20201030 18:30:51.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.321" endtime="20201030 18:30:51.332"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:51.336" endtime="20201030 18:30:51.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.334" endtime="20201030 18:30:51.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.333" endtime="20201030 18:30:51.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:50.936" endtime="20201030 18:30:51.356"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:50.865" endtime="20201030 18:30:51.357" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:51.364" endtime="20201030 18:30:51.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.362" endtime="20201030 18:30:51.384"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.398" endtime="20201030 18:30:51.412"></status>
</kw>
<msg timestamp="20201030 18:30:51.412" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:51.396" endtime="20201030 18:30:51.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.415" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:51.413" endtime="20201030 18:30:51.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.418" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:51.416" endtime="20201030 18:30:51.418"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:51.393" endtime="20201030 18:30:51.419"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:51.391" endtime="20201030 18:30:51.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.390" endtime="20201030 18:30:51.419"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:51.423" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:51.423" endtime="20201030 18:30:51.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.420" endtime="20201030 18:30:51.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.389" endtime="20201030 18:30:51.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.388" endtime="20201030 18:30:51.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.425" endtime="20201030 18:30:51.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.386" endtime="20201030 18:30:51.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.384" endtime="20201030 18:30:51.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.361" endtime="20201030 18:30:51.428"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.437" endtime="20201030 18:30:51.509"></status>
</kw>
<msg timestamp="20201030 18:30:51.510" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:51.435" endtime="20201030 18:30:51.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.512" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:51.511" endtime="20201030 18:30:51.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.513" endtime="20201030 18:30:51.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.433" endtime="20201030 18:30:51.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.430" endtime="20201030 18:30:51.516"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.518" endtime="20201030 18:30:51.520"></status>
</kw>
<msg timestamp="20201030 18:30:51.520" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:30:51.517" endtime="20201030 18:30:51.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.528" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:30:51.523" endtime="20201030 18:30:51.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.530" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:30:51.529" endtime="20201030 18:30:51.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.521" endtime="20201030 18:30:51.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.535" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:30:51.534" endtime="20201030 18:30:51.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.537" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:30:51.536" endtime="20201030 18:30:51.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.532" endtime="20201030 18:30:51.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.544" endtime="20201030 18:30:51.835"></status>
</kw>
<msg timestamp="20201030 18:30:51.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066654486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066675319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:51.543" endtime="20201030 18:30:51.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066654486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066675319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:51.839" endtime="20201030 18:30:51.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.847" endtime="20201030 18:30:51.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.540" endtime="20201030 18:30:51.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.538" endtime="20201030 18:30:51.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:51.854" level="INFO">${RESULT} = [{'diff': 2.083299999999788e-05}, {'diff': 2.087500000000353e-05}, {'diff': 2.090300000000267e-05}, {'diff': 2.087500000000353e-05}, {'diff': 2.088899999999616e-05}, {'diff': 2.088900000001004e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:51.850" endtime="20201030 18:30:51.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:51.858" level="INFO">${OVERHEAD} = {'diff': [2.083299999999788e-05, 2.087500000000353e-05, 2.090300000000267e-05, 2.087500000000353e-05, 2.088899999999616e-05, 2.088900000001004e-05, 2.090300000000267e-05, 2.088899999999616e-05, 2.0860...</msg>
<status status="PASS" starttime="20201030 18:30:51.855" endtime="20201030 18:30:51.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.864" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 18:30:51.862" endtime="20201030 18:30:51.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.866" level="INFO">VALUE: [2.083299999999788e-05, 2.087500000000353e-05, 2.090300000000267e-05, 2.087500000000353e-05, 2.088899999999616e-05, 2.088900000001004e-05, 2.090300000000267e-05, 2.088899999999616e-05, 2.086099999999702e-05, 2.088899999999616e-05, 2.086099999999702e-05, 2.087500000000353e-05, 2.087500000000353e-05, 2.086099999999702e-05, 2.088899999999616e-05, 2.086099999999702e-05, 2.087500000000353e-05, 2.088899999999616e-05, 2.087500000000353e-05, 2.087500000000353e-05, 2.0861999999996494e-05, 2.08610000000109e-05, 2.0874999999989652e-05, 2.087500000000353e-05, 2.086099999999702e-05, 2.086099999999702e-05, 2.0874999999989652e-05, 2.088900000001004e-05, 2.090300000000267e-05, 2.087500000000353e-05, 2.083299999999788e-05, 2.0834000000011232e-05, 2.0917000000009178e-05, 2.090300000000267e-05, 2.087500000000353e-05, 2.087500000000353e-05, 2.086099999999702e-05, 2.0874999999989652e-05, 2.087500000000353e-05, 2.086099999999702e-05, 2.0874999999989652e-05, 2.086099999999702e-05, 2.087500000000353e-05, 2.0874999999989652e-05, 2.086099999999702e-05, 2.088899999999616e-05, 2.088899999999616e-05, 2.087500000000353e-05, 2.0887999999996687e-05, 2.088900000001004e-05]</msg>
<status status="PASS" starttime="20201030 18:30:51.865" endtime="20201030 18:30:51.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.859" endtime="20201030 18:30:51.867"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:51.870" endtime="20201030 18:30:51.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.869" endtime="20201030 18:30:51.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.868" endtime="20201030 18:30:51.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.429" endtime="20201030 18:30:51.891"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:51.358" endtime="20201030 18:30:51.891" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:51.898" endtime="20201030 18:30:51.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.897" endtime="20201030 18:30:51.921"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:51.962" endtime="20201030 18:30:51.983"></status>
</kw>
<msg timestamp="20201030 18:30:51.984" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:51.958" endtime="20201030 18:30:51.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.989" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:51.986" endtime="20201030 18:30:51.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:51.998" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:51.993" endtime="20201030 18:30:51.998"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:51.949" endtime="20201030 18:30:52.000"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:51.943" endtime="20201030 18:30:52.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.940" endtime="20201030 18:30:52.004"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:52.008" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:52.007" endtime="20201030 18:30:52.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.005" endtime="20201030 18:30:52.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.937" endtime="20201030 18:30:52.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.933" endtime="20201030 18:30:52.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.010" endtime="20201030 18:30:52.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.930" endtime="20201030 18:30:52.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.925" endtime="20201030 18:30:52.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:51.896" endtime="20201030 18:30:52.012"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.022" endtime="20201030 18:30:52.214"></status>
</kw>
<msg timestamp="20201030 18:30:52.214" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:52.020" endtime="20201030 18:30:52.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.217" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:52.215" endtime="20201030 18:30:52.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.218" endtime="20201030 18:30:52.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.017" endtime="20201030 18:30:52.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.015" endtime="20201030 18:30:52.220"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.222" endtime="20201030 18:30:52.224"></status>
</kw>
<msg timestamp="20201030 18:30:52.224" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:30:52.221" endtime="20201030 18:30:52.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.228" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:30:52.227" endtime="20201030 18:30:52.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.230" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:30:52.229" endtime="20201030 18:30:52.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.225" endtime="20201030 18:30:52.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.237" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:30:52.236" endtime="20201030 18:30:52.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.240" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:30:52.239" endtime="20201030 18:30:52.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.233" endtime="20201030 18:30:52.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.250" endtime="20201030 18:30:52.542"></status>
</kw>
<msg timestamp="20201030 18:30:52.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.11881975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.118852028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:52.248" endtime="20201030 18:30:52.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.11881975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.118852028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:52.546" endtime="20201030 18:30:52.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.554" endtime="20201030 18:30:52.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.244" endtime="20201030 18:30:52.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.242" endtime="20201030 18:30:52.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:52.561" level="INFO">${RESULT} = [{'diff': 3.22779999999967e-05}, {'diff': 3.234700000000201e-05}, {'diff': 3.233399999999498e-05}, {'diff': 3.231900000000287e-05}, {'diff': 3.236100000000852e-05}, {'diff': 3.2360999999980766e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:52.558" endtime="20201030 18:30:52.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:30:52.566" level="INFO">${OVERHEAD} = {'diff': [3.22779999999967e-05, 3.234700000000201e-05, 3.233399999999498e-05, 3.231900000000287e-05, 3.236100000000852e-05, 3.2360999999980766e-05, 3.229199999998933e-05, 3.2346999999988135e-05, 3.230...</msg>
<status status="PASS" starttime="20201030 18:30:52.562" endtime="20201030 18:30:52.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.571" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 18:30:52.569" endtime="20201030 18:30:52.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.575" level="INFO">VALUE: [3.22779999999967e-05, 3.234700000000201e-05, 3.233399999999498e-05, 3.231900000000287e-05, 3.236100000000852e-05, 3.2360999999980766e-05, 3.229199999998933e-05, 3.2346999999988135e-05, 3.2306000000009716e-05, 3.2332999999995504e-05, 3.2332999999995504e-05, 3.233300000002326e-05, 3.232000000000235e-05, 3.2332999999995504e-05, 3.2290999999989856e-05, 3.2332999999995504e-05, 3.2332999999995504e-05, 3.230500000001024e-05, 3.229199999998933e-05, 3.234700000001589e-05, 3.2332999999995504e-05, 3.232000000000235e-05, 3.2346999999988135e-05, 3.233300000002326e-05, 3.2332999999995504e-05, 3.234700000001589e-05, 3.2332999999995504e-05, 3.237500000000115e-05, 3.2332999999995504e-05, 3.231900000000287e-05, 3.2332999999995504e-05, 3.2332999999995504e-05, 3.233399999999498e-05, 3.231900000000287e-05, 3.2346999999988135e-05, 3.226399999997631e-05, 3.232000000000235e-05, 3.2346999999988135e-05, 3.231900000000287e-05, 3.233399999996722e-05, 3.2346999999988135e-05, 3.2332999999995504e-05, 3.231900000000287e-05, 3.2332999999995504e-05, 3.2250000000011436e-05, 3.2346999999988135e-05, 3.2333000000051015e-05, 3.2347000000043646e-05, 3.2332999999995504e-05, 3.23200000000301e-05]</msg>
<status status="PASS" starttime="20201030 18:30:52.573" endtime="20201030 18:30:52.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.567" endtime="20201030 18:30:52.577"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:52.582" endtime="20201030 18:30:52.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.580" endtime="20201030 18:30:52.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.578" endtime="20201030 18:30:52.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.013" endtime="20201030 18:30:52.604"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:51.893" endtime="20201030 18:30:52.605" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:52.611" endtime="20201030 18:30:52.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.610" endtime="20201030 18:30:52.631"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.644" endtime="20201030 18:30:52.659"></status>
</kw>
<msg timestamp="20201030 18:30:52.659" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:52.643" endtime="20201030 18:30:52.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.661" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:52.660" endtime="20201030 18:30:52.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.665" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:52.663" endtime="20201030 18:30:52.665"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:52.640" endtime="20201030 18:30:52.665"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:52.638" endtime="20201030 18:30:52.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.637" endtime="20201030 18:30:52.666"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:52.670" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:52.670" endtime="20201030 18:30:52.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.668" endtime="20201030 18:30:52.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.636" endtime="20201030 18:30:52.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.635" endtime="20201030 18:30:52.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.672" endtime="20201030 18:30:52.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.634" endtime="20201030 18:30:52.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.632" endtime="20201030 18:30:52.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.609" endtime="20201030 18:30:52.675"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.678" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:30:52.687" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:30:53.910" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:30:52.677" endtime="20201030 18:30:53.911"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.913" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:30:53.912" endtime="20201030 18:30:53.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.676" endtime="20201030 18:30:53.914"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.924" endtime="20201030 18:30:53.932"></status>
</kw>
<msg timestamp="20201030 18:30:53.932" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:53.922" endtime="20201030 18:30:53.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.935" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:53.933" endtime="20201030 18:30:53.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.936" endtime="20201030 18:30:53.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.919" endtime="20201030 18:30:53.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.917" endtime="20201030 18:30:53.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.945" endtime="20201030 18:30:54.246"></status>
</kw>
<msg timestamp="20201030 18:30:54.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.919465056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.238837444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:53.944" endtime="20201030 18:30:54.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.919465056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.238837444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:54.256" endtime="20201030 18:30:54.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.275" endtime="20201030 18:30:54.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.941" endtime="20201030 18:30:54.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.939" endtime="20201030 18:30:54.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:54.289" level="INFO">${PHILIP_RES} = [{'diff': 0.3193723880000001}, {'diff': 9.555999999966147e-06}, {'diff': 9.625000000124118e-06}, {'diff': 9.583999999840387e-06}, {'diff': 9.555999999966147e-06}, {'diff': 9.597000000027833e-06}, {'di...</msg>
<status status="PASS" starttime="20201030 18:30:54.282" endtime="20201030 18:30:54.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:54.301" level="INFO">${RESULT} = {'diff': [0.3193723880000001, 9.555999999966147e-06, 9.625000000124118e-06, 9.583999999840387e-06, 9.555999999966147e-06, 9.597000000027833e-06, 9.596999999805789e-06, 9.584000000062431e-06, 9.5829999...</msg>
<status status="PASS" starttime="20201030 18:30:54.291" endtime="20201030 18:30:54.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.312" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:54.310" endtime="20201030 18:30:54.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.317" level="INFO">VALUE: [0.3193723880000001, 9.555999999966147e-06, 9.625000000124118e-06, 9.583999999840387e-06, 9.555999999966147e-06, 9.597000000027833e-06, 9.596999999805789e-06, 9.584000000062431e-06, 9.582999999979691e-06, 9.514000000043765e-06, 9.57000000001429e-06, 9.554999999883407e-06, 9.582999999979691e-06, 9.584000000062431e-06, 9.568999999931549e-06, 9.597000000027833e-06, 9.584000000062431e-06, 9.568999999931549e-06, 9.582999999979691e-06, 9.596999999805789e-06, 9.569999999792245e-06, 9.582999999979691e-06, 9.584000000062431e-06, 9.624999999902073e-06, 9.582999999979691e-06, 9.611000000075975e-06, 9.584000000062431e-06, 9.541999999918005e-06, 9.597000000027833e-06, 9.598000000110574e-06, 9.597000000027833e-06, 9.611000000075975e-06, 9.584000000062431e-06, 9.597000000027833e-06, 9.583000000201736e-06, 9.583999999840387e-06, 9.582999999979691e-06, 9.582999999979691e-06, 9.583999999840387e-06, 9.596999999805789e-06, 9.569000000153594e-06, 9.584000000062431e-06, 9.555999999966147e-06, 9.582999999979691e-06, 9.638999999950215e-06, 9.57000000001429e-06, 9.582999999979691e-06, 9.568999999931549e-06, 9.584000000062431e-06, 9.582999999979691e-06, 9.638999999950215e-06]</msg>
<status status="PASS" starttime="20201030 18:30:54.314" endtime="20201030 18:30:54.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.304" endtime="20201030 18:30:54.319"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:54.327" endtime="20201030 18:30:54.347"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.324" endtime="20201030 18:30:54.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.321" endtime="20201030 18:30:54.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.916" endtime="20201030 18:30:54.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.915" endtime="20201030 18:30:54.349"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.357" endtime="20201030 18:30:54.367"></status>
</kw>
<msg timestamp="20201030 18:30:54.367" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:54.355" endtime="20201030 18:30:54.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.370" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:54.368" endtime="20201030 18:30:54.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.371" endtime="20201030 18:30:54.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.353" endtime="20201030 18:30:54.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.351" endtime="20201030 18:30:54.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.381" endtime="20201030 18:30:54.670"></status>
</kw>
<msg timestamp="20201030 18:30:54.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019112972, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:54.378" endtime="20201030 18:30:54.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019112972, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:54.675" endtime="20201030 18:30:54.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.685" endtime="20201030 18:30:54.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.376" endtime="20201030 18:30:54.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.374" endtime="20201030 18:30:54.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:54.695" level="INFO">${PHILIP_RES} = [{'diff': 1.5971999999999514e-05}, {'diff': 1.5972000000002984e-05}, {'diff': 1.5957999999999944e-05}, {'diff': 1.5985999999999084e-05}, {'diff': 1.6000000000002124e-05}, {'diff': 1.5986999999998558e-...</msg>
<status status="PASS" starttime="20201030 18:30:54.691" endtime="20201030 18:30:54.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:54.701" level="INFO">${RESULT} = {'diff': [1.5971999999999514e-05, 1.5972000000002984e-05, 1.5957999999999944e-05, 1.5985999999999084e-05, 1.6000000000002124e-05, 1.5986999999998558e-05, 1.5985999999999084e-05, 1.5986000000002554e-05...</msg>
<status status="PASS" starttime="20201030 18:30:54.697" endtime="20201030 18:30:54.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.707" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:54.706" endtime="20201030 18:30:54.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.711" level="INFO">VALUE: [1.5971999999999514e-05, 1.5972000000002984e-05, 1.5957999999999944e-05, 1.5985999999999084e-05, 1.6000000000002124e-05, 1.5986999999998558e-05, 1.5985999999999084e-05, 1.5986000000002554e-05, 1.6027999999997794e-05, 1.5999999999998654e-05, 1.5971999999999514e-05, 1.5971999999999514e-05, 1.5971999999999514e-05, 1.5985999999999084e-05, 1.5985999999999084e-05, 1.5971999999999514e-05, 1.5985999999999084e-05, 1.6000000000002124e-05, 1.5972999999998988e-05, 1.5985999999999084e-05, 1.5973000000002457e-05, 1.5985999999999084e-05, 1.5986999999998558e-05, 1.5986000000002554e-05, 1.5985999999999084e-05, 1.5985999999999084e-05, 1.5957999999999944e-05, 1.5971999999999514e-05, 1.5971999999999514e-05, 1.5972000000002984e-05, 1.5971999999999514e-05, 1.5985999999999084e-05, 1.6028000000001263e-05, 1.5985999999999084e-05, 1.5985999999999084e-05, 1.5972999999998988e-05, 1.5985999999999084e-05, 1.5972999999998988e-05, 1.5999999999998654e-05, 1.6028000000001263e-05, 1.5957999999999944e-05, 1.6013999999998224e-05, 1.5972000000002984e-05, 1.5985999999999084e-05, 1.5985999999999084e-05, 1.5957999999999944e-05, 1.5971999999999514e-05, 1.5999999999998654e-05, 1.6000000000002124e-05, 1.5971999999999514e-05]</msg>
<status status="PASS" starttime="20201030 18:30:54.709" endtime="20201030 18:30:54.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.702" endtime="20201030 18:30:54.713"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:54.718" endtime="20201030 18:30:54.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.716" endtime="20201030 18:30:54.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.714" endtime="20201030 18:30:54.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.349" endtime="20201030 18:30:54.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.349" endtime="20201030 18:30:54.740"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.750" endtime="20201030 18:30:54.760"></status>
</kw>
<msg timestamp="20201030 18:30:54.760" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:54.748" endtime="20201030 18:30:54.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:54.763" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:54.761" endtime="20201030 18:30:54.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.764" endtime="20201030 18:30:54.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.744" endtime="20201030 18:30:54.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.742" endtime="20201030 18:30:54.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:54.774" endtime="20201030 18:30:55.067"></status>
</kw>
<msg timestamp="20201030 18:30:55.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020543125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020565819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:54.772" endtime="20201030 18:30:55.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020543125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020565819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:55.077" endtime="20201030 18:30:55.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.095" endtime="20201030 18:30:55.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.770" endtime="20201030 18:30:55.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.768" endtime="20201030 18:30:55.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:55.109" level="INFO">${PHILIP_RES} = [{'diff': 2.2694000000000186e-05}, {'diff': 2.2735999999998896e-05}, {'diff': 2.269499999999966e-05}, {'diff': 2.268100000000009e-05}, {'diff': 2.2680000000000616e-05}, {'diff': 2.2694000000000186e-05...</msg>
<status status="PASS" starttime="20201030 18:30:55.102" endtime="20201030 18:30:55.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:55.118" level="INFO">${RESULT} = {'diff': [2.2694000000000186e-05, 2.2735999999998896e-05, 2.269499999999966e-05, 2.268100000000009e-05, 2.2680000000000616e-05, 2.2694000000000186e-05, 2.2694000000000186e-05, 2.266699999999705e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:30:55.111" endtime="20201030 18:30:55.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.129" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:55.127" endtime="20201030 18:30:55.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.134" level="INFO">VALUE: [2.2694000000000186e-05, 2.2735999999998896e-05, 2.269499999999966e-05, 2.268100000000009e-05, 2.2680000000000616e-05, 2.2694000000000186e-05, 2.2694000000000186e-05, 2.266699999999705e-05, 2.268100000000009e-05, 2.263899999999791e-05, 2.266700000000052e-05, 2.265300000000095e-05, 2.2694000000000186e-05, 2.265300000000095e-05, 2.2707999999999756e-05, 2.2694000000000186e-05, 2.2707999999999756e-05, 2.268100000000009e-05, 2.27229999999988e-05, 2.268100000000009e-05, 2.2707999999999756e-05, 2.2680000000000616e-05, 2.2694000000000186e-05, 2.2694000000000186e-05, 2.268100000000009e-05, 2.2721999999999326e-05, 2.269499999999966e-05, 2.270899999999923e-05, 2.2707999999999756e-05, 2.2680000000000616e-05, 2.2680000000000616e-05, 2.2707999999999756e-05, 2.2707999999999756e-05, 2.2707999999999756e-05, 2.268100000000009e-05, 2.268100000000009e-05, 2.266700000000052e-05, 2.2694000000000186e-05, 2.261100000000224e-05, 2.2694000000000186e-05, 2.2680000000000616e-05, 2.269499999999966e-05, 2.269499999999966e-05, 2.269499999999966e-05, 2.269499999999966e-05, 2.266700000000052e-05, 2.2707999999999756e-05, 2.265300000000095e-05, 2.2736000000002365e-05, 2.2652000000001477e-05]</msg>
<status status="PASS" starttime="20201030 18:30:55.131" endtime="20201030 18:30:55.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.120" endtime="20201030 18:30:55.136"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:55.142" endtime="20201030 18:30:55.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.140" endtime="20201030 18:30:55.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.138" endtime="20201030 18:30:55.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.741" endtime="20201030 18:30:55.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:54.740" endtime="20201030 18:30:55.163"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.174" endtime="20201030 18:30:55.185"></status>
</kw>
<msg timestamp="20201030 18:30:55.185" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:55.172" endtime="20201030 18:30:55.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.191" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:55.189" endtime="20201030 18:30:55.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.192" endtime="20201030 18:30:55.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.168" endtime="20201030 18:30:55.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.166" endtime="20201030 18:30:55.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.201" endtime="20201030 18:30:55.486"></status>
</kw>
<msg timestamp="20201030 18:30:55.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021523139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021552847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:55.199" endtime="20201030 18:30:55.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021523139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021552847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:55.490" endtime="20201030 18:30:55.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.499" endtime="20201030 18:30:55.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.197" endtime="20201030 18:30:55.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.195" endtime="20201030 18:30:55.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:55.506" level="INFO">${PHILIP_RES} = [{'diff': 2.9707999999999818e-05}, {'diff': 2.972299999999886e-05}, {'diff': 2.972300000000233e-05}, {'diff': 2.9722000000002857e-05}, {'diff': 2.963800000000197e-05}, {'diff': 2.970899999999929e-05},...</msg>
<status status="PASS" starttime="20201030 18:30:55.502" endtime="20201030 18:30:55.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:55.511" level="INFO">${RESULT} = {'diff': [2.9707999999999818e-05, 2.972299999999886e-05, 2.972300000000233e-05, 2.9722000000002857e-05, 2.963800000000197e-05, 2.970899999999929e-05, 2.9681000000000152e-05, 2.9667000000000582e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:30:55.507" endtime="20201030 18:30:55.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.515" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:55.514" endtime="20201030 18:30:55.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.518" level="INFO">VALUE: [2.9707999999999818e-05, 2.972299999999886e-05, 2.972300000000233e-05, 2.9722000000002857e-05, 2.963800000000197e-05, 2.970899999999929e-05, 2.9681000000000152e-05, 2.9667000000000582e-05, 2.9764000000001567e-05, 2.9667000000000582e-05, 2.9721999999999388e-05, 2.9721999999999388e-05, 2.9653000000001012e-05, 2.9707999999999818e-05, 2.969399999999678e-05, 2.9707999999999818e-05, 2.969499999999972e-05, 2.9721999999999388e-05, 2.9707999999999818e-05, 2.9707999999999818e-05, 2.970899999999929e-05, 2.9749999999998528e-05, 2.9639000000001442e-05, 2.9721999999999388e-05, 2.9749999999998528e-05, 2.9750000000001997e-05, 2.9707999999999818e-05, 2.970900000000276e-05, 2.9707999999999818e-05, 2.9707999999999818e-05, 2.9694000000000248e-05, 2.970899999999929e-05, 2.9707999999999818e-05, 2.9722000000002857e-05, 2.9721999999999388e-05, 2.969499999999972e-05, 2.9721999999999388e-05, 2.9707999999999818e-05, 2.9736000000002427e-05, 2.9707999999999818e-05, 2.9721999999999388e-05, 2.9694000000000248e-05, 2.970899999999929e-05, 2.9681000000000152e-05, 2.9707999999999818e-05, 2.9721999999999388e-05, 2.9653000000001012e-05, 2.9735999999998958e-05, 2.9721999999999388e-05, 2.969500000000319e-05]</msg>
<status status="PASS" starttime="20201030 18:30:55.516" endtime="20201030 18:30:55.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.512" endtime="20201030 18:30:55.519"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:55.522" endtime="20201030 18:30:55.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.521" endtime="20201030 18:30:55.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.519" endtime="20201030 18:30:55.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.164" endtime="20201030 18:30:55.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.164" endtime="20201030 18:30:55.543"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.551" endtime="20201030 18:30:55.563"></status>
</kw>
<msg timestamp="20201030 18:30:55.563" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:55.549" endtime="20201030 18:30:55.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.565" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:55.564" endtime="20201030 18:30:55.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.566" endtime="20201030 18:30:55.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.547" endtime="20201030 18:30:55.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.545" endtime="20201030 18:30:55.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.575" endtime="20201030 18:30:55.863"></status>
</kw>
<msg timestamp="20201030 18:30:55.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018321028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018357986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:55.574" endtime="20201030 18:30:55.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018321028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018357986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:55.867" endtime="20201030 18:30:55.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.878" endtime="20201030 18:30:55.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.571" endtime="20201030 18:30:55.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.570" endtime="20201030 18:30:55.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:55.886" level="INFO">${PHILIP_RES} = [{'diff': 3.695800000000013e-05}, {'diff': 3.701400000000188e-05}, {'diff': 3.705600000000059e-05}, {'diff': 3.706999999999669e-05}, {'diff': 3.702800000000145e-05}, {'diff': 3.704200000000102e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:55.882" endtime="20201030 18:30:55.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:55.890" level="INFO">${RESULT} = {'diff': [3.695800000000013e-05, 3.701400000000188e-05, 3.705600000000059e-05, 3.706999999999669e-05, 3.702800000000145e-05, 3.704200000000102e-05, 3.7096999999999825e-05, 3.7125000000002434e-05, 3.70...</msg>
<status status="PASS" starttime="20201030 18:30:55.887" endtime="20201030 18:30:55.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.895" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:55.894" endtime="20201030 18:30:55.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.897" level="INFO">VALUE: [3.695800000000013e-05, 3.701400000000188e-05, 3.705600000000059e-05, 3.706999999999669e-05, 3.702800000000145e-05, 3.704200000000102e-05, 3.7096999999999825e-05, 3.7125000000002434e-05, 3.7055000000001115e-05, 3.7055000000001115e-05, 3.7026999999998506e-05, 3.69719999999997e-05, 3.7096999999999825e-05, 3.70979999999993e-05, 3.711200000000234e-05, 3.70979999999993e-05, 3.705600000000059e-05, 3.705600000000059e-05, 3.704200000000102e-05, 3.7096999999999825e-05, 3.705600000000059e-05, 3.704200000000102e-05, 3.7041000000001545e-05, 3.7069000000000685e-05, 3.7054999999997645e-05, 3.7041000000001545e-05, 3.702800000000145e-05, 3.705600000000059e-05, 3.705600000000059e-05, 3.705600000000059e-05, 3.707000000000016e-05, 3.707000000000016e-05, 3.705600000000059e-05, 3.7055000000001115e-05, 3.7012999999998936e-05, 3.7012999999998936e-05, 3.7041000000001545e-05, 3.7069000000000685e-05, 3.7054999999997645e-05, 3.704200000000102e-05, 3.705600000000059e-05, 3.698600000000274e-05, 3.704200000000102e-05, 3.704200000000102e-05, 3.705600000000059e-05, 3.702799999999798e-05, 3.702799999999798e-05, 3.7055000000001115e-05, 3.7026999999998506e-05, 3.7040999999998075e-05]</msg>
<status status="PASS" starttime="20201030 18:30:55.896" endtime="20201030 18:30:55.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.891" endtime="20201030 18:30:55.898"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:55.902" endtime="20201030 18:30:55.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.900" endtime="20201030 18:30:55.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.899" endtime="20201030 18:30:55.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.544" endtime="20201030 18:30:55.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.543" endtime="20201030 18:30:55.923"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.932" endtime="20201030 18:30:55.944"></status>
</kw>
<msg timestamp="20201030 18:30:55.945" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:55.930" endtime="20201030 18:30:55.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:55.947" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:55.946" endtime="20201030 18:30:55.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.949" endtime="20201030 18:30:55.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.927" endtime="20201030 18:30:55.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.925" endtime="20201030 18:30:55.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:55.958" endtime="20201030 18:30:56.245"></status>
</kw>
<msg timestamp="20201030 18:30:56.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020188264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020232958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:55.956" endtime="20201030 18:30:56.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020188264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020232958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:56.249" endtime="20201030 18:30:56.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.257" endtime="20201030 18:30:56.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.954" endtime="20201030 18:30:56.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.952" endtime="20201030 18:30:56.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:56.264" level="INFO">${PHILIP_RES} = [{'diff': 4.46939999999979e-05}, {'diff': 4.4681000000001275e-05}, {'diff': 4.4681000000001275e-05}, {'diff': 4.4694999999997376e-05}, {'diff': 4.4681000000001275e-05}, {'diff': 4.4695000000000845e-05...</msg>
<status status="PASS" starttime="20201030 18:30:56.261" endtime="20201030 18:30:56.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:56.269" level="INFO">${RESULT} = {'diff': [4.46939999999979e-05, 4.4681000000001275e-05, 4.4681000000001275e-05, 4.4694999999997376e-05, 4.4681000000001275e-05, 4.4695000000000845e-05, 4.4694999999997376e-05, 4.4652999999998666e-05, ...</msg>
<status status="PASS" starttime="20201030 18:30:56.265" endtime="20201030 18:30:56.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.273" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:56.272" endtime="20201030 18:30:56.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.276" level="INFO">VALUE: [4.46939999999979e-05, 4.4681000000001275e-05, 4.4681000000001275e-05, 4.4694999999997376e-05, 4.4681000000001275e-05, 4.4695000000000845e-05, 4.4694999999997376e-05, 4.4652999999998666e-05, 4.469400000000137e-05, 4.470799999999747e-05, 4.4610999999999956e-05, 4.46800000000018e-05, 4.466599999999876e-05, 4.469400000000137e-05, 4.469400000000137e-05, 4.46939999999979e-05, 4.473600000000008e-05, 4.4695000000000845e-05, 4.4694999999997376e-05, 4.4695000000000845e-05, 4.4681000000001275e-05, 4.4722999999999985e-05, 4.470800000000094e-05, 4.469400000000137e-05, 4.467999999999833e-05, 4.469400000000137e-05, 4.469400000000137e-05, 4.470799999999747e-05, 4.4695000000000845e-05, 4.469400000000137e-05, 4.4709000000000415e-05, 4.4666999999998236e-05, 4.4624999999999526e-05, 4.4695000000000845e-05, 4.472200000000051e-05, 4.476399999999922e-05, 4.46939999999979e-05, 4.46939999999979e-05, 4.4638999999999096e-05, 4.470800000000094e-05, 4.467999999999833e-05, 4.469400000000137e-05, 4.470799999999747e-05, 4.4680999999997806e-05, 4.4695000000000845e-05, 4.4709000000000415e-05, 4.4666999999998236e-05, 4.4736999999999555e-05, 4.4638999999999096e-05, 4.467999999999833e-05]</msg>
<status status="PASS" starttime="20201030 18:30:56.274" endtime="20201030 18:30:56.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.269" endtime="20201030 18:30:56.280"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:56.284" endtime="20201030 18:30:56.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.282" endtime="20201030 18:30:56.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.281" endtime="20201030 18:30:56.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.924" endtime="20201030 18:30:56.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:55.923" endtime="20201030 18:30:56.305"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.313" endtime="20201030 18:30:56.327"></status>
</kw>
<msg timestamp="20201030 18:30:56.328" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:56.312" endtime="20201030 18:30:56.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.330" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:56.329" endtime="20201030 18:30:56.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.331" endtime="20201030 18:30:56.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.309" endtime="20201030 18:30:56.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.307" endtime="20201030 18:30:56.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.341" endtime="20201030 18:30:56.627"></status>
</kw>
<msg timestamp="20201030 18:30:56.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019066139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019118764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:56.340" endtime="20201030 18:30:56.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019066139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019118764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:56.634" endtime="20201030 18:30:56.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.645" endtime="20201030 18:30:56.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.337" endtime="20201030 18:30:56.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.335" endtime="20201030 18:30:56.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:56.656" level="INFO">${PHILIP_RES} = [{'diff': 5.262500000000059e-05}, {'diff': 5.26669999999993e-05}, {'diff': 5.2679999999999394e-05}, {'diff': 5.265299999999973e-05}, {'diff': 5.263900000000016e-05}, {'diff': 5.259699999999798e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:56.652" endtime="20201030 18:30:56.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:56.664" level="INFO">${RESULT} = {'diff': [5.262500000000059e-05, 5.26669999999993e-05, 5.2679999999999394e-05, 5.265299999999973e-05, 5.263900000000016e-05, 5.259699999999798e-05, 5.256899999999884e-05, 5.26669999999993e-05, 5.26529...</msg>
<status status="PASS" starttime="20201030 18:30:56.658" endtime="20201030 18:30:56.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.668" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:56.667" endtime="20201030 18:30:56.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.671" level="INFO">VALUE: [5.262500000000059e-05, 5.26669999999993e-05, 5.2679999999999394e-05, 5.265299999999973e-05, 5.263900000000016e-05, 5.259699999999798e-05, 5.256899999999884e-05, 5.26669999999993e-05, 5.265299999999973e-05, 5.2652000000000254e-05, 5.265299999999973e-05, 5.266700000000277e-05, 5.258400000000135e-05, 5.2666000000003294e-05, 5.2707999999998534e-05, 5.269400000000243e-05, 5.263900000000016e-05, 5.26530000000032e-05, 5.265299999999973e-05, 5.263900000000016e-05, 5.262500000000059e-05, 5.265299999999973e-05, 5.263900000000016e-05, 5.2665999999999824e-05, 5.263900000000016e-05, 5.268099999999887e-05, 5.263900000000016e-05, 5.262500000000059e-05, 5.265299999999973e-05, 5.265299999999973e-05, 5.265299999999973e-05, 5.2652000000000254e-05, 5.268099999999887e-05, 5.263900000000016e-05, 5.2665999999999824e-05, 5.26669999999993e-05, 5.265299999999973e-05, 5.265299999999973e-05, 5.263900000000016e-05, 5.265299999999973e-05, 5.273600000000114e-05, 5.2652000000000254e-05, 5.2652000000000254e-05, 5.263900000000016e-05, 5.2693999999998964e-05, 5.2638000000000684e-05, 5.265299999999973e-05, 5.262500000000059e-05, 5.265299999999973e-05, 5.269499999999844e-05]</msg>
<status status="PASS" starttime="20201030 18:30:56.669" endtime="20201030 18:30:56.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.665" endtime="20201030 18:30:56.672"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:56.676" endtime="20201030 18:30:56.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.674" endtime="20201030 18:30:56.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.673" endtime="20201030 18:30:56.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.305" endtime="20201030 18:30:56.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.305" endtime="20201030 18:30:56.696"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.705" endtime="20201030 18:30:56.719"></status>
</kw>
<msg timestamp="20201030 18:30:56.720" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:56.703" endtime="20201030 18:30:56.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.723" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:56.721" endtime="20201030 18:30:56.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.724" endtime="20201030 18:30:56.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.701" endtime="20201030 18:30:56.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.699" endtime="20201030 18:30:56.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.734" endtime="20201030 18:30:57.019"></status>
</kw>
<msg timestamp="20201030 18:30:57.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019063431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019124347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:56.732" endtime="20201030 18:30:57.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019063431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019124347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:57.024" endtime="20201030 18:30:57.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.032" endtime="20201030 18:30:57.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.729" endtime="20201030 18:30:57.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.728" endtime="20201030 18:30:57.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:57.040" level="INFO">${PHILIP_RES} = [{'diff': 6.0916000000001136e-05}, {'diff': 6.090300000000104e-05}, {'diff': 6.093100000000018e-05}, {'diff': 6.093099999999671e-05}, {'diff': 6.087499999999843e-05}, {'diff': 6.094499999999975e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:30:57.037" endtime="20201030 18:30:57.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:57.044" level="INFO">${RESULT} = {'diff': [6.0916000000001136e-05, 6.090300000000104e-05, 6.093100000000018e-05, 6.093099999999671e-05, 6.087499999999843e-05, 6.094499999999975e-05, 6.0957999999999846e-05, 6.0916000000001136e-05, 6.0...</msg>
<status status="PASS" starttime="20201030 18:30:57.041" endtime="20201030 18:30:57.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.049" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:57.047" endtime="20201030 18:30:57.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.051" level="INFO">VALUE: [6.0916000000001136e-05, 6.090300000000104e-05, 6.093100000000018e-05, 6.093099999999671e-05, 6.087499999999843e-05, 6.094499999999975e-05, 6.0957999999999846e-05, 6.0916000000001136e-05, 6.0930000000000706e-05, 6.0915999999997666e-05, 6.091700000000061e-05, 6.088900000000147e-05, 6.0971999999999416e-05, 6.093100000000018e-05, 6.091699999999714e-05, 6.0916000000001136e-05, 6.0902000000001566e-05, 6.0916000000001136e-05, 6.093100000000018e-05, 6.093100000000018e-05, 6.094499999999975e-05, 6.093100000000018e-05, 6.0902000000001566e-05, 6.0916000000001136e-05, 6.0929999999997236e-05, 6.0916000000001136e-05, 6.090299999999757e-05, 6.091700000000061e-05, 6.093100000000018e-05, 6.093100000000018e-05, 6.0929999999997236e-05, 6.0902000000001566e-05, 6.0916000000001136e-05, 6.090300000000104e-05, 6.093100000000018e-05, 6.093100000000018e-05, 6.095899999999932e-05, 6.093100000000018e-05, 6.090300000000104e-05, 6.0915999999997666e-05, 6.0901999999998097e-05, 6.0944000000000276e-05, 6.094499999999975e-05, 6.093100000000018e-05, 6.0944000000000276e-05, 6.093100000000018e-05, 6.0930000000000706e-05, 6.0916000000001136e-05, 6.0957999999999846e-05, 6.0930000000000706e-05]</msg>
<status status="PASS" starttime="20201030 18:30:57.050" endtime="20201030 18:30:57.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.045" endtime="20201030 18:30:57.052"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:57.056" endtime="20201030 18:30:57.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.054" endtime="20201030 18:30:57.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.053" endtime="20201030 18:30:57.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.697" endtime="20201030 18:30:57.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.697" endtime="20201030 18:30:57.077"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.085" endtime="20201030 18:30:57.103"></status>
</kw>
<msg timestamp="20201030 18:30:57.103" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:57.084" endtime="20201030 18:30:57.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.106" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:57.104" endtime="20201030 18:30:57.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.107" endtime="20201030 18:30:57.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.081" endtime="20201030 18:30:57.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.079" endtime="20201030 18:30:57.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.117" endtime="20201030 18:30:57.403"></status>
</kw>
<msg timestamp="20201030 18:30:57.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019940458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020009958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:57.115" endtime="20201030 18:30:57.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019940458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020009958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:57.407" endtime="20201030 18:30:57.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.416" endtime="20201030 18:30:57.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.113" endtime="20201030 18:30:57.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.111" endtime="20201030 18:30:57.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:57.423" level="INFO">${PHILIP_RES} = [{'diff': 6.950000000000012e-05}, {'diff': 6.945900000000088e-05}, {'diff': 6.950000000000012e-05}, {'diff': 6.950000000000012e-05}, {'diff': 6.951300000000021e-05}, {'diff': 6.951399999999969e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:57.419" endtime="20201030 18:30:57.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:57.427" level="INFO">${RESULT} = {'diff': [6.950000000000012e-05, 6.945900000000088e-05, 6.950000000000012e-05, 6.950000000000012e-05, 6.951300000000021e-05, 6.951399999999969e-05, 6.950000000000012e-05, 6.951399999999969e-05, 6.9513...</msg>
<status status="PASS" starttime="20201030 18:30:57.424" endtime="20201030 18:30:57.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.431" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:57.430" endtime="20201030 18:30:57.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.434" level="INFO">VALUE: [6.950000000000012e-05, 6.945900000000088e-05, 6.950000000000012e-05, 6.950000000000012e-05, 6.951300000000021e-05, 6.951399999999969e-05, 6.950000000000012e-05, 6.951399999999969e-05, 6.951399999999969e-05, 6.951400000000316e-05, 6.951399999999969e-05, 6.951399999999969e-05, 6.952799999999926e-05, 6.950000000000012e-05, 6.951399999999969e-05, 6.950000000000012e-05, 6.951400000000316e-05, 6.950000000000012e-05, 6.949999999999665e-05, 6.951399999999969e-05, 6.951400000000316e-05, 6.950000000000012e-05, 6.950000000000012e-05, 6.956899999999849e-05, 6.948599999999708e-05, 6.948700000000002e-05, 6.945800000000141e-05, 6.951399999999969e-05, 6.951400000000316e-05, 6.952700000000325e-05, 6.951399999999969e-05, 6.950000000000012e-05, 6.950000000000012e-05, 6.952800000000273e-05, 6.952800000000273e-05, 6.948599999999708e-05, 6.951399999999969e-05, 6.952800000000273e-05, 6.951399999999969e-05, 6.94169999999987e-05, 6.951399999999969e-05, 6.951399999999969e-05, 6.950000000000012e-05, 6.951399999999969e-05, 6.955500000000239e-05, 6.951400000000316e-05, 6.945899999999741e-05, 6.957000000000144e-05, 6.950000000000012e-05, 6.945799999999794e-05]</msg>
<status status="PASS" starttime="20201030 18:30:57.432" endtime="20201030 18:30:57.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.428" endtime="20201030 18:30:57.436"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:57.439" endtime="20201030 18:30:57.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.438" endtime="20201030 18:30:57.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.437" endtime="20201030 18:30:57.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.077" endtime="20201030 18:30:57.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.077" endtime="20201030 18:30:57.460"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.469" endtime="20201030 18:30:57.485"></status>
</kw>
<msg timestamp="20201030 18:30:57.485" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:57.467" endtime="20201030 18:30:57.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.488" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:57.486" endtime="20201030 18:30:57.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.489" endtime="20201030 18:30:57.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.465" endtime="20201030 18:30:57.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.463" endtime="20201030 18:30:57.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.498" endtime="20201030 18:30:57.785"></status>
</kw>
<msg timestamp="20201030 18:30:57.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019504194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019582569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:57.497" endtime="20201030 18:30:57.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019504194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019582569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:57.789" endtime="20201030 18:30:57.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.797" endtime="20201030 18:30:57.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.494" endtime="20201030 18:30:57.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.492" endtime="20201030 18:30:57.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:57.804" level="INFO">${PHILIP_RES} = [{'diff': 7.837500000000205e-05}, {'diff': 7.840299999999772e-05}, {'diff': 7.84030000000012e-05}, {'diff': 7.844400000000043e-05}, {'diff': 7.84030000000012e-05}, {'diff': 7.84030000000012e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:30:57.801" endtime="20201030 18:30:57.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:57.809" level="INFO">${RESULT} = {'diff': [7.837500000000205e-05, 7.840299999999772e-05, 7.84030000000012e-05, 7.844400000000043e-05, 7.84030000000012e-05, 7.84030000000012e-05, 7.840199999999825e-05, 7.841700000000076e-05, 7.8403000...</msg>
<status status="PASS" starttime="20201030 18:30:57.805" endtime="20201030 18:30:57.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.814" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:57.813" endtime="20201030 18:30:57.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.816" level="INFO">VALUE: [7.837500000000205e-05, 7.840299999999772e-05, 7.84030000000012e-05, 7.844400000000043e-05, 7.84030000000012e-05, 7.84030000000012e-05, 7.840199999999825e-05, 7.841700000000076e-05, 7.84030000000012e-05, 7.8458e-05, 7.84030000000012e-05, 7.840299999999772e-05, 7.841600000000129e-05, 7.840299999999772e-05, 7.840299999999772e-05, 7.838900000000162e-05, 7.836099999999901e-05, 7.843100000000033e-05, 7.831999999999978e-05, 7.838900000000162e-05, 7.84030000000012e-05, 7.840299999999772e-05, 7.84030000000012e-05, 7.841700000000076e-05, 7.831999999999978e-05, 7.84030000000012e-05, 7.840299999999772e-05, 7.841600000000129e-05, 7.838899999999815e-05, 7.8458e-05, 7.84030000000012e-05, 7.840199999999825e-05, 7.837500000000205e-05, 7.838899999999815e-05, 7.840200000000172e-05, 7.837499999999858e-05, 7.838899999999815e-05, 7.841700000000076e-05, 7.843000000000086e-05, 7.841700000000076e-05, 7.840199999999825e-05, 7.84030000000012e-05, 7.84030000000012e-05, 7.840199999999825e-05, 7.84449999999999e-05, 7.84169999999973e-05, 7.838800000000215e-05, 7.840299999999772e-05, 7.841700000000076e-05, 7.838800000000215e-05]</msg>
<status status="PASS" starttime="20201030 18:30:57.815" endtime="20201030 18:30:57.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.810" endtime="20201030 18:30:57.817"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:57.821" endtime="20201030 18:30:57.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.819" endtime="20201030 18:30:57.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.818" endtime="20201030 18:30:57.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.461" endtime="20201030 18:30:57.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.461" endtime="20201030 18:30:57.842"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.851" endtime="20201030 18:30:57.868"></status>
</kw>
<msg timestamp="20201030 18:30:57.868" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:57.849" endtime="20201030 18:30:57.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:57.871" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:57.870" endtime="20201030 18:30:57.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.872" endtime="20201030 18:30:57.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.846" endtime="20201030 18:30:57.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.844" endtime="20201030 18:30:57.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:57.882" endtime="20201030 18:30:58.168"></status>
</kw>
<msg timestamp="20201030 18:30:58.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019602014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019689597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:57.880" endtime="20201030 18:30:58.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019602014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019689597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:58.172" endtime="20201030 18:30:58.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.180" endtime="20201030 18:30:58.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.877" endtime="20201030 18:30:58.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.876" endtime="20201030 18:30:58.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:58.188" level="INFO">${PHILIP_RES} = [{'diff': 8.758299999999872e-05}, {'diff': 8.765300000000004e-05}, {'diff': 8.761099999999786e-05}, {'diff': 8.759700000000176e-05}, {'diff': 8.757000000000209e-05}, {'diff': 8.761100000000133e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:58.185" endtime="20201030 18:30:58.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:58.193" level="INFO">${RESULT} = {'diff': [8.758299999999872e-05, 8.765300000000004e-05, 8.761099999999786e-05, 8.759700000000176e-05, 8.757000000000209e-05, 8.761100000000133e-05, 8.755500000000305e-05, 8.759699999999829e-05, 8.7625...</msg>
<status status="PASS" starttime="20201030 18:30:58.189" endtime="20201030 18:30:58.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.197" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:58.196" endtime="20201030 18:30:58.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.199" level="INFO">VALUE: [8.758299999999872e-05, 8.765300000000004e-05, 8.761099999999786e-05, 8.759700000000176e-05, 8.757000000000209e-05, 8.761100000000133e-05, 8.755500000000305e-05, 8.759699999999829e-05, 8.76250000000009e-05, 8.761099999999786e-05, 8.765300000000004e-05, 8.76250000000009e-05, 8.761099999999786e-05, 8.759700000000176e-05, 8.761099999999786e-05, 8.761100000000133e-05, 8.759700000000176e-05, 8.752799999999991e-05, 8.761100000000133e-05, 8.762499999999743e-05, 8.761100000000133e-05, 8.761100000000133e-05, 8.76250000000009e-05, 8.766600000000013e-05, 8.758299999999872e-05, 8.765300000000004e-05, 8.757000000000209e-05, 8.759699999999829e-05, 8.759700000000176e-05, 8.759799999999776e-05, 8.761100000000133e-05, 8.758299999999872e-05, 8.759800000000123e-05, 8.763900000000047e-05, 8.761099999999786e-05, 8.76250000000009e-05, 8.761100000000133e-05, 8.759699999999829e-05, 8.76250000000009e-05, 8.761099999999786e-05, 8.759700000000176e-05, 8.755500000000305e-05, 8.761100000000133e-05, 8.76250000000009e-05, 8.759799999999776e-05, 8.763900000000047e-05, 8.761099999999786e-05, 8.76250000000009e-05, 8.761100000000133e-05, 8.761099999999786e-05]</msg>
<status status="PASS" starttime="20201030 18:30:58.198" endtime="20201030 18:30:58.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.193" endtime="20201030 18:30:58.200"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:58.204" endtime="20201030 18:30:58.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.203" endtime="20201030 18:30:58.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.201" endtime="20201030 18:30:58.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.843" endtime="20201030 18:30:58.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:57.842" endtime="20201030 18:30:58.225"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.235" endtime="20201030 18:30:58.254"></status>
</kw>
<msg timestamp="20201030 18:30:58.255" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:58.234" endtime="20201030 18:30:58.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.257" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:58.256" endtime="20201030 18:30:58.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.258" endtime="20201030 18:30:58.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.231" endtime="20201030 18:30:58.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.228" endtime="20201030 18:30:58.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.268" endtime="20201030 18:30:58.553"></status>
</kw>
<msg timestamp="20201030 18:30:58.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021674736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021771778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:58.266" endtime="20201030 18:30:58.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021674736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021771778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:58.558" endtime="20201030 18:30:58.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.566" endtime="20201030 18:30:58.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.263" endtime="20201030 18:30:58.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.262" endtime="20201030 18:30:58.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:58.573" level="INFO">${PHILIP_RES} = [{'diff': 9.704199999999857e-05}, {'diff': 9.713899999999956e-05}, {'diff': 9.713899999999956e-05}, {'diff': 9.709700000000085e-05}, {'diff': 9.713899999999956e-05}, {'diff': 9.712499999999999e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:58.569" endtime="20201030 18:30:58.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:58.577" level="INFO">${RESULT} = {'diff': [9.704199999999857e-05, 9.713899999999956e-05, 9.713899999999956e-05, 9.709700000000085e-05, 9.713899999999956e-05, 9.712499999999999e-05, 9.712499999999999e-05, 9.713899999999956e-05, 9.7153...</msg>
<status status="PASS" starttime="20201030 18:30:58.574" endtime="20201030 18:30:58.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.581" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:58.580" endtime="20201030 18:30:58.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.584" level="INFO">VALUE: [9.704199999999857e-05, 9.713899999999956e-05, 9.713899999999956e-05, 9.709700000000085e-05, 9.713899999999956e-05, 9.712499999999999e-05, 9.712499999999999e-05, 9.713899999999956e-05, 9.71530000000026e-05, 9.712499999999999e-05, 9.718000000000226e-05, 9.713899999999956e-05, 9.713899999999956e-05, 9.713899999999956e-05, 9.711199999999989e-05, 9.71530000000026e-05, 9.713800000000009e-05, 9.712499999999999e-05, 9.712499999999999e-05, 9.712499999999999e-05, 9.712499999999999e-05, 9.719399999999837e-05, 9.713899999999956e-05, 9.713900000000303e-05, 9.712500000000346e-05, 9.71660000000027e-05, 9.719500000000131e-05, 9.707000000000118e-05, 9.713900000000303e-05, 9.711100000000042e-05, 9.713900000000303e-05, 9.713899999999956e-05, 9.713900000000303e-05, 9.708300000000128e-05, 9.71530000000026e-05, 9.713899999999956e-05, 9.715299999999913e-05, 9.712499999999999e-05, 9.71669999999987e-05, 9.711100000000042e-05, 9.713899999999956e-05, 9.709700000000085e-05, 9.713899999999956e-05, 9.713899999999956e-05, 9.71799999999988e-05, 9.712499999999999e-05, 9.715299999999566e-05, 9.713900000000303e-05, 9.715199999999619e-05, 9.712500000000346e-05]</msg>
<status status="PASS" starttime="20201030 18:30:58.583" endtime="20201030 18:30:58.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.578" endtime="20201030 18:30:58.586"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:58.590" endtime="20201030 18:30:58.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.588" endtime="20201030 18:30:58.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.587" endtime="20201030 18:30:58.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.227" endtime="20201030 18:30:58.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.226" endtime="20201030 18:30:58.611"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.619" endtime="20201030 18:30:58.639"></status>
</kw>
<msg timestamp="20201030 18:30:58.639" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:58.618" endtime="20201030 18:30:58.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.642" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:58.640" endtime="20201030 18:30:58.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.643" endtime="20201030 18:30:58.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.615" endtime="20201030 18:30:58.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.613" endtime="20201030 18:30:58.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.652" endtime="20201030 18:30:58.939"></status>
</kw>
<msg timestamp="20201030 18:30:58.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019272319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019379264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:58.651" endtime="20201030 18:30:58.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019272319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019379264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:58.944" endtime="20201030 18:30:58.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:58.951" endtime="20201030 18:30:58.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.648" endtime="20201030 18:30:58.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.646" endtime="20201030 18:30:58.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:58.958" level="INFO">${PHILIP_RES} = [{'diff': 0.00010694500000000065}, {'diff': 0.00010697200000000032}, {'diff': 0.00010698599999999989}, {'diff': 0.00010695799999999728}, {'diff': 0.00010695800000000075}, {'diff': 0.000107028000000002...</msg>
<status status="PASS" starttime="20201030 18:30:58.955" endtime="20201030 18:30:58.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:58.963" level="INFO">${RESULT} = {'diff': [0.00010694500000000065, 0.00010697200000000032, 0.00010698599999999989, 0.00010695799999999728, 0.00010695800000000075, 0.00010702800000000207, 0.00010701399999999903, 0.00010694500000000065...</msg>
<status status="PASS" starttime="20201030 18:30:58.959" endtime="20201030 18:30:58.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.968" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:58.966" endtime="20201030 18:30:58.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:58.970" level="INFO">VALUE: [0.00010694500000000065, 0.00010697200000000032, 0.00010698599999999989, 0.00010695799999999728, 0.00010695800000000075, 0.00010702800000000207, 0.00010701399999999903, 0.00010694500000000065, 0.00010695900000000022, 0.00010695799999999728, 0.00010694399999999771, 0.00010695800000000075, 0.00010697200000000032, 0.00010698599999999989, 0.00010704199999999817, 0.00010698700000000283, 0.00010698600000000336, 0.00010697200000000032, 0.00010697200000000032, 0.00010701399999999903, 0.00010688900000000237, 0.00010692999999999814, 0.00010695900000000022, 0.00010695900000000022, 0.00010691700000000151, 0.00010697200000000032, 0.00010697200000000032, 0.00010698599999999989, 0.00010698599999999989, 0.00010702800000000207, 0.00010697200000000032, 0.00010695900000000022, 0.00010697200000000032, 0.00010695800000000075, 0.00010695799999999728, 0.00010697200000000032, 0.00010697200000000032, 0.00010697200000000032, 0.00010693000000000161, 0.00010697299999999979, 0.00010695900000000022, 0.00010690299999999847, 0.00010695800000000075, 0.00010695800000000075, 0.00010697200000000032, 0.00010697200000000032, 0.00010695799999999728, 0.00010695900000000022, 0.00010697299999999979, 0.00010695800000000075]</msg>
<status status="PASS" starttime="20201030 18:30:58.969" endtime="20201030 18:30:58.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.964" endtime="20201030 18:30:58.976"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:58.981" endtime="20201030 18:30:59.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.979" endtime="20201030 18:30:59.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.977" endtime="20201030 18:30:59.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.612" endtime="20201030 18:30:59.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:58.611" endtime="20201030 18:30:59.001"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.010" endtime="20201030 18:30:59.030"></status>
</kw>
<msg timestamp="20201030 18:30:59.031" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:59.009" endtime="20201030 18:30:59.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.034" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:59.032" endtime="20201030 18:30:59.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.035" endtime="20201030 18:30:59.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.006" endtime="20201030 18:30:59.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.004" endtime="20201030 18:30:59.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.044" endtime="20201030 18:30:59.329"></status>
</kw>
<msg timestamp="20201030 18:30:59.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019111514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019228611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:59.042" endtime="20201030 18:30:59.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019111514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019228611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:59.334" endtime="20201030 18:30:59.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.341" endtime="20201030 18:30:59.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.040" endtime="20201030 18:30:59.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.038" endtime="20201030 18:30:59.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:59.349" level="INFO">${PHILIP_RES} = [{'diff': 0.00011709700000000003}, {'diff': 0.00011709700000000003}, {'diff': 0.00011711199999999908}, {'diff': 0.00011705599999999733}, {'diff': 0.00011712499999999917}, {'diff': 0.000117125000000002...</msg>
<status status="PASS" starttime="20201030 18:30:59.346" endtime="20201030 18:30:59.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:59.353" level="INFO">${RESULT} = {'diff': [0.00011709700000000003, 0.00011709700000000003, 0.00011711199999999908, 0.00011705599999999733, 0.00011712499999999917, 0.00011712500000000264, 0.00011713900000000221, 0.00011708300000000046...</msg>
<status status="PASS" starttime="20201030 18:30:59.350" endtime="20201030 18:30:59.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.358" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:59.357" endtime="20201030 18:30:59.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.360" level="INFO">VALUE: [0.00011709700000000003, 0.00011709700000000003, 0.00011711199999999908, 0.00011705599999999733, 0.00011712499999999917, 0.00011712500000000264, 0.00011713900000000221, 0.00011708300000000046, 0.0001171109999999996, 0.00011708300000000046, 0.00011709700000000003, 0.00011713899999999874, 0.0001170690000000009, 0.00011712499999999917, 0.00011712499999999917, 0.00011713899999999874, 0.00011715300000000178, 0.00011711200000000255, 0.00011708399999999994, 0.00011712500000000264, 0.00011712500000000264, 0.00011712499999999917, 0.00011712499999999917, 0.00011716699999999788, 0.00011711199999999908, 0.00011708399999999994, 0.00011709700000000003, 0.00011712499999999917, 0.00011702799999999819, 0.00011718000000000145, 0.0001171109999999996, 0.00011712499999999917, 0.0001171109999999996, 0.00011713900000000221, 0.00011712500000000264, 0.00011716700000000135, 0.00011713899999999874, 0.00011709700000000003, 0.00011712499999999917, 0.00011709799999999951, 0.00011718000000000145, 0.00011705500000000132, 0.00011708300000000046, 0.00011711199999999908, 0.0001171109999999996, 0.00011712499999999917, 0.00011709799999999951, 0.00011713900000000221, 0.00011712500000000264, 0.00011709699999999656]</msg>
<status status="PASS" starttime="20201030 18:30:59.359" endtime="20201030 18:30:59.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.354" endtime="20201030 18:30:59.362"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:59.365" endtime="20201030 18:30:59.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.364" endtime="20201030 18:30:59.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.363" endtime="20201030 18:30:59.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.002" endtime="20201030 18:30:59.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.002" endtime="20201030 18:30:59.386"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.395" endtime="20201030 18:30:59.417"></status>
</kw>
<msg timestamp="20201030 18:30:59.418" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:59.393" endtime="20201030 18:30:59.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.420" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:59.419" endtime="20201030 18:30:59.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.421" endtime="20201030 18:30:59.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.391" endtime="20201030 18:30:59.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.389" endtime="20201030 18:30:59.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.431" endtime="20201030 18:30:59.717"></status>
</kw>
<msg timestamp="20201030 18:30:59.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019947264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020074819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:59.429" endtime="20201030 18:30:59.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019947264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020074819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:59.721" endtime="20201030 18:30:59.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.729" endtime="20201030 18:30:59.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.426" endtime="20201030 18:30:59.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.425" endtime="20201030 18:30:59.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:30:59.735" level="INFO">${PHILIP_RES} = [{'diff': 0.00012755500000000142}, {'diff': 0.000127569000000001}, {'diff': 0.00012759700000000013}, {'diff': 0.00012758300000000056}, {'diff': 0.00012755500000000142}, {'diff': 0.00012756899999999752...</msg>
<status status="PASS" starttime="20201030 18:30:59.732" endtime="20201030 18:30:59.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:59.739" level="INFO">${RESULT} = {'diff': [0.00012755500000000142, 0.000127569000000001, 0.00012759700000000013, 0.00012758300000000056, 0.00012755500000000142, 0.00012756899999999752, 0.00012758300000000056, 0.00012757000000000046, ...</msg>
<status status="PASS" starttime="20201030 18:30:59.736" endtime="20201030 18:30:59.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.744" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 18:30:59.743" endtime="20201030 18:30:59.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.746" level="INFO">VALUE: [0.00012755500000000142, 0.000127569000000001, 0.00012759700000000013, 0.00012758300000000056, 0.00012755500000000142, 0.00012756899999999752, 0.00012758300000000056, 0.00012757000000000046, 0.00012758400000000003, 0.0001276390000000023, 0.00012754200000000132, 0.00012757000000000046, 0.0001275829999999971, 0.00012758300000000056, 0.00012755500000000142, 0.00012758300000000056, 0.00012755499999999795, 0.000127569000000001, 0.000127569000000001, 0.00012757000000000046, 0.00012758400000000003, 0.0001275560000000009, 0.00012757000000000046, 0.00012759700000000013, 0.00012758300000000056, 0.00012758300000000056, 0.00012758300000000056, 0.00012754099999999838, 0.0001275560000000009, 0.00012754200000000132, 0.00012758400000000003, 0.00012758300000000056, 0.0001275560000000009, 0.0001275560000000009, 0.00012758400000000003, 0.00012763899999999884, 0.00012758300000000056, 0.0001275829999999971, 0.000127569000000001, 0.000127569000000001, 0.00012755500000000142, 0.00012758300000000056, 0.00012765199999999893, 0.00012762499999999927, 0.0001275560000000009, 0.00012763899999999884, 0.00012759800000000654, 0.0001275560000000009, 0.0001276109999999997, 0.00012754100000000185]</msg>
<status status="PASS" starttime="20201030 18:30:59.745" endtime="20201030 18:30:59.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.740" endtime="20201030 18:30:59.751"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:59.755" endtime="20201030 18:30:59.774"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.753" endtime="20201030 18:30:59.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.752" endtime="20201030 18:30:59.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.387" endtime="20201030 18:30:59.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.387" endtime="20201030 18:30:59.776"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.784" endtime="20201030 18:30:59.806"></status>
</kw>
<msg timestamp="20201030 18:30:59.806" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:59.783" endtime="20201030 18:30:59.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:59.809" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:59.807" endtime="20201030 18:30:59.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.810" endtime="20201030 18:30:59.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.780" endtime="20201030 18:30:59.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.778" endtime="20201030 18:30:59.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:59.819" endtime="20201030 18:31:00.106"></status>
</kw>
<msg timestamp="20201030 18:31:00.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019227431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019365792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:59.818" endtime="20201030 18:31:00.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019227431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019365792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:00.110" endtime="20201030 18:31:00.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.117" endtime="20201030 18:31:00.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.815" endtime="20201030 18:31:00.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.813" endtime="20201030 18:31:00.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:00.124" level="INFO">${PHILIP_RES} = [{'diff': 0.00013836100000000004}, {'diff': 0.00013833299999999743}, {'diff': 0.00013834700000000047}, {'diff': 0.00013834700000000047}, {'diff': 0.00013831900000000133}, {'diff': 0.000138333000000000...</msg>
<status status="PASS" starttime="20201030 18:31:00.121" endtime="20201030 18:31:00.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:00.129" level="INFO">${RESULT} = {'diff': [0.00013836100000000004, 0.00013833299999999743, 0.00013834700000000047, 0.00013834700000000047, 0.00013831900000000133, 0.0001383330000000009, 0.00013836100000000004, 0.00013836100000000004,...</msg>
<status status="PASS" starttime="20201030 18:31:00.125" endtime="20201030 18:31:00.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.134" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:00.133" endtime="20201030 18:31:00.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.136" level="INFO">VALUE: [0.00013836100000000004, 0.00013833299999999743, 0.00013834700000000047, 0.00013834700000000047, 0.00013831900000000133, 0.0001383330000000009, 0.00013836100000000004, 0.00013836100000000004, 0.00013833400000000037, 0.00013834799999999994, 0.00013837500000000308, 0.00013834700000000047, 0.00013834700000000047, 0.0001383879999999997, 0.000138346999999997, 0.00013827799999999862, 0.00013834700000000047, 0.00013836100000000004, 0.00013834700000000047, 0.00013834700000000047, 0.00013843100000000136, 0.00013836100000000004, 0.0001383749999999996, 0.00013834799999999994, 0.00013834799999999994, 0.00013834799999999994, 0.0001383200000000008, 0.00013836100000000004, 0.00013833299999999743, 0.00013834700000000047, 0.0001383330000000009, 0.00013834700000000047, 0.00013833299999999743, 0.0001384170000000018, 0.00013836100000000004, 0.0001382910000000022, 0.000138346999999997, 0.00013836100000000004, 0.0001383200000000008, 0.00013834799999999994, 0.00013833400000000037, 0.0001383339999999969, 0.000138346999999997, 0.00013837500000000308, 0.0001383610000000035, 0.000138346999999997, 0.0001383610000000035, 0.00013836099999999657, 0.000138346999999997, 0.00013834700000000394]</msg>
<status status="PASS" starttime="20201030 18:31:00.135" endtime="20201030 18:31:00.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.130" endtime="20201030 18:31:00.138"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:00.141" endtime="20201030 18:31:00.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.140" endtime="20201030 18:31:00.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.139" endtime="20201030 18:31:00.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.776" endtime="20201030 18:31:00.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:59.776" endtime="20201030 18:31:00.162"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.172" endtime="20201030 18:31:00.195"></status>
</kw>
<msg timestamp="20201030 18:31:00.195" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:00.170" endtime="20201030 18:31:00.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.198" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:00.196" endtime="20201030 18:31:00.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.199" endtime="20201030 18:31:00.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.167" endtime="20201030 18:31:00.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.165" endtime="20201030 18:31:00.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.208" endtime="20201030 18:31:00.495"></status>
</kw>
<msg timestamp="20201030 18:31:00.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020057764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020207194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:00.207" endtime="20201030 18:31:00.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020057764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020207194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:00.499" endtime="20201030 18:31:00.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.507" endtime="20201030 18:31:00.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.204" endtime="20201030 18:31:00.510"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.202" endtime="20201030 18:31:00.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:00.514" level="INFO">${PHILIP_RES} = [{'diff': 0.00014943000000000248}, {'diff': 0.00014941599999999944}, {'diff': 0.00014944499999999805}, {'diff': 0.0001494169999999989}, {'diff': 0.00014941599999999944}, {'diff': 0.0001494440000000020...</msg>
<status status="PASS" starttime="20201030 18:31:00.511" endtime="20201030 18:31:00.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:00.519" level="INFO">${RESULT} = {'diff': [0.00014943000000000248, 0.00014941599999999944, 0.00014944499999999805, 0.0001494169999999989, 0.00014941599999999944, 0.00014944400000000205, 0.0001494169999999989, 0.0001495139999999999, 0...</msg>
<status status="PASS" starttime="20201030 18:31:00.515" endtime="20201030 18:31:00.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.523" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:00.522" endtime="20201030 18:31:00.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.526" level="INFO">VALUE: [0.00014943000000000248, 0.00014941599999999944, 0.00014944499999999805, 0.0001494169999999989, 0.00014941599999999944, 0.00014944400000000205, 0.0001494169999999989, 0.0001495139999999999, 0.00014941599999999944, 0.00014943100000000195, 0.00014943099999999848, 0.00014944399999999858, 0.00014940299999999934, 0.00014943100000000195, 0.00014944500000000152, 0.0001493750000000002, 0.00014944500000000152, 0.00014941700000000238, 0.000149429999999999, 0.00014941599999999944, 0.00014943099999999848, 0.00014943100000000195, 0.00014941599999999944, 0.00014943099999999848, 0.00014944499999999805, 0.00014943000000000248, 0.00014943000000000248, 0.0001494169999999989, 0.00014943099999999848, 0.000149429999999999, 0.00014944400000000205, 0.0001494169999999989, 0.000149429999999999, 0.000149429999999999, 0.0001495139999999999, 0.0001494169999999989, 0.00014943000000000248, 0.00014943099999999848, 0.0001494169999999989, 0.00014941599999999944, 0.0001493750000000002, 0.0001494169999999989, 0.0001494169999999989, 0.000149429999999999, 0.0001494870000000037, 0.00014943100000000542, 0.00014945799999999815, 0.00014941599999999944, 0.0001494169999999989, 0.00014943099999999848]</msg>
<status status="PASS" starttime="20201030 18:31:00.524" endtime="20201030 18:31:00.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.519" endtime="20201030 18:31:00.527"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:00.531" endtime="20201030 18:31:00.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.529" endtime="20201030 18:31:00.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.528" endtime="20201030 18:31:00.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.163" endtime="20201030 18:31:00.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.163" endtime="20201030 18:31:00.551"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.560" endtime="20201030 18:31:00.584"></status>
</kw>
<msg timestamp="20201030 18:31:00.585" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:00.559" endtime="20201030 18:31:00.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.587" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:00.586" endtime="20201030 18:31:00.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.588" endtime="20201030 18:31:00.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.556" endtime="20201030 18:31:00.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.554" endtime="20201030 18:31:00.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.598" endtime="20201030 18:31:00.884"></status>
</kw>
<msg timestamp="20201030 18:31:00.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019878194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020039028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:00.596" endtime="20201030 18:31:00.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019878194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020039028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:00.888" endtime="20201030 18:31:00.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.896" endtime="20201030 18:31:00.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.594" endtime="20201030 18:31:00.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.592" endtime="20201030 18:31:00.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:00.903" level="INFO">${PHILIP_RES} = [{'diff': 0.00016083400000000206}, {'diff': 0.00016083400000000206}, {'diff': 0.00016081999999999902}, {'diff': 0.00016075000000000117}, {'diff': 0.00016081899999999955}, {'diff': 0.000160832999999999...</msg>
<status status="PASS" starttime="20201030 18:31:00.899" endtime="20201030 18:31:00.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:00.907" level="INFO">${RESULT} = {'diff': [0.00016083400000000206, 0.00016083400000000206, 0.00016081999999999902, 0.00016075000000000117, 0.00016081899999999955, 0.00016083299999999912, 0.00016083299999999912, 0.00016086100000000172...</msg>
<status status="PASS" starttime="20201030 18:31:00.904" endtime="20201030 18:31:00.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.911" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:00.910" endtime="20201030 18:31:00.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.914" level="INFO">VALUE: [0.00016083400000000206, 0.00016083400000000206, 0.00016081999999999902, 0.00016075000000000117, 0.00016081899999999955, 0.00016083299999999912, 0.00016083299999999912, 0.00016086100000000172, 0.00016083400000000206, 0.00016081999999999902, 0.0001608339999999986, 0.00016077700000000084, 0.00016080499999999998, 0.00016081899999999955, 0.00016083299999999912, 0.00016083299999999912, 0.00016080600000000292, 0.00016083400000000206, 0.00016090300000000043, 0.00016083299999999912, 0.00016081899999999955, 0.00016080499999999998, 0.00016079199999999988, 0.0001608339999999986, 0.00016084800000000163, 0.00016083300000000259, 0.00016083300000000259, 0.00016087499999999783, 0.00016083299999999912, 0.0001607780000000003, 0.00016080599999999945, 0.000160917, 0.0001608339999999986, 0.00016073599999999813, 0.00016081899999999955, 0.00016084699999999869, 0.00016083299999999912, 0.00016081999999999902, 0.00016081999999999902, 0.00016083299999999912, 0.00016083299999999912, 0.00016086099999999826, 0.00016080499999999998, 0.00016080599999999945, 0.00016084699999999869, 0.00016081999999999902, 0.00016082000000000596, 0.00016091700000000347, 0.00016081899999999955, 0.00016087499999999783]</msg>
<status status="PASS" starttime="20201030 18:31:00.912" endtime="20201030 18:31:00.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.908" endtime="20201030 18:31:00.916"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:00.920" endtime="20201030 18:31:00.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.918" endtime="20201030 18:31:00.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.917" endtime="20201030 18:31:00.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.552" endtime="20201030 18:31:00.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.552" endtime="20201030 18:31:00.941"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.949" endtime="20201030 18:31:00.974"></status>
</kw>
<msg timestamp="20201030 18:31:00.974" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:00.948" endtime="20201030 18:31:00.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:00.977" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:00.975" endtime="20201030 18:31:00.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.978" endtime="20201030 18:31:00.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.945" endtime="20201030 18:31:00.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.943" endtime="20201030 18:31:00.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:00.987" endtime="20201030 18:31:01.274"></status>
</kw>
<msg timestamp="20201030 18:31:01.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01911975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01929225, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:00.986" endtime="20201030 18:31:01.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01911975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01929225, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:01.278" endtime="20201030 18:31:01.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.286" endtime="20201030 18:31:01.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.983" endtime="20201030 18:31:01.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.981" endtime="20201030 18:31:01.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:01.292" level="INFO">${PHILIP_RES} = [{'diff': 0.00017249999999999904}, {'diff': 0.00017254099999999828}, {'diff': 0.0001725560000000008}, {'diff': 0.00017252799999999818}, {'diff': 0.0001725560000000008}, {'diff': 0.00017254200000000122...</msg>
<status status="PASS" starttime="20201030 18:31:01.289" endtime="20201030 18:31:01.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:01.297" level="INFO">${RESULT} = {'diff': [0.00017249999999999904, 0.00017254099999999828, 0.0001725560000000008, 0.00017252799999999818, 0.0001725560000000008, 0.00017254200000000122, 0.00017255599999999732, 0.00017254200000000122, ...</msg>
<status status="PASS" starttime="20201030 18:31:01.293" endtime="20201030 18:31:01.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.301" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:01.300" endtime="20201030 18:31:01.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.304" level="INFO">VALUE: [0.00017249999999999904, 0.00017254099999999828, 0.0001725560000000008, 0.00017252799999999818, 0.0001725560000000008, 0.00017254200000000122, 0.00017255599999999732, 0.00017254200000000122, 0.00017254199999999775, 0.00017255500000000132, 0.00017254200000000122, 0.0001725690000000009, 0.00017254200000000122, 0.00017248699999999895, 0.00017248599999999947, 0.00017254200000000122, 0.0001725560000000008, 0.00017254200000000122, 0.00017252799999999818, 0.00017254200000000122, 0.00017251400000000208, 0.00017254200000000122, 0.00017255500000000132, 0.0001725139999999986, 0.00017254100000000175, 0.00017252800000000165, 0.00017258399999999993, 0.0001725560000000008, 0.00017258399999999993, 0.00017254200000000122, 0.00017251400000000208, 0.0001725560000000008, 0.00017254100000000175, 0.00017252799999999818, 0.00017252700000000218, 0.00017255600000000426, 0.00017252700000000565, 0.0001725699999999969, 0.00017254099999999828, 0.0001725139999999986, 0.00017254100000000522, 0.0001725420000000047, 0.0001725269999999987, 0.00017252799999999818, 0.0001725970000000035, 0.00017257000000000383, 0.00017252700000000565, 0.00017252799999999818, 0.00017254099999999828, 0.00017255599999999732]</msg>
<status status="PASS" starttime="20201030 18:31:01.302" endtime="20201030 18:31:01.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.298" endtime="20201030 18:31:01.305"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:01.308" endtime="20201030 18:31:01.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.307" endtime="20201030 18:31:01.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.306" endtime="20201030 18:31:01.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.942" endtime="20201030 18:31:01.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:00.941" endtime="20201030 18:31:01.329"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.337" endtime="20201030 18:31:01.363"></status>
</kw>
<msg timestamp="20201030 18:31:01.363" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:01.336" endtime="20201030 18:31:01.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.365" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:01.364" endtime="20201030 18:31:01.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.366" endtime="20201030 18:31:01.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.333" endtime="20201030 18:31:01.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.331" endtime="20201030 18:31:01.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.376" endtime="20201030 18:31:01.682"></status>
</kw>
<msg timestamp="20201030 18:31:01.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018599042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018783583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:01.374" endtime="20201030 18:31:01.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018599042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018783583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:01.686" endtime="20201030 18:31:01.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.693" endtime="20201030 18:31:01.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.372" endtime="20201030 18:31:01.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.370" endtime="20201030 18:31:01.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:01.701" level="INFO">${PHILIP_RES} = [{'diff': 0.00018454099999999987}, {'diff': 0.00018463800000000086}, {'diff': 0.00018454199999999935}, {'diff': 0.00018458300000000205}, {'diff': 0.00018455600000000238}, {'diff': 0.000184570000000001...</msg>
<status status="PASS" starttime="20201030 18:31:01.698" endtime="20201030 18:31:01.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:01.705" level="INFO">${RESULT} = {'diff': [0.00018454099999999987, 0.00018463800000000086, 0.00018454199999999935, 0.00018458300000000205, 0.00018455600000000238, 0.00018457000000000195, 0.000184568999999999, 0.00018452799999999978, ...</msg>
<status status="PASS" starttime="20201030 18:31:01.702" endtime="20201030 18:31:01.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.709" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:01.708" endtime="20201030 18:31:01.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.711" level="INFO">VALUE: [0.00018454099999999987, 0.00018463800000000086, 0.00018454199999999935, 0.00018458300000000205, 0.00018455600000000238, 0.00018457000000000195, 0.000184568999999999, 0.00018452799999999978, 0.00018456999999999849, 0.00018463900000000033, 0.00018458399999999806, 0.00018455599999999892, 0.000184568999999999, 0.00018454199999999935, 0.00018455600000000238, 0.00018461099999999772, 0.00018454199999999935, 0.00018455599999999892, 0.00018455499999999944, 0.00018455599999999892, 0.00018458299999999858, 0.000184568999999999, 0.00018457000000000195, 0.00018459700000000162, 0.00018459700000000162, 0.00018459700000000162, 0.00018455499999999944, 0.000184568999999999, 0.00018454199999999935, 0.00018454099999999987, 0.000184568999999999, 0.00018449999999999717, 0.00018458300000000205, 0.00018463800000000086, 0.00018457000000000195, 0.00018455599999999545, 0.00018456900000000248, 0.00018457000000000195, 0.00018454100000000334, 0.00018454200000000281, 0.00018455499999999597, 0.0001845550000000029, 0.00018455600000000238, 0.00018457000000000195, 0.00018456899999999554, 0.00018455600000000238, 0.00018456999999999502, 0.00018456900000000248, 0.00018455599999999545, 0.00018456899999999554]</msg>
<status status="PASS" starttime="20201030 18:31:01.710" endtime="20201030 18:31:01.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.705" endtime="20201030 18:31:01.713"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:01.716" endtime="20201030 18:31:01.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.715" endtime="20201030 18:31:01.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.714" endtime="20201030 18:31:01.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.330" endtime="20201030 18:31:01.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.329" endtime="20201030 18:31:01.737"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.745" endtime="20201030 18:31:01.773"></status>
</kw>
<msg timestamp="20201030 18:31:01.773" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:01.744" endtime="20201030 18:31:01.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:01.776" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:01.774" endtime="20201030 18:31:01.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.777" endtime="20201030 18:31:01.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.741" endtime="20201030 18:31:01.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.739" endtime="20201030 18:31:01.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:01.786" endtime="20201030 18:31:02.073"></status>
</kw>
<msg timestamp="20201030 18:31:02.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019600889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01979775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:01.784" endtime="20201030 18:31:02.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019600889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01979775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:02.077" endtime="20201030 18:31:02.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.084" endtime="20201030 18:31:02.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.782" endtime="20201030 18:31:02.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.780" endtime="20201030 18:31:02.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:02.091" level="INFO">${PHILIP_RES} = [{'diff': 0.00019686099999999956}, {'diff': 0.00019693100000000088}, {'diff': 0.00019688900000000217}, {'diff': 0.00019687499999999913}, {'diff': 0.00019690299999999827}, {'diff': 0.000196901999999998...</msg>
<status status="PASS" starttime="20201030 18:31:02.088" endtime="20201030 18:31:02.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:02.095" level="INFO">${RESULT} = {'diff': [0.00019686099999999956, 0.00019693100000000088, 0.00019688900000000217, 0.00019687499999999913, 0.00019690299999999827, 0.0001969019999999988, 0.00019690299999999827, 0.00019690300000000174,...</msg>
<status status="PASS" starttime="20201030 18:31:02.092" endtime="20201030 18:31:02.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.099" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:02.098" endtime="20201030 18:31:02.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.102" level="INFO">VALUE: [0.00019686099999999956, 0.00019693100000000088, 0.00019688900000000217, 0.00019687499999999913, 0.00019690299999999827, 0.0001969019999999988, 0.00019690299999999827, 0.00019690300000000174, 0.00019691600000000184, 0.0001968889999999987, 0.0001968889999999987, 0.00019691600000000184, 0.0001969300000000014, 0.00019690300000000174, 0.00019690299999999827, 0.00019690299999999827, 0.00019688900000000217, 0.00019686100000000303, 0.0001969019999999988, 0.00019686099999999956, 0.00019690299999999827, 0.00019687499999999913, 0.00019690300000000174, 0.00019690300000000174, 0.0001968889999999987, 0.0001969019999999988, 0.0001969170000000013, 0.00019690300000000174, 0.0001968889999999987, 0.00019690299999999827, 0.0001969030000000052, 0.00019688799999999923, 0.0001969439999999975, 0.00019690299999999827, 0.0001968889999999987, 0.00019690299999999827, 0.00019687499999999913, 0.000196847, 0.00019695800000000402, 0.00019687500000000607, 0.000196847, 0.00019691699999999784, 0.00019691699999999784, 0.0001968889999999987, 0.00019691699999999784, 0.00019690299999999827, 0.0001968889999999987, 0.0001968889999999987, 0.00019695800000000402, 0.00019691700000000478]</msg>
<status status="PASS" starttime="20201030 18:31:02.100" endtime="20201030 18:31:02.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.096" endtime="20201030 18:31:02.104"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:02.107" endtime="20201030 18:31:02.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.106" endtime="20201030 18:31:02.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.105" endtime="20201030 18:31:02.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.738" endtime="20201030 18:31:02.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:01.737" endtime="20201030 18:31:02.128"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.136" endtime="20201030 18:31:02.165"></status>
</kw>
<msg timestamp="20201030 18:31:02.165" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:02.135" endtime="20201030 18:31:02.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.168" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:02.166" endtime="20201030 18:31:02.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.169" endtime="20201030 18:31:02.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.132" endtime="20201030 18:31:02.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.130" endtime="20201030 18:31:02.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.178" endtime="20201030 18:31:02.481"></status>
</kw>
<msg timestamp="20201030 18:31:02.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018648028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018857556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:02.177" endtime="20201030 18:31:02.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018648028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018857556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:02.485" endtime="20201030 18:31:02.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.492" endtime="20201030 18:31:02.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.174" endtime="20201030 18:31:02.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.172" endtime="20201030 18:31:02.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:02.499" level="INFO">${PHILIP_RES} = [{'diff': 0.0002095280000000005}, {'diff': 0.00020949999999999788}, {'diff': 0.00020954200000000006}, {'diff': 0.0002095280000000005}, {'diff': 0.00020950000000000135}, {'diff': 0.00020954200000000006...</msg>
<status status="PASS" starttime="20201030 18:31:02.496" endtime="20201030 18:31:02.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:02.504" level="INFO">${RESULT} = {'diff': [0.0002095280000000005, 0.00020949999999999788, 0.00020954200000000006, 0.0002095280000000005, 0.00020950000000000135, 0.00020954200000000006, 0.00020956899999999973, 0.00020951400000000092, ...</msg>
<status status="PASS" starttime="20201030 18:31:02.500" endtime="20201030 18:31:02.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.508" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:02.507" endtime="20201030 18:31:02.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.510" level="INFO">VALUE: [0.0002095280000000005, 0.00020949999999999788, 0.00020954200000000006, 0.0002095280000000005, 0.00020950000000000135, 0.00020954200000000006, 0.00020956899999999973, 0.00020951400000000092, 0.0002095560000000031, 0.0002095280000000005, 0.00020954200000000006, 0.00020956899999999973, 0.0002095699999999992, 0.00020948600000000178, 0.00020954200000000006, 0.0002095410000000006, 0.0002095699999999992, 0.0002095410000000006, 0.00020954200000000006, 0.00020955599999999963, 0.0002095280000000005, 0.00020954200000000006, 0.00020947300000000169, 0.00020954200000000006, 0.0002095410000000006, 0.00020955599999999963, 0.0002095549999999967, 0.0002095699999999992, 0.0002095410000000006, 0.00020955599999999963, 0.00020954200000000006, 0.00020955599999999963, 0.00020954200000000006, 0.00020961099999999844, 0.00020954200000000006, 0.0002095410000000006, 0.00020950000000000135, 0.0002095410000000006, 0.00020954200000000006, 0.0002095410000000006, 0.00020947300000000169, 0.0002095280000000005, 0.00020961099999999844, 0.00020955599999999963, 0.00020955500000000016, 0.00020954200000000006, 0.00020955500000000016, 0.00020954200000000006, 0.00020959699999999887, 0.00020958300000000624]</msg>
<status status="PASS" starttime="20201030 18:31:02.509" endtime="20201030 18:31:02.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.505" endtime="20201030 18:31:02.512"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:02.516" endtime="20201030 18:31:02.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.514" endtime="20201030 18:31:02.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.513" endtime="20201030 18:31:02.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.129" endtime="20201030 18:31:02.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.128" endtime="20201030 18:31:02.536"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.545" endtime="20201030 18:31:02.574"></status>
</kw>
<msg timestamp="20201030 18:31:02.575" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:02.543" endtime="20201030 18:31:02.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.577" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:02.576" endtime="20201030 18:31:02.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.578" endtime="20201030 18:31:02.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.540" endtime="20201030 18:31:02.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.539" endtime="20201030 18:31:02.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.587" endtime="20201030 18:31:02.873"></status>
</kw>
<msg timestamp="20201030 18:31:02.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018697833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018920319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:02.586" endtime="20201030 18:31:02.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018697833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018920319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:02.877" endtime="20201030 18:31:02.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.885" endtime="20201030 18:31:02.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.583" endtime="20201030 18:31:02.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.581" endtime="20201030 18:31:02.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:02.892" level="INFO">${PHILIP_RES} = [{'diff': 0.0002224860000000009}, {'diff': 0.00022250000000000048}, {'diff': 0.0002224860000000009}, {'diff': 0.000222499999999997}, {'diff': 0.00022250000000000048}, {'diff': 0.00022251400000000005},...</msg>
<status status="PASS" starttime="20201030 18:31:02.889" endtime="20201030 18:31:02.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:02.896" level="INFO">${RESULT} = {'diff': [0.0002224860000000009, 0.00022250000000000048, 0.0002224860000000009, 0.000222499999999997, 0.00022250000000000048, 0.00022251400000000005, 0.00022251400000000005, 0.00022251400000000005, 0....</msg>
<status status="PASS" starttime="20201030 18:31:02.893" endtime="20201030 18:31:02.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.900" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:02.899" endtime="20201030 18:31:02.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.903" level="INFO">VALUE: [0.0002224860000000009, 0.00022250000000000048, 0.0002224860000000009, 0.000222499999999997, 0.00022250000000000048, 0.00022251400000000005, 0.00022251400000000005, 0.00022251400000000005, 0.00022250000000000048, 0.00022250000000000048, 0.00022248700000000038, 0.00022250000000000048, 0.00022248599999999744, 0.00022251400000000005, 0.0002224860000000009, 0.000222499999999997, 0.00022251400000000005, 0.0002224860000000009, 0.0002224860000000009, 0.00022251400000000005, 0.00022250000000000048, 0.00022252700000000014, 0.00022250000000000048, 0.00022250000000000048, 0.00022250000000000048, 0.00022250000000000048, 0.000222499999999997, 0.00022250000000000048, 0.00022251400000000005, 0.00022250000000000048, 0.00022250000000000048, 0.00022251300000000057, 0.00022250000000000048, 0.00022252799999999961, 0.00022250000000000048, 0.0002224860000000009, 0.00022250000000000048, 0.00022252799999999961, 0.00022250000000000048, 0.0002225139999999931, 0.00022254199999999918, 0.00022248700000000038, 0.00022250000000000048, 0.00022250000000000048, 0.00022247200000000134, 0.00022251400000000005, 0.0002224860000000009, 0.00022250000000000048, 0.00022251400000000005, 0.00022250000000000048]</msg>
<status status="PASS" starttime="20201030 18:31:02.901" endtime="20201030 18:31:02.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.897" endtime="20201030 18:31:02.904"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:02.908" endtime="20201030 18:31:02.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.906" endtime="20201030 18:31:02.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.905" endtime="20201030 18:31:02.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.537" endtime="20201030 18:31:02.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.537" endtime="20201030 18:31:02.928"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.937" endtime="20201030 18:31:02.967"></status>
</kw>
<msg timestamp="20201030 18:31:02.968" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:02.935" endtime="20201030 18:31:02.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.970" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:02.969" endtime="20201030 18:31:02.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.971" endtime="20201030 18:31:02.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.933" endtime="20201030 18:31:02.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.931" endtime="20201030 18:31:02.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.980" endtime="20201030 18:31:03.266"></status>
</kw>
<msg timestamp="20201030 18:31:03.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019638, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01987375, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:31:02.979" endtime="20201030 18:31:03.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019638, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01987375, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:31:03.270" endtime="20201030 18:31:03.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.277" endtime="20201030 18:31:03.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.976" endtime="20201030 18:31:03.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.975" endtime="20201030 18:31:03.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:03.284" level="INFO">${PHILIP_RES} = [{'diff': 0.00023574999999999985}, {'diff': 0.000235777999999999}, {'diff': 0.00023576299999999994}, {'diff': 0.00023576399999999942}, {'diff': 0.000235777999999999}, {'diff': 0.00023582000000000117},...</msg>
<status status="PASS" starttime="20201030 18:31:03.281" endtime="20201030 18:31:03.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:03.288" level="INFO">${RESULT} = {'diff': [0.00023574999999999985, 0.000235777999999999, 0.00023576299999999994, 0.00023576399999999942, 0.000235777999999999, 0.00023582000000000117, 0.00023574999999999985, 0.0002357090000000006, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:03.285" endtime="20201030 18:31:03.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.292" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:03.291" endtime="20201030 18:31:03.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.295" level="INFO">VALUE: [0.00023574999999999985, 0.000235777999999999, 0.00023576299999999994, 0.00023576399999999942, 0.000235777999999999, 0.00023582000000000117, 0.00023574999999999985, 0.0002357090000000006, 0.00023569499999999757, 0.00023574999999999985, 0.00023579099999999908, 0.000235777999999999, 0.00023576399999999942, 0.00023576399999999942, 0.00023576399999999942, 0.000235777999999999, 0.00023576399999999942, 0.000235777999999999, 0.000235777999999999, 0.00023576399999999942, 0.000235777999999999, 0.00023579199999999856, 0.00023577699999999951, 0.000235777999999999, 0.000235777999999999, 0.00023579200000000203, 0.00023579100000000602, 0.00023576400000000636, 0.000235777999999999, 0.000235777999999999, 0.0002357220000000007, 0.00023576399999999942, 0.0002357920000000055, 0.000235777999999999, 0.000235777999999999, 0.00023576299999999994, 0.00023576399999999942, 0.000235777999999999, 0.000235777999999999, 0.00023579099999999908, 0.0002357920000000055, 0.00023579199999999856, 0.00023576399999999942, 0.00023580499999999865, 0.00023576399999999942, 0.00023579199999999856, 0.000235777999999999, 0.00023576299999999994, 0.00023576399999999942, 0.000235777999999999]</msg>
<status status="PASS" starttime="20201030 18:31:03.294" endtime="20201030 18:31:03.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.289" endtime="20201030 18:31:03.300"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:03.304" endtime="20201030 18:31:03.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.302" endtime="20201030 18:31:03.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.301" endtime="20201030 18:31:03.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.929" endtime="20201030 18:31:03.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.929" endtime="20201030 18:31:03.325"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.333" endtime="20201030 18:31:03.364"></status>
</kw>
<msg timestamp="20201030 18:31:03.365" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:03.332" endtime="20201030 18:31:03.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.367" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:03.366" endtime="20201030 18:31:03.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.368" endtime="20201030 18:31:03.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.329" endtime="20201030 18:31:03.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.327" endtime="20201030 18:31:03.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.377" endtime="20201030 18:31:03.665"></status>
</kw>
<msg timestamp="20201030 18:31:03.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0189605, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019209847, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:03.376" endtime="20201030 18:31:03.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0189605, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019209847, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:03.669" endtime="20201030 18:31:03.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.677" endtime="20201030 18:31:03.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.373" endtime="20201030 18:31:03.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.372" endtime="20201030 18:31:03.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:03.683" level="INFO">${PHILIP_RES} = [{'diff': 0.000249346999999997}, {'diff': 0.000249361}, {'diff': 0.00024934700000000046}, {'diff': 0.000249361}, {'diff': 0.00024938900000000264}, {'diff': 0.000249361}, {'diff': 0.000249361}, {'diff'...</msg>
<status status="PASS" starttime="20201030 18:31:03.680" endtime="20201030 18:31:03.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:03.688" level="INFO">${RESULT} = {'diff': [0.000249346999999997, 0.000249361, 0.00024934700000000046, 0.000249361, 0.00024938900000000264, 0.000249361, 0.000249361, 0.00024937500000000307, 0.00024934700000000046, 0.000249319000000001...</msg>
<status status="PASS" starttime="20201030 18:31:03.684" endtime="20201030 18:31:03.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.692" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:03.691" endtime="20201030 18:31:03.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.695" level="INFO">VALUE: [0.000249346999999997, 0.000249361, 0.00024934700000000046, 0.000249361, 0.00024938900000000264, 0.000249361, 0.000249361, 0.00024937500000000307, 0.00024934700000000046, 0.0002493190000000013, 0.000249361, 0.000249361, 0.0002493749999999996, 0.000249361, 0.00024934700000000046, 0.00024934799999999993, 0.0002493619999999995, 0.000249361, 0.0002493749999999996, 0.000249361, 0.000249361, 0.000249361, 0.00024938899999999917, 0.00024938900000000264, 0.0002494169999999983, 0.0002493749999999996, 0.00024936099999999656, 0.000249264000000006, 0.00024937500000000307, 0.00024931899999999785, 0.0002493470000000039, 0.0002492779999999986, 0.000249346999999997, 0.0002493480000000034, 0.00024937499999999613, 0.0002493470000000039, 0.0002493470000000039, 0.000249346999999997, 0.0002493610000000035, 0.00024936099999999656, 0.00024934799999999646, 0.0002493610000000035, 0.00024936199999999603, 0.0002493049999999983, 0.00024937500000000307, 0.00024937499999999613, 0.0002494170000000018, 0.000249346999999997, 0.00024937499999999613, 0.0002493610000000035]</msg>
<status status="PASS" starttime="20201030 18:31:03.693" endtime="20201030 18:31:03.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.689" endtime="20201030 18:31:03.696"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:03.700" endtime="20201030 18:31:03.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.698" endtime="20201030 18:31:03.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.697" endtime="20201030 18:31:03.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.326" endtime="20201030 18:31:03.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.325" endtime="20201030 18:31:03.720"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.729" endtime="20201030 18:31:03.762"></status>
</kw>
<msg timestamp="20201030 18:31:03.763" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:03.727" endtime="20201030 18:31:03.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:03.765" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:03.764" endtime="20201030 18:31:03.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.766" endtime="20201030 18:31:03.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.725" endtime="20201030 18:31:03.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.723" endtime="20201030 18:31:03.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:03.775" endtime="20201030 18:31:04.061"></status>
</kw>
<msg timestamp="20201030 18:31:04.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018826694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019089958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:03.774" endtime="20201030 18:31:04.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018826694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019089958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:04.065" endtime="20201030 18:31:04.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.073" endtime="20201030 18:31:04.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.771" endtime="20201030 18:31:04.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.769" endtime="20201030 18:31:04.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:04.080" level="INFO">${PHILIP_RES} = [{'diff': 0.00026326399999999917}, {'diff': 0.00026327700000000273}, {'diff': 0.00026326400000000263}, {'diff': 0.00026323700000000297}, {'diff': 0.0002632499999999996}, {'diff': 0.0002633190000000014...</msg>
<status status="PASS" starttime="20201030 18:31:04.077" endtime="20201030 18:31:04.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:04.084" level="INFO">${RESULT} = {'diff': [0.00026326399999999917, 0.00026327700000000273, 0.00026326400000000263, 0.00026323700000000297, 0.0002632499999999996, 0.00026331900000000144, 0.0002632499999999996, 0.0002632499999999996, 0...</msg>
<status status="PASS" starttime="20201030 18:31:04.081" endtime="20201030 18:31:04.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.088" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:04.087" endtime="20201030 18:31:04.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.091" level="INFO">VALUE: [0.00026326399999999917, 0.00026327700000000273, 0.00026326400000000263, 0.00026323700000000297, 0.0002632499999999996, 0.00026331900000000144, 0.0002632499999999996, 0.0002632499999999996, 0.00026326399999999917, 0.0002633049999999984, 0.00026325000000000306, 0.0002632920000000018, 0.000263236, 0.0002632499999999996, 0.0002632499999999996, 0.00026327799999999874, 0.0002632080000000009, 0.00026326399999999917, 0.00026326399999999917, 0.000263236, 0.0002631940000000013, 0.00026326399999999917, 0.00026326399999999917, 0.00026327799999999874, 0.00026327799999999874, 0.00026327799999999874, 0.00026331999999999744, 0.0002632919999999983, 0.0002632629999999997, 0.00026327699999999926, 0.0002632369999999995, 0.00026326399999999917, 0.00026326399999999917, 0.00026326399999999917, 0.0002631950000000008, 0.0002632640000000061, 0.0002632499999999996, 0.0002632499999999996, 0.00026326399999999917, 0.0002633330000000045, 0.00026326399999999917, 0.00026333299999999754, 0.0002633049999999984, 0.00026326399999999917, 0.00026326399999999917, 0.00026326399999999917, 0.000263236, 0.0002632499999999996, 0.00026322200000000046, 0.00026327799999999874]</msg>
<status status="PASS" starttime="20201030 18:31:04.090" endtime="20201030 18:31:04.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.085" endtime="20201030 18:31:04.092"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:04.096" endtime="20201030 18:31:04.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.094" endtime="20201030 18:31:04.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.093" endtime="20201030 18:31:04.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.721" endtime="20201030 18:31:04.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:03.721" endtime="20201030 18:31:04.117"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.125" endtime="20201030 18:31:04.159"></status>
</kw>
<msg timestamp="20201030 18:31:04.160" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:04.123" endtime="20201030 18:31:04.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.162" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:04.161" endtime="20201030 18:31:04.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.164" endtime="20201030 18:31:04.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.121" endtime="20201030 18:31:04.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.119" endtime="20201030 18:31:04.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.173" endtime="20201030 18:31:04.458"></status>
</kw>
<msg timestamp="20201030 18:31:04.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019620611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019898069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:04.171" endtime="20201030 18:31:04.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019620611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019898069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:04.462" endtime="20201030 18:31:04.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.470" endtime="20201030 18:31:04.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.169" endtime="20201030 18:31:04.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.167" endtime="20201030 18:31:04.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:04.476" level="INFO">${PHILIP_RES} = [{'diff': 0.00027745800000000126}, {'diff': 0.0002774579999999978}, {'diff': 0.00027747200000000083}, {'diff': 0.00027751399999999954}, {'diff': 0.00027747199999999736}, {'diff': 0.0002774860000000004...</msg>
<status status="PASS" starttime="20201030 18:31:04.473" endtime="20201030 18:31:04.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:04.481" level="INFO">${RESULT} = {'diff': [0.00027745800000000126, 0.0002774579999999978, 0.00027747200000000083, 0.00027751399999999954, 0.00027747199999999736, 0.0002774860000000004, 0.00027745900000000073, 0.00027747200000000083, ...</msg>
<status status="PASS" starttime="20201030 18:31:04.477" endtime="20201030 18:31:04.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.485" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:04.484" endtime="20201030 18:31:04.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.487" level="INFO">VALUE: [0.00027745800000000126, 0.0002774579999999978, 0.00027747200000000083, 0.00027751399999999954, 0.00027747199999999736, 0.0002774860000000004, 0.00027745900000000073, 0.00027747200000000083, 0.00027747199999999736, 0.0002774730000000003, 0.00027751399999999954, 0.00027747200000000083, 0.00027747200000000083, 0.00027745800000000126, 0.00027742999999999865, 0.00027745900000000073, 0.0002774860000000004, 0.00027747200000000083, 0.00027744500000000116, 0.00027747199999999736, 0.00027747200000000083, 0.0002774309999999981, 0.0002774730000000003, 0.00027747200000000083, 0.00027747200000000083, 0.0002774730000000003, 0.00027738899999999594, 0.00027747200000000083, 0.00027745900000000073, 0.00027749999999999997, 0.0002774860000000004, 0.0002774730000000003, 0.0002774860000000004, 0.0002774719999999939, 0.0002774029999999955, 0.00027747200000000083, 0.0002775549999999988, 0.00027745900000000073, 0.00027745800000000126, 0.000277417000000002, 0.00027748699999999987, 0.00027745800000000126, 0.00027745800000000126, 0.00027749999999999997, 0.0002774719999999939, 0.0002774440000000017, 0.00027745800000000126, 0.0002774300000000021, 0.00027751399999999954, 0.00027747200000000083]</msg>
<status status="PASS" starttime="20201030 18:31:04.486" endtime="20201030 18:31:04.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.481" endtime="20201030 18:31:04.489"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:04.493" endtime="20201030 18:31:04.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.492" endtime="20201030 18:31:04.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.490" endtime="20201030 18:31:04.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.117" endtime="20201030 18:31:04.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.117" endtime="20201030 18:31:04.514"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.522" endtime="20201030 18:31:04.558"></status>
</kw>
<msg timestamp="20201030 18:31:04.559" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:04.521" endtime="20201030 18:31:04.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.561" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:04.560" endtime="20201030 18:31:04.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.562" endtime="20201030 18:31:04.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.518" endtime="20201030 18:31:04.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.516" endtime="20201030 18:31:04.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.571" endtime="20201030 18:31:04.857"></status>
</kw>
<msg timestamp="20201030 18:31:04.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01902575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019317722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:04.570" endtime="20201030 18:31:04.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01902575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019317722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:04.861" endtime="20201030 18:31:04.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.868" endtime="20201030 18:31:04.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.567" endtime="20201030 18:31:04.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.565" endtime="20201030 18:31:04.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:04.875" level="INFO">${PHILIP_RES} = [{'diff': 0.000291971999999998}, {'diff': 0.00029201400000000016}, {'diff': 0.00029198599999999755}, {'diff': 0.0002919730000000009}, {'diff': 0.0002920000000000006}, {'diff': 0.0002920419999999993}, ...</msg>
<status status="PASS" starttime="20201030 18:31:04.872" endtime="20201030 18:31:04.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:04.880" level="INFO">${RESULT} = {'diff': [0.000291971999999998, 0.00029201400000000016, 0.00029198599999999755, 0.0002919730000000009, 0.0002920000000000006, 0.0002920419999999993, 0.00029201400000000016, 0.0002920419999999993, 0.00...</msg>
<status status="PASS" starttime="20201030 18:31:04.876" endtime="20201030 18:31:04.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.884" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:04.883" endtime="20201030 18:31:04.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.887" level="INFO">VALUE: [0.000291971999999998, 0.00029201400000000016, 0.00029198599999999755, 0.0002919730000000009, 0.0002920000000000006, 0.0002920419999999993, 0.00029201400000000016, 0.0002920419999999993, 0.000291986000000001, 0.0002919999999999971, 0.000291986000000001, 0.0002920000000000006, 0.00029197200000000145, 0.000291986000000001, 0.0002920000000000006, 0.0002919870000000005, 0.00029201400000000016, 0.000291986000000001, 0.000291971999999998, 0.000291986000000001, 0.00029198599999999755, 0.00029201400000000016, 0.000291971999999998, 0.0002919439999999954, 0.000291986000000001, 0.0002920000000000006, 0.00029198699999999356, 0.000291986000000001, 0.000291986000000001, 0.0002920000000000006, 0.000291986000000001, 0.0002919730000000009, 0.0002919730000000009, 0.0002919859999999941, 0.00029201400000000016, 0.000291986000000001, 0.00029197200000000145, 0.000291986000000001, 0.0002920000000000006, 0.00029201400000000016, 0.0002920000000000006, 0.0002920000000000006, 0.000291986000000001, 0.0002920000000000006, 0.00029190199999999666, 0.0002920000000000006, 0.00029197200000000145, 0.000291986000000001, 0.0002920000000000006, 0.0002920000000000006]</msg>
<status status="PASS" starttime="20201030 18:31:04.885" endtime="20201030 18:31:04.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.881" endtime="20201030 18:31:04.888"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:04.892" endtime="20201030 18:31:04.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.890" endtime="20201030 18:31:04.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.889" endtime="20201030 18:31:04.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.515" endtime="20201030 18:31:04.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.514" endtime="20201030 18:31:04.912"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.921" endtime="20201030 18:31:04.957"></status>
</kw>
<msg timestamp="20201030 18:31:04.958" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:04.919" endtime="20201030 18:31:04.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:04.960" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:04.959" endtime="20201030 18:31:04.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.961" endtime="20201030 18:31:04.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.916" endtime="20201030 18:31:04.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.915" endtime="20201030 18:31:04.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:04.970" endtime="20201030 18:31:05.264"></status>
</kw>
<msg timestamp="20201030 18:31:05.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018679069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018985889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:04.969" endtime="20201030 18:31:05.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018679069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018985889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:05.272" endtime="20201030 18:31:05.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.290" endtime="20201030 18:31:05.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.966" endtime="20201030 18:31:05.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.964" endtime="20201030 18:31:05.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:05.305" level="INFO">${PHILIP_RES} = [{'diff': 0.0003068199999999993}, {'diff': 0.0003068199999999993}, {'diff': 0.0003068199999999993}, {'diff': 0.0003067910000000007}, {'diff': 0.0003068200000000028}, {'diff': 0.0003068329999999994}, {...</msg>
<status status="PASS" starttime="20201030 18:31:05.299" endtime="20201030 18:31:05.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:05.314" level="INFO">${RESULT} = {'diff': [0.0003068199999999993, 0.0003068199999999993, 0.0003068199999999993, 0.0003067910000000007, 0.0003068200000000028, 0.0003068329999999994, 0.0003068199999999993, 0.0003068329999999994, 0.0003...</msg>
<status status="PASS" starttime="20201030 18:31:05.307" endtime="20201030 18:31:05.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.323" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:05.321" endtime="20201030 18:31:05.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.329" level="INFO">VALUE: [0.0003068199999999993, 0.0003068199999999993, 0.0003068199999999993, 0.0003067910000000007, 0.0003068200000000028, 0.0003068329999999994, 0.0003068199999999993, 0.0003068329999999994, 0.0003068339999999989, 0.00030681899999999984, 0.0003068200000000028, 0.000306861000000002, 0.0003068339999999989, 0.00030681899999999984, 0.0003068339999999989, 0.0003068190000000033, 0.0003068199999999993, 0.000306846999999999, 0.000306846999999999, 0.0003068339999999989, 0.00030681899999999984, 0.0003068200000000028, 0.00030686099999999855, 0.00030680599999999975, 0.00030680500000000027, 0.0003068199999999993, 0.00030681899999999984, 0.0003068199999999993, 0.0003068749999999981, 0.0003068199999999993, 0.00030681899999999984, 0.0003068339999999989, 0.00030681899999999984, 0.0003068199999999993, 0.0003068199999999993, 0.00030681899999999984, 0.00030680599999999975, 0.00030681899999999984, 0.00030680599999999975, 0.00030681899999999984, 0.0003068199999999993, 0.0003068470000000059, 0.0003068340000000058, 0.00030681899999999984, 0.00030676400000000104, 0.0003068329999999994, 0.0003068199999999993, 0.0003068329999999994, 0.0003068329999999994, 0.00030681899999999984]</msg>
<status status="PASS" starttime="20201030 18:31:05.326" endtime="20201030 18:31:05.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.316" endtime="20201030 18:31:05.332"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:05.337" endtime="20201030 18:31:05.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.336" endtime="20201030 18:31:05.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.334" endtime="20201030 18:31:05.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.913" endtime="20201030 18:31:05.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:04.913" endtime="20201030 18:31:05.358"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.367" endtime="20201030 18:31:05.404"></status>
</kw>
<msg timestamp="20201030 18:31:05.405" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:05.365" endtime="20201030 18:31:05.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.407" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:05.406" endtime="20201030 18:31:05.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.408" endtime="20201030 18:31:05.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.362" endtime="20201030 18:31:05.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.361" endtime="20201030 18:31:05.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.418" endtime="20201030 18:31:05.704"></status>
</kw>
<msg timestamp="20201030 18:31:05.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019729042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020050972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:05.416" endtime="20201030 18:31:05.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019729042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020050972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:05.707" endtime="20201030 18:31:05.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.715" endtime="20201030 18:31:05.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.413" endtime="20201030 18:31:05.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.412" endtime="20201030 18:31:05.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:05.722" level="INFO">${PHILIP_RES} = [{'diff': 0.0003219300000000015}, {'diff': 0.00032199999999999937}, {'diff': 0.00032197200000000023}, {'diff': 0.00032190300000000185}, {'diff': 0.00032195900000000013}, {'diff': 0.0003219859999999998...</msg>
<status status="PASS" starttime="20201030 18:31:05.718" endtime="20201030 18:31:05.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:05.726" level="INFO">${RESULT} = {'diff': [0.0003219300000000015, 0.00032199999999999937, 0.00032197200000000023, 0.00032190300000000185, 0.00032195900000000013, 0.0003219859999999998, 0.00032194500000000056, 0.00032197200000000023, ...</msg>
<status status="PASS" starttime="20201030 18:31:05.723" endtime="20201030 18:31:05.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.730" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:05.729" endtime="20201030 18:31:05.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.732" level="INFO">VALUE: [0.0003219300000000015, 0.00032199999999999937, 0.00032197200000000023, 0.00032190300000000185, 0.00032195900000000013, 0.0003219859999999998, 0.00032194500000000056, 0.00032197200000000023, 0.0003219170000000014, 0.0003219859999999998, 0.00032197200000000023, 0.00032197200000000023, 0.000321931000000001, 0.00032197200000000023, 0.00032201299999999947, 0.00032197200000000023, 0.00032195800000000066, 0.0003220279999999985, 0.00032195800000000066, 0.00032197200000000023, 0.00032198599999999633, 0.00032195800000000413, 0.00032198700000000274, 0.00032197199999999676, 0.0003219720000000037, 0.0003219730000000032, 0.0003220549999999947, 0.00032195899999999666, 0.00032195800000000413, 0.0003219579999999972, 0.00032197299999999623, 0.0003219720000000037, 0.00032197299999999623, 0.0003219579999999972, 0.00032198600000000327, 0.0003219730000000032, 0.0003219999999999959, 0.0003219720000000037, 0.00032195800000000413, 0.00032197199999999676, 0.00032198700000000274, 0.00032195800000000413, 0.0003219579999999972, 0.0003219730000000032, 0.0003219720000000037, 0.00032198599999999633, 0.0003219579999999972, 0.00032195800000000413, 0.00032197199999999676, 0.000322028000000002]</msg>
<status status="PASS" starttime="20201030 18:31:05.731" endtime="20201030 18:31:05.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.726" endtime="20201030 18:31:05.735"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:05.738" endtime="20201030 18:31:05.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.737" endtime="20201030 18:31:05.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.736" endtime="20201030 18:31:05.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.359" endtime="20201030 18:31:05.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.359" endtime="20201030 18:31:05.759"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.770" endtime="20201030 18:31:05.808"></status>
</kw>
<msg timestamp="20201030 18:31:05.809" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:05.767" endtime="20201030 18:31:05.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.811" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:05.810" endtime="20201030 18:31:05.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.813" endtime="20201030 18:31:05.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.763" endtime="20201030 18:31:05.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.761" endtime="20201030 18:31:05.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:05.824" endtime="20201030 18:31:06.129"></status>
</kw>
<msg timestamp="20201030 18:31:06.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021409653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021747069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:05.823" endtime="20201030 18:31:06.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021409653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021747069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:06.138" endtime="20201030 18:31:06.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.149" endtime="20201030 18:31:06.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.820" endtime="20201030 18:31:06.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.817" endtime="20201030 18:31:06.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:06.156" level="INFO">${PHILIP_RES} = [{'diff': 0.0003374160000000001}, {'diff': 0.0003374450000000022}, {'diff': 0.0003373749999999974}, {'diff': 0.0003374299999999997}, {'diff': 0.0003374299999999997}, {'diff': 0.0003374169999999996}, {...</msg>
<status status="PASS" starttime="20201030 18:31:06.153" endtime="20201030 18:31:06.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:06.161" level="INFO">${RESULT} = {'diff': [0.0003374160000000001, 0.0003374450000000022, 0.0003373749999999974, 0.0003374299999999997, 0.0003374299999999997, 0.0003374169999999996, 0.0003374169999999996, 0.0003374440000000027, 0.0003...</msg>
<status status="PASS" starttime="20201030 18:31:06.157" endtime="20201030 18:31:06.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.166" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:06.165" endtime="20201030 18:31:06.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.168" level="INFO">VALUE: [0.0003374160000000001, 0.0003374450000000022, 0.0003373749999999974, 0.0003374299999999997, 0.0003374299999999997, 0.0003374169999999996, 0.0003374169999999996, 0.0003374440000000027, 0.0003374310000000026, 0.00033743099999999915, 0.0003374579999999988, 0.00033737500000000087, 0.00033743099999999915, 0.0003374310000000026, 0.0003374580000000023, 0.0003374160000000001, 0.0003374160000000001, 0.0003374730000000048, 0.00033744399999999924, 0.0003374299999999997, 0.00033748599999999795, 0.00033743099999999915, 0.00033747299999999786, 0.0003374160000000001, 0.0003374169999999996, 0.0003374449999999987, 0.0003374169999999996, 0.000337403, 0.0003374449999999987, 0.00033744500000000566, 0.00033745800000000575, 0.0003374299999999997, 0.00033738900000000044, 0.00033743099999999915, 0.0003374299999999997, 0.0003374999999999975, 0.00033743099999999915, 0.00033748599999999795, 0.00033744399999999924, 0.0003374579999999988, 0.00033743099999999915, 0.0003373610000000013, 0.0003374160000000001, 0.0003374299999999997, 0.00033743099999999915, 0.0003374169999999996, 0.0003374160000000001, 0.00033744399999999924, 0.00033743099999999915, 0.0003374449999999987]</msg>
<status status="PASS" starttime="20201030 18:31:06.167" endtime="20201030 18:31:06.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.161" endtime="20201030 18:31:06.170"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:06.173" endtime="20201030 18:31:06.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.172" endtime="20201030 18:31:06.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.171" endtime="20201030 18:31:06.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.760" endtime="20201030 18:31:06.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:05.759" endtime="20201030 18:31:06.194"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.203" endtime="20201030 18:31:06.243"></status>
</kw>
<msg timestamp="20201030 18:31:06.243" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:06.201" endtime="20201030 18:31:06.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.246" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:06.244" endtime="20201030 18:31:06.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.247" endtime="20201030 18:31:06.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.198" endtime="20201030 18:31:06.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.197" endtime="20201030 18:31:06.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.256" endtime="20201030 18:31:06.542"></status>
</kw>
<msg timestamp="20201030 18:31:06.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018852167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019205347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:06.255" endtime="20201030 18:31:06.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018852167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019205347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:06.546" endtime="20201030 18:31:06.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.554" endtime="20201030 18:31:06.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.252" endtime="20201030 18:31:06.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.250" endtime="20201030 18:31:06.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:06.560" level="INFO">${PHILIP_RES} = [{'diff': 0.00035318000000000155}, {'diff': 0.0003531950000000006}, {'diff': 0.00035319399999999765}, {'diff': 0.00035320900000000016}, {'diff': 0.0003532219999999968}, {'diff': 0.00035322200000000026...</msg>
<status status="PASS" starttime="20201030 18:31:06.557" endtime="20201030 18:31:06.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:06.565" level="INFO">${RESULT} = {'diff': [0.00035318000000000155, 0.0003531950000000006, 0.00035319399999999765, 0.00035320900000000016, 0.0003532219999999968, 0.00035322200000000026, 0.00035320900000000016, 0.00035322200000000026, ...</msg>
<status status="PASS" starttime="20201030 18:31:06.561" endtime="20201030 18:31:06.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.569" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:06.568" endtime="20201030 18:31:06.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.571" level="INFO">VALUE: [0.00035318000000000155, 0.0003531950000000006, 0.00035319399999999765, 0.00035320900000000016, 0.0003532219999999968, 0.00035322200000000026, 0.00035320900000000016, 0.00035322200000000026, 0.00035320900000000016, 0.0003532080000000007, 0.00035319399999999765, 0.00035327799999999854, 0.0003531940000000011, 0.0003531530000000019, 0.0003532080000000007, 0.0003531530000000019, 0.00035320900000000016, 0.0003532079999999972, 0.0003532080000000007, 0.0003532080000000007, 0.00035318000000000155, 0.00035322299999999973, 0.0003531940000000011, 0.000353181000000001, 0.0003531940000000011, 0.0003531799999999946, 0.00035322299999999973, 0.0003531940000000011, 0.0003531390000000023, 0.00035319499999999365, 0.0003532080000000007, 0.00035322299999999973, 0.00035322200000000026, 0.00035320900000000016, 0.00035322200000000026, 0.0003531940000000011, 0.0003532089999999932, 0.0003532080000000007, 0.00035320900000000016, 0.0003532080000000007, 0.0003532080000000007, 0.00035320900000000016, 0.00035318000000000155, 0.0003531950000000006, 0.0003531940000000011, 0.0003532080000000007, 0.00035322299999999973, 0.0003531939999999942, 0.00035320900000000016, 0.0003531940000000011]</msg>
<status status="PASS" starttime="20201030 18:31:06.570" endtime="20201030 18:31:06.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.565" endtime="20201030 18:31:06.573"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:06.576" endtime="20201030 18:31:06.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.575" endtime="20201030 18:31:06.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.574" endtime="20201030 18:31:06.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.195" endtime="20201030 18:31:06.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.195" endtime="20201030 18:31:06.597"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.605" endtime="20201030 18:31:06.647"></status>
</kw>
<msg timestamp="20201030 18:31:06.648" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:06.604" endtime="20201030 18:31:06.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.650" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:06.649" endtime="20201030 18:31:06.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.651" endtime="20201030 18:31:06.653"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.601" endtime="20201030 18:31:06.653"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.599" endtime="20201030 18:31:06.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.660" endtime="20201030 18:31:06.946"></status>
</kw>
<msg timestamp="20201030 18:31:06.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019615139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019984417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:06.659" endtime="20201030 18:31:06.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019615139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019984417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:06.950" endtime="20201030 18:31:06.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.958" endtime="20201030 18:31:06.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.656" endtime="20201030 18:31:06.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.654" endtime="20201030 18:31:06.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:06.964" level="INFO">${PHILIP_RES} = [{'diff': 0.00036927800000000066}, {'diff': 0.00036927800000000066}, {'diff': 0.00036929200000000023}, {'diff': 0.00036929200000000023}, {'diff': 0.00036923600000000195}, {'diff': 0.000369305999999999...</msg>
<status status="PASS" starttime="20201030 18:31:06.961" endtime="20201030 18:31:06.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:06.968" level="INFO">${RESULT} = {'diff': [0.00036927800000000066, 0.00036927800000000066, 0.00036929200000000023, 0.00036929200000000023, 0.00036923600000000195, 0.0003693059999999998, 0.00036927800000000066, 0.0003693059999999998, ...</msg>
<status status="PASS" starttime="20201030 18:31:06.965" endtime="20201030 18:31:06.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.972" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:06.971" endtime="20201030 18:31:06.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.975" level="INFO">VALUE: [0.00036927800000000066, 0.00036927800000000066, 0.00036929200000000023, 0.00036929200000000023, 0.00036923600000000195, 0.0003693059999999998, 0.00036927800000000066, 0.0003693059999999998, 0.0003692500000000015, 0.0003693059999999998, 0.00036929200000000023, 0.0003692640000000011, 0.0003692779999999972, 0.00036930500000000033, 0.00036930500000000033, 0.0003693189999999999, 0.0003692769999999977, 0.0003692770000000012, 0.0003692500000000015, 0.0003692909999999938, 0.00036929100000000076, 0.00036929200000000023, 0.0003693059999999998, 0.00036930600000000674, 0.00036929200000000023, 0.00036927800000000066, 0.00036927800000000066, 0.00036929200000000023, 0.00036929200000000023, 0.0003693059999999998, 0.0003693059999999998, 0.00036927800000000066, 0.00036927800000000066, 0.0003693059999999998, 0.00036931999999999937, 0.00036930500000000033, 0.00036929100000000076, 0.00036927800000000066, 0.00036933299999999947, 0.00036929100000000076, 0.0003693189999999999, 0.0003693059999999998, 0.00036929100000000076, 0.0003692500000000015, 0.0003693189999999999, 0.00036927800000000066, 0.00036929200000000023, 0.00036929200000000023, 0.00036931999999999937, 0.00036927800000000066]</msg>
<status status="PASS" starttime="20201030 18:31:06.974" endtime="20201030 18:31:06.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.969" endtime="20201030 18:31:06.979"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:06.983" endtime="20201030 18:31:07.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.981" endtime="20201030 18:31:07.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.980" endtime="20201030 18:31:07.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.598" endtime="20201030 18:31:07.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.597" endtime="20201030 18:31:07.004"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.012" endtime="20201030 18:31:07.056"></status>
</kw>
<msg timestamp="20201030 18:31:07.056" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:07.011" endtime="20201030 18:31:07.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.058" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:07.057" endtime="20201030 18:31:07.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.059" endtime="20201030 18:31:07.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.008" endtime="20201030 18:31:07.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.006" endtime="20201030 18:31:07.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.069" endtime="20201030 18:31:07.354"></status>
</kw>
<msg timestamp="20201030 18:31:07.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018745625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019131292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:07.067" endtime="20201030 18:31:07.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018745625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019131292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:07.358" endtime="20201030 18:31:07.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.366" endtime="20201030 18:31:07.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.064" endtime="20201030 18:31:07.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.063" endtime="20201030 18:31:07.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:07.373" level="INFO">${PHILIP_RES} = [{'diff': 0.00038566700000000273}, {'diff': 0.0003856529999999997}, {'diff': 0.0003856810000000023}, {'diff': 0.0003856529999999997}, {'diff': 0.00038576400000000025}, {'diff': 0.00038570800000000197}...</msg>
<status status="PASS" starttime="20201030 18:31:07.370" endtime="20201030 18:31:07.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:07.378" level="INFO">${RESULT} = {'diff': [0.00038566700000000273, 0.0003856529999999997, 0.0003856810000000023, 0.0003856529999999997, 0.00038576400000000025, 0.00038570800000000197, 0.00038568099999999883, 0.00038570899999999797, 0...</msg>
<status status="PASS" starttime="20201030 18:31:07.374" endtime="20201030 18:31:07.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.383" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:07.381" endtime="20201030 18:31:07.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.385" level="INFO">VALUE: [0.00038566700000000273, 0.0003856529999999997, 0.0003856810000000023, 0.0003856529999999997, 0.00038576400000000025, 0.00038570800000000197, 0.00038568099999999883, 0.00038570899999999797, 0.0003857079999999985, 0.00038567999999999936, 0.00038572199999999807, 0.00038569500000000187, 0.00038568099999999883, 0.0003856940000000024, 0.0003856940000000024, 0.00038567999999999936, 0.00038569500000000187, 0.00038566699999999926, 0.00038568099999999883, 0.0003856939999999989, 0.00038567999999999936, 0.00038566699999999926, 0.00038568099999999883, 0.00038568099999999883, 0.00038568099999999883, 0.0003857079999999985, 0.0003856939999999989, 0.00038568099999999883, 0.0003856529999999997, 0.00038573599999999764, 0.00038567999999999936, 0.00038567999999999936, 0.00038570800000000544, 0.0003856529999999997, 0.0003857090000000049, 0.000385722000000005, 0.00038570800000000544, 0.0003856529999999997, 0.0003857360000000046, 0.00038568099999999883, 0.00038566699999999926, 0.0003857079999999985, 0.00038567999999999936, 0.0003856949999999984, 0.0003856949999999984, 0.0003857079999999985, 0.0003856659999999998, 0.0003856939999999989, 0.0003857079999999985, 0.00038568099999999883]</msg>
<status status="PASS" starttime="20201030 18:31:07.384" endtime="20201030 18:31:07.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.379" endtime="20201030 18:31:07.386"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:07.390" endtime="20201030 18:31:07.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.388" endtime="20201030 18:31:07.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.387" endtime="20201030 18:31:07.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.005" endtime="20201030 18:31:07.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.004" endtime="20201030 18:31:07.411"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.419" endtime="20201030 18:31:07.462"></status>
</kw>
<msg timestamp="20201030 18:31:07.463" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:07.417" endtime="20201030 18:31:07.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.465" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:07.464" endtime="20201030 18:31:07.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.466" endtime="20201030 18:31:07.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.415" endtime="20201030 18:31:07.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.413" endtime="20201030 18:31:07.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.475" endtime="20201030 18:31:07.762"></status>
</kw>
<msg timestamp="20201030 18:31:07.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019041361, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:07.474" endtime="20201030 18:31:07.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019041361, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:31:07.766" endtime="20201030 18:31:07.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.774" endtime="20201030 18:31:07.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.471" endtime="20201030 18:31:07.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.470" endtime="20201030 18:31:07.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:07.780" level="INFO">${PHILIP_RES} = [{'diff': 0.0004023610000000004}, {'diff': 0.0004024029999999991}, {'diff': 0.00040240300000000256}, {'diff': 0.00040237499999999995}, {'diff': 0.0004024019999999996}, {'diff': 0.0004024029999999991},...</msg>
<status status="PASS" starttime="20201030 18:31:07.777" endtime="20201030 18:31:07.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:07.785" level="INFO">${RESULT} = {'diff': [0.0004023610000000004, 0.0004024029999999991, 0.00040240300000000256, 0.00040237499999999995, 0.0004024019999999996, 0.0004024029999999991, 0.00040241700000000213, 0.0004024310000000017, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:07.781" endtime="20201030 18:31:07.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.789" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:07.788" endtime="20201030 18:31:07.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.791" level="INFO">VALUE: [0.0004023610000000004, 0.0004024029999999991, 0.00040240300000000256, 0.00040237499999999995, 0.0004024019999999996, 0.0004024029999999991, 0.00040241700000000213, 0.0004024310000000017, 0.0004023889999999995, 0.0004024029999999991, 0.00040238800000000005, 0.00040243099999999823, 0.00040237499999999995, 0.0004023889999999995, 0.0004023889999999995, 0.0004024029999999991, 0.00040240300000000256, 0.00040240300000000256, 0.00040240300000000256, 0.0004024029999999956, 0.0004023750000000034, 0.00040238899999999606, 0.00040241600000000266, 0.00040240300000000256, 0.00040238899999999606, 0.000402389000000003, 0.0004024029999999956, 0.00040243000000000223, 0.0004024020000000031, 0.0004024029999999956, 0.00040240300000000256, 0.00040241700000000213, 0.00040241700000000213, 0.00040241600000000266, 0.0004023329999999978, 0.00040240300000000256, 0.000402389000000003, 0.0004024029999999956, 0.0004023750000000034, 0.0004023879999999966, 0.0004023749999999965, 0.00040241700000000213, 0.0004024450000000013, 0.0004023750000000034, 0.00040238899999999606, 0.00040241600000000266, 0.00040240300000000256, 0.00040238899999999606, 0.00040240300000000256, 0.0004023749999999965]</msg>
<status status="PASS" starttime="20201030 18:31:07.790" endtime="20201030 18:31:07.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.785" endtime="20201030 18:31:07.793"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:07.796" endtime="20201030 18:31:07.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.795" endtime="20201030 18:31:07.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.794" endtime="20201030 18:31:07.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.411" endtime="20201030 18:31:07.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.411" endtime="20201030 18:31:07.817"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.825" endtime="20201030 18:31:07.872"></status>
</kw>
<msg timestamp="20201030 18:31:07.872" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:07.824" endtime="20201030 18:31:07.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:07.875" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:07.873" endtime="20201030 18:31:07.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.876" endtime="20201030 18:31:07.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.821" endtime="20201030 18:31:07.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.819" endtime="20201030 18:31:07.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:07.885" endtime="20201030 18:31:08.171"></status>
</kw>
<msg timestamp="20201030 18:31:08.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019484806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019904194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:07.883" endtime="20201030 18:31:08.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019484806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019904194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:08.175" endtime="20201030 18:31:08.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.183" endtime="20201030 18:31:08.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.881" endtime="20201030 18:31:08.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.879" endtime="20201030 18:31:08.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:08.189" level="INFO">${PHILIP_RES} = [{'diff': 0.0004193879999999997}, {'diff': 0.0004194299999999984}, {'diff': 0.0004194019999999993}, {'diff': 0.00041941599999999885}, {'diff': 0.0004194299999999984}, {'diff': 0.000419443999999998}, {...</msg>
<status status="PASS" starttime="20201030 18:31:08.186" endtime="20201030 18:31:08.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:08.193" level="INFO">${RESULT} = {'diff': [0.0004193879999999997, 0.0004194299999999984, 0.0004194019999999993, 0.00041941599999999885, 0.0004194299999999984, 0.000419443999999998, 0.00041941599999999885, 0.00041940299999999875, 0.00...</msg>
<status status="PASS" starttime="20201030 18:31:08.190" endtime="20201030 18:31:08.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.198" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:08.197" endtime="20201030 18:31:08.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.200" level="INFO">VALUE: [0.0004193879999999997, 0.0004194299999999984, 0.0004194019999999993, 0.00041941599999999885, 0.0004194299999999984, 0.000419443999999998, 0.00041941599999999885, 0.00041940299999999875, 0.00041940299999999875, 0.0004194169999999983, 0.00041943100000000136, 0.00041947300000000007, 0.0004193889999999992, 0.00041943100000000136, 0.0004194170000000018, 0.0004194170000000018, 0.00041947300000000354, 0.0004194309999999979, 0.0004194169999999983, 0.0004194169999999983, 0.0004194169999999983, 0.0004194309999999979, 0.0004194169999999983, 0.0004194580000000045, 0.00041943100000000483, 0.0004194450000000044, 0.00041941700000000526, 0.00041937500000000655, 0.00041943100000000483, 0.0004193619999999995, 0.00041941700000000526, 0.00041941700000000526, 0.0004194160000000058, 0.0004194160000000058, 0.0004194160000000058, 0.0004194019999999993, 0.00041947200000000406, 0.0004193889999999992, 0.0004194019999999993, 0.00041943000000000535, 0.00041941599999999885, 0.0004194169999999983, 0.0004194719999999971, 0.0004193330000000009, 0.0004194299999999984, 0.0004194169999999983, 0.0004194169999999983, 0.0004194169999999983, 0.00041945899999999703, 0.0004193889999999992]</msg>
<status status="PASS" starttime="20201030 18:31:08.199" endtime="20201030 18:31:08.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.194" endtime="20201030 18:31:08.202"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:08.206" endtime="20201030 18:31:08.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.204" endtime="20201030 18:31:08.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.203" endtime="20201030 18:31:08.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.818" endtime="20201030 18:31:08.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:07.817" endtime="20201030 18:31:08.227"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.235" endtime="20201030 18:31:08.282"></status>
</kw>
<msg timestamp="20201030 18:31:08.283" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:08.233" endtime="20201030 18:31:08.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.289" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:08.286" endtime="20201030 18:31:08.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.291" endtime="20201030 18:31:08.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.231" endtime="20201030 18:31:08.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.229" endtime="20201030 18:31:08.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.310" endtime="20201030 18:31:08.603"></status>
</kw>
<msg timestamp="20201030 18:31:08.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018685431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019122125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:08.307" endtime="20201030 18:31:08.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018685431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019122125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:08.607" endtime="20201030 18:31:08.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.615" endtime="20201030 18:31:08.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.301" endtime="20201030 18:31:08.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.297" endtime="20201030 18:31:08.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:08.621" level="INFO">${PHILIP_RES} = [{'diff': 0.00043669400000000136}, {'diff': 0.00043674999999999964}, {'diff': 0.0004367639999999992}, {'diff': 0.00043674999999999964}, {'diff': 0.00043673600000000007}, {'diff': 0.0004367640000000027...</msg>
<status status="PASS" starttime="20201030 18:31:08.618" endtime="20201030 18:31:08.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:08.626" level="INFO">${RESULT} = {'diff': [0.00043669400000000136, 0.00043674999999999964, 0.0004367639999999992, 0.00043674999999999964, 0.00043673600000000007, 0.0004367640000000027, 0.0004367639999999992, 0.00043669400000000136, 0...</msg>
<status status="PASS" starttime="20201030 18:31:08.622" endtime="20201030 18:31:08.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.633" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:08.631" endtime="20201030 18:31:08.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.636" level="INFO">VALUE: [0.00043669400000000136, 0.00043674999999999964, 0.0004367639999999992, 0.00043674999999999964, 0.00043673600000000007, 0.0004367640000000027, 0.0004367639999999992, 0.00043669400000000136, 0.00043669500000000083, 0.00043674999999999964, 0.0004367779999999988, 0.00043669500000000083, 0.0004367639999999992, 0.0004366809999999978, 0.0004367909999999989, 0.0004367500000000031, 0.00043674999999999964, 0.0004367639999999992, 0.00043674999999999964, 0.00043676299999999973, 0.00043674999999999964, 0.0004368330000000045, 0.00043674999999999964, 0.00043679199999999835, 0.0004367779999999988, 0.0004367639999999992, 0.00043674999999999964, 0.00043676400000000615, 0.000436707999999994, 0.00043674999999999964, 0.0004367639999999992, 0.0004367639999999992, 0.0004367639999999992, 0.00043674999999999964, 0.0004367639999999992, 0.0004367639999999992, 0.0004367639999999992, 0.00043674999999999964, 0.0004367639999999992, 0.00043668100000000126, 0.0004367639999999992, 0.00043676400000000615, 0.0004367220000000005, 0.0004367639999999992, 0.0004367639999999992, 0.00043679199999999835, 0.00043673600000000007, 0.00043674999999999964, 0.00043674999999999964, 0.0004367779999999988]</msg>
<status status="PASS" starttime="20201030 18:31:08.634" endtime="20201030 18:31:08.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.627" endtime="20201030 18:31:08.637"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:08.643" endtime="20201030 18:31:08.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.641" endtime="20201030 18:31:08.664"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.638" endtime="20201030 18:31:08.664"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.227" endtime="20201030 18:31:08.664"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.227" endtime="20201030 18:31:08.664"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.673" endtime="20201030 18:31:08.721"></status>
</kw>
<msg timestamp="20201030 18:31:08.721" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:08.671" endtime="20201030 18:31:08.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:08.724" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:08.723" endtime="20201030 18:31:08.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.725" endtime="20201030 18:31:08.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.669" endtime="20201030 18:31:08.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.667" endtime="20201030 18:31:08.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:08.734" endtime="20201030 18:31:09.020"></status>
</kw>
<msg timestamp="20201030 18:31:09.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019283861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019738208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:08.733" endtime="20201030 18:31:09.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019283861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019738208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:09.025" endtime="20201030 18:31:09.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.032" endtime="20201030 18:31:09.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.730" endtime="20201030 18:31:09.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.728" endtime="20201030 18:31:09.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:09.039" level="INFO">${PHILIP_RES} = [{'diff': 0.0004543470000000008}, {'diff': 0.00045440300000000253}, {'diff': 0.0004543889999999995}, {'diff': 0.00045440299999999906}, {'diff': 0.00045441599999999915}, {'diff': 0.00045440299999999906...</msg>
<status status="PASS" starttime="20201030 18:31:09.036" endtime="20201030 18:31:09.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:09.043" level="INFO">${RESULT} = {'diff': [0.0004543470000000008, 0.00045440300000000253, 0.0004543889999999995, 0.00045440299999999906, 0.00045441599999999915, 0.00045440299999999906, 0.00045440300000000253, 0.00045440300000000253, ...</msg>
<status status="PASS" starttime="20201030 18:31:09.040" endtime="20201030 18:31:09.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.047" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:09.046" endtime="20201030 18:31:09.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.050" level="INFO">VALUE: [0.0004543470000000008, 0.00045440300000000253, 0.0004543889999999995, 0.00045440299999999906, 0.00045441599999999915, 0.00045440299999999906, 0.00045440300000000253, 0.00045440300000000253, 0.0004544019999999996, 0.00045440299999999906, 0.00045441699999999863, 0.00045445800000000133, 0.0004544160000000026, 0.0004543889999999995, 0.0004543749999999999, 0.00045441699999999863, 0.0004544019999999996, 0.0004544309999999982, 0.00045440299999999906, 0.00045445799999999786, 0.00045441599999999915, 0.00045440299999999906, 0.00045441699999999863, 0.00045440299999999906, 0.0004544160000000061, 0.00045443100000000514, 0.00045436100000000035, 0.00045440299999999906, 0.0004543889999999995, 0.00045436100000000035, 0.00045440299999999906, 0.0004544439999999983, 0.0004544019999999996, 0.00045443100000000514, 0.00045441700000000557, 0.00045440299999999906, 0.0004544019999999996, 0.00045444499999999777, 0.00045441699999999863, 0.00045441599999999915, 0.00045441599999999915, 0.00045441699999999863, 0.000454403000000006, 0.000454403000000006, 0.00045441599999999915, 0.00045445899999999734, 0.00045441699999999863, 0.00045441599999999915, 0.00045441599999999915, 0.00045440299999999906]</msg>
<status status="PASS" starttime="20201030 18:31:09.048" endtime="20201030 18:31:09.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.044" endtime="20201030 18:31:09.051"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:09.055" endtime="20201030 18:31:09.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.053" endtime="20201030 18:31:09.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.052" endtime="20201030 18:31:09.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.665" endtime="20201030 18:31:09.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:08.665" endtime="20201030 18:31:09.075"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.084" endtime="20201030 18:31:09.134"></status>
</kw>
<msg timestamp="20201030 18:31:09.135" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:09.082" endtime="20201030 18:31:09.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.137" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:09.136" endtime="20201030 18:31:09.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.138" endtime="20201030 18:31:09.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.079" endtime="20201030 18:31:09.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.078" endtime="20201030 18:31:09.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.147" endtime="20201030 18:31:09.433"></status>
</kw>
<msg timestamp="20201030 18:31:09.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019583931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020056278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:09.146" endtime="20201030 18:31:09.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019583931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020056278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:09.437" endtime="20201030 18:31:09.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.445" endtime="20201030 18:31:09.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.143" endtime="20201030 18:31:09.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.141" endtime="20201030 18:31:09.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:09.451" level="INFO">${PHILIP_RES} = [{'diff': 0.00047234700000000143}, {'diff': 0.00047238900000000014}, {'diff': 0.0004723480000000009}, {'diff': 0.00047237500000000057}, {'diff': 0.000472361000000001}, {'diff': 0.00047236099999999753}...</msg>
<status status="PASS" starttime="20201030 18:31:09.448" endtime="20201030 18:31:09.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:09.456" level="INFO">${RESULT} = {'diff': [0.00047234700000000143, 0.00047238900000000014, 0.0004723480000000009, 0.00047237500000000057, 0.000472361000000001, 0.00047236099999999753, 0.000472361000000001, 0.00047237500000000057, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:09.452" endtime="20201030 18:31:09.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.460" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:09.459" endtime="20201030 18:31:09.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.462" level="INFO">VALUE: [0.00047234700000000143, 0.00047238900000000014, 0.0004723480000000009, 0.00047237500000000057, 0.000472361000000001, 0.00047236099999999753, 0.000472361000000001, 0.00047237500000000057, 0.00047237500000000057, 0.0004723749999999971, 0.0004723480000000009, 0.000472361000000001, 0.00047237500000000057, 0.000472361000000001, 0.0004723749999999971, 0.0004724020000000037, 0.00047237500000000404, 0.0004723890000000036, 0.00047240299999999624, 0.0004723749999999971, 0.0004723749999999971, 0.00047236099999999753, 0.00047236100000000447, 0.0004723470000000049, 0.00047237500000000404, 0.0004724309999999954, 0.0004723749999999971, 0.0004723189999999988, 0.00047234799999999744, 0.00047231900000000576, 0.0004723470000000049, 0.00047233399999999787, 0.0004723749999999971, 0.00047236099999999753, 0.0004723749999999971, 0.0004723749999999971, 0.00047237500000000404, 0.00047236100000000447, 0.00047236100000000447, 0.00047236099999999753, 0.00047234699999999796, 0.00047236099999999753, 0.0004724310000000023, 0.0004723480000000044, 0.00047233300000000533, 0.00047234699999999796, 0.00047236099999999753, 0.00047234699999999796, 0.0004723749999999971, 0.00047236099999999753]</msg>
<status status="PASS" starttime="20201030 18:31:09.461" endtime="20201030 18:31:09.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.456" endtime="20201030 18:31:09.464"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:09.468" endtime="20201030 18:31:09.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.467" endtime="20201030 18:31:09.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.465" endtime="20201030 18:31:09.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.076" endtime="20201030 18:31:09.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.076" endtime="20201030 18:31:09.489"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.497" endtime="20201030 18:31:09.548"></status>
</kw>
<msg timestamp="20201030 18:31:09.548" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:09.496" endtime="20201030 18:31:09.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.551" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:09.549" endtime="20201030 18:31:09.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.552" endtime="20201030 18:31:09.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.493" endtime="20201030 18:31:09.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.491" endtime="20201030 18:31:09.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.561" endtime="20201030 18:31:09.864"></status>
</kw>
<msg timestamp="20201030 18:31:09.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018792458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019283069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:09.559" endtime="20201030 18:31:09.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018792458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019283069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:09.873" endtime="20201030 18:31:09.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.883" endtime="20201030 18:31:09.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.557" endtime="20201030 18:31:09.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.555" endtime="20201030 18:31:09.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:09.890" level="INFO">${PHILIP_RES} = [{'diff': 0.0004906109999999984}, {'diff': 0.0004906530000000006}, {'diff': 0.0004906520000000011}, {'diff': 0.0004905970000000023}, {'diff': 0.0004906380000000016}, {'diff': 0.0004906670000000002}, {...</msg>
<status status="PASS" starttime="20201030 18:31:09.887" endtime="20201030 18:31:09.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:09.895" level="INFO">${RESULT} = {'diff': [0.0004906109999999984, 0.0004906530000000006, 0.0004906520000000011, 0.0004905970000000023, 0.0004906380000000016, 0.0004906670000000002, 0.0004906379999999981, 0.0004906530000000006, 0.0004...</msg>
<status status="PASS" starttime="20201030 18:31:09.891" endtime="20201030 18:31:09.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.899" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:09.898" endtime="20201030 18:31:09.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.902" level="INFO">VALUE: [0.0004906109999999984, 0.0004906530000000006, 0.0004906520000000011, 0.0004905970000000023, 0.0004906380000000016, 0.0004906670000000002, 0.0004906379999999981, 0.0004906530000000006, 0.000490639000000001, 0.0004906530000000006, 0.0004906109999999984, 0.000490639000000001, 0.000490624999999998, 0.0004906389999999976, 0.000490624999999998, 0.0004906250000000015, 0.000490639000000001, 0.0004906250000000015, 0.000490639000000001, 0.0004906379999999946, 0.000490639000000001, 0.0004906380000000016, 0.0004906530000000006, 0.000490639000000001, 0.000490639000000001, 0.0004906530000000006, 0.0004906249999999945, 0.0004906250000000015, 0.000490639000000001, 0.0004905839999999953, 0.000490639000000001, 0.0004906529999999937, 0.0004906380000000016, 0.0004906670000000002, 0.0004905970000000023, 0.0004906530000000006, 0.0004906389999999941, 0.0004906250000000015, 0.000490639000000001, 0.0004906250000000015, 0.000490639000000001, 0.000490639000000001, 0.0004906250000000015, 0.0004906249999999945, 0.000490639000000001, 0.000490639000000001, 0.0004906249999999945, 0.0004906530000000006, 0.0004906250000000015, 0.0004906250000000015]</msg>
<status status="PASS" starttime="20201030 18:31:09.900" endtime="20201030 18:31:09.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.896" endtime="20201030 18:31:09.903"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:09.907" endtime="20201030 18:31:09.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.905" endtime="20201030 18:31:09.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.904" endtime="20201030 18:31:09.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.490" endtime="20201030 18:31:09.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.489" endtime="20201030 18:31:09.927"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.936" endtime="20201030 18:31:09.987"></status>
</kw>
<msg timestamp="20201030 18:31:09.988" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:09.934" endtime="20201030 18:31:09.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:09.990" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:09.989" endtime="20201030 18:31:09.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:09.991" endtime="20201030 18:31:09.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.931" endtime="20201030 18:31:09.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.929" endtime="20201030 18:31:09.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.000" endtime="20201030 18:31:10.287"></status>
</kw>
<msg timestamp="20201030 18:31:10.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018808014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019317208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:09.999" endtime="20201030 18:31:10.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018808014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019317208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:10.291" endtime="20201030 18:31:10.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.298" endtime="20201030 18:31:10.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.996" endtime="20201030 18:31:10.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.994" endtime="20201030 18:31:10.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:10.305" level="INFO">${PHILIP_RES} = [{'diff': 0.0005091939999999975}, {'diff': 0.0005092359999999997}, {'diff': 0.0005092229999999996}, {'diff': 0.0005092359999999997}, {'diff': 0.0005092079999999971}, {'diff': 0.0005092359999999997}, {...</msg>
<status status="PASS" starttime="20201030 18:31:10.302" endtime="20201030 18:31:10.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:10.309" level="INFO">${RESULT} = {'diff': [0.0005091939999999975, 0.0005092359999999997, 0.0005092229999999996, 0.0005092359999999997, 0.0005092079999999971, 0.0005092359999999997, 0.0005092220000000001, 0.0005092359999999997, 0.0005...</msg>
<status status="PASS" starttime="20201030 18:31:10.306" endtime="20201030 18:31:10.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.313" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:10.312" endtime="20201030 18:31:10.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.316" level="INFO">VALUE: [0.0005091939999999975, 0.0005092359999999997, 0.0005092229999999996, 0.0005092359999999997, 0.0005092079999999971, 0.0005092359999999997, 0.0005092220000000001, 0.0005092359999999997, 0.000509209, 0.0005091950000000005, 0.0005092219999999967, 0.0005092220000000001, 0.0005091519999999988, 0.0005092229999999996, 0.0005092369999999957, 0.0005092359999999962, 0.0005092220000000036, 0.0005092220000000036, 0.0005092359999999962, 0.000509179999999998, 0.0005092220000000036, 0.0005092360000000032, 0.0005092219999999967, 0.0005092219999999967, 0.0005092360000000032, 0.0005092370000000027, 0.0005092499999999958, 0.0005092499999999958, 0.000509208000000004, 0.0005092220000000036, 0.0005092219999999967, 0.0005092369999999957, 0.0005092230000000031, 0.0005092220000000036, 0.0005092639999999954, 0.0005091389999999987, 0.0005092360000000032, 0.0005092230000000031, 0.0005092359999999962, 0.0005092359999999962, 0.0005092220000000036, 0.0005092220000000036, 0.0005092229999999962, 0.0005092229999999962, 0.0005092640000000023, 0.0005092500000000028, 0.0005092219999999967, 0.0005092499999999958, 0.0005092780000000019, 0.0005092359999999962]</msg>
<status status="PASS" starttime="20201030 18:31:10.314" endtime="20201030 18:31:10.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.310" endtime="20201030 18:31:10.317"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:10.321" endtime="20201030 18:31:10.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.319" endtime="20201030 18:31:10.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.318" endtime="20201030 18:31:10.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.928" endtime="20201030 18:31:10.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:09.928" endtime="20201030 18:31:10.341"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.350" endtime="20201030 18:31:10.404"></status>
</kw>
<msg timestamp="20201030 18:31:10.404" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:10.348" endtime="20201030 18:31:10.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.407" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:10.405" endtime="20201030 18:31:10.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.408" endtime="20201030 18:31:10.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.346" endtime="20201030 18:31:10.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.344" endtime="20201030 18:31:10.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.418" endtime="20201030 18:31:10.723"></status>
</kw>
<msg timestamp="20201030 18:31:10.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019689375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020217444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:10.416" endtime="20201030 18:31:10.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019689375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020217444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:10.727" endtime="20201030 18:31:10.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.734" endtime="20201030 18:31:10.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.413" endtime="20201030 18:31:10.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.412" endtime="20201030 18:31:10.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:10.741" level="INFO">${PHILIP_RES} = [{'diff': 0.0005280690000000025}, {'diff': 0.0005281250000000008}, {'diff': 0.0005281250000000008}, {'diff': 0.0005281390000000004}, {'diff': 0.0005281250000000008}, {'diff': 0.0005281250000000008}, {...</msg>
<status status="PASS" starttime="20201030 18:31:10.738" endtime="20201030 18:31:10.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:10.745" level="INFO">${RESULT} = {'diff': [0.0005280690000000025, 0.0005281250000000008, 0.0005281250000000008, 0.0005281390000000004, 0.0005281250000000008, 0.0005281250000000008, 0.0005281250000000008, 0.0005281249999999973, 0.0005...</msg>
<status status="PASS" starttime="20201030 18:31:10.742" endtime="20201030 18:31:10.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.749" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:10.748" endtime="20201030 18:31:10.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.752" level="INFO">VALUE: [0.0005280690000000025, 0.0005281250000000008, 0.0005281250000000008, 0.0005281390000000004, 0.0005281250000000008, 0.0005281250000000008, 0.0005281250000000008, 0.0005281249999999973, 0.0005281249999999973, 0.0005281110000000012, 0.0005281250000000008, 0.000528153, 0.0005281249999999973, 0.0005281249999999973, 0.0005281249999999973, 0.0005281530000000034, 0.0005281110000000047, 0.0005281250000000043, 0.0005281250000000043, 0.0005281389999999969, 0.0005281249999999973, 0.0005281249999999973, 0.0005281109999999978, 0.0005281249999999973, 0.0005281389999999969, 0.0005281110000000047, 0.0005281250000000043, 0.0005281249999999973, 0.0005281249999999973, 0.0005281249999999973, 0.0005281249999999973, 0.0005281249999999973, 0.0005281109999999978, 0.0005281800000000031, 0.0005281390000000039, 0.0005281390000000039, 0.0005280970000000051, 0.0005281109999999978, 0.0005281389999999969, 0.0005281249999999973, 0.0005281109999999978, 0.0005281109999999978, 0.0005281249999999973, 0.0005281250000000043, 0.0005281390000000039, 0.0005281250000000043, 0.0005280969999999913, 0.0005281109999999978, 0.0005281250000000043, 0.0005281109999999978]</msg>
<status status="PASS" starttime="20201030 18:31:10.750" endtime="20201030 18:31:10.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.746" endtime="20201030 18:31:10.756"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:10.760" endtime="20201030 18:31:10.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.758" endtime="20201030 18:31:10.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.757" endtime="20201030 18:31:10.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.342" endtime="20201030 18:31:10.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.342" endtime="20201030 18:31:10.781"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.789" endtime="20201030 18:31:10.844"></status>
</kw>
<msg timestamp="20201030 18:31:10.845" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:10.787" endtime="20201030 18:31:10.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:10.847" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:10.846" endtime="20201030 18:31:10.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.848" endtime="20201030 18:31:10.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.785" endtime="20201030 18:31:10.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.783" endtime="20201030 18:31:10.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:10.857" endtime="20201030 18:31:11.143"></status>
</kw>
<msg timestamp="20201030 18:31:11.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018790028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019337347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:10.856" endtime="20201030 18:31:11.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018790028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019337347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:11.147" endtime="20201030 18:31:11.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.154" endtime="20201030 18:31:11.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.853" endtime="20201030 18:31:11.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.851" endtime="20201030 18:31:11.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:11.161" level="INFO">${PHILIP_RES} = [{'diff': 0.000547319000000001}, {'diff': 0.0005473889999999988}, {'diff': 0.0005473470000000001}, {'diff': 0.0005473330000000005}, {'diff': 0.0005473609999999997}, {'diff': 0.0005473330000000005}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:11.158" endtime="20201030 18:31:11.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:11.166" level="INFO">${RESULT} = {'diff': [0.000547319000000001, 0.0005473889999999988, 0.0005473470000000001, 0.0005473330000000005, 0.0005473609999999997, 0.0005473330000000005, 0.0005473609999999997, 0.0005472920000000013, 0.00054...</msg>
<status status="PASS" starttime="20201030 18:31:11.162" endtime="20201030 18:31:11.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.170" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:11.169" endtime="20201030 18:31:11.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.173" level="INFO">VALUE: [0.000547319000000001, 0.0005473889999999988, 0.0005473470000000001, 0.0005473330000000005, 0.0005473609999999997, 0.0005473330000000005, 0.0005473609999999997, 0.0005472920000000013, 0.0005473470000000001, 0.0005472920000000013, 0.0005473479999999996, 0.000547334, 0.000547334, 0.0005473340000000035, 0.0005472920000000048, 0.000547319999999997, 0.0005473749999999958, 0.0005473329999999971, 0.0005473610000000032, 0.0005473050000000049, 0.000547333000000004, 0.000547333000000004, 0.0005473329999999971, 0.0005473329999999971, 0.0005473329999999971, 0.0005473470000000036, 0.0005473750000000027, 0.0005473329999999971, 0.0005473469999999966, 0.000547319999999997, 0.000547333000000004, 0.0005473340000000035, 0.0005473620000000026, 0.000547319999999997, 0.0005473339999999965, 0.0005473479999999961, 0.0005473470000000036, 0.0005473750000000027, 0.0005473470000000036, 0.0005473609999999962, 0.0005473329999999971, 0.0005473890000000023, 0.0005473050000000049, 0.000547333000000004, 0.0005473890000000023, 0.0005473329999999971, 0.0005473470000000036, 0.0005473470000000036, 0.0005473329999999971, 0.0005473329999999971]</msg>
<status status="PASS" starttime="20201030 18:31:11.171" endtime="20201030 18:31:11.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.167" endtime="20201030 18:31:11.174"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:11.178" endtime="20201030 18:31:11.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.176" endtime="20201030 18:31:11.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.175" endtime="20201030 18:31:11.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.781" endtime="20201030 18:31:11.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:10.781" endtime="20201030 18:31:11.198"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.207" endtime="20201030 18:31:11.263"></status>
</kw>
<msg timestamp="20201030 18:31:11.264" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:11.205" endtime="20201030 18:31:11.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.266" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:11.265" endtime="20201030 18:31:11.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.267" endtime="20201030 18:31:11.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.202" endtime="20201030 18:31:11.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.201" endtime="20201030 18:31:11.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.276" endtime="20201030 18:31:11.583"></status>
</kw>
<msg timestamp="20201030 18:31:11.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018748611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019315444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:11.275" endtime="20201030 18:31:11.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018748611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019315444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:11.587" endtime="20201030 18:31:11.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.595" endtime="20201030 18:31:11.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.272" endtime="20201030 18:31:11.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.270" endtime="20201030 18:31:11.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:11.601" level="INFO">${PHILIP_RES} = [{'diff': 0.0005668330000000027}, {'diff': 0.0005668610000000018}, {'diff': 0.0005668340000000022}, {'diff': 0.0005668340000000022}, {'diff': 0.000566889000000001}, {'diff': 0.0005668749999999979}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:11.598" endtime="20201030 18:31:11.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:11.605" level="INFO">${RESULT} = {'diff': [0.0005668330000000027, 0.0005668610000000018, 0.0005668340000000022, 0.0005668340000000022, 0.000566889000000001, 0.0005668749999999979, 0.0005669020000000011, 0.0005668469999999988, 0.00056...</msg>
<status status="PASS" starttime="20201030 18:31:11.602" endtime="20201030 18:31:11.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.610" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:11.609" endtime="20201030 18:31:11.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.612" level="INFO">VALUE: [0.0005668330000000027, 0.0005668610000000018, 0.0005668340000000022, 0.0005668340000000022, 0.000566889000000001, 0.0005668749999999979, 0.0005669020000000011, 0.0005668469999999988, 0.0005668610000000018, 0.0005668610000000018, 0.0005668750000000014, 0.0005669309999999997, 0.0005668750000000014, 0.0005668480000000017, 0.0005668750000000014, 0.0005668750000000014, 0.0005668750000000014, 0.0005668609999999949, 0.0005668470000000023, 0.0005668469999999953, 0.0005668750000000014, 0.0005668610000000018, 0.0005668330000000027, 0.0005668620000000013, 0.0005668750000000014, 0.0005668470000000023, 0.0005668609999999949, 0.0005668330000000027, 0.0005668749999999945, 0.0005668470000000023, 0.0005668469999999953, 0.0005668330000000027, 0.0005668189999999962, 0.0005668470000000023, 0.0005668480000000017, 0.0005668609999999949, 0.0005668200000000026, 0.0005668469999999953, 0.0005668340000000022, 0.0005668750000000014, 0.0005668470000000023, 0.0005668610000000018, 0.0005668610000000018, 0.0005668470000000023, 0.0005668609999999949, 0.0005668749999999945, 0.0005668610000000018, 0.000566860999999988, 0.0005668469999999953, 0.0005668469999999953]</msg>
<status status="PASS" starttime="20201030 18:31:11.611" endtime="20201030 18:31:11.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.606" endtime="20201030 18:31:11.614"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:11.617" endtime="20201030 18:31:11.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.616" endtime="20201030 18:31:11.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.615" endtime="20201030 18:31:11.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.199" endtime="20201030 18:31:11.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.199" endtime="20201030 18:31:11.638"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.646" endtime="20201030 18:31:11.705"></status>
</kw>
<msg timestamp="20201030 18:31:11.706" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:11.645" endtime="20201030 18:31:11.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:11.708" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:11.707" endtime="20201030 18:31:11.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.709" endtime="20201030 18:31:11.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.642" endtime="20201030 18:31:11.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.640" endtime="20201030 18:31:11.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:11.718" endtime="20201030 18:31:12.005"></status>
</kw>
<msg timestamp="20201030 18:31:12.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019706847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020293528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:11.717" endtime="20201030 18:31:12.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019706847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020293528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:12.009" endtime="20201030 18:31:12.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.016" endtime="20201030 18:31:12.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.714" endtime="20201030 18:31:12.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.712" endtime="20201030 18:31:12.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:12.023" level="INFO">${PHILIP_RES} = [{'diff': 0.0005866810000000021}, {'diff': 0.0005866949999999982}, {'diff': 0.0005867220000000013}, {'diff': 0.0005866809999999986}, {'diff': 0.0005866110000000008}, {'diff': 0.0005866800000000026}, {...</msg>
<status status="PASS" starttime="20201030 18:31:12.020" endtime="20201030 18:31:12.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:12.027" level="INFO">${RESULT} = {'diff': [0.0005866810000000021, 0.0005866949999999982, 0.0005867220000000013, 0.0005866809999999986, 0.0005866110000000008, 0.0005866800000000026, 0.0005867080000000018, 0.0005866949999999982, 0.0005...</msg>
<status status="PASS" starttime="20201030 18:31:12.024" endtime="20201030 18:31:12.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.031" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:12.030" endtime="20201030 18:31:12.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.034" level="INFO">VALUE: [0.0005866810000000021, 0.0005866949999999982, 0.0005867220000000013, 0.0005866809999999986, 0.0005866110000000008, 0.0005866800000000026, 0.0005867080000000018, 0.0005866949999999982, 0.0005867089999999978, 0.0005866250000000003, 0.0005866389999999999, 0.0005866949999999982, 0.0005866949999999982, 0.0005866939999999987, 0.0005866389999999999, 0.0005866949999999982, 0.0005866809999999986, 0.0005867079999999983, 0.0005866529999999995, 0.000586666999999999, 0.0005866800000000061, 0.0005866940000000057, 0.0005866950000000051, 0.0005866809999999986, 0.0005866799999999991, 0.0005867079999999983, 0.0005866809999999986, 0.0005866949999999982, 0.0005867219999999979, 0.000586666999999999, 0.0005866809999999986, 0.0005866949999999982, 0.0005866940000000057, 0.0005866950000000051, 0.0005866530000000064, 0.0005866939999999987, 0.0005866529999999995, 0.0005867089999999978, 0.0005866949999999982, 0.0005866939999999987, 0.0005866939999999987, 0.0005866809999999986, 0.0005866809999999917, 0.000586749999999997, 0.0005867079999999913, 0.0005867090000000047, 0.000586666999999999, 0.000586749999999997, 0.0005866939999999987, 0.0005867090000000047]</msg>
<status status="PASS" starttime="20201030 18:31:12.032" endtime="20201030 18:31:12.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.028" endtime="20201030 18:31:12.036"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:12.040" endtime="20201030 18:31:12.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.038" endtime="20201030 18:31:12.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.037" endtime="20201030 18:31:12.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.639" endtime="20201030 18:31:12.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:11.638" endtime="20201030 18:31:12.060"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.069" endtime="20201030 18:31:12.128"></status>
</kw>
<msg timestamp="20201030 18:31:12.129" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:12.067" endtime="20201030 18:31:12.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.131" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:12.130" endtime="20201030 18:31:12.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.132" endtime="20201030 18:31:12.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.064" endtime="20201030 18:31:12.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.063" endtime="20201030 18:31:12.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.141" endtime="20201030 18:31:12.447"></status>
</kw>
<msg timestamp="20201030 18:31:12.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018687958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019294792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:12.140" endtime="20201030 18:31:12.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018687958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019294792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:12.451" endtime="20201030 18:31:12.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.460" endtime="20201030 18:31:12.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.137" endtime="20201030 18:31:12.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.136" endtime="20201030 18:31:12.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:12.467" level="INFO">${PHILIP_RES} = [{'diff': 0.0006068340000000005}, {'diff': 0.0006068339999999971}, {'diff': 0.0006068480000000001}, {'diff': 0.0006068610000000002}, {'diff': 0.0006068889999999993}, {'diff': 0.0006068469999999972}, {...</msg>
<status status="PASS" starttime="20201030 18:31:12.463" endtime="20201030 18:31:12.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:12.471" level="INFO">${RESULT} = {'diff': [0.0006068340000000005, 0.0006068339999999971, 0.0006068480000000001, 0.0006068610000000002, 0.0006068889999999993, 0.0006068469999999972, 0.0006067780000000023, 0.0006068470000000006, 0.0006...</msg>
<status status="PASS" starttime="20201030 18:31:12.468" endtime="20201030 18:31:12.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.476" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:12.475" endtime="20201030 18:31:12.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.478" level="INFO">VALUE: [0.0006068340000000005, 0.0006068339999999971, 0.0006068480000000001, 0.0006068610000000002, 0.0006068889999999993, 0.0006068469999999972, 0.0006067780000000023, 0.0006068470000000006, 0.0006068330000000011, 0.0006068340000000005, 0.0006068610000000002, 0.0006068469999999972, 0.0006068469999999972, 0.0006068330000000011, 0.0006068190000000015, 0.0006068330000000011, 0.0006068610000000002, 0.0006068480000000001, 0.0006068060000000014, 0.0006068330000000011, 0.0006068330000000011, 0.0006068749999999998, 0.0006068330000000011, 0.0006067920000000018, 0.0006068749999999998, 0.0006068619999999997, 0.0006068340000000005, 0.0006068189999999946, 0.0006068330000000011, 0.0006068610000000002, 0.0006068470000000006, 0.0006068610000000002, 0.0006068059999999945, 0.0006067500000000031, 0.0006068470000000006, 0.0006068190000000015, 0.0006068470000000006, 0.0006068470000000006, 0.0006068889999999993, 0.0006068470000000006, 0.0006068480000000001, 0.0006068340000000005, 0.0006068340000000005, 0.0006068469999999937, 0.0006068330000000011, 0.0006067919999999949, 0.0006068330000000011, 0.0006068469999999937, 0.0006068479999999932, 0.0006067919999999949]</msg>
<status status="PASS" starttime="20201030 18:31:12.477" endtime="20201030 18:31:12.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.472" endtime="20201030 18:31:12.480"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:12.483" endtime="20201030 18:31:12.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.482" endtime="20201030 18:31:12.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.481" endtime="20201030 18:31:12.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.061" endtime="20201030 18:31:12.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.060" endtime="20201030 18:31:12.504"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.512" endtime="20201030 18:31:12.573"></status>
</kw>
<msg timestamp="20201030 18:31:12.573" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:12.511" endtime="20201030 18:31:12.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.576" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:12.574" endtime="20201030 18:31:12.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.577" endtime="20201030 18:31:12.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.508" endtime="20201030 18:31:12.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.506" endtime="20201030 18:31:12.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.586" endtime="20201030 18:31:12.873"></status>
</kw>
<msg timestamp="20201030 18:31:12.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018836681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019463958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:12.584" endtime="20201030 18:31:12.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018836681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019463958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:12.877" endtime="20201030 18:31:12.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.884" endtime="20201030 18:31:12.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.582" endtime="20201030 18:31:12.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.580" endtime="20201030 18:31:12.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:12.891" level="INFO">${PHILIP_RES} = [{'diff': 0.000627276999999999}, {'diff': 0.0006272920000000015}, {'diff': 0.0006273190000000012}, {'diff': 0.0006273060000000011}, {'diff': 0.0006273330000000008}, {'diff': 0.0006273060000000011}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:12.888" endtime="20201030 18:31:12.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:12.895" level="INFO">${RESULT} = {'diff': [0.000627276999999999, 0.0006272920000000015, 0.0006273190000000012, 0.0006273060000000011, 0.0006273330000000008, 0.0006273060000000011, 0.0006273050000000016, 0.0006272920000000015, 0.00062...</msg>
<status status="PASS" starttime="20201030 18:31:12.892" endtime="20201030 18:31:12.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.899" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:12.898" endtime="20201030 18:31:12.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.902" level="INFO">VALUE: [0.000627276999999999, 0.0006272920000000015, 0.0006273190000000012, 0.0006273060000000011, 0.0006273330000000008, 0.0006273060000000011, 0.0006273050000000016, 0.0006272920000000015, 0.0006272770000000025, 0.0006272920000000015, 0.0006273050000000016, 0.0006272780000000019, 0.0006273049999999947, 0.0006272780000000019, 0.0006273049999999947, 0.0006272920000000015, 0.0006273049999999947, 0.0006273060000000011, 0.000627277999999995, 0.0006272920000000015, 0.0006273060000000011, 0.0006272920000000015, 0.0006272369999999958, 0.0006272920000000015, 0.0006272920000000015, 0.0006273050000000016, 0.0006273470000000003, 0.0006272920000000015, 0.0006273060000000011, 0.0006273200000000007, 0.0006272920000000015, 0.0006272920000000015, 0.0006273200000000007, 0.000627291000000002, 0.0006272920000000015, 0.0006273050000000016, 0.0006272920000000015, 0.000627291000000002, 0.0006272920000000015, 0.0006273190000000012, 0.0006272500000000028, 0.0006273049999999947, 0.000627277999999995, 0.0006273049999999947, 0.0006273749999999995, 0.0006273049999999947, 0.0006272920000000015, 0.0006273049999999947, 0.000627277999999995, 0.0006273049999999947]</msg>
<status status="PASS" starttime="20201030 18:31:12.900" endtime="20201030 18:31:12.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.896" endtime="20201030 18:31:12.903"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:12.907" endtime="20201030 18:31:12.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.905" endtime="20201030 18:31:12.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.904" endtime="20201030 18:31:12.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.505" endtime="20201030 18:31:12.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.504" endtime="20201030 18:31:12.927"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.936" endtime="20201030 18:31:12.998"></status>
</kw>
<msg timestamp="20201030 18:31:12.999" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:12.934" endtime="20201030 18:31:12.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.001" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:13.000" endtime="20201030 18:31:13.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.002" endtime="20201030 18:31:13.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.931" endtime="20201030 18:31:13.005"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.930" endtime="20201030 18:31:13.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.011" endtime="20201030 18:31:13.319"></status>
</kw>
<msg timestamp="20201030 18:31:13.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019710069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020358097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:13.010" endtime="20201030 18:31:13.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019710069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020358097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:13.323" endtime="20201030 18:31:13.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.331" endtime="20201030 18:31:13.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.007" endtime="20201030 18:31:13.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.006" endtime="20201030 18:31:13.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:13.337" level="INFO">${PHILIP_RES} = [{'diff': 0.0006480279999999984}, {'diff': 0.000648056000000001}, {'diff': 0.0006480830000000007}, {'diff': 0.0006480690000000011}, {'diff': 0.0006480700000000006}, {'diff': 0.0006480690000000011}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:13.334" endtime="20201030 18:31:13.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:13.341" level="INFO">${RESULT} = {'diff': [0.0006480279999999984, 0.000648056000000001, 0.0006480830000000007, 0.0006480690000000011, 0.0006480700000000006, 0.0006480690000000011, 0.0006480829999999972, 0.0006481249999999994, 0.00064...</msg>
<status status="PASS" starttime="20201030 18:31:13.338" endtime="20201030 18:31:13.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.346" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:13.345" endtime="20201030 18:31:13.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.348" level="INFO">VALUE: [0.0006480279999999984, 0.000648056000000001, 0.0006480830000000007, 0.0006480690000000011, 0.0006480700000000006, 0.0006480690000000011, 0.0006480829999999972, 0.0006481249999999994, 0.0006480550000000015, 0.0006480830000000007, 0.0006480700000000006, 0.0006480830000000007, 0.0006480690000000011, 0.0006480700000000006, 0.0006480549999999946, 0.0006480970000000003, 0.0006480840000000002, 0.0006480690000000011, 0.000648056000000001, 0.0006480830000000007, 0.0006480690000000011, 0.0006480559999999941, 0.0006480830000000007, 0.0006480830000000007, 0.000648056000000001, 0.0006480550000000015, 0.0006480690000000011, 0.0006480700000000006, 0.0006480689999999942, 0.0006480830000000007, 0.0006480840000000002, 0.0006480550000000015, 0.0006480690000000011, 0.0006480700000000006, 0.0006480830000000007, 0.0006481249999999994, 0.0006480840000000002, 0.0006481109999999998, 0.000648056000000001, 0.0006480699999999937, 0.0006480690000000011, 0.0006480700000000006, 0.0006480970000000003, 0.0006480970000000003, 0.000648056000000008, 0.0006480829999999937, 0.0006480830000000076, 0.0006480420000000015, 0.0006480690000000011, 0.0006480690000000011]</msg>
<status status="PASS" starttime="20201030 18:31:13.347" endtime="20201030 18:31:13.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.342" endtime="20201030 18:31:13.350"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:13.354" endtime="20201030 18:31:13.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.353" endtime="20201030 18:31:13.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.351" endtime="20201030 18:31:13.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.928" endtime="20201030 18:31:13.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.928" endtime="20201030 18:31:13.375"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.383" endtime="20201030 18:31:13.447"></status>
</kw>
<msg timestamp="20201030 18:31:13.448" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:13.382" endtime="20201030 18:31:13.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.450" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:13.449" endtime="20201030 18:31:13.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.451" endtime="20201030 18:31:13.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.379" endtime="20201030 18:31:13.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.377" endtime="20201030 18:31:13.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.460" endtime="20201030 18:31:13.746"></status>
</kw>
<msg timestamp="20201030 18:31:13.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018760778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019429917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:13.459" endtime="20201030 18:31:13.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018760778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019429917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:13.751" endtime="20201030 18:31:13.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.760" endtime="20201030 18:31:13.761"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.456" endtime="20201030 18:31:13.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.454" endtime="20201030 18:31:13.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:13.766" level="INFO">${PHILIP_RES} = [{'diff': 0.0006691390000000026}, {'diff': 0.0006691669999999983}, {'diff': 0.000669193999999998}, {'diff': 0.0006691530000000022}, {'diff': 0.0006691670000000018}, {'diff': 0.0006691529999999987}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:13.763" endtime="20201030 18:31:13.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:13.771" level="INFO">${RESULT} = {'diff': [0.0006691390000000026, 0.0006691669999999983, 0.000669193999999998, 0.0006691530000000022, 0.0006691670000000018, 0.0006691529999999987, 0.0006691389999999992, 0.0006691529999999987, 0.00066...</msg>
<status status="PASS" starttime="20201030 18:31:13.767" endtime="20201030 18:31:13.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.776" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:13.775" endtime="20201030 18:31:13.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.778" level="INFO">VALUE: [0.0006691390000000026, 0.0006691669999999983, 0.000669193999999998, 0.0006691530000000022, 0.0006691670000000018, 0.0006691529999999987, 0.0006691389999999992, 0.0006691529999999987, 0.0006691390000000026, 0.0006691389999999992, 0.0006691659999999988, 0.0006691529999999987, 0.0006691669999999983, 0.0006691519999999992, 0.0006691670000000052, 0.0006691389999999992, 0.0006691799999999984, 0.0006691659999999988, 0.0006691809999999979, 0.0006691669999999983, 0.0006691519999999992, 0.0006691389999999992, 0.0006691810000000048, 0.0006691659999999988, 0.0006692219999999971, 0.0006691529999999987, 0.0006691669999999983, 0.0006691659999999988, 0.0006691669999999983, 0.0006691530000000057, 0.0006691389999999992, 0.0006691119999999995, 0.0006691669999999983, 0.000669208999999997, 0.0006691799999999984, 0.0006692359999999967, 0.0006691949999999974, 0.0006691519999999992, 0.0006691530000000057, 0.0006691669999999983, 0.0006691389999999992, 0.0006691379999999997, 0.0006691530000000057, 0.0006691530000000057, 0.0006691389999999992, 0.0006691669999999983, 0.0006691529999999918, 0.0006691659999999988, 0.0006691529999999918, 0.0006691669999999983]</msg>
<status status="PASS" starttime="20201030 18:31:13.777" endtime="20201030 18:31:13.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.772" endtime="20201030 18:31:13.779"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:13.783" endtime="20201030 18:31:13.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.781" endtime="20201030 18:31:13.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.780" endtime="20201030 18:31:13.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.376" endtime="20201030 18:31:13.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.375" endtime="20201030 18:31:13.804"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.812" endtime="20201030 18:31:13.879"></status>
</kw>
<msg timestamp="20201030 18:31:13.880" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:13.810" endtime="20201030 18:31:13.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:13.885" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:13.882" endtime="20201030 18:31:13.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.887" endtime="20201030 18:31:13.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.808" endtime="20201030 18:31:13.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.806" endtime="20201030 18:31:13.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:13.906" endtime="20201030 18:31:14.198"></status>
</kw>
<msg timestamp="20201030 18:31:14.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018869278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019559792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:13.903" endtime="20201030 18:31:14.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018869278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019559792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:14.201" endtime="20201030 18:31:14.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:14.209" endtime="20201030 18:31:14.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.898" endtime="20201030 18:31:14.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.894" endtime="20201030 18:31:14.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:31:14.216" level="INFO">${PHILIP_RES} = [{'diff': 0.0006905139999999997}, {'diff': 0.000690472000000001}, {'diff': 0.0006905550000000024}, {'diff': 0.0006905279999999993}, {'diff': 0.0006905409999999994}, {'diff': 0.0006905700000000015}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:14.213" endtime="20201030 18:31:14.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:14.220" level="INFO">${RESULT} = {'diff': [0.0006905139999999997, 0.000690472000000001, 0.0006905550000000024, 0.0006905279999999993, 0.0006905409999999994, 0.0006905700000000015, 0.0006905410000000028, 0.0006905279999999993, 0.00069...</msg>
<status status="PASS" starttime="20201030 18:31:14.217" endtime="20201030 18:31:14.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.224" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 18:31:14.223" endtime="20201030 18:31:14.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.227" level="INFO">VALUE: [0.0006905139999999997, 0.000690472000000001, 0.0006905550000000024, 0.0006905279999999993, 0.0006905409999999994, 0.0006905700000000015, 0.0006905410000000028, 0.0006905279999999993, 0.0006905559999999984, 0.0006905830000000016, 0.0006905420000000023, 0.0006905549999999955, 0.0006905420000000023, 0.0006905550000000024, 0.000690555999999995, 0.000690569000000002, 0.0006905410000000028, 0.0006905139999999962, 0.0006905550000000024, 0.0006905700000000015, 0.0006905560000000019, 0.0006906250000000003, 0.0006905829999999946, 0.000690486000000004, 0.0006905560000000019, 0.0006904859999999971, 0.0006905560000000019, 0.0006905549999999955, 0.0006905700000000015, 0.0006905560000000019, 0.0006905549999999955, 0.000690486000000004, 0.0006905830000000016, 0.000690555999999995, 0.000690569000000002, 0.0006905700000000015, 0.0006906110000000007, 0.0006905410000000028, 0.0006906109999999938, 0.0006905549999999955, 0.000690555999999995, 0.0006905280000000097, 0.0006905689999999881, 0.0006905420000000023, 0.000690569000000002, 0.000690555999999995, 0.0006905550000000094, 0.0006905700000000015, 0.000690569000000002, 0.0006905560000000088]</msg>
<status status="PASS" starttime="20201030 18:31:14.225" endtime="20201030 18:31:14.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.220" endtime="20201030 18:31:14.228"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:14.232" endtime="20201030 18:31:14.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.230" endtime="20201030 18:31:14.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.229" endtime="20201030 18:31:14.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.805" endtime="20201030 18:31:14.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:13.804" endtime="20201030 18:31:14.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.914" endtime="20201030 18:31:14.252"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:14.256" endtime="20201030 18:31:14.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.255" endtime="20201030 18:31:14.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.254" endtime="20201030 18:31:14.277"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:52.606" endtime="20201030 18:31:14.277" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:30:31.355" endtime="20201030 18:31:14.286"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:31:14.355" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:31:14.364" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:31:15.553" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:31:14.354" endtime="20201030 18:31:15.553"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.556" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:31:15.555" endtime="20201030 18:31:15.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.353" endtime="20201030 18:31:15.557"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:15.559" endtime="20201030 18:31:15.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.558" endtime="20201030 18:31:15.746"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.758" endtime="20201030 18:31:15.773"></status>
</kw>
<msg timestamp="20201030 18:31:15.774" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['s is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.757" endtime="20201030 18:31:15.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.776" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['s is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.775" endtime="20201030 18:31:15.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.779" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:15.777" endtime="20201030 18:31:15.780"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:15.754" endtime="20201030 18:31:15.780"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:15.752" endtime="20201030 18:31:15.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.751" endtime="20201030 18:31:15.781"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:15.785" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:15.784" endtime="20201030 18:31:15.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.782" endtime="20201030 18:31:15.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.750" endtime="20201030 18:31:15.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.749" endtime="20201030 18:31:15.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.788" endtime="20201030 18:31:15.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.748" endtime="20201030 18:31:15.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.791" endtime="20201030 18:31:15.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.747" endtime="20201030 18:31:15.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:14.351" endtime="20201030 18:31:15.794"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:15.802" endtime="20201030 18:31:15.822"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.800" endtime="20201030 18:31:15.823"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.840" endtime="20201030 18:31:15.854"></status>
</kw>
<msg timestamp="20201030 18:31:15.854" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.838" endtime="20201030 18:31:15.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.857" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.855" endtime="20201030 18:31:15.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.860" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:15.858" endtime="20201030 18:31:15.860"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:15.835" endtime="20201030 18:31:15.861"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:15.833" endtime="20201030 18:31:15.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.831" endtime="20201030 18:31:15.862"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:15.865" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:15.865" endtime="20201030 18:31:15.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.862" endtime="20201030 18:31:15.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.830" endtime="20201030 18:31:15.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.829" endtime="20201030 18:31:15.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.867" endtime="20201030 18:31:15.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.827" endtime="20201030 18:31:15.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.824" endtime="20201030 18:31:15.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.798" endtime="20201030 18:31:15.870"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.881" endtime="20201030 18:31:15.896"></status>
</kw>
<msg timestamp="20201030 18:31:15.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.879" endtime="20201030 18:31:15.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.898" endtime="20201030 18:31:15.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.900" endtime="20201030 18:31:15.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.875" endtime="20201030 18:31:15.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.873" endtime="20201030 18:31:15.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.910" endtime="20201030 18:31:16.201"></status>
</kw>
<msg timestamp="20201030 18:31:16.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070845361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070868056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:15.908" endtime="20201030 18:31:16.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070845361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070868056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:16.205" endtime="20201030 18:31:16.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.214" endtime="20201030 18:31:16.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.906" endtime="20201030 18:31:16.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.904" endtime="20201030 18:31:16.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:16.220" level="INFO">${RESULT} = [{'diff': 2.269500000000313e-05}, {'diff': 2.22770000000011e-05}, {'diff': 2.1887999999997687e-05}, {'diff': 2.2722000000002796e-05}, {'diff': 2.1958000000002476e-05}, {'diff': 2.187500000000453e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:16.217" endtime="20201030 18:31:16.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:16.224" level="INFO">${ACCURACY} = {'diff': [2.269500000000313e-05, 2.22770000000011e-05, 2.1887999999997687e-05, 2.2722000000002796e-05, 2.1958000000002476e-05, 2.187500000000453e-05, 2.1958000000002476e-05, 2.2736000000009304e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:31:16.221" endtime="20201030 18:31:16.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.230" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 18:31:16.229" endtime="20201030 18:31:16.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.232" level="INFO">VALUE: [2.269500000000313e-05, 2.22770000000011e-05, 2.1887999999997687e-05, 2.2722000000002796e-05, 2.1958000000002476e-05, 2.187500000000453e-05, 2.1958000000002476e-05, 2.2736000000009304e-05, 2.25969999999992e-05, 2.240300000000417e-05, 2.2722000000002796e-05, 2.2110999999991332e-05, 2.1986000000001615e-05, 2.2778000000001075e-05, 2.216700000000349e-05, 2.2806000000000215e-05, 2.2722000000002796e-05, 2.215299999999698e-05, 2.2556000000006904e-05, 2.194499999999544e-05, 2.2582999999992692e-05, 2.265299999999748e-05, 2.2554999999993552e-05, 2.2027999999993386e-05, 2.187500000000453e-05, 2.265300000001136e-05, 2.2526999999994413e-05, 2.2722000000002796e-05, 2.24169999999968e-05, 2.2138000000004876e-05, 2.2610999999991832e-05, 2.2471999999995607e-05, 2.2166000000004016e-05, 2.2444000000010345e-05, 2.2250000000001435e-05, 2.233299999999938e-05, 2.2846999999992512e-05, 2.1971999999995107e-05, 2.243100000000331e-05, 2.206899999999956e-05, 2.233299999999938e-05, 2.2070000000012913e-05, 2.20969999999987e-05, 2.2346999999992012e-05, 2.2666999999990112e-05, 2.2527999999993886e-05, 2.1929999999989458e-05, 2.216700000000349e-05, 2.2806000000000215e-05, 2.222299999998789e-05]</msg>
<status status="PASS" starttime="20201030 18:31:16.231" endtime="20201030 18:31:16.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.225" endtime="20201030 18:31:16.233"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:16.237" endtime="20201030 18:31:16.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.235" endtime="20201030 18:31:16.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.234" endtime="20201030 18:31:16.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.872" endtime="20201030 18:31:16.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.871" endtime="20201030 18:31:16.257"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.266" endtime="20201030 18:31:16.281"></status>
</kw>
<msg timestamp="20201030 18:31:16.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:16.265" endtime="20201030 18:31:16.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:16.283" endtime="20201030 18:31:16.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.286" endtime="20201030 18:31:16.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.262" endtime="20201030 18:31:16.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.260" endtime="20201030 18:31:16.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.295" endtime="20201030 18:31:16.583"></status>
</kw>
<msg timestamp="20201030 18:31:16.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02183, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021852556, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:31:16.293" endtime="20201030 18:31:16.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02183, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021852556, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:31:16.590" endtime="20201030 18:31:16.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.600" endtime="20201030 18:31:16.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.291" endtime="20201030 18:31:16.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.289" endtime="20201030 18:31:16.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:16.611" level="INFO">${RESULT} = [{'diff': 2.2555999999999965e-05}, {'diff': 2.2750000000001935e-05}, {'diff': 2.2388000000001657e-05}, {'diff': 2.24030000000007e-05}, {'diff': 2.205499999999999e-05}, {'diff': 2.184700000000192e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:16.607" endtime="20201030 18:31:16.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:16.619" level="INFO">${ACCURACY} = {'diff': [2.2555999999999965e-05, 2.2750000000001935e-05, 2.2388000000001657e-05, 2.24030000000007e-05, 2.205499999999999e-05, 2.184700000000192e-05, 2.25830000000031e-05, 2.281900000000031e-05, 2.202...</msg>
<status status="PASS" starttime="20201030 18:31:16.613" endtime="20201030 18:31:16.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.626" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 18:31:16.624" endtime="20201030 18:31:16.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.630" level="INFO">VALUE: [2.2555999999999965e-05, 2.2750000000001935e-05, 2.2388000000001657e-05, 2.24030000000007e-05, 2.205499999999999e-05, 2.184700000000192e-05, 2.25830000000031e-05, 2.281900000000031e-05, 2.2028000000000325e-05, 2.261099999999877e-05, 2.2542000000000395e-05, 2.205499999999999e-05, 2.218099999999959e-05, 2.256900000000006e-05, 2.2249999999997966e-05, 2.2041999999999895e-05, 2.2013999999997286e-05, 2.262500000000181e-05, 2.238900000000113e-05, 2.27229999999988e-05, 2.213900000000088e-05, 2.220899999999873e-05, 2.191699999999977e-05, 2.2542000000000395e-05, 2.245899999999898e-05, 2.2207999999999256e-05, 2.256900000000006e-05, 2.2457999999999506e-05, 2.19030000000002e-05, 2.229100000000067e-05, 2.2180000000000116e-05, 2.1971999999998576e-05, 2.2680000000000616e-05, 2.229100000000067e-05, 2.2749999999998466e-05, 2.2028000000000325e-05, 2.256900000000006e-05, 2.1986000000001615e-05, 2.2292000000000145e-05, 2.2819999999999785e-05, 2.243099999999984e-05, 2.208299999999913e-05, 2.1986000000001615e-05, 2.2070000000002504e-05, 2.2583999999999105e-05, 2.2542000000000395e-05, 2.186100000000149e-05, 2.27229999999988e-05, 2.273699999999837e-05, 2.1971999999998576e-05]</msg>
<status status="PASS" starttime="20201030 18:31:16.627" endtime="20201030 18:31:16.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.621" endtime="20201030 18:31:16.632"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:16.639" endtime="20201030 18:31:16.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.637" endtime="20201030 18:31:16.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.634" endtime="20201030 18:31:16.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.258" endtime="20201030 18:31:16.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.258" endtime="20201030 18:31:16.661"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.677" endtime="20201030 18:31:16.694"></status>
</kw>
<msg timestamp="20201030 18:31:16.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:16.674" endtime="20201030 18:31:16.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:16.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:16.696" endtime="20201030 18:31:16.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.699" endtime="20201030 18:31:16.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.669" endtime="20201030 18:31:16.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.665" endtime="20201030 18:31:16.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:16.708" endtime="20201030 18:31:16.994"></status>
</kw>
<msg timestamp="20201030 18:31:16.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031212931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031235694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:16.707" endtime="20201030 18:31:16.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031212931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031235694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:16.998" endtime="20201030 18:31:17.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.007" endtime="20201030 18:31:17.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.704" endtime="20201030 18:31:17.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.702" endtime="20201030 18:31:17.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:17.014" level="INFO">${RESULT} = [{'diff': 2.276300000000203e-05}, {'diff': 2.206899999999956e-05}, {'diff': 2.286099999999902e-05}, {'diff': 2.2235999999994926e-05}, {'diff': 2.188899999999716e-05}, {'diff': 2.2014000000000755e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:17.010" endtime="20201030 18:31:17.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:17.018" level="INFO">${ACCURACY} = {'diff': [2.276300000000203e-05, 2.206899999999956e-05, 2.286099999999902e-05, 2.2235999999994926e-05, 2.188899999999716e-05, 2.2014000000000755e-05, 2.213900000000435e-05, 2.2193999999996217e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 18:31:17.015" endtime="20201030 18:31:17.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.023" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 18:31:17.021" endtime="20201030 18:31:17.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.025" level="INFO">VALUE: [2.276300000000203e-05, 2.206899999999956e-05, 2.286099999999902e-05, 2.2235999999994926e-05, 2.188899999999716e-05, 2.2014000000000755e-05, 2.213900000000435e-05, 2.2193999999996217e-05, 2.2749999999994996e-05, 2.2264000000001005e-05, 2.1986000000001615e-05, 2.2708000000003226e-05, 2.241700000000374e-05, 2.240300000000417e-05, 2.2722000000002796e-05, 2.2278000000000575e-05, 2.2778000000001075e-05, 2.2083999999998605e-05, 2.2736000000002365e-05, 2.1999999999994246e-05, 2.265299999999748e-05, 2.236099999999852e-05, 2.2750000000001935e-05, 2.2652000000004946e-05, 2.2611999999998245e-05, 2.2804999999993802e-05, 2.2457999999996037e-05, 2.1944000000002906e-05, 2.234699999999895e-05, 2.2776999999994663e-05, 2.254100000000092e-05, 2.20969999999987e-05, 2.211099999999827e-05, 2.230500000000024e-05, 2.266700000000399e-05, 2.212499999999784e-05, 2.1930000000003336e-05, 2.236099999999852e-05, 2.2292000000000145e-05, 2.266699999999705e-05, 2.2041999999999895e-05, 2.265299999999748e-05, 2.243100000000331e-05, 2.2250000000001435e-05, 2.212499999999784e-05, 2.2764000000001505e-05, 2.206899999999956e-05, 2.2000000000001185e-05, 2.2457999999996037e-05, 2.281900000000031e-05]</msg>
<status status="PASS" starttime="20201030 18:31:17.024" endtime="20201030 18:31:17.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.019" endtime="20201030 18:31:17.026"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:17.030" endtime="20201030 18:31:17.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.028" endtime="20201030 18:31:17.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.027" endtime="20201030 18:31:17.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.662" endtime="20201030 18:31:17.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:16.661" endtime="20201030 18:31:17.050"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.061" endtime="20201030 18:31:17.078"></status>
</kw>
<msg timestamp="20201030 18:31:17.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:17.058" endtime="20201030 18:31:17.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:17.080" endtime="20201030 18:31:17.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.082" endtime="20201030 18:31:17.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.056" endtime="20201030 18:31:17.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.054" endtime="20201030 18:31:17.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.092" endtime="20201030 18:31:17.378"></status>
</kw>
<msg timestamp="20201030 18:31:17.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023700792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023723264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:17.090" endtime="20201030 18:31:17.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023700792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023723264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:17.382" endtime="20201030 18:31:17.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.391" endtime="20201030 18:31:17.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.087" endtime="20201030 18:31:17.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.086" endtime="20201030 18:31:17.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:17.398" level="INFO">${RESULT} = [{'diff': 2.2472000000002545e-05}, {'diff': 2.2750000000001935e-05}, {'diff': 2.2555999999999965e-05}, {'diff': 2.244499999999941e-05}, {'diff': 2.215300000000045e-05}, {'diff': 2.191699999999977e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:17.394" endtime="20201030 18:31:17.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:17.402" level="INFO">${ACCURACY} = {'diff': [2.2472000000002545e-05, 2.2750000000001935e-05, 2.2555999999999965e-05, 2.244499999999941e-05, 2.215300000000045e-05, 2.191699999999977e-05, 2.188900000000063e-05, 2.213899999999741e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 18:31:17.399" endtime="20201030 18:31:17.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.407" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 18:31:17.406" endtime="20201030 18:31:17.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.409" level="INFO">VALUE: [2.2472000000002545e-05, 2.2750000000001935e-05, 2.2555999999999965e-05, 2.244499999999941e-05, 2.215300000000045e-05, 2.191699999999977e-05, 2.188900000000063e-05, 2.213899999999741e-05, 2.2278000000000575e-05, 2.269499999999966e-05, 2.2611999999998245e-05, 2.27229999999988e-05, 2.2292000000000145e-05, 2.187500000000106e-05, 2.2457999999999506e-05, 2.20969999999987e-05, 2.2430000000000366e-05, 2.2416000000000796e-05, 2.231899999999981e-05, 2.2555999999999965e-05, 2.205499999999999e-05, 2.1971999999998576e-05, 2.2292000000000145e-05, 2.20969999999987e-05, 2.241700000000027e-05, 2.2514000000001255e-05, 2.2792000000000645e-05, 2.243099999999984e-05, 2.1958000000002476e-05, 2.269499999999966e-05, 2.2012999999997812e-05, 2.268100000000009e-05, 2.244500000000288e-05, 2.263900000000138e-05, 2.215300000000045e-05, 2.1943999999999436e-05, 2.2735999999998896e-05, 2.211100000000174e-05, 2.2222000000002295e-05, 2.256900000000006e-05, 2.2000000000001185e-05, 2.186100000000149e-05, 2.1971999999998576e-05, 2.230500000000024e-05, 2.2666000000001046e-05, 2.184699999999845e-05, 2.2457999999999506e-05, 2.208299999999913e-05, 2.212499999999784e-05, 2.2305999999999715e-05]</msg>
<status status="PASS" starttime="20201030 18:31:17.408" endtime="20201030 18:31:17.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.403" endtime="20201030 18:31:17.411"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:17.415" endtime="20201030 18:31:17.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.413" endtime="20201030 18:31:17.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.412" endtime="20201030 18:31:17.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.051" endtime="20201030 18:31:17.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.051" endtime="20201030 18:31:17.436"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.445" endtime="20201030 18:31:17.461"></status>
</kw>
<msg timestamp="20201030 18:31:17.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:17.444" endtime="20201030 18:31:17.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:17.463" endtime="20201030 18:31:17.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.465" endtime="20201030 18:31:17.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.441" endtime="20201030 18:31:17.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.439" endtime="20201030 18:31:17.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.475" endtime="20201030 18:31:17.761"></status>
</kw>
<msg timestamp="20201030 18:31:17.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022146069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022168083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:17.473" endtime="20201030 18:31:17.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022146069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022168083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:17.766" endtime="20201030 18:31:17.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.774" endtime="20201030 18:31:17.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.470" endtime="20201030 18:31:17.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.468" endtime="20201030 18:31:17.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:17.781" level="INFO">${RESULT} = [{'diff': 2.2014000000000755e-05}, {'diff': 2.243099999999984e-05}, {'diff': 2.2819999999999785e-05}, {'diff': 2.2292000000000145e-05}, {'diff': 2.268100000000009e-05}, {'diff': 2.195900000000195e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:17.778" endtime="20201030 18:31:17.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:17.786" level="INFO">${ACCURACY} = {'diff': [2.2014000000000755e-05, 2.243099999999984e-05, 2.2819999999999785e-05, 2.2292000000000145e-05, 2.268100000000009e-05, 2.195900000000195e-05, 2.2583999999999105e-05, 2.213900000000088e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:31:17.782" endtime="20201030 18:31:17.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.791" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 18:31:17.790" endtime="20201030 18:31:17.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.793" level="INFO">VALUE: [2.2014000000000755e-05, 2.243099999999984e-05, 2.2819999999999785e-05, 2.2292000000000145e-05, 2.268100000000009e-05, 2.195900000000195e-05, 2.2583999999999105e-05, 2.213900000000088e-05, 2.252700000000135e-05, 2.204100000000042e-05, 2.188900000000063e-05, 2.2221999999998826e-05, 2.213899999999741e-05, 2.236100000000199e-05, 2.241700000000027e-05, 2.2457999999999506e-05, 2.2028000000000325e-05, 2.187500000000106e-05, 2.238900000000113e-05, 2.25969999999992e-05, 2.212500000000131e-05, 2.191699999999977e-05, 2.270899999999923e-05, 2.2528000000000825e-05, 2.2292000000000145e-05, 2.193099999999934e-05, 2.212499999999784e-05, 2.2222000000002295e-05, 2.244499999999941e-05, 2.212499999999784e-05, 2.2598000000002144e-05, 2.245899999999898e-05, 2.261100000000224e-05, 2.2402000000001226e-05, 2.2707999999999756e-05, 2.254100000000092e-05, 2.238900000000113e-05, 2.188900000000063e-05, 2.265300000000095e-05, 2.1915999999996827e-05, 2.2278000000000575e-05, 2.2000000000001185e-05, 2.2736000000002365e-05, 2.2555999999999965e-05, 2.2749999999998466e-05, 2.238900000000113e-05, 2.234699999999895e-05, 2.2028000000000325e-05, 2.2513999999997786e-05, 2.194499999999891e-05]</msg>
<status status="PASS" starttime="20201030 18:31:17.792" endtime="20201030 18:31:17.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.787" endtime="20201030 18:31:17.795"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:17.798" endtime="20201030 18:31:17.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.797" endtime="20201030 18:31:17.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.796" endtime="20201030 18:31:17.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.437" endtime="20201030 18:31:17.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.437" endtime="20201030 18:31:17.819"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.828" endtime="20201030 18:31:17.843"></status>
</kw>
<msg timestamp="20201030 18:31:17.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:17.827" endtime="20201030 18:31:17.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:17.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:17.845" endtime="20201030 18:31:17.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.848" endtime="20201030 18:31:17.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.824" endtime="20201030 18:31:17.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.822" endtime="20201030 18:31:17.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:17.857" endtime="20201030 18:31:18.145"></status>
</kw>
<msg timestamp="20201030 18:31:18.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022488972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022510972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:17.856" endtime="20201030 18:31:18.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022488972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022510972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:18.150" endtime="20201030 18:31:18.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.158" endtime="20201030 18:31:18.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.853" endtime="20201030 18:31:18.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.851" endtime="20201030 18:31:18.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:18.165" level="INFO">${RESULT} = [{'diff': 2.2000000000001185e-05}, {'diff': 2.2514000000001255e-05}, {'diff': 2.2069999999999035e-05}, {'diff': 2.2014000000000755e-05}, {'diff': 2.265299999999748e-05}, {'diff': 2.266700000000052e-05...</msg>
<status status="PASS" starttime="20201030 18:31:18.162" endtime="20201030 18:31:18.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:18.169" level="INFO">${ACCURACY} = {'diff': [2.2000000000001185e-05, 2.2514000000001255e-05, 2.2069999999999035e-05, 2.2014000000000755e-05, 2.265299999999748e-05, 2.266700000000052e-05, 2.2236000000001865e-05, 2.2347999999998425e-05, ...</msg>
<status status="PASS" starttime="20201030 18:31:18.166" endtime="20201030 18:31:18.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.174" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 18:31:18.173" endtime="20201030 18:31:18.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.176" level="INFO">VALUE: [2.2000000000001185e-05, 2.2514000000001255e-05, 2.2069999999999035e-05, 2.2014000000000755e-05, 2.265299999999748e-05, 2.266700000000052e-05, 2.2236000000001865e-05, 2.2347999999998425e-05, 2.243099999999984e-05, 2.219499999999916e-05, 2.244499999999941e-05, 2.216700000000002e-05, 2.2528000000000825e-05, 2.19030000000002e-05, 2.2028000000000325e-05, 2.194500000000238e-05, 2.195900000000195e-05, 2.2264000000001005e-05, 2.2166000000000546e-05, 2.212499999999784e-05, 2.202700000000085e-05, 2.254100000000092e-05, 2.1943999999999436e-05, 2.1985999999998146e-05, 2.237500000000156e-05, 2.2694000000000186e-05, 2.25969999999992e-05, 2.237499999999809e-05, 2.2292000000000145e-05, 2.24169999999968e-05, 2.2542000000000395e-05, 2.266699999999705e-05, 2.2569999999999535e-05, 2.266700000000052e-05, 2.241700000000027e-05, 2.270899999999923e-05, 2.20969999999987e-05, 2.193100000000281e-05, 2.2305999999999715e-05, 2.212500000000131e-05, 2.2112000000001214e-05, 2.2457999999999506e-05, 2.184699999999845e-05, 2.2236000000001865e-05, 2.229100000000067e-05, 2.2694000000000186e-05, 2.2457999999999506e-05, 2.191699999999977e-05, 2.2749999999998466e-05, 2.258299999999963e-05]</msg>
<status status="PASS" starttime="20201030 18:31:18.175" endtime="20201030 18:31:18.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.170" endtime="20201030 18:31:18.178"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:18.182" endtime="20201030 18:31:18.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.180" endtime="20201030 18:31:18.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.179" endtime="20201030 18:31:18.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.820" endtime="20201030 18:31:18.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:17.819" endtime="20201030 18:31:18.202"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.211" endtime="20201030 18:31:18.227"></status>
</kw>
<msg timestamp="20201030 18:31:18.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:18.210" endtime="20201030 18:31:18.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:18.229" endtime="20201030 18:31:18.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.232" endtime="20201030 18:31:18.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.207" endtime="20201030 18:31:18.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.205" endtime="20201030 18:31:18.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.241" endtime="20201030 18:31:18.528"></status>
</kw>
<msg timestamp="20201030 18:31:18.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023254333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023276444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:18.240" endtime="20201030 18:31:18.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023254333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023276444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:18.535" endtime="20201030 18:31:18.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.545" endtime="20201030 18:31:18.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.237" endtime="20201030 18:31:18.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.235" endtime="20201030 18:31:18.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:18.553" level="INFO">${RESULT} = [{'diff': 2.211100000000174e-05}, {'diff': 2.2236000000001865e-05}, {'diff': 2.281900000000031e-05}, {'diff': 2.1986000000001615e-05}, {'diff': 2.184700000000192e-05}, {'diff': 2.2471999999999076e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:18.549" endtime="20201030 18:31:18.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:18.559" level="INFO">${ACCURACY} = {'diff': [2.211100000000174e-05, 2.2236000000001865e-05, 2.281900000000031e-05, 2.1986000000001615e-05, 2.184700000000192e-05, 2.2471999999999076e-05, 2.2707999999999756e-05, 2.2236000000001865e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:31:18.555" endtime="20201030 18:31:18.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.564" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 18:31:18.562" endtime="20201030 18:31:18.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.568" level="INFO">VALUE: [2.211100000000174e-05, 2.2236000000001865e-05, 2.281900000000031e-05, 2.1986000000001615e-05, 2.184700000000192e-05, 2.2471999999999076e-05, 2.2707999999999756e-05, 2.2236000000001865e-05, 2.1999999999997716e-05, 2.208299999999913e-05, 2.1972000000002045e-05, 2.2443999999999936e-05, 2.187499999999759e-05, 2.238899999999766e-05, 2.216700000000002e-05, 2.215300000000045e-05, 2.19030000000002e-05, 2.2499999999998216e-05, 2.241700000000027e-05, 2.2569999999999535e-05, 2.2402000000001226e-05, 2.2014000000000755e-05, 2.2792000000000645e-05, 2.2694000000000186e-05, 2.2193999999999686e-05, 2.2443999999999936e-05, 2.1957999999999006e-05, 2.237500000000156e-05, 2.2221999999998826e-05, 2.2415999999997327e-05, 2.243099999999984e-05, 2.2471999999999076e-05, 2.233300000000285e-05, 2.2443999999999936e-05, 2.2735999999998896e-05, 2.2235999999998396e-05, 2.236100000000199e-05, 2.2028000000000325e-05, 2.19030000000002e-05, 2.2778000000001075e-05, 2.213900000000088e-05, 2.191699999999977e-05, 2.22229999999983e-05, 2.2763999999998036e-05, 2.215300000000045e-05, 2.247299999999855e-05, 2.2749999999998466e-05, 2.25969999999992e-05, 2.2457999999999506e-05, 2.22770000000011e-05]</msg>
<status status="PASS" starttime="20201030 18:31:18.566" endtime="20201030 18:31:18.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.560" endtime="20201030 18:31:18.572"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:18.576" endtime="20201030 18:31:18.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.574" endtime="20201030 18:31:18.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.573" endtime="20201030 18:31:18.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.203" endtime="20201030 18:31:18.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.203" endtime="20201030 18:31:18.597"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.606" endtime="20201030 18:31:18.622"></status>
</kw>
<msg timestamp="20201030 18:31:18.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:18.604" endtime="20201030 18:31:18.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:18.624" endtime="20201030 18:31:18.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.626" endtime="20201030 18:31:18.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.601" endtime="20201030 18:31:18.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.599" endtime="20201030 18:31:18.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.636" endtime="20201030 18:31:18.922"></status>
</kw>
<msg timestamp="20201030 18:31:18.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0222745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022296458, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:18.634" endtime="20201030 18:31:18.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0222745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022296458, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:18.927" endtime="20201030 18:31:18.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.935" endtime="20201030 18:31:18.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.632" endtime="20201030 18:31:18.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.630" endtime="20201030 18:31:18.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:18.942" level="INFO">${RESULT} = [{'diff': 2.1958000000002476e-05}, {'diff': 2.2249999999997966e-05}, {'diff': 2.229100000000067e-05}, {'diff': 2.2235999999998396e-05}, {'diff': 2.240299999999723e-05}, {'diff': 2.2166000000000546e-05...</msg>
<status status="PASS" starttime="20201030 18:31:18.938" endtime="20201030 18:31:18.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:18.949" level="INFO">${ACCURACY} = {'diff': [2.1958000000002476e-05, 2.2249999999997966e-05, 2.229100000000067e-05, 2.2235999999998396e-05, 2.240299999999723e-05, 2.2166000000000546e-05, 2.230500000000024e-05, 2.2721999999999326e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:31:18.943" endtime="20201030 18:31:18.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.954" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 18:31:18.953" endtime="20201030 18:31:18.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:18.956" level="INFO">VALUE: [2.1958000000002476e-05, 2.2249999999997966e-05, 2.229100000000067e-05, 2.2235999999998396e-05, 2.240299999999723e-05, 2.2166000000000546e-05, 2.230500000000024e-05, 2.2721999999999326e-05, 2.2542000000000395e-05, 2.193099999999934e-05, 2.236099999999852e-05, 2.268100000000009e-05, 2.2764000000001505e-05, 2.234700000000242e-05, 2.2000000000001185e-05, 2.2792000000000645e-05, 2.263900000000138e-05, 2.215300000000045e-05, 2.24030000000007e-05, 2.1986000000001615e-05, 2.284700000000292e-05, 2.1971999999998576e-05, 2.2305999999999715e-05, 2.1971999999998576e-05, 2.2263999999997536e-05, 2.1929999999999866e-05, 2.2401999999997757e-05, 2.180499999999974e-05, 2.230500000000024e-05, 2.266700000000052e-05, 2.1958000000002476e-05, 2.2013999999997286e-05, 2.2221999999998826e-05, 2.2291999999996676e-05, 2.2443999999999936e-05, 2.2014000000000755e-05, 2.218099999999959e-05, 2.25969999999992e-05, 2.2292000000000145e-05, 2.188899999999716e-05, 2.269499999999966e-05, 2.194499999999891e-05, 2.184700000000192e-05, 2.270899999999923e-05, 2.2776999999998132e-05, 2.261099999999877e-05, 2.2097999999998175e-05, 2.2443999999999936e-05, 2.2152000000000976e-05, 2.281900000000031e-05]</msg>
<status status="PASS" starttime="20201030 18:31:18.955" endtime="20201030 18:31:18.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.950" endtime="20201030 18:31:18.958"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:18.962" endtime="20201030 18:31:18.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.960" endtime="20201030 18:31:18.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.959" endtime="20201030 18:31:18.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.598" endtime="20201030 18:31:18.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.597" endtime="20201030 18:31:18.982"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:18.991" endtime="20201030 18:31:19.007"></status>
</kw>
<msg timestamp="20201030 18:31:19.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:18.990" endtime="20201030 18:31:19.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:19.008" endtime="20201030 18:31:19.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.011" endtime="20201030 18:31:19.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.987" endtime="20201030 18:31:19.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.985" endtime="20201030 18:31:19.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.020" endtime="20201030 18:31:19.307"></status>
</kw>
<msg timestamp="20201030 18:31:19.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022248306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022271056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:19.019" endtime="20201030 18:31:19.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022248306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022271056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:19.311" endtime="20201030 18:31:19.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.319" endtime="20201030 18:31:19.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.016" endtime="20201030 18:31:19.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.014" endtime="20201030 18:31:19.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:19.330" level="INFO">${RESULT} = [{'diff': 2.2750000000001935e-05}, {'diff': 2.2749999999998466e-05}, {'diff': 2.213900000000088e-05}, {'diff': 2.234699999999895e-05}, {'diff': 2.2707999999999756e-05}, {'diff': 2.2305999999999715e-05...</msg>
<status status="PASS" starttime="20201030 18:31:19.325" endtime="20201030 18:31:19.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:19.336" level="INFO">${ACCURACY} = {'diff': [2.2750000000001935e-05, 2.2749999999998466e-05, 2.213900000000088e-05, 2.234699999999895e-05, 2.2707999999999756e-05, 2.2305999999999715e-05, 2.2806000000000215e-05, 2.2555999999999965e-05, ...</msg>
<status status="PASS" starttime="20201030 18:31:19.331" endtime="20201030 18:31:19.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.343" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 18:31:19.341" endtime="20201030 18:31:19.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.347" level="INFO">VALUE: [2.2750000000001935e-05, 2.2749999999998466e-05, 2.213900000000088e-05, 2.234699999999895e-05, 2.2707999999999756e-05, 2.2305999999999715e-05, 2.2806000000000215e-05, 2.2555999999999965e-05, 2.2819999999999785e-05, 2.2541999999996926e-05, 2.261099999999877e-05, 2.2000000000001185e-05, 2.2666000000001046e-05, 2.2249999999997966e-05, 2.261100000000224e-05, 2.1986000000001615e-05, 2.236099999999852e-05, 2.2416000000000796e-05, 2.261100000000224e-05, 2.2457999999999506e-05, 2.2014000000000755e-05, 2.237500000000156e-05, 2.258299999999963e-05, 2.2443999999999936e-05, 2.241700000000027e-05, 2.2014000000000755e-05, 2.231899999999981e-05, 2.2763999999998036e-05, 2.188900000000063e-05, 2.2806000000000215e-05, 2.193099999999934e-05, 2.186100000000149e-05, 2.22229999999983e-05, 2.263900000000138e-05, 2.266700000000052e-05, 2.258299999999963e-05, 2.1888000000001157e-05, 2.1985999999998146e-05, 2.188900000000063e-05, 2.1929999999999866e-05, 2.181899999999931e-05, 2.2249999999997966e-05, 2.24030000000007e-05, 2.2166000000000546e-05, 2.25969999999992e-05, 2.238900000000113e-05, 2.19030000000002e-05, 2.236100000000199e-05, 2.265300000000095e-05, 2.1972000000002045e-05]</msg>
<status status="PASS" starttime="20201030 18:31:19.345" endtime="20201030 18:31:19.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.337" endtime="20201030 18:31:19.349"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:19.355" endtime="20201030 18:31:19.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.353" endtime="20201030 18:31:19.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.351" endtime="20201030 18:31:19.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.983" endtime="20201030 18:31:19.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:18.983" endtime="20201030 18:31:19.376"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.385" endtime="20201030 18:31:19.402"></status>
</kw>
<msg timestamp="20201030 18:31:19.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:19.384" endtime="20201030 18:31:19.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:19.403" endtime="20201030 18:31:19.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.406" endtime="20201030 18:31:19.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.381" endtime="20201030 18:31:19.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.379" endtime="20201030 18:31:19.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.415" endtime="20201030 18:31:19.702"></status>
</kw>
<msg timestamp="20201030 18:31:19.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023252972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023275444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:19.414" endtime="20201030 18:31:19.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023252972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023275444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:19.706" endtime="20201030 18:31:19.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.715" endtime="20201030 18:31:19.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.411" endtime="20201030 18:31:19.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.409" endtime="20201030 18:31:19.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:19.722" level="INFO">${RESULT} = [{'diff': 2.2471999999999076e-05}, {'diff': 2.2443999999999936e-05}, {'diff': 2.2014000000000755e-05}, {'diff': 2.254100000000092e-05}, {'diff': 2.2666000000001046e-05}, {'diff': 2.2693999999996717e-0...</msg>
<status status="PASS" starttime="20201030 18:31:19.718" endtime="20201030 18:31:19.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:19.726" level="INFO">${ACCURACY} = {'diff': [2.2471999999999076e-05, 2.2443999999999936e-05, 2.2014000000000755e-05, 2.254100000000092e-05, 2.2666000000001046e-05, 2.2693999999996717e-05, 2.1985999999998146e-05, 2.188900000000063e-05, ...</msg>
<status status="PASS" starttime="20201030 18:31:19.723" endtime="20201030 18:31:19.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.730" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 18:31:19.729" endtime="20201030 18:31:19.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.733" level="INFO">VALUE: [2.2471999999999076e-05, 2.2443999999999936e-05, 2.2014000000000755e-05, 2.254100000000092e-05, 2.2666000000001046e-05, 2.2693999999996717e-05, 2.1985999999998146e-05, 2.188900000000063e-05, 2.2513999999997786e-05, 2.2221999999998826e-05, 2.2235999999998396e-05, 2.187500000000106e-05, 2.2041999999999895e-05, 2.2736000000002365e-05, 2.261099999999877e-05, 2.2778000000001075e-05, 2.188900000000063e-05, 2.261099999999877e-05, 2.2014000000000755e-05, 2.2083999999998605e-05, 2.2499999999998216e-05, 2.2235999999998396e-05, 2.2097999999998175e-05, 2.1834000000001824e-05, 2.269499999999966e-05, 2.212500000000131e-05, 2.236100000000199e-05, 2.258299999999963e-05, 2.2013999999997286e-05, 2.2221999999998826e-05, 2.1957999999999006e-05, 2.280500000000074e-05, 2.2263999999997536e-05, 2.2750000000001935e-05, 2.191699999999977e-05, 2.2264000000001005e-05, 2.2098000000001644e-05, 2.2528000000000825e-05, 2.1986000000001615e-05, 2.2527999999997356e-05, 2.2749999999998466e-05, 2.218099999999959e-05, 2.2749999999998466e-05, 2.266700000000052e-05, 2.216700000000002e-05, 2.2278000000000575e-05, 2.269499999999966e-05, 2.2598000000002144e-05, 2.1847999999997925e-05, 2.234699999999895e-05]</msg>
<status status="PASS" starttime="20201030 18:31:19.731" endtime="20201030 18:31:19.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.727" endtime="20201030 18:31:19.743"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:19.747" endtime="20201030 18:31:19.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.746" endtime="20201030 18:31:19.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.744" endtime="20201030 18:31:19.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.377" endtime="20201030 18:31:19.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.377" endtime="20201030 18:31:19.768"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.777" endtime="20201030 18:31:19.793"></status>
</kw>
<msg timestamp="20201030 18:31:19.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:19.775" endtime="20201030 18:31:19.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:19.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:19.795" endtime="20201030 18:31:19.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.798" endtime="20201030 18:31:19.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.773" endtime="20201030 18:31:19.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.771" endtime="20201030 18:31:19.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:19.807" endtime="20201030 18:31:20.092"></status>
</kw>
<msg timestamp="20201030 18:31:20.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022585486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022608917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:19.805" endtime="20201030 18:31:20.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022585486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022608917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:20.097" endtime="20201030 18:31:20.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.105" endtime="20201030 18:31:20.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.803" endtime="20201030 18:31:20.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.801" endtime="20201030 18:31:20.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:20.112" level="INFO">${RESULT} = [{'diff': 2.343100000000084e-05}, {'diff': 2.3542000000001395e-05}, {'diff': 2.35970000000002e-05}, {'diff': 2.302700000000185e-05}, {'diff': 2.3278000000001575e-05}, {'diff': 2.3387999999999187e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:20.109" endtime="20201030 18:31:20.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:20.117" level="INFO">${ACCURACY} = {'diff': [2.343100000000084e-05, 2.3542000000001395e-05, 2.35970000000002e-05, 2.302700000000185e-05, 2.3278000000001575e-05, 2.3387999999999187e-05, 2.3680000000001616e-05, 2.338899999999866e-05, 2.3...</msg>
<status status="PASS" starttime="20201030 18:31:20.113" endtime="20201030 18:31:20.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.122" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 18:31:20.121" endtime="20201030 18:31:20.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.125" level="INFO">VALUE: [2.343100000000084e-05, 2.3542000000001395e-05, 2.35970000000002e-05, 2.302700000000185e-05, 2.3278000000001575e-05, 2.3387999999999187e-05, 2.3680000000001616e-05, 2.338899999999866e-05, 2.3249999999998966e-05, 2.3500000000002685e-05, 2.3749999999999466e-05, 2.3221999999999826e-05, 2.35970000000002e-05, 2.284700000000292e-05, 2.331900000000081e-05, 2.358300000000063e-05, 2.2972000000003046e-05, 2.3485999999999646e-05, 2.29030000000012e-05, 2.2999999999998716e-05, 2.291700000000077e-05, 2.302700000000185e-05, 2.30969999999997e-05, 2.2833999999999355e-05, 2.3777999999998606e-05, 2.315300000000145e-05, 2.3444000000000936e-05, 2.3763999999999036e-05, 2.3165999999998077e-05, 2.337499999999909e-05, 2.338899999999866e-05, 2.3235999999999396e-05, 2.304100000000142e-05, 2.361099999999977e-05, 2.3749999999999466e-05, 2.322300000000277e-05, 2.3777999999998606e-05, 2.3070000000000035e-05, 2.2999999999998716e-05, 2.3499999999999216e-05, 2.3332999999996912e-05, 2.283299999999988e-05, 2.35970000000002e-05, 2.3292000000001145e-05, 2.3584000000000105e-05, 2.3291999999997676e-05, 2.3694000000001186e-05, 2.366699999999805e-05, 2.338899999999866e-05, 2.354100000000192e-05]</msg>
<status status="PASS" starttime="20201030 18:31:20.123" endtime="20201030 18:31:20.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.118" endtime="20201030 18:31:20.126"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:20.130" endtime="20201030 18:31:20.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.128" endtime="20201030 18:31:20.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.127" endtime="20201030 18:31:20.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.769" endtime="20201030 18:31:20.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:19.768" endtime="20201030 18:31:20.150"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.159" endtime="20201030 18:31:20.176"></status>
</kw>
<msg timestamp="20201030 18:31:20.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:20.158" endtime="20201030 18:31:20.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:20.177" endtime="20201030 18:31:20.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.180" endtime="20201030 18:31:20.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.155" endtime="20201030 18:31:20.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.153" endtime="20201030 18:31:20.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.190" endtime="20201030 18:31:20.480"></status>
</kw>
<msg timestamp="20201030 18:31:20.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022424625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022449111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:20.188" endtime="20201030 18:31:20.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022424625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022449111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:20.484" endtime="20201030 18:31:20.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.492" endtime="20201030 18:31:20.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.185" endtime="20201030 18:31:20.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.183" endtime="20201030 18:31:20.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:20.499" level="INFO">${RESULT} = [{'diff': 2.4486000000000646e-05}, {'diff': 2.4208000000001256e-05}, {'diff': 2.412499999999984e-05}, {'diff': 2.4556000000001965e-05}, {'diff': 2.388899999999916e-05}, {'diff': 2.387499999999959e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:20.496" endtime="20201030 18:31:20.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:20.503" level="INFO">${ACCURACY} = {'diff': [2.4486000000000646e-05, 2.4208000000001256e-05, 2.412499999999984e-05, 2.4556000000001965e-05, 2.388899999999916e-05, 2.387499999999959e-05, 2.4236000000000396e-05, 2.4277999999999106e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:31:20.500" endtime="20201030 18:31:20.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.508" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 18:31:20.507" endtime="20201030 18:31:20.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.511" level="INFO">VALUE: [2.4486000000000646e-05, 2.4208000000001256e-05, 2.412499999999984e-05, 2.4556000000001965e-05, 2.388899999999916e-05, 2.387499999999959e-05, 2.4236000000000396e-05, 2.4277999999999106e-05, 2.4165999999999077e-05, 2.4320000000001285e-05, 2.420900000000073e-05, 2.4249999999999966e-05, 2.415299999999898e-05, 2.4527999999999356e-05, 2.383300000000088e-05, 2.3819999999997316e-05, 2.3972000000000576e-05, 2.4568999999998592e-05, 2.387500000000306e-05, 2.4665999999999577e-05, 2.411100000000027e-05, 2.4750000000000466e-05, 2.4208000000001256e-05, 2.4429999999998897e-05, 2.3971999999997107e-05, 2.420899999999726e-05, 2.408300000000113e-05, 2.4444000000001936e-05, 2.4707999999998287e-05, 2.4528000000002825e-05, 2.436100000000052e-05, 2.419499999999769e-05, 2.4236000000000396e-05, 2.4569999999998066e-05, 2.4179999999998647e-05, 2.393099999999787e-05, 2.4084000000000605e-05, 2.443099999999837e-05, 2.4554999999999022e-05, 2.4096999999997232e-05, 2.434700000000095e-05, 2.4236000000000396e-05, 2.413899999999941e-05, 2.4276999999999632e-05, 2.434700000000095e-05, 2.4443999999998467e-05, 2.463899999999991e-05, 2.413899999999941e-05, 2.4554999999999022e-05, 2.436100000000052e-05]</msg>
<status status="PASS" starttime="20201030 18:31:20.509" endtime="20201030 18:31:20.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.504" endtime="20201030 18:31:20.512"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:20.516" endtime="20201030 18:31:20.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.514" endtime="20201030 18:31:20.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.513" endtime="20201030 18:31:20.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.151" endtime="20201030 18:31:20.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.151" endtime="20201030 18:31:20.537"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.546" endtime="20201030 18:31:20.563"></status>
</kw>
<msg timestamp="20201030 18:31:20.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:20.544" endtime="20201030 18:31:20.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:20.564" endtime="20201030 18:31:20.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.567" endtime="20201030 18:31:20.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.541" endtime="20201030 18:31:20.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.539" endtime="20201030 18:31:20.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.577" endtime="20201030 18:31:20.861"></status>
</kw>
<msg timestamp="20201030 18:31:20.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023600139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023625264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:20.575" endtime="20201030 18:31:20.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023600139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023625264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:20.866" endtime="20201030 18:31:20.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.874" endtime="20201030 18:31:20.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.572" endtime="20201030 18:31:20.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.570" endtime="20201030 18:31:20.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:20.882" level="INFO">${RESULT} = [{'diff': 2.512500000000084e-05}, {'diff': 2.563900000000091e-05}, {'diff': 2.561100000000177e-05}, {'diff': 2.536100000000152e-05}, {'diff': 2.5486000000001646e-05}, {'diff': 2.4834000000001355e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:20.879" endtime="20201030 18:31:20.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:20.886" level="INFO">${ACCURACY} = {'diff': [2.512500000000084e-05, 2.563900000000091e-05, 2.561100000000177e-05, 2.536100000000152e-05, 2.5486000000001646e-05, 2.4834000000001355e-05, 2.5541999999999926e-05, 2.488900000000016e-05, 2.5...</msg>
<status status="PASS" starttime="20201030 18:31:20.883" endtime="20201030 18:31:20.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.891" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 18:31:20.890" endtime="20201030 18:31:20.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.894" level="INFO">VALUE: [2.512500000000084e-05, 2.563900000000091e-05, 2.561100000000177e-05, 2.536100000000152e-05, 2.5486000000001646e-05, 2.4834000000001355e-05, 2.5541999999999926e-05, 2.488900000000016e-05, 2.5291999999999676e-05, 2.5014000000000286e-05, 2.5179999999999647e-05, 2.538900000000066e-05, 2.538900000000066e-05, 2.5777000000001132e-05, 2.5264000000000536e-05, 2.547300000000155e-05, 2.538900000000066e-05, 2.4860999999997552e-05, 2.49169999999993e-05, 2.487500000000059e-05, 2.5000000000000716e-05, 2.5222000000001826e-05, 2.561100000000177e-05, 2.5082999999998662e-05, 2.5514000000000786e-05, 2.5471999999998607e-05, 2.516699999999955e-05, 2.5305999999999246e-05, 2.515299999999998e-05, 2.566699999999658e-05, 2.5194000000002686e-05, 2.5596999999998732e-05, 2.566700000000005e-05, 2.5416000000000327e-05, 2.484700000000145e-05, 2.513900000000041e-05, 2.5429999999999897e-05, 2.5096999999998232e-05, 2.5221999999998357e-05, 2.5500000000001216e-05, 2.488900000000016e-05, 2.5318999999999342e-05, 2.5068999999999092e-05, 2.5332999999998912e-05, 2.49169999999993e-05, 2.5249999999997497e-05, 2.5612000000001245e-05, 2.486100000000102e-05, 2.5014000000000286e-05, 2.5222000000001826e-05]</msg>
<status status="PASS" starttime="20201030 18:31:20.892" endtime="20201030 18:31:20.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.887" endtime="20201030 18:31:20.896"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:20.900" endtime="20201030 18:31:20.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.898" endtime="20201030 18:31:20.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.897" endtime="20201030 18:31:20.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.538" endtime="20201030 18:31:20.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.537" endtime="20201030 18:31:20.920"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.929" endtime="20201030 18:31:20.946"></status>
</kw>
<msg timestamp="20201030 18:31:20.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:20.928" endtime="20201030 18:31:20.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:20.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:20.947" endtime="20201030 18:31:20.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.950" endtime="20201030 18:31:20.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.925" endtime="20201030 18:31:20.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.923" endtime="20201030 18:31:20.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:20.959" endtime="20201030 18:31:21.245"></status>
</kw>
<msg timestamp="20201030 18:31:21.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022745667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022772167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:20.958" endtime="20201030 18:31:21.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022745667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022772167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:21.249" endtime="20201030 18:31:21.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.258" endtime="20201030 18:31:21.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.955" endtime="20201030 18:31:21.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.953" endtime="20201030 18:31:21.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:21.265" level="INFO">${RESULT} = [{'diff': 2.6499999999998747e-05}, {'diff': 2.6333999999999386e-05}, {'diff': 2.6124999999998372e-05}, {'diff': 2.594499999999944e-05}, {'diff': 2.640299999999776e-05}, {'diff': 2.6527000000001882e-05...</msg>
<status status="PASS" starttime="20201030 18:31:21.261" endtime="20201030 18:31:21.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:21.270" level="INFO">${ACCURACY} = {'diff': [2.6499999999998747e-05, 2.6333999999999386e-05, 2.6124999999998372e-05, 2.594499999999944e-05, 2.640299999999776e-05, 2.6527000000001882e-05, 2.6290999999997733e-05, 2.6708000000000287e-05, ...</msg>
<status status="PASS" starttime="20201030 18:31:21.266" endtime="20201030 18:31:21.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.274" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 18:31:21.273" endtime="20201030 18:31:21.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.278" level="INFO">VALUE: [2.6499999999998747e-05, 2.6333999999999386e-05, 2.6124999999998372e-05, 2.594499999999944e-05, 2.640299999999776e-05, 2.6527000000001882e-05, 2.6290999999997733e-05, 2.6708000000000287e-05, 2.6305000000000772e-05, 2.6319999999999816e-05, 2.6292000000000676e-05, 2.6278000000001106e-05, 2.641699999999733e-05, 2.5805000000000272e-05, 2.6708000000000287e-05, 2.6292000000000676e-05, 2.6096999999999232e-05, 2.595900000000248e-05, 2.6583000000000162e-05, 2.637500000000209e-05, 2.6333999999999386e-05, 2.638899999999819e-05, 2.6292000000000676e-05, 2.6263999999998067e-05, 2.6763999999998567e-05, 2.616700000000055e-05, 2.661100000000277e-05, 2.6499999999998747e-05, 2.5930000000000397e-05, 2.6276999999998163e-05, 2.6110999999998802e-05, 2.6679999999997678e-05, 2.5999999999998247e-05, 2.6791000000001702e-05, 2.6250000000001966e-05, 2.6471999999999607e-05, 2.6708000000000287e-05, 2.588900000000116e-05, 2.6042000000000426e-05, 2.5971999999999107e-05, 2.6583000000000162e-05, 2.584700000000245e-05, 2.640299999999776e-05, 2.6028000000000856e-05, 2.6221999999999357e-05, 2.6306000000000246e-05, 2.597300000000205e-05, 2.6347999999998956e-05, 2.6513000000002312e-05, 2.6334000000002855e-05]</msg>
<status status="PASS" starttime="20201030 18:31:21.276" endtime="20201030 18:31:21.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.271" endtime="20201030 18:31:21.279"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:21.283" endtime="20201030 18:31:21.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.282" endtime="20201030 18:31:21.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.280" endtime="20201030 18:31:21.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.921" endtime="20201030 18:31:21.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:20.921" endtime="20201030 18:31:21.304"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.313" endtime="20201030 18:31:21.329"></status>
</kw>
<msg timestamp="20201030 18:31:21.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:21.311" endtime="20201030 18:31:21.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:21.331" endtime="20201030 18:31:21.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.334" endtime="20201030 18:31:21.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.309" endtime="20201030 18:31:21.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.307" endtime="20201030 18:31:21.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.344" endtime="20201030 18:31:21.632"></status>
</kw>
<msg timestamp="20201030 18:31:21.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022418792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022446528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:21.341" endtime="20201030 18:31:21.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022418792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022446528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:21.636" endtime="20201030 18:31:21.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.644" endtime="20201030 18:31:21.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.339" endtime="20201030 18:31:21.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.337" endtime="20201030 18:31:21.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:21.651" level="INFO">${RESULT} = [{'diff': 2.7736000000000427e-05}, {'diff': 2.720900000000026e-05}, {'diff': 2.7776999999999663e-05}, {'diff': 2.7014000000002286e-05}, {'diff': 2.7818999999998373e-05}, {'diff': 2.7235999999999927e-0...</msg>
<status status="PASS" starttime="20201030 18:31:21.648" endtime="20201030 18:31:21.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:21.655" level="INFO">${ACCURACY} = {'diff': [2.7736000000000427e-05, 2.720900000000026e-05, 2.7776999999999663e-05, 2.7014000000002286e-05, 2.7818999999998373e-05, 2.7235999999999927e-05, 2.7569000000001592e-05, 2.7624999999999872e-05,...</msg>
<status status="PASS" starttime="20201030 18:31:21.652" endtime="20201030 18:31:21.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.659" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 18:31:21.658" endtime="20201030 18:31:21.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.662" level="INFO">VALUE: [2.7736000000000427e-05, 2.720900000000026e-05, 2.7776999999999663e-05, 2.7014000000002286e-05, 2.7818999999998373e-05, 2.7235999999999927e-05, 2.7569000000001592e-05, 2.7624999999999872e-05, 2.7291999999998207e-05, 2.6986000000003146e-05, 2.7444000000001467e-05, 2.695900000000001e-05, 2.6944000000000967e-05, 2.7457999999997568e-05, 2.6874999999999122e-05, 2.7722000000000857e-05, 2.7528000000002356e-05, 2.74170000000018e-05, 2.6846999999999982e-05, 2.7763999999999567e-05, 2.6957999999997068e-05, 2.7000000000002716e-05, 2.686100000000302e-05, 2.715299999999851e-05, 2.6874999999999122e-05, 2.7277999999998637e-05, 2.7235999999999927e-05, 2.7763999999999567e-05, 2.772300000000033e-05, 2.773700000000337e-05, 2.766700000000205e-05, 2.7068999999997623e-05, 2.7263999999999067e-05, 2.766700000000205e-05, 2.7249999999999497e-05, 2.7471999999997138e-05, 2.7679999999998678e-05, 2.7736000000000427e-05, 2.7319000000001342e-05, 2.716699999999808e-05, 2.6958000000000537e-05, 2.7013999999998817e-05, 2.768099999999815e-05, 2.7569999999997596e-05, 2.7708000000001287e-05, 2.687500000000259e-05, 2.7499999999999747e-05, 2.7361000000000052e-05, 2.7598000000000206e-05, 2.74170000000018e-05]</msg>
<status status="PASS" starttime="20201030 18:31:21.661" endtime="20201030 18:31:21.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.656" endtime="20201030 18:31:21.663"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:21.667" endtime="20201030 18:31:21.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.665" endtime="20201030 18:31:21.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.664" endtime="20201030 18:31:21.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.305" endtime="20201030 18:31:21.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.305" endtime="20201030 18:31:21.688"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.696" endtime="20201030 18:31:21.714"></status>
</kw>
<msg timestamp="20201030 18:31:21.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:21.695" endtime="20201030 18:31:21.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:21.716" endtime="20201030 18:31:21.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.718" endtime="20201030 18:31:21.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.692" endtime="20201030 18:31:21.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.690" endtime="20201030 18:31:21.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.727" endtime="20201030 18:31:22.029"></status>
</kw>
<msg timestamp="20201030 18:31:22.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022937653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022965625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:21.726" endtime="20201030 18:31:22.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022937653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022965625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:22.033" endtime="20201030 18:31:22.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.041" endtime="20201030 18:31:22.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.723" endtime="20201030 18:31:22.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.721" endtime="20201030 18:31:22.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:22.048" level="INFO">${RESULT} = [{'diff': 2.7972000000001107e-05}, {'diff': 2.816699999999908e-05}, {'diff': 2.8610999999997833e-05}, {'diff': 2.8778000000000137e-05}, {'diff': 2.819499999999822e-05}, {'diff': 2.7806000000001746e-05...</msg>
<status status="PASS" starttime="20201030 18:31:22.045" endtime="20201030 18:31:22.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:22.052" level="INFO">${ACCURACY} = {'diff': [2.7972000000001107e-05, 2.816699999999908e-05, 2.8610999999997833e-05, 2.8778000000000137e-05, 2.819499999999822e-05, 2.7806000000001746e-05, 2.8306000000002246e-05, 2.8611000000001302e-05, ...</msg>
<status status="PASS" starttime="20201030 18:31:22.049" endtime="20201030 18:31:22.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.059" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 18:31:22.057" endtime="20201030 18:31:22.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.062" level="INFO">VALUE: [2.7972000000001107e-05, 2.816699999999908e-05, 2.8610999999997833e-05, 2.8778000000000137e-05, 2.819499999999822e-05, 2.7806000000001746e-05, 2.8306000000002246e-05, 2.8611000000001302e-05, 2.8486000000001177e-05, 2.8584000000001636e-05, 2.843100000000237e-05, 2.845900000000151e-05, 2.8611000000001302e-05, 2.8429999999999428e-05, 2.8375000000000622e-05, 2.8347000000001482e-05, 2.8527000000000413e-05, 2.8457999999998568e-05, 2.7833000000001412e-05, 2.8540999999999983e-05, 2.8277999999999637e-05, 2.8582999999998693e-05, 2.8277999999999637e-05, 2.8389000000000192e-05, 2.8666999999999582e-05, 2.8320000000001816e-05, 2.7958000000001537e-05, 2.8583000000002162e-05, 2.8277999999999637e-05, 2.7763999999999567e-05, 2.798700000000015e-05, 2.8791999999999707e-05, 2.7972000000001107e-05, 2.8138000000000468e-05, 2.848700000000065e-05, 2.8152000000000038e-05, 2.8152000000000038e-05, 2.7944000000001967e-05, 2.7819000000001842e-05, 2.8054999999999053e-05, 2.8389000000000192e-05, 2.8554999999999553e-05, 2.7833000000001412e-05, 2.8000000000000247e-05, 2.8722000000001857e-05, 2.8194000000002217e-05, 2.8402999999999762e-05, 2.7971999999997638e-05, 2.866700000000305e-05, 2.8068999999998623e-05]</msg>
<status status="PASS" starttime="20201030 18:31:22.060" endtime="20201030 18:31:22.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.053" endtime="20201030 18:31:22.064"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:22.068" endtime="20201030 18:31:22.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.066" endtime="20201030 18:31:22.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.065" endtime="20201030 18:31:22.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.689" endtime="20201030 18:31:22.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.688" endtime="20201030 18:31:22.088"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.097" endtime="20201030 18:31:22.113"></status>
</kw>
<msg timestamp="20201030 18:31:22.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.095" endtime="20201030 18:31:22.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.114" endtime="20201030 18:31:22.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.117" endtime="20201030 18:31:22.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.093" endtime="20201030 18:31:22.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.091" endtime="20201030 18:31:22.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.126" endtime="20201030 18:31:22.411"></status>
</kw>
<msg timestamp="20201030 18:31:22.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022084639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022113778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:22.124" endtime="20201030 18:31:22.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022084639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022113778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:22.415" endtime="20201030 18:31:22.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.424" endtime="20201030 18:31:22.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.121" endtime="20201030 18:31:22.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.120" endtime="20201030 18:31:22.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:22.430" level="INFO">${RESULT} = [{'diff': 2.9139000000000942e-05}, {'diff': 2.9582999999999693e-05}, {'diff': 2.9528000000000887e-05}, {'diff': 2.9207999999999318e-05}, {'diff': 2.945899999999904e-05}, {'diff': 2.94309999999999e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:22.427" endtime="20201030 18:31:22.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:22.438" level="INFO">${ACCURACY} = {'diff': [2.9139000000000942e-05, 2.9582999999999693e-05, 2.9528000000000887e-05, 2.9207999999999318e-05, 2.945899999999904e-05, 2.94309999999999e-05, 2.9153000000000512e-05, 2.9110999999998333e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:31:22.431" endtime="20201030 18:31:22.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.442" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 18:31:22.441" endtime="20201030 18:31:22.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.445" level="INFO">VALUE: [2.9139000000000942e-05, 2.9582999999999693e-05, 2.9528000000000887e-05, 2.9207999999999318e-05, 2.945899999999904e-05, 2.94309999999999e-05, 2.9153000000000512e-05, 2.9110999999998333e-05, 2.9556000000000027e-05, 2.8861999999997556e-05, 2.890199999999732e-05, 2.9624999999998403e-05, 2.9500000000001747e-05, 2.8861000000001552e-05, 2.9166000000000608e-05, 2.9138999999997472e-05, 2.8860999999998083e-05, 2.9582999999999693e-05, 2.9514000000001317e-05, 2.9305000000000303e-05, 2.9235999999998458e-05, 2.9402999999997292e-05, 2.944499999999947e-05, 2.969499999999972e-05, 2.9096999999998763e-05, 2.919500000000269e-05, 2.945899999999904e-05, 2.944499999999947e-05, 2.9485999999998708e-05, 2.9292000000000207e-05, 2.9763999999998098e-05, 2.8846999999998513e-05, 2.9707999999999818e-05, 2.8999999999997778e-05, 2.9264000000001067e-05, 2.9208000000002787e-05, 2.9777999999997667e-05, 2.9236000000001927e-05, 2.916599999999714e-05, 2.9137999999998e-05, 2.9082999999999193e-05, 2.9332999999999443e-05, 2.9277999999997167e-05, 2.8999999999997778e-05, 2.9457999999999568e-05, 2.8832999999998943e-05, 2.9457999999999568e-05, 2.9667000000000582e-05, 2.8874999999997653e-05, 2.920900000000226e-05]</msg>
<status status="PASS" starttime="20201030 18:31:22.443" endtime="20201030 18:31:22.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.439" endtime="20201030 18:31:22.446"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:22.450" endtime="20201030 18:31:22.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.448" endtime="20201030 18:31:22.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.447" endtime="20201030 18:31:22.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.089" endtime="20201030 18:31:22.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.089" endtime="20201030 18:31:22.470"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.479" endtime="20201030 18:31:22.496"></status>
</kw>
<msg timestamp="20201030 18:31:22.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.478" endtime="20201030 18:31:22.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.498" endtime="20201030 18:31:22.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.500" endtime="20201030 18:31:22.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.475" endtime="20201030 18:31:22.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.473" endtime="20201030 18:31:22.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.509" endtime="20201030 18:31:22.796"></status>
</kw>
<msg timestamp="20201030 18:31:22.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022508903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022539528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:22.508" endtime="20201030 18:31:22.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022508903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022539528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:22.801" endtime="20201030 18:31:22.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.809" endtime="20201030 18:31:22.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.505" endtime="20201030 18:31:22.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.503" endtime="20201030 18:31:22.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:22.816" level="INFO">${RESULT} = [{'diff': 3.06249999999994e-05}, {'diff': 3.0403000000001762e-05}, {'diff': 3.0430999999997432e-05}, {'diff': 3.069500000000072e-05}, {'diff': 3.066700000000158e-05}, {'diff': 2.9903000000001262e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:22.813" endtime="20201030 18:31:22.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:22.820" level="INFO">${ACCURACY} = {'diff': [3.06249999999994e-05, 3.0403000000001762e-05, 3.0430999999997432e-05, 3.069500000000072e-05, 3.066700000000158e-05, 2.9903000000001262e-05, 3.023699999999893e-05, 3.06110000000033e-05, 3.016...</msg>
<status status="PASS" starttime="20201030 18:31:22.817" endtime="20201030 18:31:22.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.825" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 18:31:22.824" endtime="20201030 18:31:22.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.827" level="INFO">VALUE: [3.06249999999994e-05, 3.0403000000001762e-05, 3.0430999999997432e-05, 3.069500000000072e-05, 3.066700000000158e-05, 2.9903000000001262e-05, 3.023699999999893e-05, 3.06110000000033e-05, 3.0166000000001608e-05, 3.066599999999864e-05, 3.056900000000112e-05, 3.070800000000082e-05, 3.0250000000002497e-05, 3.052800000000189e-05, 3.058300000000069e-05, 2.9889000000001692e-05, 3.0069000000000623e-05, 3.0360999999999583e-05, 3.070800000000082e-05, 3.022299999999936e-05, 2.995899999999954e-05, 3.0167000000001082e-05, 3.055599999999756e-05, 3.0375000000002622e-05, 3.0320000000000347e-05, 3.055600000000103e-05, 3.072200000000039e-05, 2.9846999999999513e-05, 3.0194000000000748e-05, 3.0137999999999e-05, 3.0582999999997224e-05, 3.061099999999983e-05, 3.069399999999778e-05, 2.9832999999999943e-05, 3.070799999999735e-05, 3.0235999999999458e-05, 3.0235999999999458e-05, 2.9874999999998653e-05, 3.0153000000001512e-05, 3.044500000000047e-05, 3.0277999999998167e-05, 3.07639999999991e-05, 2.9889000000001692e-05, 3.077799999999867e-05, 3.0306000000000777e-05, 3.061099999999983e-05, 3.022299999999936e-05, 3.0750000000003e-05, 3.0347999999999486e-05, 3.0194000000000748e-05]</msg>
<status status="PASS" starttime="20201030 18:31:22.826" endtime="20201030 18:31:22.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.821" endtime="20201030 18:31:22.829"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:22.833" endtime="20201030 18:31:22.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.831" endtime="20201030 18:31:22.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.830" endtime="20201030 18:31:22.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.471" endtime="20201030 18:31:22.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.471" endtime="20201030 18:31:22.853"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.862" endtime="20201030 18:31:22.880"></status>
</kw>
<msg timestamp="20201030 18:31:22.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.861" endtime="20201030 18:31:22.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.881" endtime="20201030 18:31:22.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.884" endtime="20201030 18:31:22.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.858" endtime="20201030 18:31:22.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.856" endtime="20201030 18:31:22.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.893" endtime="20201030 18:31:23.178"></status>
</kw>
<msg timestamp="20201030 18:31:23.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023314944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023346125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:22.891" endtime="20201030 18:31:23.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023314944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023346125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:23.183" endtime="20201030 18:31:23.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.191" endtime="20201030 18:31:23.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.889" endtime="20201030 18:31:23.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.887" endtime="20201030 18:31:23.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:23.198" level="INFO">${RESULT} = [{'diff': 3.118099999999818e-05}, {'diff': 3.152799999999942e-05}, {'diff': 3.101400000000282e-05}, {'diff': 3.116700000000208e-05}, {'diff': 3.14579999999981e-05}, {'diff': 3.137500000000015e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:23.194" endtime="20201030 18:31:23.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:23.202" level="INFO">${ACCURACY} = {'diff': [3.118099999999818e-05, 3.152799999999942e-05, 3.101400000000282e-05, 3.116700000000208e-05, 3.14579999999981e-05, 3.137500000000015e-05, 3.129200000000221e-05, 3.132000000000135e-05, 3.15700...</msg>
<status status="PASS" starttime="20201030 18:31:23.199" endtime="20201030 18:31:23.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.206" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 18:31:23.205" endtime="20201030 18:31:23.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.209" level="INFO">VALUE: [3.118099999999818e-05, 3.152799999999942e-05, 3.101400000000282e-05, 3.116700000000208e-05, 3.14579999999981e-05, 3.137500000000015e-05, 3.129200000000221e-05, 3.132000000000135e-05, 3.15700000000016e-05, 3.145900000000104e-05, 3.137500000000015e-05, 3.166599999999964e-05, 3.1138e-05, 3.141599999999939e-05, 3.087499999999965e-05, 3.088899999999922e-05, 3.136100000000058e-05, 3.1098000000000237e-05, 3.123600000000046e-05, 3.130599999999831e-05, 3.120800000000132e-05, 3.130599999999831e-05, 3.083300000000094e-05, 3.166699999999911e-05, 3.166699999999911e-05, 3.156999999999813e-05, 3.127799999999917e-05, 3.102799999999892e-05, 3.148599999999724e-05, 3.1598000000000737e-05, 3.147200000000114e-05, 3.095900000000054e-05, 3.106900000000162e-05, 3.123600000000046e-05, 3.151399999999985e-05, 3.173600000000096e-05, 3.14310000000019e-05, 3.1082999999997724e-05, 3.113899999999947e-05, 3.095800000000107e-05, 3.154199999999899e-05, 3.159700000000126e-05, 3.14579999999981e-05, 3.122300000000036e-05, 3.161100000000083e-05, 3.165299999999954e-05, 3.111100000000033e-05, 3.1596999999997794e-05, 3.115300000000251e-05, 3.123600000000046e-05]</msg>
<status status="PASS" starttime="20201030 18:31:23.207" endtime="20201030 18:31:23.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.203" endtime="20201030 18:31:23.211"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:23.215" endtime="20201030 18:31:23.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.213" endtime="20201030 18:31:23.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.212" endtime="20201030 18:31:23.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.854" endtime="20201030 18:31:23.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.854" endtime="20201030 18:31:23.235"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.244" endtime="20201030 18:31:23.261"></status>
</kw>
<msg timestamp="20201030 18:31:23.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:23.242" endtime="20201030 18:31:23.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:23.262" endtime="20201030 18:31:23.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.265" endtime="20201030 18:31:23.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.240" endtime="20201030 18:31:23.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.238" endtime="20201030 18:31:23.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.274" endtime="20201030 18:31:23.571"></status>
</kw>
<msg timestamp="20201030 18:31:23.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021890917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021923319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:23.272" endtime="20201030 18:31:23.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021890917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021923319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:23.575" endtime="20201030 18:31:23.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.584" endtime="20201030 18:31:23.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.270" endtime="20201030 18:31:23.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.268" endtime="20201030 18:31:23.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:23.590" level="INFO">${RESULT} = [{'diff': 3.240200000000082e-05}, {'diff': 3.2596999999998794e-05}, {'diff': 3.222199999999842e-05}, {'diff': 3.192999999999946e-05}, {'diff': 3.223600000000146e-05}, {'diff': 3.2332999999998974e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:23.587" endtime="20201030 18:31:23.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:23.595" level="INFO">${ACCURACY} = {'diff': [3.240200000000082e-05, 3.2596999999998794e-05, 3.222199999999842e-05, 3.192999999999946e-05, 3.223600000000146e-05, 3.2332999999998974e-05, 3.19579999999986e-05, 3.252800000000042e-05, 3.184...</msg>
<status status="PASS" starttime="20201030 18:31:23.591" endtime="20201030 18:31:23.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.600" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 18:31:23.599" endtime="20201030 18:31:23.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.602" level="INFO">VALUE: [3.240200000000082e-05, 3.2596999999998794e-05, 3.222199999999842e-05, 3.192999999999946e-05, 3.223600000000146e-05, 3.2332999999998974e-05, 3.19579999999986e-05, 3.252800000000042e-05, 3.1846999999998044e-05, 3.237500000000115e-05, 3.205599999999906e-05, 3.198599999999774e-05, 3.213900000000047e-05, 3.186100000000108e-05, 3.181999999999838e-05, 3.256999999999913e-05, 3.212499999999743e-05, 3.2612000000001307e-05, 3.2027000000000444e-05, 3.237500000000115e-05, 3.27640000000011e-05, 3.2291000000000264e-05, 3.27640000000011e-05, 3.252800000000042e-05, 3.248600000000171e-05, 3.225000000000103e-05, 3.194399999999903e-05, 3.273600000000196e-05, 3.272199999999892e-05, 3.225000000000103e-05, 3.19449999999985e-05, 3.204199999999949e-05, 3.240300000000029e-05, 3.234700000000201e-05, 3.193099999999893e-05, 3.201400000000035e-05, 3.183399999999795e-05, 3.216700000000308e-05, 3.187500000000065e-05, 3.20839999999982e-05, 3.2277000000000694e-05, 3.24579999999991e-05, 3.251400000000085e-05, 3.270800000000282e-05, 3.2541000000000514e-05, 3.255599999999956e-05, 3.225000000000103e-05, 3.217999999999971e-05, 3.224999999999756e-05, 3.216699999999961e-05]</msg>
<status status="PASS" starttime="20201030 18:31:23.601" endtime="20201030 18:31:23.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.596" endtime="20201030 18:31:23.604"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:23.607" endtime="20201030 18:31:23.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.606" endtime="20201030 18:31:23.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.605" endtime="20201030 18:31:23.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.236" endtime="20201030 18:31:23.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.236" endtime="20201030 18:31:23.628"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.637" endtime="20201030 18:31:23.654"></status>
</kw>
<msg timestamp="20201030 18:31:23.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:23.636" endtime="20201030 18:31:23.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:23.655" endtime="20201030 18:31:23.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.658" endtime="20201030 18:31:23.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.633" endtime="20201030 18:31:23.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.631" endtime="20201030 18:31:23.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.667" endtime="20201030 18:31:23.955"></status>
</kw>
<msg timestamp="20201030 18:31:23.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022530931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022564056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:23.665" endtime="20201030 18:31:23.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022530931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022564056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:23.959" endtime="20201030 18:31:23.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:23.967" endtime="20201030 18:31:23.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.663" endtime="20201030 18:31:23.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.661" endtime="20201030 18:31:23.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:23.974" level="INFO">${RESULT} = [{'diff': 3.3124999999998433e-05}, {'diff': 3.309799999999877e-05}, {'diff': 3.34580000000001e-05}, {'diff': 3.3110999999998864e-05}, {'diff': 3.352800000000142e-05}, {'diff': 3.3374999999998683e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:23.971" endtime="20201030 18:31:23.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:23.978" level="INFO">${ACCURACY} = {'diff': [3.3124999999998433e-05, 3.309799999999877e-05, 3.34580000000001e-05, 3.3110999999998864e-05, 3.352800000000142e-05, 3.3374999999998683e-05, 3.3082999999999724e-05, 3.3096999999999294e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:31:23.975" endtime="20201030 18:31:23.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.982" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 18:31:23.981" endtime="20201030 18:31:23.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:23.985" level="INFO">VALUE: [3.3124999999998433e-05, 3.309799999999877e-05, 3.34580000000001e-05, 3.3110999999998864e-05, 3.352800000000142e-05, 3.3374999999998683e-05, 3.3082999999999724e-05, 3.3096999999999294e-05, 3.291600000000089e-05, 3.354200000000099e-05, 3.2874999999998183e-05, 3.3319000000000404e-05, 3.2832999999999474e-05, 3.315300000000104e-05, 3.305600000000006e-05, 3.3610999999999364e-05, 3.29449999999995e-05, 3.333399999999945e-05, 3.284800000000199e-05, 3.37640000000021e-05, 3.354200000000099e-05, 3.355600000000056e-05, 3.323599999999899e-05, 3.3527000000001944e-05, 3.3276999999998225e-05, 3.3332999999999974e-05, 3.2818999999999904e-05, 3.3360999999999114e-05, 3.3332999999999974e-05, 3.2846999999999044e-05, 3.2818999999999904e-05, 3.369399999999731e-05, 3.341699999999739e-05, 3.299999999999831e-05, 3.3138999999998e-05, 3.352800000000142e-05, 3.370800000000035e-05, 3.3096999999999294e-05, 3.315300000000104e-05, 3.316700000000061e-05, 3.279200000000024e-05, 3.323599999999899e-05, 3.2874999999998183e-05, 3.366599999999817e-05, 3.324999999999856e-05, 3.2818999999999904e-05, 3.343000000000096e-05, 3.352799999999795e-05, 3.369399999999731e-05, 3.304199999999702e-05]</msg>
<status status="PASS" starttime="20201030 18:31:23.984" endtime="20201030 18:31:23.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.979" endtime="20201030 18:31:23.986"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:23.990" endtime="20201030 18:31:24.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.988" endtime="20201030 18:31:24.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.987" endtime="20201030 18:31:24.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.629" endtime="20201030 18:31:24.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:23.628" endtime="20201030 18:31:24.011"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.020" endtime="20201030 18:31:24.038"></status>
</kw>
<msg timestamp="20201030 18:31:24.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.018" endtime="20201030 18:31:24.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.039" endtime="20201030 18:31:24.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.042" endtime="20201030 18:31:24.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.015" endtime="20201030 18:31:24.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.013" endtime="20201030 18:31:24.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.051" endtime="20201030 18:31:24.339"></status>
</kw>
<msg timestamp="20201030 18:31:24.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023368667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023403083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:24.050" endtime="20201030 18:31:24.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023368667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023403083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:24.343" endtime="20201030 18:31:24.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.351" endtime="20201030 18:31:24.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.047" endtime="20201030 18:31:24.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.045" endtime="20201030 18:31:24.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:24.358" level="INFO">${RESULT} = [{'diff': 3.441600000000239e-05}, {'diff': 3.441600000000239e-05}, {'diff': 3.3874999999999184e-05}, {'diff': 3.445799999999763e-05}, {'diff': 3.4582999999997754e-05}, {'diff': 3.415300000000204e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:24.354" endtime="20201030 18:31:24.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:24.362" level="INFO">${ACCURACY} = {'diff': [3.441600000000239e-05, 3.441600000000239e-05, 3.3874999999999184e-05, 3.445799999999763e-05, 3.4582999999997754e-05, 3.415300000000204e-05, 3.441700000000186e-05, 3.472199999999745e-05, 3.44...</msg>
<status status="PASS" starttime="20201030 18:31:24.359" endtime="20201030 18:31:24.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.366" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 18:31:24.365" endtime="20201030 18:31:24.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.368" level="INFO">VALUE: [3.441600000000239e-05, 3.441600000000239e-05, 3.3874999999999184e-05, 3.445799999999763e-05, 3.4582999999997754e-05, 3.415300000000204e-05, 3.441700000000186e-05, 3.472199999999745e-05, 3.448600000000024e-05, 3.4596999999997324e-05, 3.429200000000174e-05, 3.468099999999821e-05, 3.470899999999735e-05, 3.4652999999999073e-05, 3.4582999999997754e-05, 3.399999999999931e-05, 3.46519999999996e-05, 3.4540999999999045e-05, 3.47640000000031e-05, 3.4624999999999934e-05, 3.4332999999997504e-05, 3.4110999999999864e-05, 3.448600000000024e-05, 3.4097000000000294e-05, 3.4110999999999864e-05, 3.449999999999981e-05, 3.430599999999784e-05, 3.4097000000000294e-05, 3.468000000000221e-05, 3.456999999999766e-05, 3.4652999999999073e-05, 3.445900000000057e-05, 3.45840000000007e-05, 3.424999999999956e-05, 3.466599999999917e-05, 3.472200000000092e-05, 3.441599999999892e-05, 3.44580000000011e-05, 3.4597000000000794e-05, 3.466599999999917e-05, 3.467999999999874e-05, 3.4138999999999003e-05, 3.3847000000000044e-05, 3.4388999999999253e-05, 3.4568999999998185e-05, 3.426399999999913e-05, 3.4652999999999073e-05, 3.422200000000042e-05, 3.3888999999998753e-05, 3.419500000000075e-05]</msg>
<status status="PASS" starttime="20201030 18:31:24.367" endtime="20201030 18:31:24.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.363" endtime="20201030 18:31:24.371"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:24.374" endtime="20201030 18:31:24.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.373" endtime="20201030 18:31:24.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.372" endtime="20201030 18:31:24.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.012" endtime="20201030 18:31:24.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.011" endtime="20201030 18:31:24.395"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.403" endtime="20201030 18:31:24.421"></status>
</kw>
<msg timestamp="20201030 18:31:24.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.402" endtime="20201030 18:31:24.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.422" endtime="20201030 18:31:24.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.425" endtime="20201030 18:31:24.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.399" endtime="20201030 18:31:24.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.397" endtime="20201030 18:31:24.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.434" endtime="20201030 18:31:24.719"></status>
</kw>
<msg timestamp="20201030 18:31:24.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022158194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022193569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:24.432" endtime="20201030 18:31:24.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022158194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022193569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:24.723" endtime="20201030 18:31:24.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.731" endtime="20201030 18:31:24.733"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.430" endtime="20201030 18:31:24.733"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.428" endtime="20201030 18:31:24.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:24.738" level="INFO">${RESULT} = [{'diff': 3.5375000000000684e-05}, {'diff': 3.5527000000000475e-05}, {'diff': 3.566600000000017e-05}, {'diff': 3.4819000000001904e-05}, {'diff': 3.504199999999902e-05}, {'diff': 3.526400000000013e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:24.735" endtime="20201030 18:31:24.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:24.743" level="INFO">${ACCURACY} = {'diff': [3.5375000000000684e-05, 3.5527000000000475e-05, 3.566600000000017e-05, 3.4819000000001904e-05, 3.504199999999902e-05, 3.526400000000013e-05, 3.570799999999888e-05, 3.5375000000000684e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:31:24.739" endtime="20201030 18:31:24.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.747" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 18:31:24.746" endtime="20201030 18:31:24.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.749" level="INFO">VALUE: [3.5375000000000684e-05, 3.5527000000000475e-05, 3.566600000000017e-05, 3.4819000000001904e-05, 3.504199999999902e-05, 3.526400000000013e-05, 3.570799999999888e-05, 3.5375000000000684e-05, 3.568099999999921e-05, 3.532000000000188e-05, 3.556999999999866e-05, 3.5111000000000864e-05, 3.554199999999952e-05, 3.543100000000243e-05, 3.5389000000000254e-05, 3.534800000000102e-05, 3.4902999999999323e-05, 3.482000000000138e-05, 3.5375000000000684e-05, 3.5582999999998755e-05, 3.574999999999759e-05, 3.519399999999881e-05, 3.497200000000117e-05, 3.5305000000002834e-05, 3.554199999999952e-05, 3.500000000000031e-05, 3.522200000000142e-05, 3.4902999999999323e-05, 3.515300000000304e-05, 3.569499999999878e-05, 3.541700000000286e-05, 3.559800000000127e-05, 3.530600000000231e-05, 3.5666999999999643e-05, 3.522300000000089e-05, 3.502799999999945e-05, 3.47779999999992e-05, 3.5541000000000045e-05, 3.4902999999999323e-05, 3.574999999999759e-05, 3.5375000000000684e-05, 3.5653000000000074e-05, 3.551400000000038e-05, 3.525000000000056e-05, 3.50840000000012e-05, 3.4861000000000614e-05, 3.501399999999988e-05, 3.526400000000013e-05, 3.54589999999981e-05, 3.4875000000000184e-05]</msg>
<status status="PASS" starttime="20201030 18:31:24.748" endtime="20201030 18:31:24.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.743" endtime="20201030 18:31:24.756"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:24.759" endtime="20201030 18:31:24.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.758" endtime="20201030 18:31:24.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.757" endtime="20201030 18:31:24.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.396" endtime="20201030 18:31:24.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.395" endtime="20201030 18:31:24.780"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.789" endtime="20201030 18:31:24.805"></status>
</kw>
<msg timestamp="20201030 18:31:24.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.787" endtime="20201030 18:31:24.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:24.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:24.807" endtime="20201030 18:31:24.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.809" endtime="20201030 18:31:24.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.785" endtime="20201030 18:31:24.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.783" endtime="20201030 18:31:24.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:24.818" endtime="20201030 18:31:25.120"></status>
</kw>
<msg timestamp="20201030 18:31:25.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021844236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:24.816" endtime="20201030 18:31:25.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021844236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:25.125" endtime="20201030 18:31:25.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.133" endtime="20201030 18:31:25.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.814" endtime="20201030 18:31:25.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.812" endtime="20201030 18:31:25.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:25.139" level="INFO">${RESULT} = [{'diff': 3.6596999999999325e-05}, {'diff': 3.6596999999999325e-05}, {'diff': 3.651400000000138e-05}, {'diff': 3.644400000000006e-05}, {'diff': 3.672300000000239e-05}, {'diff': 3.622199999999895e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:25.136" endtime="20201030 18:31:25.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:25.144" level="INFO">${ACCURACY} = {'diff': [3.6596999999999325e-05, 3.6596999999999325e-05, 3.651400000000138e-05, 3.644400000000006e-05, 3.672300000000239e-05, 3.622199999999895e-05, 3.65840000000027e-05, 3.669500000000325e-05, 3.637...</msg>
<status status="PASS" starttime="20201030 18:31:25.140" endtime="20201030 18:31:25.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.148" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 18:31:25.147" endtime="20201030 18:31:25.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.150" level="INFO">VALUE: [3.6596999999999325e-05, 3.6596999999999325e-05, 3.651400000000138e-05, 3.644400000000006e-05, 3.672300000000239e-05, 3.622199999999895e-05, 3.65840000000027e-05, 3.669500000000325e-05, 3.6374999999998214e-05, 3.674999999999859e-05, 3.636200000000159e-05, 3.620899999999885e-05, 3.6653000000001074e-05, 3.5875000000001184e-05, 3.6597000000002794e-05, 3.6374999999998214e-05, 3.5874999999997714e-05, 3.5874999999997714e-05, 3.6332999999999505e-05, 3.6555000000000615e-05, 3.626399999999766e-05, 3.5819000000002904e-05, 3.622199999999895e-05, 3.6180999999999713e-05, 3.624999999999809e-05, 3.6403000000000824e-05, 3.630599999999984e-05, 3.61520000000011e-05, 3.680600000000034e-05, 3.644499999999953e-05, 3.652800000000095e-05, 3.601400000000088e-05, 3.633400000000245e-05, 3.5861000000001614e-05, 3.625000000000156e-05, 3.6375000000001684e-05, 3.6402999999997354e-05, 3.6082999999999255e-05, 3.629200000000027e-05, 3.5903000000000324e-05, 3.679200000000077e-05, 3.6681000000000213e-05, 3.6153000000000574e-05, 3.670799999999988e-05, 3.644499999999953e-05, 3.619499999999928e-05, 3.629200000000027e-05, 3.6180999999999713e-05, 3.5903000000000324e-05, 3.6361000000002114e-05]</msg>
<status status="PASS" starttime="20201030 18:31:25.149" endtime="20201030 18:31:25.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.144" endtime="20201030 18:31:25.152"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:25.155" endtime="20201030 18:31:25.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.154" endtime="20201030 18:31:25.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.153" endtime="20201030 18:31:25.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.781" endtime="20201030 18:31:25.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:24.780" endtime="20201030 18:31:25.176"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.185" endtime="20201030 18:31:25.202"></status>
</kw>
<msg timestamp="20201030 18:31:25.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.183" endtime="20201030 18:31:25.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.204" endtime="20201030 18:31:25.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.206" endtime="20201030 18:31:25.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.180" endtime="20201030 18:31:25.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.178" endtime="20201030 18:31:25.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.215" endtime="20201030 18:31:25.501"></status>
</kw>
<msg timestamp="20201030 18:31:25.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022966375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023003917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:25.214" endtime="20201030 18:31:25.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022966375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023003917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:25.505" endtime="20201030 18:31:25.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.514" endtime="20201030 18:31:25.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.211" endtime="20201030 18:31:25.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.210" endtime="20201030 18:31:25.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:25.520" level="INFO">${RESULT} = [{'diff': 3.754199999999805e-05}, {'diff': 3.7554999999998145e-05}, {'diff': 3.7667000000001644e-05}, {'diff': 3.741600000000192e-05}, {'diff': 3.7374999999999214e-05}, {'diff': 3.776399999999916e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:25.517" endtime="20201030 18:31:25.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:25.524" level="INFO">${ACCURACY} = {'diff': [3.754199999999805e-05, 3.7554999999998145e-05, 3.7667000000001644e-05, 3.741600000000192e-05, 3.7374999999999214e-05, 3.776399999999916e-05, 3.7653000000002074e-05, 3.752800000000195e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:31:25.521" endtime="20201030 18:31:25.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.528" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 18:31:25.527" endtime="20201030 18:31:25.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.531" level="INFO">VALUE: [3.754199999999805e-05, 3.7554999999998145e-05, 3.7667000000001644e-05, 3.741600000000192e-05, 3.7374999999999214e-05, 3.776399999999916e-05, 3.7653000000002074e-05, 3.752800000000195e-05, 3.772200000000045e-05, 3.770800000000088e-05, 3.72780000000017e-05, 3.723599999999952e-05, 3.720800000000038e-05, 3.754199999999805e-05, 3.6875000000002184e-05, 3.745800000000063e-05, 3.723599999999952e-05, 3.7639000000002504e-05, 3.758400000000023e-05, 3.7138999999998534e-05, 3.693000000000099e-05, 3.7374999999999214e-05, 3.7276999999998756e-05, 3.690199999999838e-05, 3.715199999999863e-05, 3.7139000000002004e-05, 3.7166999999997674e-05, 3.7110999999999394e-05, 3.772200000000045e-05, 3.7096999999999825e-05, 3.6874999999998714e-05, 3.780599999999787e-05, 3.745800000000063e-05, 3.731999999999694e-05, 3.751399999999891e-05, 3.7624999999999464e-05, 3.7624999999999464e-05, 3.7430999999997494e-05, 3.691599999999795e-05, 3.69719999999997e-05, 3.7083000000000255e-05, 3.674999999999859e-05, 3.7610999999999895e-05, 3.693000000000099e-05, 3.7402999999998354e-05, 3.7304999999997895e-05, 3.726399999999866e-05, 3.7319000000000935e-05, 3.6846999999999575e-05, 3.754200000000152e-05]</msg>
<status status="PASS" starttime="20201030 18:31:25.529" endtime="20201030 18:31:25.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.525" endtime="20201030 18:31:25.533"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:25.537" endtime="20201030 18:31:25.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.535" endtime="20201030 18:31:25.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.534" endtime="20201030 18:31:25.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.177" endtime="20201030 18:31:25.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.176" endtime="20201030 18:31:25.557"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.566" endtime="20201030 18:31:25.583"></status>
</kw>
<msg timestamp="20201030 18:31:25.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.564" endtime="20201030 18:31:25.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.585" endtime="20201030 18:31:25.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.587" endtime="20201030 18:31:25.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.562" endtime="20201030 18:31:25.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.560" endtime="20201030 18:31:25.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.596" endtime="20201030 18:31:25.882"></status>
</kw>
<msg timestamp="20201030 18:31:25.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021677389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021716028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:25.595" endtime="20201030 18:31:25.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021677389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021716028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:25.886" endtime="20201030 18:31:25.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.894" endtime="20201030 18:31:25.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.592" endtime="20201030 18:31:25.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.590" endtime="20201030 18:31:25.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:25.901" level="INFO">${RESULT} = [{'diff': 3.8639000000000034e-05}, {'diff': 3.8041000000002545e-05}, {'diff': 3.832000000000141e-05}, {'diff': 3.8625000000000465e-05}, {'diff': 3.7861000000000145e-05}, {'diff': 3.8625000000000465e-0...</msg>
<status status="PASS" starttime="20201030 18:31:25.898" endtime="20201030 18:31:25.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:25.908" level="INFO">${ACCURACY} = {'diff': [3.8639000000000034e-05, 3.8041000000002545e-05, 3.832000000000141e-05, 3.8625000000000465e-05, 3.7861000000000145e-05, 3.8625000000000465e-05, 3.8040999999999076e-05, 3.8527000000000006e-05,...</msg>
<status status="PASS" starttime="20201030 18:31:25.902" endtime="20201030 18:31:25.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.913" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 18:31:25.912" endtime="20201030 18:31:25.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.915" level="INFO">VALUE: [3.8639000000000034e-05, 3.8041000000002545e-05, 3.832000000000141e-05, 3.8625000000000465e-05, 3.7861000000000145e-05, 3.8625000000000465e-05, 3.8040999999999076e-05, 3.8527000000000006e-05, 3.845800000000163e-05, 3.827799999999923e-05, 3.81659999999992e-05, 3.799999999999984e-05, 3.8333000000001505e-05, 3.7818999999997965e-05, 3.8596999999997855e-05, 3.851399999999991e-05, 3.870800000000188e-05, 3.820799999999791e-05, 3.8444999999998064e-05, 3.8195000000001283e-05, 3.858400000000123e-05, 3.8195000000001283e-05, 3.801399999999941e-05, 3.798600000000027e-05, 3.792999999999852e-05, 3.8458999999997634e-05, 3.875000000000059e-05, 3.8653000000003074e-05, 3.845800000000163e-05, 3.798600000000027e-05, 3.844399999999859e-05, 3.802800000000245e-05, 3.855599999999862e-05, 3.82919999999988e-05, 3.8680999999998744e-05, 3.8430999999998494e-05, 3.8416999999998924e-05, 3.82919999999988e-05, 3.8209000000000853e-05, 3.86119999999969e-05, 3.836200000000012e-05, 3.813800000000006e-05, 3.7847000000000575e-05, 3.8026999999999506e-05, 3.804200000000202e-05, 3.852799999999948e-05, 3.8597000000001325e-05, 3.8124999999999964e-05, 3.8402999999999354e-05, 3.872200000000145e-05]</msg>
<status status="PASS" starttime="20201030 18:31:25.914" endtime="20201030 18:31:25.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.909" endtime="20201030 18:31:25.917"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:25.920" endtime="20201030 18:31:25.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.919" endtime="20201030 18:31:25.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.918" endtime="20201030 18:31:25.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.558" endtime="20201030 18:31:25.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.558" endtime="20201030 18:31:25.941"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.949" endtime="20201030 18:31:25.966"></status>
</kw>
<msg timestamp="20201030 18:31:25.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.948" endtime="20201030 18:31:25.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.968" endtime="20201030 18:31:25.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.970" endtime="20201030 18:31:25.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.945" endtime="20201030 18:31:25.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.943" endtime="20201030 18:31:25.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.979" endtime="20201030 18:31:26.265"></status>
</kw>
<msg timestamp="20201030 18:31:26.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021749472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021788361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:25.977" endtime="20201030 18:31:26.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021749472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021788361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:26.269" endtime="20201030 18:31:26.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.278" endtime="20201030 18:31:26.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.975" endtime="20201030 18:31:26.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.973" endtime="20201030 18:31:26.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:26.284" level="INFO">${RESULT} = [{'diff': 3.8889000000000284e-05}, {'diff': 3.945799999999916e-05}, {'diff': 3.9416999999999924e-05}, {'diff': 3.9639000000001035e-05}, {'diff': 3.8875000000000715e-05}, {'diff': 3.9611000000001895e-0...</msg>
<status status="PASS" starttime="20201030 18:31:26.281" endtime="20201030 18:31:26.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:26.288" level="INFO">${ACCURACY} = {'diff': [3.8889000000000284e-05, 3.945799999999916e-05, 3.9416999999999924e-05, 3.9639000000001035e-05, 3.8875000000000715e-05, 3.9611000000001895e-05, 3.94859999999983e-05, 3.8875000000000715e-05, 3...</msg>
<status status="PASS" starttime="20201030 18:31:26.285" endtime="20201030 18:31:26.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.293" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 18:31:26.292" endtime="20201030 18:31:26.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.295" level="INFO">VALUE: [3.8889000000000284e-05, 3.945799999999916e-05, 3.9416999999999924e-05, 3.9639000000001035e-05, 3.8875000000000715e-05, 3.9611000000001895e-05, 3.94859999999983e-05, 3.8875000000000715e-05, 3.9638999999997565e-05, 3.895800000000213e-05, 3.951400000000091e-05, 3.9153000000000104e-05, 3.9153000000000104e-05, 3.9180999999999244e-05, 3.956999999999919e-05, 3.9194999999998814e-05, 3.974999999999812e-05, 3.945799999999916e-05, 3.9139000000000534e-05, 3.973599999999855e-05, 3.9846999999999105e-05, 3.9625000000001465e-05, 3.96660000000007e-05, 3.9555000000000146e-05, 3.8804999999999396e-05, 3.902799999999998e-05, 3.936200000000112e-05, 3.9680999999999744e-05, 3.9125000000000965e-05, 3.9639000000001035e-05, 3.925000000000109e-05, 3.9611000000001895e-05, 3.972200000000245e-05, 3.9667000000000174e-05, 3.897300000000117e-05, 3.9096999999998355e-05, 3.9180999999999244e-05, 3.9777000000001256e-05, 3.923599999999805e-05, 3.920799999999891e-05, 3.920799999999891e-05, 3.9361000000001645e-05, 3.9111000000001395e-05, 3.90980000000013e-05, 3.948600000000177e-05, 3.902799999999998e-05, 3.954200000000005e-05, 3.898600000000127e-05, 3.9333000000002505e-05, 3.957000000000266e-05]</msg>
<status status="PASS" starttime="20201030 18:31:26.294" endtime="20201030 18:31:26.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.289" endtime="20201030 18:31:26.297"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:26.300" endtime="20201030 18:31:26.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.299" endtime="20201030 18:31:26.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.298" endtime="20201030 18:31:26.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.942" endtime="20201030 18:31:26.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.941" endtime="20201030 18:31:26.321"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.329" endtime="20201030 18:31:26.347"></status>
</kw>
<msg timestamp="20201030 18:31:26.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.328" endtime="20201030 18:31:26.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.348" endtime="20201030 18:31:26.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.351" endtime="20201030 18:31:26.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.325" endtime="20201030 18:31:26.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.323" endtime="20201030 18:31:26.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.360" endtime="20201030 18:31:26.645"></status>
</kw>
<msg timestamp="20201030 18:31:26.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022556056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022596319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:26.358" endtime="20201030 18:31:26.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022556056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022596319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:26.649" endtime="20201030 18:31:26.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.657" endtime="20201030 18:31:26.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.356" endtime="20201030 18:31:26.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.354" endtime="20201030 18:31:26.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:26.664" level="INFO">${RESULT} = [{'diff': 4.0262999999998716e-05}, {'diff': 3.994400000000009e-05}, {'diff': 4.0610999999999425e-05}, {'diff': 4.0639000000002035e-05}, {'diff': 4.0304999999997426e-05}, {'diff': 3.999999999999837e-05...</msg>
<status status="PASS" starttime="20201030 18:31:26.661" endtime="20201030 18:31:26.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:26.668" level="INFO">${ACCURACY} = {'diff': [4.0262999999998716e-05, 3.994400000000009e-05, 4.0610999999999425e-05, 4.0639000000002035e-05, 4.0304999999997426e-05, 3.999999999999837e-05, 4.049999999999887e-05, 3.9832999999999535e-05, 4...</msg>
<status status="PASS" starttime="20201030 18:31:26.665" endtime="20201030 18:31:26.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.673" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 18:31:26.672" endtime="20201030 18:31:26.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.676" level="INFO">VALUE: [4.0262999999998716e-05, 3.994400000000009e-05, 4.0610999999999425e-05, 4.0639000000002035e-05, 4.0304999999997426e-05, 3.999999999999837e-05, 4.049999999999887e-05, 3.9832999999999535e-05, 4.02920000000008e-05, 3.999999999999837e-05, 4.0180999999996775e-05, 4.0125000000001965e-05, 4.051399999999844e-05, 4.006999999999969e-05, 4.031999999999994e-05, 3.9958999999999134e-05, 4.0389000000001785e-05, 4.01119999999984e-05, 4.0153000000001104e-05, 4.0625000000002465e-05, 4.070800000000041e-05, 4.01660000000012e-05, 4.070800000000041e-05, 3.9846999999999105e-05, 4.045800000000016e-05, 4.004200000000055e-05, 4.0167000000000674e-05, 4.054200000000105e-05, 4.019399999999687e-05, 4.031999999999994e-05, 4.0777000000002256e-05, 4.0472999999999204e-05, 4.009799999999883e-05, 4.0374999999998745e-05, 4.0041000000001076e-05, 4.049999999999887e-05, 4.074999999999912e-05, 4.0083000000003255e-05, 4.022199999999948e-05, 4.0319000000000466e-05, 4.00980000000023e-05, 4.0375000000002215e-05, 4.0333000000000035e-05, 4.0403000000001354e-05, 4.0569000000000716e-05, 3.994400000000009e-05, 4.073599999999955e-05, 4.0152999999997635e-05, 3.9846999999999105e-05, 4.072199999999998e-05]</msg>
<status status="PASS" starttime="20201030 18:31:26.675" endtime="20201030 18:31:26.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.669" endtime="20201030 18:31:26.678"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:26.682" endtime="20201030 18:31:26.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.680" endtime="20201030 18:31:26.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.679" endtime="20201030 18:31:26.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.322" endtime="20201030 18:31:26.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.321" endtime="20201030 18:31:26.703"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.711" endtime="20201030 18:31:26.728"></status>
</kw>
<msg timestamp="20201030 18:31:26.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.710" endtime="20201030 18:31:26.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:26.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:26.730" endtime="20201030 18:31:26.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.732" endtime="20201030 18:31:26.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.707" endtime="20201030 18:31:26.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.705" endtime="20201030 18:31:26.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:26.741" endtime="20201030 18:31:27.027"></status>
</kw>
<msg timestamp="20201030 18:31:27.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022065514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022106778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:26.740" endtime="20201030 18:31:27.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022065514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022106778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:27.031" endtime="20201030 18:31:27.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.040" endtime="20201030 18:31:27.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.737" endtime="20201030 18:31:27.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.736" endtime="20201030 18:31:27.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:27.046" level="INFO">${RESULT} = [{'diff': 4.126399999999919e-05}, {'diff': 4.1124999999999495e-05}, {'diff': 4.11660000000022e-05}, {'diff': 4.124999999999962e-05}, {'diff': 4.145800000000116e-05}, {'diff': 4.142999999999855e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:27.043" endtime="20201030 18:31:27.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:27.051" level="INFO">${ACCURACY} = {'diff': [4.126399999999919e-05, 4.1124999999999495e-05, 4.11660000000022e-05, 4.124999999999962e-05, 4.145800000000116e-05, 4.142999999999855e-05, 4.1611000000000425e-05, 4.1666999999998705e-05, 4.17...</msg>
<status status="PASS" starttime="20201030 18:31:27.047" endtime="20201030 18:31:27.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.056" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 18:31:27.055" endtime="20201030 18:31:27.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.058" level="INFO">VALUE: [4.126399999999919e-05, 4.1124999999999495e-05, 4.11660000000022e-05, 4.124999999999962e-05, 4.145800000000116e-05, 4.142999999999855e-05, 4.1611000000000425e-05, 4.1666999999998705e-05, 4.175000000000012e-05, 4.1597000000000856e-05, 4.173600000000055e-05, 4.123600000000005e-05, 4.1459000000000634e-05, 4.129199999999833e-05, 4.1166999999998205e-05, 4.1139000000002535e-05, 4.176399999999969e-05, 4.147200000000073e-05, 4.145800000000116e-05, 4.0818999999997496e-05, 4.0819000000000966e-05, 4.16799999999988e-05, 4.0847000000000105e-05, 4.130600000000137e-05, 4.1652999999999135e-05, 4.173599999999708e-05, 4.0972999999999704e-05, 4.0860999999999675e-05, 4.1597000000000856e-05, 4.1638999999999565e-05, 4.127800000000223e-05, 4.1138999999999065e-05, 4.129199999999833e-05, 4.142999999999855e-05, 4.124999999999962e-05, 4.119400000000134e-05, 4.0861000000003145e-05, 4.1374999999999745e-05, 4.1374999999999745e-05, 4.1181000000001244e-05, 4.126399999999919e-05, 4.1374999999999745e-05, 4.094399999999762e-05, 4.099999999999937e-05, 4.130600000000137e-05, 4.0847000000000105e-05, 4.1681000000001744e-05, 4.102799999999851e-05, 4.127799999999876e-05, 4.1709000000000884e-05]</msg>
<status status="PASS" starttime="20201030 18:31:27.057" endtime="20201030 18:31:27.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.052" endtime="20201030 18:31:27.059"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:27.063" endtime="20201030 18:31:27.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.061" endtime="20201030 18:31:27.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.060" endtime="20201030 18:31:27.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.704" endtime="20201030 18:31:27.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:26.703" endtime="20201030 18:31:27.084"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.092" endtime="20201030 18:31:27.110"></status>
</kw>
<msg timestamp="20201030 18:31:27.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.091" endtime="20201030 18:31:27.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.111" endtime="20201030 18:31:27.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.114" endtime="20201030 18:31:27.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.088" endtime="20201030 18:31:27.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.086" endtime="20201030 18:31:27.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.123" endtime="20201030 18:31:27.409"></status>
</kw>
<msg timestamp="20201030 18:31:27.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022119042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0221615, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:27.121" endtime="20201030 18:31:27.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022119042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0221615, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:27.414" endtime="20201030 18:31:27.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.422" endtime="20201030 18:31:27.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.118" endtime="20201030 18:31:27.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.117" endtime="20201030 18:31:27.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:27.429" level="INFO">${RESULT} = [{'diff': 4.245800000000216e-05}, {'diff': 4.2569000000002716e-05}, {'diff': 4.272199999999851e-05}, {'diff': 4.229199999999933e-05}, {'diff': 4.2347000000001606e-05}, {'diff': 4.250000000000087e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:27.425" endtime="20201030 18:31:27.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:27.433" level="INFO">${ACCURACY} = {'diff': [4.245800000000216e-05, 4.2569000000002716e-05, 4.272199999999851e-05, 4.229199999999933e-05, 4.2347000000001606e-05, 4.250000000000087e-05, 4.2402999999999885e-05, 4.184799999999711e-05, 4.2...</msg>
<status status="PASS" starttime="20201030 18:31:27.430" endtime="20201030 18:31:27.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.437" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 18:31:27.436" endtime="20201030 18:31:27.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.439" level="INFO">VALUE: [4.245800000000216e-05, 4.2569000000002716e-05, 4.272199999999851e-05, 4.229199999999933e-05, 4.2347000000001606e-05, 4.250000000000087e-05, 4.2402999999999885e-05, 4.184799999999711e-05, 4.28059999999994e-05, 4.2040999999999606e-05, 4.2402999999999885e-05, 4.2611000000001426e-05, 4.2568999999999246e-05, 4.270800000000241e-05, 4.269399999999937e-05, 4.26799999999998e-05, 4.195800000000166e-05, 4.2568999999999246e-05, 4.229199999999933e-05, 4.254199999999958e-05, 4.1861000000000675e-05, 4.2290999999999856e-05, 4.2332999999998566e-05, 4.275000000000112e-05, 4.276400000000069e-05, 4.2709000000001884e-05, 4.2040999999999606e-05, 4.2568999999999246e-05, 4.227799999999976e-05, 4.19860000000008e-05, 4.275000000000112e-05, 4.191599999999948e-05, 4.247200000000173e-05, 4.1888999999999815e-05, 4.2361000000001175e-05, 4.202799999999951e-05, 4.277800000000026e-05, 4.24860000000013e-05, 4.247199999999826e-05, 4.2541000000000107e-05, 4.2708999999998415e-05, 4.2374999999997276e-05, 4.242999999999955e-05, 4.2153000000003105e-05, 4.241599999999998e-05, 4.2389000000000315e-05, 4.245799999999869e-05, 4.2111000000000925e-05, 4.2597000000001856e-05, 4.2319000000002466e-05]</msg>
<status status="PASS" starttime="20201030 18:31:27.438" endtime="20201030 18:31:27.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.434" endtime="20201030 18:31:27.441"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:27.445" endtime="20201030 18:31:27.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.443" endtime="20201030 18:31:27.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.442" endtime="20201030 18:31:27.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.085" endtime="20201030 18:31:27.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.084" endtime="20201030 18:31:27.465"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.474" endtime="20201030 18:31:27.492"></status>
</kw>
<msg timestamp="20201030 18:31:27.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.472" endtime="20201030 18:31:27.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.494" endtime="20201030 18:31:27.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.496" endtime="20201030 18:31:27.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.470" endtime="20201030 18:31:27.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.467" endtime="20201030 18:31:27.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.505" endtime="20201030 18:31:27.790"></status>
</kw>
<msg timestamp="20201030 18:31:27.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022710681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022753861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:27.504" endtime="20201030 18:31:27.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022710681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022753861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:27.794" endtime="20201030 18:31:27.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.802" endtime="20201030 18:31:27.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.501" endtime="20201030 18:31:27.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.499" endtime="20201030 18:31:27.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:27.809" level="INFO">${RESULT} = [{'diff': 4.31800000000003e-05}, {'diff': 4.354200000000058e-05}, {'diff': 4.3111000000001926e-05}, {'diff': 4.348599999999883e-05}, {'diff': 4.3596999999999386e-05}, {'diff': 4.351400000000144e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:31:27.806" endtime="20201030 18:31:27.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:27.813" level="INFO">${ACCURACY} = {'diff': [4.31800000000003e-05, 4.354200000000058e-05, 4.3111000000001926e-05, 4.348599999999883e-05, 4.3596999999999386e-05, 4.351400000000144e-05, 4.3666999999997236e-05, 4.327800000000076e-05, 4.30...</msg>
<status status="PASS" starttime="20201030 18:31:27.810" endtime="20201030 18:31:27.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.817" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 18:31:27.816" endtime="20201030 18:31:27.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.820" level="INFO">VALUE: [4.31800000000003e-05, 4.354200000000058e-05, 4.3111000000001926e-05, 4.348599999999883e-05, 4.3596999999999386e-05, 4.351400000000144e-05, 4.3666999999997236e-05, 4.327800000000076e-05, 4.300000000000137e-05, 4.293000000000005e-05, 4.3694999999999845e-05, 4.3472999999998735e-05, 4.3624999999998526e-05, 4.3582999999999816e-05, 4.325000000000162e-05, 4.2944999999999095e-05, 4.377799999999779e-05, 4.3569000000000246e-05, 4.297199999999876e-05, 4.3153000000000635e-05, 4.375000000000212e-05, 4.3431000000000025e-05, 4.279199999999983e-05, 4.354199999999711e-05, 4.293000000000005e-05, 4.3361000000002176e-05, 4.329200000000033e-05, 4.356999999999972e-05, 4.3667000000000705e-05, 4.2846999999998636e-05, 4.3582999999999816e-05, 4.304200000000008e-05, 4.329099999999739e-05, 4.297199999999876e-05, 4.350000000000187e-05, 4.3374999999998276e-05, 4.373599999999908e-05, 4.34999999999984e-05, 4.33059999999999e-05, 4.320799999999944e-05, 4.3611000000002426e-05, 4.377799999999779e-05, 4.3180999999999775e-05, 4.281999999999897e-05, 4.323600000000205e-05, 4.3694999999999845e-05, 4.326399999999772e-05, 4.3347000000002606e-05, 4.2818999999999496e-05, 4.3403000000000885e-05]</msg>
<status status="PASS" starttime="20201030 18:31:27.818" endtime="20201030 18:31:27.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.814" endtime="20201030 18:31:27.822"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:27.826" endtime="20201030 18:31:27.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.824" endtime="20201030 18:31:27.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.823" endtime="20201030 18:31:27.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.466" endtime="20201030 18:31:27.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.465" endtime="20201030 18:31:27.846"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.855" endtime="20201030 18:31:27.872"></status>
</kw>
<msg timestamp="20201030 18:31:27.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.853" endtime="20201030 18:31:27.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:27.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:27.874" endtime="20201030 18:31:27.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.876" endtime="20201030 18:31:27.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.851" endtime="20201030 18:31:27.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.849" endtime="20201030 18:31:27.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:27.885" endtime="20201030 18:31:28.171"></status>
</kw>
<msg timestamp="20201030 18:31:28.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021881167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021925611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:27.884" endtime="20201030 18:31:28.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021881167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021925611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:28.176" endtime="20201030 18:31:28.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.184" endtime="20201030 18:31:28.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.881" endtime="20201030 18:31:28.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.879" endtime="20201030 18:31:28.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:28.190" level="INFO">${RESULT} = [{'diff': 4.444400000000112e-05}, {'diff': 4.472200000000051e-05}, {'diff': 4.429200000000133e-05}, {'diff': 4.395800000000019e-05}, {'diff': 4.4138999999998596e-05}, {'diff': 4.4347000000000136e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:28.187" endtime="20201030 18:31:28.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:28.195" level="INFO">${ACCURACY} = {'diff': [4.444400000000112e-05, 4.472200000000051e-05, 4.429200000000133e-05, 4.395800000000019e-05, 4.4138999999998596e-05, 4.4347000000000136e-05, 4.4347000000000136e-05, 4.4652999999998666e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:31:28.191" endtime="20201030 18:31:28.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.200" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 18:31:28.199" endtime="20201030 18:31:28.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.202" level="INFO">VALUE: [4.444400000000112e-05, 4.472200000000051e-05, 4.429200000000133e-05, 4.395800000000019e-05, 4.4138999999998596e-05, 4.4347000000000136e-05, 4.4347000000000136e-05, 4.4652999999998666e-05, 4.427800000000176e-05, 4.3846999999999636e-05, 4.431899999999753e-05, 4.401400000000194e-05, 4.419400000000087e-05, 4.4403000000001885e-05, 4.4569000000001247e-05, 4.474999999999965e-05, 4.4388999999998846e-05, 4.4667000000001705e-05, 4.398599999999933e-05, 4.4417000000001455e-05, 4.4374999999999276e-05, 4.474999999999965e-05, 4.4152999999998166e-05, 4.427799999999829e-05, 4.400000000000237e-05, 4.422200000000001e-05, 4.4722999999999985e-05, 4.474999999999965e-05, 4.448599999999983e-05, 4.4124999999999026e-05, 4.4152999999998166e-05, 4.442999999999808e-05, 4.473600000000008e-05, 4.4624999999999526e-05, 4.474999999999965e-05, 4.4431000000001025e-05, 4.4374999999999276e-05, 4.4195000000000345e-05, 4.444399999999765e-05, 4.430599999999743e-05, 4.457000000000072e-05, 4.458400000000029e-05, 4.381999999999997e-05, 4.476400000000269e-05, 4.4012999999999e-05, 4.473599999999661e-05, 4.4583000000000816e-05, 4.426400000000219e-05, 4.467999999999833e-05, 4.39999999999989e-05]</msg>
<status status="PASS" starttime="20201030 18:31:28.201" endtime="20201030 18:31:28.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.196" endtime="20201030 18:31:28.204"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:28.207" endtime="20201030 18:31:28.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.206" endtime="20201030 18:31:28.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.205" endtime="20201030 18:31:28.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.847" endtime="20201030 18:31:28.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:27.847" endtime="20201030 18:31:28.228"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.237" endtime="20201030 18:31:28.254"></status>
</kw>
<msg timestamp="20201030 18:31:28.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.235" endtime="20201030 18:31:28.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.256" endtime="20201030 18:31:28.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.258" endtime="20201030 18:31:28.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.233" endtime="20201030 18:31:28.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.230" endtime="20201030 18:31:28.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.267" endtime="20201030 18:31:28.571"></status>
</kw>
<msg timestamp="20201030 18:31:28.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021891722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021937028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:28.266" endtime="20201030 18:31:28.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021891722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021937028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:28.581" endtime="20201030 18:31:28.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.599" endtime="20201030 18:31:28.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.263" endtime="20201030 18:31:28.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.261" endtime="20201030 18:31:28.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:28.613" level="INFO">${RESULT} = [{'diff': 4.53060000000019e-05}, {'diff': 4.53060000000019e-05}, {'diff': 4.494400000000162e-05}, {'diff': 4.561099999999749e-05}, {'diff': 4.579200000000283e-05}, {'diff': 4.5445000000001595e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:28.606" endtime="20201030 18:31:28.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:28.618" level="INFO">${ACCURACY} = {'diff': [4.53060000000019e-05, 4.53060000000019e-05, 4.494400000000162e-05, 4.561099999999749e-05, 4.579200000000283e-05, 4.5445000000001595e-05, 4.5180999999998306e-05, 4.5319999999998e-05, 4.493100...</msg>
<status status="PASS" starttime="20201030 18:31:28.615" endtime="20201030 18:31:28.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.623" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 18:31:28.622" endtime="20201030 18:31:28.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.625" level="INFO">VALUE: [4.53060000000019e-05, 4.53060000000019e-05, 4.494400000000162e-05, 4.561099999999749e-05, 4.579200000000283e-05, 4.5445000000001595e-05, 4.5180999999998306e-05, 4.5319999999998e-05, 4.4931000000001525e-05, 4.558400000000129e-05, 4.575000000000065e-05, 4.551399999999997e-05, 4.523600000000058e-05, 4.5388999999999846e-05, 4.573599999999761e-05, 4.526399999999972e-05, 4.49999999999999e-05, 4.4888999999999346e-05, 4.545799999999822e-05, 4.5611000000000956e-05, 4.5111000000000456e-05, 4.5138999999999596e-05, 4.5208999999997446e-05, 4.498600000000033e-05, 4.552700000000007e-05, 4.488799999999987e-05, 4.5639000000000096e-05, 4.5125000000000026e-05, 4.544400000000212e-05, 4.545800000000169e-05, 4.502799999999904e-05, 4.572200000000151e-05, 4.4861000000000206e-05, 4.507000000000122e-05, 4.5388999999999846e-05, 4.5097000000000886e-05, 4.5459000000001165e-05, 4.4959000000000665e-05, 4.5097000000000886e-05, 4.494399999999815e-05, 4.523600000000058e-05, 4.5223000000000485e-05, 4.566599999999976e-05, 4.5583000000001817e-05, 4.5597000000001386e-05, 4.5625000000000526e-05, 4.5639000000000096e-05, 4.497199999999729e-05, 4.548600000000083e-05, 4.580499999999946e-05]</msg>
<status status="PASS" starttime="20201030 18:31:28.624" endtime="20201030 18:31:28.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.619" endtime="20201030 18:31:28.626"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:28.630" endtime="20201030 18:31:28.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.629" endtime="20201030 18:31:28.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.627" endtime="20201030 18:31:28.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.229" endtime="20201030 18:31:28.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.228" endtime="20201030 18:31:28.651"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.659" endtime="20201030 18:31:28.678"></status>
</kw>
<msg timestamp="20201030 18:31:28.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.658" endtime="20201030 18:31:28.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:28.679" endtime="20201030 18:31:28.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.682" endtime="20201030 18:31:28.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.655" endtime="20201030 18:31:28.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.653" endtime="20201030 18:31:28.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.691" endtime="20201030 18:31:28.977"></status>
</kw>
<msg timestamp="20201030 18:31:28.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022944361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022990861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:28.690" endtime="20201030 18:31:28.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:28.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022944361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022990861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:28.981" endtime="20201030 18:31:28.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:28.990" endtime="20201030 18:31:28.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.687" endtime="20201030 18:31:28.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.685" endtime="20201030 18:31:28.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:28.996" level="INFO">${RESULT} = [{'diff': 4.65000000000014e-05}, {'diff': 4.662499999999806e-05}, {'diff': 4.648600000000183e-05}, {'diff': 4.645799999999922e-05}, {'diff': 4.626400000000072e-05}, {'diff': 4.629199999999986e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:28.993" endtime="20201030 18:31:28.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:29.001" level="INFO">${ACCURACY} = {'diff': [4.65000000000014e-05, 4.662499999999806e-05, 4.648600000000183e-05, 4.645799999999922e-05, 4.626400000000072e-05, 4.629199999999986e-05, 4.652800000000054e-05, 4.630599999999943e-05, 4.61109...</msg>
<status status="PASS" starttime="20201030 18:31:28.997" endtime="20201030 18:31:29.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.005" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 18:31:29.004" endtime="20201030 18:31:29.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.008" level="INFO">VALUE: [4.65000000000014e-05, 4.662499999999806e-05, 4.648600000000183e-05, 4.645799999999922e-05, 4.626400000000072e-05, 4.629199999999986e-05, 4.652800000000054e-05, 4.630599999999943e-05, 4.611099999999799e-05, 4.608399999999832e-05, 4.623600000000158e-05, 4.61939999999994e-05, 4.6111000000001456e-05, 4.604199999999961e-05, 4.630599999999943e-05, 4.659699999999892e-05, 4.623600000000158e-05, 4.6389000000000846e-05, 4.681900000000003e-05, 4.6389000000000846e-05, 4.6680999999999806e-05, 4.651400000000097e-05, 4.586099999999774e-05, 4.6639000000001096e-05, 4.6195000000002345e-05, 4.584699999999817e-05, 4.6180999999999306e-05, 4.673600000000208e-05, 4.608299999999885e-05, 4.60000000000009e-05, 4.675000000000165e-05, 4.617999999999983e-05, 4.666600000000076e-05, 4.6625000000001526e-05, 4.623600000000158e-05, 4.680500000000046e-05, 4.655500000000021e-05, 4.672199999999904e-05, 4.5875000000000776e-05, 4.656899999999978e-05, 4.670799999999947e-05, 4.6444999999999126e-05, 4.651400000000097e-05, 4.5972999999997766e-05, 4.608299999999885e-05, 4.6444999999999126e-05, 4.630599999999943e-05, 4.6375000000001276e-05, 4.677799999999732e-05, 4.674999999999818e-05]</msg>
<status status="PASS" starttime="20201030 18:31:29.006" endtime="20201030 18:31:29.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.001" endtime="20201030 18:31:29.010"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:29.013" endtime="20201030 18:31:29.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.012" endtime="20201030 18:31:29.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.011" endtime="20201030 18:31:29.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.652" endtime="20201030 18:31:29.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:28.651" endtime="20201030 18:31:29.034"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.043" endtime="20201030 18:31:29.060"></status>
</kw>
<msg timestamp="20201030 18:31:29.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:29.041" endtime="20201030 18:31:29.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:29.062" endtime="20201030 18:31:29.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.065" endtime="20201030 18:31:29.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.039" endtime="20201030 18:31:29.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.037" endtime="20201030 18:31:29.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.074" endtime="20201030 18:31:29.359"></status>
</kw>
<msg timestamp="20201030 18:31:29.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022359556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022406389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:29.072" endtime="20201030 18:31:29.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022359556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022406389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:29.364" endtime="20201030 18:31:29.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.372" endtime="20201030 18:31:29.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.069" endtime="20201030 18:31:29.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.068" endtime="20201030 18:31:29.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:29.379" level="INFO">${RESULT} = [{'diff': 4.68329999999996e-05}, {'diff': 4.757000000000025e-05}, {'diff': 4.757000000000025e-05}, {'diff': 4.7611000000002957e-05}, {'diff': 4.761099999999949e-05}, {'diff': 4.704200000000061e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:29.375" endtime="20201030 18:31:29.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:29.386" level="INFO">${ACCURACY} = {'diff': [4.68329999999996e-05, 4.757000000000025e-05, 4.757000000000025e-05, 4.7611000000002957e-05, 4.761099999999949e-05, 4.704200000000061e-05, 4.772200000000004e-05, 4.681900000000003e-05, 4.7540...</msg>
<status status="PASS" starttime="20201030 18:31:29.380" endtime="20201030 18:31:29.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.391" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 18:31:29.390" endtime="20201030 18:31:29.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.393" level="INFO">VALUE: [4.68329999999996e-05, 4.757000000000025e-05, 4.757000000000025e-05, 4.7611000000002957e-05, 4.761099999999949e-05, 4.704200000000061e-05, 4.772200000000004e-05, 4.681900000000003e-05, 4.754099999999817e-05, 4.76940000000009e-05, 4.770800000000047e-05, 4.779200000000136e-05, 4.7417000000000986e-05, 4.723599999999911e-05, 4.709699999999942e-05, 4.761099999999949e-05, 4.729200000000086e-05, 4.7013999999998e-05, 4.690299999999745e-05, 4.736099999999924e-05, 4.752800000000154e-05, 4.7208999999999446e-05, 4.724999999999868e-05, 4.6875000000001776e-05, 4.730499999999749e-05, 4.773599999999961e-05, 4.73330000000001e-05, 4.7403000000001416e-05, 4.7639000000002096e-05, 4.744399999999718e-05, 4.7153000000001166e-05, 4.724999999999868e-05, 4.7153000000001166e-05, 4.7708999999999946e-05, 4.7194999999999876e-05, 4.759799999999939e-05, 4.773599999999961e-05, 4.6917000000000486e-05, 4.779199999999789e-05, 4.71940000000004e-05, 4.761099999999949e-05, 4.720799999999997e-05, 4.744399999999718e-05, 4.687499999999831e-05, 4.745800000000022e-05, 4.686099999999874e-05, 4.779199999999789e-05, 4.68199999999995e-05, 4.6861000000002206e-05, 4.7111000000002456e-05]</msg>
<status status="PASS" starttime="20201030 18:31:29.392" endtime="20201030 18:31:29.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.387" endtime="20201030 18:31:29.394"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:29.398" endtime="20201030 18:31:29.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.397" endtime="20201030 18:31:29.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.395" endtime="20201030 18:31:29.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.035" endtime="20201030 18:31:29.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.034" endtime="20201030 18:31:29.419"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.428" endtime="20201030 18:31:29.445"></status>
</kw>
<msg timestamp="20201030 18:31:29.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:29.426" endtime="20201030 18:31:29.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:29.447" endtime="20201030 18:31:29.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.449" endtime="20201030 18:31:29.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.424" endtime="20201030 18:31:29.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.421" endtime="20201030 18:31:29.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.458" endtime="20201030 18:31:29.745"></status>
</kw>
<msg timestamp="20201030 18:31:29.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022086375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022134764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:29.456" endtime="20201030 18:31:29.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022086375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022134764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:29.750" endtime="20201030 18:31:29.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.758" endtime="20201030 18:31:29.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.454" endtime="20201030 18:31:29.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.452" endtime="20201030 18:31:29.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:29.764" level="INFO">${RESULT} = [{'diff': 4.8389000000002846e-05}, {'diff': 4.786099999999974e-05}, {'diff': 4.863899999999963e-05}, {'diff': 4.7889000000002346e-05}, {'diff': 4.836100000000024e-05}, {'diff': 4.8444999999997657e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:29.761" endtime="20201030 18:31:29.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:29.769" level="INFO">${ACCURACY} = {'diff': [4.8389000000002846e-05, 4.786099999999974e-05, 4.863899999999963e-05, 4.7889000000002346e-05, 4.836100000000024e-05, 4.8444999999997657e-05, 4.812499999999956e-05, 4.862500000000006e-05, 4.8...</msg>
<status status="PASS" starttime="20201030 18:31:29.765" endtime="20201030 18:31:29.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.773" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 18:31:29.772" endtime="20201030 18:31:29.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.776" level="INFO">VALUE: [4.8389000000002846e-05, 4.786099999999974e-05, 4.863899999999963e-05, 4.7889000000002346e-05, 4.836100000000024e-05, 4.8444999999997657e-05, 4.812499999999956e-05, 4.862500000000006e-05, 4.851300000000003e-05, 4.8417000000001986e-05, 4.858299999999788e-05, 4.8707999999998e-05, 4.841699999999852e-05, 4.876399999999975e-05, 4.786099999999974e-05, 4.844399999999818e-05, 4.86529999999992e-05, 4.8013999999999e-05, 4.86940000000019e-05, 4.8208999999996976e-05, 4.820800000000097e-05, 4.8013999999999e-05, 4.8223000000000016e-05, 4.83339999999971e-05, 4.830500000000196e-05, 4.779200000000136e-05, 4.816600000000226e-05, 4.811099999999999e-05, 4.834700000000067e-05, 4.831899999999806e-05, 4.840299999999895e-05, 4.841699999999852e-05, 4.798600000000333e-05, 4.880600000000193e-05, 4.791699999999802e-05, 4.854199999999864e-05, 4.802800000000204e-05, 4.852800000000254e-05, 4.8723000000000516e-05, 4.780600000000093e-05, 4.7903000000001916e-05, 4.842999999999861e-05, 4.802700000000257e-05, 4.85269999999996e-05, 4.798599999999986e-05, 4.793099999999759e-05, 4.81940000000014e-05, 4.780600000000093e-05, 4.780600000000093e-05, 4.806900000000128e-05]</msg>
<status status="PASS" starttime="20201030 18:31:29.774" endtime="20201030 18:31:29.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.769" endtime="20201030 18:31:29.781"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:29.785" endtime="20201030 18:31:29.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.783" endtime="20201030 18:31:29.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.782" endtime="20201030 18:31:29.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.420" endtime="20201030 18:31:29.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.419" endtime="20201030 18:31:29.805"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.814" endtime="20201030 18:31:29.833"></status>
</kw>
<msg timestamp="20201030 18:31:29.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:29.813" endtime="20201030 18:31:29.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:29.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:29.835" endtime="20201030 18:31:29.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.837" endtime="20201030 18:31:29.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.810" endtime="20201030 18:31:29.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.808" endtime="20201030 18:31:29.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:29.846" endtime="20201030 18:31:30.134"></status>
</kw>
<msg timestamp="20201030 18:31:30.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022867833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022917069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:29.845" endtime="20201030 18:31:30.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022867833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022917069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.138" endtime="20201030 18:31:30.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.146" endtime="20201030 18:31:30.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.842" endtime="20201030 18:31:30.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.840" endtime="20201030 18:31:30.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:30.153" level="INFO">${RESULT} = [{'diff': 4.923600000000111e-05}, {'diff': 4.916599999999979e-05}, {'diff': 4.900000000000043e-05}, {'diff': 4.979100000000042e-05}, {'diff': 4.941699999999952e-05}, {'diff': 4.913900000000013e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:30.149" endtime="20201030 18:31:30.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:30.157" level="INFO">${ACCURACY} = {'diff': [4.923600000000111e-05, 4.916599999999979e-05, 4.900000000000043e-05, 4.979100000000042e-05, 4.941699999999952e-05, 4.913900000000013e-05, 4.948599999999789e-05, 4.923599999999764e-05, 4.9722...</msg>
<status status="PASS" starttime="20201030 18:31:30.154" endtime="20201030 18:31:30.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.161" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 18:31:30.160" endtime="20201030 18:31:30.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.164" level="INFO">VALUE: [4.923600000000111e-05, 4.916599999999979e-05, 4.900000000000043e-05, 4.979100000000042e-05, 4.941699999999952e-05, 4.913900000000013e-05, 4.948599999999789e-05, 4.923599999999764e-05, 4.972200000000204e-05, 4.973600000000161e-05, 4.918099999999884e-05, 4.926400000000025e-05, 4.941699999999952e-05, 4.900000000000043e-05, 4.950000000000093e-05, 4.905499999999924e-05, 4.913900000000013e-05, 4.948600000000136e-05, 4.913900000000013e-05, 4.888899999999988e-05, 4.962500000000106e-05, 4.919399999999893e-05, 4.91529999999997e-05, 4.968099999999934e-05, 4.941699999999952e-05, 4.947200000000179e-05, 4.970899999999848e-05, 4.926300000000078e-05, 4.975000000000118e-05, 4.919399999999893e-05, 4.973600000000161e-05, 4.890199999999997e-05, 4.9707999999999e-05, 4.948600000000136e-05, 4.956899999999931e-05, 4.879099999999942e-05, 4.91529999999997e-05, 4.9473000000001266e-05, 4.9195000000001876e-05, 4.883400000000107e-05, 4.955599999999921e-05, 4.937500000000081e-05, 4.890299999999945e-05, 4.957000000000225e-05, 4.9014e-05, 4.9431000000002556e-05, 4.900000000000043e-05, 4.93469999999982e-05, 4.925000000000068e-05, 4.919399999999893e-05]</msg>
<status status="PASS" starttime="20201030 18:31:30.162" endtime="20201030 18:31:30.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.157" endtime="20201030 18:31:30.166"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:30.170" endtime="20201030 18:31:30.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.168" endtime="20201030 18:31:30.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.167" endtime="20201030 18:31:30.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.806" endtime="20201030 18:31:30.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:29.806" endtime="20201030 18:31:30.190"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.199" endtime="20201030 18:31:30.217"></status>
</kw>
<msg timestamp="20201030 18:31:30.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.198" endtime="20201030 18:31:30.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.219" endtime="20201030 18:31:30.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.221" endtime="20201030 18:31:30.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.195" endtime="20201030 18:31:30.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.193" endtime="20201030 18:31:30.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.230" endtime="20201030 18:31:30.516"></status>
</kw>
<msg timestamp="20201030 18:31:30.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022232486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022283292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.229" endtime="20201030 18:31:30.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022232486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022283292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.520" endtime="20201030 18:31:30.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.528" endtime="20201030 18:31:30.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.226" endtime="20201030 18:31:30.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.224" endtime="20201030 18:31:30.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:30.535" level="INFO">${RESULT} = [{'diff': 5.080600000000046e-05}, {'diff': 5.009799999999842e-05}, {'diff': 5.062500000000206e-05}, {'diff': 5.054100000000117e-05}, {'diff': 4.998600000000186e-05}, {'diff': 5.074999999999871e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:30.532" endtime="20201030 18:31:30.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:30.540" level="INFO">${ACCURACY} = {'diff': [5.080600000000046e-05, 5.009799999999842e-05, 5.062500000000206e-05, 5.054100000000117e-05, 4.998600000000186e-05, 5.074999999999871e-05, 5.051399999999803e-05, 5.076399999999828e-05, 5.0374...</msg>
<status status="PASS" starttime="20201030 18:31:30.536" endtime="20201030 18:31:30.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.545" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 18:31:30.543" endtime="20201030 18:31:30.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.547" level="INFO">VALUE: [5.080600000000046e-05, 5.009799999999842e-05, 5.062500000000206e-05, 5.054100000000117e-05, 4.998600000000186e-05, 5.074999999999871e-05, 5.051399999999803e-05, 5.076399999999828e-05, 5.037499999999834e-05, 5.013900000000113e-05, 5.043100000000009e-05, 5.043100000000009e-05, 5.043100000000009e-05, 4.984800000000164e-05, 4.987500000000131e-05, 5.06669999999973e-05, 5.020899999999898e-05, 4.9901999999997504e-05, 5.018000000000036e-05, 5.012499999999809e-05, 5.006899999999981e-05, 5.031900000000006e-05, 5.0708e-05, 5.018099999999984e-05, 5.018000000000036e-05, 5.052800000000107e-05, 5.052800000000107e-05, 4.998600000000186e-05, 5.047199999999932e-05, 5.005599999999971e-05, 5.043100000000009e-05, 5.040300000000095e-05, 4.98469999999987e-05, 5.0415999999997574e-05, 5.0402000000001473e-05, 5.018000000000036e-05, 5.043000000000061e-05, 4.998599999999839e-05, 5.051399999999803e-05, 4.997200000000229e-05, 5.019399999999993e-05, 5.068100000000034e-05, 5.048599999999889e-05, 4.988900000000088e-05, 5.047199999999932e-05, 4.98339999999986e-05, 5.012499999999809e-05, 5.036100000000224e-05, 5.026400000000125e-05, 5.023600000000211e-05]</msg>
<status status="PASS" starttime="20201030 18:31:30.546" endtime="20201030 18:31:30.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.541" endtime="20201030 18:31:30.548"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:30.552" endtime="20201030 18:31:30.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.550" endtime="20201030 18:31:30.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.549" endtime="20201030 18:31:30.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.191" endtime="20201030 18:31:30.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.191" endtime="20201030 18:31:30.573"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.581" endtime="20201030 18:31:30.599"></status>
</kw>
<msg timestamp="20201030 18:31:30.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.580" endtime="20201030 18:31:30.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.600" endtime="20201030 18:31:30.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.603" endtime="20201030 18:31:30.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.577" endtime="20201030 18:31:30.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.575" endtime="20201030 18:31:30.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.612" endtime="20201030 18:31:30.899"></status>
</kw>
<msg timestamp="20201030 18:31:30.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022153528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022204903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.610" endtime="20201030 18:31:30.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022153528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022204903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.903" endtime="20201030 18:31:30.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.912" endtime="20201030 18:31:30.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.608" endtime="20201030 18:31:30.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.606" endtime="20201030 18:31:30.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:30.918" level="INFO">${RESULT} = [{'diff': 5.137500000000281e-05}, {'diff': 5.145900000000023e-05}, {'diff': 5.127799999999835e-05}, {'diff': 5.166700000000177e-05}, {'diff': 5.148600000000336e-05}, {'diff': 5.125000000000268e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:30.915" endtime="20201030 18:31:30.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:30.922" level="INFO">${ACCURACY} = {'diff': [5.137500000000281e-05, 5.145900000000023e-05, 5.127799999999835e-05, 5.166700000000177e-05, 5.148600000000336e-05, 5.125000000000268e-05, 5.1151999999998754e-05, 5.093000000000111e-05, 5.102...</msg>
<status status="PASS" starttime="20201030 18:31:30.919" endtime="20201030 18:31:30.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.927" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 18:31:30.926" endtime="20201030 18:31:30.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.929" level="INFO">VALUE: [5.137500000000281e-05, 5.145900000000023e-05, 5.127799999999835e-05, 5.166700000000177e-05, 5.148600000000336e-05, 5.125000000000268e-05, 5.1151999999998754e-05, 5.093000000000111e-05, 5.102800000000157e-05, 5.1693999999997964e-05, 5.141699999999805e-05, 5.168100000000134e-05, 5.140299999999848e-05, 5.1014000000002e-05, 5.094400000000068e-05, 5.088900000000188e-05, 5.1473000000003266e-05, 5.172200000000057e-05, 5.158300000000088e-05, 5.10270000000021e-05, 5.1151999999998754e-05, 5.151399999999903e-05, 5.1152000000002223e-05, 5.15279999999986e-05, 5.154200000000164e-05, 5.111099999999952e-05, 5.158300000000088e-05, 5.1221999999996604e-05, 5.104199999999767e-05, 5.158399999999688e-05, 5.127800000000182e-05, 5.10279999999981e-05, 5.112499999999909e-05, 5.087499999999884e-05, 5.130500000000149e-05, 5.100000000000243e-05, 5.119400000000093e-05, 5.127699999999888e-05, 5.174999999999971e-05, 5.088899999999841e-05, 5.16530000000022e-05, 5.115299999999823e-05, 5.074999999999871e-05, 5.155600000000121e-05, 5.086099999999927e-05, 5.162499999999959e-05, 5.13470000000002e-05, 5.141700000000152e-05, 5.129200000000139e-05, 5.1415999999998574e-05]</msg>
<status status="PASS" starttime="20201030 18:31:30.928" endtime="20201030 18:31:30.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.923" endtime="20201030 18:31:30.931"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:30.934" endtime="20201030 18:31:30.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.933" endtime="20201030 18:31:30.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.932" endtime="20201030 18:31:30.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.574" endtime="20201030 18:31:30.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.573" endtime="20201030 18:31:30.955"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.964" endtime="20201030 18:31:30.982"></status>
</kw>
<msg timestamp="20201030 18:31:30.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.962" endtime="20201030 18:31:30.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:30.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:30.984" endtime="20201030 18:31:30.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.986" endtime="20201030 18:31:30.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.959" endtime="20201030 18:31:30.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.957" endtime="20201030 18:31:30.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:30.995" endtime="20201030 18:31:31.281"></status>
</kw>
<msg timestamp="20201030 18:31:31.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022856736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022909181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:30.994" endtime="20201030 18:31:31.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022856736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022909181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.285" endtime="20201030 18:31:31.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.294" endtime="20201030 18:31:31.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.991" endtime="20201030 18:31:31.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.989" endtime="20201030 18:31:31.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:31.300" level="INFO">${RESULT} = [{'diff': 5.244500000000166e-05}, {'diff': 5.205499999999877e-05}, {'diff': 5.225000000000021e-05}, {'diff': 5.256899999999884e-05}, {'diff': 5.225000000000021e-05}, {'diff': 5.2249999999996743e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:31:31.297" endtime="20201030 18:31:31.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:31.304" level="INFO">${ACCURACY} = {'diff': [5.244500000000166e-05, 5.205499999999877e-05, 5.225000000000021e-05, 5.256899999999884e-05, 5.225000000000021e-05, 5.2249999999996743e-05, 5.201399999999953e-05, 5.229199999999892e-05, 5.229...</msg>
<status status="PASS" starttime="20201030 18:31:31.301" endtime="20201030 18:31:31.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.309" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 18:31:31.308" endtime="20201030 18:31:31.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.311" level="INFO">VALUE: [5.244500000000166e-05, 5.205499999999877e-05, 5.225000000000021e-05, 5.256899999999884e-05, 5.225000000000021e-05, 5.2249999999996743e-05, 5.201399999999953e-05, 5.229199999999892e-05, 5.229199999999892e-05, 5.258400000000135e-05, 5.229199999999892e-05, 5.190300000000245e-05, 5.229200000000239e-05, 5.240299999999948e-05, 5.257000000000178e-05, 5.225000000000021e-05, 5.2138000000000184e-05, 5.1957999999997784e-05, 5.2415999999999574e-05, 5.183300000000113e-05, 5.250000000000046e-05, 5.226399999999978e-05, 5.248600000000089e-05, 5.258299999999841e-05, 5.261100000000102e-05, 5.2707999999998534e-05, 5.193100000000159e-05, 5.261200000000049e-05, 5.212500000000009e-05, 5.219500000000141e-05, 5.273600000000114e-05, 5.209700000000095e-05, 5.201399999999953e-05, 5.213899999999966e-05, 5.201399999999953e-05, 5.256899999999884e-05, 5.18609999999968e-05, 5.188899999999941e-05, 5.229200000000239e-05, 5.247200000000132e-05, 5.25279999999996e-05, 5.26669999999993e-05, 5.2179999999998894e-05, 5.256999999999831e-05, 5.222300000000055e-05, 5.2151999999999754e-05, 5.20409999999992e-05, 5.233300000000163e-05, 5.2249999999996743e-05, 5.247200000000132e-05]</msg>
<status status="PASS" starttime="20201030 18:31:31.310" endtime="20201030 18:31:31.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.305" endtime="20201030 18:31:31.314"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:31.317" endtime="20201030 18:31:31.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.316" endtime="20201030 18:31:31.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.315" endtime="20201030 18:31:31.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.956" endtime="20201030 18:31:31.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:30.955" endtime="20201030 18:31:31.338"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.347" endtime="20201030 18:31:31.364"></status>
</kw>
<msg timestamp="20201030 18:31:31.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:31.345" endtime="20201030 18:31:31.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:31.366" endtime="20201030 18:31:31.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.369" endtime="20201030 18:31:31.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.342" endtime="20201030 18:31:31.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.340" endtime="20201030 18:31:31.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.380" endtime="20201030 18:31:31.667"></status>
</kw>
<msg timestamp="20201030 18:31:31.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022035319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.378" endtime="20201030 18:31:31.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022035319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.672" endtime="20201030 18:31:31.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.680" endtime="20201030 18:31:31.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.375" endtime="20201030 18:31:31.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.374" endtime="20201030 18:31:31.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:31.686" level="INFO">${RESULT} = [{'diff': 5.351300000000156e-05}, {'diff': 5.345900000000223e-05}, {'diff': 5.337500000000134e-05}, {'diff': 5.290299999999998e-05}, {'diff': 5.356899999999984e-05}, {'diff': 5.2971999999998354e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:31:31.683" endtime="20201030 18:31:31.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:31.691" level="INFO">${ACCURACY} = {'diff': [5.351300000000156e-05, 5.345900000000223e-05, 5.337500000000134e-05, 5.290299999999998e-05, 5.356899999999984e-05, 5.2971999999998354e-05, 5.313900000000066e-05, 5.365299999999726e-05, 5.368...</msg>
<status status="PASS" starttime="20201030 18:31:31.687" endtime="20201030 18:31:31.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.696" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 18:31:31.695" endtime="20201030 18:31:31.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.698" level="INFO">VALUE: [5.351300000000156e-05, 5.345900000000223e-05, 5.337500000000134e-05, 5.290299999999998e-05, 5.356899999999984e-05, 5.2971999999998354e-05, 5.313900000000066e-05, 5.365299999999726e-05, 5.3680000000000394e-05, 5.338900000000091e-05, 5.301400000000053e-05, 5.280600000000246e-05, 5.376400000000128e-05, 5.3638000000001684e-05, 5.325000000000121e-05, 5.294500000000216e-05, 5.306999999999881e-05, 5.295900000000173e-05, 5.3707999999999534e-05, 5.327699999999741e-05, 5.3166000000000324e-05, 5.3443999999999714e-05, 5.336100000000177e-05, 5.354200000000017e-05, 5.368099999999987e-05, 5.3693999999999964e-05, 5.288899999999694e-05, 5.331999999999906e-05, 5.354200000000017e-05, 5.369500000000291e-05, 5.3443999999999714e-05, 5.330599999999949e-05, 5.370900000000248e-05, 5.294400000000268e-05, 5.3693999999999964e-05, 5.3749999999998244e-05, 5.347200000000232e-05, 5.345800000000275e-05, 5.300000000000096e-05, 5.340299999999701e-05, 5.306899999999934e-05, 5.306899999999934e-05, 5.290299999999998e-05, 5.318099999999937e-05, 5.318099999999937e-05, 5.354200000000017e-05, 5.369500000000291e-05, 5.355500000000027e-05, 5.352699999999766e-05, 5.3693999999999964e-05]</msg>
<status status="PASS" starttime="20201030 18:31:31.697" endtime="20201030 18:31:31.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.692" endtime="20201030 18:31:31.699"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:31.703" endtime="20201030 18:31:31.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.701" endtime="20201030 18:31:31.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.700" endtime="20201030 18:31:31.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.339" endtime="20201030 18:31:31.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.338" endtime="20201030 18:31:31.724"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.732" endtime="20201030 18:31:31.749"></status>
</kw>
<msg timestamp="20201030 18:31:31.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:31.731" endtime="20201030 18:31:31.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:31.751" endtime="20201030 18:31:31.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.754" endtime="20201030 18:31:31.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.728" endtime="20201030 18:31:31.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.726" endtime="20201030 18:31:31.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.763" endtime="20201030 18:31:32.049"></status>
</kw>
<msg timestamp="20201030 18:31:32.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021869889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021923931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.761" endtime="20201030 18:31:32.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021869889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021923931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.053" endtime="20201030 18:31:32.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.061" endtime="20201030 18:31:32.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.758" endtime="20201030 18:31:32.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.757" endtime="20201030 18:31:32.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:32.068" level="INFO">${RESULT} = [{'diff': 5.404200000000067e-05}, {'diff': 5.4708000000000534e-05}, {'diff': 5.405600000000024e-05}, {'diff': 5.4416000000001574e-05}, {'diff': 5.4651999999998785e-05}, {'diff': 5.4708000000000534e-05...</msg>
<status status="PASS" starttime="20201030 18:31:32.064" endtime="20201030 18:31:32.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:32.072" level="INFO">${ACCURACY} = {'diff': [5.404200000000067e-05, 5.4708000000000534e-05, 5.405600000000024e-05, 5.4416000000001574e-05, 5.4651999999998785e-05, 5.4708000000000534e-05, 5.4443999999997245e-05, 5.413900000000166e-05, 5...</msg>
<status status="PASS" starttime="20201030 18:31:32.069" endtime="20201030 18:31:32.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.076" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 18:31:32.075" endtime="20201030 18:31:32.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.079" level="INFO">VALUE: [5.404200000000067e-05, 5.4708000000000534e-05, 5.405600000000024e-05, 5.4416000000001574e-05, 5.4651999999998785e-05, 5.4708000000000534e-05, 5.4443999999997245e-05, 5.413900000000166e-05, 5.429200000000092e-05, 5.4249999999998744e-05, 5.440300000000148e-05, 5.4013999999998064e-05, 5.459699999999998e-05, 5.455600000000074e-05, 5.468100000000087e-05, 5.46809999999974e-05, 5.444500000000019e-05, 5.4735999999999674e-05, 5.437500000000234e-05, 5.4499999999998994e-05, 5.4180000000000894e-05, 5.4249999999998744e-05, 5.438899999999844e-05, 5.387500000000184e-05, 5.398600000000239e-05, 5.434699999999973e-05, 5.455600000000074e-05, 5.38609999999988e-05, 5.3971999999999354e-05, 5.468100000000087e-05, 5.418100000000037e-05, 5.395899999999926e-05, 5.477699999999891e-05, 5.380500000000052e-05, 5.4429999999997675e-05, 5.381900000000009e-05, 5.426400000000178e-05, 5.425000000000221e-05, 5.393100000000012e-05, 5.461099999999955e-05, 5.4513999999998564e-05, 5.418100000000037e-05, 5.40280000000011e-05, 5.451400000000203e-05, 5.4735999999999674e-05, 5.416699999999733e-05, 5.433300000000016e-05, 5.4722000000000104e-05, 5.395800000000325e-05, 5.459699999999998e-05]</msg>
<status status="PASS" starttime="20201030 18:31:32.077" endtime="20201030 18:31:32.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.072" endtime="20201030 18:31:32.080"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:32.084" endtime="20201030 18:31:32.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.082" endtime="20201030 18:31:32.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.081" endtime="20201030 18:31:32.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.725" endtime="20201030 18:31:32.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.724" endtime="20201030 18:31:32.104"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.113" endtime="20201030 18:31:32.132"></status>
</kw>
<msg timestamp="20201030 18:31:32.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.111" endtime="20201030 18:31:32.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.133" endtime="20201030 18:31:32.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.136" endtime="20201030 18:31:32.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.109" endtime="20201030 18:31:32.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.107" endtime="20201030 18:31:32.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.145" endtime="20201030 18:31:32.430"></status>
</kw>
<msg timestamp="20201030 18:31:32.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022779278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022834292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.143" endtime="20201030 18:31:32.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022779278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022834292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.434" endtime="20201030 18:31:32.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.443" endtime="20201030 18:31:32.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.141" endtime="20201030 18:31:32.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.139" endtime="20201030 18:31:32.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:32.449" level="INFO">${RESULT} = [{'diff': 5.5013999999999064e-05}, {'diff': 5.5805999999998523e-05}, {'diff': 5.5429999999998675e-05}, {'diff': 5.5721999999997635e-05}, {'diff': 5.502699999999916e-05}, {'diff': 5.483300000000066e-05...</msg>
<status status="PASS" starttime="20201030 18:31:32.446" endtime="20201030 18:31:32.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:32.453" level="INFO">${ACCURACY} = {'diff': [5.5013999999999064e-05, 5.5805999999998523e-05, 5.5429999999998675e-05, 5.5721999999997635e-05, 5.502699999999916e-05, 5.483300000000066e-05, 5.4999999999999494e-05, 5.5527999999999134e-05, ...</msg>
<status status="PASS" starttime="20201030 18:31:32.450" endtime="20201030 18:31:32.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.458" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 18:31:32.457" endtime="20201030 18:31:32.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.460" level="INFO">VALUE: [5.5013999999999064e-05, 5.5805999999998523e-05, 5.5429999999998675e-05, 5.5721999999997635e-05, 5.502699999999916e-05, 5.483300000000066e-05, 5.4999999999999494e-05, 5.5527999999999134e-05, 5.5750000000000244e-05, 5.5458000000001284e-05, 5.484700000000023e-05, 5.5471999999997385e-05, 5.4985999999999924e-05, 5.5236000000000174e-05, 5.51670000000018e-05, 5.488899999999894e-05, 5.56670000000023e-05, 5.54869999999999e-05, 5.559699999999751e-05, 5.5708000000001534e-05, 5.50549999999983e-05, 5.580500000000252e-05, 5.5763999999999814e-05, 5.48609999999998e-05, 5.556900000000184e-05, 5.488899999999894e-05, 5.5499999999999994e-05, 5.545900000000076e-05, 5.562500000000012e-05, 5.5499999999999994e-05, 5.502699999999916e-05, 5.527800000000235e-05, 5.5693999999998495e-05, 5.55410000000027e-05, 5.5222000000000604e-05, 5.5777999999999384e-05, 5.531900000000159e-05, 5.5277999999998884e-05, 5.479200000000142e-05, 5.5486000000000424e-05, 5.5722000000001104e-05, 5.532000000000106e-05, 5.5291999999998453e-05, 5.487500000000284e-05, 5.513899999999919e-05, 5.53610000000003e-05, 5.531899999999812e-05, 5.5763999999999814e-05, 5.4930000000001644e-05, 5.484700000000023e-05]</msg>
<status status="PASS" starttime="20201030 18:31:32.459" endtime="20201030 18:31:32.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.454" endtime="20201030 18:31:32.462"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:32.466" endtime="20201030 18:31:32.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.465" endtime="20201030 18:31:32.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.463" endtime="20201030 18:31:32.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.105" endtime="20201030 18:31:32.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.105" endtime="20201030 18:31:32.487"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.495" endtime="20201030 18:31:32.512"></status>
</kw>
<msg timestamp="20201030 18:31:32.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.494" endtime="20201030 18:31:32.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.514" endtime="20201030 18:31:32.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.516" endtime="20201030 18:31:32.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.491" endtime="20201030 18:31:32.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.489" endtime="20201030 18:31:32.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.525" endtime="20201030 18:31:32.813"></status>
</kw>
<msg timestamp="20201030 18:31:32.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021806958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021863028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.524" endtime="20201030 18:31:32.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021806958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021863028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.817" endtime="20201030 18:31:32.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.825" endtime="20201030 18:31:32.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.521" endtime="20201030 18:31:32.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.520" endtime="20201030 18:31:32.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:32.832" level="INFO">${RESULT} = [{'diff': 5.606999999999834e-05}, {'diff': 5.641699999999958e-05}, {'diff': 5.640300000000001e-05}, {'diff': 5.6514000000000564e-05}, {'diff': 5.5986000000000924e-05}, {'diff': 5.652700000000066e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:32.829" endtime="20201030 18:31:32.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:32.839" level="INFO">${ACCURACY} = {'diff': [5.606999999999834e-05, 5.641699999999958e-05, 5.640300000000001e-05, 5.6514000000000564e-05, 5.5986000000000924e-05, 5.652700000000066e-05, 5.6402000000000535e-05, 5.6693999999999495e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:31:32.833" endtime="20201030 18:31:32.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.844" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 18:31:32.843" endtime="20201030 18:31:32.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.846" level="INFO">VALUE: [5.606999999999834e-05, 5.641699999999958e-05, 5.640300000000001e-05, 5.6514000000000564e-05, 5.5986000000000924e-05, 5.652700000000066e-05, 5.6402000000000535e-05, 5.6693999999999495e-05, 5.5972000000001354e-05, 5.631899999999912e-05, 5.6736000000001674e-05, 5.6736000000001674e-05, 5.6528000000000134e-05, 5.609699999999801e-05, 5.6778000000000384e-05, 5.629200000000292e-05, 5.597300000000083e-05, 5.611100000000105e-05, 5.652700000000066e-05, 5.581900000000209e-05, 5.580500000000252e-05, 5.6250000000000744e-05, 5.588899999999994e-05, 5.612500000000062e-05, 5.5958000000001784e-05, 5.630600000000249e-05, 5.6014000000000064e-05, 5.587500000000037e-05, 5.593099999999865e-05, 5.593099999999865e-05, 5.6500000000000994e-05, 5.680500000000005e-05, 5.590299999999951e-05, 5.6778000000000384e-05, 5.608299999999844e-05, 5.611099999999758e-05, 5.588899999999994e-05, 5.6763999999997344e-05, 5.6749999999997774e-05, 5.6055999999998773e-05, 5.6000000000000494e-05, 5.6471999999998385e-05, 5.591699999999908e-05, 5.5986000000000924e-05, 5.63480000000012e-05, 5.6791999999999954e-05, 5.629200000000292e-05, 5.630499999999955e-05, 5.6778000000000384e-05, 5.587500000000037e-05]</msg>
<status status="PASS" starttime="20201030 18:31:32.845" endtime="20201030 18:31:32.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.840" endtime="20201030 18:31:32.848"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:32.851" endtime="20201030 18:31:32.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.850" endtime="20201030 18:31:32.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.849" endtime="20201030 18:31:32.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.488" endtime="20201030 18:31:32.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.487" endtime="20201030 18:31:32.872"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.880" endtime="20201030 18:31:32.898"></status>
</kw>
<msg timestamp="20201030 18:31:32.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.879" endtime="20201030 18:31:32.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:32.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:32.900" endtime="20201030 18:31:32.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.902" endtime="20201030 18:31:32.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.876" endtime="20201030 18:31:32.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.874" endtime="20201030 18:31:32.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:32.911" endtime="20201030 18:31:33.199"></status>
</kw>
<msg timestamp="20201030 18:31:33.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022290597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022348347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:32.910" endtime="20201030 18:31:33.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022290597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022348347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:33.203" endtime="20201030 18:31:33.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.211" endtime="20201030 18:31:33.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.907" endtime="20201030 18:31:33.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.905" endtime="20201030 18:31:33.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:33.218" level="INFO">${RESULT} = [{'diff': 5.7750000000002244e-05}, {'diff': 5.7221999999999135e-05}, {'diff': 5.734699999999926e-05}, {'diff': 5.766700000000083e-05}, {'diff': 5.704100000000073e-05}, {'diff': 5.7000000000001494e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:33.215" endtime="20201030 18:31:33.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:33.222" level="INFO">${ACCURACY} = {'diff': [5.7750000000002244e-05, 5.7221999999999135e-05, 5.734699999999926e-05, 5.766700000000083e-05, 5.704100000000073e-05, 5.7000000000001494e-05, 5.691700000000008e-05, 5.765299999999779e-05, 5.7...</msg>
<status status="PASS" starttime="20201030 18:31:33.219" endtime="20201030 18:31:33.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.226" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 18:31:33.225" endtime="20201030 18:31:33.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.229" level="INFO">VALUE: [5.7750000000002244e-05, 5.7221999999999135e-05, 5.734699999999926e-05, 5.766700000000083e-05, 5.704100000000073e-05, 5.7000000000001494e-05, 5.691700000000008e-05, 5.765299999999779e-05, 5.71809999999999e-05, 5.736200000000177e-05, 5.7236000000002174e-05, 5.7235999999998705e-05, 5.7735999999999205e-05, 5.7457999999999815e-05, 5.7235999999998705e-05, 5.7028000000000634e-05, 5.7708000000000065e-05, 5.7721999999999635e-05, 5.720899999999904e-05, 5.765300000000126e-05, 5.7583999999999413e-05, 5.71809999999999e-05, 5.741700000000058e-05, 5.734799999999873e-05, 5.7180000000000425e-05, 5.7236000000002174e-05, 5.779100000000148e-05, 5.715299999999729e-05, 5.758299999999994e-05, 5.743099999999668e-05, 5.7278000000000884e-05, 5.6971999999998885e-05, 5.7792000000000954e-05, 5.7749999999998775e-05, 5.7792000000000954e-05, 5.709799999999848e-05, 5.719499999999947e-05, 5.769499999999997e-05, 5.756900000000037e-05, 5.71809999999999e-05, 5.7401999999998066e-05, 5.711099999999858e-05, 5.738899999999797e-05, 5.76810000000004e-05, 5.7306000000000024e-05, 5.713900000000119e-05, 5.736099999999883e-05, 5.6750000000001244e-05, 5.769499999999997e-05, 5.7527999999997664e-05]</msg>
<status status="PASS" starttime="20201030 18:31:33.227" endtime="20201030 18:31:33.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.223" endtime="20201030 18:31:33.230"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:33.234" endtime="20201030 18:31:33.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.232" endtime="20201030 18:31:33.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.231" endtime="20201030 18:31:33.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.873" endtime="20201030 18:31:33.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:32.872" endtime="20201030 18:31:33.254"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.263" endtime="20201030 18:31:33.282"></status>
</kw>
<msg timestamp="20201030 18:31:33.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:33.261" endtime="20201030 18:31:33.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:33.283" endtime="20201030 18:31:33.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.286" endtime="20201030 18:31:33.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.259" endtime="20201030 18:31:33.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.257" endtime="20201030 18:31:33.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.295" endtime="20201030 18:31:33.580"></status>
</kw>
<msg timestamp="20201030 18:31:33.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022821861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022880181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:33.293" endtime="20201030 18:31:33.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022821861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022880181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:33.584" endtime="20201030 18:31:33.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.592" endtime="20201030 18:31:33.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.291" endtime="20201030 18:31:33.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.289" endtime="20201030 18:31:33.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:33.599" level="INFO">${RESULT} = [{'diff': 5.8320000000000594e-05}, {'diff': 5.7985999999999455e-05}, {'diff': 5.8137999999999246e-05}, {'diff': 5.8665999999998886e-05}, {'diff': 5.8527999999998664e-05}, {'diff': 5.859700000000051e-0...</msg>
<status status="PASS" starttime="20201030 18:31:33.595" endtime="20201030 18:31:33.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:33.603" level="INFO">${ACCURACY} = {'diff': [5.8320000000000594e-05, 5.7985999999999455e-05, 5.8137999999999246e-05, 5.8665999999998886e-05, 5.8527999999998664e-05, 5.859700000000051e-05, 5.8693999999998026e-05, 5.7985999999999455e-05,...</msg>
<status status="PASS" starttime="20201030 18:31:33.600" endtime="20201030 18:31:33.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.607" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 18:31:33.606" endtime="20201030 18:31:33.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.610" level="INFO">VALUE: [5.8320000000000594e-05, 5.7985999999999455e-05, 5.8137999999999246e-05, 5.8665999999998886e-05, 5.8527999999998664e-05, 5.859700000000051e-05, 5.8693999999998026e-05, 5.7985999999999455e-05, 5.8750000000003244e-05, 5.844499999999725e-05, 5.861100000000008e-05, 5.8777999999998914e-05, 5.786099999999933e-05, 5.834700000000026e-05, 5.8680000000001925e-05, 5.8721999999997165e-05, 5.829099999999851e-05, 5.783300000000019e-05, 5.862499999999965e-05, 5.8180000000001425e-05, 5.85689999999979e-05, 5.786099999999933e-05, 5.8334000000000163e-05, 5.866700000000183e-05, 5.8736000000000205e-05, 5.820900000000004e-05, 5.83749999999994e-05, 5.8569999999997374e-05, 5.826299999999937e-05, 5.8472000000000385e-05, 5.786099999999933e-05, 5.78749999999989e-05, 5.880499999999858e-05, 5.816699999999786e-05, 5.822299999999961e-05, 5.8263999999998844e-05, 5.861100000000008e-05, 5.78749999999989e-05, 5.786099999999933e-05, 5.8083999999999913e-05, 5.813899999999872e-05, 5.791700000000108e-05, 5.8430000000001675e-05, 5.78749999999989e-05, 5.8763999999999345e-05, 5.8527999999998664e-05, 5.861100000000008e-05, 5.8778000000002384e-05, 5.8485999999999955e-05, 5.840299999999854e-05]</msg>
<status status="PASS" starttime="20201030 18:31:33.608" endtime="20201030 18:31:33.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.604" endtime="20201030 18:31:33.612"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:33.615" endtime="20201030 18:31:33.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.614" endtime="20201030 18:31:33.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.613" endtime="20201030 18:31:33.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.255" endtime="20201030 18:31:33.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.255" endtime="20201030 18:31:33.636"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.645" endtime="20201030 18:31:33.663"></status>
</kw>
<msg timestamp="20201030 18:31:33.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:33.643" endtime="20201030 18:31:33.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:33.665" endtime="20201030 18:31:33.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.667" endtime="20201030 18:31:33.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.640" endtime="20201030 18:31:33.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.638" endtime="20201030 18:31:33.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.676" endtime="20201030 18:31:33.963"></status>
</kw>
<msg timestamp="20201030 18:31:33.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021695875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021755556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:33.674" endtime="20201030 18:31:33.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021695875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021755556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:33.967" endtime="20201030 18:31:33.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:33.975" endtime="20201030 18:31:33.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.672" endtime="20201030 18:31:33.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.670" endtime="20201030 18:31:33.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:33.982" level="INFO">${RESULT} = [{'diff': 5.968099999999893e-05}, {'diff': 5.9750000000000775e-05}, {'diff': 5.9707999999998596e-05}, {'diff': 5.9277999999999414e-05}, {'diff': 5.955499999999933e-05}, {'diff': 5.886100000000033e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:33.978" endtime="20201030 18:31:33.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:33.987" level="INFO">${ACCURACY} = {'diff': [5.968099999999893e-05, 5.9750000000000775e-05, 5.9707999999998596e-05, 5.9277999999999414e-05, 5.955499999999933e-05, 5.886100000000033e-05, 5.9013999999999595e-05, 5.9528000000003134e-05, 5...</msg>
<status status="PASS" starttime="20201030 18:31:33.983" endtime="20201030 18:31:33.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.991" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 18:31:33.990" endtime="20201030 18:31:33.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:33.994" level="INFO">VALUE: [5.968099999999893e-05, 5.9750000000000775e-05, 5.9707999999998596e-05, 5.9277999999999414e-05, 5.955499999999933e-05, 5.886100000000033e-05, 5.9013999999999595e-05, 5.9528000000003134e-05, 5.9278000000002884e-05, 5.9598000000000984e-05, 5.965299999999979e-05, 5.895900000000079e-05, 5.9097999999997014e-05, 5.9249999999996805e-05, 5.9222000000001135e-05, 5.905499999999883e-05, 5.88749999999999e-05, 5.9236000000000705e-05, 5.888899999999947e-05, 5.9041999999998734e-05, 5.9805999999999054e-05, 5.908299999999797e-05, 5.9277999999999414e-05, 5.961099999999761e-05, 5.918099999999843e-05, 5.9319999999998124e-05, 5.9277999999999414e-05, 5.9514000000000095e-05, 5.9694000000002495e-05, 5.927699999999994e-05, 5.883300000000119e-05, 5.9000000000000025e-05, 5.958299999999847e-05, 5.9486000000000955e-05, 5.90689999999984e-05, 5.9305999999998554e-05, 5.968099999999893e-05, 5.88749999999999e-05, 5.965299999999979e-05, 5.901300000000012e-05, 5.93750000000004e-05, 5.9637999999997277e-05, 5.9665999999999886e-05, 5.9429999999999206e-05, 5.9013999999999595e-05, 5.9528000000003134e-05, 5.9721999999998165e-05, 5.8986000000000455e-05, 5.9764000000000345e-05, 5.9555999999998804e-05]</msg>
<status status="PASS" starttime="20201030 18:31:33.992" endtime="20201030 18:31:33.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.988" endtime="20201030 18:31:33.995"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:33.999" endtime="20201030 18:31:34.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.997" endtime="20201030 18:31:34.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.996" endtime="20201030 18:31:34.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.637" endtime="20201030 18:31:34.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:33.636" endtime="20201030 18:31:34.019"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.028" endtime="20201030 18:31:34.047"></status>
</kw>
<msg timestamp="20201030 18:31:34.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.027" endtime="20201030 18:31:34.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.049" endtime="20201030 18:31:34.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.051" endtime="20201030 18:31:34.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.024" endtime="20201030 18:31:34.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.022" endtime="20201030 18:31:34.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.060" endtime="20201030 18:31:34.366"></status>
</kw>
<msg timestamp="20201030 18:31:34.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022302333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022363083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:34.059" endtime="20201030 18:31:34.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022302333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022363083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:34.375" endtime="20201030 18:31:34.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.383" endtime="20201030 18:31:34.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.056" endtime="20201030 18:31:34.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.054" endtime="20201030 18:31:34.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:34.390" level="INFO">${RESULT} = [{'diff': 6.0749999999998305e-05}, {'diff': 5.9902000000000566e-05}, {'diff': 5.9957999999998846e-05}, {'diff': 6.0528000000000665e-05}, {'diff': 6.013900000000072e-05}, {'diff': 5.98750000000009e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:34.387" endtime="20201030 18:31:34.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:34.394" level="INFO">${ACCURACY} = {'diff': [6.0749999999998305e-05, 5.9902000000000566e-05, 5.9957999999998846e-05, 6.0528000000000665e-05, 6.013900000000072e-05, 5.98750000000009e-05, 6.0707999999999596e-05, 6.043099999999968e-05, 6....</msg>
<status status="PASS" starttime="20201030 18:31:34.391" endtime="20201030 18:31:34.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.398" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 18:31:34.397" endtime="20201030 18:31:34.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.401" level="INFO">VALUE: [6.0749999999998305e-05, 5.9902000000000566e-05, 5.9957999999998846e-05, 6.0528000000000665e-05, 6.013900000000072e-05, 5.98750000000009e-05, 6.0707999999999596e-05, 6.043099999999968e-05, 6.066700000000036e-05, 6.041699999999664e-05, 6.072299999999864e-05, 6.06949999999995e-05, 6.006900000000287e-05, 6.0651999999997847e-05, 6.0166000000000386e-05, 6.06949999999995e-05, 5.986099999999786e-05, 6.061099999999861e-05, 6.0041999999999734e-05, 6.043099999999968e-05, 6.043099999999968e-05, 6.0249999999997805e-05, 5.988900000000047e-05, 6.0028000000000165e-05, 6.0041999999999734e-05, 6.058299999999947e-05, 6.030500000000008e-05, 6.058299999999947e-05, 6.013900000000072e-05, 6.0193999999999526e-05, 6.0249999999997805e-05, 6.062500000000165e-05, 6.0764000000001345e-05, 6.015299999999682e-05, 6.065300000000079e-05, 6.066700000000036e-05, 6.0542000000000235e-05, 5.9833999999998194e-05, 6.0555999999999804e-05, 6.033299999999922e-05, 6.0402000000001066e-05, 6.0264000000000845e-05, 6.033299999999922e-05, 6.0235999999998235e-05, 6.033300000000269e-05, 5.9986000000001455e-05, 6.062500000000165e-05, 6.036099999999836e-05, 6.043099999999968e-05, 5.990300000000004e-05]</msg>
<status status="PASS" starttime="20201030 18:31:34.399" endtime="20201030 18:31:34.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.395" endtime="20201030 18:31:34.402"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:34.406" endtime="20201030 18:31:34.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.404" endtime="20201030 18:31:34.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.403" endtime="20201030 18:31:34.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.020" endtime="20201030 18:31:34.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.020" endtime="20201030 18:31:34.427"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.437" endtime="20201030 18:31:34.455"></status>
</kw>
<msg timestamp="20201030 18:31:34.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.436" endtime="20201030 18:31:34.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.457" endtime="20201030 18:31:34.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.460" endtime="20201030 18:31:34.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.431" endtime="20201030 18:31:34.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.429" endtime="20201030 18:31:34.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.469" endtime="20201030 18:31:34.755"></status>
</kw>
<msg timestamp="20201030 18:31:34.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024825931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024887208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:34.467" endtime="20201030 18:31:34.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024825931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024887208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:34.759" endtime="20201030 18:31:34.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.767" endtime="20201030 18:31:34.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.465" endtime="20201030 18:31:34.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.463" endtime="20201030 18:31:34.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:34.774" level="INFO">${RESULT} = [{'diff': 6.127700000000194e-05}, {'diff': 6.159700000000004e-05}, {'diff': 6.131900000000065e-05}, {'diff': 6.13889999999985e-05}, {'diff': 6.12499999999988e-05}, {'diff': 6.175000000000277e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:31:34.770" endtime="20201030 18:31:34.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:34.778" level="INFO">${ACCURACY} = {'diff': [6.127700000000194e-05, 6.159700000000004e-05, 6.131900000000065e-05, 6.13889999999985e-05, 6.12499999999988e-05, 6.175000000000277e-05, 6.094499999999975e-05, 6.145800000000035e-05, 6.176399...</msg>
<status status="PASS" starttime="20201030 18:31:34.775" endtime="20201030 18:31:34.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.783" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 18:31:34.781" endtime="20201030 18:31:34.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.785" level="INFO">VALUE: [6.127700000000194e-05, 6.159700000000004e-05, 6.131900000000065e-05, 6.13889999999985e-05, 6.12499999999988e-05, 6.175000000000277e-05, 6.094499999999975e-05, 6.145800000000035e-05, 6.176399999999888e-05, 6.116700000000086e-05, 6.1014000000001595e-05, 6.15560000000008e-05, 6.154099999999829e-05, 6.123599999999924e-05, 6.130499999999761e-05, 6.158300000000047e-05, 6.172200000000017e-05, 6.108299999999997e-05, 6.162499999999918e-05, 6.161099999999961e-05, 6.122199999999967e-05, 6.17080000000006e-05, 6.162499999999918e-05, 6.159799999999951e-05, 6.091700000000061e-05, 6.155499999999786e-05, 6.0957999999999846e-05, 6.166600000000189e-05, 6.0985999999998985e-05, 6.180500000000158e-05, 6.081900000000015e-05, 6.12499999999988e-05, 6.136099999999936e-05, 6.113899999999825e-05, 6.150000000000252e-05, 6.17080000000006e-05, 6.122299999999914e-05, 6.0985999999998985e-05, 6.176300000000287e-05, 6.101299999999865e-05, 6.151299999999915e-05, 6.141599999999817e-05, 6.133300000000022e-05, 6.126399999999838e-05, 6.088900000000147e-05, 6.0957999999999846e-05, 6.12499999999988e-05, 6.162499999999918e-05, 6.109799999999901e-05, 6.144500000000025e-05]</msg>
<status status="PASS" starttime="20201030 18:31:34.784" endtime="20201030 18:31:34.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.779" endtime="20201030 18:31:34.792"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:34.796" endtime="20201030 18:31:34.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.794" endtime="20201030 18:31:34.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.793" endtime="20201030 18:31:34.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.428" endtime="20201030 18:31:34.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.427" endtime="20201030 18:31:34.817"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.825" endtime="20201030 18:31:34.843"></status>
</kw>
<msg timestamp="20201030 18:31:34.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.824" endtime="20201030 18:31:34.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:34.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:34.844" endtime="20201030 18:31:34.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.847" endtime="20201030 18:31:34.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.821" endtime="20201030 18:31:34.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.819" endtime="20201030 18:31:34.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:34.856" endtime="20201030 18:31:35.152"></status>
</kw>
<msg timestamp="20201030 18:31:35.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02183525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021897653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:34.854" endtime="20201030 18:31:35.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02183525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021897653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:35.162" endtime="20201030 18:31:35.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.180" endtime="20201030 18:31:35.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.852" endtime="20201030 18:31:35.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.850" endtime="20201030 18:31:35.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:35.189" level="INFO">${RESULT} = [{'diff': 6.240299999999907e-05}, {'diff': 6.212499999999968e-05}, {'diff': 6.223699999999971e-05}, {'diff': 6.250000000000006e-05}, {'diff': 6.24439999999983e-05}, {'diff': 6.181900000000115e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:35.186" endtime="20201030 18:31:35.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:35.194" level="INFO">${ACCURACY} = {'diff': [6.240299999999907e-05, 6.212499999999968e-05, 6.223699999999971e-05, 6.250000000000006e-05, 6.24439999999983e-05, 6.181900000000115e-05, 6.254100000000276e-05, 6.244400000000178e-05, 6.24580...</msg>
<status status="PASS" starttime="20201030 18:31:35.190" endtime="20201030 18:31:35.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.198" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 18:31:35.197" endtime="20201030 18:31:35.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.201" level="INFO">VALUE: [6.240299999999907e-05, 6.212499999999968e-05, 6.223699999999971e-05, 6.250000000000006e-05, 6.24439999999983e-05, 6.181900000000115e-05, 6.254100000000276e-05, 6.244400000000178e-05, 6.245800000000135e-05, 6.191700000000161e-05, 6.277799999999945e-05, 6.190299999999857e-05, 6.234700000000079e-05, 6.254199999999877e-05, 6.254199999999877e-05, 6.250000000000006e-05, 6.234800000000026e-05, 6.200000000000302e-05, 6.184700000000029e-05, 6.230499999999861e-05, 6.233300000000122e-05, 6.227799999999895e-05, 6.272200000000117e-05, 6.215299999999882e-05, 6.252800000000266e-05, 6.220900000000057e-05, 6.243100000000168e-05, 6.259800000000051e-05, 6.205500000000183e-05, 6.190299999999857e-05, 6.20140000000026e-05, 6.267999999999899e-05, 6.250000000000006e-05, 6.240300000000254e-05, 6.216699999999839e-05, 6.247200000000092e-05, 6.181900000000115e-05, 6.236100000000036e-05, 6.265299999999932e-05, 6.244499999999778e-05, 6.241699999999864e-05, 6.183299999999725e-05, 6.216700000000186e-05, 6.250000000000006e-05, 6.259699999999757e-05, 6.1888999999999e-05, 6.27219999999977e-05, 6.190299999999857e-05, 6.240299999999907e-05, 6.183300000000072e-05]</msg>
<status status="PASS" starttime="20201030 18:31:35.199" endtime="20201030 18:31:35.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.195" endtime="20201030 18:31:35.202"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:35.205" endtime="20201030 18:31:35.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.204" endtime="20201030 18:31:35.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.203" endtime="20201030 18:31:35.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.818" endtime="20201030 18:31:35.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:34.817" endtime="20201030 18:31:35.226"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.235" endtime="20201030 18:31:35.253"></status>
</kw>
<msg timestamp="20201030 18:31:35.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.233" endtime="20201030 18:31:35.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.254" endtime="20201030 18:31:35.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.257" endtime="20201030 18:31:35.258"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.230" endtime="20201030 18:31:35.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.228" endtime="20201030 18:31:35.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.266" endtime="20201030 18:31:35.552"></status>
</kw>
<msg timestamp="20201030 18:31:35.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021852528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02191625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:35.264" endtime="20201030 18:31:35.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021852528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02191625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:35.556" endtime="20201030 18:31:35.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.564" endtime="20201030 18:31:35.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.262" endtime="20201030 18:31:35.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.260" endtime="20201030 18:31:35.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:35.571" level="INFO">${RESULT} = [{'diff': 6.372200000000217e-05}, {'diff': 6.37219999999987e-05}, {'diff': 6.293100000000218e-05}, {'diff': 6.35280000000002e-05}, {'diff': 6.356899999999943e-05}, {'diff': 6.355499999999986e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:31:35.567" endtime="20201030 18:31:35.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:35.575" level="INFO">${ACCURACY} = {'diff': [6.372200000000217e-05, 6.37219999999987e-05, 6.293100000000218e-05, 6.35280000000002e-05, 6.356899999999943e-05, 6.355499999999986e-05, 6.295899999999785e-05, 6.294500000000175e-05, 6.290200...</msg>
<status status="PASS" starttime="20201030 18:31:35.571" endtime="20201030 18:31:35.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.579" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 18:31:35.578" endtime="20201030 18:31:35.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.581" level="INFO">VALUE: [6.372200000000217e-05, 6.37219999999987e-05, 6.293100000000218e-05, 6.35280000000002e-05, 6.356899999999943e-05, 6.355499999999986e-05, 6.295899999999785e-05, 6.294500000000175e-05, 6.29020000000001e-05, 6.347200000000192e-05, 6.345800000000235e-05, 6.359700000000204e-05, 6.340300000000007e-05, 6.344400000000278e-05, 6.368099999999946e-05, 6.323599999999777e-05, 6.370799999999913e-05, 6.352799999999673e-05, 6.298599999999752e-05, 6.337500000000093e-05, 6.357000000000237e-05, 6.323600000000124e-05, 6.326400000000038e-05, 6.286100000000086e-05, 6.32080000000021e-05, 6.356899999999943e-05, 6.298600000000099e-05, 6.30560000000023e-05, 6.295799999999838e-05, 6.340300000000007e-05, 6.298600000000099e-05, 6.365300000000032e-05, 6.359700000000204e-05, 6.324999999999734e-05, 6.350000000000106e-05, 6.324999999999734e-05, 6.329100000000004e-05, 6.366600000000042e-05, 6.286100000000086e-05, 6.379200000000002e-05, 6.345800000000235e-05, 6.298600000000099e-05, 6.30699999999984e-05, 6.295900000000132e-05, 6.344500000000225e-05, 6.37500000000013e-05, 6.316599999999992e-05, 6.373600000000174e-05, 6.305500000000283e-05, 6.348600000000149e-05]</msg>
<status status="PASS" starttime="20201030 18:31:35.580" endtime="20201030 18:31:35.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.575" endtime="20201030 18:31:35.583"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:35.586" endtime="20201030 18:31:35.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.585" endtime="20201030 18:31:35.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.584" endtime="20201030 18:31:35.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.227" endtime="20201030 18:31:35.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.226" endtime="20201030 18:31:35.607"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.616" endtime="20201030 18:31:35.635"></status>
</kw>
<msg timestamp="20201030 18:31:35.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.614" endtime="20201030 18:31:35.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.637" endtime="20201030 18:31:35.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.639" endtime="20201030 18:31:35.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.611" endtime="20201030 18:31:35.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.609" endtime="20201030 18:31:35.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.648" endtime="20201030 18:31:35.934"></status>
</kw>
<msg timestamp="20201030 18:31:35.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022681431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022745667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:35.647" endtime="20201030 18:31:35.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022681431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022745667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:35.938" endtime="20201030 18:31:35.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.946" endtime="20201030 18:31:35.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.644" endtime="20201030 18:31:35.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.642" endtime="20201030 18:31:35.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:35.953" level="INFO">${RESULT} = [{'diff': 6.423600000000224e-05}, {'diff': 6.444499999999978e-05}, {'diff': 6.452699999999825e-05}, {'diff': 6.416699999999692e-05}, {'diff': 6.479200000000102e-05}, {'diff': 6.387499999999796e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:35.949" endtime="20201030 18:31:35.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:35.957" level="INFO">${ACCURACY} = {'diff': [6.423600000000224e-05, 6.444499999999978e-05, 6.452699999999825e-05, 6.416699999999692e-05, 6.479200000000102e-05, 6.387499999999796e-05, 6.470800000000013e-05, 6.404100000000079e-05, 6.4403...</msg>
<status status="PASS" starttime="20201030 18:31:35.954" endtime="20201030 18:31:35.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.961" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 18:31:35.960" endtime="20201030 18:31:35.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:35.963" level="INFO">VALUE: [6.423600000000224e-05, 6.444499999999978e-05, 6.452699999999825e-05, 6.416699999999692e-05, 6.479200000000102e-05, 6.387499999999796e-05, 6.470800000000013e-05, 6.404100000000079e-05, 6.440300000000107e-05, 6.423599999999877e-05, 6.466700000000089e-05, 6.429200000000052e-05, 6.476299999999893e-05, 6.42219999999992e-05, 6.461099999999914e-05, 6.474999999999884e-05, 6.424999999999834e-05, 6.47769999999985e-05, 6.474999999999884e-05, 6.47639999999984e-05, 6.43890000000015e-05, 6.447199999999945e-05, 6.431900000000018e-05, 6.451400000000163e-05, 6.415300000000082e-05, 6.423599999999877e-05, 6.40280000000007e-05, 6.459799999999905e-05, 6.427800000000095e-05, 6.438899999999803e-05, 6.470800000000013e-05, 6.387500000000143e-05, 6.431900000000018e-05, 6.413900000000125e-05, 6.441700000000064e-05, 6.447199999999945e-05, 6.470800000000013e-05, 6.412500000000168e-05, 6.413900000000125e-05, 6.45280000000012e-05, 6.472299999999917e-05, 6.424999999999834e-05, 6.445899999999935e-05, 6.424999999999834e-05, 6.400000000000156e-05, 6.429200000000052e-05, 6.445799999999988e-05, 6.477800000000145e-05, 6.447199999999945e-05, 6.455599999999687e-05]</msg>
<status status="PASS" starttime="20201030 18:31:35.962" endtime="20201030 18:31:35.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.957" endtime="20201030 18:31:35.966"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:35.969" endtime="20201030 18:31:35.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.968" endtime="20201030 18:31:35.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.967" endtime="20201030 18:31:35.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.608" endtime="20201030 18:31:35.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.607" endtime="20201030 18:31:35.990"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:35.998" endtime="20201030 18:31:36.016"></status>
</kw>
<msg timestamp="20201030 18:31:36.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:35.997" endtime="20201030 18:31:36.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:36.018" endtime="20201030 18:31:36.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.020" endtime="20201030 18:31:36.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.994" endtime="20201030 18:31:36.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.992" endtime="20201030 18:31:36.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.029" endtime="20201030 18:31:36.314"></status>
</kw>
<msg timestamp="20201030 18:31:36.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021808167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021873875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:36.027" endtime="20201030 18:31:36.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021808167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021873875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:36.318" endtime="20201030 18:31:36.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.326" endtime="20201030 18:31:36.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.025" endtime="20201030 18:31:36.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.023" endtime="20201030 18:31:36.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:36.333" level="INFO">${RESULT} = [{'diff': 6.570800000000113e-05}, {'diff': 6.549999999999959e-05}, {'diff': 6.508399999999998e-05}, {'diff': 6.559700000000057e-05}, {'diff': 6.569499999999756e-05}, {'diff': 6.484800000000276e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:36.329" endtime="20201030 18:31:36.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:36.340" level="INFO">${ACCURACY} = {'diff': [6.570800000000113e-05, 6.549999999999959e-05, 6.508399999999998e-05, 6.559700000000057e-05, 6.569499999999756e-05, 6.484800000000276e-05, 6.576299999999993e-05, 6.537500000000293e-05, 6.5651...</msg>
<status status="PASS" starttime="20201030 18:31:36.334" endtime="20201030 18:31:36.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.345" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 18:31:36.344" endtime="20201030 18:31:36.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.347" level="INFO">VALUE: [6.570800000000113e-05, 6.549999999999959e-05, 6.508399999999998e-05, 6.559700000000057e-05, 6.569499999999756e-05, 6.484800000000276e-05, 6.576299999999993e-05, 6.537500000000293e-05, 6.565199999999938e-05, 6.498599999999952e-05, 6.563899999999928e-05, 6.542999999999827e-05, 6.5583000000001e-05, 6.554200000000177e-05, 6.559700000000057e-05, 6.574999999999984e-05, 6.581900000000168e-05, 6.515300000000182e-05, 6.498599999999952e-05, 6.577799999999898e-05, 6.487499999999896e-05, 6.524999999999934e-05, 6.527799999999848e-05, 6.541699999999817e-05, 6.497199999999995e-05, 6.533400000000023e-05, 6.555600000000134e-05, 6.573600000000027e-05, 6.533400000000023e-05, 6.568099999999799e-05, 6.551400000000263e-05, 6.515299999999835e-05, 6.530600000000109e-05, 6.487499999999896e-05, 6.568000000000199e-05, 6.555499999999839e-05, 6.566600000000242e-05, 6.497199999999995e-05, 6.50830000000005e-05, 6.552799999999873e-05, 6.5583000000001e-05, 6.572199999999723e-05, 6.579099999999907e-05, 6.540199999999913e-05, 6.499999999999909e-05, 6.537499999999946e-05, 6.504099999999832e-05, 6.54020000000026e-05, 6.484699999999982e-05, 6.501399999999866e-05]</msg>
<status status="PASS" starttime="20201030 18:31:36.346" endtime="20201030 18:31:36.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.341" endtime="20201030 18:31:36.348"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:36.352" endtime="20201030 18:31:36.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.350" endtime="20201030 18:31:36.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.349" endtime="20201030 18:31:36.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.991" endtime="20201030 18:31:36.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:35.990" endtime="20201030 18:31:36.373"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.381" endtime="20201030 18:31:36.399"></status>
</kw>
<msg timestamp="20201030 18:31:36.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:36.380" endtime="20201030 18:31:36.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:36.400" endtime="20201030 18:31:36.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.403" endtime="20201030 18:31:36.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.377" endtime="20201030 18:31:36.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.375" endtime="20201030 18:31:36.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.412" endtime="20201030 18:31:36.698"></status>
</kw>
<msg timestamp="20201030 18:31:36.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021710069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0217765, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:36.410" endtime="20201030 18:31:36.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021710069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0217765, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:36.702" endtime="20201030 18:31:36.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.710" endtime="20201030 18:31:36.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.408" endtime="20201030 18:31:36.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.406" endtime="20201030 18:31:36.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:36.716" level="INFO">${RESULT} = [{'diff': 6.643100000000221e-05}, {'diff': 6.6583000000002e-05}, {'diff': 6.638900000000003e-05}, {'diff': 6.602799999999923e-05}, {'diff': 6.630600000000209e-05}, {'diff': 6.661100000000114e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:31:36.713" endtime="20201030 18:31:36.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:36.720" level="INFO">${ACCURACY} = {'diff': [6.643100000000221e-05, 6.6583000000002e-05, 6.638900000000003e-05, 6.602799999999923e-05, 6.630600000000209e-05, 6.661100000000114e-05, 6.675000000000084e-05, 6.588800000000006e-05, 6.619399...</msg>
<status status="PASS" starttime="20201030 18:31:36.717" endtime="20201030 18:31:36.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.725" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 18:31:36.724" endtime="20201030 18:31:36.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.727" level="INFO">VALUE: [6.643100000000221e-05, 6.6583000000002e-05, 6.638900000000003e-05, 6.602799999999923e-05, 6.630600000000209e-05, 6.661100000000114e-05, 6.675000000000084e-05, 6.588800000000006e-05, 6.619399999999859e-05, 6.640200000000013e-05, 6.656899999999896e-05, 6.659700000000157e-05, 6.62639999999999e-05, 6.650000000000059e-05, 6.641700000000264e-05, 6.611100000000064e-05, 6.620899999999763e-05, 6.663800000000081e-05, 6.67640000000004e-05, 6.67220000000017e-05, 6.602699999999975e-05, 6.615199999999988e-05, 6.625000000000034e-05, 6.631899999999871e-05, 6.586100000000039e-05, 6.62220000000012e-05, 6.67640000000004e-05, 6.655599999999887e-05, 6.593100000000171e-05, 6.629199999999905e-05, 6.672300000000117e-05, 6.637500000000046e-05, 6.662500000000071e-05, 6.637500000000046e-05, 6.587499999999996e-05, 6.679199999999955e-05, 6.619500000000153e-05, 6.611100000000064e-05, 6.67220000000017e-05, 6.631999999999819e-05, 6.65700000000019e-05, 6.59029999999991e-05, 6.597200000000095e-05, 6.64029999999996e-05, 6.672199999999823e-05, 6.6277e-05, 6.600000000000009e-05, 6.586100000000039e-05, 6.679100000000007e-05, 6.656899999999896e-05]</msg>
<status status="PASS" starttime="20201030 18:31:36.726" endtime="20201030 18:31:36.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.721" endtime="20201030 18:31:36.729"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:36.732" endtime="20201030 18:31:36.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.731" endtime="20201030 18:31:36.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.730" endtime="20201030 18:31:36.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.373" endtime="20201030 18:31:36.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.373" endtime="20201030 18:31:36.753"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.761" endtime="20201030 18:31:36.780"></status>
</kw>
<msg timestamp="20201030 18:31:36.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:36.760" endtime="20201030 18:31:36.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:36.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:36.782" endtime="20201030 18:31:36.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.784" endtime="20201030 18:31:36.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.757" endtime="20201030 18:31:36.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.755" endtime="20201030 18:31:36.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:36.793" endtime="20201030 18:31:37.079"></status>
</kw>
<msg timestamp="20201030 18:31:37.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022649917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022717736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:36.791" endtime="20201030 18:31:37.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022649917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022717736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:37.084" endtime="20201030 18:31:37.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.093" endtime="20201030 18:31:37.095"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.789" endtime="20201030 18:31:37.095"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.787" endtime="20201030 18:31:37.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:37.100" level="INFO">${RESULT} = [{'diff': 6.781900000000021e-05}, {'diff': 6.686099999999792e-05}, {'diff': 6.718099999999949e-05}, {'diff': 6.755599999999987e-05}, {'diff': 6.737499999999799e-05}, {'diff': 6.768099999999999e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:37.096" endtime="20201030 18:31:37.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:37.104" level="INFO">${ACCURACY} = {'diff': [6.781900000000021e-05, 6.686099999999792e-05, 6.718099999999949e-05, 6.755599999999987e-05, 6.737499999999799e-05, 6.768099999999999e-05, 6.741700000000017e-05, 6.748699999999802e-05, 6.6972...</msg>
<status status="PASS" starttime="20201030 18:31:37.101" endtime="20201030 18:31:37.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.108" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 18:31:37.107" endtime="20201030 18:31:37.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.111" level="INFO">VALUE: [6.781900000000021e-05, 6.686099999999792e-05, 6.718099999999949e-05, 6.755599999999987e-05, 6.737499999999799e-05, 6.768099999999999e-05, 6.741700000000017e-05, 6.748699999999802e-05, 6.697200000000195e-05, 6.766600000000095e-05, 6.75969999999991e-05, 6.758299999999953e-05, 6.770799999999966e-05, 6.777800000000098e-05, 6.736099999999842e-05, 6.730500000000014e-05, 6.688900000000053e-05, 6.701400000000066e-05, 6.77359999999988e-05, 6.730599999999962e-05, 6.701400000000066e-05, 6.70419999999998e-05, 6.74160000000007e-05, 6.713899999999731e-05, 6.751399999999769e-05, 6.744399999999984e-05, 6.724999999999787e-05, 6.694499999999881e-05, 6.724999999999787e-05, 6.736099999999842e-05, 6.72090000000021e-05, 6.716699999999992e-05, 6.751400000000116e-05, 6.761199999999815e-05, 6.719399999999959e-05, 6.755500000000039e-05, 6.731999999999919e-05, 6.701399999999719e-05, 6.75969999999991e-05, 6.768099999999999e-05, 6.724999999999787e-05, 6.758299999999953e-05, 6.731999999999919e-05, 6.7583999999999e-05, 6.697199999999848e-05, 6.727800000000048e-05, 6.740200000000113e-05, 6.755500000000039e-05, 6.727800000000048e-05, 6.761100000000214e-05]</msg>
<status status="PASS" starttime="20201030 18:31:37.109" endtime="20201030 18:31:37.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.105" endtime="20201030 18:31:37.113"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:37.117" endtime="20201030 18:31:37.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.115" endtime="20201030 18:31:37.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.114" endtime="20201030 18:31:37.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.754" endtime="20201030 18:31:37.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:36.753" endtime="20201030 18:31:37.137"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.146" endtime="20201030 18:31:37.164"></status>
</kw>
<msg timestamp="20201030 18:31:37.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.144" endtime="20201030 18:31:37.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.166" endtime="20201030 18:31:37.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.168" endtime="20201030 18:31:37.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.142" endtime="20201030 18:31:37.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.140" endtime="20201030 18:31:37.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.177" endtime="20201030 18:31:37.463"></status>
</kw>
<msg timestamp="20201030 18:31:37.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022153667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022221958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:37.176" endtime="20201030 18:31:37.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022153667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022221958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:37.467" endtime="20201030 18:31:37.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.476" endtime="20201030 18:31:37.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.173" endtime="20201030 18:31:37.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.171" endtime="20201030 18:31:37.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:37.482" level="INFO">${RESULT} = [{'diff': 6.829100000000157e-05}, {'diff': 6.816600000000145e-05}, {'diff': 6.802799999999776e-05}, {'diff': 6.862499999999924e-05}, {'diff': 6.80969999999996e-05}, {'diff': 6.827800000000148e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:37.479" endtime="20201030 18:31:37.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:37.487" level="INFO">${ACCURACY} = {'diff': [6.829100000000157e-05, 6.816600000000145e-05, 6.802799999999776e-05, 6.862499999999924e-05, 6.80969999999996e-05, 6.827800000000148e-05, 6.851400000000216e-05, 6.870900000000013e-05, 6.87500...</msg>
<status status="PASS" starttime="20201030 18:31:37.483" endtime="20201030 18:31:37.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.491" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 18:31:37.490" endtime="20201030 18:31:37.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.494" level="INFO">VALUE: [6.829100000000157e-05, 6.816600000000145e-05, 6.802799999999776e-05, 6.862499999999924e-05, 6.80969999999996e-05, 6.827800000000148e-05, 6.851400000000216e-05, 6.870900000000013e-05, 6.875000000000284e-05, 6.851399999999869e-05, 6.84030000000016e-05, 6.788900000000153e-05, 6.802800000000123e-05, 6.840299999999813e-05, 6.861099999999967e-05, 6.848599999999955e-05, 6.849999999999912e-05, 6.85970000000001e-05, 6.786100000000239e-05, 6.875000000000284e-05, 6.801400000000166e-05, 6.870800000000066e-05, 6.851400000000216e-05, 6.811100000000264e-05, 6.822199999999973e-05, 6.799999999999862e-05, 6.866600000000195e-05, 6.823600000000277e-05, 6.851399999999869e-05, 6.813900000000178e-05, 6.868100000000099e-05, 6.813900000000178e-05, 6.847299999999945e-05, 6.861200000000262e-05, 6.82359999999993e-05, 6.852699999999878e-05, 6.870800000000066e-05, 6.831900000000071e-05, 6.802800000000123e-05, 6.813900000000178e-05, 6.863899999999881e-05, 6.877799999999851e-05, 6.868100000000099e-05, 6.830600000000062e-05, 6.829100000000157e-05, 6.832000000000019e-05, 6.82909999999981e-05, 6.855500000000139e-05, 6.869399999999762e-05, 6.845800000000041e-05]</msg>
<status status="PASS" starttime="20201030 18:31:37.493" endtime="20201030 18:31:37.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.488" endtime="20201030 18:31:37.495"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:37.499" endtime="20201030 18:31:37.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.497" endtime="20201030 18:31:37.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.496" endtime="20201030 18:31:37.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.138" endtime="20201030 18:31:37.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.137" endtime="20201030 18:31:37.519"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.528" endtime="20201030 18:31:37.547"></status>
</kw>
<msg timestamp="20201030 18:31:37.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.527" endtime="20201030 18:31:37.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.549" endtime="20201030 18:31:37.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.551" endtime="20201030 18:31:37.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.524" endtime="20201030 18:31:37.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.522" endtime="20201030 18:31:37.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.560" endtime="20201030 18:31:37.846"></status>
</kw>
<msg timestamp="20201030 18:31:37.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02170125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021770819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:37.558" endtime="20201030 18:31:37.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02170125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021770819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:37.850" endtime="20201030 18:31:37.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.859" endtime="20201030 18:31:37.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.556" endtime="20201030 18:31:37.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.554" endtime="20201030 18:31:37.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:37.865" level="INFO">${RESULT} = [{'diff': 6.956900000000196e-05}, {'diff': 6.938899999999956e-05}, {'diff': 6.905499999999842e-05}, {'diff': 6.956900000000196e-05}, {'diff': 6.915299999999888e-05}, {'diff': 6.976399999999994e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:37.862" endtime="20201030 18:31:37.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:37.869" level="INFO">${ACCURACY} = {'diff': [6.956900000000196e-05, 6.938899999999956e-05, 6.905499999999842e-05, 6.956900000000196e-05, 6.915299999999888e-05, 6.976399999999994e-05, 6.972200000000123e-05, 6.92360000000003e-05, 6.93199...</msg>
<status status="PASS" starttime="20201030 18:31:37.866" endtime="20201030 18:31:37.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.874" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 18:31:37.873" endtime="20201030 18:31:37.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.876" level="INFO">VALUE: [6.956900000000196e-05, 6.938899999999956e-05, 6.905499999999842e-05, 6.956900000000196e-05, 6.915299999999888e-05, 6.976399999999994e-05, 6.972200000000123e-05, 6.92360000000003e-05, 6.931999999999772e-05, 6.902800000000223e-05, 6.970899999999766e-05, 6.911199999999965e-05, 6.944399999999837e-05, 6.922200000000073e-05, 6.905500000000189e-05, 6.89299999999983e-05, 6.90840000000005e-05, 6.972200000000123e-05, 6.919399999999812e-05, 6.968099999999852e-05, 6.938899999999956e-05, 6.922299999999673e-05, 6.924999999999987e-05, 6.9277000000003e-05, 6.905499999999842e-05, 6.898600000000005e-05, 6.944400000000184e-05, 6.898600000000005e-05, 6.919399999999812e-05, 6.927799999999901e-05, 6.938900000000303e-05, 6.979200000000255e-05, 6.968099999999852e-05, 6.952799999999926e-05, 6.884700000000035e-05, 6.909800000000008e-05, 6.926399999999944e-05, 6.965199999999991e-05, 6.959699999999763e-05, 6.936100000000042e-05, 6.975000000000037e-05, 6.947199999999751e-05, 6.94169999999987e-05, 6.94169999999987e-05, 6.912499999999974e-05, 6.901400000000266e-05, 6.933299999999781e-05, 6.895900000000038e-05, 6.95970000000011e-05, 6.936100000000042e-05]</msg>
<status status="PASS" starttime="20201030 18:31:37.875" endtime="20201030 18:31:37.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.870" endtime="20201030 18:31:37.877"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:37.881" endtime="20201030 18:31:37.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.880" endtime="20201030 18:31:37.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.878" endtime="20201030 18:31:37.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.520" endtime="20201030 18:31:37.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.520" endtime="20201030 18:31:37.902"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.910" endtime="20201030 18:31:37.930"></status>
</kw>
<msg timestamp="20201030 18:31:37.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.909" endtime="20201030 18:31:37.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:37.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:37.931" endtime="20201030 18:31:37.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.934" endtime="20201030 18:31:37.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.906" endtime="20201030 18:31:37.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.904" endtime="20201030 18:31:37.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:37.943" endtime="20201030 18:31:38.229"></status>
</kw>
<msg timestamp="20201030 18:31:38.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022656458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022726319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:37.941" endtime="20201030 18:31:38.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022656458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022726319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:38.233" endtime="20201030 18:31:38.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.241" endtime="20201030 18:31:38.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.939" endtime="20201030 18:31:38.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.937" endtime="20201030 18:31:38.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:38.248" level="INFO">${RESULT} = [{'diff': 6.986099999999745e-05}, {'diff': 7.033299999999881e-05}, {'diff': 7.001400000000019e-05}, {'diff': 7.012499999999727e-05}, {'diff': 7.049999999999765e-05}, {'diff': 6.987500000000049e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:38.244" endtime="20201030 18:31:38.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:38.252" level="INFO">${ACCURACY} = {'diff': [6.986099999999745e-05, 7.033299999999881e-05, 7.001400000000019e-05, 7.012499999999727e-05, 7.049999999999765e-05, 6.987500000000049e-05, 7.004199999999933e-05, 7.059699999999863e-05, 7.0820...</msg>
<status status="PASS" starttime="20201030 18:31:38.248" endtime="20201030 18:31:38.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.256" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 18:31:38.255" endtime="20201030 18:31:38.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.258" level="INFO">VALUE: [6.986099999999745e-05, 7.033299999999881e-05, 7.001400000000019e-05, 7.012499999999727e-05, 7.049999999999765e-05, 6.987500000000049e-05, 7.004199999999933e-05, 7.059699999999863e-05, 7.082000000000269e-05, 7.011100000000117e-05, 7.013800000000084e-05, 7.02910000000001e-05, 7.04299999999998e-05, 7.029199999999958e-05, 7.052800000000026e-05, 7.041600000000023e-05, 7.027800000000001e-05, 6.997199999999801e-05, 7.033300000000228e-05, 6.984700000000135e-05, 6.991700000000267e-05, 7.080500000000017e-05, 7.018099999999902e-05, 6.99169999999992e-05, 6.981900000000221e-05, 7.076400000000094e-05, 7.051400000000069e-05, 7.008299999999856e-05, 7.018099999999902e-05, 6.986100000000092e-05, 6.995899999999791e-05, 7.016699999999945e-05, 6.990200000000016e-05, 7.052800000000026e-05, 7.077699999999756e-05, 7.033299999999881e-05, 6.997200000000148e-05, 6.990199999999669e-05, 7.038900000000056e-05, 7.080500000000017e-05, 7.070799999999919e-05, 7.020799999999869e-05, 7.007000000000194e-05, 6.990299999999963e-05, 7.068099999999952e-05, 6.987500000000049e-05, 7.015299999999988e-05, 7.06109999999982e-05, 7.033300000000228e-05, 7.059699999999863e-05]</msg>
<status status="PASS" starttime="20201030 18:31:38.257" endtime="20201030 18:31:38.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.252" endtime="20201030 18:31:38.261"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:38.264" endtime="20201030 18:31:38.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.263" endtime="20201030 18:31:38.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.261" endtime="20201030 18:31:38.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.903" endtime="20201030 18:31:38.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:37.902" endtime="20201030 18:31:38.285"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.293" endtime="20201030 18:31:38.312"></status>
</kw>
<msg timestamp="20201030 18:31:38.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.292" endtime="20201030 18:31:38.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.313" endtime="20201030 18:31:38.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.316" endtime="20201030 18:31:38.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.289" endtime="20201030 18:31:38.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.287" endtime="20201030 18:31:38.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.325" endtime="20201030 18:31:38.617"></status>
</kw>
<msg timestamp="20201030 18:31:38.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021691556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021763236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:38.323" endtime="20201030 18:31:38.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021691556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021763236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:38.621" endtime="20201030 18:31:38.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.630" endtime="20201030 18:31:38.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.321" endtime="20201030 18:31:38.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.319" endtime="20201030 18:31:38.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:38.636" level="INFO">${RESULT} = [{'diff': 7.167999999999758e-05}, {'diff': 7.083300000000278e-05}, {'diff': 7.101400000000119e-05}, {'diff': 7.151399999999822e-05}, {'diff': 7.147200000000298e-05}, {'diff': 7.163900000000181e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:38.633" endtime="20201030 18:31:38.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:38.641" level="INFO">${ACCURACY} = {'diff': [7.167999999999758e-05, 7.083300000000278e-05, 7.101400000000119e-05, 7.151399999999822e-05, 7.147200000000298e-05, 7.163900000000181e-05, 7.168100000000052e-05, 7.116700000000045e-05, 7.1763...</msg>
<status status="PASS" starttime="20201030 18:31:38.637" endtime="20201030 18:31:38.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.646" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 18:31:38.645" endtime="20201030 18:31:38.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.648" level="INFO">VALUE: [7.167999999999758e-05, 7.083300000000278e-05, 7.101400000000119e-05, 7.151399999999822e-05, 7.147200000000298e-05, 7.163900000000181e-05, 7.168100000000052e-05, 7.116700000000045e-05, 7.176399999999847e-05, 7.177699999999856e-05, 7.11109999999987e-05, 7.138899999999809e-05, 7.173599999999933e-05, 7.129200000000058e-05, 7.136099999999895e-05, 7.16109999999992e-05, 7.162499999999877e-05, 7.111100000000217e-05, 7.123599999999883e-05, 7.115199999999794e-05, 7.155500000000092e-05, 7.14300000000008e-05, 7.1069e-05, 7.169400000000062e-05, 7.158300000000006e-05, 7.118000000000055e-05, 7.115299999999741e-05, 7.129199999999711e-05, 7.115300000000088e-05, 7.140299999999766e-05, 7.098600000000205e-05, 7.1069e-05, 7.10979999999986e-05, 7.081900000000321e-05, 7.12499999999984e-05, 7.105500000000042e-05, 7.138899999999809e-05, 7.14170000000007e-05, 7.169400000000062e-05, 7.131999999999972e-05, 7.143100000000027e-05, 7.098600000000205e-05, 7.133399999999929e-05, 7.115200000000141e-05, 7.17499999999989e-05, 7.122199999999926e-05, 7.140199999999819e-05, 7.147199999999951e-05, 7.097199999999901e-05, 7.116700000000045e-05]</msg>
<status status="PASS" starttime="20201030 18:31:38.647" endtime="20201030 18:31:38.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.642" endtime="20201030 18:31:38.649"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:38.653" endtime="20201030 18:31:38.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.652" endtime="20201030 18:31:38.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.650" endtime="20201030 18:31:38.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.286" endtime="20201030 18:31:38.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.285" endtime="20201030 18:31:38.674"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.685" endtime="20201030 18:31:38.706"></status>
</kw>
<msg timestamp="20201030 18:31:38.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.683" endtime="20201030 18:31:38.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:38.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:38.708" endtime="20201030 18:31:38.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.714" endtime="20201030 18:31:38.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.679" endtime="20201030 18:31:38.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.677" endtime="20201030 18:31:38.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:38.740" endtime="20201030 18:31:39.037"></status>
</kw>
<msg timestamp="20201030 18:31:39.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025410306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025482764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:38.735" endtime="20201030 18:31:39.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025410306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025482764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:39.041" endtime="20201030 18:31:39.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.049" endtime="20201030 18:31:39.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.728" endtime="20201030 18:31:39.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.724" endtime="20201030 18:31:39.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:39.056" level="INFO">${RESULT} = [{'diff': 7.245800000000094e-05}, {'diff': 7.186100000000292e-05}, {'diff': 7.269400000000162e-05}, {'diff': 7.248600000000008e-05}, {'diff': 7.259700000000063e-05}, {'diff': 7.20560000000009e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:39.053" endtime="20201030 18:31:39.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:39.060" level="INFO">${ACCURACY} = {'diff': [7.245800000000094e-05, 7.186100000000292e-05, 7.269400000000162e-05, 7.248600000000008e-05, 7.259700000000063e-05, 7.20560000000009e-05, 7.234799999999986e-05, 7.211200000000265e-05, 7.26529...</msg>
<status status="PASS" starttime="20201030 18:31:39.057" endtime="20201030 18:31:39.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.065" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 18:31:39.064" endtime="20201030 18:31:39.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.067" level="INFO">VALUE: [7.245800000000094e-05, 7.186100000000292e-05, 7.269400000000162e-05, 7.248600000000008e-05, 7.259700000000063e-05, 7.20560000000009e-05, 7.234799999999986e-05, 7.211200000000265e-05, 7.265299999999891e-05, 7.273600000000033e-05, 7.223599999999983e-05, 7.27499999999999e-05, 7.280599999999818e-05, 7.212499999999927e-05, 7.219399999999765e-05, 7.265299999999891e-05, 7.204199999999786e-05, 7.269500000000109e-05, 7.186099999999945e-05, 7.202800000000176e-05, 7.273600000000033e-05, 7.213799999999937e-05, 7.241600000000223e-05, 7.230600000000115e-05, 7.237499999999952e-05, 7.218100000000102e-05, 7.199999999999915e-05, 7.243100000000127e-05, 7.209799999999961e-05, 7.220800000000069e-05, 7.204099999999838e-05, 7.261199999999968e-05, 7.191600000000173e-05, 7.190300000000163e-05, 7.258400000000054e-05, 7.258300000000106e-05, 7.269400000000162e-05, 7.26110000000002e-05, 7.263899999999934e-05, 7.234700000000038e-05, 7.229200000000158e-05, 7.238899999999909e-05, 7.259700000000063e-05, 7.254099999999888e-05, 7.247200000000051e-05, 7.244400000000137e-05, 7.209700000000013e-05, 7.272200000000076e-05, 7.265299999999891e-05, 7.188899999999859e-05]</msg>
<status status="PASS" starttime="20201030 18:31:39.066" endtime="20201030 18:31:39.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.061" endtime="20201030 18:31:39.069"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:39.072" endtime="20201030 18:31:39.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.071" endtime="20201030 18:31:39.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.070" endtime="20201030 18:31:39.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.675" endtime="20201030 18:31:39.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:38.674" endtime="20201030 18:31:39.093"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.102" endtime="20201030 18:31:39.121"></status>
</kw>
<msg timestamp="20201030 18:31:39.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.100" endtime="20201030 18:31:39.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.123" endtime="20201030 18:31:39.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.125" endtime="20201030 18:31:39.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.098" endtime="20201030 18:31:39.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.095" endtime="20201030 18:31:39.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.134" endtime="20201030 18:31:39.421"></status>
</kw>
<msg timestamp="20201030 18:31:39.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022807361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022880639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:39.133" endtime="20201030 18:31:39.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022807361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022880639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:39.425" endtime="20201030 18:31:39.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.433" endtime="20201030 18:31:39.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.130" endtime="20201030 18:31:39.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.129" endtime="20201030 18:31:39.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:39.440" level="INFO">${RESULT} = [{'diff': 7.327799999999954e-05}, {'diff': 7.37500000000009e-05}, {'diff': 7.372200000000176e-05}, {'diff': 7.369499999999862e-05}, {'diff': 7.298700000000005e-05}, {'diff': 7.304200000000233e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:39.437" endtime="20201030 18:31:39.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:39.444" level="INFO">${ACCURACY} = {'diff': [7.327799999999954e-05, 7.37500000000009e-05, 7.372200000000176e-05, 7.369499999999862e-05, 7.298700000000005e-05, 7.304200000000233e-05, 7.282000000000122e-05, 7.319499999999812e-05, 7.31389...</msg>
<status status="PASS" starttime="20201030 18:31:39.441" endtime="20201030 18:31:39.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.449" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 18:31:39.448" endtime="20201030 18:31:39.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.451" level="INFO">VALUE: [7.327799999999954e-05, 7.37500000000009e-05, 7.372200000000176e-05, 7.369499999999862e-05, 7.298700000000005e-05, 7.304200000000233e-05, 7.282000000000122e-05, 7.319499999999812e-05, 7.313899999999984e-05, 7.369399999999915e-05, 7.312500000000027e-05, 7.361099999999773e-05, 7.35829999999986e-05, 7.341699999999923e-05, 7.323600000000083e-05, 7.3763000000001e-05, 7.340299999999966e-05, 7.337500000000052e-05, 7.292999999999883e-05, 7.281900000000174e-05, 7.318100000000202e-05, 7.372200000000176e-05, 7.313899999999984e-05, 7.369400000000262e-05, 7.372199999999829e-05, 7.372199999999829e-05, 7.298600000000058e-05, 7.316600000000298e-05, 7.291699999999873e-05, 7.349999999999718e-05, 7.316599999999951e-05, 7.354099999999988e-05, 7.287500000000002e-05, 7.287500000000002e-05, 7.337500000000052e-05, 7.352799999999979e-05, 7.304200000000233e-05, 7.315199999999994e-05, 7.331999999999825e-05, 7.330500000000267e-05, 7.337500000000052e-05, 7.300000000000015e-05, 7.319399999999865e-05, 7.348600000000108e-05, 7.36110000000012e-05, 7.354199999999936e-05, 7.347199999999804e-05, 7.31110000000007e-05, 7.319499999999812e-05, 7.3069000000002e-05]</msg>
<status status="PASS" starttime="20201030 18:31:39.450" endtime="20201030 18:31:39.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.445" endtime="20201030 18:31:39.453"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:39.457" endtime="20201030 18:31:39.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.456" endtime="20201030 18:31:39.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.454" endtime="20201030 18:31:39.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.094" endtime="20201030 18:31:39.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.093" endtime="20201030 18:31:39.478"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.486" endtime="20201030 18:31:39.505"></status>
</kw>
<msg timestamp="20201030 18:31:39.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.485" endtime="20201030 18:31:39.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.507" endtime="20201030 18:31:39.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.509" endtime="20201030 18:31:39.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.482" endtime="20201030 18:31:39.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.480" endtime="20201030 18:31:39.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.518" endtime="20201030 18:31:39.804"></status>
</kw>
<msg timestamp="20201030 18:31:39.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021972931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022047153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:39.517" endtime="20201030 18:31:39.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021972931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022047153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:39.808" endtime="20201030 18:31:39.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.816" endtime="20201030 18:31:39.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.514" endtime="20201030 18:31:39.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.512" endtime="20201030 18:31:39.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:39.823" level="INFO">${RESULT} = [{'diff': 7.422199999999879e-05}, {'diff': 7.447300000000198e-05}, {'diff': 7.470899999999919e-05}, {'diff': 7.469499999999962e-05}, {'diff': 7.431899999999977e-05}, {'diff': 7.473599999999886e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:39.820" endtime="20201030 18:31:39.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:39.830" level="INFO">${ACCURACY} = {'diff': [7.422199999999879e-05, 7.447300000000198e-05, 7.470899999999919e-05, 7.469499999999962e-05, 7.431899999999977e-05, 7.473599999999886e-05, 7.468000000000058e-05, 7.411099999999823e-05, 7.4639...</msg>
<status status="PASS" starttime="20201030 18:31:39.824" endtime="20201030 18:31:39.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.835" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 18:31:39.834" endtime="20201030 18:31:39.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.838" level="INFO">VALUE: [7.422199999999879e-05, 7.447300000000198e-05, 7.470899999999919e-05, 7.469499999999962e-05, 7.431899999999977e-05, 7.473599999999886e-05, 7.468000000000058e-05, 7.411099999999823e-05, 7.463900000000134e-05, 7.477800000000104e-05, 7.401400000000072e-05, 7.461099999999873e-05, 7.469500000000309e-05, 7.405599999999943e-05, 7.431999999999925e-05, 7.395899999999844e-05, 7.397199999999854e-05, 7.409699999999866e-05, 7.443000000000033e-05, 7.400000000000115e-05, 7.447200000000251e-05, 7.419499999999912e-05, 7.397200000000201e-05, 7.455599999999993e-05, 7.426400000000097e-05, 7.459800000000211e-05, 7.441600000000076e-05, 7.456900000000002e-05, 7.472200000000276e-05, 7.45829999999996e-05, 7.456900000000002e-05, 7.424999999999793e-05, 7.436099999999848e-05, 7.472199999999929e-05, 7.418099999999955e-05, 7.458399999999907e-05, 7.461200000000168e-05, 7.407000000000247e-05, 7.411200000000118e-05, 7.42630000000015e-05, 7.473599999999886e-05, 7.422199999999879e-05, 7.465299999999744e-05, 7.477800000000104e-05, 7.469400000000015e-05, 7.401400000000072e-05, 7.461099999999873e-05, 7.454200000000036e-05, 7.447299999999851e-05, 7.465199999999797e-05]</msg>
<status status="PASS" starttime="20201030 18:31:39.836" endtime="20201030 18:31:39.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.831" endtime="20201030 18:31:39.843"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:39.846" endtime="20201030 18:31:39.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.845" endtime="20201030 18:31:39.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.844" endtime="20201030 18:31:39.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.479" endtime="20201030 18:31:39.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.478" endtime="20201030 18:31:39.867"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.876" endtime="20201030 18:31:39.895"></status>
</kw>
<msg timestamp="20201030 18:31:39.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.875" endtime="20201030 18:31:39.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:39.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:39.897" endtime="20201030 18:31:39.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.899" endtime="20201030 18:31:39.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.872" endtime="20201030 18:31:39.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.870" endtime="20201030 18:31:39.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:39.908" endtime="20201030 18:31:40.194"></status>
</kw>
<msg timestamp="20201030 18:31:40.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022843458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022918708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:39.907" endtime="20201030 18:31:40.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022843458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022918708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:40.198" endtime="20201030 18:31:40.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.206" endtime="20201030 18:31:40.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.904" endtime="20201030 18:31:40.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.902" endtime="20201030 18:31:40.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:40.213" level="INFO">${RESULT} = [{'diff': 7.524999999999893e-05}, {'diff': 7.50830000000001e-05}, {'diff': 7.573599999999986e-05}, {'diff': 7.537500000000252e-05}, {'diff': 7.494499999999987e-05}, {'diff': 7.522199999999979e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:40.209" endtime="20201030 18:31:40.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:40.217" level="INFO">${ACCURACY} = {'diff': [7.524999999999893e-05, 7.50830000000001e-05, 7.573599999999986e-05, 7.537500000000252e-05, 7.494499999999987e-05, 7.522199999999979e-05, 7.536099999999948e-05, 7.550000000000265e-05, 7.53609...</msg>
<status status="PASS" starttime="20201030 18:31:40.214" endtime="20201030 18:31:40.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.221" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 18:31:40.220" endtime="20201030 18:31:40.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.224" level="INFO">VALUE: [7.524999999999893e-05, 7.50830000000001e-05, 7.573599999999986e-05, 7.537500000000252e-05, 7.494499999999987e-05, 7.522199999999979e-05, 7.536099999999948e-05, 7.550000000000265e-05, 7.536099999999948e-05, 7.486100000000245e-05, 7.487499999999855e-05, 7.552700000000231e-05, 7.555500000000145e-05, 7.531900000000077e-05, 7.527800000000154e-05, 7.552799999999832e-05, 7.488899999999812e-05, 7.532000000000025e-05, 7.569500000000062e-05, 7.483399999999932e-05, 7.540200000000219e-05, 7.573599999999986e-05, 7.550000000000265e-05, 7.511099999999923e-05, 7.523599999999936e-05, 7.491700000000073e-05, 7.551399999999875e-05, 7.569500000000062e-05, 7.515299999999794e-05, 7.52639999999985e-05, 7.519400000000065e-05, 7.519400000000065e-05, 7.56379999999994e-05, 7.484700000000288e-05, 7.547200000000004e-05, 7.522200000000326e-05, 7.549999999999918e-05, 7.536100000000295e-05, 7.508399999999957e-05, 7.519500000000012e-05, 7.515300000000141e-05, 7.536199999999896e-05, 7.486200000000193e-05, 7.549999999999918e-05, 7.531900000000077e-05, 7.580599999999771e-05, 7.49029999999977e-05, 7.56249999999993e-05, 7.537500000000252e-05, 7.515299999999794e-05]</msg>
<status status="PASS" starttime="20201030 18:31:40.222" endtime="20201030 18:31:40.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.218" endtime="20201030 18:31:40.225"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:40.228" endtime="20201030 18:31:40.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.227" endtime="20201030 18:31:40.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.226" endtime="20201030 18:31:40.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.868" endtime="20201030 18:31:40.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:39.868" endtime="20201030 18:31:40.252"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.270" endtime="20201030 18:31:40.294"></status>
</kw>
<msg timestamp="20201030 18:31:40.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:40.267" endtime="20201030 18:31:40.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:40.297" endtime="20201030 18:31:40.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.302" endtime="20201030 18:31:40.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.261" endtime="20201030 18:31:40.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.257" endtime="20201030 18:31:40.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.320" endtime="20201030 18:31:40.608"></status>
</kw>
<msg timestamp="20201030 18:31:40.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037455778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037532375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:40.317" endtime="20201030 18:31:40.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037455778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037532375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:40.612" endtime="20201030 18:31:40.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.620" endtime="20201030 18:31:40.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.312" endtime="20201030 18:31:40.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.308" endtime="20201030 18:31:40.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:40.627" level="INFO">${RESULT} = [{'diff': 7.65969999999977e-05}, {'diff': 7.615300000000241e-05}, {'diff': 7.61389999999959e-05}, {'diff': 7.669500000000162e-05}, {'diff': 7.666700000000248e-05}, {'diff': 7.669500000000162e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:31:40.623" endtime="20201030 18:31:40.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:40.631" level="INFO">${ACCURACY} = {'diff': [7.65969999999977e-05, 7.615300000000241e-05, 7.61389999999959e-05, 7.669500000000162e-05, 7.666700000000248e-05, 7.669500000000162e-05, 7.629099999999917e-05, 7.669400000000215e-05, 7.658300...</msg>
<status status="PASS" starttime="20201030 18:31:40.628" endtime="20201030 18:31:40.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.635" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 18:31:40.634" endtime="20201030 18:31:40.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.637" level="INFO">VALUE: [7.65969999999977e-05, 7.615300000000241e-05, 7.61389999999959e-05, 7.669500000000162e-05, 7.666700000000248e-05, 7.669500000000162e-05, 7.629099999999917e-05, 7.669400000000215e-05, 7.658300000000506e-05, 7.679199999999914e-05, 7.59440000000014e-05, 7.637500000000352e-05, 7.652699999999985e-05, 7.668100000000205e-05, 7.669500000000162e-05, 7.627799999999907e-05, 7.622200000000079e-05, 7.675000000000043e-05, 7.606899999999805e-05, 7.665200000000344e-05, 7.595800000000097e-05, 7.640300000000266e-05, 7.656999999999803e-05, 7.668099999999511e-05, 7.629199999999864e-05, 7.599999999999968e-05, 7.661099999999726e-05, 7.652699999999985e-05, 7.667999999999564e-05, 7.670800000000172e-05, 7.670800000000172e-05, 7.661099999999726e-05, 7.651399999999975e-05, 7.618100000000155e-05, 7.666699999999554e-05, 7.584699999999694e-05, 7.622200000000079e-05, 7.659799999999717e-05, 7.62769999999996e-05, 7.591600000000226e-05, 7.64440000000019e-05, 7.612500000000327e-05, 7.59440000000014e-05, 7.654199999999889e-05, 7.576400000000594e-05, 7.598600000000011e-05, 7.652799999999932e-05, 7.644500000000137e-05, 7.675000000000043e-05, 7.652799999999932e-05]</msg>
<status status="PASS" starttime="20201030 18:31:40.636" endtime="20201030 18:31:40.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.631" endtime="20201030 18:31:40.640"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:40.643" endtime="20201030 18:31:40.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.642" endtime="20201030 18:31:40.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.641" endtime="20201030 18:31:40.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.254" endtime="20201030 18:31:40.664"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.253" endtime="20201030 18:31:40.664"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.672" endtime="20201030 18:31:40.692"></status>
</kw>
<msg timestamp="20201030 18:31:40.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:40.671" endtime="20201030 18:31:40.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:40.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:40.694" endtime="20201030 18:31:40.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.696" endtime="20201030 18:31:40.698"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.668" endtime="20201030 18:31:40.698"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.666" endtime="20201030 18:31:40.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:40.705" endtime="20201030 18:31:40.991"></status>
</kw>
<msg timestamp="20201030 18:31:40.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02177825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021855556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:40.704" endtime="20201030 18:31:40.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02177825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021855556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:40.995" endtime="20201030 18:31:41.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.003" endtime="20201030 18:31:41.005"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.701" endtime="20201030 18:31:41.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.699" endtime="20201030 18:31:41.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:41.010" level="INFO">${RESULT} = [{'diff': 7.730600000000268e-05}, {'diff': 7.745800000000247e-05}, {'diff': 7.687500000000055e-05}, {'diff': 7.702700000000035e-05}, {'diff': 7.769399999999968e-05}, {'diff': 7.686100000000098e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:41.007" endtime="20201030 18:31:41.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:41.015" level="INFO">${ACCURACY} = {'diff': [7.730600000000268e-05, 7.745800000000247e-05, 7.687500000000055e-05, 7.702700000000035e-05, 7.769399999999968e-05, 7.686100000000098e-05, 7.701400000000025e-05, 7.695800000000197e-05, 7.6986...</msg>
<status status="PASS" starttime="20201030 18:31:41.011" endtime="20201030 18:31:41.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.019" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 18:31:41.018" endtime="20201030 18:31:41.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.022" level="INFO">VALUE: [7.730600000000268e-05, 7.745800000000247e-05, 7.687500000000055e-05, 7.702700000000035e-05, 7.769399999999968e-05, 7.686100000000098e-05, 7.701400000000025e-05, 7.695800000000197e-05, 7.698600000000111e-05, 7.763900000000087e-05, 7.756999999999903e-05, 7.730599999999921e-05, 7.684700000000141e-05, 7.72640000000005e-05, 7.715200000000047e-05, 7.68189999999988e-05, 7.773599999999839e-05, 7.775000000000143e-05, 7.684699999999794e-05, 7.677799999999957e-05, 7.683399999999785e-05, 7.727800000000007e-05, 7.75839999999986e-05, 7.747199999999857e-05, 7.73189999999993e-05, 7.755499999999999e-05, 7.755499999999999e-05, 7.719399999999918e-05, 7.759700000000216e-05, 7.769499999999915e-05, 7.7764000000001e-05, 7.776399999999753e-05, 7.773599999999839e-05, 7.693099999999883e-05, 7.680499999999923e-05, 7.683300000000184e-05, 7.724999999999746e-05, 7.691699999999926e-05, 7.761099999999826e-05, 7.768100000000305e-05, 7.715299999999994e-05, 7.763900000000087e-05, 7.702799999999982e-05, 7.702799999999982e-05, 7.729199999999964e-05, 7.722199999999832e-05, 7.692999999999936e-05, 7.742999999999986e-05, 7.769399999999968e-05, 7.752800000000032e-05]</msg>
<status status="PASS" starttime="20201030 18:31:41.021" endtime="20201030 18:31:41.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.016" endtime="20201030 18:31:41.024"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:41.027" endtime="20201030 18:31:41.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.026" endtime="20201030 18:31:41.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.024" endtime="20201030 18:31:41.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.665" endtime="20201030 18:31:41.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:40.664" endtime="20201030 18:31:41.051"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.069" endtime="20201030 18:31:41.092"></status>
</kw>
<msg timestamp="20201030 18:31:41.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:41.066" endtime="20201030 18:31:41.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:41.095" endtime="20201030 18:31:41.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.100" endtime="20201030 18:31:41.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.060" endtime="20201030 18:31:41.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.056" endtime="20201030 18:31:41.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.119" endtime="20201030 18:31:41.411"></status>
</kw>
<msg timestamp="20201030 18:31:41.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036167792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036245653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:41.116" endtime="20201030 18:31:41.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036167792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036245653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:41.415" endtime="20201030 18:31:41.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.424" endtime="20201030 18:31:41.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.110" endtime="20201030 18:31:41.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.107" endtime="20201030 18:31:41.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:41.430" level="INFO">${RESULT} = [{'diff': 7.786100000000545e-05}, {'diff': 7.793099999999636e-05}, {'diff': 7.863900000000534e-05}, {'diff': 7.825000000000193e-05}, {'diff': 7.880500000000124e-05}, {'diff': 7.819500000000312e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:41.427" endtime="20201030 18:31:41.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:41.434" level="INFO">${ACCURACY} = {'diff': [7.786100000000545e-05, 7.793099999999636e-05, 7.863900000000534e-05, 7.825000000000193e-05, 7.880500000000124e-05, 7.819500000000312e-05, 7.836099999999901e-05, 7.861099999999926e-05, 7.7902...</msg>
<status status="PASS" starttime="20201030 18:31:41.431" endtime="20201030 18:31:41.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.439" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 18:31:41.438" endtime="20201030 18:31:41.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.441" level="INFO">VALUE: [7.786100000000545e-05, 7.793099999999636e-05, 7.863900000000534e-05, 7.825000000000193e-05, 7.880500000000124e-05, 7.819500000000312e-05, 7.836099999999901e-05, 7.861099999999926e-05, 7.790299999999722e-05, 7.804200000000039e-05, 7.822200000000279e-05, 7.862499999999883e-05, 7.85969999999997e-05, 7.861099999999926e-05, 7.832000000000672e-05, 7.791700000000373e-05, 7.80969999999992e-05, 7.830500000000074e-05, 7.797200000000254e-05, 7.801399999999431e-05, 7.83190000000003e-05, 7.827800000000107e-05, 7.787500000000502e-05, 7.836099999999901e-05, 7.800000000000168e-05, 7.877800000000157e-05, 7.873700000000233e-05, 7.83190000000003e-05, 7.817999999999714e-05, 7.816700000000398e-05, 7.840299999999772e-05, 7.811099999999876e-05, 7.802799999999388e-05, 7.801399999999431e-05, 7.822300000000226e-05, 7.809799999999867e-05, 7.8151999999998e-05, 7.813799999999843e-05, 7.873599999999592e-05, 7.808299999999962e-05, 7.800000000000168e-05, 7.836099999999901e-05, 7.827799999999413e-05, 7.874999999999549e-05, 7.844500000000337e-05, 7.866699999999754e-05, 7.816700000000398e-05, 7.830600000000021e-05, 7.86519999999985e-05, 7.870800000000372e-05]</msg>
<status status="PASS" starttime="20201030 18:31:41.440" endtime="20201030 18:31:41.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.435" endtime="20201030 18:31:41.443"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:41.446" endtime="20201030 18:31:41.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.445" endtime="20201030 18:31:41.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.444" endtime="20201030 18:31:41.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.053" endtime="20201030 18:31:41.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.051" endtime="20201030 18:31:41.467"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.476" endtime="20201030 18:31:41.496"></status>
</kw>
<msg timestamp="20201030 18:31:41.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:41.474" endtime="20201030 18:31:41.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:41.497" endtime="20201030 18:31:41.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.500" endtime="20201030 18:31:41.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.472" endtime="20201030 18:31:41.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.469" endtime="20201030 18:31:41.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.509" endtime="20201030 18:31:41.795"></status>
</kw>
<msg timestamp="20201030 18:31:41.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023081389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023160653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:41.507" endtime="20201030 18:31:41.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023081389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023160653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:41.799" endtime="20201030 18:31:41.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.807" endtime="20201030 18:31:41.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.505" endtime="20201030 18:31:41.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.503" endtime="20201030 18:31:41.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:41.814" level="INFO">${RESULT} = [{'diff': 7.926399999999903e-05}, {'diff': 7.882000000000028e-05}, {'diff': 7.954099999999895e-05}, {'diff': 7.959699999999723e-05}, {'diff': 7.970799999999778e-05}, {'diff': 7.886099999999951e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:41.810" endtime="20201030 18:31:41.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:41.818" level="INFO">${ACCURACY} = {'diff': [7.926399999999903e-05, 7.882000000000028e-05, 7.954099999999895e-05, 7.959699999999723e-05, 7.970799999999778e-05, 7.886099999999951e-05, 7.905500000000149e-05, 7.915299999999847e-05, 7.9721...</msg>
<status status="PASS" starttime="20201030 18:31:41.815" endtime="20201030 18:31:41.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.822" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 18:31:41.821" endtime="20201030 18:31:41.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.825" level="INFO">VALUE: [7.926399999999903e-05, 7.882000000000028e-05, 7.954099999999895e-05, 7.959699999999723e-05, 7.970799999999778e-05, 7.886099999999951e-05, 7.905500000000149e-05, 7.915299999999847e-05, 7.972199999999735e-05, 7.934699999999698e-05, 7.961100000000026e-05, 7.933400000000035e-05, 7.92779999999986e-05, 7.915300000000194e-05, 7.967999999999864e-05, 7.88190000000008e-05, 7.973600000000039e-05, 7.937499999999958e-05, 7.956899999999809e-05, 7.91389999999989e-05, 7.973600000000039e-05, 7.89030000000017e-05, 7.934799999999992e-05, 7.969400000000168e-05, 7.888799999999918e-05, 7.965200000000297e-05, 7.961100000000026e-05, 7.933300000000088e-05, 7.976399999999953e-05, 7.932000000000078e-05, 7.887499999999908e-05, 7.932000000000078e-05, 7.974999999999996e-05, 7.895899999999997e-05, 7.930500000000174e-05, 7.95840000000006e-05, 7.967999999999864e-05, 7.969400000000168e-05, 7.879100000000167e-05, 7.886099999999951e-05, 7.887499999999908e-05, 7.976399999999953e-05, 7.952800000000232e-05, 7.890299999999822e-05, 7.965299999999897e-05, 7.874999999999896e-05, 7.904100000000192e-05, 7.932000000000078e-05, 7.929100000000217e-05, 7.956900000000156e-05]</msg>
<status status="PASS" starttime="20201030 18:31:41.823" endtime="20201030 18:31:41.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.819" endtime="20201030 18:31:41.827"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:41.831" endtime="20201030 18:31:41.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.829" endtime="20201030 18:31:41.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.828" endtime="20201030 18:31:41.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.468" endtime="20201030 18:31:41.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.467" endtime="20201030 18:31:41.851"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.860" endtime="20201030 18:31:41.879"></status>
</kw>
<msg timestamp="20201030 18:31:41.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:41.858" endtime="20201030 18:31:41.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:41.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:41.880" endtime="20201030 18:31:41.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.883" endtime="20201030 18:31:41.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.856" endtime="20201030 18:31:41.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.854" endtime="20201030 18:31:41.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:41.893" endtime="20201030 18:31:42.180"></status>
</kw>
<msg timestamp="20201030 18:31:42.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022181306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022261278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:41.892" endtime="20201030 18:31:42.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022181306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022261278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:42.184" endtime="20201030 18:31:42.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.192" endtime="20201030 18:31:42.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.889" endtime="20201030 18:31:42.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.887" endtime="20201030 18:31:42.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:42.199" level="INFO">${RESULT} = [{'diff': 7.99719999999976e-05}, {'diff': 8.04169999999993e-05}, {'diff': 8.020799999999828e-05}, {'diff': 8.070900000000172e-05}, {'diff': 8.02909999999997e-05}, {'diff': 8.030499999999927e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:31:42.195" endtime="20201030 18:31:42.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:42.204" level="INFO">${ACCURACY} = {'diff': [7.99719999999976e-05, 8.04169999999993e-05, 8.020799999999828e-05, 8.070900000000172e-05, 8.02909999999997e-05, 8.030499999999927e-05, 8.06390000000004e-05, 8.011100000000076e-05, 8.04860000...</msg>
<status status="PASS" starttime="20201030 18:31:42.200" endtime="20201030 18:31:42.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.208" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 18:31:42.207" endtime="20201030 18:31:42.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.210" level="INFO">VALUE: [7.99719999999976e-05, 8.04169999999993e-05, 8.020799999999828e-05, 8.070900000000172e-05, 8.02909999999997e-05, 8.030499999999927e-05, 8.06390000000004e-05, 8.011100000000076e-05, 8.048600000000114e-05, 7.995799999999803e-05, 8.069499999999868e-05, 8.020900000000122e-05, 7.998700000000011e-05, 8.02779999999996e-05, 7.983300000000138e-05, 8.041599999999982e-05, 8.01389999999999e-05, 8.006899999999859e-05, 8.06109999999978e-05, 7.984700000000094e-05, 7.987500000000008e-05, 8.043100000000233e-05, 8.033399999999788e-05, 8.047200000000157e-05, 8.042999999999939e-05, 8.00970000000012e-05, 8.068100000000258e-05, 8.086100000000151e-05, 8.058299999999866e-05, 8.040299999999972e-05, 8.036100000000101e-05, 8.036100000000101e-05, 8.059699999999823e-05, 8.01389999999999e-05, 8.015299999999947e-05, 7.987500000000008e-05, 8.056899999999909e-05, 7.998600000000064e-05, 8.073600000000139e-05, 8.065299999999997e-05, 8.075000000000096e-05, 8.056999999999856e-05, 8.026400000000003e-05, 8.015300000000294e-05, 8.04450000000019e-05, 7.980599999999824e-05, 7.988899999999965e-05, 8.01109999999973e-05, 7.987500000000008e-05, 8.020800000000175e-05]</msg>
<status status="PASS" starttime="20201030 18:31:42.209" endtime="20201030 18:31:42.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.204" endtime="20201030 18:31:42.212"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:42.216" endtime="20201030 18:31:42.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.214" endtime="20201030 18:31:42.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.213" endtime="20201030 18:31:42.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.852" endtime="20201030 18:31:42.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:41.852" endtime="20201030 18:31:42.236"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.245" endtime="20201030 18:31:42.264"></status>
</kw>
<msg timestamp="20201030 18:31:42.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:42.243" endtime="20201030 18:31:42.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:42.265" endtime="20201030 18:31:42.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.268" endtime="20201030 18:31:42.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.241" endtime="20201030 18:31:42.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.239" endtime="20201030 18:31:42.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.277" endtime="20201030 18:31:42.564"></status>
</kw>
<msg timestamp="20201030 18:31:42.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021983819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022065597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:42.276" endtime="20201030 18:31:42.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021983819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022065597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:42.569" endtime="20201030 18:31:42.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.577" endtime="20201030 18:31:42.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.273" endtime="20201030 18:31:42.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.271" endtime="20201030 18:31:42.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:42.584" level="INFO">${RESULT} = [{'diff': 8.177799999999763e-05}, {'diff': 8.115300000000047e-05}, {'diff': 8.123600000000189e-05}, {'diff': 8.176400000000153e-05}, {'diff': 8.093099999999936e-05}, {'diff': 8.079199999999967e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:42.580" endtime="20201030 18:31:42.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:42.588" level="INFO">${ACCURACY} = {'diff': [8.177799999999763e-05, 8.115300000000047e-05, 8.123600000000189e-05, 8.176400000000153e-05, 8.093099999999936e-05, 8.079199999999967e-05, 8.1458000000003e-05, 8.144399999999996e-05, 8.154100...</msg>
<status status="PASS" starttime="20201030 18:31:42.585" endtime="20201030 18:31:42.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.592" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 18:31:42.591" endtime="20201030 18:31:42.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.595" level="INFO">VALUE: [8.177799999999763e-05, 8.115300000000047e-05, 8.123600000000189e-05, 8.176400000000153e-05, 8.093099999999936e-05, 8.079199999999967e-05, 8.1458000000003e-05, 8.144399999999996e-05, 8.154100000000095e-05, 8.138899999999769e-05, 8.163899999999794e-05, 8.098599999999817e-05, 8.140300000000072e-05, 8.168100000000011e-05, 8.173600000000239e-05, 8.098600000000164e-05, 8.104199999999992e-05, 8.123600000000189e-05, 8.10970000000022e-05, 8.134699999999898e-05, 8.165300000000097e-05, 8.084699999999848e-05, 8.143099999999986e-05, 8.162500000000183e-05, 8.176399999999806e-05, 8.083399999999838e-05, 8.1458999999999e-05, 8.143099999999986e-05, 8.086200000000099e-05, 8.102700000000088e-05, 8.161100000000227e-05, 8.095799999999903e-05, 8.108299999999916e-05, 8.16390000000014e-05, 8.11390000000009e-05, 8.133300000000288e-05, 8.087500000000108e-05, 8.176300000000206e-05, 8.087500000000108e-05, 8.10130000000013e-05, 8.144399999999996e-05, 8.152800000000085e-05, 8.095799999999903e-05, 8.175000000000196e-05, 8.162499999999837e-05, 8.143000000000039e-05, 8.152800000000085e-05, 8.161200000000174e-05, 8.100000000000121e-05, 8.141600000000082e-05]</msg>
<status status="PASS" starttime="20201030 18:31:42.593" endtime="20201030 18:31:42.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.589" endtime="20201030 18:31:42.596"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:42.600" endtime="20201030 18:31:42.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.598" endtime="20201030 18:31:42.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.597" endtime="20201030 18:31:42.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.237" endtime="20201030 18:31:42.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.237" endtime="20201030 18:31:42.620"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.629" endtime="20201030 18:31:42.650"></status>
</kw>
<msg timestamp="20201030 18:31:42.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:42.628" endtime="20201030 18:31:42.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:42.652" endtime="20201030 18:31:42.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.654" endtime="20201030 18:31:42.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.625" endtime="20201030 18:31:42.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.623" endtime="20201030 18:31:42.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.663" endtime="20201030 18:31:42.950"></status>
</kw>
<msg timestamp="20201030 18:31:42.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023137875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0232205, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:42.662" endtime="20201030 18:31:42.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023137875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0232205, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:42.954" endtime="20201030 18:31:42.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:42.962" endtime="20201030 18:31:42.964"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.659" endtime="20201030 18:31:42.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.657" endtime="20201030 18:31:42.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:42.969" level="INFO">${RESULT} = [{'diff': 8.262500000000284e-05}, {'diff': 8.209699999999973e-05}, {'diff': 8.200000000000221e-05}, {'diff': 8.26390000000024e-05}, {'diff': 8.254100000000195e-05}, {'diff': 8.24720000000001e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:31:42.966" endtime="20201030 18:31:42.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:42.973" level="INFO">${ACCURACY} = {'diff': [8.262500000000284e-05, 8.209699999999973e-05, 8.200000000000221e-05, 8.26390000000024e-05, 8.254100000000195e-05, 8.24720000000001e-05, 8.23049999999978e-05, 8.226400000000203e-05, 8.2778000...</msg>
<status status="PASS" starttime="20201030 18:31:42.970" endtime="20201030 18:31:42.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.978" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 18:31:42.977" endtime="20201030 18:31:42.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:42.980" level="INFO">VALUE: [8.262500000000284e-05, 8.209699999999973e-05, 8.200000000000221e-05, 8.26390000000024e-05, 8.254100000000195e-05, 8.24720000000001e-05, 8.23049999999978e-05, 8.226400000000203e-05, 8.27780000000021e-05, 8.186099999999905e-05, 8.27780000000021e-05, 8.201399999999831e-05, 8.237500000000259e-05, 8.230600000000074e-05, 8.232000000000031e-05, 8.243000000000139e-05, 8.274999999999949e-05, 8.273599999999992e-05, 8.251399999999881e-05, 8.269500000000068e-05, 8.248599999999967e-05, 8.230599999999727e-05, 8.249999999999924e-05, 8.212499999999887e-05, 8.219500000000018e-05, 8.23049999999978e-05, 8.211100000000277e-05, 8.223599999999942e-05, 8.191600000000132e-05, 8.186099999999905e-05, 8.216700000000104e-05, 8.24720000000001e-05, 8.24720000000001e-05, 8.215300000000147e-05, 8.266700000000154e-05, 8.216700000000104e-05, 8.19719999999996e-05, 8.212499999999887e-05, 8.27780000000021e-05, 8.273599999999992e-05, 8.201400000000178e-05, 8.254200000000142e-05, 8.257000000000056e-05, 8.202800000000135e-05, 8.193000000000089e-05, 8.272299999999982e-05, 8.26109999999998e-05, 8.209699999999973e-05, 8.263899999999894e-05, 8.201400000000178e-05]</msg>
<status status="PASS" starttime="20201030 18:31:42.979" endtime="20201030 18:31:42.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.974" endtime="20201030 18:31:42.983"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:42.986" endtime="20201030 18:31:43.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.985" endtime="20201030 18:31:43.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.984" endtime="20201030 18:31:43.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.621" endtime="20201030 18:31:43.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:42.621" endtime="20201030 18:31:43.007"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.016" endtime="20201030 18:31:43.035"></status>
</kw>
<msg timestamp="20201030 18:31:43.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.014" endtime="20201030 18:31:43.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.036" endtime="20201030 18:31:43.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.039" endtime="20201030 18:31:43.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.011" endtime="20201030 18:31:43.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.009" endtime="20201030 18:31:43.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.048" endtime="20201030 18:31:43.337"></status>
</kw>
<msg timestamp="20201030 18:31:43.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021944375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022027556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:43.046" endtime="20201030 18:31:43.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021944375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022027556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:43.341" endtime="20201030 18:31:43.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.349" endtime="20201030 18:31:43.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.044" endtime="20201030 18:31:43.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.042" endtime="20201030 18:31:43.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:43.355" level="INFO">${RESULT} = [{'diff': 8.318100000000161e-05}, {'diff': 8.36659999999996e-05}, {'diff': 8.355499999999905e-05}, {'diff': 8.343000000000239e-05}, {'diff': 8.302799999999888e-05}, {'diff': 8.34720000000011e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:31:43.352" endtime="20201030 18:31:43.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:43.363" level="INFO">${ACCURACY} = {'diff': [8.318100000000161e-05, 8.36659999999996e-05, 8.355499999999905e-05, 8.343000000000239e-05, 8.302799999999888e-05, 8.34720000000011e-05, 8.36110000000008e-05, 8.308299999999769e-05, 8.3791999...</msg>
<status status="PASS" starttime="20201030 18:31:43.356" endtime="20201030 18:31:43.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.367" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 18:31:43.366" endtime="20201030 18:31:43.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.370" level="INFO">VALUE: [8.318100000000161e-05, 8.36659999999996e-05, 8.355499999999905e-05, 8.343000000000239e-05, 8.302799999999888e-05, 8.34720000000011e-05, 8.36110000000008e-05, 8.308299999999769e-05, 8.37919999999992e-05, 8.334700000000098e-05, 8.288900000000265e-05, 8.381900000000234e-05, 8.283299999999744e-05, 8.358300000000166e-05, 8.36110000000008e-05, 8.354199999999895e-05, 8.376400000000006e-05, 8.291699999999833e-05, 8.355600000000199e-05, 8.3152999999999e-05, 8.3152999999999e-05, 8.312499999999987e-05, 8.340299999999926e-05, 8.367999999999917e-05, 8.317999999999867e-05, 8.2846999999997e-05, 8.34720000000011e-05, 8.344400000000196e-05, 8.358300000000166e-05, 8.36110000000008e-05, 8.305600000000149e-05, 8.281999999999734e-05, 8.329099999999923e-05, 8.309699999999726e-05, 8.355499999999905e-05, 8.344400000000196e-05, 8.28330000000009e-05, 8.32780000000026e-05, 8.324999999999999e-05, 8.37370000000004e-05, 8.363899999999994e-05, 8.352799999999938e-05, 8.319400000000171e-05, 8.3152000000003e-05, 8.363899999999994e-05, 8.375000000000049e-05, 8.363899999999994e-05, 8.290300000000222e-05, 8.31110000000003e-05, 8.320900000000075e-05]</msg>
<status status="PASS" starttime="20201030 18:31:43.368" endtime="20201030 18:31:43.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.364" endtime="20201030 18:31:43.371"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:43.375" endtime="20201030 18:31:43.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.373" endtime="20201030 18:31:43.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.372" endtime="20201030 18:31:43.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.008" endtime="20201030 18:31:43.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.007" endtime="20201030 18:31:43.395"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.404" endtime="20201030 18:31:43.423"></status>
</kw>
<msg timestamp="20201030 18:31:43.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.402" endtime="20201030 18:31:43.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.425" endtime="20201030 18:31:43.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.427" endtime="20201030 18:31:43.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.400" endtime="20201030 18:31:43.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.398" endtime="20201030 18:31:43.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.436" endtime="20201030 18:31:43.723"></status>
</kw>
<msg timestamp="20201030 18:31:43.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021798972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021883458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:43.435" endtime="20201030 18:31:43.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021798972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021883458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:43.728" endtime="20201030 18:31:43.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.736" endtime="20201030 18:31:43.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.432" endtime="20201030 18:31:43.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.430" endtime="20201030 18:31:43.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:43.742" level="INFO">${RESULT} = [{'diff': 8.448600000000167e-05}, {'diff': 8.386099999999758e-05}, {'diff': 8.41249999999974e-05}, {'diff': 8.441699999999983e-05}, {'diff': 8.42919999999997e-05}, {'diff': 8.388900000000019e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:31:43.739" endtime="20201030 18:31:43.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:43.746" level="INFO">${ACCURACY} = {'diff': [8.448600000000167e-05, 8.386099999999758e-05, 8.41249999999974e-05, 8.441699999999983e-05, 8.42919999999997e-05, 8.388900000000019e-05, 8.477800000000063e-05, 8.472300000000182e-05, 8.441600...</msg>
<status status="PASS" starttime="20201030 18:31:43.743" endtime="20201030 18:31:43.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.751" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 18:31:43.750" endtime="20201030 18:31:43.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.753" level="INFO">VALUE: [8.448600000000167e-05, 8.386099999999758e-05, 8.41249999999974e-05, 8.441699999999983e-05, 8.42919999999997e-05, 8.388900000000019e-05, 8.477800000000063e-05, 8.472300000000182e-05, 8.441600000000035e-05, 8.473600000000192e-05, 8.475000000000149e-05, 8.477800000000063e-05, 8.417999999999967e-05, 8.402799999999988e-05, 8.441699999999983e-05, 8.401400000000031e-05, 8.387500000000062e-05, 8.393100000000236e-05, 8.444499999999897e-05, 8.416699999999958e-05, 8.420799999999881e-05, 8.441699999999983e-05, 8.404199999999945e-05, 8.444399999999949e-05, 8.437500000000112e-05, 8.394499999999847e-05, 8.456999999999909e-05, 8.416699999999958e-05, 8.394499999999847e-05, 8.445799999999906e-05, 8.402700000000041e-05, 8.405599999999902e-05, 8.430599999999927e-05, 8.43049999999998e-05, 8.409700000000173e-05, 8.444500000000243e-05, 8.468099999999965e-05, 8.442999999999992e-05, 8.476400000000106e-05, 8.47370000000014e-05, 8.402700000000041e-05, 8.454100000000048e-05, 8.436100000000155e-05, 8.44720000000021e-05, 8.413900000000044e-05, 8.476400000000106e-05, 8.450000000000124e-05, 8.472200000000235e-05, 8.411200000000077e-05, 8.46249999999979e-05]</msg>
<status status="PASS" starttime="20201030 18:31:43.752" endtime="20201030 18:31:43.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.747" endtime="20201030 18:31:43.754"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:43.758" endtime="20201030 18:31:43.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.757" endtime="20201030 18:31:43.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.755" endtime="20201030 18:31:43.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.396" endtime="20201030 18:31:43.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.396" endtime="20201030 18:31:43.779"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.787" endtime="20201030 18:31:43.807"></status>
</kw>
<msg timestamp="20201030 18:31:43.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.786" endtime="20201030 18:31:43.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:43.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:43.809" endtime="20201030 18:31:43.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.811" endtime="20201030 18:31:43.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.783" endtime="20201030 18:31:43.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.781" endtime="20201030 18:31:43.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:43.820" endtime="20201030 18:31:44.105"></status>
</kw>
<msg timestamp="20201030 18:31:44.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022621222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022706778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:43.819" endtime="20201030 18:31:44.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022621222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022706778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:44.109" endtime="20201030 18:31:44.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.117" endtime="20201030 18:31:44.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.816" endtime="20201030 18:31:44.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.815" endtime="20201030 18:31:44.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:44.124" level="INFO">${RESULT} = [{'diff': 8.555600000000052e-05}, {'diff': 8.484799999999848e-05}, {'diff': 8.49729999999986e-05}, {'diff': 8.493000000000042e-05}, {'diff': 8.556900000000062e-05}, {'diff': 8.497199999999913e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:44.121" endtime="20201030 18:31:44.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:44.128" level="INFO">${ACCURACY} = {'diff': [8.555600000000052e-05, 8.484799999999848e-05, 8.49729999999986e-05, 8.493000000000042e-05, 8.556900000000062e-05, 8.497199999999913e-05, 8.497199999999913e-05, 8.561099999999933e-05, 8.53190...</msg>
<status status="PASS" starttime="20201030 18:31:44.125" endtime="20201030 18:31:44.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.133" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 18:31:44.132" endtime="20201030 18:31:44.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.135" level="INFO">VALUE: [8.555600000000052e-05, 8.484799999999848e-05, 8.49729999999986e-05, 8.493000000000042e-05, 8.556900000000062e-05, 8.497199999999913e-05, 8.497199999999913e-05, 8.561099999999933e-05, 8.531900000000037e-05, 8.538900000000169e-05, 8.498600000000217e-05, 8.505500000000055e-05, 8.505600000000002e-05, 8.543000000000092e-05, 8.577700000000216e-05, 8.545800000000006e-05, 8.548699999999868e-05, 8.490299999999729e-05, 8.480599999999977e-05, 8.548600000000267e-05, 8.541700000000083e-05, 8.531999999999984e-05, 8.486099999999858e-05, 8.563899999999847e-05, 8.566700000000108e-05, 8.486099999999858e-05, 8.563899999999847e-05, 8.511099999999883e-05, 8.51110000000023e-05, 8.549999999999877e-05, 8.552800000000138e-05, 8.576400000000206e-05, 8.563899999999847e-05, 8.477699999999769e-05, 8.49859999999987e-05, 8.502699999999794e-05, 8.574999999999902e-05, 8.486099999999858e-05, 8.488900000000119e-05, 8.534700000000298e-05, 8.54859999999992e-05, 8.533399999999941e-05, 8.484800000000195e-05, 8.575000000000249e-05, 8.505500000000055e-05, 8.541600000000135e-05, 8.487499999999815e-05, 8.551399999999834e-05, 8.538899999999822e-05, 8.523600000000242e-05]</msg>
<status status="PASS" starttime="20201030 18:31:44.134" endtime="20201030 18:31:44.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.129" endtime="20201030 18:31:44.137"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:44.141" endtime="20201030 18:31:44.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.140" endtime="20201030 18:31:44.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.138" endtime="20201030 18:31:44.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.779" endtime="20201030 18:31:44.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:43.779" endtime="20201030 18:31:44.162"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.171" endtime="20201030 18:31:44.190"></status>
</kw>
<msg timestamp="20201030 18:31:44.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:44.169" endtime="20201030 18:31:44.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:44.192" endtime="20201030 18:31:44.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.195" endtime="20201030 18:31:44.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.166" endtime="20201030 18:31:44.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.164" endtime="20201030 18:31:44.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.204" endtime="20201030 18:31:44.489"></status>
</kw>
<msg timestamp="20201030 18:31:44.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022370889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022457139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:44.202" endtime="20201030 18:31:44.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022370889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022457139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:44.493" endtime="20201030 18:31:44.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.501" endtime="20201030 18:31:44.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.199" endtime="20201030 18:31:44.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.198" endtime="20201030 18:31:44.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:44.508" level="INFO">${RESULT} = [{'diff': 8.624999999999952e-05}, {'diff': 8.629199999999823e-05}, {'diff': 8.632000000000084e-05}, {'diff': 8.669499999999775e-05}, {'diff': 8.668000000000217e-05}, {'diff': 8.645800000000106e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:44.505" endtime="20201030 18:31:44.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:44.513" level="INFO">${ACCURACY} = {'diff': [8.624999999999952e-05, 8.629199999999823e-05, 8.632000000000084e-05, 8.669499999999775e-05, 8.668000000000217e-05, 8.645800000000106e-05, 8.652699999999944e-05, 8.587500000000262e-05, 8.6166...</msg>
<status status="PASS" starttime="20201030 18:31:44.509" endtime="20201030 18:31:44.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.518" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 18:31:44.516" endtime="20201030 18:31:44.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.520" level="INFO">VALUE: [8.624999999999952e-05, 8.629199999999823e-05, 8.632000000000084e-05, 8.669499999999775e-05, 8.668000000000217e-05, 8.645800000000106e-05, 8.652699999999944e-05, 8.587500000000262e-05, 8.61669999999981e-05, 8.675000000000002e-05, 8.632000000000084e-05, 8.659800000000023e-05, 8.583399999999991e-05, 8.672300000000036e-05, 8.595799999999709e-05, 8.61660000000021e-05, 8.59859999999997e-05, 8.602800000000188e-05, 8.636100000000008e-05, 8.601400000000231e-05, 8.637499999999965e-05, 8.590299999999829e-05, 8.601399999999884e-05, 8.634799999999998e-05, 8.654199999999848e-05, 8.63189999999979e-05, 8.658299999999772e-05, 8.586099999999958e-05, 8.66249999999999e-05, 8.658300000000119e-05, 8.595800000000056e-05, 8.665299999999904e-05, 8.582000000000034e-05, 8.618100000000115e-05, 8.676399999999959e-05, 8.620800000000081e-05, 8.642999999999845e-05, 8.627800000000213e-05, 8.601399999999884e-05, 8.606899999999765e-05, 8.651400000000281e-05, 8.6153000000002e-05, 8.643099999999793e-05, 8.641599999999888e-05, 8.658300000000119e-05, 8.597200000000013e-05, 8.663899999999947e-05, 8.659699999999729e-05, 8.66249999999999e-05, 8.673600000000045e-05]</msg>
<status status="PASS" starttime="20201030 18:31:44.519" endtime="20201030 18:31:44.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.514" endtime="20201030 18:31:44.521"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:44.525" endtime="20201030 18:31:44.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.523" endtime="20201030 18:31:44.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.522" endtime="20201030 18:31:44.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.163" endtime="20201030 18:31:44.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.162" endtime="20201030 18:31:44.546"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.554" endtime="20201030 18:31:44.574"></status>
</kw>
<msg timestamp="20201030 18:31:44.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:44.553" endtime="20201030 18:31:44.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:44.576" endtime="20201030 18:31:44.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.578" endtime="20201030 18:31:44.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.550" endtime="20201030 18:31:44.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.548" endtime="20201030 18:31:44.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.587" endtime="20201030 18:31:44.874"></status>
</kw>
<msg timestamp="20201030 18:31:44.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021869569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021956472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:44.586" endtime="20201030 18:31:44.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021869569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021956472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:44.878" endtime="20201030 18:31:44.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.886" endtime="20201030 18:31:44.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.583" endtime="20201030 18:31:44.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.581" endtime="20201030 18:31:44.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:44.893" level="INFO">${RESULT} = [{'diff': 8.690300000000276e-05}, {'diff': 8.726399999999662e-05}, {'diff': 8.775000000000102e-05}, {'diff': 8.734699999999804e-05}, {'diff': 8.695900000000104e-05}, {'diff': 8.702799999999941e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:44.890" endtime="20201030 18:31:44.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:44.897" level="INFO">${ACCURACY} = {'diff': [8.690300000000276e-05, 8.726399999999662e-05, 8.775000000000102e-05, 8.734699999999804e-05, 8.695900000000104e-05, 8.702799999999941e-05, 8.754199999999948e-05, 8.730600000000227e-05, 8.7125...</msg>
<status status="PASS" starttime="20201030 18:31:44.894" endtime="20201030 18:31:44.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.902" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 18:31:44.901" endtime="20201030 18:31:44.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.904" level="INFO">VALUE: [8.690300000000276e-05, 8.726399999999662e-05, 8.775000000000102e-05, 8.734699999999804e-05, 8.695900000000104e-05, 8.702799999999941e-05, 8.754199999999948e-05, 8.730600000000227e-05, 8.71250000000004e-05, 8.692999999999895e-05, 8.754199999999948e-05, 8.761100000000133e-05, 8.730600000000227e-05, 8.769499999999875e-05, 8.729199999999923e-05, 8.741699999999936e-05, 8.723599999999748e-05, 8.733300000000194e-05, 8.727700000000019e-05, 8.751400000000034e-05, 8.754199999999948e-05, 8.738800000000074e-05, 8.715299999999954e-05, 8.702799999999941e-05, 8.700000000000027e-05, 8.69310000000019e-05, 8.729199999999923e-05, 8.76669999999996e-05, 8.741599999999988e-05, 8.729099999999976e-05, 8.745799999999859e-05, 8.683299999999797e-05, 8.751400000000034e-05, 8.759700000000176e-05, 8.758400000000166e-05, 8.776400000000059e-05, 8.748599999999773e-05, 8.762499999999743e-05, 8.737500000000065e-05, 8.73050000000028e-05, 8.743099999999893e-05, 8.730499999999933e-05, 8.713899999999997e-05, 8.687500000000015e-05, 8.765300000000004e-05, 8.774999999999755e-05, 8.745900000000154e-05, 8.755499999999958e-05, 8.761100000000133e-05, 8.722200000000138e-05]</msg>
<status status="PASS" starttime="20201030 18:31:44.903" endtime="20201030 18:31:44.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.898" endtime="20201030 18:31:44.906"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:44.910" endtime="20201030 18:31:44.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.908" endtime="20201030 18:31:44.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.907" endtime="20201030 18:31:44.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.547" endtime="20201030 18:31:44.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.546" endtime="20201030 18:31:44.931"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.940" endtime="20201030 18:31:44.961"></status>
</kw>
<msg timestamp="20201030 18:31:44.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:44.939" endtime="20201030 18:31:44.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:44.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:44.962" endtime="20201030 18:31:44.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.965" endtime="20201030 18:31:44.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.936" endtime="20201030 18:31:44.967"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.934" endtime="20201030 18:31:44.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:44.974" endtime="20201030 18:31:45.260"></status>
</kw>
<msg timestamp="20201030 18:31:45.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024228236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024316125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:44.972" endtime="20201030 18:31:45.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024228236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024316125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:45.264" endtime="20201030 18:31:45.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.272" endtime="20201030 18:31:45.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.970" endtime="20201030 18:31:45.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.968" endtime="20201030 18:31:45.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:45.279" level="INFO">${RESULT} = [{'diff': 8.788900000000072e-05}, {'diff': 8.834699999999904e-05}, {'diff': 8.823599999999848e-05}, {'diff': 8.840300000000079e-05}, {'diff': 8.841700000000036e-05}, {'diff': 8.7944999999999e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:31:45.276" endtime="20201030 18:31:45.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:45.283" level="INFO">${ACCURACY} = {'diff': [8.788900000000072e-05, 8.834699999999904e-05, 8.823599999999848e-05, 8.840300000000079e-05, 8.841700000000036e-05, 8.7944999999999e-05, 8.801400000000084e-05, 8.81800000000002e-05, 8.8403000...</msg>
<status status="PASS" starttime="20201030 18:31:45.280" endtime="20201030 18:31:45.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.288" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 18:31:45.286" endtime="20201030 18:31:45.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.290" level="INFO">VALUE: [8.788900000000072e-05, 8.834699999999904e-05, 8.823599999999848e-05, 8.840300000000079e-05, 8.841700000000036e-05, 8.7944999999999e-05, 8.801400000000084e-05, 8.81800000000002e-05, 8.840300000000079e-05, 8.78189999999994e-05, 8.858299999999972e-05, 8.784699999999854e-05, 8.809699999999879e-05, 8.819499999999925e-05, 8.863900000000147e-05, 8.798700000000118e-05, 8.823599999999848e-05, 8.866600000000113e-05, 8.802800000000041e-05, 8.788900000000072e-05, 8.808299999999922e-05, 8.86670000000006e-05, 8.827800000000066e-05, 8.852799999999744e-05, 8.84449999999995e-05, 8.779199999999973e-05, 8.866599999999766e-05, 8.795799999999909e-05, 8.78189999999994e-05, 8.795799999999909e-05, 8.843099999999993e-05, 8.807000000000259e-05, 8.815300000000054e-05, 8.874999999999855e-05, 8.834799999999851e-05, 8.802699999999747e-05, 8.824999999999805e-05, 8.808299999999922e-05, 8.815300000000054e-05, 8.788900000000072e-05, 8.858299999999972e-05, 8.787500000000115e-05, 8.838900000000122e-05, 8.790300000000029e-05, 8.823700000000143e-05, 8.870799999999984e-05, 8.81670000000001e-05, 8.855500000000058e-05, 8.797199999999866e-05, 8.840299999999732e-05]</msg>
<status status="PASS" starttime="20201030 18:31:45.289" endtime="20201030 18:31:45.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.284" endtime="20201030 18:31:45.292"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:45.296" endtime="20201030 18:31:45.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.294" endtime="20201030 18:31:45.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.293" endtime="20201030 18:31:45.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.932" endtime="20201030 18:31:45.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:44.931" endtime="20201030 18:31:45.317"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.325" endtime="20201030 18:31:45.345"></status>
</kw>
<msg timestamp="20201030 18:31:45.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.324" endtime="20201030 18:31:45.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.346" endtime="20201030 18:31:45.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.349" endtime="20201030 18:31:45.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.321" endtime="20201030 18:31:45.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.319" endtime="20201030 18:31:45.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.358" endtime="20201030 18:31:45.644"></status>
</kw>
<msg timestamp="20201030 18:31:45.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021900958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021989986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:45.356" endtime="20201030 18:31:45.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021900958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021989986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:45.648" endtime="20201030 18:31:45.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.656" endtime="20201030 18:31:45.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.354" endtime="20201030 18:31:45.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.352" endtime="20201030 18:31:45.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:45.663" level="INFO">${RESULT} = [{'diff': 8.902799999999794e-05}, {'diff': 8.938900000000222e-05}, {'diff': 8.933300000000047e-05}, {'diff': 8.940300000000179e-05}, {'diff': 8.961099999999986e-05}, {'diff': 8.89860000000027e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:45.660" endtime="20201030 18:31:45.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:45.668" level="INFO">${ACCURACY} = {'diff': [8.902799999999794e-05, 8.938900000000222e-05, 8.933300000000047e-05, 8.940300000000179e-05, 8.961099999999986e-05, 8.89860000000027e-05, 8.902800000000141e-05, 8.884699999999954e-05, 8.90269...</msg>
<status status="PASS" starttime="20201030 18:31:45.664" endtime="20201030 18:31:45.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.673" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 18:31:45.672" endtime="20201030 18:31:45.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.675" level="INFO">VALUE: [8.902799999999794e-05, 8.938900000000222e-05, 8.933300000000047e-05, 8.940300000000179e-05, 8.961099999999986e-05, 8.89860000000027e-05, 8.902800000000141e-05, 8.884699999999954e-05, 8.902699999999847e-05, 8.88190000000004e-05, 8.897199999999966e-05, 8.979200000000173e-05, 8.941700000000136e-05, 8.940300000000179e-05, 8.956899999999768e-05, 8.969400000000127e-05, 8.955500000000158e-05, 8.906900000000065e-05, 8.916599999999816e-05, 8.902800000000141e-05, 8.95129999999994e-05, 8.93190000000009e-05, 8.902800000000141e-05, 8.913900000000197e-05, 8.893100000000043e-05, 8.961199999999933e-05, 8.976299999999965e-05, 8.905500000000108e-05, 8.931899999999743e-05, 8.945800000000059e-05, 8.925000000000252e-05, 8.916600000000163e-05, 8.941700000000136e-05, 8.915299999999807e-05, 8.956999999999715e-05, 8.955599999999758e-05, 8.951399999999887e-05, 8.954099999999854e-05, 8.916599999999816e-05, 8.968100000000118e-05, 8.959700000000029e-05, 8.94999999999993e-05, 8.919500000000025e-05, 8.932000000000037e-05, 8.884799999999901e-05, 8.895800000000009e-05, 8.984700000000054e-05, 8.937499999999918e-05, 8.970800000000084e-05, 8.956900000000115e-05]</msg>
<status status="PASS" starttime="20201030 18:31:45.674" endtime="20201030 18:31:45.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.669" endtime="20201030 18:31:45.677"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:45.680" endtime="20201030 18:31:45.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.679" endtime="20201030 18:31:45.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.677" endtime="20201030 18:31:45.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.318" endtime="20201030 18:31:45.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.317" endtime="20201030 18:31:45.701"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.710" endtime="20201030 18:31:45.729"></status>
</kw>
<msg timestamp="20201030 18:31:45.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.708" endtime="20201030 18:31:45.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:45.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:45.731" endtime="20201030 18:31:45.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.733" endtime="20201030 18:31:45.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.705" endtime="20201030 18:31:45.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.703" endtime="20201030 18:31:45.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:45.742" endtime="20201030 18:31:46.029"></status>
</kw>
<msg timestamp="20201030 18:31:46.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021868222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02195875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:45.741" endtime="20201030 18:31:46.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021868222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02195875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:46.033" endtime="20201030 18:31:46.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.042" endtime="20201030 18:31:46.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.738" endtime="20201030 18:31:46.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.736" endtime="20201030 18:31:46.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:46.048" level="INFO">${RESULT} = [{'diff': 9.052799999999944e-05}, {'diff': 9.029199999999876e-05}, {'diff': 9.001400000000284e-05}, {'diff': 8.988899999999925e-05}, {'diff': 9.038899999999975e-05}, {'diff': 9.043100000000193e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:46.045" endtime="20201030 18:31:46.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:46.052" level="INFO">${ACCURACY} = {'diff': [9.052799999999944e-05, 9.029199999999876e-05, 9.001400000000284e-05, 8.988899999999925e-05, 9.038899999999975e-05, 9.043100000000193e-05, 9.040199999999984e-05, 9.027799999999919e-05, 9.0068...</msg>
<status status="PASS" starttime="20201030 18:31:46.049" endtime="20201030 18:31:46.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.057" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 18:31:46.056" endtime="20201030 18:31:46.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.059" level="INFO">VALUE: [9.052799999999944e-05, 9.029199999999876e-05, 9.001400000000284e-05, 8.988899999999925e-05, 9.038899999999975e-05, 9.043100000000193e-05, 9.040199999999984e-05, 9.027799999999919e-05, 9.006899999999818e-05, 9.042999999999898e-05, 9.016699999999864e-05, 9.027799999999919e-05, 9.022200000000091e-05, 9.040299999999932e-05, 9.015299999999907e-05, 9.076300000000065e-05, 9.016600000000263e-05, 9.01389999999995e-05, 9.044399999999855e-05, 8.980500000000183e-05, 9.061099999999739e-05, 8.986100000000011e-05, 9.065299999999957e-05, 9.017999999999873e-05, 9.030599999999833e-05, 9.061099999999739e-05, 8.98190000000014e-05, 9.051399999999987e-05, 9.066699999999914e-05, 9.0639e-05, 9.022199999999744e-05, 9.072300000000089e-05, 9.041699999999889e-05, 9.070899999999785e-05, 9.012499999999993e-05, 9.061099999999739e-05, 8.987499999999968e-05, 9.009699999999732e-05, 9.058299999999825e-05, 9.023599999999701e-05, 9.054199999999901e-05, 9.045900000000107e-05, 8.982000000000087e-05, 9.018100000000168e-05, 8.986100000000011e-05, 8.997199999999719e-05, 8.99999999999998e-05, 9.066599999999966e-05, 9.025000000000005e-05, 9.008300000000122e-05]</msg>
<status status="PASS" starttime="20201030 18:31:46.058" endtime="20201030 18:31:46.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.053" endtime="20201030 18:31:46.061"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:46.064" endtime="20201030 18:31:46.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.063" endtime="20201030 18:31:46.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.062" endtime="20201030 18:31:46.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.702" endtime="20201030 18:31:46.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:45.701" endtime="20201030 18:31:46.085"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.094" endtime="20201030 18:31:46.115"></status>
</kw>
<msg timestamp="20201030 18:31:46.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.092" endtime="20201030 18:31:46.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.116" endtime="20201030 18:31:46.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.119" endtime="20201030 18:31:46.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.090" endtime="20201030 18:31:46.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.088" endtime="20201030 18:31:46.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.128" endtime="20201030 18:31:46.412"></status>
</kw>
<msg timestamp="20201030 18:31:46.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023033764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023124653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:46.126" endtime="20201030 18:31:46.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023033764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023124653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:46.417" endtime="20201030 18:31:46.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.425" endtime="20201030 18:31:46.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.124" endtime="20201030 18:31:46.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.122" endtime="20201030 18:31:46.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:46.432" level="INFO">${RESULT} = [{'diff': 9.088899999999678e-05}, {'diff': 9.11390000000005e-05}, {'diff': 9.162499999999796e-05}, {'diff': 9.111099999999789e-05}, {'diff': 9.098600000000123e-05}, {'diff': 9.174999999999808e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:46.428" endtime="20201030 18:31:46.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:46.436" level="INFO">${ACCURACY} = {'diff': [9.088899999999678e-05, 9.11390000000005e-05, 9.162499999999796e-05, 9.111099999999789e-05, 9.098600000000123e-05, 9.174999999999808e-05, 9.136099999999814e-05, 9.174999999999808e-05, 9.13059...</msg>
<status status="PASS" starttime="20201030 18:31:46.433" endtime="20201030 18:31:46.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.440" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 18:31:46.439" endtime="20201030 18:31:46.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.443" level="INFO">VALUE: [9.088899999999678e-05, 9.11390000000005e-05, 9.162499999999796e-05, 9.111099999999789e-05, 9.098600000000123e-05, 9.174999999999808e-05, 9.136099999999814e-05, 9.174999999999808e-05, 9.130599999999933e-05, 9.094499999999853e-05, 9.127700000000072e-05, 9.148599999999826e-05, 9.104199999999951e-05, 9.172199999999894e-05, 9.083300000000197e-05, 9.137500000000118e-05, 9.087500000000068e-05, 9.138900000000075e-05, 9.180599999999983e-05, 9.143099999999946e-05, 9.102799999999994e-05, 9.131899999999943e-05, 9.095800000000209e-05, 9.11800000000032e-05, 9.102799999999994e-05, 9.088900000000025e-05, 9.10000000000008e-05, 9.158300000000272e-05, 9.145900000000207e-05, 9.161100000000186e-05, 9.158400000000219e-05, 9.141699999999989e-05, 9.130499999999986e-05, 9.140200000000084e-05, 9.088900000000025e-05, 9.165300000000057e-05, 9.118099999999921e-05, 9.0945000000002e-05, 9.106899999999918e-05, 9.13060000000028e-05, 9.118100000000268e-05, 9.142999999999998e-05, 9.158299999999925e-05, 9.079099999999979e-05, 9.090299999999982e-05, 9.131899999999943e-05, 9.137500000000118e-05, 9.090299999999982e-05, 9.086099999999764e-05, 9.136100000000161e-05]</msg>
<status status="PASS" starttime="20201030 18:31:46.441" endtime="20201030 18:31:46.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.437" endtime="20201030 18:31:46.445"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:46.449" endtime="20201030 18:31:46.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.447" endtime="20201030 18:31:46.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.446" endtime="20201030 18:31:46.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.086" endtime="20201030 18:31:46.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.085" endtime="20201030 18:31:46.469"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.478" endtime="20201030 18:31:46.498"></status>
</kw>
<msg timestamp="20201030 18:31:46.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.477" endtime="20201030 18:31:46.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.499" endtime="20201030 18:31:46.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.502" endtime="20201030 18:31:46.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.474" endtime="20201030 18:31:46.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.472" endtime="20201030 18:31:46.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.511" endtime="20201030 18:31:46.798"></status>
</kw>
<msg timestamp="20201030 18:31:46.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021906069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021998736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:46.509" endtime="20201030 18:31:46.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021906069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021998736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:46.802" endtime="20201030 18:31:46.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.811" endtime="20201030 18:31:46.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.507" endtime="20201030 18:31:46.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.505" endtime="20201030 18:31:46.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:46.817" level="INFO">${RESULT} = [{'diff': 9.266700000000114e-05}, {'diff': 9.204199999999704e-05}, {'diff': 9.208299999999975e-05}, {'diff': 9.191599999999744e-05}, {'diff': 9.251400000000187e-05}, {'diff': 9.277700000000222e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:46.814" endtime="20201030 18:31:46.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:46.825" level="INFO">${ACCURACY} = {'diff': [9.266700000000114e-05, 9.204199999999704e-05, 9.208299999999975e-05, 9.191599999999744e-05, 9.251400000000187e-05, 9.277700000000222e-05, 9.23199999999999e-05, 9.186100000000211e-05, 9.23609...</msg>
<status status="PASS" starttime="20201030 18:31:46.818" endtime="20201030 18:31:46.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.829" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 18:31:46.828" endtime="20201030 18:31:46.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.832" level="INFO">VALUE: [9.266700000000114e-05, 9.204199999999704e-05, 9.208299999999975e-05, 9.191599999999744e-05, 9.251400000000187e-05, 9.277700000000222e-05, 9.23199999999999e-05, 9.186100000000211e-05, 9.236099999999914e-05, 9.24719999999997e-05, 9.231900000000043e-05, 9.180599999999983e-05, 9.191699999999692e-05, 9.199999999999833e-05, 9.191700000000039e-05, 9.183399999999897e-05, 9.201299999999843e-05, 9.236099999999914e-05, 9.245800000000012e-05, 9.188899999999778e-05, 9.191700000000039e-05, 9.252800000000144e-05, 9.212500000000193e-05, 9.234799999999904e-05, 9.251400000000187e-05, 9.230500000000086e-05, 9.272199999999994e-05, 9.263899999999853e-05, 9.26659999999982e-05, 9.258399999999972e-05, 9.272199999999994e-05, 9.23199999999999e-05, 9.276399999999865e-05, 9.213899999999803e-05, 9.280600000000083e-05, 9.243000000000098e-05, 9.180500000000036e-05, 9.255500000000111e-05, 9.254199999999754e-05, 9.272199999999994e-05, 9.276399999999865e-05, 9.230600000000033e-05, 9.18199999999994e-05, 9.230599999999686e-05, 9.229200000000076e-05, 9.279100000000179e-05, 9.279200000000126e-05, 9.21659999999977e-05, 9.184699999999907e-05, 9.202799999999747e-05]</msg>
<status status="PASS" starttime="20201030 18:31:46.830" endtime="20201030 18:31:46.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.826" endtime="20201030 18:31:46.833"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:46.837" endtime="20201030 18:31:46.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.835" endtime="20201030 18:31:46.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.834" endtime="20201030 18:31:46.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.470" endtime="20201030 18:31:46.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.470" endtime="20201030 18:31:46.858"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.867" endtime="20201030 18:31:46.886"></status>
</kw>
<msg timestamp="20201030 18:31:46.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.865" endtime="20201030 18:31:46.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:46.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:46.888" endtime="20201030 18:31:46.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.891" endtime="20201030 18:31:46.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.862" endtime="20201030 18:31:46.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.860" endtime="20201030 18:31:46.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:46.900" endtime="20201030 18:31:47.186"></status>
</kw>
<msg timestamp="20201030 18:31:47.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022163333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022256264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:46.898" endtime="20201030 18:31:47.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022163333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022256264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:47.191" endtime="20201030 18:31:47.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.199" endtime="20201030 18:31:47.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.896" endtime="20201030 18:31:47.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.894" endtime="20201030 18:31:47.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:47.206" level="INFO">${RESULT} = [{'diff': 9.293100000000096e-05}, {'diff': 9.340299999999885e-05}, {'diff': 9.322299999999992e-05}, {'diff': 9.287500000000268e-05}, {'diff': 9.33879999999998e-05}, {'diff': 9.292999999999801e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:47.202" endtime="20201030 18:31:47.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:47.210" level="INFO">${ACCURACY} = {'diff': [9.293100000000096e-05, 9.340299999999885e-05, 9.322299999999992e-05, 9.287500000000268e-05, 9.33879999999998e-05, 9.292999999999801e-05, 9.29720000000002e-05, 9.32079999999974e-05, 9.3402999...</msg>
<status status="PASS" starttime="20201030 18:31:47.206" endtime="20201030 18:31:47.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.214" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 18:31:47.213" endtime="20201030 18:31:47.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.217" level="INFO">VALUE: [9.293100000000096e-05, 9.340299999999885e-05, 9.322299999999992e-05, 9.287500000000268e-05, 9.33879999999998e-05, 9.292999999999801e-05, 9.29720000000002e-05, 9.32079999999974e-05, 9.340299999999885e-05, 9.327799999999872e-05, 9.333400000000047e-05, 9.297299999999967e-05, 9.343099999999799e-05, 9.337499999999971e-05, 9.302700000000247e-05, 9.312500000000293e-05, 9.287499999999921e-05, 9.329200000000176e-05, 9.286099999999964e-05, 9.318100000000121e-05, 9.323600000000001e-05, 9.386100000000064e-05, 9.337499999999971e-05, 9.348600000000026e-05, 9.316700000000164e-05, 9.349999999999983e-05, 9.316699999999817e-05, 9.344399999999808e-05, 9.36529999999991e-05, 9.327800000000219e-05, 9.352799999999897e-05, 9.316700000000164e-05, 9.338899999999928e-05, 9.334700000000057e-05, 9.324999999999958e-05, 9.362499999999996e-05, 9.308300000000075e-05, 9.330600000000133e-05, 9.287499999999921e-05, 9.372299999999695e-05, 9.311099999999989e-05, 9.304200000000151e-05, 9.329099999999882e-05, 9.312499999999946e-05, 9.312499999999946e-05, 9.361100000000039e-05, 9.348600000000026e-05, 9.373600000000051e-05, 9.319500000000078e-05, 9.326400000000262e-05]</msg>
<status status="PASS" starttime="20201030 18:31:47.215" endtime="20201030 18:31:47.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.210" endtime="20201030 18:31:47.218"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:47.221" endtime="20201030 18:31:47.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.220" endtime="20201030 18:31:47.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.219" endtime="20201030 18:31:47.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.859" endtime="20201030 18:31:47.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:46.858" endtime="20201030 18:31:47.242"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.251" endtime="20201030 18:31:47.272"></status>
</kw>
<msg timestamp="20201030 18:31:47.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:47.249" endtime="20201030 18:31:47.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:47.274" endtime="20201030 18:31:47.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.276" endtime="20201030 18:31:47.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.247" endtime="20201030 18:31:47.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.245" endtime="20201030 18:31:47.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.285" endtime="20201030 18:31:47.571"></status>
</kw>
<msg timestamp="20201030 18:31:47.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023388653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023482847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:47.284" endtime="20201030 18:31:47.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023388653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023482847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:47.575" endtime="20201030 18:31:47.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.583" endtime="20201030 18:31:47.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.281" endtime="20201030 18:31:47.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.279" endtime="20201030 18:31:47.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:47.590" level="INFO">${RESULT} = [{'diff': 9.41940000000023e-05}, {'diff': 9.441599999999994e-05}, {'diff': 9.466699999999967e-05}, {'diff': 9.450000000000083e-05}, {'diff': 9.423600000000101e-05}, {'diff': 9.45140000000004e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:31:47.587" endtime="20201030 18:31:47.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:47.594" level="INFO">${ACCURACY} = {'diff': [9.41940000000023e-05, 9.441599999999994e-05, 9.466699999999967e-05, 9.450000000000083e-05, 9.423600000000101e-05, 9.45140000000004e-05, 9.461100000000139e-05, 9.444500000000203e-05, 9.458400...</msg>
<status status="PASS" starttime="20201030 18:31:47.591" endtime="20201030 18:31:47.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.598" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 18:31:47.597" endtime="20201030 18:31:47.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.601" level="INFO">VALUE: [9.41940000000023e-05, 9.441599999999994e-05, 9.466699999999967e-05, 9.450000000000083e-05, 9.423600000000101e-05, 9.45140000000004e-05, 9.461100000000139e-05, 9.444500000000203e-05, 9.458400000000172e-05, 9.445800000000212e-05, 9.459699999999835e-05, 9.476400000000065e-05, 9.409700000000132e-05, 9.430599999999886e-05, 9.399999999999686e-05, 9.40139999999999e-05, 9.426400000000015e-05, 9.468099999999924e-05, 9.437500000000071e-05, 9.415199999999666e-05, 9.440299999999985e-05, 9.431899999999896e-05, 9.40139999999999e-05, 9.416699999999917e-05, 9.38200000000014e-05, 9.400000000000033e-05, 9.411100000000089e-05, 9.436200000000061e-05, 9.458300000000225e-05, 9.440299999999985e-05, 9.442999999999951e-05, 9.476400000000065e-05, 9.473599999999804e-05, 9.429199999999929e-05, 9.445899999999813e-05, 9.43200000000019e-05, 9.454100000000007e-05, 9.426400000000015e-05, 9.431899999999896e-05, 9.386100000000064e-05, 9.472199999999847e-05, 9.450000000000083e-05, 9.437499999999724e-05, 9.459700000000182e-05, 9.475000000000108e-05, 9.434800000000104e-05, 9.423600000000101e-05, 9.417999999999926e-05, 9.440299999999985e-05, 9.417999999999926e-05]</msg>
<status status="PASS" starttime="20201030 18:31:47.600" endtime="20201030 18:31:47.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.595" endtime="20201030 18:31:47.603"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:47.607" endtime="20201030 18:31:47.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.605" endtime="20201030 18:31:47.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.604" endtime="20201030 18:31:47.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.243" endtime="20201030 18:31:47.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.243" endtime="20201030 18:31:47.627"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.636" endtime="20201030 18:31:47.656"></status>
</kw>
<msg timestamp="20201030 18:31:47.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:47.635" endtime="20201030 18:31:47.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:47.657" endtime="20201030 18:31:47.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.660" endtime="20201030 18:31:47.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.632" endtime="20201030 18:31:47.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.630" endtime="20201030 18:31:47.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.669" endtime="20201030 18:31:47.954"></status>
</kw>
<msg timestamp="20201030 18:31:47.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022164903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022260347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:47.668" endtime="20201030 18:31:47.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022164903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022260347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:47.959" endtime="20201030 18:31:47.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:47.967" endtime="20201030 18:31:47.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.665" endtime="20201030 18:31:47.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.663" endtime="20201030 18:31:47.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:47.974" level="INFO">${RESULT} = [{'diff': 9.544400000000008e-05}, {'diff': 9.547199999999922e-05}, {'diff': 9.527800000000072e-05}, {'diff': 9.522199999999897e-05}, {'diff': 9.488900000000078e-05}, {'diff': 9.527800000000072e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:47.971" endtime="20201030 18:31:47.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:47.980" level="INFO">${ACCURACY} = {'diff': [9.544400000000008e-05, 9.547199999999922e-05, 9.527800000000072e-05, 9.522199999999897e-05, 9.488900000000078e-05, 9.527800000000072e-05, 9.495899999999863e-05, 9.499999999999786e-05, 9.5540...</msg>
<status status="PASS" starttime="20201030 18:31:47.975" endtime="20201030 18:31:47.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.984" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 18:31:47.983" endtime="20201030 18:31:47.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:47.987" level="INFO">VALUE: [9.544400000000008e-05, 9.547199999999922e-05, 9.527800000000072e-05, 9.522199999999897e-05, 9.488900000000078e-05, 9.527800000000072e-05, 9.495899999999863e-05, 9.499999999999786e-05, 9.55409999999976e-05, 9.513900000000103e-05, 9.569400000000033e-05, 9.522199999999897e-05, 9.572199999999947e-05, 9.554200000000054e-05, 9.525000000000158e-05, 9.543099999999999e-05, 9.530599999999986e-05, 9.559699999999935e-05, 9.511100000000189e-05, 9.504200000000004e-05, 9.486100000000164e-05, 9.55140000000014e-05, 9.573599999999904e-05, 9.522299999999845e-05, 9.491600000000044e-05, 9.493099999999949e-05, 9.515200000000112e-05, 9.562500000000196e-05, 9.506899999999971e-05, 9.568000000000076e-05, 9.49859999999983e-05, 9.51530000000006e-05, 9.505599999999961e-05, 9.486100000000164e-05, 9.575000000000208e-05, 9.533299999999953e-05, 9.483299999999903e-05, 9.486100000000164e-05, 9.538900000000128e-05, 9.515299999999713e-05, 9.530599999999986e-05, 9.558399999999925e-05, 9.570899999999938e-05, 9.554200000000054e-05, 9.566700000000067e-05, 9.524999999999811e-05, 9.537500000000171e-05, 9.534700000000257e-05, 9.552800000000097e-05, 9.561099999999892e-05]</msg>
<status status="PASS" starttime="20201030 18:31:47.985" endtime="20201030 18:31:47.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.981" endtime="20201030 18:31:47.988"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:47.992" endtime="20201030 18:31:48.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.990" endtime="20201030 18:31:48.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.989" endtime="20201030 18:31:48.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.628" endtime="20201030 18:31:48.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:47.628" endtime="20201030 18:31:48.013"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.021" endtime="20201030 18:31:48.042"></status>
</kw>
<msg timestamp="20201030 18:31:48.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.020" endtime="20201030 18:31:48.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.043" endtime="20201030 18:31:48.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.046" endtime="20201030 18:31:48.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.017" endtime="20201030 18:31:48.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.015" endtime="20201030 18:31:48.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.055" endtime="20201030 18:31:48.342"></status>
</kw>
<msg timestamp="20201030 18:31:48.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022286514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022382639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:48.053" endtime="20201030 18:31:48.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022286514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022382639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:48.346" endtime="20201030 18:31:48.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.355" endtime="20201030 18:31:48.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.051" endtime="20201030 18:31:48.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.049" endtime="20201030 18:31:48.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:48.361" level="INFO">${RESULT} = [{'diff': 9.612499999999899e-05}, {'diff': 9.602800000000147e-05}, {'diff': 9.654200000000154e-05}, {'diff': 9.623699999999902e-05}, {'diff': 9.623600000000301e-05}, {'diff': 9.670799999999743e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:48.358" endtime="20201030 18:31:48.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:48.365" level="INFO">${ACCURACY} = {'diff': [9.612499999999899e-05, 9.602800000000147e-05, 9.654200000000154e-05, 9.623699999999902e-05, 9.623600000000301e-05, 9.670799999999743e-05, 9.591600000000144e-05, 9.669500000000081e-05, 9.5985...</msg>
<status status="PASS" starttime="20201030 18:31:48.362" endtime="20201030 18:31:48.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.370" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 18:31:48.369" endtime="20201030 18:31:48.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.372" level="INFO">VALUE: [9.612499999999899e-05, 9.602800000000147e-05, 9.654200000000154e-05, 9.623699999999902e-05, 9.623600000000301e-05, 9.670799999999743e-05, 9.591600000000144e-05, 9.669500000000081e-05, 9.59859999999993e-05, 9.619500000000031e-05, 9.661099999999992e-05, 9.627800000000172e-05, 9.595899999999963e-05, 9.631899999999749e-05, 9.673600000000004e-05, 9.605500000000114e-05, 9.640300000000185e-05, 9.615299999999813e-05, 9.647200000000022e-05, 9.601399999999843e-05, 9.616700000000117e-05, 9.588899999999831e-05, 9.686100000000017e-05, 9.669400000000133e-05, 9.643000000000151e-05, 9.673600000000004e-05, 9.673600000000004e-05, 9.590299999999788e-05, 9.676399999999918e-05, 9.665299999999863e-05, 9.594400000000058e-05, 9.651299999999946e-05, 9.622199999999997e-05, 9.588899999999831e-05, 9.665299999999863e-05, 9.612500000000246e-05, 9.64859999999998e-05, 9.601399999999843e-05, 9.6334e-05, 9.625000000000258e-05, 9.613900000000203e-05, 9.626399999999868e-05, 9.658299999999731e-05, 9.587499999999874e-05, 9.638900000000228e-05, 9.644400000000108e-05, 9.598600000000276e-05, 9.632000000000043e-05, 9.632000000000043e-05, 9.673600000000004e-05]</msg>
<status status="PASS" starttime="20201030 18:31:48.371" endtime="20201030 18:31:48.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.366" endtime="20201030 18:31:48.374"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:48.377" endtime="20201030 18:31:48.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.376" endtime="20201030 18:31:48.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.375" endtime="20201030 18:31:48.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.014" endtime="20201030 18:31:48.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.013" endtime="20201030 18:31:48.398"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.407" endtime="20201030 18:31:48.427"></status>
</kw>
<msg timestamp="20201030 18:31:48.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.405" endtime="20201030 18:31:48.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.429" endtime="20201030 18:31:48.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.431" endtime="20201030 18:31:48.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.403" endtime="20201030 18:31:48.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.400" endtime="20201030 18:31:48.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.441" endtime="20201030 18:31:48.726"></status>
</kw>
<msg timestamp="20201030 18:31:48.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0230365, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023133722, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:48.439" endtime="20201030 18:31:48.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0230365, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023133722, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:48.730" endtime="20201030 18:31:48.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.738" endtime="20201030 18:31:48.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.436" endtime="20201030 18:31:48.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.435" endtime="20201030 18:31:48.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:48.745" level="INFO">${RESULT} = [{'diff': 9.72219999999975e-05}, {'diff': 9.747200000000122e-05}, {'diff': 9.730600000000186e-05}, {'diff': 9.686100000000017e-05}, {'diff': 9.687499999999974e-05}, {'diff': 9.723700000000002e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:48.742" endtime="20201030 18:31:48.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:48.749" level="INFO">${ACCURACY} = {'diff': [9.72219999999975e-05, 9.747200000000122e-05, 9.730600000000186e-05, 9.686100000000017e-05, 9.687499999999974e-05, 9.723700000000002e-05, 9.723700000000002e-05, 9.706899999999824e-05, 9.70970...</msg>
<status status="PASS" starttime="20201030 18:31:48.746" endtime="20201030 18:31:48.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.754" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 18:31:48.753" endtime="20201030 18:31:48.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.756" level="INFO">VALUE: [9.72219999999975e-05, 9.747200000000122e-05, 9.730600000000186e-05, 9.686100000000017e-05, 9.687499999999974e-05, 9.723700000000002e-05, 9.723700000000002e-05, 9.706899999999824e-05, 9.709700000000085e-05, 9.705500000000214e-05, 9.715299999999913e-05, 9.718100000000174e-05, 9.697200000000072e-05, 9.712499999999999e-05, 9.693100000000149e-05, 9.695900000000063e-05, 9.772200000000147e-05, 9.684699999999713e-05, 9.747199999999775e-05, 9.718099999999827e-05, 9.709700000000085e-05, 9.743100000000199e-05, 9.719499999999784e-05, 9.759800000000082e-05, 9.711100000000042e-05, 9.756900000000221e-05, 9.761100000000092e-05, 9.766599999999973e-05, 9.763900000000006e-05, 9.761100000000092e-05, 9.716700000000217e-05, 9.725000000000011e-05, 9.719500000000131e-05, 9.7334000000001e-05, 9.69730000000002e-05, 9.74019999999999e-05, 9.686100000000017e-05, 9.765299999999963e-05, 9.776400000000018e-05, 9.765299999999963e-05, 9.773600000000104e-05, 9.722200000000097e-05, 9.7027999999999e-05, 9.744499999999809e-05, 9.726300000000021e-05, 9.74019999999999e-05, 9.731900000000196e-05, 9.731899999999849e-05, 9.733299999999806e-05, 9.747200000000122e-05]</msg>
<status status="PASS" starttime="20201030 18:31:48.755" endtime="20201030 18:31:48.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.750" endtime="20201030 18:31:48.758"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:48.762" endtime="20201030 18:31:48.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.761" endtime="20201030 18:31:48.782"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.759" endtime="20201030 18:31:48.782"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.399" endtime="20201030 18:31:48.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.398" endtime="20201030 18:31:48.783"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.792" endtime="20201030 18:31:48.812"></status>
</kw>
<msg timestamp="20201030 18:31:48.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.790" endtime="20201030 18:31:48.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:48.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:48.813" endtime="20201030 18:31:48.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.816" endtime="20201030 18:31:48.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.787" endtime="20201030 18:31:48.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.785" endtime="20201030 18:31:48.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:48.825" endtime="20201030 18:31:49.112"></status>
</kw>
<msg timestamp="20201030 18:31:49.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022301597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022399542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:48.823" endtime="20201030 18:31:49.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022301597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022399542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:49.116" endtime="20201030 18:31:49.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.124" endtime="20201030 18:31:49.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.821" endtime="20201030 18:31:49.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.819" endtime="20201030 18:31:49.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:49.131" level="INFO">${RESULT} = [{'diff': 9.794500000000206e-05}, {'diff': 9.790299999999988e-05}, {'diff': 9.859800000000182e-05}, {'diff': 9.806899999999924e-05}, {'diff': 9.863900000000106e-05}, {'diff': 9.874999999999814e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:49.128" endtime="20201030 18:31:49.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:49.136" level="INFO">${ACCURACY} = {'diff': [9.794500000000206e-05, 9.790299999999988e-05, 9.859800000000182e-05, 9.806899999999924e-05, 9.863900000000106e-05, 9.874999999999814e-05, 9.793099999999902e-05, 9.819399999999937e-05, 9.8764...</msg>
<status status="PASS" starttime="20201030 18:31:49.132" endtime="20201030 18:31:49.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.140" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 18:31:49.139" endtime="20201030 18:31:49.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.143" level="INFO">VALUE: [9.794500000000206e-05, 9.790299999999988e-05, 9.859800000000182e-05, 9.806899999999924e-05, 9.863900000000106e-05, 9.874999999999814e-05, 9.793099999999902e-05, 9.819399999999937e-05, 9.876400000000118e-05, 9.818099999999927e-05, 9.812500000000099e-05, 9.876400000000118e-05, 9.86800000000003e-05, 9.829100000000035e-05, 9.845799999999919e-05, 9.786100000000117e-05, 9.805599999999914e-05, 9.809700000000185e-05, 9.786100000000117e-05, 9.85280000000005e-05, 9.801400000000043e-05, 9.795799999999869e-05, 9.822300000000145e-05, 9.869399999999987e-05, 9.81799999999998e-05, 9.843099999999952e-05, 9.859700000000235e-05, 9.840300000000038e-05, 9.88059999999999e-05, 9.837500000000124e-05, 9.845799999999919e-05, 9.801400000000043e-05, 9.813900000000056e-05, 9.800000000000086e-05, 9.845799999999919e-05, 9.82219999999985e-05, 9.8721999999999e-05, 9.876399999999771e-05, 9.794399999999912e-05, 9.872200000000247e-05, 9.859699999999888e-05, 9.840300000000038e-05, 9.876399999999771e-05, 9.833300000000253e-05, 9.870799999999944e-05, 9.848599999999832e-05, 9.869499999999934e-05, 9.801400000000043e-05, 9.80410000000001e-05, 9.869399999999987e-05]</msg>
<status status="PASS" starttime="20201030 18:31:49.142" endtime="20201030 18:31:49.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.137" endtime="20201030 18:31:49.144"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:49.148" endtime="20201030 18:31:49.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.147" endtime="20201030 18:31:49.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.145" endtime="20201030 18:31:49.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.784" endtime="20201030 18:31:49.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:48.783" endtime="20201030 18:31:49.169"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.177" endtime="20201030 18:31:49.197"></status>
</kw>
<msg timestamp="20201030 18:31:49.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:49.176" endtime="20201030 18:31:49.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:49.199" endtime="20201030 18:31:49.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.201" endtime="20201030 18:31:49.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.173" endtime="20201030 18:31:49.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.171" endtime="20201030 18:31:49.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.210" endtime="20201030 18:31:49.497"></status>
</kw>
<msg timestamp="20201030 18:31:49.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021929611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022029194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:49.209" endtime="20201030 18:31:49.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021929611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022029194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:49.501" endtime="20201030 18:31:49.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.509" endtime="20201030 18:31:49.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.206" endtime="20201030 18:31:49.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.204" endtime="20201030 18:31:49.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:49.516" level="INFO">${RESULT} = [{'diff': 9.958299999999684e-05}, {'diff': 9.970800000000044e-05}, {'diff': 9.883299999999956e-05}, {'diff': 9.958300000000031e-05}, {'diff': 9.88059999999999e-05}, {'diff': 9.912499999999852e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:49.513" endtime="20201030 18:31:49.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:49.520" level="INFO">${ACCURACY} = {'diff': [9.958299999999684e-05, 9.970800000000044e-05, 9.883299999999956e-05, 9.958300000000031e-05, 9.88059999999999e-05, 9.912499999999852e-05, 9.958399999999978e-05, 9.901400000000143e-05, 9.92910...</msg>
<status status="PASS" starttime="20201030 18:31:49.517" endtime="20201030 18:31:49.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.524" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 18:31:49.523" endtime="20201030 18:31:49.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.527" level="INFO">VALUE: [9.958299999999684e-05, 9.970800000000044e-05, 9.883299999999956e-05, 9.958300000000031e-05, 9.88059999999999e-05, 9.912499999999852e-05, 9.958399999999978e-05, 9.901400000000143e-05, 9.929100000000135e-05, 9.966600000000173e-05, 9.887499999999827e-05, 9.93609999999992e-05, 9.95280000000015e-05, 9.901400000000143e-05, 9.929200000000082e-05, 9.976400000000218e-05, 9.957000000000021e-05, 9.94869999999988e-05, 9.931900000000049e-05, 9.954099999999813e-05, 9.940300000000138e-05, 9.944400000000062e-05, 9.915300000000113e-05, 9.937499999999877e-05, 9.887499999999827e-05, 9.969500000000034e-05, 9.972299999999948e-05, 9.906900000000024e-05, 9.877699999999781e-05, 9.944400000000062e-05, 9.9722e-05, 9.969500000000034e-05, 9.969500000000034e-05, 9.937499999999877e-05, 9.888799999999837e-05, 9.94999999999989e-05, 9.952699999999856e-05, 9.887500000000174e-05, 9.93609999999992e-05, 9.963899999999859e-05, 9.91670000000007e-05, 9.945899999999966e-05, 9.965300000000163e-05, 9.945899999999966e-05, 9.88479999999986e-05, 9.894400000000012e-05, 9.887499999999827e-05, 9.973599999999957e-05, 9.89999999999984e-05, 9.926400000000168e-05]</msg>
<status status="PASS" starttime="20201030 18:31:49.526" endtime="20201030 18:31:49.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.521" endtime="20201030 18:31:49.528"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:49.532" endtime="20201030 18:31:49.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.530" endtime="20201030 18:31:49.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.529" endtime="20201030 18:31:49.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.170" endtime="20201030 18:31:49.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.169" endtime="20201030 18:31:49.553"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.561" endtime="20201030 18:31:49.583"></status>
</kw>
<msg timestamp="20201030 18:31:49.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:49.560" endtime="20201030 18:31:49.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:49.584" endtime="20201030 18:31:49.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.587" endtime="20201030 18:31:49.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.557" endtime="20201030 18:31:49.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.555" endtime="20201030 18:31:49.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.596" endtime="20201030 18:31:49.883"></status>
</kw>
<msg timestamp="20201030 18:31:49.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023151819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02325225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:49.595" endtime="20201030 18:31:49.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023151819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02325225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:49.887" endtime="20201030 18:31:49.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.895" endtime="20201030 18:31:49.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.592" endtime="20201030 18:31:49.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.590" endtime="20201030 18:31:49.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:49.902" level="INFO">${RESULT} = [{'diff': 0.00010043099999999805}, {'diff': 0.0001000419999999981}, {'diff': 9.998599999999983e-05}, {'diff': 0.00010066699999999873}, {'diff': 9.982000000000046e-05}, {'diff': 9.98609999999997e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:31:49.899" endtime="20201030 18:31:49.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:49.906" level="INFO">${ACCURACY} = {'diff': [0.00010043099999999805, 0.0001000419999999981, 9.998599999999983e-05, 0.00010066699999999873, 9.982000000000046e-05, 9.98609999999997e-05, 0.00010062500000000002, 0.00010047200000000076, 0.0...</msg>
<status status="PASS" starttime="20201030 18:31:49.903" endtime="20201030 18:31:49.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.911" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 18:31:49.910" endtime="20201030 18:31:49.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.913" level="INFO">VALUE: [0.00010043099999999805, 0.0001000419999999981, 9.998599999999983e-05, 0.00010066699999999873, 9.982000000000046e-05, 9.98609999999997e-05, 0.00010062500000000002, 0.00010047200000000076, 0.00010017999999999833, 0.00010004200000000157, 0.00010073600000000058, 0.00010004200000000157, 9.98479999999996e-05, 9.977800000000175e-05, 0.00010030499999999845, 0.00010030499999999845, 0.00010019400000000137, 9.981899999999752e-05, 0.00010015300000000213, 0.00010027800000000225, 9.993099999999755e-05, 0.00010044399999999815, 0.00010016699999999823, 9.997200000000026e-05, 9.99999999999994e-05, 0.00010047200000000076, 9.998599999999983e-05, 0.00010075000000000014, 0.0001000419999999981, 9.99999999999994e-05, 0.00010009799999999985, 0.00010077699999999981, 0.00010031900000000149, 0.00010051399999999946, 0.0001002220000000005, 9.984700000000013e-05, 0.00010079200000000232, 0.00010052799999999903, 0.00010043100000000152, 0.00010027799999999878, 0.00010001399999999896, 0.0001004999999999999, 0.00010011099999999995, 0.00010062500000000002, 0.00010058299999999784, 9.995800000000069e-05, 9.983300000000056e-05, 9.98609999999997e-05, 0.00010063800000000012, 0.00010002799999999853]</msg>
<status status="PASS" starttime="20201030 18:31:49.912" endtime="20201030 18:31:49.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.907" endtime="20201030 18:31:49.919"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:49.923" endtime="20201030 18:31:49.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.922" endtime="20201030 18:31:49.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.920" endtime="20201030 18:31:49.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.554" endtime="20201030 18:31:49.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.553" endtime="20201030 18:31:49.944"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.953" endtime="20201030 18:31:49.973"></status>
</kw>
<msg timestamp="20201030 18:31:49.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:49.951" endtime="20201030 18:31:49.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:49.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:49.975" endtime="20201030 18:31:49.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.977" endtime="20201030 18:31:49.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.949" endtime="20201030 18:31:49.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.947" endtime="20201030 18:31:49.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:49.987" endtime="20201030 18:31:50.274"></status>
</kw>
<msg timestamp="20201030 18:31:50.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022539069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022640833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:49.985" endtime="20201030 18:31:50.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022539069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022640833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:50.278" endtime="20201030 18:31:50.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.287" endtime="20201030 18:31:50.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.982" endtime="20201030 18:31:50.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.981" endtime="20201030 18:31:50.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:50.293" level="INFO">${RESULT} = [{'diff': 0.00010176400000000071}, {'diff': 0.00010140299999999991}, {'diff': 0.0001008610000000007}, {'diff': 0.00010123600000000108}, {'diff': 0.00010087500000000027}, {'diff': 0.0001009449999999981...</msg>
<status status="PASS" starttime="20201030 18:31:50.290" endtime="20201030 18:31:50.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:50.301" level="INFO">${ACCURACY} = {'diff': [0.00010176400000000071, 0.00010140299999999991, 0.0001008610000000007, 0.00010123600000000108, 0.00010087500000000027, 0.00010094499999999812, 0.00010097299999999726, 0.00010112500000000052,...</msg>
<status status="PASS" starttime="20201030 18:31:50.294" endtime="20201030 18:31:50.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.306" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 18:31:50.305" endtime="20201030 18:31:50.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.308" level="INFO">VALUE: [0.00010176400000000071, 0.00010140299999999991, 0.0001008610000000007, 0.00010123600000000108, 0.00010087500000000027, 0.00010094499999999812, 0.00010097299999999726, 0.00010112500000000052, 0.00010083299999999809, 0.00010145799999999872, 0.00010154100000000013, 0.00010133299999999859, 0.00010116699999999923, 0.000101722000000002, 0.00010116699999999923, 0.00010127799999999978, 0.00010094500000000159, 0.00010162500000000102, 0.0001015549999999997, 0.00010174999999999768, 0.00010163900000000059, 0.0001012220000000015, 0.00010112500000000052, 0.00010177800000000028, 0.00010105599999999867, 0.00010170900000000191, 0.0001013610000000012, 0.00010112500000000052, 0.00010134700000000163, 0.00010147200000000176, 0.0001013060000000024, 0.00010147199999999829, 0.00010152800000000003, 0.00010152800000000003, 0.00010126400000000021, 0.00010163900000000059, 0.00010138900000000034, 0.00010117999999999933, 0.00010176399999999725, 0.00010105599999999867, 0.00010101399999999996, 0.00010104200000000257, 0.00010118100000000227, 0.0001015549999999997, 0.00010156899999999927, 0.00010145799999999872, 0.00010115299999999966, 0.000101722000000002, 0.00010107000000000171, 0.00010161100000000145]</msg>
<status status="PASS" starttime="20201030 18:31:50.307" endtime="20201030 18:31:50.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.302" endtime="20201030 18:31:50.310"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:50.313" endtime="20201030 18:31:50.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.312" endtime="20201030 18:31:50.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.311" endtime="20201030 18:31:50.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.945" endtime="20201030 18:31:50.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:49.944" endtime="20201030 18:31:50.338"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.357" endtime="20201030 18:31:50.381"></status>
</kw>
<msg timestamp="20201030 18:31:50.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:50.354" endtime="20201030 18:31:50.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:50.384" endtime="20201030 18:31:50.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.390" endtime="20201030 18:31:50.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.348" endtime="20201030 18:31:50.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.343" endtime="20201030 18:31:50.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.410" endtime="20201030 18:31:50.699"></status>
</kw>
<msg timestamp="20201030 18:31:50.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038160556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038263028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:50.406" endtime="20201030 18:31:50.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038160556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038263028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:50.703" endtime="20201030 18:31:50.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.711" endtime="20201030 18:31:50.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.401" endtime="20201030 18:31:50.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.397" endtime="20201030 18:31:50.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:50.718" level="INFO">${RESULT} = [{'diff': 0.00010247199999999929}, {'diff': 0.00010238900000000134}, {'diff': 0.0001025410000000046}, {'diff': 0.00010190300000000041}, {'diff': 0.00010181900000000299}, {'diff': 0.0001020419999999966...</msg>
<status status="PASS" starttime="20201030 18:31:50.715" endtime="20201030 18:31:50.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:50.722" level="INFO">${ACCURACY} = {'diff': [0.00010247199999999929, 0.00010238900000000134, 0.0001025410000000046, 0.00010190300000000041, 0.00010181900000000299, 0.00010204199999999664, 0.00010238900000000134, 0.00010247199999999929,...</msg>
<status status="PASS" starttime="20201030 18:31:50.719" endtime="20201030 18:31:50.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.727" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 18:31:50.725" endtime="20201030 18:31:50.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.729" level="INFO">VALUE: [0.00010247199999999929, 0.00010238900000000134, 0.0001025410000000046, 0.00010190300000000041, 0.00010181900000000299, 0.00010204199999999664, 0.00010238900000000134, 0.00010247199999999929, 0.00010219499999999937, 0.00010270899999999944, 0.00010262499999999508, 0.00010224999999999818, 0.00010263899999999465, 0.0001023060000000034, 0.00010261100000000245, 0.00010276399999999825, 0.00010231899999999655, 0.00010261099999999551, 0.00010191699999999998, 0.00010222199999999904, 0.00010241700000000048, 0.00010209800000000185, 0.00010216599999999382, 0.00010184700000000213, 0.00010244400000000015, 0.00010215300000000066, 0.00010183299999999562, 0.00010266700000000073, 0.00010259800000000235, 0.00010223600000000554, 0.00010208400000000228, 0.00010229099999999741, 0.00010216600000000076, 0.00010197199999999879, 0.00010262499999999508, 0.00010276399999999825, 0.00010255600000000364, 0.00010272299999999901, 0.00010274999999999868, 0.00010212499999999458, 0.00010237500000000177, 0.00010197199999999879, 0.0001021939999999999, 0.00010198599999999836, 0.00010240300000000091, 0.00010259700000000288, 0.00010240300000000091, 0.00010261199999999499, 0.00010268000000000083, 0.00010184700000000213]</msg>
<status status="PASS" starttime="20201030 18:31:50.728" endtime="20201030 18:31:50.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.723" endtime="20201030 18:31:50.730"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:50.734" endtime="20201030 18:31:50.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.733" endtime="20201030 18:31:50.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.731" endtime="20201030 18:31:50.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.340" endtime="20201030 18:31:50.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.339" endtime="20201030 18:31:50.755"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.764" endtime="20201030 18:31:50.784"></status>
</kw>
<msg timestamp="20201030 18:31:50.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:50.762" endtime="20201030 18:31:50.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:50.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:50.786" endtime="20201030 18:31:50.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.788" endtime="20201030 18:31:50.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.760" endtime="20201030 18:31:50.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.757" endtime="20201030 18:31:50.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:50.798" endtime="20201030 18:31:51.085"></status>
</kw>
<msg timestamp="20201030 18:31:51.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023192458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023295806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:50.796" endtime="20201030 18:31:51.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023192458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023295806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:51.089" endtime="20201030 18:31:51.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.097" endtime="20201030 18:31:51.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.794" endtime="20201030 18:31:51.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.792" endtime="20201030 18:31:51.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:51.104" level="INFO">${RESULT} = [{'diff': 0.00010334799999999963}, {'diff': 0.00010297199999999979}, {'diff': 0.00010347200000000029}, {'diff': 0.00010359799999999988}, {'diff': 0.00010311200000000242}, {'diff': 0.000103540999999998...</msg>
<status status="PASS" starttime="20201030 18:31:51.101" endtime="20201030 18:31:51.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:51.108" level="INFO">${ACCURACY} = {'diff': [0.00010334799999999963, 0.00010297199999999979, 0.00010347200000000029, 0.00010359799999999988, 0.00010311200000000242, 0.00010354099999999866, 0.00010366600000000226, 0.00010326399999999875...</msg>
<status status="PASS" starttime="20201030 18:31:51.105" endtime="20201030 18:31:51.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.113" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 18:31:51.112" endtime="20201030 18:31:51.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.115" level="INFO">VALUE: [0.00010334799999999963, 0.00010297199999999979, 0.00010347200000000029, 0.00010359799999999988, 0.00010311200000000242, 0.00010354099999999866, 0.00010366600000000226, 0.00010326399999999875, 0.00010377800000000229, 0.0001036940000000014, 0.00010290299999999794, 0.00010376399999999925, 0.0001033749999999993, 0.00010373699999999958, 0.00010313799999999915, 0.00010331900000000102, 0.00010355499999999823, 0.00010359700000000041, 0.00010299999999999893, 0.00010361099999999998, 0.00010347200000000029, 0.00010366699999999826, 0.00010372300000000001, 0.000103513999999999, 0.00010349999999999943, 0.000103207999999997, 0.00010288899999999837, 0.00010379199999999839, 0.0001036810000000013, 0.00010343100000000105, 0.00010358400000000031, 0.0001031940000000009, 0.00010315300000000166, 0.00010333299999999712, 0.00010352800000000204, 0.00010324999999999918, 0.0001033749999999993, 0.00010377799999999882, 0.00010297199999999979, 0.00010282, 0.00010370800000000097, 0.00010380499999999848, 0.00010313899999999862, 0.0001035689999999978, 0.00010301400000000197, 0.00010356999999999728, 0.00010359700000000041, 0.00010302799999999807, 0.00010327800000000179, 0.00010329100000000188]</msg>
<status status="PASS" starttime="20201030 18:31:51.114" endtime="20201030 18:31:51.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.109" endtime="20201030 18:31:51.117"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:51.121" endtime="20201030 18:31:51.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.120" endtime="20201030 18:31:51.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.118" endtime="20201030 18:31:51.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.756" endtime="20201030 18:31:51.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:50.755" endtime="20201030 18:31:51.142"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.151" endtime="20201030 18:31:51.171"></status>
</kw>
<msg timestamp="20201030 18:31:51.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:51.149" endtime="20201030 18:31:51.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:51.173" endtime="20201030 18:31:51.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.175" endtime="20201030 18:31:51.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.147" endtime="20201030 18:31:51.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.145" endtime="20201030 18:31:51.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.185" endtime="20201030 18:31:51.471"></status>
</kw>
<msg timestamp="20201030 18:31:51.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022344139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022448667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:51.183" endtime="20201030 18:31:51.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022344139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022448667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:51.475" endtime="20201030 18:31:51.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.483" endtime="20201030 18:31:51.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.180" endtime="20201030 18:31:51.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.179" endtime="20201030 18:31:51.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:51.490" level="INFO">${RESULT} = [{'diff': 0.00010452799999999957}, {'diff': 0.0001040139999999995}, {'diff': 0.0001045689999999988}, {'diff': 0.00010462500000000055}, {'diff': 0.00010445799999999825}, {'diff': 0.00010386099999999676...</msg>
<status status="PASS" starttime="20201030 18:31:51.486" endtime="20201030 18:31:51.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:51.495" level="INFO">${ACCURACY} = {'diff': [0.00010452799999999957, 0.0001040139999999995, 0.0001045689999999988, 0.00010462500000000055, 0.00010445799999999825, 0.00010386099999999676, 0.00010434699999999769, 0.00010475000000000068, ...</msg>
<status status="PASS" starttime="20201030 18:31:51.491" endtime="20201030 18:31:51.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.499" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 18:31:51.498" endtime="20201030 18:31:51.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.502" level="INFO">VALUE: [0.00010452799999999957, 0.0001040139999999995, 0.0001045689999999988, 0.00010462500000000055, 0.00010445799999999825, 0.00010386099999999676, 0.00010434699999999769, 0.00010475000000000068, 0.00010475000000000068, 0.00010393000000000208, 0.00010461100000000098, 0.00010438899999999987, 0.00010438899999999987, 0.00010420900000000094, 0.00010416700000000223, 0.00010384699999999719, 0.0001042360000000006, 0.00010476400000000025, 0.00010406900000000177, 0.00010475000000000068, 0.00010450000000000043, 0.00010394400000000165, 0.00010455499999999923, 0.00010427799999999932, 0.00010441700000000248, 0.0001043750000000003, 0.00010466699999999926, 0.00010417999999999886, 0.00010381900000000152, 0.00010455499999999923, 0.0001038749999999998, 0.00010409700000000091, 0.00010388899999999937, 0.00010438899999999987, 0.00010411100000000048, 0.00010411199999999995, 0.00010463800000000065, 0.00010452700000000009, 0.00010438899999999987, 0.000104514, 0.0001046949999999984, 0.00010413899999999962, 0.00010448599999999739, 0.00010438899999999987, 0.00010422300000000051, 0.00010451300000000052, 0.00010388899999999937, 0.00010461099999999751, 0.00010450000000000043, 0.00010433299999999812]</msg>
<status status="PASS" starttime="20201030 18:31:51.500" endtime="20201030 18:31:51.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.496" endtime="20201030 18:31:51.503"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:51.507" endtime="20201030 18:31:51.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.505" endtime="20201030 18:31:51.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.504" endtime="20201030 18:31:51.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.143" endtime="20201030 18:31:51.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.142" endtime="20201030 18:31:51.528"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.537" endtime="20201030 18:31:51.557"></status>
</kw>
<msg timestamp="20201030 18:31:51.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:51.535" endtime="20201030 18:31:51.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:51.558" endtime="20201030 18:31:51.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.561" endtime="20201030 18:31:51.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.532" endtime="20201030 18:31:51.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.530" endtime="20201030 18:31:51.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.570" endtime="20201030 18:31:51.857"></status>
</kw>
<msg timestamp="20201030 18:31:51.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022354514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022459542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:51.569" endtime="20201030 18:31:51.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022354514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022459542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:51.863" endtime="20201030 18:31:51.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.871" endtime="20201030 18:31:51.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.566" endtime="20201030 18:31:51.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.564" endtime="20201030 18:31:51.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:51.878" level="INFO">${RESULT} = [{'diff': 0.00010502800000000007}, {'diff': 0.0001055689999999998}, {'diff': 0.00010568000000000036}, {'diff': 0.0001055689999999998}, {'diff': 0.000105514000000001}, {'diff': 0.0001057499999999982}, ...</msg>
<status status="PASS" starttime="20201030 18:31:51.875" endtime="20201030 18:31:51.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:51.882" level="INFO">${ACCURACY} = {'diff': [0.00010502800000000007, 0.0001055689999999998, 0.00010568000000000036, 0.0001055689999999998, 0.000105514000000001, 0.0001057499999999982, 0.00010531999999999903, 0.0001057079999999995, 0.00...</msg>
<status status="PASS" starttime="20201030 18:31:51.879" endtime="20201030 18:31:51.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.886" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 18:31:51.885" endtime="20201030 18:31:51.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.889" level="INFO">VALUE: [0.00010502800000000007, 0.0001055689999999998, 0.00010568000000000036, 0.0001055689999999998, 0.000105514000000001, 0.0001057499999999982, 0.00010531999999999903, 0.0001057079999999995, 0.00010579200000000039, 0.00010502800000000007, 0.00010562499999999808, 0.00010484700000000166, 0.00010572199999999907, 0.00010533300000000259, 0.00010544399999999968, 0.00010572199999999907, 0.00010554200000000014, 0.00010540300000000044, 0.00010572199999999907, 0.00010516600000000029, 0.00010512500000000105, 0.00010579199999999692, 0.00010530599999999946, 0.00010513900000000062, 0.00010538900000000087, 0.00010559700000000241, 0.00010576300000000177, 0.00010516699999999976, 0.00010526400000000075, 0.0001048750000000008, 0.00010544499999999915, 0.00010534700000000216, 0.00010563900000000112, 0.0001050140000000005, 0.0001050140000000005, 0.00010483400000000156, 0.0001052499999999977, 0.00010515200000000072, 0.00010530499999999998, 0.0001055689999999998, 0.00010486100000000123, 0.0001051949999999989, 0.00010536100000000173, 0.0001055559999999997, 0.00010488900000000037, 0.00010537499999999783, 0.00010517999999999986, 0.00010562500000000155, 0.00010494400000000265, 0.00010545799999999925]</msg>
<status status="PASS" starttime="20201030 18:31:51.888" endtime="20201030 18:31:51.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.883" endtime="20201030 18:31:51.890"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:51.894" endtime="20201030 18:31:51.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.893" endtime="20201030 18:31:51.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.891" endtime="20201030 18:31:51.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.529" endtime="20201030 18:31:51.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.528" endtime="20201030 18:31:51.915"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.924" endtime="20201030 18:31:51.945"></status>
</kw>
<msg timestamp="20201030 18:31:51.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:51.923" endtime="20201030 18:31:51.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:51.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:51.947" endtime="20201030 18:31:51.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.950" endtime="20201030 18:31:51.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.920" endtime="20201030 18:31:51.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.918" endtime="20201030 18:31:51.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:51.959" endtime="20201030 18:31:52.245"></status>
</kw>
<msg timestamp="20201030 18:31:52.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023345556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023451458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:51.957" endtime="20201030 18:31:52.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023345556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023451458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:52.249" endtime="20201030 18:31:52.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.258" endtime="20201030 18:31:52.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.955" endtime="20201030 18:31:52.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.953" endtime="20201030 18:31:52.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:52.266" level="INFO">${RESULT} = [{'diff': 0.00010590200000000147}, {'diff': 0.0001060690000000003}, {'diff': 0.00010629200000000089}, {'diff': 0.00010652800000000157}, {'diff': 0.00010659699999999994}, {'diff': 0.0001058199999999995...</msg>
<status status="PASS" starttime="20201030 18:31:52.262" endtime="20201030 18:31:52.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:52.270" level="INFO">${ACCURACY} = {'diff': [0.00010590200000000147, 0.0001060690000000003, 0.00010629200000000089, 0.00010652800000000157, 0.00010659699999999994, 0.00010581999999999953, 0.00010661199999999899, 0.00010683300000000062,...</msg>
<status status="PASS" starttime="20201030 18:31:52.267" endtime="20201030 18:31:52.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.274" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 18:31:52.273" endtime="20201030 18:31:52.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.277" level="INFO">VALUE: [0.00010590200000000147, 0.0001060690000000003, 0.00010629200000000089, 0.00010652800000000157, 0.00010659699999999994, 0.00010581999999999953, 0.00010661199999999899, 0.00010683300000000062, 0.00010584699999999919, 0.00010609699999999944, 0.00010590299999999747, 0.00010655599999999724, 0.00010629200000000089, 0.0001067499999999992, 0.00010591700000000051, 0.00010643100000000058, 0.00010611100000000248, 0.00010588900000000137, 0.00010630500000000098, 0.00010612500000000205, 0.00010616700000000076, 0.00010615300000000119, 0.00010588900000000137, 0.00010648599999999939, 0.00010627700000000184, 0.00010626399999999828, 0.000106208, 0.00010618000000000086, 0.00010640299999999797, 0.00010662499999999908, 0.00010659699999999994, 0.00010651399999999853, 0.0001062499999999987, 0.00010630500000000098, 0.00010672200000000007, 0.00010644399999999721, 0.00010618100000000033, 0.00010615300000000119, 0.00010661100000000298, 0.00010602800000000107, 0.00010619400000000043, 0.00010644400000000068, 0.00010586099999999876, 0.00010583299999999962, 0.00010672200000000007, 0.00010651399999999853, 0.00010593100000000008, 0.00010657000000000028, 0.00010598599999999889, 0.00010644500000000015]</msg>
<status status="PASS" starttime="20201030 18:31:52.275" endtime="20201030 18:31:52.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.270" endtime="20201030 18:31:52.279"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:52.283" endtime="20201030 18:31:52.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.281" endtime="20201030 18:31:52.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.280" endtime="20201030 18:31:52.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.916" endtime="20201030 18:31:52.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:51.915" endtime="20201030 18:31:52.304"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.313" endtime="20201030 18:31:52.333"></status>
</kw>
<msg timestamp="20201030 18:31:52.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:52.311" endtime="20201030 18:31:52.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:52.335" endtime="20201030 18:31:52.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.337" endtime="20201030 18:31:52.339"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.308" endtime="20201030 18:31:52.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.306" endtime="20201030 18:31:52.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.347" endtime="20201030 18:31:52.633"></status>
</kw>
<msg timestamp="20201030 18:31:52.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022314236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022421139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:52.345" endtime="20201030 18:31:52.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022314236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022421139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:52.637" endtime="20201030 18:31:52.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.645" endtime="20201030 18:31:52.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.343" endtime="20201030 18:31:52.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.341" endtime="20201030 18:31:52.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:52.652" level="INFO">${RESULT} = [{'diff': 0.00010690299999999847}, {'diff': 0.00010777799999999935}, {'diff': 0.00010744499999999768}, {'diff': 0.00010777799999999935}, {'diff': 0.00010730600000000146}, {'diff': 0.000107513999999999...</msg>
<status status="PASS" starttime="20201030 18:31:52.649" endtime="20201030 18:31:52.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:52.657" level="INFO">${ACCURACY} = {'diff': [0.00010690299999999847, 0.00010777799999999935, 0.00010744499999999768, 0.00010777799999999935, 0.00010730600000000146, 0.00010751399999999953, 0.00010701399999999903, 0.00010755599999999824...</msg>
<status status="PASS" starttime="20201030 18:31:52.653" endtime="20201030 18:31:52.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.663" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 18:31:52.662" endtime="20201030 18:31:52.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.665" level="INFO">VALUE: [0.00010690299999999847, 0.00010777799999999935, 0.00010744499999999768, 0.00010777799999999935, 0.00010730600000000146, 0.00010751399999999953, 0.00010701399999999903, 0.00010755599999999824, 0.00010777799999999935, 0.00010765199999999975, 0.00010762500000000008, 0.00010705599999999774, 0.00010702800000000207, 0.00010762500000000008, 0.00010773600000000064, 0.00010704099999999869, 0.00010730499999999851, 0.00010722200000000057, 0.0001070140000000025, 0.00010716700000000176, 0.00010758400000000085, 0.00010736100000000026, 0.00010752699999999962, 0.00010745800000000125, 0.00010745799999999778, 0.00010730600000000146, 0.00010736099999999679, 0.00010773600000000064, 0.00010713900000000262, 0.00010697299999999979, 0.00010767999999999889, 0.00010716600000000229, 0.00010772200000000107, 0.00010744400000000168, 0.00010713899999999915, 0.0001073889999999994, 0.00010779199999999892, 0.00010711100000000001, 0.0001077630000000003, 0.0001073889999999994, 0.00010763899999999965, 0.000107208000000001, 0.00010701399999999903, 0.00010752800000000257, 0.00010684799999999967, 0.00010698599999999989, 0.0001072219999999971, 0.00010761100000000051, 0.00010745900000000072, 0.00010715299999999872]</msg>
<status status="PASS" starttime="20201030 18:31:52.664" endtime="20201030 18:31:52.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.658" endtime="20201030 18:31:52.667"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:52.670" endtime="20201030 18:31:52.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.669" endtime="20201030 18:31:52.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.668" endtime="20201030 18:31:52.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.305" endtime="20201030 18:31:52.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.304" endtime="20201030 18:31:52.691"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.700" endtime="20201030 18:31:52.721"></status>
</kw>
<msg timestamp="20201030 18:31:52.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:52.699" endtime="20201030 18:31:52.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:52.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:52.722" endtime="20201030 18:31:52.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.725" endtime="20201030 18:31:52.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.696" endtime="20201030 18:31:52.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.694" endtime="20201030 18:31:52.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:52.734" endtime="20201030 18:31:53.022"></status>
</kw>
<msg timestamp="20201030 18:31:53.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022497319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022606014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:52.733" endtime="20201030 18:31:53.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022497319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022606014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:53.027" endtime="20201030 18:31:53.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.035" endtime="20201030 18:31:53.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.730" endtime="20201030 18:31:53.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.728" endtime="20201030 18:31:53.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:53.042" level="INFO">${RESULT} = [{'diff': 0.00010869499999999893}, {'diff': 0.0001087219999999986}, {'diff': 0.00010855499999999976}, {'diff': 0.00010809700000000144}, {'diff': 0.00010848599999999792}, {'diff': 0.0001086250000000010...</msg>
<status status="PASS" starttime="20201030 18:31:53.038" endtime="20201030 18:31:53.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:53.046" level="INFO">${ACCURACY} = {'diff': [0.00010869499999999893, 0.0001087219999999986, 0.00010855499999999976, 0.00010809700000000144, 0.00010848599999999792, 0.00010862500000000108, 0.00010844499999999868, 0.00010862499999999761,...</msg>
<status status="PASS" starttime="20201030 18:31:53.043" endtime="20201030 18:31:53.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.051" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 18:31:53.050" endtime="20201030 18:31:53.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.054" level="INFO">VALUE: [0.00010869499999999893, 0.0001087219999999986, 0.00010855499999999976, 0.00010809700000000144, 0.00010848599999999792, 0.00010862500000000108, 0.00010844499999999868, 0.00010862499999999761, 0.00010792999999999914, 0.00010845800000000225, 0.00010811100000000101, 0.00010795799999999828, 0.00010868099999999936, 0.00010874999999999774, 0.0001078340000000011, 0.00010844399999999921, 0.00010783299999999815, 0.00010869399999999946, 0.00010854199999999967, 0.00010804199999999917, 0.00010811100000000101, 0.00010804200000000264, 0.00010845900000000172, 0.0001087219999999986, 0.00010876299999999783, 0.00010806899999999883, 0.00010813900000000015, 0.00010850000000000096, 0.00010819399999999896, 0.00010797200000000132, 0.00010807000000000178, 0.00010872300000000154, 0.00010838800000000093, 0.00010861100000000151, 0.00010780500000000248, 0.00010827799999999985, 0.00010826400000000028, 0.00010850000000000096, 0.00010811100000000101, 0.00010809700000000144, 0.00010840299999999997, 0.00010784699999999772, 0.00010795800000000175, 0.00010863900000000065, 0.00010823599999999767, 0.00010836100000000126, 0.00010805499999999926, 0.0001078889999999999, 0.00010848700000000086, 0.00010852700000000062]</msg>
<status status="PASS" starttime="20201030 18:31:53.053" endtime="20201030 18:31:53.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.047" endtime="20201030 18:31:53.056"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:53.060" endtime="20201030 18:31:53.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.058" endtime="20201030 18:31:53.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.057" endtime="20201030 18:31:53.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.692" endtime="20201030 18:31:53.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:52.692" endtime="20201030 18:31:53.081"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.090" endtime="20201030 18:31:53.111"></status>
</kw>
<msg timestamp="20201030 18:31:53.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:53.089" endtime="20201030 18:31:53.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:53.113" endtime="20201030 18:31:53.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.115" endtime="20201030 18:31:53.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.086" endtime="20201030 18:31:53.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.084" endtime="20201030 18:31:53.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.125" endtime="20201030 18:31:53.411"></status>
</kw>
<msg timestamp="20201030 18:31:53.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023601611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023710597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:53.123" endtime="20201030 18:31:53.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023601611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023710597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:53.415" endtime="20201030 18:31:53.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.424" endtime="20201030 18:31:53.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.121" endtime="20201030 18:31:53.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.119" endtime="20201030 18:31:53.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:53.430" level="INFO">${RESULT} = [{'diff': 0.00010898599999999842}, {'diff': 0.00010933399999999913}, {'diff': 0.00010883299999999915}, {'diff': 0.00010884699999999872}, {'diff': 0.00010929200000000042}, {'diff': 0.000109471999999999...</msg>
<status status="PASS" starttime="20201030 18:31:53.427" endtime="20201030 18:31:53.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:53.434" level="INFO">${ACCURACY} = {'diff': [0.00010898599999999842, 0.00010933399999999913, 0.00010883299999999915, 0.00010884699999999872, 0.00010929200000000042, 0.00010947199999999935, 0.00010924999999999824, 0.00010940300000000097...</msg>
<status status="PASS" starttime="20201030 18:31:53.431" endtime="20201030 18:31:53.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.439" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 18:31:53.438" endtime="20201030 18:31:53.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.441" level="INFO">VALUE: [0.00010898599999999842, 0.00010933399999999913, 0.00010883299999999915, 0.00010884699999999872, 0.00010929200000000042, 0.00010947199999999935, 0.00010924999999999824, 0.00010940300000000097, 0.0001092219999999991, 0.00010904100000000069, 0.00010950000000000196, 0.00010911100000000201, 0.00010930499999999704, 0.00010938899999999793, 0.00010909699999999897, 0.00010962499999999861, 0.00010934800000000217, 0.00010941700000000054, 0.00010962500000000208, 0.00010979100000000144, 0.00010955600000000024, 0.00010909700000000244, 0.00010952799999999763, 0.00010904200000000017, 0.00010941700000000054, 0.00010940300000000097, 0.00010944400000000021, 0.00010969400000000046, 0.00010925000000000171, 0.00010905599999999974, 0.00010923599999999867, 0.00010888899999999743, 0.00010923599999999867, 0.00010937499999999836, 0.00010937499999999836, 0.00010951300000000205, 0.00010974999999999874, 0.00010976399999999831, 0.00010930599999999999, 0.00010938899999999793, 0.00010916700000000029, 0.00010918099999999986, 0.00010961200000000199, 0.00010916599999999735, 0.00010916600000000082, 0.00010913900000000115, 0.00010938899999999793, 0.00010980600000000049, 0.00010977800000000135, 0.00010908399999999888]</msg>
<status status="PASS" starttime="20201030 18:31:53.440" endtime="20201030 18:31:53.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.435" endtime="20201030 18:31:53.444"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:53.448" endtime="20201030 18:31:53.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.446" endtime="20201030 18:31:53.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.445" endtime="20201030 18:31:53.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.082" endtime="20201030 18:31:53.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.082" endtime="20201030 18:31:53.468"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.477" endtime="20201030 18:31:53.498"></status>
</kw>
<msg timestamp="20201030 18:31:53.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:53.476" endtime="20201030 18:31:53.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:53.499" endtime="20201030 18:31:53.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.502" endtime="20201030 18:31:53.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.473" endtime="20201030 18:31:53.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.471" endtime="20201030 18:31:53.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.511" endtime="20201030 18:31:53.797"></status>
</kw>
<msg timestamp="20201030 18:31:53.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022329458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022439306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:53.509" endtime="20201030 18:31:53.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022329458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022439306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:53.801" endtime="20201030 18:31:53.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.809" endtime="20201030 18:31:53.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.507" endtime="20201030 18:31:53.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.505" endtime="20201030 18:31:53.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:53.816" level="INFO">${RESULT} = [{'diff': 0.0001098479999999992}, {'diff': 0.00011031900000000108}, {'diff': 0.00011029099999999847}, {'diff': 0.00011013900000000215}, {'diff': 0.00011033300000000065}, {'diff': 0.0001106810000000013...</msg>
<status status="PASS" starttime="20201030 18:31:53.813" endtime="20201030 18:31:53.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:53.824" level="INFO">${ACCURACY} = {'diff': [0.0001098479999999992, 0.00011031900000000108, 0.00011029099999999847, 0.00011013900000000215, 0.00011033300000000065, 0.00011068100000000136, 0.00011041700000000154, 0.00011081900000000158,...</msg>
<status status="PASS" starttime="20201030 18:31:53.817" endtime="20201030 18:31:53.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.828" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 18:31:53.827" endtime="20201030 18:31:53.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.831" level="INFO">VALUE: [0.0001098479999999992, 0.00011031900000000108, 0.00011029099999999847, 0.00011013900000000215, 0.00011033300000000065, 0.00011068100000000136, 0.00011041700000000154, 0.00011081900000000158, 0.00011075000000000321, 0.00011025000000000271, 0.00011030499999999804, 0.00011044500000000068, 0.00011059700000000047, 0.00011048599999999992, 0.00011030599999999752, 0.00011012499999999911, 0.00011016599999999835, 0.0001107220000000006, 0.0001100830000000004, 0.00011020799999999706, 0.00011036099999999979, 0.00011031999999999709, 0.0001100280000000016, 0.00011049999999999949, 0.00011038799999999946, 0.00011020800000000053, 0.00011072199999999713, 0.00011029099999999847, 0.00011069400000000146, 0.00011030600000000099, 0.00010984699999999972, 0.00011068100000000136, 0.00011016700000000129, 0.00011041700000000154, 0.0001102630000000028, 0.00011002799999999813, 0.00011000000000000246, 0.00011065299999999875, 0.00011026399999999881, 0.00011051399999999906, 0.00010988899999999843, 0.00011013899999999868, 0.00011036099999999979, 0.00011037499999999936, 0.00010997199999999985, 0.000110209, 0.00010995800000000028, 0.00011074999999999974, 0.0001105280000000021, 0.00011022299999999957]</msg>
<status status="PASS" starttime="20201030 18:31:53.829" endtime="20201030 18:31:53.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.824" endtime="20201030 18:31:53.832"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:53.836" endtime="20201030 18:31:53.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.834" endtime="20201030 18:31:53.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.833" endtime="20201030 18:31:53.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.469" endtime="20201030 18:31:53.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.469" endtime="20201030 18:31:53.857"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.867" endtime="20201030 18:31:53.888"></status>
</kw>
<msg timestamp="20201030 18:31:53.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:53.865" endtime="20201030 18:31:53.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:53.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:53.889" endtime="20201030 18:31:53.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.894" endtime="20201030 18:31:53.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.862" endtime="20201030 18:31:53.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.860" endtime="20201030 18:31:53.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:53.904" endtime="20201030 18:31:54.192"></status>
</kw>
<msg timestamp="20201030 18:31:54.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023651403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023762903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:53.902" endtime="20201030 18:31:54.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023651403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023762903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:54.196" endtime="20201030 18:31:54.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.204" endtime="20201030 18:31:54.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.899" endtime="20201030 18:31:54.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.897" endtime="20201030 18:31:54.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:54.211" level="INFO">${RESULT} = [{'diff': 0.00011149999999999702}, {'diff': 0.00011119499999999796}, {'diff': 0.00011147300000000082}, {'diff': 0.00011161100000000104}, {'diff': 0.00011154099999999972}, {'diff': 0.000110986000000000...</msg>
<status status="PASS" starttime="20201030 18:31:54.208" endtime="20201030 18:31:54.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:54.215" level="INFO">${ACCURACY} = {'diff': [0.00011149999999999702, 0.00011119499999999796, 0.00011147300000000082, 0.00011161100000000104, 0.00011154099999999972, 0.00011098600000000042, 0.00011170799999999856, 0.00011134700000000122...</msg>
<status status="PASS" starttime="20201030 18:31:54.212" endtime="20201030 18:31:54.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.219" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 18:31:54.218" endtime="20201030 18:31:54.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.222" level="INFO">VALUE: [0.00011149999999999702, 0.00011119499999999796, 0.00011147300000000082, 0.00011161100000000104, 0.00011154099999999972, 0.00011098600000000042, 0.00011170799999999856, 0.00011134700000000122, 0.00011077799999999888, 0.00011168100000000236, 0.00011151400000000006, 0.0001112769999999999, 0.00011120800000000153, 0.0001110280000000026, 0.00011083299999999768, 0.0001110969999999975, 0.00011104200000000217, 0.00011162500000000061, 0.00011105600000000174, 0.00011161099999999757, 0.00011148600000000092, 0.00011151400000000006, 0.00011133300000000165, 0.00011120899999999753, 0.00011169500000000193, 0.00011176400000000031, 0.00011095799999999781, 0.00011111100000000054, 0.00011170800000000203, 0.00011176400000000031, 0.00011152799999999963, 0.00011155599999999877, 0.00011088899999999943, 0.00011150000000000049, 0.00011161100000000104, 0.00011130500000000251, 0.0001115830000000019, 0.00011162500000000061, 0.00011150000000000049, 0.00011133300000000165, 0.00011125000000000024, 0.00011129199999999895, 0.00011131999999999809, 0.00011131999999999809, 0.00011099999999999999, 0.00011165299999999975, 0.00011159700000000147, 0.00011155599999999877, 0.00011082000000000106, 0.00011088899999999943]</msg>
<status status="PASS" starttime="20201030 18:31:54.220" endtime="20201030 18:31:54.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.216" endtime="20201030 18:31:54.223"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:54.227" endtime="20201030 18:31:54.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.225" endtime="20201030 18:31:54.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.224" endtime="20201030 18:31:54.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.858" endtime="20201030 18:31:54.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:53.857" endtime="20201030 18:31:54.248"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.256" endtime="20201030 18:31:54.278"></status>
</kw>
<msg timestamp="20201030 18:31:54.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:54.255" endtime="20201030 18:31:54.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:54.280" endtime="20201030 18:31:54.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.282" endtime="20201030 18:31:54.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.252" endtime="20201030 18:31:54.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.250" endtime="20201030 18:31:54.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.291" endtime="20201030 18:31:54.577"></status>
</kw>
<msg timestamp="20201030 18:31:54.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023241778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023354194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:54.290" endtime="20201030 18:31:54.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023241778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023354194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:54.581" endtime="20201030 18:31:54.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.589" endtime="20201030 18:31:54.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.287" endtime="20201030 18:31:54.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.285" endtime="20201030 18:31:54.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:54.596" level="INFO">${RESULT} = [{'diff': 0.0001124160000000006}, {'diff': 0.00011236100000000179}, {'diff': 0.0001125550000000003}, {'diff': 0.00011258299999999943}, {'diff': 0.00011215300000000025}, {'diff': 0.00011187500000000086...</msg>
<status status="PASS" starttime="20201030 18:31:54.593" endtime="20201030 18:31:54.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:54.600" level="INFO">${ACCURACY} = {'diff': [0.0001124160000000006, 0.00011236100000000179, 0.0001125550000000003, 0.00011258299999999943, 0.00011215300000000025, 0.00011187500000000086, 0.00011273600000000217, 0.00011251400000000106, ...</msg>
<status status="PASS" starttime="20201030 18:31:54.597" endtime="20201030 18:31:54.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.604" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 18:31:54.603" endtime="20201030 18:31:54.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.607" level="INFO">VALUE: [0.0001124160000000006, 0.00011236100000000179, 0.0001125550000000003, 0.00011258299999999943, 0.00011215300000000025, 0.00011187500000000086, 0.00011273600000000217, 0.00011251400000000106, 0.00011198600000000142, 0.00011276399999999784, 0.00011269399999999999, 0.00011277799999999741, 0.00011220800000000253, 0.00011215300000000025, 0.00011261100000000204, 0.00011268099999999989, 0.00011227800000000038, 0.00011248599999999845, 0.00011240199999999756, 0.00011187500000000086, 0.00011222199999999863, 0.0001120419999999997, 0.0001118480000000012, 0.00011270899999999903, 0.00011258399999999891, 0.00011202700000000065, 0.00011184699999999825, 0.00011233299999999918, 0.000112596999999999, 0.0001120969999999985, 0.00011258400000000238, 0.00011233400000000213, 0.00011256999999999934, 0.00011245799999999931, 0.00011234699999999875, 0.00011198600000000142, 0.00011194499999999871, 0.0001125420000000002, 0.00011229100000000047, 0.00011233399999999866, 0.00011190200000000053, 0.00011234700000000222, 0.0001125550000000003, 0.00011261099999999857, 0.00011258299999999943, 0.00011270899999999903, 0.00011250000000000149, 0.00011269500000000293, 0.00011243099999999964, 0.00011272199999999913]</msg>
<status status="PASS" starttime="20201030 18:31:54.605" endtime="20201030 18:31:54.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.601" endtime="20201030 18:31:54.609"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:54.613" endtime="20201030 18:31:54.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.611" endtime="20201030 18:31:54.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.610" endtime="20201030 18:31:54.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.249" endtime="20201030 18:31:54.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.248" endtime="20201030 18:31:54.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.870" endtime="20201030 18:31:54.634"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:54.637" endtime="20201030 18:31:54.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.636" endtime="20201030 18:31:54.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.635" endtime="20201030 18:31:54.658"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:15.794" endtime="20201030 18:31:54.658" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:54.665" endtime="20201030 18:31:54.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.663" endtime="20201030 18:31:54.687"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.715" endtime="20201030 18:31:54.733"></status>
</kw>
<msg timestamp="20201030 18:31:54.734" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:54.711" endtime="20201030 18:31:54.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.739" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:54.736" endtime="20201030 18:31:54.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.745" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:54.741" endtime="20201030 18:31:54.746"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:54.706" endtime="20201030 18:31:54.747"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:54.701" endtime="20201030 18:31:54.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.698" endtime="20201030 18:31:54.749"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:54.757" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:54.756" endtime="20201030 18:31:54.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.751" endtime="20201030 18:31:54.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.696" endtime="20201030 18:31:54.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.695" endtime="20201030 18:31:54.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.761" endtime="20201030 18:31:54.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.692" endtime="20201030 18:31:54.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.688" endtime="20201030 18:31:54.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.662" endtime="20201030 18:31:54.766"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.781" endtime="20201030 18:31:54.799"></status>
</kw>
<msg timestamp="20201030 18:31:54.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:54.780" endtime="20201030 18:31:54.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:54.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:54.801" endtime="20201030 18:31:54.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.803" endtime="20201030 18:31:54.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.777" endtime="20201030 18:31:54.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.773" endtime="20201030 18:31:54.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:54.812" endtime="20201030 18:31:55.107"></status>
</kw>
<msg timestamp="20201030 18:31:55.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.109894306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.109937583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:54.811" endtime="20201030 18:31:55.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.109894306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.109937583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:55.112" endtime="20201030 18:31:55.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.122" endtime="20201030 18:31:55.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.808" endtime="20201030 18:31:55.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.806" endtime="20201030 18:31:55.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:55.129" level="INFO">${RESULT} = [{'diff': 4.3277000000008226e-05}, {'diff': 4.380600000000734e-05}, {'diff': 4.447200000000373e-05}, {'diff': 4.3138999999997596e-05}, {'diff': 4.4013999999995e-05}, {'diff': 4.3110999999998456e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:31:55.126" endtime="20201030 18:31:55.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:55.134" level="INFO">${ACCURACY} = {'diff': [4.3277000000008226e-05, 4.380600000000734e-05, 4.447200000000373e-05, 4.3138999999997596e-05, 4.4013999999995e-05, 4.3110999999998456e-05, 4.3930999999997056e-05, 4.324999999999468e-05, 4.37...</msg>
<status status="PASS" starttime="20201030 18:31:55.130" endtime="20201030 18:31:55.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.138" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 18:31:55.137" endtime="20201030 18:31:55.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.141" level="INFO">VALUE: [4.3277000000008226e-05, 4.380600000000734e-05, 4.447200000000373e-05, 4.3138999999997596e-05, 4.4013999999995e-05, 4.3110999999998456e-05, 4.3930999999997056e-05, 4.324999999999468e-05, 4.370899999998901e-05, 4.276400000000069e-05, 4.423600000000305e-05, 4.279199999999983e-05, 4.300000000000137e-05, 4.404200000000802e-05, 4.3333000000006505e-05, 4.366599999999776e-05, 4.329200000000033e-05, 4.384800000001299e-05, 4.441699999999105e-05, 4.2737000000001024e-05, 4.432000000000047e-05, 4.329200000000033e-05, 4.373600000000255e-05, 4.3209000000002384e-05, 4.3819000000000496e-05, 4.324999999999468e-05, 4.381999999999997e-05, 4.4430999999997556e-05, 4.447200000000373e-05, 4.441600000000545e-05, 4.447200000000373e-05, 4.447200000000373e-05, 4.445799999999722e-05, 4.3013999999994e-05, 4.402800000000151e-05, 4.447200000000373e-05, 4.330599999999296e-05, 4.373600000000255e-05, 4.326400000000119e-05, 4.374999999999518e-05, 4.329200000000033e-05, 4.3722999999995515e-05, 4.301299999999453e-05, 4.409799999999242e-05, 4.2791000000000357e-05, 4.4181000000004245e-05, 4.297200000000223e-05, 4.280599999999246e-05, 4.3805000000007865e-05, 4.291600000000395e-05]</msg>
<status status="PASS" starttime="20201030 18:31:55.140" endtime="20201030 18:31:55.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.135" endtime="20201030 18:31:55.142"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:55.146" endtime="20201030 18:31:55.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.144" endtime="20201030 18:31:55.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.143" endtime="20201030 18:31:55.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.770" endtime="20201030 18:31:55.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.769" endtime="20201030 18:31:55.166"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.175" endtime="20201030 18:31:55.192"></status>
</kw>
<msg timestamp="20201030 18:31:55.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:55.174" endtime="20201030 18:31:55.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:55.194" endtime="20201030 18:31:55.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.196" endtime="20201030 18:31:55.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.171" endtime="20201030 18:31:55.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.169" endtime="20201030 18:31:55.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.205" endtime="20201030 18:31:55.491"></status>
</kw>
<msg timestamp="20201030 18:31:55.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022553181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022597639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:55.204" endtime="20201030 18:31:55.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022553181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022597639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:55.495" endtime="20201030 18:31:55.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.504" endtime="20201030 18:31:55.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.201" endtime="20201030 18:31:55.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.199" endtime="20201030 18:31:55.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:55.510" level="INFO">${RESULT} = [{'diff': 4.445800000000069e-05}, {'diff': 4.301400000000094e-05}, {'diff': 4.2874999999997776e-05}, {'diff': 4.404200000000108e-05}, {'diff': 4.2903000000000385e-05}, {'diff': 4.273599999999808e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:55.507" endtime="20201030 18:31:55.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:55.515" level="INFO">${ACCURACY} = {'diff': [4.445800000000069e-05, 4.301400000000094e-05, 4.2874999999997776e-05, 4.404200000000108e-05, 4.2903000000000385e-05, 4.273599999999808e-05, 4.392999999999758e-05, 4.2874999999997776e-05, 4.3...</msg>
<status status="PASS" starttime="20201030 18:31:55.511" endtime="20201030 18:31:55.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.520" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 18:31:55.519" endtime="20201030 18:31:55.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.522" level="INFO">VALUE: [4.445800000000069e-05, 4.301400000000094e-05, 4.2874999999997776e-05, 4.404200000000108e-05, 4.2903000000000385e-05, 4.273599999999808e-05, 4.392999999999758e-05, 4.2874999999997776e-05, 4.304200000000008e-05, 4.402700000000204e-05, 4.4445000000000595e-05, 4.447200000000026e-05, 4.309799999999836e-05, 4.395800000000019e-05, 4.3237000000001524e-05, 4.39999999999989e-05, 4.277800000000026e-05, 4.2804999999999926e-05, 4.401400000000194e-05, 4.448599999999983e-05, 4.445800000000069e-05, 4.3055000000000176e-05, 4.401400000000194e-05, 4.327800000000076e-05, 4.373599999999908e-05, 4.44860000000033e-05, 4.4459000000000165e-05, 4.320800000000291e-05, 4.373599999999908e-05, 4.447200000000026e-05, 4.270799999999894e-05, 4.2875000000001245e-05, 4.402800000000151e-05, 4.2930999999999525e-05, 4.4124999999999026e-05, 4.3125000000001495e-05, 4.3888999999998346e-05, 4.322199999999901e-05, 4.3819000000000496e-05, 4.4459000000000165e-05, 4.3110999999998456e-05, 4.276399999999722e-05, 4.373600000000255e-05, 4.323600000000205e-05, 4.3888999999998346e-05, 4.3139000000001065e-05, 4.381999999999997e-05, 4.301400000000094e-05, 4.273600000000155e-05, 4.390200000000191e-05]</msg>
<status status="PASS" starttime="20201030 18:31:55.521" endtime="20201030 18:31:55.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.516" endtime="20201030 18:31:55.523"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:55.527" endtime="20201030 18:31:55.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.525" endtime="20201030 18:31:55.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.524" endtime="20201030 18:31:55.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.167" endtime="20201030 18:31:55.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.167" endtime="20201030 18:31:55.548"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.557" endtime="20201030 18:31:55.574"></status>
</kw>
<msg timestamp="20201030 18:31:55.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:55.555" endtime="20201030 18:31:55.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:55.575" endtime="20201030 18:31:55.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.578" endtime="20201030 18:31:55.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.553" endtime="20201030 18:31:55.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.551" endtime="20201030 18:31:55.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.587" endtime="20201030 18:31:55.875"></status>
</kw>
<msg timestamp="20201030 18:31:55.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022670028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022713306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:55.585" endtime="20201030 18:31:55.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022670028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022713306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:55.880" endtime="20201030 18:31:55.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.888" endtime="20201030 18:31:55.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.583" endtime="20201030 18:31:55.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.581" endtime="20201030 18:31:55.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:55.895" level="INFO">${RESULT} = [{'diff': 4.327800000000076e-05}, {'diff': 4.3736999999998555e-05}, {'diff': 4.3332999999999566e-05}, {'diff': 4.372199999999951e-05}, {'diff': 4.445799999999722e-05}, {'diff': 4.4459000000000165e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:55.891" endtime="20201030 18:31:55.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:55.899" level="INFO">${ACCURACY} = {'diff': [4.327800000000076e-05, 4.3736999999998555e-05, 4.3332999999999566e-05, 4.372199999999951e-05, 4.445799999999722e-05, 4.4459000000000165e-05, 4.295800000000266e-05, 4.4096999999999886e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:31:55.896" endtime="20201030 18:31:55.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.903" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 18:31:55.902" endtime="20201030 18:31:55.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.906" level="INFO">VALUE: [4.327800000000076e-05, 4.3736999999998555e-05, 4.3332999999999566e-05, 4.372199999999951e-05, 4.445799999999722e-05, 4.4459000000000165e-05, 4.295800000000266e-05, 4.4096999999999886e-05, 4.2916999999999955e-05, 4.4139000000002065e-05, 4.277800000000026e-05, 4.300000000000137e-05, 4.381999999999997e-05, 4.3083000000002786e-05, 4.2681000000002745e-05, 4.3903000000001385e-05, 4.445800000000069e-05, 4.275000000000112e-05, 4.424999999999915e-05, 4.4431000000001025e-05, 4.273600000000155e-05, 4.430499999999796e-05, 4.273600000000155e-05, 4.2818999999999496e-05, 4.2846999999998636e-05, 4.39860000000028e-05, 4.304200000000008e-05, 4.400000000000237e-05, 4.445800000000069e-05, 4.444400000000112e-05, 4.445800000000069e-05, 4.301400000000094e-05, 4.401399999999847e-05, 4.277800000000026e-05, 4.422200000000001e-05, 4.301400000000094e-05, 4.400000000000237e-05, 4.44999999999994e-05, 4.2916999999999955e-05, 4.2832999999999066e-05, 4.395800000000019e-05, 4.2804999999999926e-05, 4.423599999999958e-05, 4.2846999999998636e-05, 4.4195000000000345e-05, 4.2818999999999496e-05, 4.4181000000000775e-05, 4.291600000000048e-05, 4.4096999999999886e-05, 4.275000000000112e-05]</msg>
<status status="PASS" starttime="20201030 18:31:55.904" endtime="20201030 18:31:55.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.900" endtime="20201030 18:31:55.907"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:55.911" endtime="20201030 18:31:55.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.909" endtime="20201030 18:31:55.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.908" endtime="20201030 18:31:55.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.549" endtime="20201030 18:31:55.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.548" endtime="20201030 18:31:55.932"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.948" endtime="20201030 18:31:55.967"></status>
</kw>
<msg timestamp="20201030 18:31:55.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:55.944" endtime="20201030 18:31:55.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:55.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:55.968" endtime="20201030 18:31:55.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.971" endtime="20201030 18:31:55.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.940" endtime="20201030 18:31:55.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.935" endtime="20201030 18:31:55.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:55.980" endtime="20201030 18:31:56.266"></status>
</kw>
<msg timestamp="20201030 18:31:56.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030421764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030464542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:55.979" endtime="20201030 18:31:56.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030421764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030464542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:56.270" endtime="20201030 18:31:56.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.284" endtime="20201030 18:31:56.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.976" endtime="20201030 18:31:56.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.974" endtime="20201030 18:31:56.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:56.292" level="INFO">${RESULT} = [{'diff': 4.277800000000026e-05}, {'diff': 4.423599999999958e-05}, {'diff': 4.447200000000026e-05}, {'diff': 4.445800000000069e-05}, {'diff': 4.2846999999998636e-05}, {'diff': 4.291600000000048e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:31:56.288" endtime="20201030 18:31:56.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:56.299" level="INFO">${ACCURACY} = {'diff': [4.277800000000026e-05, 4.423599999999958e-05, 4.447200000000026e-05, 4.445800000000069e-05, 4.2846999999998636e-05, 4.291600000000048e-05, 4.2708999999998415e-05, 4.3805000000000927e-05, 4.3...</msg>
<status status="PASS" starttime="20201030 18:31:56.293" endtime="20201030 18:31:56.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.307" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 18:31:56.303" endtime="20201030 18:31:56.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.311" level="INFO">VALUE: [4.277800000000026e-05, 4.423599999999958e-05, 4.447200000000026e-05, 4.445800000000069e-05, 4.2846999999998636e-05, 4.291600000000048e-05, 4.2708999999998415e-05, 4.3805000000000927e-05, 4.308400000000226e-05, 4.2723000000001454e-05, 4.386199999999868e-05, 4.273599999999808e-05, 4.2791000000000357e-05, 4.2804999999999926e-05, 4.3874999999998776e-05, 4.327800000000076e-05, 4.370799999999647e-05, 4.275000000000112e-05, 4.4319000000000996e-05, 4.4458999999996696e-05, 4.3124999999998026e-05, 4.402700000000204e-05, 4.445799999999722e-05, 4.320800000000291e-05, 4.377700000000179e-05, 4.281999999999897e-05, 4.415200000000563e-05, 4.306999999999922e-05, 4.402800000000151e-05, 4.3153000000004105e-05, 4.3902999999997916e-05, 4.2860999999998206e-05, 4.277800000000026e-05, 4.395800000000366e-05, 4.2832999999999066e-05, 4.422199999999654e-05, 4.297199999999529e-05, 4.4055000000001177e-05, 4.2832999999999066e-05, 4.423600000000305e-05, 4.294399999999615e-05, 4.4125000000005965e-05, 4.448599999999636e-05, 4.331999999999947e-05, 4.373600000000255e-05, 4.447200000000373e-05, 4.445799999999722e-05, 4.447199999999679e-05, 4.444399999999765e-05, 4.326399999999425e-05]</msg>
<status status="PASS" starttime="20201030 18:31:56.308" endtime="20201030 18:31:56.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.300" endtime="20201030 18:31:56.312"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:56.316" endtime="20201030 18:31:56.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.314" endtime="20201030 18:31:56.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.313" endtime="20201030 18:31:56.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.933" endtime="20201030 18:31:56.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:55.933" endtime="20201030 18:31:56.337"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.345" endtime="20201030 18:31:56.362"></status>
</kw>
<msg timestamp="20201030 18:31:56.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:56.344" endtime="20201030 18:31:56.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:56.363" endtime="20201030 18:31:56.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.366" endtime="20201030 18:31:56.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.341" endtime="20201030 18:31:56.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.339" endtime="20201030 18:31:56.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.375" endtime="20201030 18:31:56.660"></status>
</kw>
<msg timestamp="20201030 18:31:56.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022357014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022400028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:56.373" endtime="20201030 18:31:56.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022357014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022400028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:56.664" endtime="20201030 18:31:56.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.672" endtime="20201030 18:31:56.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.371" endtime="20201030 18:31:56.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.369" endtime="20201030 18:31:56.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:56.684" level="INFO">${RESULT} = [{'diff': 4.301399999999747e-05}, {'diff': 4.39999999999989e-05}, {'diff': 4.305599999999965e-05}, {'diff': 4.2653000000000135e-05}, {'diff': 4.381999999999997e-05}, {'diff': 4.447200000000026e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:56.679" endtime="20201030 18:31:56.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:56.693" level="INFO">${ACCURACY} = {'diff': [4.301399999999747e-05, 4.39999999999989e-05, 4.305599999999965e-05, 4.2653000000000135e-05, 4.381999999999997e-05, 4.447200000000026e-05, 4.301399999999747e-05, 4.402799999999804e-05, 4.3153...</msg>
<status status="PASS" starttime="20201030 18:31:56.686" endtime="20201030 18:31:56.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.699" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 18:31:56.698" endtime="20201030 18:31:56.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.705" level="INFO">VALUE: [4.301399999999747e-05, 4.39999999999989e-05, 4.305599999999965e-05, 4.2653000000000135e-05, 4.381999999999997e-05, 4.447200000000026e-05, 4.301399999999747e-05, 4.402799999999804e-05, 4.3153000000000635e-05, 4.277800000000026e-05, 4.402799999999804e-05, 4.273600000000155e-05, 4.423600000000305e-05, 4.447200000000026e-05, 4.2889000000000815e-05, 4.2903000000000385e-05, 4.373599999999908e-05, 4.300000000000137e-05, 4.4083000000000316e-05, 4.307000000000269e-05, 4.274999999999765e-05, 4.376399999999822e-05, 4.447200000000026e-05, 4.2818999999999496e-05, 4.423600000000305e-05, 4.277800000000026e-05, 4.423599999999958e-05, 4.319399999999987e-05, 4.3903000000001385e-05, 4.327700000000129e-05, 4.372199999999951e-05, 4.2888999999997346e-05, 4.4138999999998596e-05, 4.2875000000001245e-05, 4.294399999999962e-05, 4.3860999999999206e-05, 4.277800000000026e-05, 4.279199999999983e-05, 4.401400000000194e-05, 4.2916999999999955e-05, 4.281999999999897e-05, 4.381999999999997e-05, 4.4431000000001025e-05, 4.306999999999922e-05, 4.2695000000002314e-05, 4.3958999999999665e-05, 4.4459000000000165e-05, 4.2861000000001676e-05, 4.427800000000176e-05, 4.4472999999999735e-05]</msg>
<status status="PASS" starttime="20201030 18:31:56.702" endtime="20201030 18:31:56.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.694" endtime="20201030 18:31:56.707"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:56.710" endtime="20201030 18:31:56.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.709" endtime="20201030 18:31:56.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.708" endtime="20201030 18:31:56.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.338" endtime="20201030 18:31:56.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.337" endtime="20201030 18:31:56.731"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.740" endtime="20201030 18:31:56.757"></status>
</kw>
<msg timestamp="20201030 18:31:56.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:56.738" endtime="20201030 18:31:56.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:56.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:56.759" endtime="20201030 18:31:56.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.761" endtime="20201030 18:31:56.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.736" endtime="20201030 18:31:56.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.733" endtime="20201030 18:31:56.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:56.770" endtime="20201030 18:31:57.056"></status>
</kw>
<msg timestamp="20201030 18:31:57.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022443431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022487972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:56.769" endtime="20201030 18:31:57.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022443431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022487972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:57.060" endtime="20201030 18:31:57.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.069" endtime="20201030 18:31:57.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.766" endtime="20201030 18:31:57.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.765" endtime="20201030 18:31:57.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:57.075" level="INFO">${RESULT} = [{'diff': 4.454099999999864e-05}, {'diff': 4.4459000000000165e-05}, {'diff': 4.304200000000008e-05}, {'diff': 4.39999999999989e-05}, {'diff': 4.301400000000094e-05}, {'diff': 4.404199999999761e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:57.072" endtime="20201030 18:31:57.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:57.079" level="INFO">${ACCURACY} = {'diff': [4.454099999999864e-05, 4.4459000000000165e-05, 4.304200000000008e-05, 4.39999999999989e-05, 4.301400000000094e-05, 4.404199999999761e-05, 4.33059999999999e-05, 4.372199999999951e-05, 4.31390...</msg>
<status status="PASS" starttime="20201030 18:31:57.076" endtime="20201030 18:31:57.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.084" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 18:31:57.083" endtime="20201030 18:31:57.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.086" level="INFO">VALUE: [4.454099999999864e-05, 4.4459000000000165e-05, 4.304200000000008e-05, 4.39999999999989e-05, 4.301400000000094e-05, 4.404199999999761e-05, 4.33059999999999e-05, 4.372199999999951e-05, 4.3139000000001065e-05, 4.3889000000001815e-05, 4.288800000000134e-05, 4.274999999999765e-05, 4.3958999999999665e-05, 4.4459000000000165e-05, 4.4459000000000165e-05, 4.4430999999997556e-05, 4.2930999999999525e-05, 4.409799999999936e-05, 4.297199999999876e-05, 4.2861000000001676e-05, 4.402799999999804e-05, 4.322199999999901e-05, 4.380599999999693e-05, 4.2916999999999955e-05, 4.4110999999999456e-05, 4.447200000000026e-05, 4.2903000000000385e-05, 4.4167000000001205e-05, 4.4473000000003204e-05, 4.4472999999999735e-05, 4.3167000000000205e-05, 4.381999999999997e-05, 4.297200000000223e-05, 4.4083000000000316e-05, 4.442999999999808e-05, 4.2889000000000815e-05, 4.4083000000000316e-05, 4.445800000000069e-05, 4.273600000000155e-05, 4.3125000000001495e-05, 4.372200000000298e-05, 4.276400000000069e-05, 4.423599999999958e-05, 4.44999999999994e-05, 4.273599999999808e-05, 4.431899999999753e-05, 4.4445000000000595e-05, 4.276400000000069e-05, 4.420799999999697e-05, 4.2930999999999525e-05]</msg>
<status status="PASS" starttime="20201030 18:31:57.085" endtime="20201030 18:31:57.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.080" endtime="20201030 18:31:57.088"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:57.091" endtime="20201030 18:31:57.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.090" endtime="20201030 18:31:57.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.089" endtime="20201030 18:31:57.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.732" endtime="20201030 18:31:57.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:56.731" endtime="20201030 18:31:57.112"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.121" endtime="20201030 18:31:57.141"></status>
</kw>
<msg timestamp="20201030 18:31:57.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:57.119" endtime="20201030 18:31:57.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:57.144" endtime="20201030 18:31:57.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.148" endtime="20201030 18:31:57.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.117" endtime="20201030 18:31:57.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.115" endtime="20201030 18:31:57.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.161" endtime="20201030 18:31:57.449"></status>
</kw>
<msg timestamp="20201030 18:31:57.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025678153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025721292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:57.160" endtime="20201030 18:31:57.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025678153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025721292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:57.453" endtime="20201030 18:31:57.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.462" endtime="20201030 18:31:57.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.157" endtime="20201030 18:31:57.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.155" endtime="20201030 18:31:57.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:57.468" level="INFO">${RESULT} = [{'diff': 4.3139000000001065e-05}, {'diff': 4.393000000000105e-05}, {'diff': 4.3332999999999566e-05}, {'diff': 4.372199999999951e-05}, {'diff': 4.445800000000069e-05}, {'diff': 4.4459000000000165e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:57.465" endtime="20201030 18:31:57.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:57.472" level="INFO">${ACCURACY} = {'diff': [4.3139000000001065e-05, 4.393000000000105e-05, 4.3332999999999566e-05, 4.372199999999951e-05, 4.445800000000069e-05, 4.4459000000000165e-05, 4.273599999999808e-05, 4.290200000000091e-05, 4.4...</msg>
<status status="PASS" starttime="20201030 18:31:57.469" endtime="20201030 18:31:57.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.477" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 18:31:57.476" endtime="20201030 18:31:57.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.479" level="INFO">VALUE: [4.3139000000001065e-05, 4.393000000000105e-05, 4.3332999999999566e-05, 4.372199999999951e-05, 4.445800000000069e-05, 4.4459000000000165e-05, 4.273599999999808e-05, 4.290200000000091e-05, 4.402800000000151e-05, 4.44999999999994e-05, 4.298599999999833e-05, 4.28059999999994e-05, 4.3833000000000066e-05, 4.448599999999983e-05, 4.277800000000026e-05, 4.2818999999999496e-05, 4.39999999999989e-05, 4.307000000000269e-05, 4.2709000000001884e-05, 4.381899999999703e-05, 4.309800000000183e-05, 4.404099999999814e-05, 4.447200000000026e-05, 4.447200000000026e-05, 4.3138999999997596e-05, 4.390200000000191e-05, 4.4445000000000595e-05, 4.320799999999944e-05, 4.3805000000000927e-05, 4.3332999999999566e-05, 4.373599999999908e-05, 4.2889000000000815e-05, 4.4110999999999456e-05, 4.301399999999747e-05, 4.397199999999976e-05, 4.2916999999999955e-05, 4.4096999999999886e-05, 4.4388999999998846e-05, 4.2860999999998206e-05, 4.4096999999999886e-05, 4.4459000000000165e-05, 4.452799999999854e-05, 4.273599999999808e-05, 4.297200000000223e-05, 4.405600000000065e-05, 4.294399999999962e-05, 4.2889000000000815e-05, 4.3860999999999206e-05, 4.445800000000069e-05, 4.445799999999722e-05]</msg>
<status status="PASS" starttime="20201030 18:31:57.478" endtime="20201030 18:31:57.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.473" endtime="20201030 18:31:57.481"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:57.485" endtime="20201030 18:31:57.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.484" endtime="20201030 18:31:57.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.483" endtime="20201030 18:31:57.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.113" endtime="20201030 18:31:57.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.112" endtime="20201030 18:31:57.506"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.515" endtime="20201030 18:31:57.531"></status>
</kw>
<msg timestamp="20201030 18:31:57.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:57.513" endtime="20201030 18:31:57.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:57.533" endtime="20201030 18:31:57.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.535" endtime="20201030 18:31:57.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.510" endtime="20201030 18:31:57.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.508" endtime="20201030 18:31:57.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.544" endtime="20201030 18:31:57.831"></status>
</kw>
<msg timestamp="20201030 18:31:57.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022228653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022271667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:57.543" endtime="20201030 18:31:57.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022228653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022271667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:57.836" endtime="20201030 18:31:57.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.844" endtime="20201030 18:31:57.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.540" endtime="20201030 18:31:57.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.539" endtime="20201030 18:31:57.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:57.850" level="INFO">${RESULT} = [{'diff': 4.301399999999747e-05}, {'diff': 4.404200000000108e-05}, {'diff': 4.277699999999732e-05}, {'diff': 4.300000000000137e-05}, {'diff': 4.3833000000000066e-05}, {'diff': 4.4459000000000165e-05},...</msg>
<status status="PASS" starttime="20201030 18:31:57.847" endtime="20201030 18:31:57.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:57.855" level="INFO">${ACCURACY} = {'diff': [4.301399999999747e-05, 4.404200000000108e-05, 4.277699999999732e-05, 4.300000000000137e-05, 4.3833000000000066e-05, 4.4459000000000165e-05, 4.445800000000069e-05, 4.273600000000155e-05, 4.29...</msg>
<status status="PASS" starttime="20201030 18:31:57.851" endtime="20201030 18:31:57.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.860" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 18:31:57.859" endtime="20201030 18:31:57.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.862" level="INFO">VALUE: [4.301399999999747e-05, 4.404200000000108e-05, 4.277699999999732e-05, 4.300000000000137e-05, 4.3833000000000066e-05, 4.4459000000000165e-05, 4.445800000000069e-05, 4.273600000000155e-05, 4.293000000000005e-05, 4.3986999999998805e-05, 4.447200000000026e-05, 4.279199999999983e-05, 4.424999999999915e-05, 4.3194999999999345e-05, 4.380499999999746e-05, 4.452699999999907e-05, 4.3167000000000205e-05, 4.2653000000000135e-05, 4.370799999999994e-05, 4.2791000000000357e-05, 4.2860999999998206e-05, 4.401400000000194e-05, 4.4444999999997126e-05, 4.28059999999994e-05, 4.423599999999958e-05, 4.272200000000198e-05, 4.4305000000001427e-05, 4.445800000000069e-05, 4.3124999999998026e-05, 4.3888999999998346e-05, 4.327800000000076e-05, 4.373600000000255e-05, 4.2916999999999955e-05, 4.4110999999999456e-05, 4.320799999999944e-05, 4.38060000000004e-05, 4.29860000000018e-05, 4.404100000000161e-05, 4.298599999999833e-05, 4.4069000000000746e-05, 4.2958999999998665e-05, 4.4069000000000746e-05, 4.4445000000000595e-05, 4.316600000000073e-05, 4.402800000000151e-05, 4.445799999999722e-05, 4.3082999999999316e-05, 4.277700000000079e-05, 4.3736999999998555e-05, 4.445800000000069e-05]</msg>
<status status="PASS" starttime="20201030 18:31:57.861" endtime="20201030 18:31:57.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.856" endtime="20201030 18:31:57.864"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:57.867" endtime="20201030 18:31:57.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.866" endtime="20201030 18:31:57.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.864" endtime="20201030 18:31:57.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.507" endtime="20201030 18:31:57.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.506" endtime="20201030 18:31:57.888"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.896" endtime="20201030 18:31:57.913"></status>
</kw>
<msg timestamp="20201030 18:31:57.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:57.895" endtime="20201030 18:31:57.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:57.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:57.914" endtime="20201030 18:31:57.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.917" endtime="20201030 18:31:57.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.892" endtime="20201030 18:31:57.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.890" endtime="20201030 18:31:57.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:57.926" endtime="20201030 18:31:58.213"></status>
</kw>
<msg timestamp="20201030 18:31:58.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021801889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021844931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:57.924" endtime="20201030 18:31:58.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021801889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021844931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:58.218" endtime="20201030 18:31:58.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.226" endtime="20201030 18:31:58.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.922" endtime="20201030 18:31:58.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.920" endtime="20201030 18:31:58.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:58.233" level="INFO">${RESULT} = [{'diff': 4.304200000000008e-05}, {'diff': 4.401399999999847e-05}, {'diff': 4.445800000000069e-05}, {'diff': 4.277800000000026e-05}, {'diff': 4.423599999999958e-05}, {'diff': 4.3068999999999746e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:31:58.230" endtime="20201030 18:31:58.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:58.237" level="INFO">${ACCURACY} = {'diff': [4.304200000000008e-05, 4.401399999999847e-05, 4.445800000000069e-05, 4.277800000000026e-05, 4.423599999999958e-05, 4.3068999999999746e-05, 4.39999999999989e-05, 4.3111000000001926e-05, 4.394...</msg>
<status status="PASS" starttime="20201030 18:31:58.234" endtime="20201030 18:31:58.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.242" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 18:31:58.241" endtime="20201030 18:31:58.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.245" level="INFO">VALUE: [4.304200000000008e-05, 4.401399999999847e-05, 4.445800000000069e-05, 4.277800000000026e-05, 4.423599999999958e-05, 4.3068999999999746e-05, 4.39999999999989e-05, 4.3111000000001926e-05, 4.3944999999996626e-05, 4.301400000000094e-05, 4.401400000000194e-05, 4.447200000000026e-05, 4.3208999999998915e-05, 4.3805000000000927e-05, 4.331999999999947e-05, 4.373599999999908e-05, 4.447200000000026e-05, 4.3222999999998485e-05, 4.38060000000004e-05, 4.281999999999897e-05, 4.423599999999958e-05, 4.327699999999782e-05, 4.375000000000212e-05, 4.2875000000001245e-05, 4.4110999999999456e-05, 4.4445000000000595e-05, 4.276400000000069e-05, 4.2860999999998206e-05, 4.384799999999911e-05, 4.450000000000287e-05, 4.320799999999944e-05, 4.384800000000258e-05, 4.444400000000112e-05, 4.445800000000069e-05, 4.4417000000001455e-05, 4.322199999999901e-05, 4.3805000000000927e-05, 4.2916999999999955e-05, 4.4110999999999456e-05, 4.2804999999999926e-05, 4.422200000000001e-05, 4.319399999999987e-05, 4.3819000000000496e-05, 4.2875000000001245e-05, 4.422200000000001e-05, 4.31800000000003e-05, 4.381999999999997e-05, 4.3097000000002356e-05, 4.394400000000062e-05, 4.445800000000069e-05]</msg>
<status status="PASS" starttime="20201030 18:31:58.243" endtime="20201030 18:31:58.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.238" endtime="20201030 18:31:58.246"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:58.250" endtime="20201030 18:31:58.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.248" endtime="20201030 18:31:58.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.247" endtime="20201030 18:31:58.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.889" endtime="20201030 18:31:58.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:57.888" endtime="20201030 18:31:58.271"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.280" endtime="20201030 18:31:58.298"></status>
</kw>
<msg timestamp="20201030 18:31:58.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:58.278" endtime="20201030 18:31:58.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:58.300" endtime="20201030 18:31:58.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.302" endtime="20201030 18:31:58.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.275" endtime="20201030 18:31:58.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.273" endtime="20201030 18:31:58.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.321" endtime="20201030 18:31:58.619"></status>
</kw>
<msg timestamp="20201030 18:31:58.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023625958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023669125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:58.318" endtime="20201030 18:31:58.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023625958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023669125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:58.624" endtime="20201030 18:31:58.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.632" endtime="20201030 18:31:58.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.312" endtime="20201030 18:31:58.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.308" endtime="20201030 18:31:58.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:58.638" level="INFO">${RESULT} = [{'diff': 4.3167000000000205e-05}, {'diff': 4.3889000000001815e-05}, {'diff': 4.306999999999922e-05}, {'diff': 4.401399999999847e-05}, {'diff': 4.3208999999998915e-05}, {'diff': 4.3833000000000066e-05...</msg>
<status status="PASS" starttime="20201030 18:31:58.635" endtime="20201030 18:31:58.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:58.642" level="INFO">${ACCURACY} = {'diff': [4.3167000000000205e-05, 4.3889000000001815e-05, 4.306999999999922e-05, 4.401399999999847e-05, 4.3208999999998915e-05, 4.3833000000000066e-05, 4.447200000000026e-05, 4.445800000000069e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:31:58.639" endtime="20201030 18:31:58.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.647" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 18:31:58.646" endtime="20201030 18:31:58.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.649" level="INFO">VALUE: [4.3167000000000205e-05, 4.3889000000001815e-05, 4.306999999999922e-05, 4.401399999999847e-05, 4.3208999999998915e-05, 4.3833000000000066e-05, 4.447200000000026e-05, 4.445800000000069e-05, 4.444399999999765e-05, 4.445800000000069e-05, 4.281999999999897e-05, 4.4237000000002524e-05, 4.4458999999996696e-05, 4.3125000000001495e-05, 4.391600000000148e-05, 4.447200000000026e-05, 4.4416999999997986e-05, 4.3291000000000857e-05, 4.373600000000255e-05, 4.2916999999999955e-05, 4.4110999999999456e-05, 4.2889000000000815e-05, 4.270800000000241e-05, 4.39999999999989e-05, 4.4459000000000165e-05, 4.2902999999996916e-05, 4.2958999999998665e-05, 4.3875000000002246e-05, 4.301400000000094e-05, 4.402699999999857e-05, 4.2791000000000357e-05, 4.274999999999765e-05, 4.404200000000108e-05, 4.300000000000137e-05, 4.402800000000151e-05, 4.448599999999983e-05, 4.2916999999999955e-05, 4.4096999999999886e-05, 4.3055000000000176e-05, 4.2861000000001676e-05, 4.374999999999865e-05, 4.2916999999999955e-05, 4.2930999999999525e-05, 4.3722999999998985e-05, 4.302800000000051e-05, 4.3916999999997486e-05, 4.445800000000069e-05, 4.323600000000205e-05, 4.379199999999736e-05, 4.304200000000008e-05]</msg>
<status status="PASS" starttime="20201030 18:31:58.648" endtime="20201030 18:31:58.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.643" endtime="20201030 18:31:58.651"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:58.655" endtime="20201030 18:31:58.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.653" endtime="20201030 18:31:58.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.652" endtime="20201030 18:31:58.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.272" endtime="20201030 18:31:58.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.271" endtime="20201030 18:31:58.676"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.684" endtime="20201030 18:31:58.702"></status>
</kw>
<msg timestamp="20201030 18:31:58.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:58.683" endtime="20201030 18:31:58.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:58.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:58.703" endtime="20201030 18:31:58.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.706" endtime="20201030 18:31:58.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.680" endtime="20201030 18:31:58.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.678" endtime="20201030 18:31:58.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:58.715" endtime="20201030 18:31:59.001"></status>
</kw>
<msg timestamp="20201030 18:31:59.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021913778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021958222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:58.713" endtime="20201030 18:31:59.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021913778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021958222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:59.005" endtime="20201030 18:31:59.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.013" endtime="20201030 18:31:59.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.711" endtime="20201030 18:31:59.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.709" endtime="20201030 18:31:59.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:59.020" level="INFO">${RESULT} = [{'diff': 4.444400000000112e-05}, {'diff': 4.494400000000162e-05}, {'diff': 4.4833000000001066e-05}, {'diff': 4.502799999999904e-05}, {'diff': 4.4445000000000595e-05}, {'diff': 4.4430999999997556e-05}...</msg>
<status status="PASS" starttime="20201030 18:31:59.016" endtime="20201030 18:31:59.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:59.025" level="INFO">${ACCURACY} = {'diff': [4.444400000000112e-05, 4.494400000000162e-05, 4.4833000000001066e-05, 4.502799999999904e-05, 4.4445000000000595e-05, 4.4430999999997556e-05, 4.4459000000000165e-05, 4.480500000000193e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:31:59.021" endtime="20201030 18:31:59.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.029" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 18:31:59.028" endtime="20201030 18:31:59.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.031" level="INFO">VALUE: [4.444400000000112e-05, 4.494400000000162e-05, 4.4833000000001066e-05, 4.502799999999904e-05, 4.4445000000000595e-05, 4.4430999999997556e-05, 4.4459000000000165e-05, 4.480500000000193e-05, 4.4445000000000595e-05, 4.4459000000000165e-05, 4.4430999999997556e-05, 4.504099999999914e-05, 4.442999999999808e-05, 4.48329999999976e-05, 4.443000000000155e-05, 4.447200000000026e-05, 4.4624999999999526e-05, 4.4624999999999526e-05, 4.445800000000069e-05, 4.448599999999983e-05, 4.444400000000112e-05, 4.495800000000119e-05, 4.494399999999815e-05, 4.4431000000001025e-05, 4.473600000000008e-05, 4.49999999999999e-05, 4.495800000000119e-05, 4.4445000000000595e-05, 4.458400000000029e-05, 4.4736999999999555e-05, 4.482000000000097e-05, 4.444400000000112e-05, 4.504100000000261e-05, 4.477799999999879e-05, 4.473600000000008e-05, 4.4431000000001025e-05, 4.458299999999735e-05, 4.4847000000000636e-05, 4.502799999999904e-05, 4.501399999999947e-05, 4.4431000000001025e-05, 4.4930999999998056e-05, 4.495800000000119e-05, 4.4861000000000206e-05, 4.477800000000226e-05, 4.477799999999879e-05, 4.477800000000226e-05, 4.445799999999722e-05, 4.447200000000026e-05, 4.504200000000208e-05]</msg>
<status status="PASS" starttime="20201030 18:31:59.030" endtime="20201030 18:31:59.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.025" endtime="20201030 18:31:59.033"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:59.036" endtime="20201030 18:31:59.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.035" endtime="20201030 18:31:59.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.034" endtime="20201030 18:31:59.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.677" endtime="20201030 18:31:59.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:58.676" endtime="20201030 18:31:59.057"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.066" endtime="20201030 18:31:59.082"></status>
</kw>
<msg timestamp="20201030 18:31:59.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:59.064" endtime="20201030 18:31:59.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:59.084" endtime="20201030 18:31:59.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.086" endtime="20201030 18:31:59.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.062" endtime="20201030 18:31:59.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.059" endtime="20201030 18:31:59.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.095" endtime="20201030 18:31:59.383"></status>
</kw>
<msg timestamp="20201030 18:31:59.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022064125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022109417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:59.093" endtime="20201030 18:31:59.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022064125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022109417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:59.387" endtime="20201030 18:31:59.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.395" endtime="20201030 18:31:59.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.091" endtime="20201030 18:31:59.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.089" endtime="20201030 18:31:59.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:59.402" level="INFO">${RESULT} = [{'diff': 4.529199999999886e-05}, {'diff': 4.558399999999782e-05}, {'diff': 4.51939999999984e-05}, {'diff': 4.605499999999971e-05}, {'diff': 4.574999999999718e-05}, {'diff': 4.5625000000000526e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:31:59.399" endtime="20201030 18:31:59.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:59.406" level="INFO">${ACCURACY} = {'diff': [4.529199999999886e-05, 4.558399999999782e-05, 4.51939999999984e-05, 4.605499999999971e-05, 4.574999999999718e-05, 4.5625000000000526e-05, 4.604100000000014e-05, 4.599999999999743e-05, 4.5944...</msg>
<status status="PASS" starttime="20201030 18:31:59.403" endtime="20201030 18:31:59.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.410" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 18:31:59.409" endtime="20201030 18:31:59.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.413" level="INFO">VALUE: [4.529199999999886e-05, 4.558399999999782e-05, 4.51939999999984e-05, 4.605499999999971e-05, 4.574999999999718e-05, 4.5625000000000526e-05, 4.604100000000014e-05, 4.599999999999743e-05, 4.594400000000262e-05, 4.544399999999865e-05, 4.5625000000000526e-05, 4.5319000000001997e-05, 4.605600000000265e-05, 4.5138999999999596e-05, 4.5138999999999596e-05, 4.5431000000002025e-05, 4.5695000000001845e-05, 4.527799999999929e-05, 4.532000000000147e-05, 4.532000000000147e-05, 4.5125000000000026e-05, 4.53060000000019e-05, 4.577799999999979e-05, 4.588800000000087e-05, 4.5833000000002067e-05, 4.592999999999958e-05, 4.56939999999989e-05, 4.526399999999972e-05, 4.6097000000001886e-05, 4.556899999999878e-05, 4.601400000000047e-05, 4.5167000000002205e-05, 4.5138999999999596e-05, 4.55000000000004e-05, 4.573600000000108e-05, 4.548600000000083e-05, 4.604100000000014e-05, 4.531899999999853e-05, 4.605599999999918e-05, 4.5403000000002885e-05, 4.602700000000057e-05, 4.5444999999998126e-05, 4.520800000000144e-05, 4.508299999999785e-05, 4.599999999999743e-05, 4.5875000000000776e-05, 4.556899999999878e-05, 4.604199999999961e-05, 4.572199999999804e-05, 4.5611000000000956e-05]</msg>
<status status="PASS" starttime="20201030 18:31:59.411" endtime="20201030 18:31:59.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.407" endtime="20201030 18:31:59.414"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:59.418" endtime="20201030 18:31:59.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.416" endtime="20201030 18:31:59.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.415" endtime="20201030 18:31:59.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.058" endtime="20201030 18:31:59.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.057" endtime="20201030 18:31:59.438"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.447" endtime="20201030 18:31:59.465"></status>
</kw>
<msg timestamp="20201030 18:31:59.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:59.445" endtime="20201030 18:31:59.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:59.466" endtime="20201030 18:31:59.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.469" endtime="20201030 18:31:59.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.443" endtime="20201030 18:31:59.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.441" endtime="20201030 18:31:59.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.478" endtime="20201030 18:31:59.763"></status>
</kw>
<msg timestamp="20201030 18:31:59.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0228375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022884486, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:59.476" endtime="20201030 18:31:59.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0228375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022884486, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:31:59.767" endtime="20201030 18:31:59.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.776" endtime="20201030 18:31:59.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.474" endtime="20201030 18:31:59.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.472" endtime="20201030 18:31:59.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:59.782" level="INFO">${RESULT} = [{'diff': 4.698599999999886e-05}, {'diff': 4.662499999999806e-05}, {'diff': 4.66939999999999e-05}, {'diff': 4.677800000000079e-05}, {'diff': 4.6430999999999556e-05}, {'diff': 4.66529999999972e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:31:59.779" endtime="20201030 18:31:59.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:31:59.786" level="INFO">${ACCURACY} = {'diff': [4.698599999999886e-05, 4.662499999999806e-05, 4.66939999999999e-05, 4.677800000000079e-05, 4.6430999999999556e-05, 4.66529999999972e-05, 4.6931000000000056e-05, 4.6694999999999376e-05, 4.706...</msg>
<status status="PASS" starttime="20201030 18:31:59.783" endtime="20201030 18:31:59.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.791" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 18:31:59.790" endtime="20201030 18:31:59.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.793" level="INFO">VALUE: [4.698599999999886e-05, 4.662499999999806e-05, 4.66939999999999e-05, 4.677800000000079e-05, 4.6430999999999556e-05, 4.66529999999972e-05, 4.6931000000000056e-05, 4.6694999999999376e-05, 4.706999999999975e-05, 4.6153000000000166e-05, 4.620799999999897e-05, 4.6444999999999126e-05, 4.656899999999978e-05, 4.676400000000122e-05, 4.63329999999991e-05, 4.674999999999818e-05, 4.630499999999996e-05, 4.66939999999999e-05, 4.6861000000002206e-05, 4.6166999999999736e-05, 4.633400000000204e-05, 4.6694999999999376e-05, 4.648599999999836e-05, 4.702800000000104e-05, 4.629199999999986e-05, 4.6166999999999736e-05, 4.699999999999843e-05, 4.708400000000279e-05, 4.676399999999775e-05, 4.6722999999998516e-05, 4.6875000000001776e-05, 4.656899999999978e-05, 4.70000000000019e-05, 4.656900000000325e-05, 4.644399999999965e-05, 4.647200000000226e-05, 4.658299999999935e-05, 4.6639000000001096e-05, 4.66939999999999e-05, 4.6861000000002206e-05, 4.6958999999999196e-05, 4.68329999999996e-05, 4.704200000000061e-05, 4.6459000000002165e-05, 4.648599999999836e-05, 4.627799999999682e-05, 4.702800000000104e-05, 4.686200000000168e-05, 4.6722999999998516e-05, 4.656999999999925e-05]</msg>
<status status="PASS" starttime="20201030 18:31:59.792" endtime="20201030 18:31:59.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.787" endtime="20201030 18:31:59.795"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:59.799" endtime="20201030 18:31:59.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.797" endtime="20201030 18:31:59.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.796" endtime="20201030 18:31:59.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.439" endtime="20201030 18:31:59.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.439" endtime="20201030 18:31:59.819"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.828" endtime="20201030 18:31:59.845"></status>
</kw>
<msg timestamp="20201030 18:31:59.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:59.827" endtime="20201030 18:31:59.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:59.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:59.846" endtime="20201030 18:31:59.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.848" endtime="20201030 18:31:59.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.824" endtime="20201030 18:31:59.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.822" endtime="20201030 18:31:59.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:59.857" endtime="20201030 18:32:00.143"></status>
</kw>
<msg timestamp="20201030 18:32:00.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022015278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022063153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:59.856" endtime="20201030 18:32:00.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022015278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022063153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:00.148" endtime="20201030 18:32:00.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.156" endtime="20201030 18:32:00.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.853" endtime="20201030 18:32:00.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.852" endtime="20201030 18:32:00.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:00.163" level="INFO">${RESULT} = [{'diff': 4.787499999999931e-05}, {'diff': 4.790299999999845e-05}, {'diff': 4.755600000000068e-05}, {'diff': 4.794399999999768e-05}, {'diff': 4.776399999999875e-05}, {'diff': 4.787499999999931e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:00.160" endtime="20201030 18:32:00.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:00.168" level="INFO">${ACCURACY} = {'diff': [4.787499999999931e-05, 4.790299999999845e-05, 4.755600000000068e-05, 4.794399999999768e-05, 4.776399999999875e-05, 4.787499999999931e-05, 4.745800000000022e-05, 4.751400000000197e-05, 4.7471...</msg>
<status status="PASS" starttime="20201030 18:32:00.164" endtime="20201030 18:32:00.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.173" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 18:32:00.172" endtime="20201030 18:32:00.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.175" level="INFO">VALUE: [4.787499999999931e-05, 4.790299999999845e-05, 4.755600000000068e-05, 4.794399999999768e-05, 4.776399999999875e-05, 4.787499999999931e-05, 4.745800000000022e-05, 4.751400000000197e-05, 4.747199999999979e-05, 4.720799999999997e-05, 4.801400000000247e-05, 4.717999999999736e-05, 4.723599999999911e-05, 4.731900000000053e-05, 4.716600000000126e-05, 4.731900000000053e-05, 4.73330000000001e-05, 4.71529999999977e-05, 4.772200000000004e-05, 4.791699999999802e-05, 4.799999999999943e-05, 4.734699999999967e-05, 4.788899999999888e-05, 4.805600000000118e-05, 4.73330000000001e-05, 4.7681000000000806e-05, 4.784700000000017e-05, 4.723600000000258e-05, 4.772200000000004e-05, 4.737499999999881e-05, 4.787499999999931e-05, 4.71940000000004e-05, 4.776400000000222e-05, 4.7375000000002276e-05, 4.798599999999986e-05, 4.788899999999888e-05, 4.799999999999943e-05, 4.75000000000024e-05, 4.7708999999999946e-05, 4.788899999999888e-05, 4.790299999999845e-05, 4.7986999999999336e-05, 4.78200000000005e-05, 4.793099999999759e-05, 4.805600000000118e-05, 4.734699999999967e-05, 4.7917000000001486e-05, 4.76940000000009e-05, 4.731900000000053e-05, 4.78330000000006e-05]</msg>
<status status="PASS" starttime="20201030 18:32:00.174" endtime="20201030 18:32:00.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.169" endtime="20201030 18:32:00.181"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:00.184" endtime="20201030 18:32:00.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.183" endtime="20201030 18:32:00.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.182" endtime="20201030 18:32:00.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.820" endtime="20201030 18:32:00.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:59.820" endtime="20201030 18:32:00.205"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.214" endtime="20201030 18:32:00.231"></status>
</kw>
<msg timestamp="20201030 18:32:00.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:00.212" endtime="20201030 18:32:00.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:00.233" endtime="20201030 18:32:00.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.236" endtime="20201030 18:32:00.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.210" endtime="20201030 18:32:00.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.208" endtime="20201030 18:32:00.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.245" endtime="20201030 18:32:00.535"></status>
</kw>
<msg timestamp="20201030 18:32:00.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022802389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022850597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:00.243" endtime="20201030 18:32:00.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022802389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022850597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:00.545" endtime="20201030 18:32:00.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.564" endtime="20201030 18:32:00.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.241" endtime="20201030 18:32:00.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.239" endtime="20201030 18:32:00.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:00.578" level="INFO">${RESULT} = [{'diff': 4.820800000000097e-05}, {'diff': 4.833299999999763e-05}, {'diff': 4.862500000000006e-05}, {'diff': 4.893099999999859e-05}, {'diff': 4.861100000000049e-05}, {'diff': 4.873600000000061e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:00.571" endtime="20201030 18:32:00.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:00.587" level="INFO">${ACCURACY} = {'diff': [4.820800000000097e-05, 4.833299999999763e-05, 4.862500000000006e-05, 4.893099999999859e-05, 4.861100000000049e-05, 4.873600000000061e-05, 4.829199999999839e-05, 4.824999999999968e-05, 4.8597...</msg>
<status status="PASS" starttime="20201030 18:32:00.580" endtime="20201030 18:32:00.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.596" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 18:32:00.594" endtime="20201030 18:32:00.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.601" level="INFO">VALUE: [4.820800000000097e-05, 4.833299999999763e-05, 4.862500000000006e-05, 4.893099999999859e-05, 4.861100000000049e-05, 4.873600000000061e-05, 4.829199999999839e-05, 4.824999999999968e-05, 4.859700000000092e-05, 4.813899999999913e-05, 4.888899999999988e-05, 4.8931000000002056e-05, 4.812499999999956e-05, 4.844400000000165e-05, 4.8707999999998e-05, 4.8139000000002596e-05, 4.886099999999727e-05, 4.830499999999849e-05, 4.902799999999957e-05, 4.82079999999975e-05, 4.902799999999957e-05, 4.884700000000117e-05, 4.905599999999871e-05, 4.893099999999859e-05, 4.849999999999993e-05, 4.891699999999902e-05, 4.873599999999714e-05, 4.902799999999957e-05, 4.8153000000002166e-05, 4.816699999999827e-05, 4.890299999999945e-05, 4.867999999999886e-05, 4.831900000000153e-05, 4.867999999999886e-05, 4.877699999999985e-05, 4.88200000000015e-05, 4.905500000000271e-05, 4.888899999999988e-05, 4.86529999999992e-05, 4.876399999999975e-05, 4.808300000000085e-05, 4.847200000000079e-05, 4.902799999999957e-05, 4.8473000000000266e-05, 4.891699999999902e-05, 4.8459000000000696e-05, 4.862500000000006e-05, 4.8403000000002416e-05, 4.868000000000233e-05, 4.830500000000196e-05]</msg>
<status status="PASS" starttime="20201030 18:32:00.598" endtime="20201030 18:32:00.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.588" endtime="20201030 18:32:00.604"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:00.612" endtime="20201030 18:32:00.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.608" endtime="20201030 18:32:00.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.606" endtime="20201030 18:32:00.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.206" endtime="20201030 18:32:00.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.206" endtime="20201030 18:32:00.633"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.642" endtime="20201030 18:32:00.663"></status>
</kw>
<msg timestamp="20201030 18:32:00.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:00.640" endtime="20201030 18:32:00.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:00.665" endtime="20201030 18:32:00.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.667" endtime="20201030 18:32:00.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.638" endtime="20201030 18:32:00.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.636" endtime="20201030 18:32:00.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.676" endtime="20201030 18:32:00.961"></status>
</kw>
<msg timestamp="20201030 18:32:00.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025546389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025595542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:00.675" endtime="20201030 18:32:00.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025546389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025595542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:00.966" endtime="20201030 18:32:00.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:00.974" endtime="20201030 18:32:00.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.672" endtime="20201030 18:32:00.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.670" endtime="20201030 18:32:00.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:00.981" level="INFO">${RESULT} = [{'diff': 4.91529999999997e-05}, {'diff': 4.9417000000002986e-05}, {'diff': 4.980599999999946e-05}, {'diff': 4.918099999999884e-05}, {'diff': 4.922199999999807e-05}, {'diff': 4.975000000000118e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:00.977" endtime="20201030 18:32:00.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:00.985" level="INFO">${ACCURACY} = {'diff': [4.91529999999997e-05, 4.9417000000002986e-05, 4.980599999999946e-05, 4.918099999999884e-05, 4.922199999999807e-05, 4.975000000000118e-05, 4.9137999999997184e-05, 4.951299999999756e-05, 4.956...</msg>
<status status="PASS" starttime="20201030 18:32:00.982" endtime="20201030 18:32:00.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.989" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 18:32:00.988" endtime="20201030 18:32:00.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:00.992" level="INFO">VALUE: [4.91529999999997e-05, 4.9417000000002986e-05, 4.980599999999946e-05, 4.918099999999884e-05, 4.922199999999807e-05, 4.975000000000118e-05, 4.9137999999997184e-05, 4.951299999999756e-05, 4.956899999999931e-05, 4.98330000000026e-05, 4.947200000000179e-05, 5.002800000000057e-05, 4.91529999999997e-05, 4.956899999999931e-05, 4.958299999999888e-05, 4.96530000000002e-05, 4.955600000000268e-05, 4.983299999999913e-05, 4.93339999999981e-05, 4.931899999999906e-05, 4.986100000000174e-05, 4.933400000000157e-05, 4.993099999999959e-05, 4.974999999999771e-05, 4.950000000000093e-05, 4.929099999999992e-05, 4.92079999999985e-05, 4.916599999999979e-05, 4.972200000000204e-05, 4.93330000000021e-05, 4.91940000000024e-05, 4.976400000000075e-05, 4.936100000000124e-05, 4.919399999999893e-05, 4.938900000000038e-05, 4.926400000000025e-05, 4.958400000000182e-05, 4.911100000000099e-05, 4.984800000000164e-05, 4.961100000000149e-05, 4.9223000000001016e-05, 4.990300000000045e-05, 4.961099999999802e-05, 5.004100000000067e-05, 4.930499999999949e-05, 4.942999999999961e-05, 4.934700000000167e-05, 4.961100000000149e-05, 4.994499999999916e-05, 4.98330000000026e-05]</msg>
<status status="PASS" starttime="20201030 18:32:00.990" endtime="20201030 18:32:00.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.986" endtime="20201030 18:32:00.994"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:00.998" endtime="20201030 18:32:01.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.996" endtime="20201030 18:32:01.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.995" endtime="20201030 18:32:01.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.634" endtime="20201030 18:32:01.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:00.634" endtime="20201030 18:32:01.018"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.027" endtime="20201030 18:32:01.044"></status>
</kw>
<msg timestamp="20201030 18:32:01.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:01.026" endtime="20201030 18:32:01.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:01.046" endtime="20201030 18:32:01.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.048" endtime="20201030 18:32:01.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.023" endtime="20201030 18:32:01.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.021" endtime="20201030 18:32:01.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.057" endtime="20201030 18:32:01.349"></status>
</kw>
<msg timestamp="20201030 18:32:01.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022346583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022397333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:01.056" endtime="20201030 18:32:01.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022346583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022397333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:01.359" endtime="20201030 18:32:01.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.378" endtime="20201030 18:32:01.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.053" endtime="20201030 18:32:01.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.051" endtime="20201030 18:32:01.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:01.393" level="INFO">${RESULT} = [{'diff': 5.074999999999871e-05}, {'diff': 5.098599999999939e-05}, {'diff': 5.01530000000007e-05}, {'diff': 5.061100000000249e-05}, {'diff': 5.016700000000027e-05}, {'diff': 5.044400000000018e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:01.386" endtime="20201030 18:32:01.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:01.404" level="INFO">${ACCURACY} = {'diff': [5.074999999999871e-05, 5.098599999999939e-05, 5.01530000000007e-05, 5.061100000000249e-05, 5.016700000000027e-05, 5.044400000000018e-05, 5.086099999999927e-05, 5.011099999999852e-05, 5.07360...</msg>
<status status="PASS" starttime="20201030 18:32:01.395" endtime="20201030 18:32:01.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.414" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 18:32:01.412" endtime="20201030 18:32:01.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.419" level="INFO">VALUE: [5.074999999999871e-05, 5.098599999999939e-05, 5.01530000000007e-05, 5.061100000000249e-05, 5.016700000000027e-05, 5.044400000000018e-05, 5.086099999999927e-05, 5.011099999999852e-05, 5.073600000000261e-05, 5.018099999999984e-05, 5.098599999999939e-05, 5.079200000000089e-05, 5.099999999999896e-05, 5.080600000000046e-05, 5.083300000000013e-05, 5.03339999999991e-05, 5.058299999999988e-05, 5.090300000000145e-05, 5.0888000000002404e-05, 5.058299999999988e-05, 5.090299999999798e-05, 5.029100000000092e-05, 5.047200000000279e-05, 5.047199999999932e-05, 5.048599999999889e-05, 5.077800000000132e-05, 5.108300000000038e-05, 5.1014000000002e-05, 5.031999999999953e-05, 5.091700000000102e-05, 5.088899999999841e-05, 5.012499999999809e-05, 5.107000000000028e-05, 5.016700000000027e-05, 5.012500000000156e-05, 5.045899999999923e-05, 5.051300000000203e-05, 5.022199999999907e-05, 5.099999999999896e-05, 5.08469999999997e-05, 5.091600000000154e-05, 5.038900000000138e-05, 5.099999999999896e-05, 5.087499999999884e-05, 5.031900000000006e-05, 5.077800000000132e-05, 5.090299999999798e-05, 5.061099999999902e-05, 5.098600000000286e-05, 5.1014000000002e-05]</msg>
<status status="PASS" starttime="20201030 18:32:01.416" endtime="20201030 18:32:01.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.406" endtime="20201030 18:32:01.422"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:01.430" endtime="20201030 18:32:01.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.427" endtime="20201030 18:32:01.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.425" endtime="20201030 18:32:01.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.019" endtime="20201030 18:32:01.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.019" endtime="20201030 18:32:01.452"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.462" endtime="20201030 18:32:01.480"></status>
</kw>
<msg timestamp="20201030 18:32:01.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:01.460" endtime="20201030 18:32:01.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:01.481" endtime="20201030 18:32:01.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.484" endtime="20201030 18:32:01.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.457" endtime="20201030 18:32:01.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.455" endtime="20201030 18:32:01.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.493" endtime="20201030 18:32:01.779"></status>
</kw>
<msg timestamp="20201030 18:32:01.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02366025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023712208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:01.492" endtime="20201030 18:32:01.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02366025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023712208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:01.783" endtime="20201030 18:32:01.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.792" endtime="20201030 18:32:01.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.489" endtime="20201030 18:32:01.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.487" endtime="20201030 18:32:01.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:01.798" level="INFO">${RESULT} = [{'diff': 5.1957999999997784e-05}, {'diff': 5.115299999999823e-05}, {'diff': 5.181899999999809e-05}, {'diff': 5.12080000000005e-05}, {'diff': 5.130500000000149e-05}, {'diff': 5.155499999999827e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:01.795" endtime="20201030 18:32:01.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:01.803" level="INFO">${ACCURACY} = {'diff': [5.1957999999997784e-05, 5.115299999999823e-05, 5.181899999999809e-05, 5.12080000000005e-05, 5.130500000000149e-05, 5.155499999999827e-05, 5.187499999999984e-05, 5.18470000000007e-05, 5.18200...</msg>
<status status="PASS" starttime="20201030 18:32:01.799" endtime="20201030 18:32:01.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.807" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 18:32:01.806" endtime="20201030 18:32:01.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.809" level="INFO">VALUE: [5.1957999999997784e-05, 5.115299999999823e-05, 5.181899999999809e-05, 5.12080000000005e-05, 5.130500000000149e-05, 5.155499999999827e-05, 5.187499999999984e-05, 5.18470000000007e-05, 5.182000000000103e-05, 5.162499999999959e-05, 5.126399999999878e-05, 5.162499999999959e-05, 5.120899999999998e-05, 5.118099999999737e-05, 5.111099999999952e-05, 5.14729999999998e-05, 5.162499999999959e-05, 5.148599999999989e-05, 5.1179999999997894e-05, 5.1929999999998644e-05, 5.1401999999999004e-05, 5.133300000000063e-05, 5.183299999999766e-05, 5.129199999999792e-05, 5.166700000000177e-05, 5.1708000000001e-05, 5.144500000000066e-05, 5.204200000000214e-05, 5.184699999999723e-05, 5.187499999999984e-05, 5.123599999999964e-05, 5.201300000000006e-05, 5.112499999999909e-05, 5.129199999999792e-05, 5.205499999999877e-05, 5.1401999999999004e-05, 5.148599999999989e-05, 5.158299999999741e-05, 5.186100000000027e-05, 5.144400000000118e-05, 5.16530000000022e-05, 5.134799999999967e-05, 5.174999999999971e-05, 5.127799999999835e-05, 5.198600000000039e-05, 5.136099999999977e-05, 5.1985999999996924e-05, 5.14729999999998e-05, 5.2014000000003e-05, 5.169400000000143e-05]</msg>
<status status="PASS" starttime="20201030 18:32:01.808" endtime="20201030 18:32:01.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.803" endtime="20201030 18:32:01.811"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:01.815" endtime="20201030 18:32:01.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.813" endtime="20201030 18:32:01.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.812" endtime="20201030 18:32:01.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.453" endtime="20201030 18:32:01.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.452" endtime="20201030 18:32:01.835"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.844" endtime="20201030 18:32:01.862"></status>
</kw>
<msg timestamp="20201030 18:32:01.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:01.842" endtime="20201030 18:32:01.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:01.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:01.864" endtime="20201030 18:32:01.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.866" endtime="20201030 18:32:01.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.840" endtime="20201030 18:32:01.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.838" endtime="20201030 18:32:01.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:01.875" endtime="20201030 18:32:02.171"></status>
</kw>
<msg timestamp="20201030 18:32:02.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023166819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023219097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:01.874" endtime="20201030 18:32:02.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023166819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023219097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:02.181" endtime="20201030 18:32:02.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.200" endtime="20201030 18:32:02.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.871" endtime="20201030 18:32:02.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.869" endtime="20201030 18:32:02.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:02.214" level="INFO">${RESULT} = [{'diff': 5.227799999999935e-05}, {'diff': 5.2429999999999144e-05}, {'diff': 5.259700000000145e-05}, {'diff': 5.256899999999884e-05}, {'diff': 5.288900000000041e-05}, {'diff': 5.300000000000096e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:32:02.207" endtime="20201030 18:32:02.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:02.226" level="INFO">${ACCURACY} = {'diff': [5.227799999999935e-05, 5.2429999999999144e-05, 5.259700000000145e-05, 5.256899999999884e-05, 5.288900000000041e-05, 5.300000000000096e-05, 5.2749999999997244e-05, 5.2957999999998784e-05, 5.2...</msg>
<status status="PASS" starttime="20201030 18:32:02.216" endtime="20201030 18:32:02.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.237" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 18:32:02.235" endtime="20201030 18:32:02.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.243" level="INFO">VALUE: [5.227799999999935e-05, 5.2429999999999144e-05, 5.259700000000145e-05, 5.256899999999884e-05, 5.288900000000041e-05, 5.300000000000096e-05, 5.2749999999997244e-05, 5.2957999999998784e-05, 5.290299999999998e-05, 5.28609999999978e-05, 5.23340000000011e-05, 5.30280000000001e-05, 5.265299999999973e-05, 5.241699999999905e-05, 5.288900000000041e-05, 5.304199999999967e-05, 5.213899999999966e-05, 5.291699999999955e-05, 5.258299999999841e-05, 5.2735999999997674e-05, 5.2443999999998714e-05, 5.212500000000009e-05, 5.290299999999998e-05, 5.272200000000157e-05, 5.281899999999909e-05, 5.301400000000053e-05, 5.245900000000123e-05, 5.213899999999966e-05, 5.308399999999838e-05, 5.24730000000008e-05, 5.243100000000209e-05, 5.262500000000059e-05, 5.263900000000016e-05, 5.287499999999737e-05, 5.255499999999927e-05, 5.256900000000231e-05, 5.2971999999998354e-05, 5.288900000000041e-05, 5.2179999999998894e-05, 5.243099999999862e-05, 5.215299999999923e-05, 5.248600000000089e-05, 5.213899999999966e-05, 5.258300000000188e-05, 5.220899999999751e-05, 5.30280000000001e-05, 5.2235999999997174e-05, 5.283399999999813e-05, 5.28340000000016e-05, 5.30280000000001e-05]</msg>
<status status="PASS" starttime="20201030 18:32:02.240" endtime="20201030 18:32:02.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.228" endtime="20201030 18:32:02.246"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:02.249" endtime="20201030 18:32:02.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.248" endtime="20201030 18:32:02.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.247" endtime="20201030 18:32:02.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.836" endtime="20201030 18:32:02.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:01.836" endtime="20201030 18:32:02.270"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.279" endtime="20201030 18:32:02.296"></status>
</kw>
<msg timestamp="20201030 18:32:02.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:02.277" endtime="20201030 18:32:02.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:02.297" endtime="20201030 18:32:02.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.300" endtime="20201030 18:32:02.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.275" endtime="20201030 18:32:02.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.273" endtime="20201030 18:32:02.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.309" endtime="20201030 18:32:02.599"></status>
</kw>
<msg timestamp="20201030 18:32:02.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022315111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022368403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:02.308" endtime="20201030 18:32:02.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022315111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022368403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:02.603" endtime="20201030 18:32:02.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.611" endtime="20201030 18:32:02.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.305" endtime="20201030 18:32:02.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.303" endtime="20201030 18:32:02.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:02.618" level="INFO">${RESULT} = [{'diff': 5.329199999999992e-05}, {'diff': 5.3777999999997383e-05}, {'diff': 5.3721999999999104e-05}, {'diff': 5.31669999999998e-05}, {'diff': 5.329199999999992e-05}, {'diff': 5.393100000000012e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:32:02.615" endtime="20201030 18:32:02.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:02.623" level="INFO">${ACCURACY} = {'diff': [5.329199999999992e-05, 5.3777999999997383e-05, 5.3721999999999104e-05, 5.31669999999998e-05, 5.329199999999992e-05, 5.393100000000012e-05, 5.329199999999992e-05, 5.408299999999991e-05, 5.386...</msg>
<status status="PASS" starttime="20201030 18:32:02.619" endtime="20201030 18:32:02.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.627" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 18:32:02.626" endtime="20201030 18:32:02.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.630" level="INFO">VALUE: [5.329199999999992e-05, 5.3777999999997383e-05, 5.3721999999999104e-05, 5.31669999999998e-05, 5.329199999999992e-05, 5.393100000000012e-05, 5.329199999999992e-05, 5.408299999999991e-05, 5.38609999999988e-05, 5.3457999999999284e-05, 5.345800000000275e-05, 5.33479999999982e-05, 5.3443999999999714e-05, 5.3457999999999284e-05, 5.326400000000078e-05, 5.355599999999974e-05, 5.348600000000189e-05, 5.343099999999962e-05, 5.376300000000181e-05, 5.387499999999837e-05, 5.375000000000171e-05, 5.359800000000192e-05, 5.358399999999888e-05, 5.326400000000078e-05, 5.365300000000073e-05, 5.359700000000245e-05, 5.384699999999923e-05, 5.388900000000141e-05, 5.331900000000306e-05, 5.390299999999751e-05, 5.405600000000024e-05, 5.3471999999998854e-05, 5.404200000000067e-05, 5.406999999999981e-05, 5.358399999999888e-05, 5.393100000000012e-05, 5.40280000000011e-05, 5.344500000000266e-05, 5.40280000000011e-05, 5.373699999999815e-05, 5.359699999999898e-05, 5.3721999999999104e-05, 5.3707999999999534e-05, 5.337500000000134e-05, 5.3930000000000644e-05, 5.315300000000023e-05, 5.375000000000171e-05, 5.3735999999998674e-05, 5.381900000000009e-05, 5.401400000000153e-05]</msg>
<status status="PASS" starttime="20201030 18:32:02.628" endtime="20201030 18:32:02.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.624" endtime="20201030 18:32:02.631"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:02.635" endtime="20201030 18:32:02.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.633" endtime="20201030 18:32:02.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.632" endtime="20201030 18:32:02.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.271" endtime="20201030 18:32:02.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.270" endtime="20201030 18:32:02.655"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.669" endtime="20201030 18:32:02.687"></status>
</kw>
<msg timestamp="20201030 18:32:02.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:02.666" endtime="20201030 18:32:02.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:02.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:02.689" endtime="20201030 18:32:02.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.693" endtime="20201030 18:32:02.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.661" endtime="20201030 18:32:02.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.658" endtime="20201030 18:32:02.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:02.708" endtime="20201030 18:32:03.010"></status>
</kw>
<msg timestamp="20201030 18:32:03.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02766475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02771975, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:32:02.705" endtime="20201030 18:32:03.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02766475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02771975, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:32:03.020" endtime="20201030 18:32:03.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.039" endtime="20201030 18:32:03.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.702" endtime="20201030 18:32:03.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.699" endtime="20201030 18:32:03.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:03.053" level="INFO">${RESULT} = [{'diff': 5.500000000000296e-05}, {'diff': 5.418100000000037e-05}, {'diff': 5.4763999999998814e-05}, {'diff': 5.413900000000166e-05}, {'diff': 5.482000000000056e-05}, {'diff': 5.4749999999999244e-05},...</msg>
<status status="PASS" starttime="20201030 18:32:03.046" endtime="20201030 18:32:03.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:03.058" level="INFO">${ACCURACY} = {'diff': [5.500000000000296e-05, 5.418100000000037e-05, 5.4763999999998814e-05, 5.413900000000166e-05, 5.482000000000056e-05, 5.4749999999999244e-05, 5.48609999999998e-05, 5.412500000000209e-05, 5.472...</msg>
<status status="PASS" starttime="20201030 18:32:03.055" endtime="20201030 18:32:03.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.062" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 18:32:03.061" endtime="20201030 18:32:03.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.065" level="INFO">VALUE: [5.500000000000296e-05, 5.418100000000037e-05, 5.4763999999998814e-05, 5.413900000000166e-05, 5.482000000000056e-05, 5.4749999999999244e-05, 5.48609999999998e-05, 5.412500000000209e-05, 5.472299999999958e-05, 5.459699999999998e-05, 5.459699999999998e-05, 5.4929999999998175e-05, 5.4208000000000034e-05, 5.4679999999997925e-05, 5.4777999999998384e-05, 5.4180000000000894e-05, 5.4999999999999494e-05, 5.458300000000041e-05, 5.462500000000259e-05, 5.4471999999999854e-05, 5.5027999999998634e-05, 5.483400000000013e-05, 5.463899999999869e-05, 5.505600000000124e-05, 5.488899999999894e-05, 5.506900000000134e-05, 5.4166000000001324e-05, 5.427699999999841e-05, 5.4166000000001324e-05, 5.4165999999997855e-05, 5.4194000000000464e-05, 5.438900000000191e-05, 5.434699999999973e-05, 5.429200000000092e-05, 5.4985999999999924e-05, 5.420899999999951e-05, 5.469500000000044e-05, 5.511100000000005e-05, 5.430599999999702e-05, 5.41670000000008e-05, 5.459699999999998e-05, 5.455600000000074e-05, 5.409700000000295e-05, 5.423600000000264e-05, 5.5027999999998634e-05, 5.433300000000016e-05, 5.409700000000295e-05, 5.488900000000241e-05, 5.473600000000314e-05, 5.441700000000105e-05]</msg>
<status status="PASS" starttime="20201030 18:32:03.063" endtime="20201030 18:32:03.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.059" endtime="20201030 18:32:03.066"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:03.070" endtime="20201030 18:32:03.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.069" endtime="20201030 18:32:03.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.067" endtime="20201030 18:32:03.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.656" endtime="20201030 18:32:03.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:02.656" endtime="20201030 18:32:03.091"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.099" endtime="20201030 18:32:03.118"></status>
</kw>
<msg timestamp="20201030 18:32:03.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:03.098" endtime="20201030 18:32:03.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:03.120" endtime="20201030 18:32:03.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.122" endtime="20201030 18:32:03.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.095" endtime="20201030 18:32:03.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.093" endtime="20201030 18:32:03.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.131" endtime="20201030 18:32:03.418"></status>
</kw>
<msg timestamp="20201030 18:32:03.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023172847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023228889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:03.130" endtime="20201030 18:32:03.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023172847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023228889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:03.422" endtime="20201030 18:32:03.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.430" endtime="20201030 18:32:03.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.127" endtime="20201030 18:32:03.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.126" endtime="20201030 18:32:03.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:03.437" level="INFO">${RESULT} = [{'diff': 5.6041999999999204e-05}, {'diff': 5.5458000000001284e-05}, {'diff': 5.5986000000000924e-05}, {'diff': 5.543100000000162e-05}, {'diff': 5.570900000000101e-05}, {'diff': 5.561100000000055e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:03.434" endtime="20201030 18:32:03.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:03.441" level="INFO">${ACCURACY} = {'diff': [5.6041999999999204e-05, 5.5458000000001284e-05, 5.5986000000000924e-05, 5.543100000000162e-05, 5.570900000000101e-05, 5.561100000000055e-05, 5.541700000000205e-05, 5.531899999999812e-05, 5.5...</msg>
<status status="PASS" starttime="20201030 18:32:03.438" endtime="20201030 18:32:03.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.445" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 18:32:03.444" endtime="20201030 18:32:03.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.448" level="INFO">VALUE: [5.6041999999999204e-05, 5.5458000000001284e-05, 5.5986000000000924e-05, 5.543100000000162e-05, 5.570900000000101e-05, 5.561100000000055e-05, 5.541700000000205e-05, 5.531899999999812e-05, 5.5750000000000244e-05, 5.527699999999941e-05, 5.5763999999999814e-05, 5.5444000000001714e-05, 5.515300000000223e-05, 5.5208000000001034e-05, 5.527800000000235e-05, 5.55549999999988e-05, 5.5750000000000244e-05, 5.558300000000141e-05, 5.569500000000144e-05, 5.5486000000000424e-05, 5.584799999999723e-05, 5.569500000000144e-05, 5.583400000000113e-05, 5.573700000000015e-05, 5.562500000000012e-05, 5.6000000000000494e-05, 5.584700000000123e-05, 5.513899999999919e-05, 5.5180000000001894e-05, 5.5735999999997204e-05, 5.609700000000148e-05, 5.556899999999837e-05, 5.53610000000003e-05, 5.6027999999999634e-05, 5.515299999999876e-05, 5.5736000000000674e-05, 5.562500000000012e-05, 5.569500000000144e-05, 5.532000000000106e-05, 5.512499999999962e-05, 5.5915999999999605e-05, 5.537499999999987e-05, 5.513899999999919e-05, 5.562500000000012e-05, 5.5416000000002574e-05, 5.5735999999997204e-05, 5.5929999999999175e-05, 5.518100000000137e-05, 5.543099999999815e-05, 5.5444000000001714e-05]</msg>
<status status="PASS" starttime="20201030 18:32:03.446" endtime="20201030 18:32:03.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.442" endtime="20201030 18:32:03.450"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:03.454" endtime="20201030 18:32:03.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.452" endtime="20201030 18:32:03.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.451" endtime="20201030 18:32:03.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.092" endtime="20201030 18:32:03.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.091" endtime="20201030 18:32:03.474"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.483" endtime="20201030 18:32:03.501"></status>
</kw>
<msg timestamp="20201030 18:32:03.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:03.481" endtime="20201030 18:32:03.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:03.502" endtime="20201030 18:32:03.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.505" endtime="20201030 18:32:03.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.479" endtime="20201030 18:32:03.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.477" endtime="20201030 18:32:03.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.514" endtime="20201030 18:32:03.800"></status>
</kw>
<msg timestamp="20201030 18:32:03.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022061736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022117944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:03.512" endtime="20201030 18:32:03.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022061736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022117944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:03.804" endtime="20201030 18:32:03.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.813" endtime="20201030 18:32:03.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.510" endtime="20201030 18:32:03.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.508" endtime="20201030 18:32:03.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:03.819" level="INFO">${RESULT} = [{'diff': 5.6208000000002034e-05}, {'diff': 5.7028000000000634e-05}, {'diff': 5.627700000000041e-05}, {'diff': 5.609700000000148e-05}, {'diff': 5.70550000000003e-05}, {'diff': 5.6916000000000605e-05},...</msg>
<status status="PASS" starttime="20201030 18:32:03.816" endtime="20201030 18:32:03.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:03.824" level="INFO">${ACCURACY} = {'diff': [5.6208000000002034e-05, 5.7028000000000634e-05, 5.627700000000041e-05, 5.609700000000148e-05, 5.70550000000003e-05, 5.6916000000000605e-05, 5.658299999999894e-05, 5.688900000000094e-05, 5.61...</msg>
<status status="PASS" starttime="20201030 18:32:03.820" endtime="20201030 18:32:03.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.829" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 18:32:03.828" endtime="20201030 18:32:03.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.831" level="INFO">VALUE: [5.6208000000002034e-05, 5.7028000000000634e-05, 5.627700000000041e-05, 5.609700000000148e-05, 5.70550000000003e-05, 5.6916000000000605e-05, 5.658299999999894e-05, 5.688900000000094e-05, 5.613900000000019e-05, 5.683300000000266e-05, 5.6471999999998385e-05, 5.7028000000000634e-05, 5.6749999999997774e-05, 5.6985999999998455e-05, 5.647299999999786e-05, 5.631900000000259e-05, 5.6764000000000814e-05, 5.6707999999999065e-05, 5.706899999999987e-05, 5.6208000000002034e-05, 5.687500000000137e-05, 5.6416000000000105e-05, 5.6750000000001244e-05, 5.616699999999933e-05, 5.683299999999919e-05, 5.659700000000198e-05, 5.613900000000019e-05, 5.688900000000094e-05, 5.693099999999965e-05, 5.615299999999976e-05, 5.616699999999933e-05, 5.620900000000151e-05, 5.6652000000000785e-05, 5.7042000000000204e-05, 5.6194000000002464e-05, 5.613900000000019e-05, 5.6930000000000175e-05, 5.6986000000001924e-05, 5.629099999999998e-05, 5.6472000000001854e-05, 5.691700000000008e-05, 5.6764000000000814e-05, 5.6791999999999954e-05, 5.645899999999829e-05, 5.644499999999872e-05, 5.6305999999999023e-05, 5.666699999999983e-05, 5.693099999999965e-05, 5.662499999999765e-05, 5.6528000000000134e-05]</msg>
<status status="PASS" starttime="20201030 18:32:03.830" endtime="20201030 18:32:03.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.825" endtime="20201030 18:32:03.833"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:03.836" endtime="20201030 18:32:03.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.835" endtime="20201030 18:32:03.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.834" endtime="20201030 18:32:03.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.475" endtime="20201030 18:32:03.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.475" endtime="20201030 18:32:03.857"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.866" endtime="20201030 18:32:03.883"></status>
</kw>
<msg timestamp="20201030 18:32:03.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:03.864" endtime="20201030 18:32:03.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:03.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:03.885" endtime="20201030 18:32:03.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.887" endtime="20201030 18:32:03.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.861" endtime="20201030 18:32:03.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.859" endtime="20201030 18:32:03.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:03.896" endtime="20201030 18:32:04.185"></status>
</kw>
<msg timestamp="20201030 18:32:04.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022247403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022304556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:03.895" endtime="20201030 18:32:04.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022247403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022304556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:04.189" endtime="20201030 18:32:04.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.197" endtime="20201030 18:32:04.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.892" endtime="20201030 18:32:04.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.890" endtime="20201030 18:32:04.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:04.204" level="INFO">${RESULT} = [{'diff': 5.715300000000076e-05}, {'diff': 5.8013999999998594e-05}, {'diff': 5.7221999999999135e-05}, {'diff': 5.766700000000083e-05}, {'diff': 5.727699999999794e-05}, {'diff': 5.80550000000013e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:32:04.201" endtime="20201030 18:32:04.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:04.208" level="INFO">${ACCURACY} = {'diff': [5.715300000000076e-05, 5.8013999999998594e-05, 5.7221999999999135e-05, 5.766700000000083e-05, 5.727699999999794e-05, 5.80550000000013e-05, 5.7735999999999205e-05, 5.806900000000087e-05, 5.74...</msg>
<status status="PASS" starttime="20201030 18:32:04.205" endtime="20201030 18:32:04.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.213" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 18:32:04.211" endtime="20201030 18:32:04.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.215" level="INFO">VALUE: [5.715300000000076e-05, 5.8013999999998594e-05, 5.7221999999999135e-05, 5.766700000000083e-05, 5.727699999999794e-05, 5.80550000000013e-05, 5.7735999999999205e-05, 5.806900000000087e-05, 5.7486000000002424e-05, 5.786099999999933e-05, 5.7471999999999385e-05, 5.743099999999668e-05, 5.7471999999999385e-05, 5.783300000000019e-05, 5.745899999999929e-05, 5.763899999999822e-05, 5.7165999999997386e-05, 5.7319999999999593e-05, 5.802699999999869e-05, 5.784699999999976e-05, 5.738900000000144e-05, 5.7444000000000245e-05, 5.715300000000076e-05, 5.712499999999815e-05, 5.7207999999999565e-05, 5.743099999999668e-05, 5.7763999999998344e-05, 5.76810000000004e-05, 5.7569999999999844e-05, 5.73610000000023e-05, 5.809700000000001e-05, 5.7721999999999635e-05, 5.7306000000000024e-05, 5.711200000000152e-05, 5.7443999999996775e-05, 5.763899999999822e-05, 5.729100000000098e-05, 5.7235999999998705e-05, 5.7694000000000495e-05, 5.784699999999976e-05, 5.795899999999979e-05, 5.7763999999998344e-05, 5.8013999999998594e-05, 5.7457999999999815e-05, 5.7500000000001994e-05, 5.744499999999972e-05, 5.713900000000119e-05, 5.7292000000000454e-05, 5.73610000000023e-05, 5.7916000000001605e-05]</msg>
<status status="PASS" starttime="20201030 18:32:04.214" endtime="20201030 18:32:04.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.209" endtime="20201030 18:32:04.217"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:04.221" endtime="20201030 18:32:04.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.219" endtime="20201030 18:32:04.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.218" endtime="20201030 18:32:04.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.858" endtime="20201030 18:32:04.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:03.857" endtime="20201030 18:32:04.242"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.250" endtime="20201030 18:32:04.272"></status>
</kw>
<msg timestamp="20201030 18:32:04.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:04.249" endtime="20201030 18:32:04.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:04.273" endtime="20201030 18:32:04.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.276" endtime="20201030 18:32:04.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.246" endtime="20201030 18:32:04.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.244" endtime="20201030 18:32:04.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.285" endtime="20201030 18:32:04.570"></status>
</kw>
<msg timestamp="20201030 18:32:04.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026067944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026126056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:04.283" endtime="20201030 18:32:04.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026067944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026126056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:04.574" endtime="20201030 18:32:04.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.582" endtime="20201030 18:32:04.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.281" endtime="20201030 18:32:04.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.279" endtime="20201030 18:32:04.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:04.589" level="INFO">${RESULT} = [{'diff': 5.811200000000252e-05}, {'diff': 5.8694000000001495e-05}, {'diff': 5.8166000000001855e-05}, {'diff': 5.833300000000069e-05}, {'diff': 5.8708000000001065e-05}, {'diff': 5.8222000000000135e-05...</msg>
<status status="PASS" starttime="20201030 18:32:04.586" endtime="20201030 18:32:04.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:04.593" level="INFO">${ACCURACY} = {'diff': [5.811200000000252e-05, 5.8694000000001495e-05, 5.8166000000001855e-05, 5.833300000000069e-05, 5.8708000000001065e-05, 5.8222000000000135e-05, 5.8749999999999775e-05, 5.888899999999947e-05, 5...</msg>
<status status="PASS" starttime="20201030 18:32:04.590" endtime="20201030 18:32:04.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.598" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 18:32:04.596" endtime="20201030 18:32:04.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.600" level="INFO">VALUE: [5.811200000000252e-05, 5.8694000000001495e-05, 5.8166000000001855e-05, 5.833300000000069e-05, 5.8708000000001065e-05, 5.8222000000000135e-05, 5.8749999999999775e-05, 5.888899999999947e-05, 5.813900000000219e-05, 5.888899999999947e-05, 5.8943999999998276e-05, 5.815299999999829e-05, 5.818099999999743e-05, 5.888899999999947e-05, 5.8320000000000594e-05, 5.862499999999965e-05, 5.8542000000001704e-05, 5.8887999999999996e-05, 5.906900000000187e-05, 5.902699999999969e-05, 5.884700000000076e-05, 5.815300000000176e-05, 5.8415999999998636e-05, 5.815299999999829e-05, 5.8763999999999345e-05, 5.8292000000001454e-05, 5.848699999999943e-05, 5.812499999999915e-05, 5.822299999999961e-05, 5.9028000000002634e-05, 5.820900000000004e-05, 5.8347999999999733e-05, 5.847299999999986e-05, 5.884700000000076e-05, 5.902700000000316e-05, 5.8749999999999775e-05, 5.8485999999999955e-05, 5.8180000000001425e-05, 5.8180000000001425e-05, 5.88749999999999e-05, 5.906900000000187e-05, 5.9070000000001344e-05, 5.88749999999999e-05, 5.834700000000026e-05, 5.863900000000269e-05, 5.9028000000002634e-05, 5.8736000000000205e-05, 5.870900000000054e-05, 5.901299999999665e-05, 5.8915999999999136e-05]</msg>
<status status="PASS" starttime="20201030 18:32:04.599" endtime="20201030 18:32:04.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.594" endtime="20201030 18:32:04.602"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:04.606" endtime="20201030 18:32:04.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.604" endtime="20201030 18:32:04.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.603" endtime="20201030 18:32:04.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.243" endtime="20201030 18:32:04.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.242" endtime="20201030 18:32:04.626"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.635" endtime="20201030 18:32:04.652"></status>
</kw>
<msg timestamp="20201030 18:32:04.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:04.634" endtime="20201030 18:32:04.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:04.654" endtime="20201030 18:32:04.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.656" endtime="20201030 18:32:04.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.631" endtime="20201030 18:32:04.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.629" endtime="20201030 18:32:04.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.665" endtime="20201030 18:32:04.951"></status>
</kw>
<msg timestamp="20201030 18:32:04.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022086806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022146694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:04.664" endtime="20201030 18:32:04.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022086806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022146694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:04.955" endtime="20201030 18:32:04.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:04.964" endtime="20201030 18:32:04.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.661" endtime="20201030 18:32:04.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.659" endtime="20201030 18:32:04.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:04.970" level="INFO">${RESULT} = [{'diff': 5.9888000000000996e-05}, {'diff': 5.927699999999994e-05}, {'diff': 5.927699999999994e-05}, {'diff': 5.9430000000002675e-05}, {'diff': 5.9749999999997305e-05}, {'diff': 6.008299999999897e-05}...</msg>
<status status="PASS" starttime="20201030 18:32:04.967" endtime="20201030 18:32:04.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:04.975" level="INFO">${ACCURACY} = {'diff': [5.9888000000000996e-05, 5.927699999999994e-05, 5.927699999999994e-05, 5.9430000000002675e-05, 5.9749999999997305e-05, 6.008299999999897e-05, 5.9292000000002454e-05, 5.9764000000000345e-05, 5...</msg>
<status status="PASS" starttime="20201030 18:32:04.971" endtime="20201030 18:32:04.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.980" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 18:32:04.979" endtime="20201030 18:32:04.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:04.982" level="INFO">VALUE: [5.9888000000000996e-05, 5.927699999999994e-05, 5.927699999999994e-05, 5.9430000000002675e-05, 5.9749999999997305e-05, 6.008299999999897e-05, 5.9292000000002454e-05, 5.9764000000000345e-05, 5.9777999999999915e-05, 5.9194999999998e-05, 5.9679999999999456e-05, 5.9583999999997944e-05, 6.0028000000000165e-05, 6.0028000000000165e-05, 5.919500000000147e-05, 5.97629999999974e-05, 5.988900000000047e-05, 5.938899999999997e-05, 5.9165999999999386e-05, 5.9764000000000345e-05, 5.9763999999996875e-05, 6.005499999999983e-05, 5.990300000000004e-05, 5.9443999999998776e-05, 5.9319999999998124e-05, 5.990300000000004e-05, 5.9347999999997264e-05, 6.0041999999999734e-05, 5.9320000000001594e-05, 5.920900000000104e-05, 5.9888000000000996e-05, 5.987499999999743e-05, 5.959699999999804e-05, 5.981899999999915e-05, 5.958300000000194e-05, 5.962500000000065e-05, 5.9694000000002495e-05, 6.0028000000000165e-05, 5.990300000000004e-05, 5.959700000000151e-05, 5.912500000000015e-05, 5.944500000000172e-05, 5.990300000000004e-05, 5.9305999999998554e-05, 5.9306000000002024e-05, 6.0014000000000595e-05, 6.00550000000033e-05, 5.9443999999998776e-05, 5.9694000000002495e-05, 6.0013999999997125e-05]</msg>
<status status="PASS" starttime="20201030 18:32:04.981" endtime="20201030 18:32:04.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.976" endtime="20201030 18:32:04.984"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:04.987" endtime="20201030 18:32:05.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.986" endtime="20201030 18:32:05.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.985" endtime="20201030 18:32:05.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.627" endtime="20201030 18:32:05.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:04.627" endtime="20201030 18:32:05.008"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.017" endtime="20201030 18:32:05.034"></status>
</kw>
<msg timestamp="20201030 18:32:05.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:05.015" endtime="20201030 18:32:05.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:05.036" endtime="20201030 18:32:05.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.038" endtime="20201030 18:32:05.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.013" endtime="20201030 18:32:05.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.011" endtime="20201030 18:32:05.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.047" endtime="20201030 18:32:05.334"></status>
</kw>
<msg timestamp="20201030 18:32:05.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022151542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022212458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:05.046" endtime="20201030 18:32:05.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022151542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022212458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:05.338" endtime="20201030 18:32:05.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.346" endtime="20201030 18:32:05.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.043" endtime="20201030 18:32:05.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.041" endtime="20201030 18:32:05.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:05.353" level="INFO">${RESULT} = [{'diff': 6.0916000000001136e-05}, {'diff': 6.059699999999904e-05}, {'diff': 6.0707999999999596e-05}, {'diff': 6.061100000000208e-05}, {'diff': 6.0416000000000636e-05}, {'diff': 6.0457999999999346e-05...</msg>
<status status="PASS" starttime="20201030 18:32:05.350" endtime="20201030 18:32:05.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:05.357" level="INFO">${ACCURACY} = {'diff': [6.0916000000001136e-05, 6.059699999999904e-05, 6.0707999999999596e-05, 6.061100000000208e-05, 6.0416000000000636e-05, 6.0457999999999346e-05, 6.087499999999843e-05, 6.016699999999986e-05, 6....</msg>
<status status="PASS" starttime="20201030 18:32:05.354" endtime="20201030 18:32:05.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.361" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 18:32:05.360" endtime="20201030 18:32:05.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.364" level="INFO">VALUE: [6.0916000000001136e-05, 6.059699999999904e-05, 6.0707999999999596e-05, 6.061100000000208e-05, 6.0416000000000636e-05, 6.0457999999999346e-05, 6.087499999999843e-05, 6.016699999999986e-05, 6.105599999999684e-05, 6.0985999999998985e-05, 6.1013999999998125e-05, 6.018099999999943e-05, 6.0569999999999374e-05, 6.0138000000001246e-05, 6.098700000000193e-05, 6.03750000000014e-05, 6.077700000000144e-05, 6.0443999999999776e-05, 6.08750000000019e-05, 6.0415999999997166e-05, 6.104200000000073e-05, 6.0278000000000415e-05, 6.0555999999999804e-05, 6.0957999999999846e-05, 6.0986000000002455e-05, 6.013900000000072e-05, 6.045900000000229e-05, 6.086100000000233e-05, 6.043099999999968e-05, 6.0500000000001525e-05, 6.088900000000147e-05, 6.105500000000083e-05, 6.059699999999904e-05, 6.0291999999999984e-05, 6.034700000000226e-05, 6.083299999999972e-05, 6.1028000000001165e-05, 6.0736000000002205e-05, 6.0222000000002135e-05, 6.0583999999998944e-05, 6.093100000000018e-05, 6.072299999999864e-05, 6.0569999999999374e-05, 6.03750000000014e-05, 6.043099999999968e-05, 6.0986000000002455e-05, 6.0457999999999346e-05, 6.0986000000002455e-05, 6.0416000000000636e-05, 6.091700000000061e-05]</msg>
<status status="PASS" starttime="20201030 18:32:05.363" endtime="20201030 18:32:05.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.358" endtime="20201030 18:32:05.371"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:05.375" endtime="20201030 18:32:05.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.374" endtime="20201030 18:32:05.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.372" endtime="20201030 18:32:05.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.009" endtime="20201030 18:32:05.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.008" endtime="20201030 18:32:05.396"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.404" endtime="20201030 18:32:05.423"></status>
</kw>
<msg timestamp="20201030 18:32:05.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:05.403" endtime="20201030 18:32:05.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:05.424" endtime="20201030 18:32:05.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.427" endtime="20201030 18:32:05.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.400" endtime="20201030 18:32:05.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.398" endtime="20201030 18:32:05.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.436" endtime="20201030 18:32:05.722"></status>
</kw>
<msg timestamp="20201030 18:32:05.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022958431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023020236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:05.434" endtime="20201030 18:32:05.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022958431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023020236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:05.726" endtime="20201030 18:32:05.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.734" endtime="20201030 18:32:05.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.432" endtime="20201030 18:32:05.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.430" endtime="20201030 18:32:05.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:05.740" level="INFO">${RESULT} = [{'diff': 6.180499999999811e-05}, {'diff': 6.161099999999961e-05}, {'diff': 6.147199999999992e-05}, {'diff': 6.163899999999875e-05}, {'diff': 6.127800000000141e-05}, {'diff': 6.173599999999974e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:05.737" endtime="20201030 18:32:05.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:05.745" level="INFO">${ACCURACY} = {'diff': [6.180499999999811e-05, 6.161099999999961e-05, 6.147199999999992e-05, 6.163899999999875e-05, 6.127800000000141e-05, 6.173599999999974e-05, 6.198599999999999e-05, 6.143100000000068e-05, 6.1985...</msg>
<status status="PASS" starttime="20201030 18:32:05.741" endtime="20201030 18:32:05.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.749" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 18:32:05.748" endtime="20201030 18:32:05.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.752" level="INFO">VALUE: [6.180499999999811e-05, 6.161099999999961e-05, 6.147199999999992e-05, 6.163899999999875e-05, 6.127800000000141e-05, 6.173599999999974e-05, 6.198599999999999e-05, 6.143100000000068e-05, 6.198599999999999e-05, 6.209699999999707e-05, 6.208300000000097e-05, 6.188900000000247e-05, 6.131900000000065e-05, 6.17080000000006e-05, 6.17499999999993e-05, 6.191699999999814e-05, 6.130499999999761e-05, 6.20560000000013e-05, 6.15690000000009e-05, 6.1195e-05, 6.202800000000216e-05, 6.17499999999993e-05, 6.204199999999827e-05, 6.173599999999974e-05, 6.141700000000111e-05, 6.17080000000006e-05, 6.190300000000204e-05, 6.14300000000012e-05, 6.119400000000053e-05, 6.163899999999875e-05, 6.134699999999979e-05, 6.148599999999949e-05, 6.20560000000013e-05, 6.112500000000215e-05, 6.112499999999868e-05, 6.20560000000013e-05, 6.112500000000215e-05, 6.141699999999764e-05, 6.186099999999986e-05, 6.191700000000161e-05, 6.186099999999986e-05, 6.147199999999992e-05, 6.166599999999842e-05, 6.18750000000029e-05, 6.1888999999999e-05, 6.122199999999967e-05, 6.116700000000086e-05, 6.115300000000129e-05, 6.207000000000087e-05, 6.132000000000012e-05]</msg>
<status status="PASS" starttime="20201030 18:32:05.750" endtime="20201030 18:32:05.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.746" endtime="20201030 18:32:05.754"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:05.757" endtime="20201030 18:32:05.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.756" endtime="20201030 18:32:05.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.755" endtime="20201030 18:32:05.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.397" endtime="20201030 18:32:05.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.396" endtime="20201030 18:32:05.778"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.787" endtime="20201030 18:32:05.804"></status>
</kw>
<msg timestamp="20201030 18:32:05.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:05.785" endtime="20201030 18:32:05.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:05.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:05.806" endtime="20201030 18:32:05.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.808" endtime="20201030 18:32:05.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.783" endtime="20201030 18:32:05.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.781" endtime="20201030 18:32:05.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:05.817" endtime="20201030 18:32:06.103"></status>
</kw>
<msg timestamp="20201030 18:32:06.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022040361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022102486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:05.816" endtime="20201030 18:32:06.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022040361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022102486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:06.107" endtime="20201030 18:32:06.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.115" endtime="20201030 18:32:06.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.813" endtime="20201030 18:32:06.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.811" endtime="20201030 18:32:06.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:06.122" level="INFO">${RESULT} = [{'diff': 6.212499999999968e-05}, {'diff': 6.263899999999975e-05}, {'diff': 6.229200000000198e-05}, {'diff': 6.215300000000229e-05}, {'diff': 6.270900000000107e-05}, {'diff': 6.232000000000112e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:06.119" endtime="20201030 18:32:06.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:06.127" level="INFO">${ACCURACY} = {'diff': [6.212499999999968e-05, 6.263899999999975e-05, 6.229200000000198e-05, 6.215300000000229e-05, 6.270900000000107e-05, 6.232000000000112e-05, 6.304199999999927e-05, 6.284800000000076e-05, 6.2862...</msg>
<status status="PASS" starttime="20201030 18:32:06.123" endtime="20201030 18:32:06.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.132" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 18:32:06.131" endtime="20201030 18:32:06.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.135" level="INFO">VALUE: [6.212499999999968e-05, 6.263899999999975e-05, 6.229200000000198e-05, 6.215300000000229e-05, 6.270900000000107e-05, 6.232000000000112e-05, 6.304199999999927e-05, 6.284800000000076e-05, 6.286200000000033e-05, 6.29020000000001e-05, 6.229099999999904e-05, 6.211100000000011e-05, 6.279199999999902e-05, 6.301400000000013e-05, 6.236100000000036e-05, 6.27080000000016e-05, 6.261100000000061e-05, 6.280599999999859e-05, 6.244499999999778e-05, 6.229200000000198e-05, 6.22089999999971e-05, 6.248600000000049e-05, 6.215299999999882e-05, 6.287500000000043e-05, 6.211100000000011e-05, 6.301400000000013e-05, 6.220799999999763e-05, 6.290299999999957e-05, 6.230500000000208e-05, 6.286099999999739e-05, 6.248600000000049e-05, 6.276399999999988e-05, 6.2889e-05, 6.23340000000007e-05, 6.309699999999807e-05, 6.230600000000155e-05, 6.284800000000076e-05, 6.248699999999996e-05, 6.213799999999978e-05, 6.277699999999997e-05, 6.2889e-05, 6.233300000000122e-05, 6.242999999999874e-05, 6.236100000000036e-05, 6.219400000000153e-05, 6.284699999999782e-05, 6.283299999999825e-05, 6.233300000000122e-05, 6.23340000000007e-05, 6.262500000000018e-05]</msg>
<status status="PASS" starttime="20201030 18:32:06.133" endtime="20201030 18:32:06.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.128" endtime="20201030 18:32:06.136"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:06.140" endtime="20201030 18:32:06.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.138" endtime="20201030 18:32:06.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.137" endtime="20201030 18:32:06.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.779" endtime="20201030 18:32:06.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:05.778" endtime="20201030 18:32:06.160"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.171" endtime="20201030 18:32:06.188"></status>
</kw>
<msg timestamp="20201030 18:32:06.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:06.169" endtime="20201030 18:32:06.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:06.190" endtime="20201030 18:32:06.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.192" endtime="20201030 18:32:06.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.167" endtime="20201030 18:32:06.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.164" endtime="20201030 18:32:06.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.202" endtime="20201030 18:32:06.489"></status>
</kw>
<msg timestamp="20201030 18:32:06.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024085972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024149694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:06.200" endtime="20201030 18:32:06.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024085972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024149694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:06.493" endtime="20201030 18:32:06.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.501" endtime="20201030 18:32:06.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.198" endtime="20201030 18:32:06.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.196" endtime="20201030 18:32:06.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:06.508" level="INFO">${RESULT} = [{'diff': 6.37219999999987e-05}, {'diff': 6.331899999999918e-05}, {'diff': 6.330499999999961e-05}, {'diff': 6.316599999999992e-05}, {'diff': 6.374999999999784e-05}, {'diff': 6.342999999999974e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:06.505" endtime="20201030 18:32:06.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:06.512" level="INFO">${ACCURACY} = {'diff': [6.37219999999987e-05, 6.331899999999918e-05, 6.330499999999961e-05, 6.316599999999992e-05, 6.374999999999784e-05, 6.342999999999974e-05, 6.398599999999852e-05, 6.40699999999994e-05, 6.345900...</msg>
<status status="PASS" starttime="20201030 18:32:06.509" endtime="20201030 18:32:06.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.516" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 18:32:06.515" endtime="20201030 18:32:06.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.519" level="INFO">VALUE: [6.37219999999987e-05, 6.331899999999918e-05, 6.330499999999961e-05, 6.316599999999992e-05, 6.374999999999784e-05, 6.342999999999974e-05, 6.398599999999852e-05, 6.40699999999994e-05, 6.345900000000182e-05, 6.361100000000161e-05, 6.35560000000028e-05, 6.331999999999866e-05, 6.374999999999784e-05, 6.334700000000179e-05, 6.317999999999949e-05, 6.37219999999987e-05, 6.395799999999938e-05, 6.408300000000297e-05, 6.330499999999961e-05, 6.39439999999998e-05, 6.344400000000278e-05, 6.331899999999918e-05, 6.40829999999995e-05, 6.331999999999866e-05, 6.377800000000045e-05, 6.313900000000025e-05, 6.386099999999839e-05, 6.313899999999678e-05, 6.313900000000025e-05, 6.388899999999753e-05, 6.388800000000153e-05, 6.348600000000149e-05, 6.329199999999952e-05, 6.312500000000068e-05, 6.377800000000045e-05, 6.387500000000143e-05, 6.376400000000088e-05, 6.365300000000032e-05, 6.37500000000013e-05, 6.3195000000002e-05, 6.330499999999961e-05, 6.345900000000182e-05, 6.329199999999952e-05, 6.345800000000235e-05, 6.369399999999956e-05, 6.327700000000047e-05, 6.334699999999832e-05, 6.356899999999943e-05, 6.312499999999721e-05, 6.331899999999918e-05]</msg>
<status status="PASS" starttime="20201030 18:32:06.517" endtime="20201030 18:32:06.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.513" endtime="20201030 18:32:06.520"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:06.524" endtime="20201030 18:32:06.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.522" endtime="20201030 18:32:06.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.521" endtime="20201030 18:32:06.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.161" endtime="20201030 18:32:06.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.161" endtime="20201030 18:32:06.545"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.553" endtime="20201030 18:32:06.573"></status>
</kw>
<msg timestamp="20201030 18:32:06.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:06.552" endtime="20201030 18:32:06.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:06.575" endtime="20201030 18:32:06.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.577" endtime="20201030 18:32:06.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.549" endtime="20201030 18:32:06.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.547" endtime="20201030 18:32:06.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.590" endtime="20201030 18:32:06.890"></status>
</kw>
<msg timestamp="20201030 18:32:06.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023366569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023431403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:06.586" endtime="20201030 18:32:06.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023366569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023431403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:06.894" endtime="20201030 18:32:06.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.902" endtime="20201030 18:32:06.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.582" endtime="20201030 18:32:06.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.580" endtime="20201030 18:32:06.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:06.909" level="INFO">${RESULT} = [{'diff': 6.483399999999973e-05}, {'diff': 6.473599999999927e-05}, {'diff': 6.474999999999884e-05}, {'diff': 6.48479999999993e-05}, {'diff': 6.504100000000179e-05}, {'diff': 6.462499999999871e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:06.905" endtime="20201030 18:32:06.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:06.913" level="INFO">${ACCURACY} = {'diff': [6.483399999999973e-05, 6.473599999999927e-05, 6.474999999999884e-05, 6.48479999999993e-05, 6.504100000000179e-05, 6.462499999999871e-05, 6.423600000000224e-05, 6.459700000000304e-05, 6.47499...</msg>
<status status="PASS" starttime="20201030 18:32:06.910" endtime="20201030 18:32:06.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.917" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 18:32:06.916" endtime="20201030 18:32:06.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.920" level="INFO">VALUE: [6.483399999999973e-05, 6.473599999999927e-05, 6.474999999999884e-05, 6.48479999999993e-05, 6.504100000000179e-05, 6.462499999999871e-05, 6.423600000000224e-05, 6.459700000000304e-05, 6.474999999999884e-05, 6.416700000000039e-05, 6.413900000000125e-05, 6.47639999999984e-05, 6.430600000000009e-05, 6.448599999999902e-05, 6.415300000000082e-05, 6.419499999999953e-05, 6.473699999999874e-05, 6.444499999999978e-05, 6.476400000000188e-05, 6.40829999999995e-05, 6.499999999999909e-05, 6.447199999999945e-05, 6.500000000000256e-05, 6.501400000000213e-05, 6.501400000000213e-05, 6.436100000000236e-05, 6.431900000000018e-05, 6.429200000000052e-05, 6.500000000000256e-05, 6.43890000000015e-05, 6.505499999999789e-05, 6.491699999999767e-05, 6.415199999999788e-05, 6.4583e-05, 6.447200000000292e-05, 6.47769999999985e-05, 6.470800000000013e-05, 6.426400000000138e-05, 6.49029999999981e-05, 6.427799999999748e-05, 6.470800000000013e-05, 6.506900000000093e-05, 6.476400000000188e-05, 6.47219999999997e-05, 6.45419999999973e-05, 6.433299999999975e-05, 6.444499999999978e-05, 6.42089999999991e-05, 6.415200000000135e-05, 6.49159999999982e-05]</msg>
<status status="PASS" starttime="20201030 18:32:06.918" endtime="20201030 18:32:06.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.914" endtime="20201030 18:32:06.922"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:06.925" endtime="20201030 18:32:06.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.924" endtime="20201030 18:32:06.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.923" endtime="20201030 18:32:06.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.546" endtime="20201030 18:32:06.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.545" endtime="20201030 18:32:06.946"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.955" endtime="20201030 18:32:06.973"></status>
</kw>
<msg timestamp="20201030 18:32:06.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:06.953" endtime="20201030 18:32:06.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:06.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:06.975" endtime="20201030 18:32:06.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.977" endtime="20201030 18:32:06.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.950" endtime="20201030 18:32:06.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.948" endtime="20201030 18:32:06.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:06.986" endtime="20201030 18:32:07.272"></status>
</kw>
<msg timestamp="20201030 18:32:07.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021912111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021977931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:06.984" endtime="20201030 18:32:07.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021912111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021977931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:07.276" endtime="20201030 18:32:07.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.284" endtime="20201030 18:32:07.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.982" endtime="20201030 18:32:07.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.980" endtime="20201030 18:32:07.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:07.291" level="INFO">${RESULT} = [{'diff': 6.581999999999769e-05}, {'diff': 6.515299999999835e-05}, {'diff': 6.586100000000039e-05}, {'diff': 6.530499999999814e-05}, {'diff': 6.57769999999995e-05}, {'diff': 6.518000000000149e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:07.288" endtime="20201030 18:32:07.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:07.296" level="INFO">${ACCURACY} = {'diff': [6.581999999999769e-05, 6.515299999999835e-05, 6.586100000000039e-05, 6.530499999999814e-05, 6.57769999999995e-05, 6.518000000000149e-05, 6.520800000000063e-05, 6.523599999999977e-05, 6.51249...</msg>
<status status="PASS" starttime="20201030 18:32:07.292" endtime="20201030 18:32:07.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.300" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 18:32:07.299" endtime="20201030 18:32:07.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.303" level="INFO">VALUE: [6.581999999999769e-05, 6.515299999999835e-05, 6.586100000000039e-05, 6.530499999999814e-05, 6.57769999999995e-05, 6.518000000000149e-05, 6.520800000000063e-05, 6.523599999999977e-05, 6.512499999999921e-05, 6.569499999999756e-05, 6.512499999999921e-05, 6.530600000000109e-05, 6.591699999999867e-05, 6.562499999999971e-05, 6.573699999999974e-05, 6.540300000000207e-05, 6.529099999999857e-05, 6.544399999999784e-05, 6.541600000000217e-05, 6.518100000000096e-05, 6.515299999999835e-05, 6.577800000000245e-05, 6.580599999999812e-05, 6.545900000000035e-05, 6.602699999999975e-05, 6.518100000000096e-05, 6.574999999999984e-05, 6.561100000000014e-05, 6.545800000000088e-05, 6.559800000000005e-05, 6.565199999999938e-05, 6.523599999999977e-05, 6.533300000000075e-05, 6.569399999999809e-05, 6.562499999999971e-05, 6.583300000000125e-05, 6.556900000000143e-05, 6.544500000000078e-05, 6.522199999999673e-05, 6.605600000000184e-05, 6.586100000000039e-05, 6.605599999999837e-05, 6.559700000000057e-05, 6.562499999999971e-05, 6.57220000000007e-05, 6.556900000000143e-05, 6.574999999999984e-05, 6.526400000000238e-05, 6.530600000000109e-05, 6.527799999999848e-05]</msg>
<status status="PASS" starttime="20201030 18:32:07.301" endtime="20201030 18:32:07.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.297" endtime="20201030 18:32:07.304"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:07.308" endtime="20201030 18:32:07.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.306" endtime="20201030 18:32:07.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.305" endtime="20201030 18:32:07.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.947" endtime="20201030 18:32:07.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:06.946" endtime="20201030 18:32:07.328"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.337" endtime="20201030 18:32:07.355"></status>
</kw>
<msg timestamp="20201030 18:32:07.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:07.335" endtime="20201030 18:32:07.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:07.357" endtime="20201030 18:32:07.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.359" endtime="20201030 18:32:07.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.333" endtime="20201030 18:32:07.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.331" endtime="20201030 18:32:07.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.368" endtime="20201030 18:32:07.654"></status>
</kw>
<msg timestamp="20201030 18:32:07.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021983833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022050458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:07.367" endtime="20201030 18:32:07.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021983833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022050458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:07.658" endtime="20201030 18:32:07.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.667" endtime="20201030 18:32:07.668"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.364" endtime="20201030 18:32:07.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.362" endtime="20201030 18:32:07.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:07.673" level="INFO">${RESULT} = [{'diff': 6.662499999999724e-05}, {'diff': 6.705599999999937e-05}, {'diff': 6.645899999999788e-05}, {'diff': 6.688800000000106e-05}, {'diff': 6.658299999999853e-05}, {'diff': 6.647199999999798e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:07.670" endtime="20201030 18:32:07.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:07.677" level="INFO">${ACCURACY} = {'diff': [6.662499999999724e-05, 6.705599999999937e-05, 6.645899999999788e-05, 6.688800000000106e-05, 6.658299999999853e-05, 6.647199999999798e-05, 6.677799999999998e-05, 6.687500000000096e-05, 6.6764...</msg>
<status status="PASS" starttime="20201030 18:32:07.674" endtime="20201030 18:32:07.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.682" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 18:32:07.681" endtime="20201030 18:32:07.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.684" level="INFO">VALUE: [6.662499999999724e-05, 6.705599999999937e-05, 6.645899999999788e-05, 6.688800000000106e-05, 6.658299999999853e-05, 6.647199999999798e-05, 6.677799999999998e-05, 6.687500000000096e-05, 6.67640000000004e-05, 6.669399999999909e-05, 6.648600000000102e-05, 6.627799999999948e-05, 6.65700000000019e-05, 6.632000000000166e-05, 6.647300000000092e-05, 6.672300000000117e-05, 6.661100000000114e-05, 6.706900000000293e-05, 6.658299999999853e-05, 6.661100000000114e-05, 6.616599999999945e-05, 6.667999999999952e-05, 6.688900000000053e-05, 6.64029999999996e-05, 6.661099999999767e-05, 6.677799999999998e-05, 6.700000000000109e-05, 6.662500000000071e-05, 6.70700000000024e-05, 6.612500000000021e-05, 6.64029999999996e-05, 6.700000000000109e-05, 6.706900000000293e-05, 6.65969999999981e-05, 6.629099999999957e-05, 6.695799999999891e-05, 6.670799999999866e-05, 6.683299999999878e-05, 6.677799999999998e-05, 6.644500000000178e-05, 6.684700000000182e-05, 6.668099999999899e-05, 6.644500000000178e-05, 6.616699999999892e-05, 6.663800000000081e-05, 6.647200000000145e-05, 6.631900000000218e-05, 6.686099999999792e-05, 6.617999999999902e-05, 6.705499999999989e-05]</msg>
<status status="PASS" starttime="20201030 18:32:07.683" endtime="20201030 18:32:07.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.678" endtime="20201030 18:32:07.686"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:07.689" endtime="20201030 18:32:07.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.688" endtime="20201030 18:32:07.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.686" endtime="20201030 18:32:07.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.329" endtime="20201030 18:32:07.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.329" endtime="20201030 18:32:07.710"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.718" endtime="20201030 18:32:07.740"></status>
</kw>
<msg timestamp="20201030 18:32:07.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:07.717" endtime="20201030 18:32:07.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:07.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:07.741" endtime="20201030 18:32:07.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.744" endtime="20201030 18:32:07.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.714" endtime="20201030 18:32:07.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.712" endtime="20201030 18:32:07.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:07.752" endtime="20201030 18:32:08.038"></status>
</kw>
<msg timestamp="20201030 18:32:08.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025393931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025461125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:07.751" endtime="20201030 18:32:08.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025393931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025461125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:08.042" endtime="20201030 18:32:08.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.050" endtime="20201030 18:32:08.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.748" endtime="20201030 18:32:08.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.747" endtime="20201030 18:32:08.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:08.057" level="INFO">${RESULT} = [{'diff': 6.719399999999959e-05}, {'diff': 6.80420000000008e-05}, {'diff': 6.720899999999863e-05}, {'diff': 6.712499999999774e-05}, {'diff': 6.745900000000235e-05}, {'diff': 6.790299999999763e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:08.054" endtime="20201030 18:32:08.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:08.061" level="INFO">${ACCURACY} = {'diff': [6.719399999999959e-05, 6.80420000000008e-05, 6.720899999999863e-05, 6.712499999999774e-05, 6.745900000000235e-05, 6.790299999999763e-05, 6.776399999999794e-05, 6.7583999999999e-05, 6.7318999...</msg>
<status status="PASS" starttime="20201030 18:32:08.058" endtime="20201030 18:32:08.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.065" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 18:32:08.064" endtime="20201030 18:32:08.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.068" level="INFO">VALUE: [6.719399999999959e-05, 6.80420000000008e-05, 6.720899999999863e-05, 6.712499999999774e-05, 6.745900000000235e-05, 6.790299999999763e-05, 6.776399999999794e-05, 6.7583999999999e-05, 6.731899999999971e-05, 6.77359999999988e-05, 6.798599999999905e-05, 6.79160000000012e-05, 6.787500000000196e-05, 6.720800000000263e-05, 6.784699999999935e-05, 6.783299999999978e-05, 6.720799999999916e-05, 6.780500000000064e-05, 6.715200000000088e-05, 6.79030000000011e-05, 6.766700000000042e-05, 6.775000000000184e-05, 6.774999999999837e-05, 6.722199999999873e-05, 6.715300000000035e-05, 6.79030000000011e-05, 6.716699999999992e-05, 6.788900000000153e-05, 6.783299999999978e-05, 6.768099999999999e-05, 6.733299999999928e-05, 6.786099999999892e-05, 6.741700000000017e-05, 6.786099999999892e-05, 6.729100000000057e-05, 6.793000000000077e-05, 6.715200000000088e-05, 6.72359999999983e-05, 6.786099999999892e-05, 6.762499999999824e-05, 6.773600000000227e-05, 6.80420000000008e-05, 6.779200000000055e-05, 6.802800000000123e-05, 6.7583999999999e-05, 6.775000000000184e-05, 6.801300000000218e-05, 6.730599999999962e-05, 6.779100000000107e-05, 6.736100000000189e-05]</msg>
<status status="PASS" starttime="20201030 18:32:08.066" endtime="20201030 18:32:08.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.062" endtime="20201030 18:32:08.070"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:08.074" endtime="20201030 18:32:08.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.072" endtime="20201030 18:32:08.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.071" endtime="20201030 18:32:08.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.711" endtime="20201030 18:32:08.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:07.710" endtime="20201030 18:32:08.094"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.103" endtime="20201030 18:32:08.120"></status>
</kw>
<msg timestamp="20201030 18:32:08.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:08.101" endtime="20201030 18:32:08.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:08.122" endtime="20201030 18:32:08.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.124" endtime="20201030 18:32:08.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.099" endtime="20201030 18:32:08.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.097" endtime="20201030 18:32:08.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.133" endtime="20201030 18:32:08.418"></status>
</kw>
<msg timestamp="20201030 18:32:08.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022024347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022092722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:08.132" endtime="20201030 18:32:08.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022024347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022092722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:08.423" endtime="20201030 18:32:08.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.431" endtime="20201030 18:32:08.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.129" endtime="20201030 18:32:08.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.127" endtime="20201030 18:32:08.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:08.439" level="INFO">${RESULT} = [{'diff': 6.837499999999899e-05}, {'diff': 6.87640000000024e-05}, {'diff': 6.858300000000053e-05}, {'diff': 6.90420000000018e-05}, {'diff': 6.869399999999762e-05}, {'diff': 6.8584e-05}, {'diff': 6.887...</msg>
<status status="PASS" starttime="20201030 18:32:08.436" endtime="20201030 18:32:08.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:08.445" level="INFO">${ACCURACY} = {'diff': [6.837499999999899e-05, 6.87640000000024e-05, 6.858300000000053e-05, 6.90420000000018e-05, 6.869399999999762e-05, 6.8584e-05, 6.887499999999949e-05, 6.819500000000006e-05, 6.891700000000167e-...</msg>
<status status="PASS" starttime="20201030 18:32:08.440" endtime="20201030 18:32:08.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.450" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 18:32:08.449" endtime="20201030 18:32:08.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.454" level="INFO">VALUE: [6.837499999999899e-05, 6.87640000000024e-05, 6.858300000000053e-05, 6.90420000000018e-05, 6.869399999999762e-05, 6.8584e-05, 6.887499999999949e-05, 6.819500000000006e-05, 6.891700000000167e-05, 6.906900000000146e-05, 6.815300000000135e-05, 6.876399999999894e-05, 6.844400000000084e-05, 6.856899999999749e-05, 6.827799999999801e-05, 6.904199999999833e-05, 6.893099999999777e-05, 6.901399999999919e-05, 6.820800000000016e-05, 6.829200000000105e-05, 6.811100000000264e-05, 6.891700000000167e-05, 6.845800000000041e-05, 6.873699999999927e-05, 6.890299999999863e-05, 6.816599999999798e-05, 6.863899999999881e-05, 6.895799999999744e-05, 6.898600000000005e-05, 6.830500000000114e-05, 6.876399999999894e-05, 6.905600000000137e-05, 6.877799999999851e-05, 6.887499999999949e-05, 6.844499999999684e-05, 6.888900000000253e-05, 6.888899999999906e-05, 6.861199999999915e-05, 6.88619999999994e-05, 6.829100000000157e-05, 6.836099999999942e-05, 6.902699999999928e-05, 6.877799999999851e-05, 6.901400000000266e-05, 6.815300000000135e-05, 6.826399999999844e-05, 6.884700000000035e-05, 6.822199999999973e-05, 6.901399999999919e-05, 6.862499999999924e-05]</msg>
<status status="PASS" starttime="20201030 18:32:08.452" endtime="20201030 18:32:08.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.446" endtime="20201030 18:32:08.456"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:08.460" endtime="20201030 18:32:08.480"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.458" endtime="20201030 18:32:08.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.457" endtime="20201030 18:32:08.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.095" endtime="20201030 18:32:08.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.095" endtime="20201030 18:32:08.481"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.490" endtime="20201030 18:32:08.508"></status>
</kw>
<msg timestamp="20201030 18:32:08.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:08.489" endtime="20201030 18:32:08.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:08.510" endtime="20201030 18:32:08.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.512" endtime="20201030 18:32:08.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.486" endtime="20201030 18:32:08.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.484" endtime="20201030 18:32:08.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.521" endtime="20201030 18:32:08.807"></status>
</kw>
<msg timestamp="20201030 18:32:08.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022598681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0226685, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:32:08.519" endtime="20201030 18:32:08.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022598681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0226685, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:32:08.811" endtime="20201030 18:32:08.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.819" endtime="20201030 18:32:08.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.517" endtime="20201030 18:32:08.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.515" endtime="20201030 18:32:08.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:08.826" level="INFO">${RESULT} = [{'diff': 6.981900000000221e-05}, {'diff': 6.958399999999754e-05}, {'diff': 6.950000000000012e-05}, {'diff': 6.97360000000008e-05}, {'diff': 6.916699999999845e-05}, {'diff': 6.913799999999984e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:08.823" endtime="20201030 18:32:08.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:08.830" level="INFO">${ACCURACY} = {'diff': [6.981900000000221e-05, 6.958399999999754e-05, 6.950000000000012e-05, 6.97360000000008e-05, 6.916699999999845e-05, 6.913799999999984e-05, 6.979199999999908e-05, 6.970799999999819e-05, 6.93190...</msg>
<status status="PASS" starttime="20201030 18:32:08.827" endtime="20201030 18:32:08.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.834" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 18:32:08.833" endtime="20201030 18:32:08.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.837" level="INFO">VALUE: [6.981900000000221e-05, 6.958399999999754e-05, 6.950000000000012e-05, 6.97360000000008e-05, 6.916699999999845e-05, 6.913799999999984e-05, 6.979199999999908e-05, 6.970799999999819e-05, 6.931900000000171e-05, 6.94299999999988e-05, 6.931900000000171e-05, 7.005600000000237e-05, 7.004199999999933e-05, 6.977799999999951e-05, 6.968099999999852e-05, 6.941700000000217e-05, 6.984700000000135e-05, 6.929200000000205e-05, 6.998700000000052e-05, 6.947200000000098e-05, 6.950000000000012e-05, 7.004199999999933e-05, 6.912499999999974e-05, 7.002799999999976e-05, 6.975000000000037e-05, 6.945799999999794e-05, 6.983300000000178e-05, 6.975000000000037e-05, 6.987500000000049e-05, 7.000000000000062e-05, 6.962500000000024e-05, 6.99169999999992e-05, 6.99169999999992e-05, 6.98620000000004e-05, 6.963899999999981e-05, 6.963899999999981e-05, 6.988900000000006e-05, 6.915300000000235e-05, 6.948600000000055e-05, 6.986100000000092e-05, 6.977799999999951e-05, 6.998599999999758e-05, 6.927800000000248e-05, 7.00979999999976e-05, 6.94169999999987e-05, 6.937499999999999e-05, 6.912499999999974e-05, 6.919399999999812e-05, 6.977700000000003e-05, 6.97499999999969e-05]</msg>
<status status="PASS" starttime="20201030 18:32:08.835" endtime="20201030 18:32:08.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.831" endtime="20201030 18:32:08.838"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:08.842" endtime="20201030 18:32:08.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.840" endtime="20201030 18:32:08.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.839" endtime="20201030 18:32:08.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.482" endtime="20201030 18:32:08.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.482" endtime="20201030 18:32:08.862"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.871" endtime="20201030 18:32:08.891"></status>
</kw>
<msg timestamp="20201030 18:32:08.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:08.869" endtime="20201030 18:32:08.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:08.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:08.892" endtime="20201030 18:32:08.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.895" endtime="20201030 18:32:08.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.867" endtime="20201030 18:32:08.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.865" endtime="20201030 18:32:08.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:08.904" endtime="20201030 18:32:09.189"></status>
</kw>
<msg timestamp="20201030 18:32:09.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023336431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023406625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:08.902" endtime="20201030 18:32:09.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023336431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023406625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:09.193" endtime="20201030 18:32:09.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.201" endtime="20201030 18:32:09.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.899" endtime="20201030 18:32:09.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.898" endtime="20201030 18:32:09.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:09.208" level="INFO">${RESULT} = [{'diff': 7.019399999999912e-05}, {'diff': 7.07499999999979e-05}, {'diff': 7.087500000000149e-05}, {'diff': 7.016699999999945e-05}, {'diff': 7.101400000000119e-05}, {'diff': 7.04169999999997e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:09.205" endtime="20201030 18:32:09.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:09.212" level="INFO">${ACCURACY} = {'diff': [7.019399999999912e-05, 7.07499999999979e-05, 7.087500000000149e-05, 7.016699999999945e-05, 7.101400000000119e-05, 7.04169999999997e-05, 7.026400000000044e-05, 7.065300000000038e-05, 7.104099...</msg>
<status status="PASS" starttime="20201030 18:32:09.209" endtime="20201030 18:32:09.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.216" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 18:32:09.215" endtime="20201030 18:32:09.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.219" level="INFO">VALUE: [7.019399999999912e-05, 7.07499999999979e-05, 7.087500000000149e-05, 7.016699999999945e-05, 7.101400000000119e-05, 7.04169999999997e-05, 7.026400000000044e-05, 7.065300000000038e-05, 7.104099999999738e-05, 7.020799999999869e-05, 7.104200000000033e-05, 7.02910000000001e-05, 7.069399999999962e-05, 7.063900000000081e-05, 7.045799999999894e-05, 7.086099999999845e-05, 7.072199999999876e-05, 7.093099999999977e-05, 7.062499999999777e-05, 7.102800000000076e-05, 7.105500000000042e-05, 7.102700000000128e-05, 7.022200000000173e-05, 7.044399999999937e-05, 7.04299999999998e-05, 7.030499999999967e-05, 7.104200000000033e-05, 7.047300000000145e-05, 7.088900000000106e-05, 7.059699999999863e-05, 7.10559999999999e-05, 7.104200000000033e-05, 7.097300000000195e-05, 7.102799999999729e-05, 7.083299999999931e-05, 7.036099999999795e-05, 7.075000000000137e-05, 7.097199999999901e-05, 7.088900000000106e-05, 7.068000000000005e-05, 7.045799999999894e-05, 7.018099999999902e-05, 7.083299999999931e-05, 7.056999999999897e-05, 7.069500000000256e-05, 7.034800000000133e-05, 7.113899999999784e-05, 7.097199999999901e-05, 7.019399999999912e-05, 7.062500000000124e-05]</msg>
<status status="PASS" starttime="20201030 18:32:09.217" endtime="20201030 18:32:09.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.213" endtime="20201030 18:32:09.221"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:09.224" endtime="20201030 18:32:09.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.223" endtime="20201030 18:32:09.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.222" endtime="20201030 18:32:09.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.863" endtime="20201030 18:32:09.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:08.863" endtime="20201030 18:32:09.245"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.254" endtime="20201030 18:32:09.272"></status>
</kw>
<msg timestamp="20201030 18:32:09.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:09.252" endtime="20201030 18:32:09.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:09.273" endtime="20201030 18:32:09.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.276" endtime="20201030 18:32:09.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.249" endtime="20201030 18:32:09.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.247" endtime="20201030 18:32:09.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.285" endtime="20201030 18:32:09.572"></status>
</kw>
<msg timestamp="20201030 18:32:09.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022172042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022243611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:09.283" endtime="20201030 18:32:09.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022172042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022243611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:09.576" endtime="20201030 18:32:09.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.584" endtime="20201030 18:32:09.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.281" endtime="20201030 18:32:09.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.279" endtime="20201030 18:32:09.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:09.591" level="INFO">${RESULT} = [{'diff': 7.15690000000005e-05}, {'diff': 7.209700000000013e-05}, {'diff': 7.199999999999915e-05}, {'diff': 7.16109999999992e-05}, {'diff': 7.150000000000212e-05}, {'diff': 7.167999999999758e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:09.587" endtime="20201030 18:32:09.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:09.596" level="INFO">${ACCURACY} = {'diff': [7.15690000000005e-05, 7.209700000000013e-05, 7.199999999999915e-05, 7.16109999999992e-05, 7.150000000000212e-05, 7.167999999999758e-05, 7.131999999999972e-05, 7.131999999999972e-05, 7.187500...</msg>
<status status="PASS" starttime="20201030 18:32:09.592" endtime="20201030 18:32:09.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.600" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 18:32:09.599" endtime="20201030 18:32:09.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.603" level="INFO">VALUE: [7.15690000000005e-05, 7.209700000000013e-05, 7.199999999999915e-05, 7.16109999999992e-05, 7.150000000000212e-05, 7.167999999999758e-05, 7.131999999999972e-05, 7.131999999999972e-05, 7.187500000000249e-05, 7.188800000000259e-05, 7.162499999999877e-05, 7.202699999999881e-05, 7.142999999999733e-05, 7.138899999999809e-05, 7.119399999999665e-05, 7.147199999999951e-05, 7.127800000000101e-05, 7.184699999999988e-05, 7.163900000000181e-05, 7.181900000000074e-05, 7.113899999999784e-05, 7.134799999999886e-05, 7.115300000000088e-05, 7.16109999999992e-05, 7.118000000000055e-05, 7.172199999999976e-05, 7.176400000000194e-05, 7.15690000000005e-05, 7.184699999999988e-05, 7.2069000000001e-05, 7.145899999999941e-05, 7.122299999999873e-05, 7.131999999999972e-05, 7.205599999999743e-05, 7.129199999999711e-05, 7.13049999999972e-05, 7.177699999999856e-05, 7.183300000000031e-05, 7.154099999999788e-05, 7.140300000000113e-05, 7.147199999999951e-05, 7.131900000000024e-05, 7.184700000000335e-05, 7.172199999999976e-05, 7.17230000000027e-05, 7.177799999999804e-05, 7.127800000000101e-05, 7.207000000000047e-05, 7.147199999999951e-05, 7.205500000000142e-05]</msg>
<status status="PASS" starttime="20201030 18:32:09.601" endtime="20201030 18:32:09.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.597" endtime="20201030 18:32:09.604"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:09.607" endtime="20201030 18:32:09.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.606" endtime="20201030 18:32:09.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.605" endtime="20201030 18:32:09.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.246" endtime="20201030 18:32:09.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.245" endtime="20201030 18:32:09.628"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.637" endtime="20201030 18:32:09.655"></status>
</kw>
<msg timestamp="20201030 18:32:09.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:09.635" endtime="20201030 18:32:09.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:09.656" endtime="20201030 18:32:09.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.659" endtime="20201030 18:32:09.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.633" endtime="20201030 18:32:09.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.630" endtime="20201030 18:32:09.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.668" endtime="20201030 18:32:09.955"></status>
</kw>
<msg timestamp="20201030 18:32:09.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022206444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022279514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:09.666" endtime="20201030 18:32:09.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022206444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022279514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:09.959" endtime="20201030 18:32:09.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:09.967" endtime="20201030 18:32:09.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.664" endtime="20201030 18:32:09.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.662" endtime="20201030 18:32:09.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:09.974" level="INFO">${RESULT} = [{'diff': 7.307000000000147e-05}, {'diff': 7.286099999999698e-05}, {'diff': 7.277799999999904e-05}, {'diff': 7.262499999999977e-05}, {'diff': 7.30560000000019e-05}, {'diff': 7.292999999999883e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:09.971" endtime="20201030 18:32:09.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:09.978" level="INFO">${ACCURACY} = {'diff': [7.307000000000147e-05, 7.286099999999698e-05, 7.277799999999904e-05, 7.262499999999977e-05, 7.30560000000019e-05, 7.292999999999883e-05, 7.24300000000018e-05, 7.27499999999999e-05, 7.2472000...</msg>
<status status="PASS" starttime="20201030 18:32:09.975" endtime="20201030 18:32:09.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.982" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 18:32:09.981" endtime="20201030 18:32:09.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:09.985" level="INFO">VALUE: [7.307000000000147e-05, 7.286099999999698e-05, 7.277799999999904e-05, 7.262499999999977e-05, 7.30560000000019e-05, 7.292999999999883e-05, 7.24300000000018e-05, 7.27499999999999e-05, 7.247200000000051e-05, 7.287500000000002e-05, 7.226399999999897e-05, 7.219400000000112e-05, 7.241699999999823e-05, 7.245800000000094e-05, 7.290299999999916e-05, 7.26110000000002e-05, 7.259800000000011e-05, 7.287500000000002e-05, 7.298700000000005e-05, 7.272200000000076e-05, 7.27499999999999e-05, 7.276399999999947e-05, 7.294400000000187e-05, 7.286100000000045e-05, 7.255500000000192e-05, 7.219399999999765e-05, 7.231899999999777e-05, 7.281999999999775e-05, 7.272300000000023e-05, 7.244500000000084e-05, 7.219500000000059e-05, 7.213899999999884e-05, 7.213900000000231e-05, 7.213899999999884e-05, 7.290299999999916e-05, 7.223599999999983e-05, 7.304099999999938e-05, 7.213900000000231e-05, 7.273600000000033e-05, 7.218099999999755e-05, 7.245900000000041e-05, 7.237500000000299e-05, 7.263900000000281e-05, 7.294500000000134e-05, 7.3069999999998e-05, 7.219399999999765e-05, 7.301300000000024e-05, 7.254099999999888e-05, 7.276399999999947e-05, 7.281899999999827e-05]</msg>
<status status="PASS" starttime="20201030 18:32:09.984" endtime="20201030 18:32:09.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.979" endtime="20201030 18:32:09.986"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:09.990" endtime="20201030 18:32:10.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.988" endtime="20201030 18:32:10.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.987" endtime="20201030 18:32:10.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.629" endtime="20201030 18:32:10.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:09.628" endtime="20201030 18:32:10.010"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.019" endtime="20201030 18:32:10.038"></status>
</kw>
<msg timestamp="20201030 18:32:10.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:10.018" endtime="20201030 18:32:10.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:10.040" endtime="20201030 18:32:10.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.042" endtime="20201030 18:32:10.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.015" endtime="20201030 18:32:10.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.013" endtime="20201030 18:32:10.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.051" endtime="20201030 18:32:10.337"></status>
</kw>
<msg timestamp="20201030 18:32:10.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0232215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023294958, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:32:10.050" endtime="20201030 18:32:10.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0232215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023294958, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:32:10.342" endtime="20201030 18:32:10.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.350" endtime="20201030 18:32:10.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.047" endtime="20201030 18:32:10.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.046" endtime="20201030 18:32:10.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:10.356" level="INFO">${RESULT} = [{'diff': 7.345800000000194e-05}, {'diff': 7.34439999999989e-05}, {'diff': 7.390300000000016e-05}, {'diff': 7.32500000000004e-05}, {'diff': 7.32370000000003e-05}, {'diff': 7.40829999999991e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 18:32:10.353" endtime="20201030 18:32:10.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:10.360" level="INFO">${ACCURACY} = {'diff': [7.345800000000194e-05, 7.34439999999989e-05, 7.390300000000016e-05, 7.32500000000004e-05, 7.32370000000003e-05, 7.40829999999991e-05, 7.36110000000012e-05, 7.313899999999984e-05, 7.345899999...</msg>
<status status="PASS" starttime="20201030 18:32:10.357" endtime="20201030 18:32:10.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.365" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 18:32:10.364" endtime="20201030 18:32:10.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.367" level="INFO">VALUE: [7.345800000000194e-05, 7.34439999999989e-05, 7.390300000000016e-05, 7.32500000000004e-05, 7.32370000000003e-05, 7.40829999999991e-05, 7.36110000000012e-05, 7.313899999999984e-05, 7.345899999999794e-05, 7.398599999999811e-05, 7.334800000000086e-05, 7.387500000000102e-05, 7.36110000000012e-05, 7.331899999999877e-05, 7.33049999999992e-05, 7.333299999999834e-05, 7.362500000000077e-05, 7.322200000000126e-05, 7.35829999999986e-05, 7.390300000000016e-05, 7.402799999999682e-05, 7.35560000000024e-05, 7.388899999999712e-05, 7.408300000000256e-05, 7.377700000000056e-05, 7.319400000000212e-05, 7.312500000000027e-05, 7.40829999999991e-05, 7.342999999999933e-05, 7.359700000000163e-05, 7.344499999999837e-05, 7.402800000000029e-05, 7.391699999999973e-05, 7.313899999999984e-05, 7.329200000000258e-05, 7.400000000000115e-05, 7.362500000000077e-05, 7.338900000000009e-05, 7.372200000000176e-05, 7.345799999999847e-05, 7.3763999999997e-05, 7.331899999999877e-05, 7.316699999999898e-05, 7.356899999999902e-05, 7.369500000000209e-05, 7.345799999999847e-05, 7.344499999999837e-05, 7.341699999999923e-05, 7.4069999999999e-05, 7.315299999999941e-05]</msg>
<status status="PASS" starttime="20201030 18:32:10.366" endtime="20201030 18:32:10.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.361" endtime="20201030 18:32:10.375"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:10.379" endtime="20201030 18:32:10.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.377" endtime="20201030 18:32:10.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.376" endtime="20201030 18:32:10.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.011" endtime="20201030 18:32:10.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.011" endtime="20201030 18:32:10.399"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.408" endtime="20201030 18:32:10.427"></status>
</kw>
<msg timestamp="20201030 18:32:10.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:10.407" endtime="20201030 18:32:10.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:10.428" endtime="20201030 18:32:10.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.431" endtime="20201030 18:32:10.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.404" endtime="20201030 18:32:10.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.402" endtime="20201030 18:32:10.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.440" endtime="20201030 18:32:10.725"></status>
</kw>
<msg timestamp="20201030 18:32:10.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022152972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022227361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:10.438" endtime="20201030 18:32:10.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022152972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022227361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:10.729" endtime="20201030 18:32:10.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.738" endtime="20201030 18:32:10.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.435" endtime="20201030 18:32:10.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.434" endtime="20201030 18:32:10.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:10.744" level="INFO">${RESULT} = [{'diff': 7.438900000000109e-05}, {'diff': 7.455500000000045e-05}, {'diff': 7.505600000000043e-05}, {'diff': 7.486099999999898e-05}, {'diff': 7.479200000000061e-05}, {'diff': 7.487499999999855e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:10.741" endtime="20201030 18:32:10.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:10.749" level="INFO">${ACCURACY} = {'diff': [7.438900000000109e-05, 7.455500000000045e-05, 7.505600000000043e-05, 7.486099999999898e-05, 7.479200000000061e-05, 7.487499999999855e-05, 7.484799999999889e-05, 7.434800000000186e-05, 7.4652...</msg>
<status status="PASS" starttime="20201030 18:32:10.745" endtime="20201030 18:32:10.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.754" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 18:32:10.753" endtime="20201030 18:32:10.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.756" level="INFO">VALUE: [7.438900000000109e-05, 7.455500000000045e-05, 7.505600000000043e-05, 7.486099999999898e-05, 7.479200000000061e-05, 7.487499999999855e-05, 7.484799999999889e-05, 7.434800000000186e-05, 7.465299999999744e-05, 7.470799999999972e-05, 7.456900000000002e-05, 7.509700000000313e-05, 7.46249999999983e-05, 7.422199999999879e-05, 7.450000000000165e-05, 7.420799999999922e-05, 7.499999999999868e-05, 7.422199999999879e-05, 7.490300000000116e-05, 7.477800000000104e-05, 7.474999999999843e-05, 7.469400000000015e-05, 7.431899999999977e-05, 7.486099999999898e-05, 7.459699999999916e-05, 7.418000000000008e-05, 7.427800000000054e-05, 7.411099999999823e-05, 7.477800000000104e-05, 7.46249999999983e-05, 7.416699999999998e-05, 7.455599999999993e-05, 7.426400000000097e-05, 7.41249999999978e-05, 7.476400000000147e-05, 7.500000000000215e-05, 7.49440000000004e-05, 7.470800000000319e-05, 7.469400000000015e-05, 7.498599999999911e-05, 7.473599999999886e-05, 7.468100000000005e-05, 7.445799999999947e-05, 7.490300000000116e-05, 7.461099999999873e-05, 7.413900000000084e-05, 7.422199999999879e-05, 7.488800000000212e-05, 7.498600000000258e-05, 7.44439999999999e-05]</msg>
<status status="PASS" starttime="20201030 18:32:10.755" endtime="20201030 18:32:10.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.750" endtime="20201030 18:32:10.757"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:10.761" endtime="20201030 18:32:10.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.759" endtime="20201030 18:32:10.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.758" endtime="20201030 18:32:10.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.400" endtime="20201030 18:32:10.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.400" endtime="20201030 18:32:10.782"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.790" endtime="20201030 18:32:10.809"></status>
</kw>
<msg timestamp="20201030 18:32:10.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:10.789" endtime="20201030 18:32:10.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:10.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:10.811" endtime="20201030 18:32:10.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.813" endtime="20201030 18:32:10.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.786" endtime="20201030 18:32:10.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.784" endtime="20201030 18:32:10.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:10.822" endtime="20201030 18:32:11.108"></status>
</kw>
<msg timestamp="20201030 18:32:11.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022008861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022084181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:10.821" endtime="20201030 18:32:11.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022008861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022084181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:11.112" endtime="20201030 18:32:11.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.121" endtime="20201030 18:32:11.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.818" endtime="20201030 18:32:11.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.816" endtime="20201030 18:32:11.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:11.127" level="INFO">${RESULT} = [{'diff': 7.532000000000025e-05}, {'diff': 7.57370000000028e-05}, {'diff': 7.518100000000055e-05}, {'diff': 7.558299999999712e-05}, {'diff': 7.541600000000176e-05}, {'diff': 7.530499999999773e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:11.124" endtime="20201030 18:32:11.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:11.131" level="INFO">${ACCURACY} = {'diff': [7.532000000000025e-05, 7.57370000000028e-05, 7.518100000000055e-05, 7.558299999999712e-05, 7.541600000000176e-05, 7.530499999999773e-05, 7.56249999999993e-05, 7.518000000000108e-05, 7.587499...</msg>
<status status="PASS" starttime="20201030 18:32:11.128" endtime="20201030 18:32:11.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.136" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 18:32:11.135" endtime="20201030 18:32:11.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.138" level="INFO">VALUE: [7.532000000000025e-05, 7.57370000000028e-05, 7.518100000000055e-05, 7.558299999999712e-05, 7.541600000000176e-05, 7.530499999999773e-05, 7.56249999999993e-05, 7.518000000000108e-05, 7.587499999999955e-05, 7.586099999999998e-05, 7.6070000000001e-05, 7.545800000000047e-05, 7.605600000000143e-05, 7.536099999999948e-05, 7.530600000000068e-05, 7.545899999999994e-05, 7.519399999999718e-05, 7.522199999999979e-05, 7.541700000000123e-05, 7.531900000000077e-05, 7.588899999999912e-05, 7.59310000000013e-05, 7.59029999999987e-05, 7.577799999999857e-05, 7.561099999999973e-05, 7.51249999999988e-05, 7.59029999999987e-05, 7.52639999999985e-05, 7.606900000000152e-05, 7.574999999999943e-05, 7.602699999999935e-05, 7.551400000000222e-05, 7.51110000000027e-05, 7.5763999999999e-05, 7.531900000000077e-05, 7.551399999999875e-05, 7.576400000000247e-05, 7.570900000000019e-05, 7.605600000000143e-05, 7.533399999999982e-05, 7.516600000000151e-05, 7.573600000000333e-05, 7.56249999999993e-05, 7.54440000000009e-05, 7.55700000000005e-05, 7.533399999999982e-05, 7.526400000000197e-05, 7.56249999999993e-05, 7.52500000000024e-05, 7.563899999999887e-05]</msg>
<status status="PASS" starttime="20201030 18:32:11.137" endtime="20201030 18:32:11.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.132" endtime="20201030 18:32:11.139"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:11.143" endtime="20201030 18:32:11.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.141" endtime="20201030 18:32:11.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.140" endtime="20201030 18:32:11.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.783" endtime="20201030 18:32:11.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:10.782" endtime="20201030 18:32:11.165"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.177" endtime="20201030 18:32:11.201"></status>
</kw>
<msg timestamp="20201030 18:32:11.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:11.175" endtime="20201030 18:32:11.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:11.203" endtime="20201030 18:32:11.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.207" endtime="20201030 18:32:11.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.170" endtime="20201030 18:32:11.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.168" endtime="20201030 18:32:11.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.217" endtime="20201030 18:32:11.503"></status>
</kw>
<msg timestamp="20201030 18:32:11.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032426389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032503319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:11.215" endtime="20201030 18:32:11.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032426389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032503319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:11.507" endtime="20201030 18:32:11.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.515" endtime="20201030 18:32:11.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.213" endtime="20201030 18:32:11.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.211" endtime="20201030 18:32:11.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:11.522" level="INFO">${RESULT} = [{'diff': 7.693000000000283e-05}, {'diff': 7.706899999999905e-05}, {'diff': 7.618000000000208e-05}, {'diff': 7.684700000000488e-05}, {'diff': 7.6764e-05}, {'diff': 7.648600000000061e-05}, {'diff': 7.6...</msg>
<status status="PASS" starttime="20201030 18:32:11.519" endtime="20201030 18:32:11.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:11.526" level="INFO">${ACCURACY} = {'diff': [7.693000000000283e-05, 7.706899999999905e-05, 7.618000000000208e-05, 7.684700000000488e-05, 7.6764e-05, 7.648600000000061e-05, 7.69310000000023e-05, 7.669400000000215e-05, 7.698600000000111e...</msg>
<status status="PASS" starttime="20201030 18:32:11.523" endtime="20201030 18:32:11.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.530" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 18:32:11.529" endtime="20201030 18:32:11.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.533" level="INFO">VALUE: [7.693000000000283e-05, 7.706899999999905e-05, 7.618000000000208e-05, 7.684700000000488e-05, 7.6764e-05, 7.648600000000061e-05, 7.69310000000023e-05, 7.669400000000215e-05, 7.698600000000111e-05, 7.64169999999953e-05, 7.691700000000273e-05, 7.62639999999995e-05, 7.69440000000024e-05, 7.672200000000129e-05, 7.700000000000068e-05, 7.650000000000018e-05, 7.702799999999982e-05, 7.687499999999708e-05, 7.64440000000019e-05, 7.627799999999907e-05, 7.659799999999717e-05, 7.644500000000137e-05, 7.62639999999995e-05, 7.684800000000436e-05, 7.662499999999683e-05, 7.670799999999478e-05, 7.686099999999751e-05, 7.65969999999977e-05, 7.648600000000061e-05, 7.6764e-05, 7.627800000000601e-05, 7.700000000000068e-05, 7.670799999999478e-05, 7.615300000000241e-05, 7.631999999999778e-05, 7.69310000000023e-05, 7.617999999999514e-05, 7.705499999999949e-05, 7.611099999999676e-05, 7.615200000000294e-05, 7.656899999999855e-05, 7.702799999999982e-05, 7.701400000000025e-05, 7.629199999999864e-05, 7.702799999999982e-05, 7.619499999999418e-05, 7.706899999999905e-05, 7.659799999999717e-05, 7.680499999999923e-05, 7.680599999999871e-05]</msg>
<status status="PASS" starttime="20201030 18:32:11.532" endtime="20201030 18:32:11.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.527" endtime="20201030 18:32:11.535"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:11.539" endtime="20201030 18:32:11.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.537" endtime="20201030 18:32:11.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.536" endtime="20201030 18:32:11.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.166" endtime="20201030 18:32:11.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.165" endtime="20201030 18:32:11.560"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.568" endtime="20201030 18:32:11.587"></status>
</kw>
<msg timestamp="20201030 18:32:11.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:11.567" endtime="20201030 18:32:11.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:11.589" endtime="20201030 18:32:11.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.591" endtime="20201030 18:32:11.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.564" endtime="20201030 18:32:11.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.562" endtime="20201030 18:32:11.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.600" endtime="20201030 18:32:11.904"></status>
</kw>
<msg timestamp="20201030 18:32:11.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022590472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022668181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:11.599" endtime="20201030 18:32:11.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022590472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022668181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:11.908" endtime="20201030 18:32:11.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.916" endtime="20201030 18:32:11.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.596" endtime="20201030 18:32:11.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.595" endtime="20201030 18:32:11.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:11.923" level="INFO">${RESULT} = [{'diff': 7.770899999999872e-05}, {'diff': 7.730499999999974e-05}, {'diff': 7.769399999999968e-05}, {'diff': 7.787500000000155e-05}, {'diff': 7.765300000000044e-05}, {'diff': 7.713900000000037e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:11.920" endtime="20201030 18:32:11.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:11.928" level="INFO">${ACCURACY} = {'diff': [7.770899999999872e-05, 7.730499999999974e-05, 7.769399999999968e-05, 7.787500000000155e-05, 7.765300000000044e-05, 7.713900000000037e-05, 7.729199999999964e-05, 7.75700000000025e-05, 7.76530...</msg>
<status status="PASS" starttime="20201030 18:32:11.924" endtime="20201030 18:32:11.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.933" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 18:32:11.931" endtime="20201030 18:32:11.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.935" level="INFO">VALUE: [7.770899999999872e-05, 7.730499999999974e-05, 7.769399999999968e-05, 7.787500000000155e-05, 7.765300000000044e-05, 7.713900000000037e-05, 7.729199999999964e-05, 7.75700000000025e-05, 7.765300000000044e-05, 7.77770000000011e-05, 7.729100000000017e-05, 7.786100000000198e-05, 7.744399999999943e-05, 7.787500000000155e-05, 7.729199999999964e-05, 7.715299999999994e-05, 7.763900000000087e-05, 7.720900000000169e-05, 7.729199999999964e-05, 7.72229999999978e-05, 7.782000000000275e-05, 7.801400000000125e-05, 7.783299999999937e-05, 7.786099999999851e-05, 7.786099999999851e-05, 7.79579999999995e-05, 7.74440000000029e-05, 7.769399999999968e-05, 7.727800000000007e-05, 7.770800000000272e-05, 7.72640000000005e-05, 7.791700000000026e-05, 7.78189999999998e-05, 7.711200000000071e-05, 7.726300000000103e-05, 7.761100000000173e-05, 7.781999999999928e-05, 7.720799999999875e-05, 7.787499999999808e-05, 7.76389999999974e-05, 7.802800000000082e-05, 7.770799999999925e-05, 7.745900000000194e-05, 7.800000000000168e-05, 7.793099999999983e-05, 7.783399999999885e-05, 7.758299999999912e-05, 7.801400000000125e-05, 7.772199999999882e-05, 7.72640000000005e-05]</msg>
<status status="PASS" starttime="20201030 18:32:11.934" endtime="20201030 18:32:11.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.929" endtime="20201030 18:32:11.936"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:11.940" endtime="20201030 18:32:11.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.938" endtime="20201030 18:32:11.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.937" endtime="20201030 18:32:11.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.560" endtime="20201030 18:32:11.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.560" endtime="20201030 18:32:11.961"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.970" endtime="20201030 18:32:11.987"></status>
</kw>
<msg timestamp="20201030 18:32:11.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:11.968" endtime="20201030 18:32:11.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:11.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:11.989" endtime="20201030 18:32:11.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:11.991" endtime="20201030 18:32:11.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.965" endtime="20201030 18:32:11.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.963" endtime="20201030 18:32:11.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.000" endtime="20201030 18:32:12.287"></status>
</kw>
<msg timestamp="20201030 18:32:12.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022334639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022413486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:11.999" endtime="20201030 18:32:12.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022334639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022413486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:12.291" endtime="20201030 18:32:12.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.299" endtime="20201030 18:32:12.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.996" endtime="20201030 18:32:12.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.995" endtime="20201030 18:32:12.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:12.306" level="INFO">${RESULT} = [{'diff': 7.884699999999994e-05}, {'diff': 7.844400000000043e-05}, {'diff': 7.815299999999747e-05}, {'diff': 7.907000000000053e-05}, {'diff': 7.86519999999985e-05}, {'diff': 7.843100000000033e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:12.303" endtime="20201030 18:32:12.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:12.310" level="INFO">${ACCURACY} = {'diff': [7.884699999999994e-05, 7.844400000000043e-05, 7.815299999999747e-05, 7.907000000000053e-05, 7.86519999999985e-05, 7.843100000000033e-05, 7.884800000000289e-05, 7.822300000000226e-05, 7.88049...</msg>
<status status="PASS" starttime="20201030 18:32:12.307" endtime="20201030 18:32:12.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.315" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 18:32:12.314" endtime="20201030 18:32:12.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.317" level="INFO">VALUE: [7.884699999999994e-05, 7.844400000000043e-05, 7.815299999999747e-05, 7.907000000000053e-05, 7.86519999999985e-05, 7.843100000000033e-05, 7.884800000000289e-05, 7.822300000000226e-05, 7.880499999999777e-05, 7.905499999999802e-05, 7.858300000000012e-05, 7.874999999999896e-05, 7.858300000000012e-05, 7.906899999999759e-05, 7.8764000000002e-05, 7.833299999999987e-05, 7.872199999999982e-05, 7.874999999999896e-05, 7.82770000000016e-05, 7.883399999999985e-05, 7.877800000000157e-05, 7.888799999999918e-05, 7.870800000000025e-05, 7.819400000000018e-05, 7.869399999999721e-05, 7.86389999999984e-05, 7.837500000000205e-05, 7.861100000000273e-05, 7.861100000000273e-05, 7.84449999999999e-05, 7.819499999999965e-05, 7.82909999999977e-05, 7.823599999999889e-05, 7.884699999999994e-05, 7.836099999999901e-05, 7.816700000000051e-05, 7.847199999999957e-05, 7.877800000000157e-05, 7.83190000000003e-05, 7.83190000000003e-05, 7.887500000000255e-05, 7.847199999999957e-05, 7.886099999999951e-05, 7.829200000000064e-05, 7.873699999999886e-05, 7.873599999999939e-05, 7.8458e-05, 7.843000000000086e-05, 7.823599999999889e-05, 7.822199999999932e-05]</msg>
<status status="PASS" starttime="20201030 18:32:12.316" endtime="20201030 18:32:12.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.311" endtime="20201030 18:32:12.318"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:12.322" endtime="20201030 18:32:12.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.321" endtime="20201030 18:32:12.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.319" endtime="20201030 18:32:12.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.962" endtime="20201030 18:32:12.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:11.961" endtime="20201030 18:32:12.343"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.352" endtime="20201030 18:32:12.371"></status>
</kw>
<msg timestamp="20201030 18:32:12.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:12.350" endtime="20201030 18:32:12.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:12.373" endtime="20201030 18:32:12.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.375" endtime="20201030 18:32:12.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.348" endtime="20201030 18:32:12.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.346" endtime="20201030 18:32:12.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.384" endtime="20201030 18:32:12.670"></status>
</kw>
<msg timestamp="20201030 18:32:12.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023572042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023651389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:12.383" endtime="20201030 18:32:12.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023572042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023651389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:12.674" endtime="20201030 18:32:12.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.683" endtime="20201030 18:32:12.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.380" endtime="20201030 18:32:12.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.378" endtime="20201030 18:32:12.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:12.689" level="INFO">${RESULT} = [{'diff': 7.934699999999698e-05}, {'diff': 7.974999999999996e-05}, {'diff': 7.916699999999804e-05}, {'diff': 7.972200000000082e-05}, {'diff': 8.006999999999806e-05}, {'diff': 7.986199999999999e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:12.686" endtime="20201030 18:32:12.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:12.694" level="INFO">${ACCURACY} = {'diff': [7.934699999999698e-05, 7.974999999999996e-05, 7.916699999999804e-05, 7.972200000000082e-05, 8.006999999999806e-05, 7.986199999999999e-05, 7.957000000000103e-05, 7.974999999999996e-05, 8.0040...</msg>
<status status="PASS" starttime="20201030 18:32:12.690" endtime="20201030 18:32:12.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.698" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 18:32:12.697" endtime="20201030 18:32:12.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.700" level="INFO">VALUE: [7.934699999999698e-05, 7.974999999999996e-05, 7.916699999999804e-05, 7.972200000000082e-05, 8.006999999999806e-05, 7.986199999999999e-05, 7.957000000000103e-05, 7.974999999999996e-05, 8.004099999999945e-05, 7.976399999999953e-05, 7.97779999999991e-05, 7.958299999999766e-05, 7.919500000000065e-05, 7.937499999999958e-05, 8.011199999999677e-05, 7.923599999999989e-05, 7.94450000000009e-05, 8.002799999999935e-05, 7.923599999999989e-05, 7.930500000000174e-05, 7.973599999999692e-05, 7.991700000000226e-05, 7.934700000000044e-05, 7.993099999999836e-05, 7.969400000000168e-05, 8.005599999999849e-05, 7.990299999999922e-05, 7.998599999999717e-05, 7.973699999999986e-05, 7.988899999999965e-05, 7.920900000000022e-05, 7.984700000000094e-05, 8.004099999999945e-05, 7.99169999999988e-05, 7.95970000000007e-05, 7.974999999999996e-05, 7.944400000000143e-05, 7.976399999999953e-05, 7.948599999999667e-05, 8.006999999999806e-05, 7.90840000000001e-05, 7.912499999999933e-05, 7.970900000000072e-05, 7.919399999999771e-05, 7.926399999999903e-05, 7.973600000000039e-05, 8.001399999999978e-05, 7.984700000000094e-05, 8.005599999999849e-05, 7.97779999999991e-05]</msg>
<status status="PASS" starttime="20201030 18:32:12.699" endtime="20201030 18:32:12.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.694" endtime="20201030 18:32:12.703"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:12.706" endtime="20201030 18:32:12.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.705" endtime="20201030 18:32:12.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.704" endtime="20201030 18:32:12.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.344" endtime="20201030 18:32:12.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.344" endtime="20201030 18:32:12.727"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.736" endtime="20201030 18:32:12.754"></status>
</kw>
<msg timestamp="20201030 18:32:12.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:12.734" endtime="20201030 18:32:12.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:12.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:12.756" endtime="20201030 18:32:12.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.758" endtime="20201030 18:32:12.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.732" endtime="20201030 18:32:12.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.729" endtime="20201030 18:32:12.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:12.767" endtime="20201030 18:32:13.052"></status>
</kw>
<msg timestamp="20201030 18:32:13.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022323014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022403389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:12.766" endtime="20201030 18:32:13.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022323014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022403389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:13.057" endtime="20201030 18:32:13.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.065" endtime="20201030 18:32:13.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.763" endtime="20201030 18:32:13.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.761" endtime="20201030 18:32:13.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:13.072" level="INFO">${RESULT} = [{'diff': 8.037500000000058e-05}, {'diff': 8.087499999999762e-05}, {'diff': 8.059699999999823e-05}, {'diff': 8.061199999999727e-05}, {'diff': 8.016699999999904e-05}, {'diff': 8.050000000000071e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:13.068" endtime="20201030 18:32:13.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:13.077" level="INFO">${ACCURACY} = {'diff': [8.037500000000058e-05, 8.087499999999762e-05, 8.059699999999823e-05, 8.061199999999727e-05, 8.016699999999904e-05, 8.050000000000071e-05, 8.101299999999784e-05, 8.090300000000022e-05, 8.0625...</msg>
<status status="PASS" starttime="20201030 18:32:13.073" endtime="20201030 18:32:13.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.081" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 18:32:13.080" endtime="20201030 18:32:13.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.084" level="INFO">VALUE: [8.037500000000058e-05, 8.087499999999762e-05, 8.059699999999823e-05, 8.061199999999727e-05, 8.016699999999904e-05, 8.050000000000071e-05, 8.101299999999784e-05, 8.090300000000022e-05, 8.062500000000083e-05, 8.09169999999998e-05, 8.042999999999939e-05, 8.090300000000022e-05, 8.043099999999886e-05, 8.106899999999959e-05, 8.090300000000022e-05, 8.097299999999807e-05, 8.090200000000075e-05, 8.106899999999959e-05, 8.091600000000032e-05, 8.091600000000032e-05, 8.027800000000307e-05, 8.019500000000165e-05, 8.076400000000053e-05, 8.106899999999959e-05, 8.029199999999917e-05, 8.030599999999874e-05, 8.048599999999767e-05, 8.02779999999996e-05, 8.06520000000005e-05, 8.013800000000043e-05, 8.087500000000108e-05, 8.090200000000075e-05, 8.066699999999954e-05, 8.07780000000001e-05, 8.059699999999823e-05, 8.102800000000035e-05, 8.025000000000046e-05, 8.068099999999911e-05, 8.026400000000003e-05, 8.034699999999798e-05, 8.022200000000132e-05, 8.10130000000013e-05, 8.019399999999871e-05, 8.075000000000096e-05, 8.104199999999992e-05, 8.065299999999997e-05, 8.062500000000083e-05, 8.019400000000218e-05, 8.062500000000083e-05, 8.094499999999893e-05]</msg>
<status status="PASS" starttime="20201030 18:32:13.082" endtime="20201030 18:32:13.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.078" endtime="20201030 18:32:13.085"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:13.089" endtime="20201030 18:32:13.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.087" endtime="20201030 18:32:13.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.086" endtime="20201030 18:32:13.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.728" endtime="20201030 18:32:13.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:12.727" endtime="20201030 18:32:13.109"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.118" endtime="20201030 18:32:13.137"></status>
</kw>
<msg timestamp="20201030 18:32:13.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:13.117" endtime="20201030 18:32:13.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:13.139" endtime="20201030 18:32:13.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.141" endtime="20201030 18:32:13.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.114" endtime="20201030 18:32:13.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.112" endtime="20201030 18:32:13.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.153" endtime="20201030 18:32:13.440"></status>
</kw>
<msg timestamp="20201030 18:32:13.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022151736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022233681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:13.151" endtime="20201030 18:32:13.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022151736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022233681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:13.444" endtime="20201030 18:32:13.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.453" endtime="20201030 18:32:13.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.147" endtime="20201030 18:32:13.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.144" endtime="20201030 18:32:13.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:13.459" level="INFO">${RESULT} = [{'diff': 8.194499999999993e-05}, {'diff': 8.198599999999917e-05}, {'diff': 8.165300000000097e-05}, {'diff': 8.14719999999991e-05}, {'diff': 8.193000000000089e-05}, {'diff': 8.115300000000047e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:13.456" endtime="20201030 18:32:13.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:13.463" level="INFO">${ACCURACY} = {'diff': [8.194499999999993e-05, 8.198599999999917e-05, 8.165300000000097e-05, 8.14719999999991e-05, 8.193000000000089e-05, 8.115300000000047e-05, 8.131899999999984e-05, 8.131899999999984e-05, 8.12780...</msg>
<status status="PASS" starttime="20201030 18:32:13.460" endtime="20201030 18:32:13.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.468" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 18:32:13.467" endtime="20201030 18:32:13.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.470" level="INFO">VALUE: [8.194499999999993e-05, 8.198599999999917e-05, 8.165300000000097e-05, 8.14719999999991e-05, 8.193000000000089e-05, 8.115300000000047e-05, 8.131899999999984e-05, 8.131899999999984e-05, 8.12780000000006e-05, 8.173599999999892e-05, 8.162500000000183e-05, 8.147299999999857e-05, 8.198699999999864e-05, 8.184699999999948e-05, 8.17910000000012e-05, 8.191599999999785e-05, 8.170799999999978e-05, 8.188900000000165e-05, 8.190299999999776e-05, 8.172199999999935e-05, 8.109699999999873e-05, 8.159699999999923e-05, 8.186200000000199e-05, 8.111199999999777e-05, 8.188900000000165e-05, 8.119399999999971e-05, 8.127699999999766e-05, 8.159699999999923e-05, 8.207000000000006e-05, 8.145799999999953e-05, 8.173599999999892e-05, 8.11390000000009e-05, 8.175000000000196e-05, 8.133399999999888e-05, 8.181900000000034e-05, 8.122299999999832e-05, 8.118000000000014e-05, 8.184699999999948e-05, 8.201400000000178e-05, 8.187500000000208e-05, 8.137499999999812e-05, 8.187500000000208e-05, 8.158299999999966e-05, 8.116700000000004e-05, 8.202799999999788e-05, 8.188900000000165e-05, 8.174999999999849e-05, 8.193100000000036e-05, 8.130500000000027e-05, 8.130500000000027e-05]</msg>
<status status="PASS" starttime="20201030 18:32:13.469" endtime="20201030 18:32:13.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.464" endtime="20201030 18:32:13.472"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:13.475" endtime="20201030 18:32:13.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.474" endtime="20201030 18:32:13.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.473" endtime="20201030 18:32:13.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.110" endtime="20201030 18:32:13.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.110" endtime="20201030 18:32:13.496"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.505" endtime="20201030 18:32:13.525"></status>
</kw>
<msg timestamp="20201030 18:32:13.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:13.503" endtime="20201030 18:32:13.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:13.527" endtime="20201030 18:32:13.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.529" endtime="20201030 18:32:13.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.501" endtime="20201030 18:32:13.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.498" endtime="20201030 18:32:13.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.538" endtime="20201030 18:32:13.825"></status>
</kw>
<msg timestamp="20201030 18:32:13.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02327075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023353694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:13.537" endtime="20201030 18:32:13.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02327075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023353694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:13.830" endtime="20201030 18:32:13.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.838" endtime="20201030 18:32:13.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.534" endtime="20201030 18:32:13.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.532" endtime="20201030 18:32:13.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:13.846" level="INFO">${RESULT} = [{'diff': 8.294400000000146e-05}, {'diff': 8.263899999999894e-05}, {'diff': 8.248599999999967e-05}, {'diff': 8.286100000000005e-05}, {'diff': 8.290299999999876e-05}, {'diff': 8.266699999999808e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:13.842" endtime="20201030 18:32:13.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:13.850" level="INFO">${ACCURACY} = {'diff': [8.294400000000146e-05, 8.263899999999894e-05, 8.248599999999967e-05, 8.286100000000005e-05, 8.290299999999876e-05, 8.266699999999808e-05, 8.23330000000004e-05, 8.224999999999899e-05, 8.24450...</msg>
<status status="PASS" starttime="20201030 18:32:13.847" endtime="20201030 18:32:13.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.854" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 18:32:13.853" endtime="20201030 18:32:13.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.857" level="INFO">VALUE: [8.294400000000146e-05, 8.263899999999894e-05, 8.248599999999967e-05, 8.286100000000005e-05, 8.290299999999876e-05, 8.266699999999808e-05, 8.23330000000004e-05, 8.224999999999899e-05, 8.244500000000043e-05, 8.277799999999863e-05, 8.257000000000056e-05, 8.273599999999992e-05, 8.254100000000195e-05, 8.284700000000048e-05, 8.272200000000035e-05, 8.2846999999997e-05, 8.28330000000009e-05, 8.219400000000071e-05, 8.291699999999833e-05, 8.258300000000066e-05, 8.268100000000111e-05, 8.212500000000234e-05, 8.298699999999964e-05, 8.288899999999919e-05, 8.297300000000007e-05, 8.287499999999962e-05, 8.219400000000071e-05, 8.21390000000019e-05, 8.244400000000096e-05, 8.2152999999998e-05, 8.301399999999931e-05, 8.272200000000035e-05, 8.305599999999802e-05, 8.308400000000063e-05, 8.258400000000013e-05, 8.218099999999715e-05, 8.266700000000154e-05, 8.280500000000177e-05, 8.255499999999805e-05, 8.308300000000116e-05, 8.256900000000109e-05, 8.251400000000228e-05, 8.269400000000121e-05, 8.259700000000023e-05, 8.265300000000197e-05, 8.29309999999979e-05, 8.25979999999997e-05, 8.272200000000035e-05, 8.258299999999719e-05, 8.298600000000017e-05]</msg>
<status status="PASS" starttime="20201030 18:32:13.856" endtime="20201030 18:32:13.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.851" endtime="20201030 18:32:13.859"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:13.863" endtime="20201030 18:32:13.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.861" endtime="20201030 18:32:13.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.860" endtime="20201030 18:32:13.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.497" endtime="20201030 18:32:13.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.496" endtime="20201030 18:32:13.884"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.893" endtime="20201030 18:32:13.912"></status>
</kw>
<msg timestamp="20201030 18:32:13.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:13.891" endtime="20201030 18:32:13.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:13.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:13.913" endtime="20201030 18:32:13.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.916" endtime="20201030 18:32:13.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.888" endtime="20201030 18:32:13.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.886" endtime="20201030 18:32:13.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:13.925" endtime="20201030 18:32:14.211"></status>
</kw>
<msg timestamp="20201030 18:32:14.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022477708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022560958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:13.923" endtime="20201030 18:32:14.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022477708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022560958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:14.215" endtime="20201030 18:32:14.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.223" endtime="20201030 18:32:14.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.921" endtime="20201030 18:32:14.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.919" endtime="20201030 18:32:14.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:14.230" level="INFO">${RESULT} = [{'diff': 8.324999999999999e-05}, {'diff': 8.380600000000224e-05}, {'diff': 8.356899999999862e-05}, {'diff': 8.343100000000186e-05}, {'diff': 8.386099999999758e-05}, {'diff': 8.369499999999822e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:14.227" endtime="20201030 18:32:14.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:14.235" level="INFO">${ACCURACY} = {'diff': [8.324999999999999e-05, 8.380600000000224e-05, 8.356899999999862e-05, 8.343100000000186e-05, 8.386099999999758e-05, 8.369499999999822e-05, 8.322200000000085e-05, 8.334800000000045e-05, 8.3209...</msg>
<status status="PASS" starttime="20201030 18:32:14.231" endtime="20201030 18:32:14.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.239" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 18:32:14.238" endtime="20201030 18:32:14.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.242" level="INFO">VALUE: [8.324999999999999e-05, 8.380600000000224e-05, 8.356899999999862e-05, 8.343100000000186e-05, 8.386099999999758e-05, 8.369499999999822e-05, 8.322200000000085e-05, 8.334800000000045e-05, 8.320900000000075e-05, 8.318000000000214e-05, 8.390200000000028e-05, 8.373599999999745e-05, 8.326399999999956e-05, 8.348600000000067e-05, 8.359700000000123e-05, 8.322200000000085e-05, 8.327799999999913e-05, 8.375000000000049e-05, 8.394499999999847e-05, 8.404199999999945e-05, 8.320800000000128e-05, 8.356899999999862e-05, 8.372200000000135e-05, 8.356899999999862e-05, 8.312499999999987e-05, 8.33330000000014e-05, 8.402799999999988e-05, 8.356899999999862e-05, 8.380599999999877e-05, 8.388900000000019e-05, 8.330600000000174e-05, 8.363899999999994e-05, 8.361200000000027e-05, 8.370799999999831e-05, 8.359700000000123e-05, 8.340299999999926e-05, 8.320800000000128e-05, 8.347199999999763e-05, 8.344499999999797e-05, 8.34309999999984e-05, 8.401400000000031e-05, 8.406999999999859e-05, 8.31110000000003e-05, 8.37370000000004e-05, 8.331899999999837e-05, 8.3846999999998e-05, 8.372199999999788e-05, 8.386100000000105e-05, 8.373600000000092e-05, 8.331900000000184e-05]</msg>
<status status="PASS" starttime="20201030 18:32:14.241" endtime="20201030 18:32:14.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.236" endtime="20201030 18:32:14.243"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:14.247" endtime="20201030 18:32:14.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.245" endtime="20201030 18:32:14.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.244" endtime="20201030 18:32:14.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.885" endtime="20201030 18:32:14.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:13.884" endtime="20201030 18:32:14.268"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.276" endtime="20201030 18:32:14.295"></status>
</kw>
<msg timestamp="20201030 18:32:14.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:14.275" endtime="20201030 18:32:14.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:14.297" endtime="20201030 18:32:14.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.299" endtime="20201030 18:32:14.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.272" endtime="20201030 18:32:14.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.270" endtime="20201030 18:32:14.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.308" endtime="20201030 18:32:14.609"></status>
</kw>
<msg timestamp="20201030 18:32:14.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022134431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022219458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:14.307" endtime="20201030 18:32:14.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022134431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022219458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:14.618" endtime="20201030 18:32:14.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.637" endtime="20201030 18:32:14.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.304" endtime="20201030 18:32:14.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.303" endtime="20201030 18:32:14.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:14.651" level="INFO">${RESULT} = [{'diff': 8.502700000000141e-05}, {'diff': 8.412500000000087e-05}, {'diff': 8.504199999999698e-05}, {'diff': 8.431899999999937e-05}, {'diff': 8.49309999999999e-05}, {'diff': 8.486099999999858e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:14.644" endtime="20201030 18:32:14.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:14.660" level="INFO">${ACCURACY} = {'diff': [8.502700000000141e-05, 8.412500000000087e-05, 8.504199999999698e-05, 8.431899999999937e-05, 8.49309999999999e-05, 8.486099999999858e-05, 8.490300000000076e-05, 8.473600000000192e-05, 8.48620...</msg>
<status status="PASS" starttime="20201030 18:32:14.653" endtime="20201030 18:32:14.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.664" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 18:32:14.663" endtime="20201030 18:32:14.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.667" level="INFO">VALUE: [8.502700000000141e-05, 8.412500000000087e-05, 8.504199999999698e-05, 8.431899999999937e-05, 8.49309999999999e-05, 8.486099999999858e-05, 8.490300000000076e-05, 8.473600000000192e-05, 8.486200000000152e-05, 8.476399999999759e-05, 8.42919999999997e-05, 8.48330000000029e-05, 8.486099999999858e-05, 8.49859999999987e-05, 8.459700000000223e-05, 8.495799999999956e-05, 8.506900000000012e-05, 8.459699999999876e-05, 8.491700000000033e-05, 8.476400000000106e-05, 8.504200000000045e-05, 8.506999999999959e-05, 8.447199999999863e-05, 8.445799999999906e-05, 8.48050000000003e-05, 8.456899999999962e-05, 8.490300000000076e-05, 8.470799999999931e-05, 8.42919999999997e-05, 8.505600000000002e-05, 8.433399999999841e-05, 8.469499999999922e-05, 8.484799999999848e-05, 8.424999999999752e-05, 8.504100000000098e-05, 8.448600000000167e-05, 8.488900000000119e-05, 8.477800000000063e-05, 8.502800000000088e-05, 8.44309999999994e-05, 8.431999999999884e-05, 8.457000000000256e-05, 8.441699999999983e-05, 8.420900000000175e-05, 8.463800000000146e-05, 8.436100000000155e-05, 8.504099999999751e-05, 8.419400000000271e-05, 8.484700000000248e-05, 8.430599999999927e-05]</msg>
<status status="PASS" starttime="20201030 18:32:14.666" endtime="20201030 18:32:14.668"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.661" endtime="20201030 18:32:14.668"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:14.672" endtime="20201030 18:32:14.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.670" endtime="20201030 18:32:14.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.669" endtime="20201030 18:32:14.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.269" endtime="20201030 18:32:14.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.268" endtime="20201030 18:32:14.693"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.701" endtime="20201030 18:32:14.724"></status>
</kw>
<msg timestamp="20201030 18:32:14.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:14.700" endtime="20201030 18:32:14.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:14.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:14.725" endtime="20201030 18:32:14.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.728" endtime="20201030 18:32:14.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.697" endtime="20201030 18:32:14.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.695" endtime="20201030 18:32:14.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:14.737" endtime="20201030 18:32:15.023"></status>
</kw>
<msg timestamp="20201030 18:32:15.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025488792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025574569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:14.735" endtime="20201030 18:32:15.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025488792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025574569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:15.027" endtime="20201030 18:32:15.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.035" endtime="20201030 18:32:15.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.733" endtime="20201030 18:32:15.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.731" endtime="20201030 18:32:15.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:15.042" level="INFO">${RESULT} = [{'diff': 8.577699999999869e-05}, {'diff': 8.51799999999972e-05}, {'diff': 8.5153000000001e-05}, {'diff': 8.51799999999972e-05}, {'diff': 8.51660000000011e-05}, {'diff': 8.530600000000027e-05}, {'diff...</msg>
<status status="PASS" starttime="20201030 18:32:15.039" endtime="20201030 18:32:15.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:15.046" level="INFO">${ACCURACY} = {'diff': [8.577699999999869e-05, 8.51799999999972e-05, 8.5153000000001e-05, 8.51799999999972e-05, 8.51660000000011e-05, 8.530600000000027e-05, 8.559699999999976e-05, 8.519499999999972e-05, 8.551400000...</msg>
<status status="PASS" starttime="20201030 18:32:15.043" endtime="20201030 18:32:15.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.050" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 18:32:15.049" endtime="20201030 18:32:15.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.053" level="INFO">VALUE: [8.577699999999869e-05, 8.51799999999972e-05, 8.5153000000001e-05, 8.51799999999972e-05, 8.51660000000011e-05, 8.530600000000027e-05, 8.559699999999976e-05, 8.519499999999972e-05, 8.551400000000181e-05, 8.543099999999693e-05, 8.555600000000052e-05, 8.520899999999929e-05, 8.559699999999976e-05, 8.591599999999838e-05, 8.601399999999884e-05, 8.601399999999884e-05, 8.591700000000133e-05, 8.5847e-05, 8.513899999999797e-05, 8.515299999999754e-05, 8.513899999999797e-05, 8.607000000000059e-05, 8.602699999999894e-05, 8.59859999999997e-05, 8.558300000000019e-05, 8.529100000000123e-05, 8.508299999999969e-05, 8.573599999999945e-05, 8.568100000000065e-05, 8.590299999999829e-05, 8.577799999999816e-05, 8.527800000000113e-05, 8.584799999999948e-05, 8.558399999999966e-05, 8.548600000000267e-05, 8.595799999999709e-05, 8.588899999999872e-05, 8.559699999999976e-05, 8.522199999999938e-05, 8.607000000000059e-05, 8.559699999999976e-05, 8.544499999999997e-05, 8.531999999999984e-05, 8.590299999999829e-05, 8.605600000000102e-05, 8.541599999999788e-05, 8.544400000000049e-05, 8.594400000000099e-05, 8.599999999999927e-05, 8.572199999999988e-05]</msg>
<status status="PASS" starttime="20201030 18:32:15.052" endtime="20201030 18:32:15.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.047" endtime="20201030 18:32:15.100"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:15.104" endtime="20201030 18:32:15.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.103" endtime="20201030 18:32:15.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.101" endtime="20201030 18:32:15.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.694" endtime="20201030 18:32:15.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:14.693" endtime="20201030 18:32:15.125"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.133" endtime="20201030 18:32:15.153"></status>
</kw>
<msg timestamp="20201030 18:32:15.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:15.132" endtime="20201030 18:32:15.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:15.154" endtime="20201030 18:32:15.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.157" endtime="20201030 18:32:15.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.129" endtime="20201030 18:32:15.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.127" endtime="20201030 18:32:15.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.167" endtime="20201030 18:32:15.454"></status>
</kw>
<msg timestamp="20201030 18:32:15.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02204875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022135375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:15.165" endtime="20201030 18:32:15.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02204875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022135375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:15.458" endtime="20201030 18:32:15.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.466" endtime="20201030 18:32:15.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.162" endtime="20201030 18:32:15.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.160" endtime="20201030 18:32:15.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:15.474" level="INFO">${RESULT} = [{'diff': 8.66249999999999e-05}, {'diff': 8.63059999999978e-05}, {'diff': 8.654200000000195e-05}, {'diff': 8.6153000000002e-05}, {'diff': 8.633400000000041e-05}, {'diff': 8.619500000000072e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 18:32:15.470" endtime="20201030 18:32:15.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:15.478" level="INFO">${ACCURACY} = {'diff': [8.66249999999999e-05, 8.63059999999978e-05, 8.654200000000195e-05, 8.6153000000002e-05, 8.633400000000041e-05, 8.619500000000072e-05, 8.661100000000033e-05, 8.643000000000192e-05, 8.62909999...</msg>
<status status="PASS" starttime="20201030 18:32:15.475" endtime="20201030 18:32:15.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.482" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 18:32:15.481" endtime="20201030 18:32:15.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.485" level="INFO">VALUE: [8.66249999999999e-05, 8.63059999999978e-05, 8.654200000000195e-05, 8.6153000000002e-05, 8.633400000000041e-05, 8.619500000000072e-05, 8.661100000000033e-05, 8.643000000000192e-05, 8.629099999999876e-05, 8.618100000000115e-05, 8.6847000000001e-05, 8.644400000000149e-05, 8.675000000000002e-05, 8.701399999999984e-05, 8.707000000000159e-05, 8.636199999999955e-05, 8.683300000000144e-05, 8.692999999999895e-05, 8.675000000000002e-05, 8.649999999999977e-05, 8.670800000000131e-05, 8.644400000000149e-05, 8.669399999999827e-05, 8.697199999999766e-05, 8.627800000000213e-05, 8.654199999999848e-05, 8.652799999999891e-05, 8.672300000000036e-05, 8.663799999999999e-05, 8.672200000000088e-05, 8.69860000000007e-05, 8.66249999999999e-05, 8.675000000000002e-05, 8.629199999999823e-05, 8.61669999999981e-05, 8.708399999999769e-05, 8.64860000000002e-05, 8.641700000000183e-05, 8.649999999999977e-05, 8.690299999999929e-05, 8.642999999999845e-05, 8.708300000000169e-05, 8.681900000000187e-05, 8.690299999999929e-05, 8.615299999999854e-05, 8.66669999999986e-05, 8.613899999999897e-05, 8.633400000000041e-05, 8.649999999999977e-05, 8.657000000000109e-05]</msg>
<status status="PASS" starttime="20201030 18:32:15.483" endtime="20201030 18:32:15.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.479" endtime="20201030 18:32:15.494"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:15.498" endtime="20201030 18:32:15.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.496" endtime="20201030 18:32:15.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.495" endtime="20201030 18:32:15.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.126" endtime="20201030 18:32:15.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.125" endtime="20201030 18:32:15.518"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.528" endtime="20201030 18:32:15.547"></status>
</kw>
<msg timestamp="20201030 18:32:15.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:15.525" endtime="20201030 18:32:15.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:15.548" endtime="20201030 18:32:15.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.551" endtime="20201030 18:32:15.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.523" endtime="20201030 18:32:15.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.521" endtime="20201030 18:32:15.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.560" endtime="20201030 18:32:15.845"></status>
</kw>
<msg timestamp="20201030 18:32:15.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023111986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023200056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:15.558" endtime="20201030 18:32:15.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023111986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023200056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:15.849" endtime="20201030 18:32:15.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.858" endtime="20201030 18:32:15.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.556" endtime="20201030 18:32:15.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.554" endtime="20201030 18:32:15.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:15.864" level="INFO">${RESULT} = [{'diff': 8.806999999999912e-05}, {'diff': 8.736100000000108e-05}, {'diff': 8.763900000000047e-05}, {'diff': 8.777800000000016e-05}, {'diff': 8.759700000000176e-05}, {'diff': 8.795799999999909e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:15.861" endtime="20201030 18:32:15.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:15.868" level="INFO">${ACCURACY} = {'diff': [8.806999999999912e-05, 8.736100000000108e-05, 8.763900000000047e-05, 8.777800000000016e-05, 8.759700000000176e-05, 8.795799999999909e-05, 8.76250000000009e-05, 8.732000000000184e-05, 8.81110...</msg>
<status status="PASS" starttime="20201030 18:32:15.865" endtime="20201030 18:32:15.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.873" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 18:32:15.872" endtime="20201030 18:32:15.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.876" level="INFO">VALUE: [8.806999999999912e-05, 8.736100000000108e-05, 8.763900000000047e-05, 8.777800000000016e-05, 8.759700000000176e-05, 8.795799999999909e-05, 8.76250000000009e-05, 8.732000000000184e-05, 8.811100000000183e-05, 8.74310000000024e-05, 8.740299999999979e-05, 8.724999999999705e-05, 8.790200000000081e-05, 8.723599999999748e-05, 8.71799999999992e-05, 8.800000000000127e-05, 8.776400000000059e-05, 8.806899999999965e-05, 8.798599999999823e-05, 8.76250000000009e-05, 8.76669999999996e-05, 8.769499999999875e-05, 8.784699999999854e-05, 8.761100000000133e-05, 8.750000000000077e-05, 8.806899999999965e-05, 8.786099999999811e-05, 8.762499999999743e-05, 8.758299999999872e-05, 8.763900000000047e-05, 8.723700000000043e-05, 8.713899999999997e-05, 8.713899999999997e-05, 8.722299999999739e-05, 8.744399999999902e-05, 8.81250000000014e-05, 8.734699999999804e-05, 8.788900000000072e-05, 8.758299999999872e-05, 8.801400000000084e-05, 8.776399999999712e-05, 8.733399999999794e-05, 8.798599999999823e-05, 8.74860000000012e-05, 8.718100000000215e-05, 8.801399999999737e-05, 8.797199999999866e-05, 8.722199999999791e-05, 8.733299999999847e-05, 8.756899999999915e-05]</msg>
<status status="PASS" starttime="20201030 18:32:15.874" endtime="20201030 18:32:15.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.869" endtime="20201030 18:32:15.877"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:15.881" endtime="20201030 18:32:15.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.880" endtime="20201030 18:32:15.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.878" endtime="20201030 18:32:15.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.519" endtime="20201030 18:32:15.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.519" endtime="20201030 18:32:15.902"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.910" endtime="20201030 18:32:15.929"></status>
</kw>
<msg timestamp="20201030 18:32:15.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:15.909" endtime="20201030 18:32:15.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:15.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:15.931" endtime="20201030 18:32:15.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.933" endtime="20201030 18:32:15.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.906" endtime="20201030 18:32:15.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.904" endtime="20201030 18:32:15.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:15.943" endtime="20201030 18:32:16.229"></status>
</kw>
<msg timestamp="20201030 18:32:16.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022064097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022152889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:15.941" endtime="20201030 18:32:16.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022064097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022152889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:16.233" endtime="20201030 18:32:16.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:16.242" endtime="20201030 18:32:16.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.938" endtime="20201030 18:32:16.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.937" endtime="20201030 18:32:16.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:16.248" level="INFO">${RESULT} = [{'diff': 8.879199999999726e-05}, {'diff': 8.827799999999719e-05}, {'diff': 8.851400000000134e-05}, {'diff': 8.869499999999975e-05}, {'diff': 8.808400000000216e-05}, {'diff': 8.820800000000281e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:16.245" endtime="20201030 18:32:16.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:16.253" level="INFO">${ACCURACY} = {'diff': [8.879199999999726e-05, 8.827799999999719e-05, 8.851400000000134e-05, 8.869499999999975e-05, 8.808400000000216e-05, 8.820800000000281e-05, 8.902700000000194e-05, 8.883299999999997e-05, 8.8346...</msg>
<status status="PASS" starttime="20201030 18:32:16.249" endtime="20201030 18:32:16.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.258" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 18:32:16.257" endtime="20201030 18:32:16.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.260" level="INFO">VALUE: [8.879199999999726e-05, 8.827799999999719e-05, 8.851400000000134e-05, 8.869499999999975e-05, 8.808400000000216e-05, 8.820800000000281e-05, 8.902700000000194e-05, 8.883299999999997e-05, 8.834699999999904e-05, 8.81670000000001e-05, 8.822199999999891e-05, 8.856999999999962e-05, 8.888899999999825e-05, 8.870899999999932e-05, 8.884799999999901e-05, 8.858399999999919e-05, 8.902700000000194e-05, 8.904100000000151e-05, 8.844400000000002e-05, 8.81250000000014e-05, 8.845799999999959e-05, 8.858299999999972e-05, 8.890300000000129e-05, 8.876399999999812e-05, 8.845900000000254e-05, 8.884799999999901e-05, 8.811199999999783e-05, 8.86250000000019e-05, 8.898599999999923e-05, 8.847199999999916e-05, 8.909699999999979e-05, 8.845799999999959e-05, 8.862499999999843e-05, 8.870799999999984e-05, 8.890300000000129e-05, 8.827800000000066e-05, 8.887499999999868e-05, 8.845800000000306e-05, 8.890199999999834e-05, 8.890200000000181e-05, 8.86939999999968e-05, 8.836099999999861e-05, 8.848599999999873e-05, 8.904200000000098e-05, 8.872200000000288e-05, 8.8945e-05, 8.834799999999851e-05, 8.819499999999925e-05, 8.833300000000294e-05, 8.829100000000076e-05]</msg>
<status status="PASS" starttime="20201030 18:32:16.259" endtime="20201030 18:32:16.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.254" endtime="20201030 18:32:16.261"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:16.265" endtime="20201030 18:32:16.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.263" endtime="20201030 18:32:16.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.262" endtime="20201030 18:32:16.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.903" endtime="20201030 18:32:16.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:15.902" endtime="20201030 18:32:16.286"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:16.295" endtime="20201030 18:32:16.314"></status>
</kw>
<msg timestamp="20201030 18:32:16.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:16.293" endtime="20201030 18:32:16.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:16.315" endtime="20201030 18:32:16.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:16.318" endtime="20201030 18:32:16.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.290" endtime="20201030 18:32:16.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.288" endtime="20201030 18:32:16.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:16.327" endtime="20201030 18:32:16.614"></status>
</kw>
<msg timestamp="20201030 18:32:16.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022336153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02242575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:16.325" endtime="20201030 18:32:16.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022336153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02242575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:16.618" endtime="20201030 18:32:16.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:16.627" endtime="20201030 18:32:16.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.323" endtime="20201030 18:32:16.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.321" endtime="20201030 18:32:16.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:16.633" level="INFO">${RESULT} = [{'diff': 8.959700000000029e-05}, {'diff': 8.968100000000118e-05}, {'diff': 8.988899999999925e-05}, {'diff': 9.004199999999851e-05}, {'diff': 8.919500000000025e-05}, {'diff': 8.9638999999999e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:16.630" endtime="20201030 18:32:16.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:16.637" level="INFO">${ACCURACY} = {'diff': [8.959700000000029e-05, 8.968100000000118e-05, 8.988899999999925e-05, 9.004199999999851e-05, 8.919500000000025e-05, 8.9638999999999e-05, 8.9332999999997e-05, 8.974999999999955e-05, 8.93470000...</msg>
<status status="PASS" starttime="20201030 18:32:16.634" endtime="20201030 18:32:16.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.642" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 18:32:16.641" endtime="20201030 18:32:16.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.644" level="INFO">VALUE: [8.959700000000029e-05, 8.968100000000118e-05, 8.988899999999925e-05, 9.004199999999851e-05, 8.919500000000025e-05, 8.9638999999999e-05, 8.9332999999997e-05, 8.974999999999955e-05, 8.934700000000004e-05, 9.009700000000079e-05, 8.974999999999955e-05, 8.959700000000029e-05, 8.986100000000011e-05, 8.94450000000005e-05, 8.984800000000001e-05, 8.988899999999925e-05, 8.919400000000077e-05, 8.948599999999973e-05, 8.962499999999943e-05, 8.938899999999875e-05, 8.936099999999961e-05, 8.947200000000016e-05, 8.93190000000009e-05, 9.007000000000112e-05, 8.919500000000025e-05, 8.99999999999998e-05, 8.933399999999994e-05, 8.99999999999998e-05, 9.004100000000251e-05, 8.91800000000012e-05, 8.991699999999839e-05, 8.986099999999664e-05, 8.924999999999905e-05, 8.920800000000034e-05, 9.005600000000155e-05, 8.98060000000013e-05, 8.94450000000005e-05, 9.005600000000155e-05, 8.968099999999771e-05, 8.956900000000115e-05, 8.91389999999985e-05, 8.967999999999823e-05, 8.977800000000216e-05, 8.962499999999943e-05, 8.998600000000023e-05, 8.923599999999948e-05, 8.962499999999943e-05, 8.988899999999925e-05, 8.973599999999998e-05, 8.974999999999955e-05]</msg>
<status status="PASS" starttime="20201030 18:32:16.643" endtime="20201030 18:32:16.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.638" endtime="20201030 18:32:16.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:16.649" endtime="20201030 18:32:16.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.648" endtime="20201030 18:32:16.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.647" endtime="20201030 18:32:16.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.287" endtime="20201030 18:32:16.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.286" endtime="20201030 18:32:16.670"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:16.679" endtime="20201030 18:32:16.699"></status>
</kw>
<msg timestamp="20201030 18:32:16.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:16.677" endtime="20201030 18:32:16.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:16.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:16.700" endtime="20201030 18:32:16.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:16.703" endtime="20201030 18:32:16.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.675" endtime="20201030 18:32:16.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.672" endtime="20201030 18:32:16.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:16.712" endtime="20201030 18:32:16.996"></status>
</kw>
<msg timestamp="20201030 18:32:16.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022875792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022966347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:16.710" endtime="20201030 18:32:16.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022875792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022966347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:17.000" endtime="20201030 18:32:17.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.009" endtime="20201030 18:32:17.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.708" endtime="20201030 18:32:17.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.706" endtime="20201030 18:32:17.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:17.015" level="INFO">${RESULT} = [{'diff': 9.055500000000258e-05}, {'diff': 9.034700000000104e-05}, {'diff': 9.06939999999988e-05}, {'diff': 9.104199999999951e-05}, {'diff': 9.093099999999896e-05}, {'diff': 9.033300000000147e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:17.012" endtime="20201030 18:32:17.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:17.019" level="INFO">${ACCURACY} = {'diff': [9.055500000000258e-05, 9.034700000000104e-05, 9.06939999999988e-05, 9.104199999999951e-05, 9.093099999999896e-05, 9.033300000000147e-05, 9.093099999999896e-05, 9.06520000000001e-05, 9.111100...</msg>
<status status="PASS" starttime="20201030 18:32:17.016" endtime="20201030 18:32:17.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.024" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 18:32:17.023" endtime="20201030 18:32:17.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.027" level="INFO">VALUE: [9.055500000000258e-05, 9.034700000000104e-05, 9.06939999999988e-05, 9.104199999999951e-05, 9.093099999999896e-05, 9.033300000000147e-05, 9.093099999999896e-05, 9.06520000000001e-05, 9.111100000000136e-05, 9.088800000000077e-05, 9.033300000000147e-05, 9.108400000000169e-05, 9.015299999999907e-05, 9.015299999999907e-05, 9.017999999999873e-05, 9.097200000000166e-05, 9.072199999999794e-05, 9.016699999999864e-05, 9.094400000000252e-05, 9.072200000000141e-05, 9.075000000000055e-05, 9.048600000000073e-05, 9.072200000000141e-05, 9.098600000000123e-05, 9.093099999999896e-05, 9.10000000000008e-05, 9.018100000000168e-05, 9.061100000000086e-05, 9.034800000000051e-05, 9.079099999999979e-05, 9.067999999999923e-05, 9.091599999999991e-05, 9.087500000000068e-05, 9.036100000000061e-05, 9.086100000000111e-05, 9.106999999999865e-05, 9.034700000000104e-05, 9.075000000000055e-05, 9.091699999999939e-05, 9.106899999999918e-05, 9.084700000000154e-05, 9.1026999999997e-05, 9.047200000000116e-05, 9.090299999999982e-05, 9.020799999999787e-05, 9.059700000000129e-05, 9.022199999999744e-05, 9.019500000000125e-05, 9.018100000000168e-05, 9.058400000000119e-05]</msg>
<status status="PASS" starttime="20201030 18:32:17.025" endtime="20201030 18:32:17.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.020" endtime="20201030 18:32:17.029"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:17.032" endtime="20201030 18:32:17.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.031" endtime="20201030 18:32:17.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.030" endtime="20201030 18:32:17.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.671" endtime="20201030 18:32:17.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:16.670" endtime="20201030 18:32:17.053"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.062" endtime="20201030 18:32:17.081"></status>
</kw>
<msg timestamp="20201030 18:32:17.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:17.060" endtime="20201030 18:32:17.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:17.082" endtime="20201030 18:32:17.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.085" endtime="20201030 18:32:17.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.057" endtime="20201030 18:32:17.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.055" endtime="20201030 18:32:17.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.094" endtime="20201030 18:32:17.380"></status>
</kw>
<msg timestamp="20201030 18:32:17.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022195569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022286694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:17.093" endtime="20201030 18:32:17.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022195569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022286694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:17.384" endtime="20201030 18:32:17.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.393" endtime="20201030 18:32:17.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.090" endtime="20201030 18:32:17.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.088" endtime="20201030 18:32:17.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:17.399" level="INFO">${RESULT} = [{'diff': 9.112500000000093e-05}, {'diff': 9.162499999999796e-05}, {'diff': 9.177700000000122e-05}, {'diff': 9.177800000000069e-05}, {'diff': 9.190299999999735e-05}, {'diff': 9.188900000000125e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:17.396" endtime="20201030 18:32:17.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:17.405" level="INFO">${ACCURACY} = {'diff': [9.112500000000093e-05, 9.162499999999796e-05, 9.177700000000122e-05, 9.177800000000069e-05, 9.190299999999735e-05, 9.188900000000125e-05, 9.168000000000023e-05, 9.14719999999987e-05, 9.19999...</msg>
<status status="PASS" starttime="20201030 18:32:17.400" endtime="20201030 18:32:17.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.409" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 18:32:17.408" endtime="20201030 18:32:17.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.412" level="INFO">VALUE: [9.112500000000093e-05, 9.162499999999796e-05, 9.177700000000122e-05, 9.177800000000069e-05, 9.190299999999735e-05, 9.188900000000125e-05, 9.168000000000023e-05, 9.14719999999987e-05, 9.199999999999833e-05, 9.204099999999757e-05, 9.127800000000019e-05, 9.184699999999907e-05, 9.179200000000026e-05, 9.14719999999987e-05, 9.205500000000061e-05, 9.173599999999851e-05, 9.177800000000069e-05, 9.11390000000005e-05, 9.120800000000234e-05, 9.156999999999915e-05, 9.191700000000039e-05, 9.190300000000082e-05, 9.170899999999885e-05, 9.117999999999973e-05, 9.119400000000277e-05, 9.208299999999975e-05, 9.204100000000104e-05, 9.158299999999925e-05, 9.19870000000017e-05, 9.158300000000272e-05, 9.169499999999928e-05, 9.123599999999801e-05, 9.190199999999787e-05, 9.122199999999844e-05, 9.199999999999833e-05, 9.144399999999955e-05, 9.156899999999968e-05, 9.188900000000125e-05, 9.204199999999704e-05, 9.129200000000323e-05, 9.202800000000094e-05, 9.204200000000051e-05, 9.170900000000232e-05, 9.159799999999829e-05, 9.193000000000048e-05, 9.145800000000259e-05, 9.116600000000016e-05, 9.173599999999851e-05, 9.129199999999976e-05, 9.205600000000008e-05]</msg>
<status status="PASS" starttime="20201030 18:32:17.411" endtime="20201030 18:32:17.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.406" endtime="20201030 18:32:17.414"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:17.418" endtime="20201030 18:32:17.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.416" endtime="20201030 18:32:17.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.415" endtime="20201030 18:32:17.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.054" endtime="20201030 18:32:17.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.053" endtime="20201030 18:32:17.438"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.447" endtime="20201030 18:32:17.467"></status>
</kw>
<msg timestamp="20201030 18:32:17.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:17.446" endtime="20201030 18:32:17.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:17.468" endtime="20201030 18:32:17.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.471" endtime="20201030 18:32:17.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.443" endtime="20201030 18:32:17.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.441" endtime="20201030 18:32:17.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.480" endtime="20201030 18:32:17.767"></status>
</kw>
<msg timestamp="20201030 18:32:17.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022311542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022403653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:17.478" endtime="20201030 18:32:17.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022311542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022403653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:17.771" endtime="20201030 18:32:17.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.779" endtime="20201030 18:32:17.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.476" endtime="20201030 18:32:17.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.474" endtime="20201030 18:32:17.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:17.786" level="INFO">${RESULT} = [{'diff': 9.211099999999889e-05}, {'diff': 9.261200000000233e-05}, {'diff': 9.279099999999832e-05}, {'diff': 9.226399999999815e-05}, {'diff': 9.234699999999957e-05}, {'diff': 9.21390000000015e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:17.783" endtime="20201030 18:32:17.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:17.790" level="INFO">${ACCURACY} = {'diff': [9.211099999999889e-05, 9.261200000000233e-05, 9.279099999999832e-05, 9.226399999999815e-05, 9.234699999999957e-05, 9.21390000000015e-05, 9.230500000000086e-05, 9.212500000000193e-05, 9.27499...</msg>
<status status="PASS" starttime="20201030 18:32:17.787" endtime="20201030 18:32:17.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.795" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 18:32:17.794" endtime="20201030 18:32:17.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.797" level="INFO">VALUE: [9.211099999999889e-05, 9.261200000000233e-05, 9.279099999999832e-05, 9.226399999999815e-05, 9.234699999999957e-05, 9.21390000000015e-05, 9.230500000000086e-05, 9.212500000000193e-05, 9.274999999999908e-05, 9.222300000000239e-05, 9.218100000000021e-05, 9.286099999999964e-05, 9.277799999999822e-05, 9.212499999999846e-05, 9.301299999999943e-05, 9.244399999999708e-05, 9.270800000000037e-05, 9.218100000000021e-05, 9.213899999999803e-05, 9.286099999999964e-05, 9.291699999999792e-05, 9.263899999999853e-05, 9.307000000000065e-05, 9.272299999999942e-05, 9.245800000000012e-05, 9.281899999999746e-05, 9.261099999999939e-05, 9.21940000000003e-05, 9.244400000000055e-05, 9.218100000000021e-05, 9.288900000000225e-05, 9.277799999999822e-05, 9.243100000000046e-05, 9.211099999999889e-05, 9.299999999999933e-05, 9.236099999999914e-05, 9.258300000000025e-05, 9.298599999999976e-05, 9.216700000000064e-05, 9.270800000000037e-05, 9.229199999999729e-05, 9.243100000000046e-05, 9.284700000000007e-05, 9.26529999999981e-05, 9.286099999999964e-05, 9.222199999999944e-05, 9.259699999999982e-05, 9.30139999999989e-05, 9.258300000000025e-05, 9.304199999999804e-05]</msg>
<status status="PASS" starttime="20201030 18:32:17.796" endtime="20201030 18:32:17.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.791" endtime="20201030 18:32:17.798"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:17.802" endtime="20201030 18:32:17.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.801" endtime="20201030 18:32:17.822"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.799" endtime="20201030 18:32:17.822"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.439" endtime="20201030 18:32:17.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.439" endtime="20201030 18:32:17.823"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.831" endtime="20201030 18:32:17.851"></status>
</kw>
<msg timestamp="20201030 18:32:17.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:17.830" endtime="20201030 18:32:17.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:17.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:17.853" endtime="20201030 18:32:17.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.855" endtime="20201030 18:32:17.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.827" endtime="20201030 18:32:17.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.825" endtime="20201030 18:32:17.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:17.864" endtime="20201030 18:32:18.150"></status>
</kw>
<msg timestamp="20201030 18:32:18.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023264639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023358639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:17.863" endtime="20201030 18:32:18.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023264639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023358639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:18.154" endtime="20201030 18:32:18.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.163" endtime="20201030 18:32:18.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.860" endtime="20201030 18:32:18.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.859" endtime="20201030 18:32:18.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:18.169" level="INFO">${RESULT} = [{'diff': 9.400000000000033e-05}, {'diff': 9.33200000000009e-05}, {'diff': 9.400000000000033e-05}, {'diff': 9.333400000000047e-05}, {'diff': 9.318000000000173e-05}, {'diff': 9.365199999999962e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:18.166" endtime="20201030 18:32:18.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:18.174" level="INFO">${ACCURACY} = {'diff': [9.400000000000033e-05, 9.33200000000009e-05, 9.400000000000033e-05, 9.333400000000047e-05, 9.318000000000173e-05, 9.365199999999962e-05, 9.395799999999815e-05, 9.324999999999958e-05, 9.34590...</msg>
<status status="PASS" starttime="20201030 18:32:18.170" endtime="20201030 18:32:18.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.178" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 18:32:18.177" endtime="20201030 18:32:18.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.181" level="INFO">VALUE: [9.400000000000033e-05, 9.33200000000009e-05, 9.400000000000033e-05, 9.333400000000047e-05, 9.318000000000173e-05, 9.365199999999962e-05, 9.395799999999815e-05, 9.324999999999958e-05, 9.34590000000006e-05, 9.341700000000189e-05, 9.363899999999953e-05, 9.384700000000107e-05, 9.400000000000033e-05, 9.395799999999815e-05, 9.370800000000137e-05, 9.342999999999851e-05, 9.361100000000039e-05, 9.406899999999871e-05, 9.345800000000112e-05, 9.316700000000164e-05, 9.406900000000218e-05, 9.406999999999818e-05, 9.405599999999861e-05, 9.331999999999743e-05, 9.323600000000001e-05, 9.38880000000003e-05, 9.31940000000013e-05, 9.329099999999882e-05, 9.356900000000168e-05, 9.344400000000155e-05, 9.33200000000009e-05, 9.377799999999922e-05, 9.357000000000115e-05, 9.36529999999991e-05, 9.355600000000158e-05, 9.36529999999991e-05, 9.388899999999978e-05, 9.39859999999973e-05, 9.362499999999996e-05, 9.361100000000039e-05, 9.313899999999903e-05, 9.312500000000293e-05, 9.345800000000112e-05, 9.394499999999806e-05, 9.375000000000008e-05, 9.362499999999996e-05, 9.334700000000057e-05, 9.356899999999821e-05, 9.345800000000112e-05, 9.387500000000021e-05]</msg>
<status status="PASS" starttime="20201030 18:32:18.179" endtime="20201030 18:32:18.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.175" endtime="20201030 18:32:18.183"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:18.186" endtime="20201030 18:32:18.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.185" endtime="20201030 18:32:18.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.184" endtime="20201030 18:32:18.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.824" endtime="20201030 18:32:18.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:17.823" endtime="20201030 18:32:18.207"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.216" endtime="20201030 18:32:18.235"></status>
</kw>
<msg timestamp="20201030 18:32:18.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:18.214" endtime="20201030 18:32:18.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:18.237" endtime="20201030 18:32:18.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.239" endtime="20201030 18:32:18.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.212" endtime="20201030 18:32:18.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.210" endtime="20201030 18:32:18.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.249" endtime="20201030 18:32:18.537"></status>
</kw>
<msg timestamp="20201030 18:32:18.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022012417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022106514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:18.247" endtime="20201030 18:32:18.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022012417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022106514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:18.541" endtime="20201030 18:32:18.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.549" endtime="20201030 18:32:18.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.245" endtime="20201030 18:32:18.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.243" endtime="20201030 18:32:18.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:18.556" level="INFO">${RESULT} = [{'diff': 9.409700000000132e-05}, {'diff': 9.41529999999996e-05}, {'diff': 9.488900000000078e-05}, {'diff': 9.479100000000032e-05}, {'diff': 9.486099999999817e-05}, {'diff': 9.469399999999933e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:18.553" endtime="20201030 18:32:18.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:18.563" level="INFO">${ACCURACY} = {'diff': [9.409700000000132e-05, 9.41529999999996e-05, 9.488900000000078e-05, 9.479100000000032e-05, 9.486099999999817e-05, 9.469399999999933e-05, 9.458299999999878e-05, 9.500000000000133e-05, 9.41940...</msg>
<status status="PASS" starttime="20201030 18:32:18.557" endtime="20201030 18:32:18.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.568" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 18:32:18.567" endtime="20201030 18:32:18.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.570" level="INFO">VALUE: [9.409700000000132e-05, 9.41529999999996e-05, 9.488900000000078e-05, 9.479100000000032e-05, 9.486099999999817e-05, 9.469399999999933e-05, 9.458299999999878e-05, 9.500000000000133e-05, 9.41940000000023e-05, 9.475000000000108e-05, 9.473700000000099e-05, 9.412500000000046e-05, 9.444500000000203e-05, 9.463900000000053e-05, 9.498600000000176e-05, 9.493000000000001e-05, 9.442999999999951e-05, 9.499999999999786e-05, 9.459700000000182e-05, 9.491699999999992e-05, 9.433400000000147e-05, 9.476400000000065e-05, 9.494500000000253e-05, 9.424999999999711e-05, 9.506999999999918e-05, 9.431899999999896e-05, 9.43469999999981e-05, 9.44859999999978e-05, 9.480599999999936e-05, 9.507000000000265e-05, 9.474999999999761e-05, 9.504200000000004e-05, 9.4333999999998e-05, 9.491600000000044e-05, 9.477800000000022e-05, 9.417999999999926e-05, 9.470800000000237e-05, 9.498600000000176e-05, 9.462500000000096e-05, 9.445799999999865e-05, 9.505599999999961e-05, 9.494499999999906e-05, 9.488900000000078e-05, 9.413900000000003e-05, 9.462500000000096e-05, 9.454100000000007e-05, 9.447199999999822e-05, 9.456899999999921e-05, 9.473599999999804e-05, 9.483299999999903e-05]</msg>
<status status="PASS" starttime="20201030 18:32:18.569" endtime="20201030 18:32:18.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.564" endtime="20201030 18:32:18.571"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:18.575" endtime="20201030 18:32:18.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.574" endtime="20201030 18:32:18.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.572" endtime="20201030 18:32:18.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.208" endtime="20201030 18:32:18.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.207" endtime="20201030 18:32:18.596"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.605" endtime="20201030 18:32:18.624"></status>
</kw>
<msg timestamp="20201030 18:32:18.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:18.603" endtime="20201030 18:32:18.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:18.626" endtime="20201030 18:32:18.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.628" endtime="20201030 18:32:18.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.600" endtime="20201030 18:32:18.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.598" endtime="20201030 18:32:18.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.637" endtime="20201030 18:32:18.924"></status>
</kw>
<msg timestamp="20201030 18:32:18.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022305431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02240125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:18.636" endtime="20201030 18:32:18.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022305431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02240125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:18.929" endtime="20201030 18:32:18.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.937" endtime="20201030 18:32:18.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.633" endtime="20201030 18:32:18.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.631" endtime="20201030 18:32:18.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:18.944" level="INFO">${RESULT} = [{'diff': 9.581900000000046e-05}, {'diff': 9.579200000000079e-05}, {'diff': 9.588900000000178e-05}, {'diff': 9.540300000000085e-05}, {'diff': 9.576399999999818e-05}, {'diff': 9.58469999999996e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:18.940" endtime="20201030 18:32:18.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:18.948" level="INFO">${ACCURACY} = {'diff': [9.581900000000046e-05, 9.579200000000079e-05, 9.588900000000178e-05, 9.540300000000085e-05, 9.576399999999818e-05, 9.58469999999996e-05, 9.52079999999994e-05, 9.534700000000257e-05, 9.563900...</msg>
<status status="PASS" starttime="20201030 18:32:18.945" endtime="20201030 18:32:18.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.952" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 18:32:18.951" endtime="20201030 18:32:18.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:18.955" level="INFO">VALUE: [9.581900000000046e-05, 9.579200000000079e-05, 9.588900000000178e-05, 9.540300000000085e-05, 9.576399999999818e-05, 9.58469999999996e-05, 9.52079999999994e-05, 9.534700000000257e-05, 9.563900000000153e-05, 9.513900000000103e-05, 9.587499999999874e-05, 9.59859999999993e-05, 9.569499999999981e-05, 9.572199999999947e-05, 9.568100000000024e-05, 9.576299999999871e-05, 9.576300000000218e-05, 9.524999999999811e-05, 9.586100000000264e-05, 9.561099999999892e-05, 9.608300000000028e-05, 9.516700000000017e-05, 9.556999999999968e-05, 9.545799999999965e-05, 9.534799999999857e-05, 9.533299999999953e-05, 9.588899999999831e-05, 9.580600000000036e-05, 9.541600000000094e-05, 9.563900000000153e-05, 9.540299999999738e-05, 9.561099999999892e-05, 9.51530000000006e-05, 9.607000000000018e-05, 9.561099999999892e-05, 9.605599999999714e-05, 9.594500000000006e-05, 9.588899999999831e-05, 9.558299999999978e-05, 9.561099999999892e-05, 9.577800000000122e-05, 9.590300000000135e-05, 9.548600000000226e-05, 9.602800000000147e-05, 9.533400000000247e-05, 9.558299999999978e-05, 9.562499999999849e-05, 9.569400000000033e-05, 9.54859999999988e-05, 9.555500000000064e-05]</msg>
<status status="PASS" starttime="20201030 18:32:18.953" endtime="20201030 18:32:18.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.949" endtime="20201030 18:32:18.956"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:18.960" endtime="20201030 18:32:18.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.958" endtime="20201030 18:32:18.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.957" endtime="20201030 18:32:18.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.597" endtime="20201030 18:32:18.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.596" endtime="20201030 18:32:18.980"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:18.989" endtime="20201030 18:32:19.009"></status>
</kw>
<msg timestamp="20201030 18:32:19.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:18.988" endtime="20201030 18:32:19.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:19.011" endtime="20201030 18:32:19.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:19.013" endtime="20201030 18:32:19.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.985" endtime="20201030 18:32:19.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.983" endtime="20201030 18:32:19.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:19.022" endtime="20201030 18:32:19.308"></status>
</kw>
<msg timestamp="20201030 18:32:19.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022944389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023041139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:19.021" endtime="20201030 18:32:19.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022944389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023041139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:19.312" endtime="20201030 18:32:19.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:19.320" endtime="20201030 18:32:19.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.018" endtime="20201030 18:32:19.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.017" endtime="20201030 18:32:19.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:19.327" level="INFO">${RESULT} = [{'diff': 9.674999999999961e-05}, {'diff': 9.677800000000222e-05}, {'diff': 9.668100000000124e-05}, {'diff': 9.68470000000006e-05}, {'diff': 9.695800000000115e-05}, {'diff': 9.699999999999986e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:32:19.324" endtime="20201030 18:32:19.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:19.331" level="INFO">${ACCURACY} = {'diff': [9.674999999999961e-05, 9.677800000000222e-05, 9.668100000000124e-05, 9.68470000000006e-05, 9.695800000000115e-05, 9.699999999999986e-05, 9.62080000000004e-05, 9.687499999999974e-05, 9.626399...</msg>
<status status="PASS" starttime="20201030 18:32:19.328" endtime="20201030 18:32:19.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.336" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 18:32:19.335" endtime="20201030 18:32:19.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.338" level="INFO">VALUE: [9.674999999999961e-05, 9.677800000000222e-05, 9.668100000000124e-05, 9.68470000000006e-05, 9.695800000000115e-05, 9.699999999999986e-05, 9.62080000000004e-05, 9.687499999999974e-05, 9.626399999999868e-05, 9.645900000000013e-05, 9.683300000000103e-05, 9.644500000000056e-05, 9.701399999999943e-05, 9.663899999999906e-05, 9.647200000000022e-05, 9.645800000000065e-05, 9.618099999999727e-05, 9.687499999999974e-05, 9.69860000000003e-05, 9.7027999999999e-05, 9.622199999999997e-05, 9.613900000000203e-05, 9.697199999999725e-05, 9.663899999999906e-05, 9.688899999999931e-05, 9.688799999999984e-05, 9.69019999999994e-05, 9.677799999999875e-05, 9.690300000000235e-05, 9.693000000000201e-05, 9.615299999999813e-05, 9.615299999999813e-05, 9.701399999999943e-05, 9.676399999999918e-05, 9.629099999999835e-05, 9.694400000000158e-05, 9.630500000000139e-05, 9.662499999999949e-05, 9.7027999999999e-05, 9.686100000000017e-05, 9.686100000000017e-05, 9.658400000000025e-05, 9.634799999999957e-05, 9.688899999999931e-05, 9.618000000000126e-05, 9.629100000000182e-05, 9.61660000000017e-05, 9.672200000000047e-05, 9.708300000000128e-05, 9.7027999999999e-05]</msg>
<status status="PASS" starttime="20201030 18:32:19.337" endtime="20201030 18:32:19.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.332" endtime="20201030 18:32:19.340"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:19.344" endtime="20201030 18:32:19.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.342" endtime="20201030 18:32:19.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.341" endtime="20201030 18:32:19.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.981" endtime="20201030 18:32:19.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:18.981" endtime="20201030 18:32:19.365"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:19.373" endtime="20201030 18:32:19.393"></status>
</kw>
<msg timestamp="20201030 18:32:19.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:19.372" endtime="20201030 18:32:19.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:19.394" endtime="20201030 18:32:19.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:19.397" endtime="20201030 18:32:19.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.369" endtime="20201030 18:32:19.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.367" endtime="20201030 18:32:19.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:19.406" endtime="20201030 18:32:19.692"></status>
</kw>
<msg timestamp="20201030 18:32:19.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022127292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022225264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:19.404" endtime="20201030 18:32:19.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022127292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022225264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:19.696" endtime="20201030 18:32:19.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:19.705" endtime="20201030 18:32:19.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.402" endtime="20201030 18:32:19.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.400" endtime="20201030 18:32:19.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:19.711" level="INFO">${RESULT} = [{'diff': 9.797200000000172e-05}, {'diff': 9.776400000000018e-05}, {'diff': 9.729199999999882e-05}, {'diff': 9.769400000000233e-05}, {'diff': 9.713899999999956e-05}, {'diff': 9.740300000000285e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:19.708" endtime="20201030 18:32:19.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:19.716" level="INFO">${ACCURACY} = {'diff': [9.797200000000172e-05, 9.776400000000018e-05, 9.729199999999882e-05, 9.769400000000233e-05, 9.713899999999956e-05, 9.740300000000285e-05, 9.770900000000138e-05, 9.772300000000095e-05, 9.7915...</msg>
<status status="PASS" starttime="20201030 18:32:19.712" endtime="20201030 18:32:19.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.721" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 18:32:19.720" endtime="20201030 18:32:19.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.723" level="INFO">VALUE: [9.797200000000172e-05, 9.776400000000018e-05, 9.729199999999882e-05, 9.769400000000233e-05, 9.713899999999956e-05, 9.740300000000285e-05, 9.770900000000138e-05, 9.772300000000095e-05, 9.791599999999998e-05, 9.713899999999956e-05, 9.793099999999902e-05, 9.729199999999882e-05, 9.751399999999993e-05, 9.769399999999887e-05, 9.791699999999945e-05, 9.73470000000011e-05, 9.74730000000007e-05, 9.787500000000074e-05, 9.792999999999955e-05, 9.727699999999978e-05, 9.761100000000092e-05, 9.71799999999988e-05, 9.732000000000143e-05, 9.774999999999714e-05, 9.743100000000199e-05, 9.787500000000074e-05, 9.713899999999956e-05, 9.798700000000077e-05, 9.78470000000016e-05, 9.779099999999985e-05, 9.763900000000006e-05, 9.806900000000271e-05, 9.756900000000221e-05, 9.752800000000297e-05, 9.8028e-05, 9.78340000000015e-05, 9.748700000000027e-05, 9.743099999999852e-05, 9.759699999999788e-05, 9.713900000000303e-05, 9.765299999999963e-05, 9.801400000000043e-05, 9.79860000000013e-05, 9.733300000000153e-05, 9.805500000000314e-05, 9.725000000000011e-05, 9.74860000000008e-05, 9.763900000000006e-05, 9.742999999999905e-05, 9.711100000000042e-05]</msg>
<status status="PASS" starttime="20201030 18:32:19.722" endtime="20201030 18:32:19.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.717" endtime="20201030 18:32:19.725"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:19.728" endtime="20201030 18:32:19.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.727" endtime="20201030 18:32:19.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.726" endtime="20201030 18:32:19.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.366" endtime="20201030 18:32:19.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.365" endtime="20201030 18:32:19.749"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:19.758" endtime="20201030 18:32:19.778"></status>
</kw>
<msg timestamp="20201030 18:32:19.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:19.756" endtime="20201030 18:32:19.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:19.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:19.779" endtime="20201030 18:32:19.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:19.782" endtime="20201030 18:32:19.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.754" endtime="20201030 18:32:19.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.751" endtime="20201030 18:32:19.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:19.791" endtime="20201030 18:32:20.077"></status>
</kw>
<msg timestamp="20201030 18:32:20.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022698653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022797389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:19.789" endtime="20201030 18:32:20.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022698653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022797389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:20.081" endtime="20201030 18:32:20.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.090" endtime="20201030 18:32:20.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.787" endtime="20201030 18:32:20.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.785" endtime="20201030 18:32:20.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:20.096" level="INFO">${RESULT} = [{'diff': 9.873600000000204e-05}, {'diff': 9.819399999999937e-05}, {'diff': 9.905600000000014e-05}, {'diff': 9.862499999999802e-05}, {'diff': 9.890300000000088e-05}, {'diff': 9.898700000000177e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:32:20.093" endtime="20201030 18:32:20.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:20.100" level="INFO">${ACCURACY} = {'diff': [9.873600000000204e-05, 9.819399999999937e-05, 9.905600000000014e-05, 9.862499999999802e-05, 9.890300000000088e-05, 9.898700000000177e-05, 9.861100000000192e-05, 9.898599999999882e-05, 9.9055...</msg>
<status status="PASS" starttime="20201030 18:32:20.097" endtime="20201030 18:32:20.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.105" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 18:32:20.104" endtime="20201030 18:32:20.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.107" level="INFO">VALUE: [9.873600000000204e-05, 9.819399999999937e-05, 9.905600000000014e-05, 9.862499999999802e-05, 9.890300000000088e-05, 9.898700000000177e-05, 9.861100000000192e-05, 9.898599999999882e-05, 9.905500000000067e-05, 9.905600000000014e-05, 9.905600000000014e-05, 9.841699999999995e-05, 9.86670000000002e-05, 9.88340000000025e-05, 9.891700000000045e-05, 9.857000000000268e-05, 9.890199999999794e-05, 9.837500000000124e-05, 9.867999999999683e-05, 9.863899999999759e-05, 9.900000000000186e-05, 9.81669999999997e-05, 9.9028000000001e-05, 9.827800000000025e-05, 9.81669999999997e-05, 9.816600000000023e-05, 9.879100000000085e-05, 9.873599999999857e-05, 9.862499999999802e-05, 9.843099999999952e-05, 9.827800000000025e-05, 9.848599999999832e-05, 9.873599999999857e-05, 9.844500000000256e-05, 9.905500000000067e-05, 9.830499999999992e-05, 9.858300000000278e-05, 9.862499999999802e-05, 9.883299999999956e-05, 9.815300000000013e-05, 9.843099999999952e-05, 9.845899999999866e-05, 9.865300000000063e-05, 9.837500000000124e-05, 9.861100000000192e-05, 9.905500000000067e-05, 9.855500000000017e-05, 9.863899999999759e-05, 9.905500000000067e-05, 9.869399999999987e-05]</msg>
<status status="PASS" starttime="20201030 18:32:20.106" endtime="20201030 18:32:20.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.101" endtime="20201030 18:32:20.109"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:20.112" endtime="20201030 18:32:20.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.111" endtime="20201030 18:32:20.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.110" endtime="20201030 18:32:20.133"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.750" endtime="20201030 18:32:20.133"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:19.749" endtime="20201030 18:32:20.133"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.142" endtime="20201030 18:32:20.163"></status>
</kw>
<msg timestamp="20201030 18:32:20.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:20.140" endtime="20201030 18:32:20.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:20.165" endtime="20201030 18:32:20.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.167" endtime="20201030 18:32:20.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.138" endtime="20201030 18:32:20.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.136" endtime="20201030 18:32:20.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.176" endtime="20201030 18:32:20.462"></status>
</kw>
<msg timestamp="20201030 18:32:20.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023081306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023180417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:20.174" endtime="20201030 18:32:20.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023081306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023180417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:20.466" endtime="20201030 18:32:20.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.475" endtime="20201030 18:32:20.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.172" endtime="20201030 18:32:20.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.170" endtime="20201030 18:32:20.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:20.481" level="INFO">${RESULT} = [{'diff': 9.911099999999895e-05}, {'diff': 9.911199999999842e-05}, {'diff': 9.941700000000095e-05}, {'diff': 9.94999999999989e-05}, {'diff': 9.92219999999995e-05}, {'diff': 9.931900000000049e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:32:20.478" endtime="20201030 18:32:20.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:20.485" level="INFO">${ACCURACY} = {'diff': [9.911099999999895e-05, 9.911199999999842e-05, 9.941700000000095e-05, 9.94999999999989e-05, 9.92219999999995e-05, 9.931900000000049e-05, 9.9722e-05, 9.941700000000095e-05, 9.92219999999995e-0...</msg>
<status status="PASS" starttime="20201030 18:32:20.482" endtime="20201030 18:32:20.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.490" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 18:32:20.489" endtime="20201030 18:32:20.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.492" level="INFO">VALUE: [9.911099999999895e-05, 9.911199999999842e-05, 9.941700000000095e-05, 9.94999999999989e-05, 9.92219999999995e-05, 9.931900000000049e-05, 9.9722e-05, 9.941700000000095e-05, 9.92219999999995e-05, 9.923599999999907e-05, 9.931999999999996e-05, 9.994499999999712e-05, 9.94860000000028e-05, 9.994399999999765e-05, 9.94860000000028e-05, 9.948599999999932e-05, 9.96670000000012e-05, 9.913899999999809e-05, 9.943100000000052e-05, 9.9722e-05, 9.912500000000199e-05, 9.93060000000004e-05, 9.990199999999894e-05, 9.926299999999874e-05, 9.938899999999834e-05, 9.959699999999988e-05, 9.993000000000155e-05, 9.929199999999735e-05, 9.920799999999994e-05, 9.929200000000082e-05, 9.959799999999935e-05, 9.944500000000009e-05, 9.918100000000027e-05, 9.962500000000249e-05, 9.913899999999809e-05, 9.981900000000099e-05, 9.990300000000188e-05, 9.931900000000049e-05, 9.976400000000218e-05, 9.988899999999884e-05, 9.970899999999991e-05, 9.98479999999996e-05, 9.941699999999748e-05, 9.958300000000031e-05, 9.934699999999963e-05, 9.983300000000056e-05, 9.995800000000069e-05, 9.918100000000027e-05, 9.933399999999953e-05, 9.9722e-05]</msg>
<status status="PASS" starttime="20201030 18:32:20.491" endtime="20201030 18:32:20.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.486" endtime="20201030 18:32:20.499"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:20.503" endtime="20201030 18:32:20.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.501" endtime="20201030 18:32:20.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.500" endtime="20201030 18:32:20.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.134" endtime="20201030 18:32:20.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.134" endtime="20201030 18:32:20.524"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.532" endtime="20201030 18:32:20.553"></status>
</kw>
<msg timestamp="20201030 18:32:20.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:20.531" endtime="20201030 18:32:20.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:20.554" endtime="20201030 18:32:20.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.557" endtime="20201030 18:32:20.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.528" endtime="20201030 18:32:20.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.526" endtime="20201030 18:32:20.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.566" endtime="20201030 18:32:20.851"></status>
</kw>
<msg timestamp="20201030 18:32:20.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022386222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022486486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:20.565" endtime="20201030 18:32:20.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022386222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022486486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:20.856" endtime="20201030 18:32:20.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.864" endtime="20201030 18:32:20.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.562" endtime="20201030 18:32:20.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.560" endtime="20201030 18:32:20.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:20.870" level="INFO">${RESULT} = [{'diff': 0.00010026399999999921}, {'diff': 0.00010076399999999971}, {'diff': 0.0001008610000000007}, {'diff': 0.00010022299999999998}, {'diff': 0.00010019500000000084}, {'diff': 0.0001004309999999980...</msg>
<status status="PASS" starttime="20201030 18:32:20.867" endtime="20201030 18:32:20.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:20.875" level="INFO">${ACCURACY} = {'diff': [0.00010026399999999921, 0.00010076399999999971, 0.0001008610000000007, 0.00010022299999999998, 0.00010019500000000084, 0.00010043099999999805, 0.00010084700000000113, 0.00010051400000000293,...</msg>
<status status="PASS" starttime="20201030 18:32:20.871" endtime="20201030 18:32:20.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.879" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 18:32:20.878" endtime="20201030 18:32:20.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.882" level="INFO">VALUE: [0.00010026399999999921, 0.00010076399999999971, 0.0001008610000000007, 0.00010022299999999998, 0.00010019500000000084, 0.00010043099999999805, 0.00010084700000000113, 0.00010051400000000293, 0.00010102799999999953, 0.00010047200000000076, 0.00010073600000000058, 0.00010029200000000182, 0.00010044500000000109, 0.00010084799999999713, 0.00010016699999999823, 0.00010029099999999888, 0.00010098599999999736, 0.00010031899999999802, 0.00010026399999999921, 0.00010013899999999909, 0.00010109699999999791, 0.00010079100000000285, 0.00010069499999999787, 0.00010044400000000162, 0.00010048600000000033, 0.0001009159999999995, 0.00010045800000000119, 0.00010061100000000045, 0.00010013899999999909, 0.00010013899999999909, 0.00010088899999999984, 0.00010072199999999754, 0.00010102799999999953, 0.00010055600000000164, 0.00010019400000000137, 0.00010083299999999809, 0.00010108400000000128, 0.00010073600000000058, 0.00010022299999999998, 0.00010105599999999867, 0.00010019400000000137, 0.00010018100000000127, 0.00010072300000000048, 0.00010015300000000213, 0.00010038799999999987, 0.00010011099999999995, 0.00010099999999999693, 0.00010076399999999971, 0.00010075000000000014, 0.00010048600000000033]</msg>
<status status="PASS" starttime="20201030 18:32:20.880" endtime="20201030 18:32:20.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.876" endtime="20201030 18:32:20.883"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:20.887" endtime="20201030 18:32:20.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.885" endtime="20201030 18:32:20.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.884" endtime="20201030 18:32:20.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.525" endtime="20201030 18:32:20.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.524" endtime="20201030 18:32:20.907"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.916" endtime="20201030 18:32:20.936"></status>
</kw>
<msg timestamp="20201030 18:32:20.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:20.915" endtime="20201030 18:32:20.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:20.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:20.938" endtime="20201030 18:32:20.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.940" endtime="20201030 18:32:20.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.912" endtime="20201030 18:32:20.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.910" endtime="20201030 18:32:20.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:20.949" endtime="20201030 18:32:21.237"></status>
</kw>
<msg timestamp="20201030 18:32:21.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02218625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022287764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:20.948" endtime="20201030 18:32:21.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02218625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022287764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:21.241" endtime="20201030 18:32:21.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.249" endtime="20201030 18:32:21.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.945" endtime="20201030 18:32:21.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.943" endtime="20201030 18:32:21.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:21.256" level="INFO">${RESULT} = [{'diff': 0.00010151400000000046}, {'diff': 0.00010208299999999934}, {'diff': 0.0001013060000000024}, {'diff': 0.000101416}, {'diff': 0.00010193000000000008}, {'diff': 0.00010204099999999716}, {'diff'...</msg>
<status status="PASS" starttime="20201030 18:32:21.253" endtime="20201030 18:32:21.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:21.260" level="INFO">${ACCURACY} = {'diff': [0.00010151400000000046, 0.00010208299999999934, 0.0001013060000000024, 0.000101416, 0.00010193000000000008, 0.00010204099999999716, 0.00010115299999999966, 0.00010137500000000077, 0.00010183...</msg>
<status status="PASS" starttime="20201030 18:32:21.257" endtime="20201030 18:32:21.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.264" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 18:32:21.263" endtime="20201030 18:32:21.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.267" level="INFO">VALUE: [0.00010151400000000046, 0.00010208299999999934, 0.0001013060000000024, 0.000101416, 0.00010193000000000008, 0.00010204099999999716, 0.00010115299999999966, 0.00010137500000000077, 0.00010183300000000256, 0.00010168100000000277, 0.00010174999999999768, 0.00010198600000000183, 0.00010183399999999856, 0.00010159700000000188, 0.00010115200000000019, 0.00010159700000000188, 0.00010113900000000009, 0.00010194399999999965, 0.0001011809999999988, 0.0001018060000000029, 0.00010199999999999793, 0.00010186099999999823, 0.00010177800000000028, 0.00010165199999999722, 0.00010133299999999859, 0.0001015549999999997, 0.00010175000000000115, 0.00010202799999999707, 0.0001015000000000009, 0.00010151400000000046, 0.00010163900000000059, 0.00010118100000000227, 0.0001017359999999981, 0.00010177800000000028, 0.00010193000000000008, 0.00010131899999999902, 0.00010129099999999988, 0.00010161099999999798, 0.00010129200000000282, 0.00010155599999999917, 0.00010145799999999872, 0.00010165300000000016, 0.00010159700000000188, 0.00010197199999999879, 0.00010176400000000071, 0.00010120800000000194, 0.00010162500000000102, 0.00010187500000000127, 0.00010202799999999707, 0.00010148600000000133]</msg>
<status status="PASS" starttime="20201030 18:32:21.265" endtime="20201030 18:32:21.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.261" endtime="20201030 18:32:21.268"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:21.272" endtime="20201030 18:32:21.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.270" endtime="20201030 18:32:21.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.269" endtime="20201030 18:32:21.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.908" endtime="20201030 18:32:21.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:20.908" endtime="20201030 18:32:21.292"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.301" endtime="20201030 18:32:21.322"></status>
</kw>
<msg timestamp="20201030 18:32:21.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:21.299" endtime="20201030 18:32:21.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:21.323" endtime="20201030 18:32:21.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.326" endtime="20201030 18:32:21.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.297" endtime="20201030 18:32:21.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.295" endtime="20201030 18:32:21.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.335" endtime="20201030 18:32:21.622"></status>
</kw>
<msg timestamp="20201030 18:32:21.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023204681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023307458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:21.333" endtime="20201030 18:32:21.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023204681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023307458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:21.626" endtime="20201030 18:32:21.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.634" endtime="20201030 18:32:21.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.331" endtime="20201030 18:32:21.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.329" endtime="20201030 18:32:21.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:21.640" level="INFO">${RESULT} = [{'diff': 0.00010277699999999834}, {'diff': 0.00010256900000000027}, {'diff': 0.00010279200000000085}, {'diff': 0.00010279199999999739}, {'diff': 0.00010220799999999947}, {'diff': 0.000102931000000000...</msg>
<status status="PASS" starttime="20201030 18:32:21.637" endtime="20201030 18:32:21.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:21.644" level="INFO">${ACCURACY} = {'diff': [0.00010277699999999834, 0.00010256900000000027, 0.00010279200000000085, 0.00010279199999999739, 0.00010220799999999947, 0.00010293100000000055, 0.0001028749999999988, 0.00010305600000000067,...</msg>
<status status="PASS" starttime="20201030 18:32:21.641" endtime="20201030 18:32:21.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.649" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 18:32:21.648" endtime="20201030 18:32:21.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.652" level="INFO">VALUE: [0.00010277699999999834, 0.00010256900000000027, 0.00010279200000000085, 0.00010279199999999739, 0.00010220799999999947, 0.00010293100000000055, 0.0001028749999999988, 0.00010305600000000067, 0.00010269499999999987, 0.00010299999999999893, 0.0001028749999999988, 0.00010301400000000197, 0.00010263899999999812, 0.00010258299999999984, 0.0001028610000000027, 0.00010283300000000009, 0.00010268000000000083, 0.00010215300000000066, 0.00010259799999999888, 0.00010284700000000313, 0.000102722000000003, 0.00010220799999999947, 0.00010258299999999984, 0.00010283300000000009, 0.00010224999999999818, 0.0001022220000000025, 0.00010287500000000227, 0.0001028749999999988, 0.00010233300000000306, 0.00010215200000000119, 0.00010291599999999804, 0.00010302800000000154, 0.00010234699999999916, 0.00010272199999999954, 0.00010308399999999981, 0.00010230599999999992, 0.00010301400000000197, 0.00010215200000000119, 0.00010291599999999804, 0.00010286099999999923, 0.00010241599999999754, 0.00010274999999999868, 0.00010284699999999966, 0.00010272199999999954, 0.00010273600000000258, 0.00010257000000000321, 0.00010261099999999898, 0.0001028619999999987, 0.0001028749999999988, 0.00010218000000000033]</msg>
<status status="PASS" starttime="20201030 18:32:21.650" endtime="20201030 18:32:21.653"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.645" endtime="20201030 18:32:21.654"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:21.657" endtime="20201030 18:32:21.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.656" endtime="20201030 18:32:21.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.654" endtime="20201030 18:32:21.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.293" endtime="20201030 18:32:21.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.293" endtime="20201030 18:32:21.678"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.687" endtime="20201030 18:32:21.707"></status>
</kw>
<msg timestamp="20201030 18:32:21.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:21.685" endtime="20201030 18:32:21.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:21.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:21.708" endtime="20201030 18:32:21.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.711" endtime="20201030 18:32:21.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.682" endtime="20201030 18:32:21.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.680" endtime="20201030 18:32:21.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:21.720" endtime="20201030 18:32:22.004"></status>
</kw>
<msg timestamp="20201030 18:32:22.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022646611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022750264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:21.718" endtime="20201030 18:32:22.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022646611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022750264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:22.008" endtime="20201030 18:32:22.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.016" endtime="20201030 18:32:22.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.716" endtime="20201030 18:32:22.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.714" endtime="20201030 18:32:22.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:22.023" level="INFO">${RESULT} = [{'diff': 0.00010365299999999869}, {'diff': 0.00010369500000000087}, {'diff': 0.00010315300000000166}, {'diff': 0.00010405600000000167}, {'diff': 0.00010343000000000158}, {'diff': 0.000103679999999998...</msg>
<status status="PASS" starttime="20201030 18:32:22.020" endtime="20201030 18:32:22.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:22.030" level="INFO">${ACCURACY} = {'diff': [0.00010365299999999869, 0.00010369500000000087, 0.00010315300000000166, 0.00010405600000000167, 0.00010343000000000158, 0.00010367999999999836, 0.00010390299999999894, 0.00010318000000000133...</msg>
<status status="PASS" starttime="20201030 18:32:22.024" endtime="20201030 18:32:22.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.035" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 18:32:22.034" endtime="20201030 18:32:22.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.037" level="INFO">VALUE: [0.00010365299999999869, 0.00010369500000000087, 0.00010315300000000166, 0.00010405600000000167, 0.00010343000000000158, 0.00010367999999999836, 0.00010390299999999894, 0.00010318000000000133, 0.0001032359999999996, 0.00010347199999999682, 0.00010377800000000229, 0.00010374999999999968, 0.0001031940000000009, 0.00010401300000000002, 0.00010342999999999811, 0.00010356900000000127, 0.00010370800000000097, 0.00010334799999999963, 0.00010308300000000034, 0.00010337500000000277, 0.00010391700000000198, 0.00010391699999999851, 0.00010408300000000134, 0.00010330500000000145, 0.00010311099999999948, 0.00010361099999999998, 0.0001037360000000001, 0.00010344500000000062, 0.00010388899999999937, 0.0001040139999999995, 0.00010326399999999875, 0.00010318099999999733, 0.00010311099999999948, 0.00010312500000000252, 0.00010375000000000315, 0.00010330499999999798, 0.00010329199999999789, 0.00010406900000000177, 0.00010319500000000037, 0.00010402799999999907, 0.00010357000000000074, 0.00010316600000000176, 0.00010405499999999873, 0.000103416000000002, 0.00010377799999999882, 0.00010404199999999864, 0.0001037360000000001, 0.0001040139999999995, 0.00010338800000000287, 0.00010398600000000036]</msg>
<status status="PASS" starttime="20201030 18:32:22.036" endtime="20201030 18:32:22.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.031" endtime="20201030 18:32:22.038"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:22.042" endtime="20201030 18:32:22.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.041" endtime="20201030 18:32:22.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.039" endtime="20201030 18:32:22.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.679" endtime="20201030 18:32:22.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:21.678" endtime="20201030 18:32:22.063"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.071" endtime="20201030 18:32:22.092"></status>
</kw>
<msg timestamp="20201030 18:32:22.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:22.070" endtime="20201030 18:32:22.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:22.094" endtime="20201030 18:32:22.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.096" endtime="20201030 18:32:22.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.067" endtime="20201030 18:32:22.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.065" endtime="20201030 18:32:22.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.105" endtime="20201030 18:32:22.392"></status>
</kw>
<msg timestamp="20201030 18:32:22.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022065986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022170333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:22.104" endtime="20201030 18:32:22.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022065986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022170333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:22.396" endtime="20201030 18:32:22.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.404" endtime="20201030 18:32:22.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.101" endtime="20201030 18:32:22.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.099" endtime="20201030 18:32:22.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:22.411" level="INFO">${RESULT} = [{'diff': 0.00010434700000000116}, {'diff': 0.0001047079999999985}, {'diff': 0.00010458300000000184}, {'diff': 0.00010502800000000007}, {'diff': 0.00010459700000000141}, {'diff': 0.0001047229999999975...</msg>
<status status="PASS" starttime="20201030 18:32:22.408" endtime="20201030 18:32:22.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:22.415" level="INFO">${ACCURACY} = {'diff': [0.00010434700000000116, 0.0001047079999999985, 0.00010458300000000184, 0.00010502800000000007, 0.00010459700000000141, 0.00010472299999999754, 0.00010457000000000174, 0.00010500000000000093,...</msg>
<status status="PASS" starttime="20201030 18:32:22.412" endtime="20201030 18:32:22.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.419" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 18:32:22.418" endtime="20201030 18:32:22.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.422" level="INFO">VALUE: [0.00010434700000000116, 0.0001047079999999985, 0.00010458300000000184, 0.00010502800000000007, 0.00010459700000000141, 0.00010472299999999754, 0.00010457000000000174, 0.00010500000000000093, 0.00010479199999999939, 0.00010443000000000258, 0.00010462500000000055, 0.00010504199999999964, 0.00010472199999999807, 0.00010484699999999819, 0.00010491699999999951, 0.0001048750000000008, 0.00010416700000000223, 0.00010417999999999886, 0.00010498600000000136, 0.00010416599999999929, 0.0001047360000000011, 0.00010449999999999696, 0.00010463900000000012, 0.0001046810000000023, 0.00010445900000000119, 0.00010459800000000088, 0.00010463900000000012, 0.0001047360000000011, 0.00010502800000000007, 0.00010488900000000037, 0.00010462500000000055, 0.0001047079999999985, 0.00010443100000000205, 0.00010420900000000094, 0.00010431999999999803, 0.00010448700000000033, 0.00010480500000000295, 0.00010459699999999794, 0.00010481899999999905, 0.0001047079999999985, 0.0001050140000000005, 0.00010415299999999919, 0.00010447200000000129, 0.00010444500000000162, 0.00010458399999999785, 0.00010443099999999858, 0.00010431900000000202, 0.00010475000000000068, 0.00010454099999999966, 0.00010484699999999819]</msg>
<status status="PASS" starttime="20201030 18:32:22.420" endtime="20201030 18:32:22.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.416" endtime="20201030 18:32:22.423"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:22.427" endtime="20201030 18:32:22.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.425" endtime="20201030 18:32:22.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.424" endtime="20201030 18:32:22.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.064" endtime="20201030 18:32:22.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.063" endtime="20201030 18:32:22.447"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.456" endtime="20201030 18:32:22.477"></status>
</kw>
<msg timestamp="20201030 18:32:22.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:22.455" endtime="20201030 18:32:22.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:22.479" endtime="20201030 18:32:22.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.482" endtime="20201030 18:32:22.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.452" endtime="20201030 18:32:22.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.450" endtime="20201030 18:32:22.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.491" endtime="20201030 18:32:22.777"></status>
</kw>
<msg timestamp="20201030 18:32:22.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023112333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023217694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:22.490" endtime="20201030 18:32:22.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023112333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023217694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:22.781" endtime="20201030 18:32:22.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.790" endtime="20201030 18:32:22.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.487" endtime="20201030 18:32:22.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.485" endtime="20201030 18:32:22.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:22.796" level="INFO">${RESULT} = [{'diff': 0.00010536100000000173}, {'diff': 0.00010569399999999993}, {'diff': 0.0001060140000000015}, {'diff': 0.00010576399999999778}, {'diff': 0.00010534700000000216}, {'diff': 0.0001060280000000010...</msg>
<status status="PASS" starttime="20201030 18:32:22.793" endtime="20201030 18:32:22.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:22.800" level="INFO">${ACCURACY} = {'diff': [0.00010536100000000173, 0.00010569399999999993, 0.0001060140000000015, 0.00010576399999999778, 0.00010534700000000216, 0.00010602800000000107, 0.00010552800000000057, 0.00010586100000000223,...</msg>
<status status="PASS" starttime="20201030 18:32:22.797" endtime="20201030 18:32:22.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.805" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 18:32:22.804" endtime="20201030 18:32:22.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.807" level="INFO">VALUE: [0.00010536100000000173, 0.00010569399999999993, 0.0001060140000000015, 0.00010576399999999778, 0.00010534700000000216, 0.00010602800000000107, 0.00010552800000000057, 0.00010586100000000223, 0.00010513900000000062, 0.00010512500000000105, 0.00010576400000000125, 0.00010558299999999937, 0.00010559699999999894, 0.00010519500000000237, 0.00010568099999999983, 0.00010572200000000254, 0.00010550000000000143, 0.00010568099999999983, 0.00010545799999999925, 0.00010573599999999864, 0.00010599999999999846, 0.00010545799999999925, 0.00010530599999999946, 0.00010530599999999946, 0.00010557000000000274, 0.00010600000000000193, 0.00010586100000000223, 0.00010545899999999872, 0.00010516600000000029, 0.000105901999999998, 0.00010599999999999846, 0.00010523599999999814, 0.00010594400000000018, 0.00010516699999999976, 0.0001056949999999994, 0.00010608399999999935, 0.00010577699999999787, 0.00010519399999999943, 0.00010515200000000072, 0.00010598600000000236, 0.00010608299999999987, 0.00010598599999999889, 0.00010572199999999907, 0.00010529199999999989, 0.00010604200000000064, 0.00010584799999999867, 0.00010527699999999737, 0.00010594400000000018, 0.00010576399999999778, 0.00010516699999999976]</msg>
<status status="PASS" starttime="20201030 18:32:22.806" endtime="20201030 18:32:22.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.801" endtime="20201030 18:32:22.809"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:22.813" endtime="20201030 18:32:22.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.812" endtime="20201030 18:32:22.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.810" endtime="20201030 18:32:22.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.448" endtime="20201030 18:32:22.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.448" endtime="20201030 18:32:22.834"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.843" endtime="20201030 18:32:22.863"></status>
</kw>
<msg timestamp="20201030 18:32:22.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:22.841" endtime="20201030 18:32:22.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:22.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:22.865" endtime="20201030 18:32:22.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.867" endtime="20201030 18:32:22.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.838" endtime="20201030 18:32:22.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.836" endtime="20201030 18:32:22.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:22.876" endtime="20201030 18:32:23.161"></status>
</kw>
<msg timestamp="20201030 18:32:23.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022634681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022740944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:22.875" endtime="20201030 18:32:23.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022634681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022740944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:23.165" endtime="20201030 18:32:23.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.173" endtime="20201030 18:32:23.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.872" endtime="20201030 18:32:23.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.870" endtime="20201030 18:32:23.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:23.181" level="INFO">${RESULT} = [{'diff': 0.0001062629999999988}, {'diff': 0.0001070690000000013}, {'diff': 0.00010663900000000212}, {'diff': 0.00010662499999999908}, {'diff': 0.00010680599999999749}, {'diff': 0.00010613900000000162...</msg>
<status status="PASS" starttime="20201030 18:32:23.177" endtime="20201030 18:32:23.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:23.187" level="INFO">${ACCURACY} = {'diff': [0.0001062629999999988, 0.0001070690000000013, 0.00010663900000000212, 0.00010662499999999908, 0.00010680599999999749, 0.00010613900000000162, 0.00010629200000000089, 0.0001070279999999986, 0...</msg>
<status status="PASS" starttime="20201030 18:32:23.182" endtime="20201030 18:32:23.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.193" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 18:32:23.191" endtime="20201030 18:32:23.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.196" level="INFO">VALUE: [0.0001062629999999988, 0.0001070690000000013, 0.00010663900000000212, 0.00010662499999999908, 0.00010680599999999749, 0.00010613900000000162, 0.00010629200000000089, 0.0001070279999999986, 0.00010681999999999706, 0.0001061949999999999, 0.0001067080000000005, 0.00010640200000000197, 0.0001070690000000013, 0.00010645800000000025, 0.0001067499999999992, 0.00010629200000000089, 0.00010676399999999878, 0.00010688900000000237, 0.00010668100000000083, 0.00010613800000000215, 0.00010613900000000162, 0.00010615300000000119, 0.00010705499999999826, 0.00010695800000000075, 0.00010630600000000046, 0.00010677800000000182, 0.00010663900000000212, 0.0001063750000000023, 0.00010612499999999858, 0.00010626399999999828, 0.00010618000000000086, 0.00010629200000000089, 0.00010634699999999969, 0.00010707000000000078, 0.00010645899999999972, 0.00010647299999999929, 0.00010654199999999767, 0.0001070690000000013, 0.000106208, 0.000106208, 0.00010630499999999751, 0.00010697299999999979, 0.00010613899999999815, 0.000106208, 0.00010677800000000182, 0.00010707000000000078, 0.00010645900000000319, 0.00010655499999999776, 0.00010698599999999989, 0.0001067499999999992]</msg>
<status status="PASS" starttime="20201030 18:32:23.194" endtime="20201030 18:32:23.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.188" endtime="20201030 18:32:23.197"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:23.201" endtime="20201030 18:32:23.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.199" endtime="20201030 18:32:23.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.198" endtime="20201030 18:32:23.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.835" endtime="20201030 18:32:23.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:22.834" endtime="20201030 18:32:23.222"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.231" endtime="20201030 18:32:23.251"></status>
</kw>
<msg timestamp="20201030 18:32:23.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:23.229" endtime="20201030 18:32:23.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:23.253" endtime="20201030 18:32:23.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.255" endtime="20201030 18:32:23.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.227" endtime="20201030 18:32:23.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.225" endtime="20201030 18:32:23.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.264" endtime="20201030 18:32:23.552"></status>
</kw>
<msg timestamp="20201030 18:32:23.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0225105, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022618139, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:32:23.263" endtime="20201030 18:32:23.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0225105, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022618139, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:32:23.556" endtime="20201030 18:32:23.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.564" endtime="20201030 18:32:23.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.260" endtime="20201030 18:32:23.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.258" endtime="20201030 18:32:23.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:23.571" level="INFO">${RESULT} = [{'diff': 0.00010763899999999965}, {'diff': 0.00010719400000000143}, {'diff': 0.0001080699999999983}, {'diff': 0.00010733399999999713}, {'diff': 0.00010720900000000047}, {'diff': 0.0001073470000000006...</msg>
<status status="PASS" starttime="20201030 18:32:23.567" endtime="20201030 18:32:23.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:23.575" level="INFO">${ACCURACY} = {'diff': [0.00010763899999999965, 0.00010719400000000143, 0.0001080699999999983, 0.00010733399999999713, 0.00010720900000000047, 0.00010734700000000069, 0.00010759700000000094, 0.00010718000000000186,...</msg>
<status status="PASS" starttime="20201030 18:32:23.572" endtime="20201030 18:32:23.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.579" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 18:32:23.578" endtime="20201030 18:32:23.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.581" level="INFO">VALUE: [0.00010763899999999965, 0.00010719400000000143, 0.0001080699999999983, 0.00010733399999999713, 0.00010720900000000047, 0.00010734700000000069, 0.00010759700000000094, 0.00010718000000000186, 0.00010784700000000119, 0.00010804199999999917, 0.00010723600000000014, 0.00010800000000000046, 0.00010787500000000033, 0.00010745899999999725, 0.00010718099999999786, 0.00010773600000000064, 0.00010759700000000094, 0.00010766699999999879, 0.00010730600000000146, 0.00010800000000000046, 0.00010768099999999836, 0.00010787500000000033, 0.00010784800000000067, 0.00010761199999999999, 0.00010759699999999747, 0.0001073889999999994, 0.00010790300000000294, 0.00010713899999999915, 0.00010769499999999793, 0.00010780599999999849, 0.00010762500000000008, 0.00010762500000000008, 0.00010791599999999957, 0.00010715199999999925, 0.00010772200000000107, 0.00010805500000000273, 0.00010804199999999917, 0.00010749999999999996, 0.00010733399999999713, 0.0001078889999999999, 0.00010804199999999917, 0.00010722300000000004, 0.00010730499999999851, 0.00010759699999999747, 0.00010759700000000094, 0.00010741599999999907, 0.00010754200000000214, 0.00010791700000000251, 0.00010747200000000082, 0.0001080560000000022]</msg>
<status status="PASS" starttime="20201030 18:32:23.580" endtime="20201030 18:32:23.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.575" endtime="20201030 18:32:23.583"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:23.586" endtime="20201030 18:32:23.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.585" endtime="20201030 18:32:23.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.584" endtime="20201030 18:32:23.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.223" endtime="20201030 18:32:23.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.223" endtime="20201030 18:32:23.607"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.616" endtime="20201030 18:32:23.637"></status>
</kw>
<msg timestamp="20201030 18:32:23.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:23.614" endtime="20201030 18:32:23.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:23.638" endtime="20201030 18:32:23.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.641" endtime="20201030 18:32:23.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.612" endtime="20201030 18:32:23.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.610" endtime="20201030 18:32:23.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.650" endtime="20201030 18:32:23.960"></status>
</kw>
<msg timestamp="20201030 18:32:23.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023064125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023173264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:23.648" endtime="20201030 18:32:23.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023064125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023173264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:23.965" endtime="20201030 18:32:23.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:23.973" endtime="20201030 18:32:23.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.646" endtime="20201030 18:32:23.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.644" endtime="20201030 18:32:23.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:23.980" level="INFO">${RESULT} = [{'diff': 0.00010913899999999768}, {'diff': 0.00010886100000000176}, {'diff': 0.00010877800000000035}, {'diff': 0.00010850000000000096}, {'diff': 0.00010834700000000169}, {'diff': 0.000108805999999999...</msg>
<status status="PASS" starttime="20201030 18:32:23.977" endtime="20201030 18:32:23.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:23.984" level="INFO">${ACCURACY} = {'diff': [0.00010913899999999768, 0.00010886100000000176, 0.00010877800000000035, 0.00010850000000000096, 0.00010834700000000169, 0.00010880599999999949, 0.00010901400000000103, 0.00010829200000000289...</msg>
<status status="PASS" starttime="20201030 18:32:23.981" endtime="20201030 18:32:23.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.989" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 18:32:23.988" endtime="20201030 18:32:23.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:23.991" level="INFO">VALUE: [0.00010913899999999768, 0.00010886100000000176, 0.00010877800000000035, 0.00010850000000000096, 0.00010834700000000169, 0.00010880599999999949, 0.00010901400000000103, 0.00010829200000000289, 0.00010883299999999915, 0.0001085829999999989, 0.00010883299999999915, 0.0001082219999999981, 0.0001087219999999986, 0.00010899999999999799, 0.00010813900000000015, 0.00010875000000000121, 0.00010894499999999918, 0.00010877700000000087, 0.00010869400000000293, 0.00010872200000000207, 0.00010836199999999727, 0.00010863900000000065, 0.00010867999999999989, 0.00010890300000000047, 0.00010811100000000101, 0.00010904099999999722, 0.00010905599999999974, 0.0001087769999999974, 0.00010879100000000044, 0.00010904200000000017, 0.00010901400000000103, 0.00010827799999999985, 0.00010843099999999911, 0.0001090699999999993, 0.00010875000000000121, 0.00010820900000000147, 0.00010883300000000262, 0.00010861100000000151, 0.000108902999999997, 0.00010913900000000115, 0.00010833399999999813, 0.00010845900000000172, 0.00010898599999999842, 0.00010822300000000104, 0.00010859699999999847, 0.000108208000000002, 0.00010859699999999847, 0.00010905500000000026, 0.00010906899999999983, 0.00010879199999999992]</msg>
<status status="PASS" starttime="20201030 18:32:23.990" endtime="20201030 18:32:23.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.985" endtime="20201030 18:32:23.993"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:23.997" endtime="20201030 18:32:24.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.996" endtime="20201030 18:32:24.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.994" endtime="20201030 18:32:24.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.608" endtime="20201030 18:32:24.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:23.607" endtime="20201030 18:32:24.018"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.027" endtime="20201030 18:32:24.047"></status>
</kw>
<msg timestamp="20201030 18:32:24.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:24.025" endtime="20201030 18:32:24.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:24.049" endtime="20201030 18:32:24.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.052" endtime="20201030 18:32:24.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.023" endtime="20201030 18:32:24.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.020" endtime="20201030 18:32:24.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.061" endtime="20201030 18:32:24.348"></status>
</kw>
<msg timestamp="20201030 18:32:24.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022700986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022810458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:24.059" endtime="20201030 18:32:24.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022700986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022810458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:24.352" endtime="20201030 18:32:24.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.360" endtime="20201030 18:32:24.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.057" endtime="20201030 18:32:24.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.055" endtime="20201030 18:32:24.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:24.368" level="INFO">${RESULT} = [{'diff': 0.00010947199999999935}, {'diff': 0.00010990300000000147}, {'diff': 0.00010915300000000072}, {'diff': 0.00010915300000000072}, {'diff': 0.00010977800000000135}, {'diff': 0.000109610999999999...</msg>
<status status="PASS" starttime="20201030 18:32:24.365" endtime="20201030 18:32:24.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:24.373" level="INFO">${ACCURACY} = {'diff': [0.00010947199999999935, 0.00010990300000000147, 0.00010915300000000072, 0.00010915300000000072, 0.00010977800000000135, 0.00010961099999999904, 0.00010979200000000092, 0.00010943100000000011...</msg>
<status status="PASS" starttime="20201030 18:32:24.369" endtime="20201030 18:32:24.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.378" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 18:32:24.377" endtime="20201030 18:32:24.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.380" level="INFO">VALUE: [0.00010947199999999935, 0.00010990300000000147, 0.00010915300000000072, 0.00010915300000000072, 0.00010977800000000135, 0.00010961099999999904, 0.00010979200000000092, 0.00010943100000000011, 0.00011004099999999822, 0.0001097219999999996, 0.00010937499999999836, 0.00010944400000000021, 0.00010930599999999999, 0.00010927800000000085, 0.00010913900000000115, 0.0001098479999999992, 0.00010970800000000003, 0.00010967999999999742, 0.00010995800000000028, 0.00010915300000000072, 0.00010984699999999972, 0.00010997199999999985, 0.00010915300000000072, 0.00011005599999999727, 0.00010990300000000147, 0.0001097769999999984, 0.00010983300000000015, 0.00010918000000000039, 0.00010948599999999892, 0.00010919399999999996, 0.0001095829999999999, 0.00010919499999999943, 0.0001100700000000003, 0.00011001400000000203, 0.00010912500000000158, 0.00010913799999999821, 0.00010959699999999947, 0.00010983300000000015, 0.00010948600000000239, 0.00010988899999999843, 0.00010918099999999986, 0.00010969499999999993, 0.00011005600000000074, 0.00010963900000000165, 0.00011001300000000255, 0.00011004099999999822, 0.00010993000000000114, 0.00010976400000000178, 0.00010944400000000021, 0.00010962499999999861]</msg>
<status status="PASS" starttime="20201030 18:32:24.379" endtime="20201030 18:32:24.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.374" endtime="20201030 18:32:24.382"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:24.385" endtime="20201030 18:32:24.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.384" endtime="20201030 18:32:24.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.383" endtime="20201030 18:32:24.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.019" endtime="20201030 18:32:24.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.018" endtime="20201030 18:32:24.406"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.415" endtime="20201030 18:32:24.435"></status>
</kw>
<msg timestamp="20201030 18:32:24.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:24.414" endtime="20201030 18:32:24.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:24.437" endtime="20201030 18:32:24.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.439" endtime="20201030 18:32:24.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.411" endtime="20201030 18:32:24.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.409" endtime="20201030 18:32:24.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.449" endtime="20201030 18:32:24.736"></status>
</kw>
<msg timestamp="20201030 18:32:24.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022558028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022668208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:24.447" endtime="20201030 18:32:24.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022558028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022668208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:24.740" endtime="20201030 18:32:24.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.749" endtime="20201030 18:32:24.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.445" endtime="20201030 18:32:24.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.443" endtime="20201030 18:32:24.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:24.755" level="INFO">${RESULT} = [{'diff': 0.00011017999999999792}, {'diff': 0.00011092999999999867}, {'diff': 0.000110902999999999}, {'diff': 0.00011033400000000013}, {'diff': 0.00011102799999999913}, {'diff': 0.00011059700000000047...</msg>
<status status="PASS" starttime="20201030 18:32:24.752" endtime="20201030 18:32:24.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:24.760" level="INFO">${ACCURACY} = {'diff': [0.00011017999999999792, 0.00011092999999999867, 0.000110902999999999, 0.00011033400000000013, 0.00011102799999999913, 0.00011059700000000047, 0.00011102799999999913, 0.00011019500000000043, ...</msg>
<status status="PASS" starttime="20201030 18:32:24.756" endtime="20201030 18:32:24.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.765" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 18:32:24.764" endtime="20201030 18:32:24.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.768" level="INFO">VALUE: [0.00011017999999999792, 0.00011092999999999867, 0.000110902999999999, 0.00011033400000000013, 0.00011102799999999913, 0.00011059700000000047, 0.00011102799999999913, 0.00011019500000000043, 0.00011029099999999847, 0.00011048599999999992, 0.000110902999999999, 0.00011056900000000133, 0.00011033299999999718, 0.00011016699999999782, 0.00011034700000000022, 0.00011098600000000042, 0.00011015199999999878, 0.00011106899999999836, 0.00011084700000000072, 0.0001110280000000026, 0.00011034700000000022, 0.000110902999999999, 0.00011070800000000103, 0.00011019500000000043, 0.00011022299999999957, 0.00011048599999999992, 0.00011113899999999968, 0.00011104099999999922, 0.00011020800000000053, 0.00011024999999999924, 0.00011074999999999974, 0.00011047200000000035, 0.00011093099999999814, 0.00011044500000000068, 0.00011027800000000185, 0.00011088799999999996, 0.00011011099999999954, 0.00011012499999999911, 0.00011099999999999999, 0.00011084700000000072, 0.0001107220000000006, 0.00011019500000000043, 0.00011102799999999913, 0.00011029200000000142, 0.00011056899999999786, 0.00011062499999999961, 0.00011095800000000128, 0.00011045800000000078, 0.00011074999999999974, 0.00011076400000000278]</msg>
<status status="PASS" starttime="20201030 18:32:24.766" endtime="20201030 18:32:24.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.760" endtime="20201030 18:32:24.769"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:24.773" endtime="20201030 18:32:24.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.771" endtime="20201030 18:32:24.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.770" endtime="20201030 18:32:24.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.407" endtime="20201030 18:32:24.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.407" endtime="20201030 18:32:24.794"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.803" endtime="20201030 18:32:24.824"></status>
</kw>
<msg timestamp="20201030 18:32:24.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:24.801" endtime="20201030 18:32:24.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:24.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:24.825" endtime="20201030 18:32:24.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.828" endtime="20201030 18:32:24.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.798" endtime="20201030 18:32:24.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.796" endtime="20201030 18:32:24.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:24.837" endtime="20201030 18:32:25.123"></status>
</kw>
<msg timestamp="20201030 18:32:25.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023597181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023709083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:24.836" endtime="20201030 18:32:25.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023597181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023709083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:25.127" endtime="20201030 18:32:25.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.136" endtime="20201030 18:32:25.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.833" endtime="20201030 18:32:25.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.831" endtime="20201030 18:32:25.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:25.142" level="INFO">${RESULT} = [{'diff': 0.00011190200000000053}, {'diff': 0.00011133400000000113}, {'diff': 0.00011133299999999818}, {'diff': 0.00011197199999999838}, {'diff': 0.00011143100000000211}, {'diff': 0.000111903}, {'diff...</msg>
<status status="PASS" starttime="20201030 18:32:25.139" endtime="20201030 18:32:25.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:25.146" level="INFO">${ACCURACY} = {'diff': [0.00011190200000000053, 0.00011133400000000113, 0.00011133299999999818, 0.00011197199999999838, 0.00011143100000000211, 0.000111903, 0.00011169500000000193, 0.00011140200000000003, 0.0001112...</msg>
<status status="PASS" starttime="20201030 18:32:25.143" endtime="20201030 18:32:25.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.151" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 18:32:25.150" endtime="20201030 18:32:25.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.154" level="INFO">VALUE: [0.00011190200000000053, 0.00011133400000000113, 0.00011133299999999818, 0.00011197199999999838, 0.00011143100000000211, 0.000111903, 0.00011169500000000193, 0.00011140200000000003, 0.00011122199999999763, 0.00011187499999999739, 0.00011145799999999831, 0.00011130599999999852, 0.00011193099999999914, 0.00011163900000000018, 0.00011134700000000122, 0.00011177799999999988, 0.00011190200000000053, 0.00011142999999999917, 0.00011175000000000074, 0.0001115830000000019, 0.00011129199999999895, 0.00011177799999999988, 0.00011198600000000142, 0.00011137500000000036, 0.00011201400000000056, 0.00011202800000000013, 0.00011126399999999981, 0.00011142999999999917, 0.00011162500000000061, 0.00011142999999999917, 0.00011191699999999957, 0.00011183299999999868, 0.00011165299999999975, 0.00011155599999999877, 0.00011120799999999806, 0.0001114159999999996, 0.00011162500000000061, 0.0001114159999999996, 0.00011177799999999988, 0.00011191700000000304, 0.00011184699999999825, 0.0001120419999999997, 0.00011162499999999714, 0.0001112220000000011, 0.00011115199999999978, 0.00011122199999999763, 0.00011127799999999938, 0.00011187500000000086, 0.00011131999999999809, 0.00011163900000000018]</msg>
<status status="PASS" starttime="20201030 18:32:25.152" endtime="20201030 18:32:25.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.147" endtime="20201030 18:32:25.156"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:25.160" endtime="20201030 18:32:25.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.158" endtime="20201030 18:32:25.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.157" endtime="20201030 18:32:25.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.795" endtime="20201030 18:32:25.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:24.794" endtime="20201030 18:32:25.181"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.190" endtime="20201030 18:32:25.211"></status>
</kw>
<msg timestamp="20201030 18:32:25.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:25.188" endtime="20201030 18:32:25.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:25.213" endtime="20201030 18:32:25.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.215" endtime="20201030 18:32:25.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.185" endtime="20201030 18:32:25.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.183" endtime="20201030 18:32:25.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.225" endtime="20201030 18:32:25.511"></status>
</kw>
<msg timestamp="20201030 18:32:25.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023096542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023209458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:25.223" endtime="20201030 18:32:25.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023096542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023209458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:25.515" endtime="20201030 18:32:25.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.524" endtime="20201030 18:32:25.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.220" endtime="20201030 18:32:25.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.218" endtime="20201030 18:32:25.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:25.531" level="INFO">${RESULT} = [{'diff': 0.00011291599999999763}, {'diff': 0.00011297199999999938}, {'diff': 0.00011233299999999918}, {'diff': 0.00011301399999999809}, {'diff': 0.00011299999999999852}, {'diff': 0.000112750000000001...</msg>
<status status="PASS" starttime="20201030 18:32:25.528" endtime="20201030 18:32:25.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:25.539" level="INFO">${ACCURACY} = {'diff': [0.00011291599999999763, 0.00011297199999999938, 0.00011233299999999918, 0.00011301399999999809, 0.00011299999999999852, 0.00011275000000000174, 0.00011268099999999989, 0.00011213900000000068...</msg>
<status status="PASS" starttime="20201030 18:32:25.532" endtime="20201030 18:32:25.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.543" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 18:32:25.542" endtime="20201030 18:32:25.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.546" level="INFO">VALUE: [0.00011291599999999763, 0.00011297199999999938, 0.00011233299999999918, 0.00011301399999999809, 0.00011299999999999852, 0.00011275000000000174, 0.00011268099999999989, 0.00011213900000000068, 0.00011229100000000047, 0.00011247199999999888, 0.00011283299999999968, 0.00011301400000000156, 0.00011286100000000229, 0.00011284699999999925, 0.00011245899999999878, 0.00011218099999999939, 0.00011215300000000025, 0.0001127770000000014, 0.00011275000000000174, 0.00011301400000000156, 0.0001127359999999987, 0.00011243099999999964, 0.00011256999999999934, 0.00011301400000000156, 0.00011281900000000011, 0.0001123480000000017, 0.0001125830000000029, 0.00011283299999999968, 0.00011301400000000156, 0.00011298600000000242, 0.00011233300000000265, 0.00011301399999999809, 0.00011284799999999873, 0.00011216699999999982, 0.00011302800000000113, 0.00011283299999999968, 0.00011308299999999993, 0.00011261099999999857, 0.00011211099999999807, 0.00011216700000000329, 0.00011216699999999982, 0.00011251400000000106, 0.00011272300000000207, 0.00011304100000000122, 0.0001129160000000011, 0.00011288899999999796, 0.00011295899999999928, 0.00011245799999999931, 0.0001127770000000014, 0.00011213900000000068]</msg>
<status status="PASS" starttime="20201030 18:32:25.544" endtime="20201030 18:32:25.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.539" endtime="20201030 18:32:25.551"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:25.555" endtime="20201030 18:32:25.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.553" endtime="20201030 18:32:25.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.552" endtime="20201030 18:32:25.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.182" endtime="20201030 18:32:25.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.181" endtime="20201030 18:32:25.576"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.585" endtime="20201030 18:32:25.604"></status>
</kw>
<msg timestamp="20201030 18:32:25.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:25.583" endtime="20201030 18:32:25.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:25.606" endtime="20201030 18:32:25.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.608" endtime="20201030 18:32:25.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.580" endtime="20201030 18:32:25.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.578" endtime="20201030 18:32:25.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.618" endtime="20201030 18:32:25.905"></status>
</kw>
<msg timestamp="20201030 18:32:25.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02261275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022726403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:25.616" endtime="20201030 18:32:25.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02261275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022726403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:32:25.909" endtime="20201030 18:32:25.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.917" endtime="20201030 18:32:25.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.614" endtime="20201030 18:32:25.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.612" endtime="20201030 18:32:25.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:25.924" level="INFO">${RESULT} = [{'diff': 0.00011365299999999828}, {'diff': 0.00011381899999999764}, {'diff': 0.00011380500000000154}, {'diff': 0.00011334699999999975}, {'diff': 0.00011348599999999945}, {'diff': 0.000113360999999999...</msg>
<status status="PASS" starttime="20201030 18:32:25.921" endtime="20201030 18:32:25.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:25.928" level="INFO">${ACCURACY} = {'diff': [0.00011365299999999828, 0.00011381899999999764, 0.00011380500000000154, 0.00011334699999999975, 0.00011348599999999945, 0.00011336099999999932, 0.00011390199999999906, 0.00011397200000000038...</msg>
<status status="PASS" starttime="20201030 18:32:25.925" endtime="20201030 18:32:25.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.933" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 18:32:25.932" endtime="20201030 18:32:25.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.935" level="INFO">VALUE: [0.00011365299999999828, 0.00011381899999999764, 0.00011380500000000154, 0.00011334699999999975, 0.00011348599999999945, 0.00011336099999999932, 0.00011390199999999906, 0.00011397200000000038, 0.00011331900000000061, 0.00011383300000000068, 0.00011318100000000039, 0.00011316700000000082, 0.00011370900000000003, 0.0001137229999999996, 0.0001139160000000021, 0.00011366599999999838, 0.00011331900000000061, 0.00011343000000000117, 0.00011374999999999927, 0.00011373600000000317, 0.0001140420000000017, 0.00011388900000000243, 0.00011349999999999902, 0.00011361100000000304, 0.00011408299999999746, 0.00011361099999999957, 0.00011394400000000124, 0.0001138749999999994, 0.0001137229999999996, 0.00011376399999999884, 0.00011386099999999982, 0.00011347299999999935, 0.00011404099999999875, 0.00011404099999999875, 0.00011347199999999988, 0.00011362499999999914, 0.00011388899999999896, 0.00011365300000000175, 0.00011393099999999767, 0.00011398599999999995, 0.00011363899999999871, 0.00011320800000000006, 0.00011324999999999877, 0.00011401399999999909, 0.00011347199999999988, 0.000113597, 0.00011343100000000064, 0.00011379199999999798, 0.00011361200000000252, 0.00011331900000000061]</msg>
<status status="PASS" starttime="20201030 18:32:25.934" endtime="20201030 18:32:25.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.929" endtime="20201030 18:32:25.937"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:25.940" endtime="20201030 18:32:25.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.939" endtime="20201030 18:32:25.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.938" endtime="20201030 18:32:25.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.576" endtime="20201030 18:32:25.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.576" endtime="20201030 18:32:25.961"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.971" endtime="20201030 18:32:25.993"></status>
</kw>
<msg timestamp="20201030 18:32:25.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:25.970" endtime="20201030 18:32:25.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:25.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:25.994" endtime="20201030 18:32:25.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:25.997" endtime="20201030 18:32:25.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.967" endtime="20201030 18:32:25.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.965" endtime="20201030 18:32:25.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.006" endtime="20201030 18:32:26.292"></status>
</kw>
<msg timestamp="20201030 18:32:26.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024528056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024642667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:26.005" endtime="20201030 18:32:26.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024528056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024642667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:26.296" endtime="20201030 18:32:26.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.304" endtime="20201030 18:32:26.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.002" endtime="20201030 18:32:26.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.000" endtime="20201030 18:32:26.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:26.311" level="INFO">${RESULT} = [{'diff': 0.00011461100000000057}, {'diff': 0.00011443100000000164}, {'diff': 0.00011472200000000113}, {'diff': 0.00011413899999999921}, {'diff': 0.000114597000000001}, {'diff': 0.00011484699999999778...</msg>
<status status="PASS" starttime="20201030 18:32:26.308" endtime="20201030 18:32:26.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:26.315" level="INFO">${ACCURACY} = {'diff': [0.00011461100000000057, 0.00011443100000000164, 0.00011472200000000113, 0.00011413899999999921, 0.000114597000000001, 0.00011484699999999778, 0.00011444399999999827, 0.00011455600000000177, ...</msg>
<status status="PASS" starttime="20201030 18:32:26.312" endtime="20201030 18:32:26.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.320" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 18:32:26.319" endtime="20201030 18:32:26.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.322" level="INFO">VALUE: [0.00011461100000000057, 0.00011443100000000164, 0.00011472200000000113, 0.00011413899999999921, 0.000114597000000001, 0.00011484699999999778, 0.00011444399999999827, 0.00011455600000000177, 0.00011412499999999964, 0.00011461100000000057, 0.00011488800000000049, 0.00011500000000000052, 0.00011470799999999809, 0.00011463899999999971, 0.00011429199999999848, 0.00011432000000000109, 0.000114597000000001, 0.00011457000000000134, 0.00011476399999999984, 0.00011498600000000095, 0.0001145420000000022, 0.00011502799999999966, 0.00011433299999999771, 0.00011462500000000014, 0.00011429200000000195, 0.00011481899999999864, 0.00011468099999999842, 0.00011482000000000159, 0.00011490200000000006, 0.0001149299999999992, 0.0001142360000000002, 0.00011444400000000174, 0.00011465299999999928, 0.00011448599999999698, 0.00011443099999999817, 0.00011412499999999964, 0.00011418000000000192, 0.000114290999999999, 0.00011501400000000009, 0.00011501400000000009, 0.00011413900000000268, 0.0001148750000000004, 0.00011493099999999867, 0.00011498700000000042, 0.00011498600000000095, 0.00011506900000000236, 0.00011413899999999921, 0.00011413899999999921, 0.00011438899999999946, 0.00011447200000000088]</msg>
<status status="PASS" starttime="20201030 18:32:26.321" endtime="20201030 18:32:26.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.316" endtime="20201030 18:32:26.324"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:26.328" endtime="20201030 18:32:26.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.327" endtime="20201030 18:32:26.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.325" endtime="20201030 18:32:26.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.962" endtime="20201030 18:32:26.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:25.962" endtime="20201030 18:32:26.349"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.358" endtime="20201030 18:32:26.378"></status>
</kw>
<msg timestamp="20201030 18:32:26.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:26.356" endtime="20201030 18:32:26.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:26.380" endtime="20201030 18:32:26.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.382" endtime="20201030 18:32:26.384"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.354" endtime="20201030 18:32:26.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.351" endtime="20201030 18:32:26.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.392" endtime="20201030 18:32:26.677"></status>
</kw>
<msg timestamp="20201030 18:32:26.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022949667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023065042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:26.390" endtime="20201030 18:32:26.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022949667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023065042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:26.681" endtime="20201030 18:32:26.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.690" endtime="20201030 18:32:26.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.387" endtime="20201030 18:32:26.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.386" endtime="20201030 18:32:26.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:26.697" level="INFO">${RESULT} = [{'diff': 0.0001153750000000009}, {'diff': 0.00011519500000000196}, {'diff': 0.00011512500000000064}, {'diff': 0.00011572199999999866}, {'diff': 0.00011572199999999866}, {'diff': 0.0001160280000000006...</msg>
<status status="PASS" starttime="20201030 18:32:26.693" endtime="20201030 18:32:26.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:26.701" level="INFO">${ACCURACY} = {'diff': [0.0001153750000000009, 0.00011519500000000196, 0.00011512500000000064, 0.00011572199999999866, 0.00011572199999999866, 0.00011602800000000066, 0.00011583299999999921, 0.00011558399999999844,...</msg>
<status status="PASS" starttime="20201030 18:32:26.698" endtime="20201030 18:32:26.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.706" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 18:32:26.705" endtime="20201030 18:32:26.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.709" level="INFO">VALUE: [0.0001153750000000009, 0.00011519500000000196, 0.00011512500000000064, 0.00011572199999999866, 0.00011572199999999866, 0.00011602800000000066, 0.00011583299999999921, 0.00011558399999999844, 0.00011558400000000191, 0.00011520900000000153, 0.0001158750000000014, 0.00011550000000000102, 0.00011586099999999835, 0.00011604200000000023, 0.00011601400000000109, 0.0001159170000000001, 0.00011519499999999849, 0.00011527799999999991, 0.00011577800000000041, 0.00011584699999999878, 0.00011516599999999988, 0.00011545800000000231, 0.0001159170000000001, 0.00011529199999999948, 0.00011602799999999719, 0.00011547199999999841, 0.00011525000000000077, 0.00011563900000000071, 0.00011533299999999871, 0.00011588900000000096, 0.00011532000000000209, 0.00011518099999999892, 0.00011572199999999866, 0.0001158750000000014, 0.00011576400000000084, 0.00011551300000000111, 0.00011516599999999988, 0.00011577800000000041, 0.00011570799999999909, 0.00011530499999999957, 0.00011582000000000259, 0.00011601400000000109, 0.00011572199999999866, 0.00011598599999999848, 0.00011576400000000084, 0.00011513800000000074, 0.00011584700000000225, 0.00011575000000000127, 0.0001157360000000017, 0.00011551400000000059]</msg>
<status status="PASS" starttime="20201030 18:32:26.707" endtime="20201030 18:32:26.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.702" endtime="20201030 18:32:26.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:26.714" endtime="20201030 18:32:26.733"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.712" endtime="20201030 18:32:26.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.711" endtime="20201030 18:32:26.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.350" endtime="20201030 18:32:26.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.349" endtime="20201030 18:32:26.735"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.744" endtime="20201030 18:32:26.765"></status>
</kw>
<msg timestamp="20201030 18:32:26.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:26.742" endtime="20201030 18:32:26.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:26.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:26.766" endtime="20201030 18:32:26.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.769" endtime="20201030 18:32:26.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.739" endtime="20201030 18:32:26.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.737" endtime="20201030 18:32:26.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:26.778" endtime="20201030 18:32:27.066"></status>
</kw>
<msg timestamp="20201030 18:32:27.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022495361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022612083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:26.777" endtime="20201030 18:32:27.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022495361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022612083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:27.070" endtime="20201030 18:32:27.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.079" endtime="20201030 18:32:27.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.774" endtime="20201030 18:32:27.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.772" endtime="20201030 18:32:27.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:27.086" level="INFO">${RESULT} = [{'diff': 0.00011672200000000313}, {'diff': 0.00011708300000000046}, {'diff': 0.00011698599999999948}, {'diff': 0.00011707000000000037}, {'diff': 0.00011690299999999806}, {'diff': 0.000116389000000001...</msg>
<status status="PASS" starttime="20201030 18:32:27.082" endtime="20201030 18:32:27.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:27.090" level="INFO">${ACCURACY} = {'diff': [0.00011672200000000313, 0.00011708300000000046, 0.00011698599999999948, 0.00011707000000000037, 0.00011690299999999806, 0.00011638900000000146, 0.00011702799999999819, 0.00011629200000000048...</msg>
<status status="PASS" starttime="20201030 18:32:27.087" endtime="20201030 18:32:27.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.094" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 18:32:27.093" endtime="20201030 18:32:27.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.097" level="INFO">VALUE: [0.00011672200000000313, 0.00011708300000000046, 0.00011698599999999948, 0.00011707000000000037, 0.00011690299999999806, 0.00011638900000000146, 0.00011702799999999819, 0.00011629200000000048, 0.00011613799999999827, 0.00011644400000000027, 0.00011669399999999705, 0.00011613899999999774, 0.00011623599999999873, 0.00011645899999999931, 0.00011620899999999906, 0.00011670899999999956, 0.00011640300000000103, 0.00011699999999999905, 0.00011669400000000052, 0.00011708399999999994, 0.00011699999999999905, 0.00011693100000000067, 0.00011697199999999991, 0.00011662499999999867, 0.00011629200000000048, 0.00011662500000000214, 0.0001166109999999991, 0.00011690300000000153, 0.00011648599999999898, 0.00011682000000000012, 0.00011707000000000037, 0.00011647200000000288, 0.0001166109999999991, 0.00011643100000000017, 0.00011647200000000288, 0.00011672199999999966, 0.00011616700000000035, 0.00011702800000000166, 0.00011647200000000288, 0.00011684699999999978, 0.00011666700000000085, 0.00011684799999999926, 0.0001164300000000007, 0.00011672199999999966, 0.00011618000000000045, 0.00011647199999999941, 0.00011613900000000121, 0.00011622199999999916, 0.00011634699999999928, 0.00011679200000000098]</msg>
<status status="PASS" starttime="20201030 18:32:27.095" endtime="20201030 18:32:27.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.090" endtime="20201030 18:32:27.098"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:27.102" endtime="20201030 18:32:27.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.100" endtime="20201030 18:32:27.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.099" endtime="20201030 18:32:27.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.736" endtime="20201030 18:32:27.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:26.735" endtime="20201030 18:32:27.123"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.132" endtime="20201030 18:32:27.153"></status>
</kw>
<msg timestamp="20201030 18:32:27.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:27.130" endtime="20201030 18:32:27.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:27.155" endtime="20201030 18:32:27.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.157" endtime="20201030 18:32:27.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.127" endtime="20201030 18:32:27.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.125" endtime="20201030 18:32:27.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.168" endtime="20201030 18:32:27.455"></status>
</kw>
<msg timestamp="20201030 18:32:27.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023579986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023697319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:27.166" endtime="20201030 18:32:27.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023579986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023697319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:27.459" endtime="20201030 18:32:27.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.467" endtime="20201030 18:32:27.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.164" endtime="20201030 18:32:27.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.161" endtime="20201030 18:32:27.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:27.474" level="INFO">${RESULT} = [{'diff': 0.00011733300000000071}, {'diff': 0.0001179170000000021}, {'diff': 0.00011779099999999904}, {'diff': 0.00011784700000000078}, {'diff': 0.0001179309999999982}, {'diff': 0.00011762499999999967...</msg>
<status status="PASS" starttime="20201030 18:32:27.471" endtime="20201030 18:32:27.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:27.478" level="INFO">${ACCURACY} = {'diff': [0.00011733300000000071, 0.0001179170000000021, 0.00011779099999999904, 0.00011784700000000078, 0.0001179309999999982, 0.00011762499999999967, 0.0001180560000000018, 0.00011749999999999955, 0...</msg>
<status status="PASS" starttime="20201030 18:32:27.475" endtime="20201030 18:32:27.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.483" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 18:32:27.482" endtime="20201030 18:32:27.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.485" level="INFO">VALUE: [0.00011733300000000071, 0.0001179170000000021, 0.00011779099999999904, 0.00011784700000000078, 0.0001179309999999982, 0.00011762499999999967, 0.0001180560000000018, 0.00011749999999999955, 0.00011754099999999879, 0.00011730600000000105, 0.00011734700000000028, 0.0001179300000000022, 0.00011762499999999967, 0.00011773600000000023, 0.000118082999999998, 0.00011786100000000035, 0.00011763899999999924, 0.00011787499999999992, 0.00011805499999999886, 0.00011795799999999787, 0.00011719400000000102, 0.00011730500000000157, 0.0001176110000000001, 0.00011719500000000049, 0.00011747200000000041, 0.00011744500000000074, 0.00011722200000000016, 0.00011800000000000005, 0.00011805599999999833, 0.00011716700000000135, 0.00011780599999999808, 0.0001179170000000021, 0.000117695000000001, 0.00011740299999999856, 0.00011786099999999688, 0.00011801300000000015, 0.0001174439999999978, 0.00011718000000000145, 0.00011773600000000023, 0.00011719500000000049, 0.00011729200000000148, 0.0001177499999999998, 0.0001177629999999999, 0.0001176110000000001, 0.00011734700000000028, 0.00011738900000000246, 0.00011772200000000066, 0.00011776399999999937, 0.00011718100000000092, 0.00011788800000000002]</msg>
<status status="PASS" starttime="20201030 18:32:27.484" endtime="20201030 18:32:27.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.479" endtime="20201030 18:32:27.488"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:27.491" endtime="20201030 18:32:27.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.490" endtime="20201030 18:32:27.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.489" endtime="20201030 18:32:27.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.124" endtime="20201030 18:32:27.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.123" endtime="20201030 18:32:27.512"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.521" endtime="20201030 18:32:27.542"></status>
</kw>
<msg timestamp="20201030 18:32:27.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:27.519" endtime="20201030 18:32:27.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:27.543" endtime="20201030 18:32:27.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.546" endtime="20201030 18:32:27.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.517" endtime="20201030 18:32:27.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.515" endtime="20201030 18:32:27.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.557" endtime="20201030 18:32:27.843"></status>
</kw>
<msg timestamp="20201030 18:32:27.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022579444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022697694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:27.555" endtime="20201030 18:32:27.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022579444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022697694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:27.847" endtime="20201030 18:32:27.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.855" endtime="20201030 18:32:27.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.552" endtime="20201030 18:32:27.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.550" endtime="20201030 18:32:27.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:27.862" level="INFO">${RESULT} = [{'diff': 0.0001182500000000003}, {'diff': 0.00011851400000000012}, {'diff': 0.00011886099999999789}, {'diff': 0.00011902800000000019}, {'diff': 0.00011876400000000037}, {'diff': 0.0001188199999999986...</msg>
<status status="PASS" starttime="20201030 18:32:27.859" endtime="20201030 18:32:27.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:27.867" level="INFO">${ACCURACY} = {'diff': [0.0001182500000000003, 0.00011851400000000012, 0.00011886099999999789, 0.00011902800000000019, 0.00011876400000000037, 0.00011881999999999865, 0.00011831999999999815, 0.00011904199999999976,...</msg>
<status status="PASS" starttime="20201030 18:32:27.863" endtime="20201030 18:32:27.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.872" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 18:32:27.871" endtime="20201030 18:32:27.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.874" level="INFO">VALUE: [0.0001182500000000003, 0.00011851400000000012, 0.00011886099999999789, 0.00011902800000000019, 0.00011876400000000037, 0.00011881999999999865, 0.00011831999999999815, 0.00011904199999999976, 0.0001186379999999973, 0.00011877799999999994, 0.00011894400000000277, 0.00011908300000000246, 0.00011902800000000019, 0.00011901400000000062, 0.00011827799999999944, 0.00011884799999999779, 0.00011818099999999845, 0.00011829099999999954, 0.00011884699999999832, 0.00011870799999999862, 0.00011845799999999837, 0.00011905599999999933, 0.00011865299999999981, 0.00011841699999999913, 0.00011883399999999822, 0.0001188890000000005, 0.00011813899999999974, 0.00011844400000000227, 0.00011809700000000103, 0.0001188890000000005, 0.00011833400000000119, 0.00011861199999999711, 0.00011872200000000166, 0.00011900000000000105, 0.00011829099999999954, 0.00011892999999999973, 0.00011902800000000019, 0.00011859700000000153, 0.0001184309999999987, 0.00011852799999999969, 0.0001187500000000008, 0.0001184300000000027, 0.00011902700000000072, 0.0001183049999999991, 0.00011831900000000214, 0.0001188890000000005, 0.00011883400000000169, 0.00011905599999999933, 0.00011873600000000123, 0.00011901399999999715]</msg>
<status status="PASS" starttime="20201030 18:32:27.873" endtime="20201030 18:32:27.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.868" endtime="20201030 18:32:27.876"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:27.879" endtime="20201030 18:32:27.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.878" endtime="20201030 18:32:27.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.877" endtime="20201030 18:32:27.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.513" endtime="20201030 18:32:27.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.512" endtime="20201030 18:32:27.900"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.909" endtime="20201030 18:32:27.930"></status>
</kw>
<msg timestamp="20201030 18:32:27.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:27.908" endtime="20201030 18:32:27.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:27.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:27.932" endtime="20201030 18:32:27.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.934" endtime="20201030 18:32:27.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.905" endtime="20201030 18:32:27.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.903" endtime="20201030 18:32:27.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:27.944" endtime="20201030 18:32:28.232"></status>
</kw>
<msg timestamp="20201030 18:32:28.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022960028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023079375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:27.942" endtime="20201030 18:32:28.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022960028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023079375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:28.236" endtime="20201030 18:32:28.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.245" endtime="20201030 18:32:28.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.940" endtime="20201030 18:32:28.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.938" endtime="20201030 18:32:28.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:28.251" level="INFO">${RESULT} = [{'diff': 0.00011934699999999882}, {'diff': 0.00011947300000000188}, {'diff': 0.00011997300000000238}, {'diff': 0.00011920900000000206}, {'diff': 0.000120083}, {'diff': 0.0001196249999999982}, {'diff'...</msg>
<status status="PASS" starttime="20201030 18:32:28.248" endtime="20201030 18:32:28.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:28.256" level="INFO">${ACCURACY} = {'diff': [0.00011934699999999882, 0.00011947300000000188, 0.00011997300000000238, 0.00011920900000000206, 0.000120083, 0.0001196249999999982, 0.00011984699999999932, 0.00011968000000000048, 0.00011913...</msg>
<status status="PASS" starttime="20201030 18:32:28.253" endtime="20201030 18:32:28.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.260" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 18:32:28.259" endtime="20201030 18:32:28.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.263" level="INFO">VALUE: [0.00011934699999999882, 0.00011947300000000188, 0.00011997300000000238, 0.00011920900000000206, 0.000120083, 0.0001196249999999982, 0.00011984699999999932, 0.00011968000000000048, 0.00011913900000000074, 0.00011983299999999975, 0.00011947200000000241, 0.00011991699999999716, 0.00011984800000000226, 0.00011990199999999812, 0.00011963899999999777, 0.0001195829999999995, 0.00011987500000000192, 0.00011948599999999851, 0.00011966600000000091, 0.0001197089999999991, 0.00011988899999999802, 0.0001193050000000001, 0.0001198890000000015, 0.00011945799999999937, 0.00011956899999999993, 0.00011973599999999876, 0.00011933299999999925, 0.0001192089999999986, 0.00011987500000000192, 0.00011956899999999993, 0.00011997199999999944, 0.00011931899999999968, 0.00011986099999999889, 0.00012002799999999772, 0.00011916699999999988, 0.00011913900000000074, 0.00011991699999999716, 0.00011956899999999993, 0.00011972199999999919, 0.00011993000000000073, 0.0001196249999999982, 0.00011961099999999864, 0.00012005600000000033, 0.00011987499999999846, 0.0001196249999999982, 0.00011918099999999945, 0.00012013899999999827, 0.00011959699999999907, 0.00011959700000000253, 0.00011919499999999902]</msg>
<status status="PASS" starttime="20201030 18:32:28.261" endtime="20201030 18:32:28.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.257" endtime="20201030 18:32:28.264"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:28.268" endtime="20201030 18:32:28.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.266" endtime="20201030 18:32:28.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.265" endtime="20201030 18:32:28.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.901" endtime="20201030 18:32:28.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:27.901" endtime="20201030 18:32:28.289"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.298" endtime="20201030 18:32:28.319"></status>
</kw>
<msg timestamp="20201030 18:32:28.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:28.296" endtime="20201030 18:32:28.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:28.321" endtime="20201030 18:32:28.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.324" endtime="20201030 18:32:28.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.294" endtime="20201030 18:32:28.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.291" endtime="20201030 18:32:28.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.333" endtime="20201030 18:32:28.619"></status>
</kw>
<msg timestamp="20201030 18:32:28.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023562778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023683472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:28.331" endtime="20201030 18:32:28.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023562778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023683472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:28.623" endtime="20201030 18:32:28.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.631" endtime="20201030 18:32:28.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.329" endtime="20201030 18:32:28.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.327" endtime="20201030 18:32:28.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:28.638" level="INFO">${RESULT} = [{'diff': 0.00012069400000000105}, {'diff': 0.00012013900000000174}, {'diff': 0.000121083000000001}, {'diff': 0.00012059700000000007}, {'diff': 0.0001210969999999971}, {'diff': 0.00012013899999999827}...</msg>
<status status="PASS" starttime="20201030 18:32:28.635" endtime="20201030 18:32:28.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:28.642" level="INFO">${ACCURACY} = {'diff': [0.00012069400000000105, 0.00012013900000000174, 0.000121083000000001, 0.00012059700000000007, 0.0001210969999999971, 0.00012013899999999827, 0.00012018100000000045, 0.00012051399999999865, 0...</msg>
<status status="PASS" starttime="20201030 18:32:28.639" endtime="20201030 18:32:28.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.647" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 18:32:28.646" endtime="20201030 18:32:28.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.650" level="INFO">VALUE: [0.00012069400000000105, 0.00012013900000000174, 0.000121083000000001, 0.00012059700000000007, 0.0001210969999999971, 0.00012013899999999827, 0.00012018100000000045, 0.00012051399999999865, 0.000120776999999999, 0.0001205830000000005, 0.00012063900000000224, 0.00012056899999999746, 0.00012081900000000118, 0.00012059799999999954, 0.00012016600000000141, 0.00012084799999999979, 0.00012091599999999869, 0.0001205830000000005, 0.0001206110000000031, 0.00012033300000000025, 0.00012045800000000037, 0.00012058399999999997, 0.00012036200000000233, 0.00012047199999999994, 0.00012033300000000025, 0.0001209029999999986, 0.0001204440000000008, 0.0001206249999999992, 0.00012102799999999872, 0.00012059700000000007, 0.00012058399999999997, 0.0001207639999999989, 0.00012061099999999964, 0.00012069399999999758, 0.00012016700000000088, 0.00012036099999999939, 0.00012077799999999847, 0.00012101399999999915, 0.00012047199999999994, 0.00012087499999999946, 0.00012072200000000019, 0.00012036099999999939, 0.0001205830000000005, 0.00012086099999999989, 0.00012040300000000156, 0.00012087499999999946, 0.0001210969999999971, 0.0001203050000000011, 0.00012099999999999958, 0.00012091700000000163]</msg>
<status status="PASS" starttime="20201030 18:32:28.648" endtime="20201030 18:32:28.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.643" endtime="20201030 18:32:28.652"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:28.656" endtime="20201030 18:32:28.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.654" endtime="20201030 18:32:28.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.653" endtime="20201030 18:32:28.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.290" endtime="20201030 18:32:28.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.289" endtime="20201030 18:32:28.676"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.685" endtime="20201030 18:32:28.706"></status>
</kw>
<msg timestamp="20201030 18:32:28.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:28.684" endtime="20201030 18:32:28.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:28.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:28.708" endtime="20201030 18:32:28.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.710" endtime="20201030 18:32:28.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.681" endtime="20201030 18:32:28.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.679" endtime="20201030 18:32:28.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:28.720" endtime="20201030 18:32:29.008"></status>
</kw>
<msg timestamp="20201030 18:32:29.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022520889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022642819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:28.718" endtime="20201030 18:32:29.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022520889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022642819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:29.012" endtime="20201030 18:32:29.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.020" endtime="20201030 18:32:29.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.715" endtime="20201030 18:32:29.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.714" endtime="20201030 18:32:29.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:29.027" level="INFO">${RESULT} = [{'diff': 0.00012193000000000273}, {'diff': 0.00012113899999999928}, {'diff': 0.00012159700000000107}, {'diff': 0.00012163899999999978}, {'diff': 0.00012133299999999778}, {'diff': 0.000121319999999997...</msg>
<status status="PASS" starttime="20201030 18:32:29.024" endtime="20201030 18:32:29.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:29.035" level="INFO">${ACCURACY} = {'diff': [0.00012193000000000273, 0.00012113899999999928, 0.00012159700000000107, 0.00012163899999999978, 0.00012133299999999778, 0.00012131999999999768, 0.0001212090000000006, 0.00012156900000000193,...</msg>
<status status="PASS" starttime="20201030 18:32:29.028" endtime="20201030 18:32:29.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.039" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 18:32:29.038" endtime="20201030 18:32:29.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.042" level="INFO">VALUE: [0.00012193000000000273, 0.00012113899999999928, 0.00012159700000000107, 0.00012163899999999978, 0.00012133299999999778, 0.00012131999999999768, 0.0001212090000000006, 0.00012156900000000193, 0.00012205499999999939, 0.00012197200000000144, 0.00012118000000000198, 0.00012201400000000015, 0.0001215830000000015, 0.00012129199999999854, 0.00012201400000000015, 0.00012197199999999797, 0.00012192999999999926, 0.000121777, 0.0001219579999999984, 0.00012187500000000046, 0.00012200000000000058, 0.00012188799999999708, 0.00012201400000000015, 0.0001217090000000011, 0.00012204099999999982, 0.00012161100000000064, 0.00012198600000000101, 0.00012208299999999853, 0.00012130600000000158, 0.00012115299999999884, 0.00012191699999999916, 0.00012130599999999811, 0.00012172199999999772, 0.00012173600000000076, 0.00012169399999999858, 0.00012183300000000175, 0.00012200000000000058, 0.00012188900000000003, 0.00012127799999999897, 0.00012133300000000125, 0.00012202700000000025, 0.0001217639999999999, 0.00012141599999999919, 0.00012123600000000026, 0.0001214440000000018, 0.00012163899999999978, 0.00012163899999999978, 0.00012115300000000231, 0.00012142999999999876, 0.00012161099999999717]</msg>
<status status="PASS" starttime="20201030 18:32:29.040" endtime="20201030 18:32:29.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.036" endtime="20201030 18:32:29.043"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:29.047" endtime="20201030 18:32:29.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.045" endtime="20201030 18:32:29.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.044" endtime="20201030 18:32:29.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.677" endtime="20201030 18:32:29.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:28.677" endtime="20201030 18:32:29.068"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.077" endtime="20201030 18:32:29.097"></status>
</kw>
<msg timestamp="20201030 18:32:29.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:29.075" endtime="20201030 18:32:29.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:29.099" endtime="20201030 18:32:29.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.101" endtime="20201030 18:32:29.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.072" endtime="20201030 18:32:29.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.070" endtime="20201030 18:32:29.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.111" endtime="20201030 18:32:29.398"></status>
</kw>
<msg timestamp="20201030 18:32:29.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022630056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022752431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:29.109" endtime="20201030 18:32:29.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022630056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022752431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:29.402" endtime="20201030 18:32:29.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.411" endtime="20201030 18:32:29.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.107" endtime="20201030 18:32:29.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.105" endtime="20201030 18:32:29.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:29.418" level="INFO">${RESULT} = [{'diff': 0.00012237500000000096}, {'diff': 0.00012277800000000047}, {'diff': 0.00012262499999999774}, {'diff': 0.00012241700000000313}, {'diff': 0.0001229999999999981}, {'diff': 0.0001226389999999973...</msg>
<status status="PASS" starttime="20201030 18:32:29.414" endtime="20201030 18:32:29.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:29.422" level="INFO">${ACCURACY} = {'diff': [0.00012237500000000096, 0.00012277800000000047, 0.00012262499999999774, 0.00012241700000000313, 0.0001229999999999981, 0.0001226389999999973, 0.00012283299999999928, 0.00012301399999999768, ...</msg>
<status status="PASS" starttime="20201030 18:32:29.419" endtime="20201030 18:32:29.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.426" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 18:32:29.425" endtime="20201030 18:32:29.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.429" level="INFO">VALUE: [0.00012237500000000096, 0.00012277800000000047, 0.00012262499999999774, 0.00012241700000000313, 0.0001229999999999981, 0.0001226389999999973, 0.00012283299999999928, 0.00012301399999999768, 0.00012302800000000072, 0.0001224030000000001, 0.00012308299999999953, 0.00012293099999999973, 0.00012234699999999835, 0.00012301399999999768, 0.00012305500000000039, 0.00012251400000000065, 0.00012308299999999953, 0.00012247200000000194, 0.0001223480000000013, 0.0001224449999999988, 0.00012215299999999985, 0.0001227359999999983, 0.00012301399999999768, 0.00012270800000000262, 0.00012233299999999878, 0.00012252700000000075, 0.00012306899999999996, 0.00012245899999999837, 0.00012301400000000115, 0.0001225969999999986, 0.0001227640000000009, 0.00012252800000000022, 0.00012286099999999842, 0.00012287499999999799, 0.0001229449999999993, 0.00012269499999999905, 0.00012259799999999807, 0.00012305500000000039, 0.00012288900000000103, 0.00012302799999999725, 0.00012251400000000065, 0.00012270799999999915, 0.00012269499999999905, 0.00012222300000000116, 0.00012256999999999893, 0.00012218000000000298, 0.00012274999999999786, 0.0001227220000000022, 0.00012216699999999941, 0.0001224579999999989]</msg>
<status status="PASS" starttime="20201030 18:32:29.427" endtime="20201030 18:32:29.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.423" endtime="20201030 18:32:29.430"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:29.434" endtime="20201030 18:32:29.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.432" endtime="20201030 18:32:29.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.431" endtime="20201030 18:32:29.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.069" endtime="20201030 18:32:29.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.068" endtime="20201030 18:32:29.455"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.464" endtime="20201030 18:32:29.486"></status>
</kw>
<msg timestamp="20201030 18:32:29.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:29.462" endtime="20201030 18:32:29.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:29.488" endtime="20201030 18:32:29.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.490" endtime="20201030 18:32:29.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.459" endtime="20201030 18:32:29.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.457" endtime="20201030 18:32:29.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.500" endtime="20201030 18:32:29.786"></status>
</kw>
<msg timestamp="20201030 18:32:29.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023426056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023549736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:29.498" endtime="20201030 18:32:29.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023426056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023549736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:29.790" endtime="20201030 18:32:29.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.799" endtime="20201030 18:32:29.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.496" endtime="20201030 18:32:29.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.494" endtime="20201030 18:32:29.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:29.805" level="INFO">${RESULT} = [{'diff': 0.000123680000000001}, {'diff': 0.00012401399999999868}, {'diff': 0.00012319499999999955}, {'diff': 0.00012359800000000254}, {'diff': 0.000123777999999998}, {'diff': 0.0001239580000000004}, ...</msg>
<status status="PASS" starttime="20201030 18:32:29.802" endtime="20201030 18:32:29.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:29.810" level="INFO">${ACCURACY} = {'diff': [0.000123680000000001, 0.00012401399999999868, 0.00012319499999999955, 0.00012359800000000254, 0.000123777999999998, 0.0001239580000000004, 0.0001231389999999978, 0.0001234579999999999, 0.000...</msg>
<status status="PASS" starttime="20201030 18:32:29.806" endtime="20201030 18:32:29.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.814" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 18:32:29.813" endtime="20201030 18:32:29.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.817" level="INFO">VALUE: [0.000123680000000001, 0.00012401399999999868, 0.00012319499999999955, 0.00012359800000000254, 0.000123777999999998, 0.0001239580000000004, 0.0001231389999999978, 0.0001234579999999999, 0.00012329200000000054, 0.00012336099999999892, 0.00012411099999999967, 0.00012401399999999868, 0.00012402799999999825, 0.00012407000000000043, 0.00012376300000000243, 0.0001240689999999975, 0.00012379200000000104, 0.00012315300000000085, 0.0001237640000000019, 0.0001232779999999975, 0.00012319499999999955, 0.0001240559999999974, 0.00012322199999999922, 0.00012330500000000064, 0.0001236939999999971, 0.00012408300000000053, 0.0001231389999999978, 0.00012345900000000284, 0.00012380499999999767, 0.00012377800000000147, 0.00012386100000000289, 0.00012380500000000114, 0.00012374999999999886, 0.00012400000000000258, 0.00012384699999999985, 0.00012333399999999925, 0.0001240559999999974, 0.00012311199999999814, 0.00012359700000000307, 0.00012401400000000215, 0.0001235969999999996, 0.00012408300000000053, 0.00012336099999999892, 0.00012369500000000005, 0.00012387500000000246, 0.00012343100000000023, 0.00012402700000000225, 0.00012391700000000117, 0.00012372199999999972, 0.00012316700000000042]</msg>
<status status="PASS" starttime="20201030 18:32:29.815" endtime="20201030 18:32:29.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.810" endtime="20201030 18:32:29.819"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:29.823" endtime="20201030 18:32:29.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.821" endtime="20201030 18:32:29.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.820" endtime="20201030 18:32:29.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.456" endtime="20201030 18:32:29.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.455" endtime="20201030 18:32:29.844"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.853" endtime="20201030 18:32:29.874"></status>
</kw>
<msg timestamp="20201030 18:32:29.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:29.851" endtime="20201030 18:32:29.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:29.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:29.875" endtime="20201030 18:32:29.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.878" endtime="20201030 18:32:29.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.848" endtime="20201030 18:32:29.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.846" endtime="20201030 18:32:29.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:29.887" endtime="20201030 18:32:30.174"></status>
</kw>
<msg timestamp="20201030 18:32:30.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022590819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022715611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:29.886" endtime="20201030 18:32:30.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022590819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022715611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:30.178" endtime="20201030 18:32:30.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.187" endtime="20201030 18:32:30.188"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.883" endtime="20201030 18:32:30.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.881" endtime="20201030 18:32:30.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:30.193" level="INFO">${RESULT} = [{'diff': 0.00012479199999999857}, {'diff': 0.00012419500000000055}, {'diff': 0.00012474999999999986}, {'diff': 0.00012415299999999838}, {'diff': 0.00012497300000000044}, {'diff': 0.000124444000000001...</msg>
<status status="PASS" starttime="20201030 18:32:30.190" endtime="20201030 18:32:30.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:30.198" level="INFO">${ACCURACY} = {'diff': [0.00012479199999999857, 0.00012419500000000055, 0.00012474999999999986, 0.00012415299999999838, 0.00012497300000000044, 0.00012444400000000133, 0.00012416599999999847, 0.0001244580000000009,...</msg>
<status status="PASS" starttime="20201030 18:32:30.194" endtime="20201030 18:32:30.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.203" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 18:32:30.202" endtime="20201030 18:32:30.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.206" level="INFO">VALUE: [0.00012479199999999857, 0.00012419500000000055, 0.00012474999999999986, 0.00012415299999999838, 0.00012497300000000044, 0.00012444400000000133, 0.00012416599999999847, 0.0001244580000000009, 0.0001245420000000018, 0.00012412499999999924, 0.0001242359999999998, 0.00012437499999999949, 0.00012425000000000283, 0.00012419400000000108, 0.0001242640000000024, 0.0001243190000000012, 0.00012416699999999795, 0.00012470800000000115, 0.00012466700000000192, 0.00012477800000000247, 0.00012488899999999956, 0.00012466700000000192, 0.00012448600000000004, 0.00012488899999999956, 0.00012462499999999974, 0.00012430599999999764, 0.00012462499999999974, 0.00012443100000000124, 0.00012458300000000103, 0.00012413799999999933, 0.00012412499999999924, 0.0001246250000000032, 0.00012504199999999882, 0.00012501400000000315, 0.00012480599999999814, 0.00012465299999999888, 0.00012443000000000176, 0.00012484700000000085, 0.0001250689999999985, 0.0001243329999999973, 0.00012493100000000174, 0.00012477699999999953, 0.00012461100000000017, 0.00012486100000000042, 0.00012433300000000078, 0.00012486100000000042, 0.00012452799999999875, 0.00012490299999999913, 0.00012501399999999968, 0.00012447200000000047]</msg>
<status status="PASS" starttime="20201030 18:32:30.204" endtime="20201030 18:32:30.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.199" endtime="20201030 18:32:30.207"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:30.211" endtime="20201030 18:32:30.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.209" endtime="20201030 18:32:30.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.208" endtime="20201030 18:32:30.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.844" endtime="20201030 18:32:30.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:29.844" endtime="20201030 18:32:30.232"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.241" endtime="20201030 18:32:30.261"></status>
</kw>
<msg timestamp="20201030 18:32:30.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:30.239" endtime="20201030 18:32:30.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:30.263" endtime="20201030 18:32:30.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.265" endtime="20201030 18:32:30.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.236" endtime="20201030 18:32:30.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.234" endtime="20201030 18:32:30.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.275" endtime="20201030 18:32:30.562"></status>
</kw>
<msg timestamp="20201030 18:32:30.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022871069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022996917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:30.273" endtime="20201030 18:32:30.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022871069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022996917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:30.567" endtime="20201030 18:32:30.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.576" endtime="20201030 18:32:30.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.270" endtime="20201030 18:32:30.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.269" endtime="20201030 18:32:30.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:30.582" level="INFO">${RESULT} = [{'diff': 0.00012584799999999785}, {'diff': 0.00012544499999999834}, {'diff': 0.00012586099999999795}, {'diff': 0.00012548600000000104}, {'diff': 0.00012584700000000185}, {'diff': 0.000125596999999998...</msg>
<status status="PASS" starttime="20201030 18:32:30.579" endtime="20201030 18:32:30.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:30.587" level="INFO">${ACCURACY} = {'diff': [0.00012584799999999785, 0.00012544499999999834, 0.00012586099999999795, 0.00012548600000000104, 0.00012584700000000185, 0.00012559699999999813, 0.00012548600000000104, 0.00012518099999999852...</msg>
<status status="PASS" starttime="20201030 18:32:30.583" endtime="20201030 18:32:30.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.592" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 18:32:30.590" endtime="20201030 18:32:30.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.594" level="INFO">VALUE: [0.00012584799999999785, 0.00012544499999999834, 0.00012586099999999795, 0.00012548600000000104, 0.00012584700000000185, 0.00012559699999999813, 0.00012548600000000104, 0.00012518099999999852, 0.0001255840000000015, 0.00012545900000000137, 0.000125568999999999, 0.0001259299999999998, 0.00012516699999999895, 0.00012561100000000117, 0.0001254169999999992, 0.00012584700000000185, 0.0001252230000000007, 0.00012531899999999874, 0.00012602800000000025, 0.00012516599999999947, 0.00012556900000000246, 0.00012558299999999856, 0.0001257360000000013, 0.00012536099999999745, 0.00012570900000000162, 0.00012604100000000035, 0.00012518099999999852, 0.0001252779999999995, 0.0001254580000000019, 0.0001259169999999997, 0.00012557000000000193, 0.00012580599999999914, 0.00012547300000000094, 0.0001255970000000016, 0.0001254299999999993, 0.00012584699999999838, 0.00012594399999999936, 0.0001253329999999983, 0.0001256390000000003, 0.00012583399999999828, 0.0001257230000000012, 0.0001254299999999993, 0.0001260000000000011, 0.000125568999999999, 0.00012534699999999788, 0.00012558300000000203, 0.00012576400000000043, 0.0001253199999999982, 0.00012608300000000253, 0.00012508300000000153]</msg>
<status status="PASS" starttime="20201030 18:32:30.593" endtime="20201030 18:32:30.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.588" endtime="20201030 18:32:30.600"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:30.604" endtime="20201030 18:32:30.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.602" endtime="20201030 18:32:30.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.601" endtime="20201030 18:32:30.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.233" endtime="20201030 18:32:30.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.232" endtime="20201030 18:32:30.625"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.634" endtime="20201030 18:32:30.657"></status>
</kw>
<msg timestamp="20201030 18:32:30.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:30.632" endtime="20201030 18:32:30.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:30.658" endtime="20201030 18:32:30.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.661" endtime="20201030 18:32:30.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.629" endtime="20201030 18:32:30.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.627" endtime="20201030 18:32:30.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.670" endtime="20201030 18:32:30.956"></status>
</kw>
<msg timestamp="20201030 18:32:30.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024029708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024156417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:30.669" endtime="20201030 18:32:30.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024029708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024156417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:30.961" endtime="20201030 18:32:30.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:30.970" endtime="20201030 18:32:30.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.666" endtime="20201030 18:32:30.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.664" endtime="20201030 18:32:30.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:30.977" level="INFO">${RESULT} = [{'diff': 0.00012670899999999916}, {'diff': 0.00012686099999999895}, {'diff': 0.0001269300000000008}, {'diff': 0.0001266109999999987}, {'diff': 0.00012616699999999995}, {'diff': 0.00012701400000000168...</msg>
<status status="PASS" starttime="20201030 18:32:30.973" endtime="20201030 18:32:30.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:30.981" level="INFO">${ACCURACY} = {'diff': [0.00012670899999999916, 0.00012686099999999895, 0.0001269300000000008, 0.0001266109999999987, 0.00012616699999999995, 0.00012701400000000168, 0.00012636100000000192, 0.00012693100000000027, ...</msg>
<status status="PASS" starttime="20201030 18:32:30.978" endtime="20201030 18:32:30.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.985" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 18:32:30.984" endtime="20201030 18:32:30.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:30.988" level="INFO">VALUE: [0.00012670899999999916, 0.00012686099999999895, 0.0001269300000000008, 0.0001266109999999987, 0.00012616699999999995, 0.00012701400000000168, 0.00012636100000000192, 0.00012693100000000027, 0.0001265000000000016, 0.0001267499999999984, 0.00012684699999999938, 0.0001271390000000018, 0.00012612500000000124, 0.000126778000000001, 0.00012701400000000168, 0.00012693100000000027, 0.0001264170000000002, 0.00012706999999999996, 0.00012684699999999938, 0.00012686099999999895, 0.0001269170000000007, 0.00012687499999999852, 0.00012706999999999996, 0.00012612500000000124, 0.00012702799999999778, 0.0001261939999999996, 0.0001269719999999995, 0.00012620799999999918, 0.00012690300000000113, 0.00012673599999999882, 0.00012651400000000118, 0.00012648600000000204, 0.0001267230000000022, 0.0001270139999999982, 0.00012672199999999925, 0.00012673599999999882, 0.00012662499999999827, 0.00012702799999999778, 0.00012699999999999864, 0.00012647300000000194, 0.00012701400000000168, 0.00012616600000000047, 0.00012672199999999925, 0.00012613899999999734, 0.00012672199999999925, 0.0001265000000000016, 0.00012675000000000186, 0.00012619499999999909, 0.00012630500000000017, 0.00012634700000000235]</msg>
<status status="PASS" starttime="20201030 18:32:30.987" endtime="20201030 18:32:30.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.982" endtime="20201030 18:32:30.990"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:30.994" endtime="20201030 18:32:31.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.992" endtime="20201030 18:32:31.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.991" endtime="20201030 18:32:31.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.626" endtime="20201030 18:32:31.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:30.625" endtime="20201030 18:32:31.015"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.024" endtime="20201030 18:32:31.045"></status>
</kw>
<msg timestamp="20201030 18:32:31.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:31.022" endtime="20201030 18:32:31.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:31.047" endtime="20201030 18:32:31.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.049" endtime="20201030 18:32:31.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.020" endtime="20201030 18:32:31.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.017" endtime="20201030 18:32:31.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.059" endtime="20201030 18:32:31.345"></status>
</kw>
<msg timestamp="20201030 18:32:31.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022757681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022884875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:31.057" endtime="20201030 18:32:31.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022757681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022884875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:31.349" endtime="20201030 18:32:31.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.357" endtime="20201030 18:32:31.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.055" endtime="20201030 18:32:31.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.053" endtime="20201030 18:32:31.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:31.365" level="INFO">${RESULT} = [{'diff': 0.0001271940000000006}, {'diff': 0.00012793100000000127}, {'diff': 0.00012734800000000282}, {'diff': 0.00012758400000000003}, {'diff': 0.000127472}, {'diff': 0.0001277499999999994}, {'diff':...</msg>
<status status="PASS" starttime="20201030 18:32:31.361" endtime="20201030 18:32:31.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:31.370" level="INFO">${ACCURACY} = {'diff': [0.0001271940000000006, 0.00012793100000000127, 0.00012734800000000282, 0.00012758400000000003, 0.000127472, 0.0001277499999999994, 0.00012722199999999975, 0.00012744500000000034, 0.000127500...</msg>
<status status="PASS" starttime="20201030 18:32:31.366" endtime="20201030 18:32:31.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.375" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 18:32:31.374" endtime="20201030 18:32:31.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.377" level="INFO">VALUE: [0.0001271940000000006, 0.00012793100000000127, 0.00012734800000000282, 0.00012758400000000003, 0.000127472, 0.0001277499999999994, 0.00012722199999999975, 0.00012744500000000034, 0.0001275000000000026, 0.000127472, 0.00012718100000000052, 0.00012716700000000095, 0.0001277910000000021, 0.00012730500000000117, 0.00012802799999999878, 0.000127472, 0.00012716699999999748, 0.00012722299999999923, 0.00012802799999999878, 0.0001272919999999976, 0.00012759700000000013, 0.0001278330000000008, 0.00012745800000000043, 0.00012773599999999982, 0.0001277919999999981, 0.00012730599999999717, 0.00012777799999999853, 0.00012734800000000282, 0.0001280139999999992, 0.00012731900000000074, 0.00012799999999999964, 0.0001276109999999997, 0.0001278469999999969, 0.00012723599999999932, 0.00012801299999999974, 0.000127472, 0.00012716600000000147, 0.00012751400000000218, 0.0001271940000000006, 0.00012744500000000034, 0.0001271940000000006, 0.00012712500000000224, 0.0001275979999999996, 0.0001276109999999997, 0.00012777799999999853, 0.00012802799999999878, 0.000127569000000001, 0.00012729200000000107, 0.00012770900000000016, 0.0001278889999999991]</msg>
<status status="PASS" starttime="20201030 18:32:31.376" endtime="20201030 18:32:31.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.371" endtime="20201030 18:32:31.379"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:31.383" endtime="20201030 18:32:31.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.381" endtime="20201030 18:32:31.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.380" endtime="20201030 18:32:31.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.016" endtime="20201030 18:32:31.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.015" endtime="20201030 18:32:31.403"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.412" endtime="20201030 18:32:31.434"></status>
</kw>
<msg timestamp="20201030 18:32:31.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:31.411" endtime="20201030 18:32:31.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:31.436" endtime="20201030 18:32:31.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.438" endtime="20201030 18:32:31.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.408" endtime="20201030 18:32:31.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.406" endtime="20201030 18:32:31.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.447" endtime="20201030 18:32:31.735"></status>
</kw>
<msg timestamp="20201030 18:32:31.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022616694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022744917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:31.446" endtime="20201030 18:32:31.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022616694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022744917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:31.739" endtime="20201030 18:32:31.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.747" endtime="20201030 18:32:31.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.443" endtime="20201030 18:32:31.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.441" endtime="20201030 18:32:31.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:31.754" level="INFO">${RESULT} = [{'diff': 0.00012822300000000023}, {'diff': 0.00012816699999999848}, {'diff': 0.00012872199999999778}, {'diff': 0.00012820800000000118}, {'diff': 0.00012900000000000064}, {'diff': 0.000128902999999999...</msg>
<status status="PASS" starttime="20201030 18:32:31.751" endtime="20201030 18:32:31.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:31.758" level="INFO">${ACCURACY} = {'diff': [0.00012822300000000023, 0.00012816699999999848, 0.00012872199999999778, 0.00012820800000000118, 0.00012900000000000064, 0.00012890299999999966, 0.00012873600000000082, 0.00012863899999999984...</msg>
<status status="PASS" starttime="20201030 18:32:31.755" endtime="20201030 18:32:31.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.764" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 18:32:31.762" endtime="20201030 18:32:31.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.766" level="INFO">VALUE: [0.00012822300000000023, 0.00012816699999999848, 0.00012872199999999778, 0.00012820800000000118, 0.00012900000000000064, 0.00012890299999999966, 0.00012873600000000082, 0.00012863899999999984, 0.00012863899999999984, 0.0001286249999999968, 0.0001284439999999984, 0.0001286110000000007, 0.00012904199999999935, 0.000128569000000002, 0.00012904200000000282, 0.00012863899999999984, 0.00012887500000000052, 0.00012813899999999934, 0.00012862500000000027, 0.0001281110000000002, 0.00012872199999999778, 0.00012812499999999977, 0.0001283200000000012, 0.0001284590000000009, 0.00012817999999999857, 0.0001286110000000007, 0.00012815199999999943, 0.0001288890000000001, 0.00012870800000000168, 0.000128472000000001, 0.0001290140000000002, 0.00012829200000000207, 0.0001290270000000003, 0.00012872199999999778, 0.00012861099999999723, 0.00012904199999999935, 0.0001290140000000002, 0.00012823599999999685, 0.00012884700000000138, 0.00012847300000000048, 0.00012902799999999978, 0.00012822200000000075, 0.0001288200000000017, 0.00012879099999999963, 0.00012906899999999902, 0.00012829099999999913, 0.00012845899999999744, 0.00012819499999999762, 0.00012859700000000113, 0.00012904099999999988]</msg>
<status status="PASS" starttime="20201030 18:32:31.765" endtime="20201030 18:32:31.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.759" endtime="20201030 18:32:31.768"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:31.772" endtime="20201030 18:32:31.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.770" endtime="20201030 18:32:31.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.769" endtime="20201030 18:32:31.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.404" endtime="20201030 18:32:31.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.404" endtime="20201030 18:32:31.793"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.801" endtime="20201030 18:32:31.824"></status>
</kw>
<msg timestamp="20201030 18:32:31.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:31.800" endtime="20201030 18:32:31.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:31.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:31.826" endtime="20201030 18:32:31.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.828" endtime="20201030 18:32:31.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.797" endtime="20201030 18:32:31.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.795" endtime="20201030 18:32:31.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:31.838" endtime="20201030 18:32:32.124"></status>
</kw>
<msg timestamp="20201030 18:32:32.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023548361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023677611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:31.836" endtime="20201030 18:32:32.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023548361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023677611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:32.128" endtime="20201030 18:32:32.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.136" endtime="20201030 18:32:32.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.833" endtime="20201030 18:32:32.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.832" endtime="20201030 18:32:32.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:32.143" level="INFO">${RESULT} = [{'diff': 0.0001292500000000009}, {'diff': 0.00012962500000000127}, {'diff': 0.00012934700000000188}, {'diff': 0.00013001399999999774}, {'diff': 0.00012929200000000307}, {'diff': 0.0001294299999999998...</msg>
<status status="PASS" starttime="20201030 18:32:32.140" endtime="20201030 18:32:32.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:32.147" level="INFO">${ACCURACY} = {'diff': [0.0001292500000000009, 0.00012962500000000127, 0.00012934700000000188, 0.00013001399999999774, 0.00012929200000000307, 0.00012942999999999982, 0.0001300829999999996, 0.00012942999999999982, ...</msg>
<status status="PASS" starttime="20201030 18:32:32.144" endtime="20201030 18:32:32.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.152" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 18:32:32.151" endtime="20201030 18:32:32.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.155" level="INFO">VALUE: [0.0001292500000000009, 0.00012962500000000127, 0.00012934700000000188, 0.00013001399999999774, 0.00012929200000000307, 0.00012942999999999982, 0.0001300829999999996, 0.00012942999999999982, 0.0001293049999999997, 0.00013000000000000164, 0.000129472999999998, 0.00012918099999999905, 0.00012990300000000066, 0.00012931899999999927, 0.00012913900000000034, 0.0001296110000000017, 0.0001297079999999992, 0.0001292919999999996, 0.00012913900000000034, 0.00012968099999999955, 0.00012943100000000277, 0.00012997199999999903, 0.00012959699999999866, 0.00012954199999999985, 0.00012913900000000034, 0.00012922200000000175, 0.00012999999999999817, 0.00012931999999999874, 0.00012977700000000106, 0.0001291940000000026, 0.00013005500000000045, 0.00012961099999999823, 0.0001297500000000014, 0.00012986099999999848, 0.00012922299999999776, 0.00012923600000000132, 0.00012984700000000238, 0.0001293469999999984, 0.00012945799999999896, 0.00012941699999999973, 0.00012970800000000268, 0.000129472000000002, 0.00012930599999999917, 0.00012919499999999862, 0.0001293049999999997, 0.00012987499999999805, 0.0001299859999999986, 0.00012944500000000234, 0.00012936100000000145, 0.0001297920000000001]</msg>
<status status="PASS" starttime="20201030 18:32:32.153" endtime="20201030 18:32:32.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.148" endtime="20201030 18:32:32.157"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:32.160" endtime="20201030 18:32:32.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.159" endtime="20201030 18:32:32.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.158" endtime="20201030 18:32:32.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.794" endtime="20201030 18:32:32.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:31.793" endtime="20201030 18:32:32.181"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.190" endtime="20201030 18:32:32.211"></status>
</kw>
<msg timestamp="20201030 18:32:32.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:32.189" endtime="20201030 18:32:32.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:32.213" endtime="20201030 18:32:32.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.216" endtime="20201030 18:32:32.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.186" endtime="20201030 18:32:32.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.184" endtime="20201030 18:32:32.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.225" endtime="20201030 18:32:32.511"></status>
</kw>
<msg timestamp="20201030 18:32:32.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022565639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022695889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:32.224" endtime="20201030 18:32:32.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022565639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022695889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:32.515" endtime="20201030 18:32:32.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.523" endtime="20201030 18:32:32.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.221" endtime="20201030 18:32:32.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.219" endtime="20201030 18:32:32.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:32.530" level="INFO">${RESULT} = [{'diff': 0.0001302500000000019}, {'diff': 0.00013031999999999974}, {'diff': 0.0001308050000000012}, {'diff': 0.00013052800000000128}, {'diff': 0.0001306249999999988}, {'diff': 0.0001305140000000017},...</msg>
<status status="PASS" starttime="20201030 18:32:32.527" endtime="20201030 18:32:32.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:32.537" level="INFO">${ACCURACY} = {'diff': [0.0001302500000000019, 0.00013031999999999974, 0.0001308050000000012, 0.00013052800000000128, 0.0001306249999999988, 0.0001305140000000017, 0.00013106900000000102, 0.00013022199999999928, 0....</msg>
<status status="PASS" starttime="20201030 18:32:32.531" endtime="20201030 18:32:32.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.542" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 18:32:32.541" endtime="20201030 18:32:32.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.544" level="INFO">VALUE: [0.0001302500000000019, 0.00013031999999999974, 0.0001308050000000012, 0.00013052800000000128, 0.0001306249999999988, 0.0001305140000000017, 0.00013106900000000102, 0.00013022199999999928, 0.00013101399999999874, 0.00013016700000000048, 0.00013090200000000218, 0.00013041600000000125, 0.00013074999999999892, 0.0001304440000000004, 0.00013086099999999948, 0.0001308890000000021, 0.00013104199999999788, 0.00013018100000000005, 0.00013074999999999892, 0.00013013900000000134, 0.00013105500000000145, 0.00013041699999999726, 0.0001310830000000006, 0.00013063900000000184, 0.000130166999999997, 0.0001309859999999996, 0.00013055500000000095, 0.00013074999999999892, 0.00013018000000000057, 0.00013013900000000134, 0.0001309440000000009, 0.0001308469999999999, 0.00013058399999999956, 0.00013105600000000092, 0.00013055500000000095, 0.0001302769999999981, 0.0001307500000000024, 0.00013104200000000135, 0.00013068100000000055, 0.0001304590000000029, 0.00013057, 0.00013101399999999874, 0.00013072199999999978, 0.00013031900000000027, 0.00013079199999999763, 0.0001303189999999968, 0.0001302920000000006, 0.0001302089999999992, 0.00013013899999999787, 0.00013013900000000134]</msg>
<status status="PASS" starttime="20201030 18:32:32.543" endtime="20201030 18:32:32.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.538" endtime="20201030 18:32:32.546"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:32.549" endtime="20201030 18:32:32.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.548" endtime="20201030 18:32:32.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.547" endtime="20201030 18:32:32.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.182" endtime="20201030 18:32:32.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.182" endtime="20201030 18:32:32.570"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.579" endtime="20201030 18:32:32.600"></status>
</kw>
<msg timestamp="20201030 18:32:32.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:32.578" endtime="20201030 18:32:32.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:32.602" endtime="20201030 18:32:32.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.604" endtime="20201030 18:32:32.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.575" endtime="20201030 18:32:32.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.573" endtime="20201030 18:32:32.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.614" endtime="20201030 18:32:32.901"></status>
</kw>
<msg timestamp="20201030 18:32:32.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022592917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022724, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:32:32.612" endtime="20201030 18:32:32.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022592917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022724, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:32:32.906" endtime="20201030 18:32:32.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.914" endtime="20201030 18:32:32.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.610" endtime="20201030 18:32:32.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.608" endtime="20201030 18:32:32.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:32.920" level="INFO">${RESULT} = [{'diff': 0.0001310830000000006}, {'diff': 0.00013159700000000066}, {'diff': 0.0001312090000000002}, {'diff': 0.00013184800000000038}, {'diff': 0.0001318890000000031}, {'diff': 0.00013205500000000245}...</msg>
<status status="PASS" starttime="20201030 18:32:32.917" endtime="20201030 18:32:32.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:32.924" level="INFO">${ACCURACY} = {'diff': [0.0001310830000000006, 0.00013159700000000066, 0.0001312090000000002, 0.00013184800000000038, 0.0001318890000000031, 0.00013205500000000245, 0.00013161100000000023, 0.00013118100000000105, 0...</msg>
<status status="PASS" starttime="20201030 18:32:32.921" endtime="20201030 18:32:32.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.929" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 18:32:32.928" endtime="20201030 18:32:32.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.931" level="INFO">VALUE: [0.0001310830000000006, 0.00013159700000000066, 0.0001312090000000002, 0.00013184800000000038, 0.0001318890000000031, 0.00013205500000000245, 0.00013161100000000023, 0.00013118100000000105, 0.00013190300000000266, 0.00013201399999999974, 0.00013113900000000234, 0.00013155500000000195, 0.0001316249999999998, 0.00013130499999999823, 0.0001313890000000026, 0.0001319440000000019, 0.00013193099999999833, 0.0001317090000000007, 0.00013200000000000017, 0.0001311530000000019, 0.00013192999999999885, 0.00013204199999999888, 0.00013191700000000223, 0.00013127799999999856, 0.00013127800000000203, 0.0001314449999999974, 0.00013197200000000103, 0.00013186100000000048, 0.00013209700000000116, 0.00013122299999999976, 0.0001312080000000007, 0.00013201399999999974, 0.00013122200000000028, 0.0001313059999999977, 0.00013161100000000023, 0.00013202699999999984, 0.00013143000000000182, 0.00013163899999999937, 0.00013159700000000066, 0.00013123699999999933, 0.00013113899999999887, 0.00013186199999999995, 0.00013172200000000078, 0.00013145800000000096, 0.00013208299999999812, 0.00013191699999999876, 0.0001316249999999998, 0.0001314860000000001, 0.00013144500000000087, 0.00013172200000000078]</msg>
<status status="PASS" starttime="20201030 18:32:32.930" endtime="20201030 18:32:32.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.925" endtime="20201030 18:32:32.933"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:32.936" endtime="20201030 18:32:32.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.935" endtime="20201030 18:32:32.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.934" endtime="20201030 18:32:32.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.571" endtime="20201030 18:32:32.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.571" endtime="20201030 18:32:32.957"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.966" endtime="20201030 18:32:32.988"></status>
</kw>
<msg timestamp="20201030 18:32:32.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:32.964" endtime="20201030 18:32:32.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:32.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:32.990" endtime="20201030 18:32:32.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:32.992" endtime="20201030 18:32:32.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.961" endtime="20201030 18:32:32.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.959" endtime="20201030 18:32:32.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.001" endtime="20201030 18:32:33.304"></status>
</kw>
<msg timestamp="20201030 18:32:33.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023115083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023247653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:33.000" endtime="20201030 18:32:33.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023115083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023247653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:33.308" endtime="20201030 18:32:33.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.316" endtime="20201030 18:32:33.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.997" endtime="20201030 18:32:33.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.995" endtime="20201030 18:32:33.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:33.323" level="INFO">${RESULT} = [{'diff': 0.00013256999999999852}, {'diff': 0.00013272300000000126}, {'diff': 0.00013245900000000144}, {'diff': 0.00013275000000000092}, {'diff': 0.0001330129999999978}, {'diff': 0.0001322220000000012...</msg>
<status status="PASS" starttime="20201030 18:32:33.320" endtime="20201030 18:32:33.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:33.327" level="INFO">${ACCURACY} = {'diff': [0.00013256999999999852, 0.00013272300000000126, 0.00013245900000000144, 0.00013275000000000092, 0.0001330129999999978, 0.00013222200000000128, 0.00013304200000000335, 0.0001329449999999989, ...</msg>
<status status="PASS" starttime="20201030 18:32:33.324" endtime="20201030 18:32:33.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.331" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 18:32:33.330" endtime="20201030 18:32:33.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.334" level="INFO">VALUE: [0.00013256999999999852, 0.00013272300000000126, 0.00013245900000000144, 0.00013275000000000092, 0.0001330129999999978, 0.00013222200000000128, 0.00013304200000000335, 0.0001329449999999989, 0.00013251400000000024, 0.00013250000000000067, 0.00013213899999999987, 0.0001321799999999991, 0.00013308299999999912, 0.00013300000000000117, 0.00013279199999999963, 0.00013233299999999837, 0.00013308400000000206, 0.0001327090000000017, 0.000132473000000001, 0.0001327080000000022, 0.0001330830000000026, 0.00013227799999999956, 0.00013245800000000196, 0.00013305600000000292, 0.00013291699999999976, 0.00013301400000000074, 0.0001321380000000004, 0.0001327640000000005, 0.00013297200000000203, 0.0001324579999999985, 0.0001329449999999989, 0.00013215299999999944, 0.00013284800000000138, 0.00013304099999999694, 0.00013244399999999892, 0.00013280499999999973, 0.0001329999999999977, 0.00013301400000000074, 0.00013305599999999945, 0.00013258299999999862, 0.00013292999999999985, 0.00013258299999999862, 0.00013225000000000042, 0.00013263900000000037, 0.00013305499999999998, 0.0001323470000000014, 0.00013263900000000037, 0.00013213899999999987, 0.00013213899999999987, 0.00013294399999999942]</msg>
<status status="PASS" starttime="20201030 18:32:33.333" endtime="20201030 18:32:33.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.328" endtime="20201030 18:32:33.336"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:33.340" endtime="20201030 18:32:33.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.338" endtime="20201030 18:32:33.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.337" endtime="20201030 18:32:33.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.958" endtime="20201030 18:32:33.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:32.957" endtime="20201030 18:32:33.360"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.369" endtime="20201030 18:32:33.391"></status>
</kw>
<msg timestamp="20201030 18:32:33.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:33.368" endtime="20201030 18:32:33.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:33.392" endtime="20201030 18:32:33.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.395" endtime="20201030 18:32:33.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.365" endtime="20201030 18:32:33.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.363" endtime="20201030 18:32:33.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.404" endtime="20201030 18:32:33.690"></status>
</kw>
<msg timestamp="20201030 18:32:33.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022262056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022395167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:33.402" endtime="20201030 18:32:33.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022262056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022395167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:33.694" endtime="20201030 18:32:33.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:33.702" endtime="20201030 18:32:33.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.400" endtime="20201030 18:32:33.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.398" endtime="20201030 18:32:33.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:33.709" level="INFO">${RESULT} = [{'diff': 0.00013311100000000173}, {'diff': 0.00013313900000000087}, {'diff': 0.0001331800000000001}, {'diff': 0.00013348599999999863}, {'diff': 0.000133958}, {'diff': 0.00013376399999999802}, {'diff'...</msg>
<status status="PASS" starttime="20201030 18:32:33.705" endtime="20201030 18:32:33.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:32:33.713" level="INFO">${ACCURACY} = {'diff': [0.00013311100000000173, 0.00013313900000000087, 0.0001331800000000001, 0.00013348599999999863, 0.000133958, 0.00013376399999999802, 0.00013361099999999876, 0.0001333340000000023, 0.000133138...</msg>
<status status="PASS" starttime="20201030 18:32:33.709" endtime="20201030 18:32:33.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.718" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 18:32:33.717" endtime="20201030 18:32:33.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.720" level="INFO">VALUE: [0.00013311100000000173, 0.00013313900000000087, 0.0001331800000000001, 0.00013348599999999863, 0.000133958, 0.00013376399999999802, 0.00013361099999999876, 0.0001333340000000023, 0.0001331389999999974, 0.00013341600000000078, 0.00013386100000000248, 0.00013322200000000228, 0.00013401400000000174, 0.00013345899999999897, 0.00013404099999999794, 0.00013401399999999827, 0.000133958, 0.000133860999999999, 0.00013333299999999937, 0.00013390299999999772, 0.00013368100000000008, 0.00013391700000000076, 0.00013400000000000217, 0.00013392999999999738, 0.00013383299999999987, 0.00013316599999999706, 0.00013393100000000033, 0.00013350000000000167, 0.00013369499999999965, 0.00013365300000000094, 0.00013404099999999794, 0.00013333300000000284, 0.00013374999999999845, 0.00013315300000000044, 0.00013318099999999958, 0.0001331389999999974, 0.00013380500000000073, 0.00013404200000000088, 0.00013397299999999904, 0.0001335969999999992, 0.00013406900000000055, 0.00013358299999999962, 0.00013334699999999894, 0.00013407000000000002, 0.0001338340000000028, 0.00013397199999999956, 0.00013384699999999944, 0.000133860999999999, 0.00013406900000000055, 0.0001338060000000002]</msg>
<status status="PASS" starttime="20201030 18:32:33.719" endtime="20201030 18:32:33.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.714" endtime="20201030 18:32:33.722"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:33.725" endtime="20201030 18:32:33.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.724" endtime="20201030 18:32:33.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.723" endtime="20201030 18:32:33.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.361" endtime="20201030 18:32:33.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.361" endtime="20201030 18:32:33.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:54.767" endtime="20201030 18:32:33.746"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:33.750" endtime="20201030 18:32:33.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.749" endtime="20201030 18:32:33.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.747" endtime="20201030 18:32:33.770"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:54.659" endtime="20201030 18:32:33.771" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:31:14.309" endtime="20201030 18:32:33.774"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:32:33.828" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:32:33.837" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:32:34.967" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:32:33.826" endtime="20201030 18:32:34.967"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:32:34.970" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:32:34.968" endtime="20201030 18:32:34.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.825" endtime="20201030 18:32:34.971"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:34.973" endtime="20201030 18:32:35.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:34.971" endtime="20201030 18:32:35.158"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.171" endtime="20201030 18:32:35.186"></status>
</kw>
<msg timestamp="20201030 18:32:35.187" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:35.170" endtime="20201030 18:32:35.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.189" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:35.188" endtime="20201030 18:32:35.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.193" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:35.190" endtime="20201030 18:32:35.193"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:35.167" endtime="20201030 18:32:35.194"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:35.165" endtime="20201030 18:32:35.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.164" endtime="20201030 18:32:35.194"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:35.198" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:35.198" endtime="20201030 18:32:35.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.195" endtime="20201030 18:32:35.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.163" endtime="20201030 18:32:35.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.162" endtime="20201030 18:32:35.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.200" endtime="20201030 18:32:35.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.161" endtime="20201030 18:32:35.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.203" endtime="20201030 18:32:35.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.159" endtime="20201030 18:32:35.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:33.824" endtime="20201030 18:32:35.206"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:35.211" endtime="20201030 18:32:35.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.210" endtime="20201030 18:32:35.231"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.244" endtime="20201030 18:32:35.258"></status>
</kw>
<msg timestamp="20201030 18:32:35.258" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:35.243" endtime="20201030 18:32:35.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.261" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:35.259" endtime="20201030 18:32:35.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:35.264" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:35.262" endtime="20201030 18:32:35.264"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:35.240" endtime="20201030 18:32:35.266"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:35.238" endtime="20201030 18:32:35.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.236" endtime="20201030 18:32:35.267"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:35.270" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:35.270" endtime="20201030 18:32:35.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.268" endtime="20201030 18:32:35.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.236" endtime="20201030 18:32:35.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.235" endtime="20201030 18:32:35.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.272" endtime="20201030 18:32:35.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.234" endtime="20201030 18:32:35.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.232" endtime="20201030 18:32:35.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.209" endtime="20201030 18:32:35.275"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:35.283" endtime="20201030 18:32:41.406"></status>
</kw>
<msg timestamp="20201030 18:32:41.407" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:35.282" endtime="20201030 18:32:41.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.412" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:41.409" endtime="20201030 18:32:41.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.414" endtime="20201030 18:32:41.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.279" endtime="20201030 18:32:41.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.277" endtime="20201030 18:32:41.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:41.426" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201030 18:32:41.421" endtime="20201030 18:32:41.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.434" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:41.432" endtime="20201030 18:32:41.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.438" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:32:41.436" endtime="20201030 18:32:41.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.427" endtime="20201030 18:32:41.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.448" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:41.446" endtime="20201030 18:32:41.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.453" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:32:41.451" endtime="20201030 18:32:41.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.441" endtime="20201030 18:32:41.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.463" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:32:41.461" endtime="20201030 18:32:41.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.467" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 18:32:41.465" endtime="20201030 18:32:41.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.456" endtime="20201030 18:32:41.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.482" endtime="20201030 18:32:41.787"></status>
</kw>
<msg timestamp="20201030 18:32:41.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062763431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162807847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:41.479" endtime="20201030 18:32:41.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062763431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162807847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:41.791" endtime="20201030 18:32:41.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.799" endtime="20201030 18:32:41.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.474" endtime="20201030 18:32:41.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.470" endtime="20201030 18:32:41.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:32:41.806" level="INFO">${FILTERED} = [{'diff': 0.10004441600000001}, {'diff': 0.10000997300000003}, {'diff': 0.10001098599999997}, {'diff': 0.10001097199999998}, {'diff': 0.10001098600000002}, {'diff': 0.10001098600000002}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201030 18:32:41.803" endtime="20201030 18:32:41.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:41.810" level="INFO">${RESULT} = {'diff': [0.10004441600000001, 0.10000997300000003, 0.10001098599999997, 0.10001097199999998, 0.10001098600000002, 0.10001098600000002, 0.10001097199999998, 0.10001102799999995, 0.10001098599999991, 0...</msg>
<status status="PASS" starttime="20201030 18:32:41.807" endtime="20201030 18:32:41.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.814" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:32:41.813" endtime="20201030 18:32:41.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.816" level="INFO">VALUE: [0.10004441600000001, 0.10000997300000003, 0.10001098599999997, 0.10001097199999998, 0.10001098600000002, 0.10001098600000002, 0.10001097199999998, 0.10001102799999995, 0.10001098599999991, 0.10001097200000009, 0.10001098600000002, 0.10001097300000006, 0.10001095799999993, 0.10001097199999998, 0.10001098600000002, 0.10001098600000002, 0.1000109720000002, 0.10001100000000007, 0.10001095900000001, 0.10001091600000023, 0.10001092999999983, 0.10001093099999991, 0.10001095799999993, 0.10001092999999983, 0.10001093099999991, 0.10001093099999991, 0.10001092999999983, 0.100010916, 0.10001093100000036, 0.10001094399999966, 0.10001094399999966, 0.10001091699999964, 0.10001093099999991, 0.10001095799999993, 0.10001090300000026, 0.10001093099999991, 0.10001092999999983, 0.10001093000000028, 0.10001093099999991, 0.10001092999999983, 0.10001094399999921, 0.10001091700000053, 0.10001093099999991, 0.1000109440000001, 0.10001091700000053, 0.10001094399999921, 0.10001092999999983, 0.10001093099999991, 0.10001093099999991, 0.10001095800000037, 0.10001093099999991]</msg>
<status status="PASS" starttime="20201030 18:32:41.815" endtime="20201030 18:32:41.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.811" endtime="20201030 18:32:41.818"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:41.821" endtime="20201030 18:32:41.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.820" endtime="20201030 18:32:41.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.819" endtime="20201030 18:32:41.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:35.276" endtime="20201030 18:32:41.842"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 18:32:35.206" endtime="20201030 18:32:41.842" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:41.849" endtime="20201030 18:32:41.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.847" endtime="20201030 18:32:41.869"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.884" endtime="20201030 18:32:41.899"></status>
</kw>
<msg timestamp="20201030 18:32:41.899" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:41.882" endtime="20201030 18:32:41.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.902" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:41.900" endtime="20201030 18:32:41.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:41.905" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:41.903" endtime="20201030 18:32:41.905"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:41.880" endtime="20201030 18:32:41.906"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:41.877" endtime="20201030 18:32:41.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.876" endtime="20201030 18:32:41.907"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:41.911" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:41.910" endtime="20201030 18:32:41.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.908" endtime="20201030 18:32:41.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.875" endtime="20201030 18:32:41.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.874" endtime="20201030 18:32:41.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.913" endtime="20201030 18:32:41.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.872" endtime="20201030 18:32:41.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.870" endtime="20201030 18:32:41.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.846" endtime="20201030 18:32:41.915"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:41.924" endtime="20201030 18:32:48.047"></status>
</kw>
<msg timestamp="20201030 18:32:48.048" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:41.922" endtime="20201030 18:32:48.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.054" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:48.051" endtime="20201030 18:32:48.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:48.058" endtime="20201030 18:32:48.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.920" endtime="20201030 18:32:48.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.918" endtime="20201030 18:32:48.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:48.070" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201030 18:32:48.066" endtime="20201030 18:32:48.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.079" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:48.077" endtime="20201030 18:32:48.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.086" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:32:48.082" endtime="20201030 18:32:48.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.072" endtime="20201030 18:32:48.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.096" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:48.094" endtime="20201030 18:32:48.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.101" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:32:48.099" endtime="20201030 18:32:48.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.089" endtime="20201030 18:32:48.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.110" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:32:48.109" endtime="20201030 18:32:48.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.112" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 18:32:48.111" endtime="20201030 18:32:48.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.104" endtime="20201030 18:32:48.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:48.120" endtime="20201030 18:32:48.415"></status>
</kw>
<msg timestamp="20201030 18:32:48.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065722611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165797625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:48.118" endtime="20201030 18:32:48.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065722611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165797625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:48.419" endtime="20201030 18:32:48.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:48.427" endtime="20201030 18:32:48.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.116" endtime="20201030 18:32:48.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.114" endtime="20201030 18:32:48.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:32:48.433" level="INFO">${FILTERED} = [{'diff': 0.100075014}, {'diff': 0.09998182}, {'diff': 0.10001094399999999}, {'diff': 0.10001098600000002}, {'diff': 0.10001095799999998}, {'diff': 0.10001095900000001}, {'diff': 0.10001095799999993},...</msg>
<status status="PASS" starttime="20201030 18:32:48.430" endtime="20201030 18:32:48.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:48.440" level="INFO">${RESULT} = {'diff': [0.100075014, 0.09998182, 0.10001094399999999, 0.10001098600000002, 0.10001095799999998, 0.10001095900000001, 0.10001095799999993, 0.10001095900000001, 0.10001094399999999, 0.1000109590000000...</msg>
<status status="PASS" starttime="20201030 18:32:48.434" endtime="20201030 18:32:48.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.445" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:32:48.443" endtime="20201030 18:32:48.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.447" level="INFO">VALUE: [0.100075014, 0.09998182, 0.10001094399999999, 0.10001098600000002, 0.10001095799999998, 0.10001095900000001, 0.10001095799999993, 0.10001095900000001, 0.10001094399999999, 0.10001095900000001, 0.10001095800000015, 0.10001094499999996, 0.10001097199999998, 0.10001095900000001, 0.1000110139999999, 0.10001097300000006, 0.10001097199999998, 0.10001094499999996, 0.10001087499999994, 0.10001090299999982, 0.10001088899999999, 0.10001087500000017, 0.100010916, 0.100010916, 0.10001090299999982, 0.10001087500000017, 0.10001091700000009, 0.10001090299999982, 0.10001088899999999, 0.10001090300000026, 0.10001091700000009, 0.10001093100000036, 0.10001090299999982, 0.10001090300000026, 0.100010916, 0.10001087499999972, 0.10001090200000018, 0.10001090200000018, 0.10001088899999999, 0.10001090299999982, 0.10001088899999999, 0.10001095900000045, 0.10001090300000026, 0.10001091699999964, 0.1000109440000001, 0.10001090300000026, 0.10001090299999937, 0.10001090300000026, 0.10001091600000045, 0.10001090200000018, 0.10001090200000018]</msg>
<status status="PASS" starttime="20201030 18:32:48.446" endtime="20201030 18:32:48.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.441" endtime="20201030 18:32:48.449"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:48.452" endtime="20201030 18:32:48.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.451" endtime="20201030 18:32:48.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.450" endtime="20201030 18:32:48.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:41.916" endtime="20201030 18:32:48.473"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 18:32:41.844" endtime="20201030 18:32:48.473" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:48.480" endtime="20201030 18:32:48.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.478" endtime="20201030 18:32:48.499"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:48.512" endtime="20201030 18:32:48.527"></status>
</kw>
<msg timestamp="20201030 18:32:48.527" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:48.511" endtime="20201030 18:32:48.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.529" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:48.528" endtime="20201030 18:32:48.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:48.532" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:48.530" endtime="20201030 18:32:48.533"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:48.508" endtime="20201030 18:32:48.533"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:48.506" endtime="20201030 18:32:48.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.505" endtime="20201030 18:32:48.534"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:48.538" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:48.537" endtime="20201030 18:32:48.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.535" endtime="20201030 18:32:48.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.504" endtime="20201030 18:32:48.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.503" endtime="20201030 18:32:48.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:48.540" endtime="20201030 18:32:48.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.502" endtime="20201030 18:32:48.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.500" endtime="20201030 18:32:48.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.477" endtime="20201030 18:32:48.542"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:48.551" endtime="20201030 18:32:54.674"></status>
</kw>
<msg timestamp="20201030 18:32:54.675" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:48.550" endtime="20201030 18:32:54.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:54.680" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:54.677" endtime="20201030 18:32:54.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:54.683" endtime="20201030 18:32:54.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.547" endtime="20201030 18:32:54.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.544" endtime="20201030 18:32:54.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:54.693" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201030 18:32:54.690" endtime="20201030 18:32:54.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:54.702" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:54.700" endtime="20201030 18:32:54.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:54.706" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:32:54.704" endtime="20201030 18:32:54.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.695" endtime="20201030 18:32:54.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:54.715" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:32:54.713" endtime="20201030 18:32:54.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:54.720" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:32:54.718" endtime="20201030 18:32:54.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.709" endtime="20201030 18:32:54.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:54.729" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:32:54.727" endtime="20201030 18:32:54.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:54.734" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 18:32:54.732" endtime="20201030 18:32:54.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.723" endtime="20201030 18:32:54.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:54.748" endtime="20201030 18:32:55.049"></status>
</kw>
<msg timestamp="20201030 18:32:55.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062816583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163005597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:54.745" endtime="20201030 18:32:55.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062816583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163005597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:32:55.053" endtime="20201030 18:32:55.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:55.061" endtime="20201030 18:32:55.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.740" endtime="20201030 18:32:55.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:54.737" endtime="20201030 18:32:55.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:32:55.067" level="INFO">${FILTERED} = [{'diff': 0.100189014}, {'diff': 0.099866333}, {'diff': 0.100011931}, {'diff': 0.10001093}, {'diff': 0.100010916}, {'diff': 0.10001099999999996}, {'diff': 0.10001097199999998}, {'diff': 0.100010930000...</msg>
<status status="PASS" starttime="20201030 18:32:55.064" endtime="20201030 18:32:55.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:32:55.072" level="INFO">${RESULT} = {'diff': [0.100189014, 0.099866333, 0.100011931, 0.10001093, 0.100010916, 0.10001099999999996, 0.10001097199999998, 0.10001093000000005, 0.10001094399999999, 0.10001093100000014, 0.10001093100000014, ...</msg>
<status status="PASS" starttime="20201030 18:32:55.068" endtime="20201030 18:32:55.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.076" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:32:55.075" endtime="20201030 18:32:55.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.078" level="INFO">VALUE: [0.100189014, 0.099866333, 0.100011931, 0.10001093, 0.100010916, 0.10001099999999996, 0.10001097199999998, 0.10001093000000005, 0.10001094399999999, 0.10001093100000014, 0.10001093100000014, 0.10001084700000007, 0.10001087499999994, 0.10001087499999994, 0.10001087499999994, 0.10001087499999994, 0.10001088899999999, 0.10001087499999994, 0.10001087499999994, 0.10001088899999999, 0.10001088899999999, 0.10001093099999991, 0.10001086199999998, 0.10001090299999982, 0.10001086100000034, 0.1000108609999999, 0.10001087500000017, 0.10001087500000017, 0.10001086199999998, 0.10001088899999999, 0.10001087499999972, 0.10001087499999972, 0.10001087500000017, 0.10001091699999964, 0.10001088899999999, 0.10001088899999999, 0.10001088799999991, 0.10001090199999974, 0.10001084700000007, 0.10001087500000017, 0.10001087499999972, 0.10001088899999999, 0.10001086100000034, 0.10001087500000061, 0.10001090299999937, 0.10001084800000015, 0.10001087500000061, 0.10001088899999999, 0.10001092999999983, 0.10001091700000053, 0.10001086099999945]</msg>
<status status="PASS" starttime="20201030 18:32:55.077" endtime="20201030 18:32:55.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.073" endtime="20201030 18:32:55.080"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:55.083" endtime="20201030 18:32:55.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.082" endtime="20201030 18:32:55.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.081" endtime="20201030 18:32:55.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:48.543" endtime="20201030 18:32:55.104"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 18:32:48.475" endtime="20201030 18:32:55.104" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:32:55.111" endtime="20201030 18:32:55.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.109" endtime="20201030 18:32:55.131"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:55.144" endtime="20201030 18:32:55.158"></status>
</kw>
<msg timestamp="20201030 18:32:55.159" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:55.143" endtime="20201030 18:32:55.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.161" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:55.160" endtime="20201030 18:32:55.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:32:55.164" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:32:55.162" endtime="20201030 18:32:55.164"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:55.139" endtime="20201030 18:32:55.165"></status>
</kw>
<status status="FAIL" starttime="20201030 18:32:55.137" endtime="20201030 18:32:55.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.136" endtime="20201030 18:32:55.166"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:32:55.169" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:32:55.169" endtime="20201030 18:32:55.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.167" endtime="20201030 18:32:55.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.135" endtime="20201030 18:32:55.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.134" endtime="20201030 18:32:55.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:55.171" endtime="20201030 18:32:55.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.133" endtime="20201030 18:32:55.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.131" endtime="20201030 18:32:55.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.108" endtime="20201030 18:32:55.174"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:32:55.182" endtime="20201030 18:33:01.304"></status>
</kw>
<msg timestamp="20201030 18:33:01.305" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:32:55.180" endtime="20201030 18:33:01.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:01.310" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:01.307" endtime="20201030 18:33:01.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:01.313" endtime="20201030 18:33:01.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.178" endtime="20201030 18:33:01.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.176" endtime="20201030 18:33:01.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:01.324" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201030 18:33:01.320" endtime="20201030 18:33:01.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:01.332" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:33:01.330" endtime="20201030 18:33:01.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:01.337" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:33:01.335" endtime="20201030 18:33:01.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.325" endtime="20201030 18:33:01.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:01.346" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:33:01.344" endtime="20201030 18:33:01.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:01.350" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:33:01.348" endtime="20201030 18:33:01.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.339" endtime="20201030 18:33:01.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:01.360" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:33:01.358" endtime="20201030 18:33:01.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:01.364" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 18:33:01.362" endtime="20201030 18:33:01.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.353" endtime="20201030 18:33:01.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:01.382" endtime="20201030 18:33:01.681"></status>
</kw>
<msg timestamp="20201030 18:33:01.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062115806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162405111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:01.379" endtime="20201030 18:33:01.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:01.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062115806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162405111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:01.685" endtime="20201030 18:33:01.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:01.693" endtime="20201030 18:33:01.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.371" endtime="20201030 18:33:01.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.367" endtime="20201030 18:33:01.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:33:01.700" level="INFO">${FILTERED} = [{'diff': 0.100289305}, {'diff': 0.099767792}, {'diff': 0.10040273599999999}, {'diff': 0.09961932000000001}, {'diff': 0.10001199999999999}, {'diff': 0.10001101299999993}, {'diff': 0.10001099999999996}...</msg>
<status status="PASS" starttime="20201030 18:33:01.697" endtime="20201030 18:33:01.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:01.704" level="INFO">${RESULT} = {'diff': [0.100289305, 0.099767792, 0.10040273599999999, 0.09961932000000001, 0.10001199999999999, 0.10001101299999993, 0.10001099999999996, 0.1000110139999999, 0.10001099999999996, 0.1000109999999999...</msg>
<status status="PASS" starttime="20201030 18:33:01.701" endtime="20201030 18:33:01.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:01.708" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:33:01.707" endtime="20201030 18:33:01.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:01.711" level="INFO">VALUE: [0.100289305, 0.099767792, 0.10040273599999999, 0.09961932000000001, 0.10001199999999999, 0.10001101299999993, 0.10001099999999996, 0.1000110139999999, 0.10001099999999996, 0.10001099999999996, 0.10001100000000007, 0.10001097300000006, 0.10001095799999993, 0.10001094499999996, 0.10001095799999993, 0.10001095900000001, 0.10001095799999993, 0.10001095900000001, 0.10001098600000002, 0.10001095899999979, 0.10001094399999966, 0.10001098600000002, 0.10001095799999993, 0.10001099999999985, 0.1000109440000001, 0.10001104200000022, 0.10001097199999975, 0.1000109440000001, 0.10001095799999993, 0.10001095799999993, 0.10001099999999985, 0.10001095799999993, 0.10001097299999984, 0.10001095800000037, 0.10001094499999974, 0.10001095799999993, 0.10001095900000001, 0.10001095799999993, 0.1000109720000002, 0.1000109720000002, 0.10001097199999975, 0.10001093099999991, 0.10001097200000064, 0.10001095900000045, 0.10001095799999948, 0.10001097300000072, 0.10001097199999975, 0.10001094500000018, 0.10001097199999975, 0.10001098600000002, 0.10001098600000002]</msg>
<status status="PASS" starttime="20201030 18:33:01.709" endtime="20201030 18:33:01.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.705" endtime="20201030 18:33:01.712"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:01.716" endtime="20201030 18:33:01.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.714" endtime="20201030 18:33:01.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.713" endtime="20201030 18:33:01.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:32:55.175" endtime="20201030 18:33:01.737"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 18:32:55.106" endtime="20201030 18:33:01.738" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:01.745" endtime="20201030 18:33:01.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.743" endtime="20201030 18:33:01.765"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:01.778" endtime="20201030 18:33:01.793"></status>
</kw>
<msg timestamp="20201030 18:33:01.793" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:01.776" endtime="20201030 18:33:01.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:01.796" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:01.794" endtime="20201030 18:33:01.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:33:01.799" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:33:01.797" endtime="20201030 18:33:01.799"></status>
</kw>
<status status="FAIL" starttime="20201030 18:33:01.774" endtime="20201030 18:33:01.800"></status>
</kw>
<status status="FAIL" starttime="20201030 18:33:01.771" endtime="20201030 18:33:01.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.770" endtime="20201030 18:33:01.801"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:33:01.805" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:33:01.804" endtime="20201030 18:33:01.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.802" endtime="20201030 18:33:01.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.769" endtime="20201030 18:33:01.806"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.769" endtime="20201030 18:33:01.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:01.806" endtime="20201030 18:33:01.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.767" endtime="20201030 18:33:01.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.765" endtime="20201030 18:33:01.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.742" endtime="20201030 18:33:01.809"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:01.819" endtime="20201030 18:33:07.947"></status>
</kw>
<msg timestamp="20201030 18:33:07.949" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:01.816" endtime="20201030 18:33:07.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:07.957" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:07.952" endtime="20201030 18:33:07.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:07.961" endtime="20201030 18:33:07.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.813" endtime="20201030 18:33:07.967"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.811" endtime="20201030 18:33:07.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:07.973" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201030 18:33:07.969" endtime="20201030 18:33:07.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:07.981" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:33:07.979" endtime="20201030 18:33:07.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:07.985" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:33:07.983" endtime="20201030 18:33:07.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.974" endtime="20201030 18:33:07.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:07.995" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:33:07.993" endtime="20201030 18:33:07.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:07.999" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:33:07.997" endtime="20201030 18:33:08.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:07.988" endtime="20201030 18:33:08.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:08.010" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:33:08.007" endtime="20201030 18:33:08.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:08.014" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 18:33:08.012" endtime="20201030 18:33:08.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.003" endtime="20201030 18:33:08.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:08.029" endtime="20201030 18:33:08.330"></status>
</kw>
<msg timestamp="20201030 18:33:08.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065064653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165475361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:08.026" endtime="20201030 18:33:08.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:08.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065064653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165475361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:08.334" endtime="20201030 18:33:08.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:08.342" endtime="20201030 18:33:08.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.020" endtime="20201030 18:33:08.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.017" endtime="20201030 18:33:08.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:33:08.349" level="INFO">${FILTERED} = [{'diff': 0.10041070799999999}, {'diff': 0.10008959799999997}, {'diff': 0.099566569}, {'diff': 0.10001198699999997}, {'diff': 0.10001099999999996}, {'diff': 0.10001098599999991}, {'diff': 0.1000109730...</msg>
<status status="PASS" starttime="20201030 18:33:08.346" endtime="20201030 18:33:08.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:08.354" level="INFO">${RESULT} = {'diff': [0.10041070799999999, 0.10008959799999997, 0.099566569, 0.10001198699999997, 0.10001099999999996, 0.10001098599999991, 0.10001097300000006, 0.10001095800000004, 0.10001098600000002, 0.1000109...</msg>
<status status="PASS" starttime="20201030 18:33:08.350" endtime="20201030 18:33:08.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:08.358" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:33:08.357" endtime="20201030 18:33:08.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:08.360" level="INFO">VALUE: [0.10041070799999999, 0.10008959799999997, 0.099566569, 0.10001198699999997, 0.10001099999999996, 0.10001098599999991, 0.10001097300000006, 0.10001095800000004, 0.10001098600000002, 0.1000109589999999, 0.10001097199999998, 0.10001097199999998, 0.10001098699999988, 0.10001095800000015, 0.10001097199999998, 0.10001097299999984, 0.1000109859999998, 0.10001095799999993, 0.10001100000000007, 0.10001098600000002, 0.10001091700000009, 0.10001098600000002, 0.10001095799999993, 0.10001090299999982, 0.10001091699999964, 0.10001094499999974, 0.10001092999999983, 0.10001092999999983, 0.10001093099999991, 0.10001093100000036, 0.10001092999999983, 0.10001091700000009, 0.10001093099999991, 0.10001099999999985, 0.10001094399999966, 0.10001093099999991, 0.100010916, 0.10001092999999983, 0.10001091700000009, 0.10001098600000047, 0.10001092999999983, 0.10001091699999964, 0.10001095799999948, 0.10001097199999975, 0.10001093099999991, 0.10001093099999991, 0.1000109440000001, 0.10001091700000053, 0.10001091699999964, 0.10001095800000037, 0.10001091699999964]</msg>
<status status="PASS" starttime="20201030 18:33:08.359" endtime="20201030 18:33:08.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.354" endtime="20201030 18:33:08.361"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:08.365" endtime="20201030 18:33:08.384"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.364" endtime="20201030 18:33:08.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.362" endtime="20201030 18:33:08.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:01.810" endtime="20201030 18:33:08.386"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 18:33:01.739" endtime="20201030 18:33:08.386" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:08.393" endtime="20201030 18:33:08.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.391" endtime="20201030 18:33:08.413"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:08.425" endtime="20201030 18:33:08.440"></status>
</kw>
<msg timestamp="20201030 18:33:08.441" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:08.424" endtime="20201030 18:33:08.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:08.443" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:08.442" endtime="20201030 18:33:08.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:33:08.446" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:33:08.445" endtime="20201030 18:33:08.447"></status>
</kw>
<status status="FAIL" starttime="20201030 18:33:08.421" endtime="20201030 18:33:08.447"></status>
</kw>
<status status="FAIL" starttime="20201030 18:33:08.419" endtime="20201030 18:33:08.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.418" endtime="20201030 18:33:08.448"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:33:08.452" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:33:08.451" endtime="20201030 18:33:08.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.449" endtime="20201030 18:33:08.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.417" endtime="20201030 18:33:08.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.416" endtime="20201030 18:33:08.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:08.454" endtime="20201030 18:33:08.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.415" endtime="20201030 18:33:08.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.413" endtime="20201030 18:33:08.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.390" endtime="20201030 18:33:08.456"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:08.464" endtime="20201030 18:33:14.587"></status>
</kw>
<msg timestamp="20201030 18:33:14.588" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:08.463" endtime="20201030 18:33:14.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:14.593" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:33:14.590" endtime="20201030 18:33:14.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:14.596" endtime="20201030 18:33:14.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.460" endtime="20201030 18:33:14.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.458" endtime="20201030 18:33:14.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:14.607" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201030 18:33:14.603" endtime="20201030 18:33:14.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:14.615" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:33:14.613" endtime="20201030 18:33:14.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:14.620" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:33:14.618" endtime="20201030 18:33:14.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.609" endtime="20201030 18:33:14.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:14.629" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:33:14.627" endtime="20201030 18:33:14.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:14.634" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:33:14.632" endtime="20201030 18:33:14.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.623" endtime="20201030 18:33:14.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:14.644" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:33:14.641" endtime="20201030 18:33:14.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:14.648" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 18:33:14.646" endtime="20201030 18:33:14.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.637" endtime="20201030 18:33:14.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:14.663" endtime="20201030 18:33:14.971"></status>
</kw>
<msg timestamp="20201030 18:33:14.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062649181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163218875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:14.660" endtime="20201030 18:33:14.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:33:14.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062649181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163218875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:33:14.975" endtime="20201030 18:33:14.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:33:14.983" endtime="20201030 18:33:14.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.654" endtime="20201030 18:33:14.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.651" endtime="20201030 18:33:14.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:33:14.989" level="INFO">${FILTERED} = [{'diff': 0.10056969400000002}, {'diff': 0.09965431999999999}, {'diff': 0.09965379099999999}, {'diff': 0.100070944}, {'diff': 0.09972313899999996}, {'diff': 0.10001199999999999}, {'diff': 0.1000109300...</msg>
<status status="PASS" starttime="20201030 18:33:14.986" endtime="20201030 18:33:14.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:33:14.993" level="INFO">${RESULT} = {'diff': [0.10056969400000002, 0.09965431999999999, 0.09965379099999999, 0.100070944, 0.09972313899999996, 0.10001199999999999, 0.10001093000000005, 0.10001095900000001, 0.10001093000000005, 0.1000109...</msg>
<status status="PASS" starttime="20201030 18:33:14.990" endtime="20201030 18:33:14.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:33:14.997" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:33:14.996" endtime="20201030 18:33:14.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:33:15.000" level="INFO">VALUE: [0.10056969400000002, 0.09965431999999999, 0.09965379099999999, 0.100070944, 0.09972313899999996, 0.10001199999999999, 0.10001093000000005, 0.10001095900000001, 0.10001093000000005, 0.10001095799999993, 0.10001094499999996, 0.10001097199999998, 0.10001091699999987, 0.10001092999999983, 0.1000110139999999, 0.100010916, 0.10001094399999988, 0.10001095900000001, 0.100010916, 0.10001087500000017, 0.10001087499999972, 0.10001088899999999, 0.10001088899999999, 0.10001088899999999, 0.10001090300000026, 0.10001087500000017, 0.10001087499999972, 0.10001088899999999, 0.10001088899999999, 0.10001088899999999, 0.10001088899999999, 0.10001088899999999, 0.10001087500000017, 0.10001088899999999, 0.10001088899999999, 0.10001088899999999, 0.10001087500000017, 0.10001088899999999, 0.1000108609999999, 0.10001090199999974, 0.10001087500000061, 0.10001088899999999, 0.10001091600000045, 0.10001086199999953, 0.10001090299999937, 0.10001090299999937, 0.10001087500000061, 0.10001090300000026, 0.10001090300000026, 0.10001087499999972, 0.10001088899999999]</msg>
<status status="PASS" starttime="20201030 18:33:14.998" endtime="20201030 18:33:15.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:14.994" endtime="20201030 18:33:15.001"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:33:15.005" endtime="20201030 18:33:15.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.003" endtime="20201030 18:33:15.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:15.002" endtime="20201030 18:33:15.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:33:08.457" endtime="20201030 18:33:15.025"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 18:33:08.388" endtime="20201030 18:33:15.026" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:32:33.783" endtime="20201030 18:33:15.033"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f091rc</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201030 18:30:29.150" endtime="20201030 18:33:15.064"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_nucleo-f091rc</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
