<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 12:46:02.532" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.154" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:46:03.163" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:46:04.311" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:46:03.153" endtime="20201029 12:46:04.313"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.318" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:46:04.315" endtime="20201029 12:46:04.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.151" endtime="20201029 12:46:04.320"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:04.324" endtime="20201029 12:46:04.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.321" endtime="20201029 12:46:04.583"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.597" endtime="20201029 12:46:04.611"></status>
</kw>
<msg timestamp="20201029 12:46:04.611" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Succ...</msg>
<status status="PASS" starttime="20201029 12:46:04.595" endtime="20201029 12:46:04.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.614" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Succ...</msg>
<status status="PASS" starttime="20201029 12:46:04.612" endtime="20201029 12:46:04.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.617" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:04.615" endtime="20201029 12:46:04.618"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:04.593" endtime="20201029 12:46:04.618"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:04.590" endtime="20201029 12:46:04.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.589" endtime="20201029 12:46:04.619"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:04.623" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:04.623" endtime="20201029 12:46:04.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.620" endtime="20201029 12:46:04.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.588" endtime="20201029 12:46:04.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.587" endtime="20201029 12:46:04.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.625" endtime="20201029 12:46:04.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.586" endtime="20201029 12:46:04.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.628" endtime="20201029 12:46:04.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.584" endtime="20201029 12:46:04.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.149" endtime="20201029 12:46:04.631"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:04.637" endtime="20201029 12:46:04.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.635" endtime="20201029 12:46:04.657"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.672" endtime="20201029 12:46:04.687"></status>
</kw>
<msg timestamp="20201029 12:46:04.688" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:04.671" endtime="20201029 12:46:04.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.690" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:04.689" endtime="20201029 12:46:04.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.693" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:04.691" endtime="20201029 12:46:04.694"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:04.668" endtime="20201029 12:46:04.694"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:04.665" endtime="20201029 12:46:04.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.664" endtime="20201029 12:46:04.695"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:04.699" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:04.698" endtime="20201029 12:46:04.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.696" endtime="20201029 12:46:04.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.663" endtime="20201029 12:46:04.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.662" endtime="20201029 12:46:04.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.701" endtime="20201029 12:46:04.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.659" endtime="20201029 12:46:04.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.658" endtime="20201029 12:46:04.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.634" endtime="20201029 12:46:04.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.710" endtime="20201029 12:46:04.721"></status>
</kw>
<msg timestamp="20201029 12:46:04.721" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:04.709" endtime="20201029 12:46:04.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.724" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:04.722" endtime="20201029 12:46:04.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.725" endtime="20201029 12:46:04.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.706" endtime="20201029 12:46:04.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.704" endtime="20201029 12:46:04.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.731" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 12:46:04.730" endtime="20201029 12:46:04.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.734" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201029 12:46:04.733" endtime="20201029 12:46:04.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.728" endtime="20201029 12:46:04.734"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:04.631" endtime="20201029 12:46:04.735" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:46:02.660" endtime="20201029 12:46:04.737"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.790" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:46:04.799" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:46:05.999" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:46:04.789" endtime="20201029 12:46:06.001"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.008" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:46:06.003" endtime="20201029 12:46:06.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.788" endtime="20201029 12:46:06.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:06.014" endtime="20201029 12:46:06.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.011" endtime="20201029 12:46:06.238"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.251" endtime="20201029 12:46:06.266"></status>
</kw>
<msg timestamp="20201029 12:46:06.267" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:06.250" endtime="20201029 12:46:06.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.269" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:06.268" endtime="20201029 12:46:06.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.273" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:06.270" endtime="20201029 12:46:06.273"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:06.247" endtime="20201029 12:46:06.274"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:06.244" endtime="20201029 12:46:06.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.243" endtime="20201029 12:46:06.275"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:06.278" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:06.278" endtime="20201029 12:46:06.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.275" endtime="20201029 12:46:06.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.242" endtime="20201029 12:46:06.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.241" endtime="20201029 12:46:06.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.280" endtime="20201029 12:46:06.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.240" endtime="20201029 12:46:06.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.283" endtime="20201029 12:46:06.285"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.238" endtime="20201029 12:46:06.285"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.787" endtime="20201029 12:46:06.285"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:06.294" endtime="20201029 12:46:06.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.291" endtime="20201029 12:46:06.315"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.331" endtime="20201029 12:46:06.345"></status>
</kw>
<msg timestamp="20201029 12:46:06.346" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:06.329" endtime="20201029 12:46:06.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.348" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:06.347" endtime="20201029 12:46:06.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.352" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:06.350" endtime="20201029 12:46:06.352"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:06.326" endtime="20201029 12:46:06.353"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:06.324" endtime="20201029 12:46:06.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.323" endtime="20201029 12:46:06.354"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:06.358" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:06.357" endtime="20201029 12:46:06.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.355" endtime="20201029 12:46:06.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.322" endtime="20201029 12:46:06.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.321" endtime="20201029 12:46:06.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.359" endtime="20201029 12:46:06.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.319" endtime="20201029 12:46:06.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.317" endtime="20201029 12:46:06.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.289" endtime="20201029 12:46:06.362"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.371" endtime="20201029 12:46:06.382"></status>
</kw>
<msg timestamp="20201029 12:46:06.383" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:06.370" endtime="20201029 12:46:06.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.385" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:06.384" endtime="20201029 12:46:06.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.386" endtime="20201029 12:46:06.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.367" endtime="20201029 12:46:06.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.365" endtime="20201029 12:46:06.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.396" endtime="20201029 12:46:06.686"></status>
</kw>
<msg timestamp="20201029 12:46:06.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066806417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066806889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:06.394" endtime="20201029 12:46:06.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066806417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066806889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:06.690" endtime="20201029 12:46:06.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.698" endtime="20201029 12:46:06.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.391" endtime="20201029 12:46:06.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.389" endtime="20201029 12:46:06.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:06.705" level="INFO">${RESULT} = [{'diff': 4.7199999998748243e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999998748243e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201029 12:46:06.701" endtime="20201029 12:46:06.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:06.710" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86...</msg>
<status status="PASS" starttime="20201029 12:46:06.706" endtime="20201029 12:46:06.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.715" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:06.714" endtime="20201029 12:46:06.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.717" level="INFO">VALUE: [4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.86000000007869e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.870000000073427e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.859999999939912e-07, 4.86000000007869e-07, 4.870000000073427e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201029 12:46:06.716" endtime="20201029 12:46:06.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.711" endtime="20201029 12:46:06.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.364" endtime="20201029 12:46:06.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.363" endtime="20201029 12:46:06.718"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.726" endtime="20201029 12:46:06.739"></status>
</kw>
<msg timestamp="20201029 12:46:06.740" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:06.725" endtime="20201029 12:46:06.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.745" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:06.742" endtime="20201029 12:46:06.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.747" endtime="20201029 12:46:06.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.722" endtime="20201029 12:46:06.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.721" endtime="20201029 12:46:06.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.766" endtime="20201029 12:46:07.078"></status>
</kw>
<msg timestamp="20201029 12:46:07.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067504444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067504931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:06.763" endtime="20201029 12:46:07.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067504444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067504931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:07.083" endtime="20201029 12:46:07.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.099" endtime="20201029 12:46:07.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.757" endtime="20201029 12:46:07.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.754" endtime="20201029 12:46:07.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:07.107" level="INFO">${RESULT} = [{'diff': 4.870000000073427e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201029 12:46:07.103" endtime="20201029 12:46:07.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:07.112" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.870000000073427e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720...</msg>
<status status="PASS" starttime="20201029 12:46:07.108" endtime="20201029 12:46:07.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.116" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:07.115" endtime="20201029 12:46:07.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.119" level="INFO">VALUE: [4.870000000073427e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999662357e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.859999999662357e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.859999999662357e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.860000000217468e-07, 4.859999999662357e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.869999999934649e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07]</msg>
<status status="PASS" starttime="20201029 12:46:07.117" endtime="20201029 12:46:07.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.113" endtime="20201029 12:46:07.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.719" endtime="20201029 12:46:07.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.719" endtime="20201029 12:46:07.120"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.130" endtime="20201029 12:46:07.140"></status>
</kw>
<msg timestamp="20201029 12:46:07.141" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:07.128" endtime="20201029 12:46:07.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.143" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:07.142" endtime="20201029 12:46:07.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.144" endtime="20201029 12:46:07.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.124" endtime="20201029 12:46:07.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.123" endtime="20201029 12:46:07.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.154" endtime="20201029 12:46:07.467"></status>
</kw>
<msg timestamp="20201029 12:46:07.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.411761403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.411761875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:07.152" endtime="20201029 12:46:07.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.411761403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.411761875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:07.474" endtime="20201029 12:46:07.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.487" endtime="20201029 12:46:07.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.149" endtime="20201029 12:46:07.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.148" endtime="20201029 12:46:07.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:07.499" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.7199999997360464e-07}...</msg>
<status status="PASS" starttime="20201029 12:46:07.494" endtime="20201029 12:46:07.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:07.508" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7300000000083386e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4....</msg>
<status status="PASS" starttime="20201029 12:46:07.501" endtime="20201029 12:46:07.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.515" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:07.513" endtime="20201029 12:46:07.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.520" level="INFO">VALUE: [4.7199999997360464e-07, 4.7300000000083386e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.869999999934649e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7200000008462695e-07, 4.869999999934649e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.859999999107245e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.869999999934649e-07, 4.860000000217468e-07, 4.869999999934649e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7200000008462695e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.859999999107245e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:46:07.517" endtime="20201029 12:46:07.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.510" endtime="20201029 12:46:07.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.121" endtime="20201029 12:46:07.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.121" endtime="20201029 12:46:07.523"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.540" endtime="20201029 12:46:07.560"></status>
</kw>
<msg timestamp="20201029 12:46:07.562" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:07.535" endtime="20201029 12:46:07.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.570" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:07.566" endtime="20201029 12:46:07.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.573" endtime="20201029 12:46:07.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.529" endtime="20201029 12:46:07.580"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.526" endtime="20201029 12:46:07.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.602" endtime="20201029 12:46:07.913"></status>
</kw>
<msg timestamp="20201029 12:46:07.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.804850319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.804850792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:07.597" endtime="20201029 12:46:07.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.804850319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.804850792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:07.918" endtime="20201029 12:46:07.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.928" endtime="20201029 12:46:07.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.589" endtime="20201029 12:46:07.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.584" endtime="20201029 12:46:07.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:07.935" level="INFO">${RESULT} = [{'diff': 4.729999999453227e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.7199999997360464e-07}...</msg>
<status status="PASS" starttime="20201029 12:46:07.931" endtime="20201029 12:46:07.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:07.940" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.729999999453227e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4...</msg>
<status status="PASS" starttime="20201029 12:46:07.936" endtime="20201029 12:46:07.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.945" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:07.944" endtime="20201029 12:46:07.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.947" level="INFO">VALUE: [4.729999999453227e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.859999999107245e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:46:07.946" endtime="20201029 12:46:07.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.941" endtime="20201029 12:46:07.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.524" endtime="20201029 12:46:07.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.523" endtime="20201029 12:46:07.949"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.956" endtime="20201029 12:46:07.966"></status>
</kw>
<msg timestamp="20201029 12:46:07.967" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:07.955" endtime="20201029 12:46:07.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.969" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:07.968" endtime="20201029 12:46:07.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.970" endtime="20201029 12:46:07.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.952" endtime="20201029 12:46:07.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.951" endtime="20201029 12:46:07.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.980" endtime="20201029 12:46:08.294"></status>
</kw>
<msg timestamp="20201029 12:46:08.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.210900875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.210901347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:07.979" endtime="20201029 12:46:08.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.210900875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.210901347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:08.299" endtime="20201029 12:46:08.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.308" endtime="20201029 12:46:08.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.975" endtime="20201029 12:46:08.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.973" endtime="20201029 12:46:08.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:08.316" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000019564925e-07}...</msg>
<status status="PASS" starttime="20201029 12:46:08.312" endtime="20201029 12:46:08.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:08.320" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 12:46:08.316" endtime="20201029 12:46:08.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.324" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:08.323" endtime="20201029 12:46:08.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.328" level="INFO">VALUE: [4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7200000019564925e-07, 4.7200000019564925e-07, 4.7200000019564925e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:46:08.325" endtime="20201029 12:46:08.328"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.321" endtime="20201029 12:46:08.328"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.949" endtime="20201029 12:46:08.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.949" endtime="20201029 12:46:08.329"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.337" endtime="20201029 12:46:08.350"></status>
</kw>
<msg timestamp="20201029 12:46:08.351" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:08.335" endtime="20201029 12:46:08.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.356" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:08.353" endtime="20201029 12:46:08.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.358" endtime="20201029 12:46:08.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.333" endtime="20201029 12:46:08.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.331" endtime="20201029 12:46:08.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.376" endtime="20201029 12:46:08.699"></status>
</kw>
<msg timestamp="20201029 12:46:08.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.61253725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.612537722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:08.373" endtime="20201029 12:46:08.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.61253725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.612537722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:08.704" endtime="20201029 12:46:08.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.714" endtime="20201029 12:46:08.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.368" endtime="20201029 12:46:08.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.364" endtime="20201029 12:46:08.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:08.722" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7200000019564925e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.7199999997360464e-07}, ...</msg>
<status status="PASS" starttime="20201029 12:46:08.718" endtime="20201029 12:46:08.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:08.729" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 12:46:08.723" endtime="20201029 12:46:08.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.733" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:08.732" endtime="20201029 12:46:08.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.736" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:46:08.734" endtime="20201029 12:46:08.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.730" endtime="20201029 12:46:08.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.330" endtime="20201029 12:46:08.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.329" endtime="20201029 12:46:08.737"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.745" endtime="20201029 12:46:08.756"></status>
</kw>
<msg timestamp="20201029 12:46:08.756" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:08.744" endtime="20201029 12:46:08.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.759" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:08.757" endtime="20201029 12:46:08.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.760" endtime="20201029 12:46:08.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.741" endtime="20201029 12:46:08.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.739" endtime="20201029 12:46:08.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.769" endtime="20201029 12:46:09.080"></status>
</kw>
<msg timestamp="20201029 12:46:09.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.984007819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.984008292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:08.767" endtime="20201029 12:46:09.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.984007819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.984008292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:09.085" endtime="20201029 12:46:09.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.095" endtime="20201029 12:46:09.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.765" endtime="20201029 12:46:09.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.763" endtime="20201029 12:46:09.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:09.102" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.729999998343004e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.859999997997022e-07}, ...</msg>
<status status="PASS" starttime="20201029 12:46:09.099" endtime="20201029 12:46:09.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:09.107" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.719...</msg>
<status status="PASS" starttime="20201029 12:46:09.103" endtime="20201029 12:46:09.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.111" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:09.110" endtime="20201029 12:46:09.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.114" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.870000003265318e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.729999996122558e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:46:09.112" endtime="20201029 12:46:09.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.108" endtime="20201029 12:46:09.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.738" endtime="20201029 12:46:09.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.738" endtime="20201029 12:46:09.115"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.125" endtime="20201029 12:46:09.136"></status>
</kw>
<msg timestamp="20201029 12:46:09.136" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:09.122" endtime="20201029 12:46:09.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.139" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:09.137" endtime="20201029 12:46:09.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.140" endtime="20201029 12:46:09.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.119" endtime="20201029 12:46:09.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.117" endtime="20201029 12:46:09.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.149" endtime="20201029 12:46:09.466"></status>
</kw>
<msg timestamp="20201029 12:46:09.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.382435333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.382435819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:09.147" endtime="20201029 12:46:09.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.382435333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.382435819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:09.471" endtime="20201029 12:46:09.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.509" endtime="20201029 12:46:09.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.145" endtime="20201029 12:46:09.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.143" endtime="20201029 12:46:09.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:09.516" level="INFO">${RESULT} = [{'diff': 4.859999997997022e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.869999998824426e-07}, {'diff': 4.7199999997360464e-07}, ...</msg>
<status status="PASS" starttime="20201029 12:46:09.512" endtime="20201029 12:46:09.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:09.521" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.859999997997022e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.7299...</msg>
<status status="PASS" starttime="20201029 12:46:09.517" endtime="20201029 12:46:09.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.525" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:09.524" endtime="20201029 12:46:09.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.528" level="INFO">VALUE: [4.859999997997022e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.729999996122558e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999996122558e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.729999996122558e-07, 4.729999996122558e-07]</msg>
<status status="PASS" starttime="20201029 12:46:09.526" endtime="20201029 12:46:09.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.522" endtime="20201029 12:46:09.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.116" endtime="20201029 12:46:09.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.116" endtime="20201029 12:46:09.529"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.537" endtime="20201029 12:46:09.547"></status>
</kw>
<msg timestamp="20201029 12:46:09.548" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:09.535" endtime="20201029 12:46:09.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.550" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:09.549" endtime="20201029 12:46:09.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.551" endtime="20201029 12:46:09.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.533" endtime="20201029 12:46:09.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.531" endtime="20201029 12:46:09.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.560" endtime="20201029 12:46:09.880"></status>
</kw>
<msg timestamp="20201029 12:46:09.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.752178389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.752178861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:09.559" endtime="20201029 12:46:09.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.752178389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.752178861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:09.885" endtime="20201029 12:46:09.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.895" endtime="20201029 12:46:09.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.556" endtime="20201029 12:46:09.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.554" endtime="20201029 12:46:09.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:09.902" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7200000041769385e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201029 12:46:09.899" endtime="20201029 12:46:09.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:09.908" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, ...</msg>
<status status="PASS" starttime="20201029 12:46:09.903" endtime="20201029 12:46:09.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.912" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:09.911" endtime="20201029 12:46:09.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.914" level="INFO">VALUE: [4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.729999996122558e-07, 4.729999996122558e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.869999998824426e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07]</msg>
<status status="PASS" starttime="20201029 12:46:09.913" endtime="20201029 12:46:09.915"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.909" endtime="20201029 12:46:09.915"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.530" endtime="20201029 12:46:09.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.530" endtime="20201029 12:46:09.916"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.924" endtime="20201029 12:46:09.935"></status>
</kw>
<msg timestamp="20201029 12:46:09.935" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:09.922" endtime="20201029 12:46:09.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.937" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:09.936" endtime="20201029 12:46:09.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.938" endtime="20201029 12:46:09.940"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.920" endtime="20201029 12:46:09.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.918" endtime="20201029 12:46:09.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.947" endtime="20201029 12:46:10.257"></status>
</kw>
<msg timestamp="20201029 12:46:10.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.153294083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.153294556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:09.946" endtime="20201029 12:46:10.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.153294083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.153294556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:10.262" endtime="20201029 12:46:10.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.272" endtime="20201029 12:46:10.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.943" endtime="20201029 12:46:10.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.942" endtime="20201029 12:46:10.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:10.279" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, ...</msg>
<status status="PASS" starttime="20201029 12:46:10.276" endtime="20201029 12:46:10.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:10.284" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.8...</msg>
<status status="PASS" starttime="20201029 12:46:10.280" endtime="20201029 12:46:10.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.288" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:10.287" endtime="20201029 12:46:10.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.291" level="INFO">VALUE: [4.73000000056345e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.859999997997022e-07]</msg>
<status status="PASS" starttime="20201029 12:46:10.289" endtime="20201029 12:46:10.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.285" endtime="20201029 12:46:10.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.917" endtime="20201029 12:46:10.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.916" endtime="20201029 12:46:10.292"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.301" endtime="20201029 12:46:10.311"></status>
</kw>
<msg timestamp="20201029 12:46:10.311" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:10.299" endtime="20201029 12:46:10.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.314" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:10.312" endtime="20201029 12:46:10.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.315" endtime="20201029 12:46:10.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.296" endtime="20201029 12:46:10.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.294" endtime="20201029 12:46:10.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.324" endtime="20201029 12:46:10.640"></status>
</kw>
<msg timestamp="20201029 12:46:10.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.530203417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.530203889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:10.322" endtime="20201029 12:46:10.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.530203417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.530203889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:10.645" endtime="20201029 12:46:10.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.655" endtime="20201029 12:46:10.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.319" endtime="20201029 12:46:10.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.318" endtime="20201029 12:46:10.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:10.662" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 12:46:10.659" endtime="20201029 12:46:10.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:10.668" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4...</msg>
<status status="PASS" starttime="20201029 12:46:10.663" endtime="20201029 12:46:10.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.672" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:10.671" endtime="20201029 12:46:10.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.674" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07]</msg>
<status status="PASS" starttime="20201029 12:46:10.673" endtime="20201029 12:46:10.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.668" endtime="20201029 12:46:10.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.293" endtime="20201029 12:46:10.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.292" endtime="20201029 12:46:10.676"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.684" endtime="20201029 12:46:10.693"></status>
</kw>
<msg timestamp="20201029 12:46:10.694" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:10.682" endtime="20201029 12:46:10.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.696" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:10.695" endtime="20201029 12:46:10.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.697" endtime="20201029 12:46:10.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.679" endtime="20201029 12:46:10.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.678" endtime="20201029 12:46:10.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.706" endtime="20201029 12:46:11.017"></status>
</kw>
<msg timestamp="20201029 12:46:11.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.89694675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.896947222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:10.705" endtime="20201029 12:46:11.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.89694675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.896947222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:11.022" endtime="20201029 12:46:11.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.032" endtime="20201029 12:46:11.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.702" endtime="20201029 12:46:11.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.700" endtime="20201029 12:46:11.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:11.039" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.869999998824426e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000041769385e-07}, {'diff': 4.859999997997022e-07...</msg>
<status status="PASS" starttime="20201029 12:46:11.036" endtime="20201029 12:46:11.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:11.045" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4....</msg>
<status status="PASS" starttime="20201029 12:46:11.040" endtime="20201029 12:46:11.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.049" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:11.048" endtime="20201029 12:46:11.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.052" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.870000003265318e-07, 4.73000000056345e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:46:11.050" endtime="20201029 12:46:11.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.046" endtime="20201029 12:46:11.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.676" endtime="20201029 12:46:11.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.676" endtime="20201029 12:46:11.053"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.061" endtime="20201029 12:46:11.072"></status>
</kw>
<msg timestamp="20201029 12:46:11.072" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.059" endtime="20201029 12:46:11.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.074" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.073" endtime="20201029 12:46:11.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.076" endtime="20201029 12:46:11.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.057" endtime="20201029 12:46:11.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.055" endtime="20201029 12:46:11.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.085" endtime="20201029 12:46:11.402"></status>
</kw>
<msg timestamp="20201029 12:46:11.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.270103153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.270103625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:11.083" endtime="20201029 12:46:11.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.270103153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.270103625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:11.407" endtime="20201029 12:46:11.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.417" endtime="20201029 12:46:11.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.080" endtime="20201029 12:46:11.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.079" endtime="20201029 12:46:11.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:11.424" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.860000002437914e-07}, ...</msg>
<status status="PASS" starttime="20201029 12:46:11.421" endtime="20201029 12:46:11.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:11.429" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 12:46:11.425" endtime="20201029 12:46:11.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.433" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:11.432" endtime="20201029 12:46:11.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.436" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07]</msg>
<status status="PASS" starttime="20201029 12:46:11.434" endtime="20201029 12:46:11.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.430" endtime="20201029 12:46:11.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.054" endtime="20201029 12:46:11.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.054" endtime="20201029 12:46:11.437"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.446" endtime="20201029 12:46:11.455"></status>
</kw>
<msg timestamp="20201029 12:46:11.456" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.444" endtime="20201029 12:46:11.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.458" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.457" endtime="20201029 12:46:11.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.459" endtime="20201029 12:46:11.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.441" endtime="20201029 12:46:11.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.439" endtime="20201029 12:46:11.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.468" endtime="20201029 12:46:11.788"></status>
</kw>
<msg timestamp="20201029 12:46:11.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.639110583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.639111056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:11.467" endtime="20201029 12:46:11.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.639110583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.639111056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:11.793" endtime="20201029 12:46:11.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.803" endtime="20201029 12:46:11.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.464" endtime="20201029 12:46:11.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.463" endtime="20201029 12:46:11.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:11.810" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 12:46:11.806" endtime="20201029 12:46:11.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:11.815" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 12:46:11.811" endtime="20201029 12:46:11.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.819" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:11.818" endtime="20201029 12:46:11.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.822" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07]</msg>
<status status="PASS" starttime="20201029 12:46:11.821" endtime="20201029 12:46:11.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.816" endtime="20201029 12:46:11.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.438" endtime="20201029 12:46:11.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.437" endtime="20201029 12:46:11.824"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.831" endtime="20201029 12:46:11.842"></status>
</kw>
<msg timestamp="20201029 12:46:11.843" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.830" endtime="20201029 12:46:11.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.845" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.844" endtime="20201029 12:46:11.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.846" endtime="20201029 12:46:11.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.827" endtime="20201029 12:46:11.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.826" endtime="20201029 12:46:11.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.855" endtime="20201029 12:46:12.166"></status>
</kw>
<msg timestamp="20201029 12:46:12.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.013069986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.013070472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:11.853" endtime="20201029 12:46:12.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.013069986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.013070472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:12.171" endtime="20201029 12:46:12.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.181" endtime="20201029 12:46:12.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.851" endtime="20201029 12:46:12.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.849" endtime="20201029 12:46:12.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:12.191" level="INFO">${RESULT} = [{'diff': 4.860000002437914e-07}, {'diff': 4.870000003265318e-07}, {'diff': 4.870000003265318e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.729999991681666e-07}, {'diff': 4.7199999997360464e-07},...</msg>
<status status="PASS" starttime="20201029 12:46:12.185" endtime="20201029 12:46:12.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:12.196" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000002437914e-07, 4.870000003265318e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.719...</msg>
<status status="PASS" starttime="20201029 12:46:12.192" endtime="20201029 12:46:12.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.200" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:12.199" endtime="20201029 12:46:12.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.202" level="INFO">VALUE: [4.860000002437914e-07, 4.870000003265318e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:46:12.201" endtime="20201029 12:46:12.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.197" endtime="20201029 12:46:12.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.824" endtime="20201029 12:46:12.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.824" endtime="20201029 12:46:12.204"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.212" endtime="20201029 12:46:12.222"></status>
</kw>
<msg timestamp="20201029 12:46:12.223" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:12.210" endtime="20201029 12:46:12.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.225" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:12.224" endtime="20201029 12:46:12.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.226" endtime="20201029 12:46:12.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.208" endtime="20201029 12:46:12.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.206" endtime="20201029 12:46:12.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.236" endtime="20201029 12:46:12.552"></status>
</kw>
<msg timestamp="20201029 12:46:12.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.389706667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.389707139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:12.235" endtime="20201029 12:46:12.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.389706667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.389707139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:12.557" endtime="20201029 12:46:12.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.567" endtime="20201029 12:46:12.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.231" endtime="20201029 12:46:12.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.229" endtime="20201029 12:46:12.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:12.574" level="INFO">${RESULT} = [{'diff': 4.7200000086178306e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, ...</msg>
<status status="PASS" starttime="20201029 12:46:12.570" endtime="20201029 12:46:12.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:12.579" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7200000086178306e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 12:46:12.575" endtime="20201029 12:46:12.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.583" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:12.582" endtime="20201029 12:46:12.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.586" level="INFO">VALUE: [4.7200000086178306e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:46:12.585" endtime="20201029 12:46:12.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.579" endtime="20201029 12:46:12.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.205" endtime="20201029 12:46:12.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.204" endtime="20201029 12:46:12.587"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.595" endtime="20201029 12:46:12.606"></status>
</kw>
<msg timestamp="20201029 12:46:12.607" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:12.594" endtime="20201029 12:46:12.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.609" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:12.608" endtime="20201029 12:46:12.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.610" endtime="20201029 12:46:12.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.591" endtime="20201029 12:46:12.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.589" endtime="20201029 12:46:12.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.620" endtime="20201029 12:46:12.929"></status>
</kw>
<msg timestamp="20201029 12:46:12.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.760041972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.760042444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:12.618" endtime="20201029 12:46:12.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.760041972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.760042444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:12.934" endtime="20201029 12:46:12.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.944" endtime="20201029 12:46:12.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.616" endtime="20201029 12:46:12.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.613" endtime="20201029 12:46:12.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:12.951" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, ...</msg>
<status status="PASS" starttime="20201029 12:46:12.947" endtime="20201029 12:46:12.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:12.956" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199...</msg>
<status status="PASS" starttime="20201029 12:46:12.952" endtime="20201029 12:46:12.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.960" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:12.959" endtime="20201029 12:46:12.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.963" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07]</msg>
<status status="PASS" starttime="20201029 12:46:12.961" endtime="20201029 12:46:12.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.957" endtime="20201029 12:46:12.964"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.588" endtime="20201029 12:46:12.964"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.588" endtime="20201029 12:46:12.964"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.972" endtime="20201029 12:46:12.983"></status>
</kw>
<msg timestamp="20201029 12:46:12.983" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:12.970" endtime="20201029 12:46:12.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.986" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:12.984" endtime="20201029 12:46:12.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.987" endtime="20201029 12:46:12.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.968" endtime="20201029 12:46:12.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.966" endtime="20201029 12:46:12.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.996" endtime="20201029 12:46:13.314"></status>
</kw>
<msg timestamp="20201029 12:46:13.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.134572347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.134572833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:12.995" endtime="20201029 12:46:13.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.134572347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.134572833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:13.319" endtime="20201029 12:46:13.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.329" endtime="20201029 12:46:13.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.992" endtime="20201029 12:46:13.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.990" endtime="20201029 12:46:13.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:13.336" level="INFO">${RESULT} = [{'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 12:46:13.332" endtime="20201029 12:46:13.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:13.340" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4...</msg>
<status status="PASS" starttime="20201029 12:46:13.337" endtime="20201029 12:46:13.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.345" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:13.344" endtime="20201029 12:46:13.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.347" level="INFO">VALUE: [4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.870000003265318e-07, 4.870000003265318e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:46:13.346" endtime="20201029 12:46:13.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.341" endtime="20201029 12:46:13.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.965" endtime="20201029 12:46:13.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.965" endtime="20201029 12:46:13.349"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.357" endtime="20201029 12:46:13.368"></status>
</kw>
<msg timestamp="20201029 12:46:13.369" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:13.355" endtime="20201029 12:46:13.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.371" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:13.370" endtime="20201029 12:46:13.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.372" endtime="20201029 12:46:13.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.352" endtime="20201029 12:46:13.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.351" endtime="20201029 12:46:13.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.381" endtime="20201029 12:46:13.700"></status>
</kw>
<msg timestamp="20201029 12:46:13.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.501331944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.501332417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:13.380" endtime="20201029 12:46:13.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.501331944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.501332417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:13.705" endtime="20201029 12:46:13.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.715" endtime="20201029 12:46:13.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.377" endtime="20201029 12:46:13.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.376" endtime="20201029 12:46:13.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:13.722" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:46:13.719" endtime="20201029 12:46:13.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:13.727" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199...</msg>
<status status="PASS" starttime="20201029 12:46:13.723" endtime="20201029 12:46:13.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.731" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:13.730" endtime="20201029 12:46:13.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.734" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:46:13.733" endtime="20201029 12:46:13.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.728" endtime="20201029 12:46:13.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.349" endtime="20201029 12:46:13.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.349" endtime="20201029 12:46:13.736"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.743" endtime="20201029 12:46:13.754"></status>
</kw>
<msg timestamp="20201029 12:46:13.755" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:13.742" endtime="20201029 12:46:13.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.757" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:13.756" endtime="20201029 12:46:13.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.759" endtime="20201029 12:46:13.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.739" endtime="20201029 12:46:13.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.738" endtime="20201029 12:46:13.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.768" endtime="20201029 12:46:14.076"></status>
</kw>
<msg timestamp="20201029 12:46:14.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.877544347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.877544819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:13.766" endtime="20201029 12:46:14.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.877544347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.877544819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:14.081" endtime="20201029 12:46:14.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.091" endtime="20201029 12:46:14.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.764" endtime="20201029 12:46:14.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.762" endtime="20201029 12:46:14.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:14.098" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}...</msg>
<status status="PASS" starttime="20201029 12:46:14.094" endtime="20201029 12:46:14.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:14.104" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 12:46:14.099" endtime="20201029 12:46:14.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.108" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:14.107" endtime="20201029 12:46:14.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.110" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:46:14.109" endtime="20201029 12:46:14.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.104" endtime="20201029 12:46:14.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.736" endtime="20201029 12:46:14.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.736" endtime="20201029 12:46:14.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.363" endtime="20201029 12:46:14.112"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:06.286" endtime="20201029 12:46:14.113" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:14.119" endtime="20201029 12:46:14.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.118" endtime="20201029 12:46:14.139"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.152" endtime="20201029 12:46:14.167"></status>
</kw>
<msg timestamp="20201029 12:46:14.167" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:14.151" endtime="20201029 12:46:14.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.170" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:14.168" endtime="20201029 12:46:14.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.173" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:14.171" endtime="20201029 12:46:14.173"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:14.148" endtime="20201029 12:46:14.174"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:14.146" endtime="20201029 12:46:14.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.144" endtime="20201029 12:46:14.175"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:14.178" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:14.177" endtime="20201029 12:46:14.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.175" endtime="20201029 12:46:14.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.143" endtime="20201029 12:46:14.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.143" endtime="20201029 12:46:14.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.180" endtime="20201029 12:46:14.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.141" endtime="20201029 12:46:14.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.140" endtime="20201029 12:46:14.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.116" endtime="20201029 12:46:14.183"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.191" endtime="20201029 12:46:14.205"></status>
</kw>
<msg timestamp="20201029 12:46:14.206" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:14.189" endtime="20201029 12:46:14.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.209" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:14.207" endtime="20201029 12:46:14.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.210" endtime="20201029 12:46:14.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.187" endtime="20201029 12:46:14.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.185" endtime="20201029 12:46:14.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.219" endtime="20201029 12:46:14.505"></status>
</kw>
<msg timestamp="20201029 12:46:14.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062970111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062973153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:14.217" endtime="20201029 12:46:14.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062970111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062973153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:14.509" endtime="20201029 12:46:14.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.521" endtime="20201029 12:46:14.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.215" endtime="20201029 12:46:14.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.213" endtime="20201029 12:46:14.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:14.528" level="INFO">${RESULT} = [{'diff': 3.042000000008649e-06}, {'diff': 3.0409999999952975e-06}, {'diff': 3.0410000000091753e-06}, {'diff': 3.042000000008649e-06}, {'diff': 3.041999999994771e-06}, {'diff': 3.041999999994771e-06},...</msg>
<status status="PASS" starttime="20201029 12:46:14.525" endtime="20201029 12:46:14.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:14.533" level="INFO">${OVERHEAD} = {'diff': [3.042000000008649e-06, 3.0409999999952975e-06, 3.0410000000091753e-06, 3.042000000008649e-06, 3.041999999994771e-06, 3.041999999994771e-06, 3.0409999999952975e-06, 3.05600000000128e-06, 3.04...</msg>
<status status="PASS" starttime="20201029 12:46:14.529" endtime="20201029 12:46:14.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.537" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:14.536" endtime="20201029 12:46:14.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.540" level="INFO">VALUE: [3.042000000008649e-06, 3.0409999999952975e-06, 3.0410000000091753e-06, 3.042000000008649e-06, 3.041999999994771e-06, 3.041999999994771e-06, 3.0409999999952975e-06, 3.05600000000128e-06, 3.0409999999952975e-06, 3.0550000000018063e-06, 3.041999999994771e-06, 3.0550000000018063e-06, 3.041999999994771e-06, 3.05600000000128e-06, 3.02800000000214e-06, 3.0980000000069285e-06, 3.05600000000128e-06, 2.9999999999891225e-06, 3.0139999999956313e-06, 3.041999999994771e-06, 3.05600000000128e-06, 3.041999999994771e-06, 3.041999999994771e-06, 3.042000000008649e-06, 3.02800000000214e-06, 3.069999999993911e-06, 3.0410000000091753e-06, 3.041999999994771e-06, 3.02800000000214e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.02800000000214e-06, 3.0410000000091753e-06, 3.041999999994771e-06, 3.0550000000018063e-06, 3.0689999999944373e-06, 3.02800000000214e-06, 3.0139999999956313e-06, 3.0270000000026664e-06, 3.05600000000128e-06, 3.041999999994771e-06, 3.041999999994771e-06, 3.041999999994771e-06, 3.0000000000030003e-06, 3.041999999994771e-06, 3.0000000000030003e-06, 2.9860000000103692e-06, 3.041999999994771e-06, 3.041999999994771e-06, 3.0270000000026664e-06]</msg>
<status status="PASS" starttime="20201029 12:46:14.538" endtime="20201029 12:46:14.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.534" endtime="20201029 12:46:14.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.184" endtime="20201029 12:46:14.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.184" endtime="20201029 12:46:14.541"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.549" endtime="20201029 12:46:14.561"></status>
</kw>
<msg timestamp="20201029 12:46:14.561" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:14.547" endtime="20201029 12:46:14.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.564" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:14.563" endtime="20201029 12:46:14.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.565" endtime="20201029 12:46:14.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.545" endtime="20201029 12:46:14.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.543" endtime="20201029 12:46:14.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.574" endtime="20201029 12:46:14.884"></status>
</kw>
<msg timestamp="20201029 12:46:14.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063413708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063416736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:14.572" endtime="20201029 12:46:14.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063413708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063416736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:14.888" endtime="20201029 12:46:14.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.898" endtime="20201029 12:46:14.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.570" endtime="20201029 12:46:14.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.568" endtime="20201029 12:46:14.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:14.906" level="INFO">${RESULT} = [{'diff': 3.02800000000214e-06}, {'diff': 3.0139999999956313e-06}, {'diff': 3.0270000000026664e-06}, {'diff': 3.05600000000128e-06}, {'diff': 3.041999999994771e-06}, {'diff': 3.041999999994771e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:46:14.902" endtime="20201029 12:46:14.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:14.910" level="INFO">${OVERHEAD} = {'diff': [3.02800000000214e-06, 3.0139999999956313e-06, 3.0270000000026664e-06, 3.05600000000128e-06, 3.041999999994771e-06, 3.041999999994771e-06, 3.041999999994771e-06, 3.0000000000030003e-06, 3.041...</msg>
<status status="PASS" starttime="20201029 12:46:14.907" endtime="20201029 12:46:14.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.914" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:14.913" endtime="20201029 12:46:14.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.917" level="INFO">VALUE: [3.02800000000214e-06, 3.0139999999956313e-06, 3.0270000000026664e-06, 3.05600000000128e-06, 3.041999999994771e-06, 3.041999999994771e-06, 3.041999999994771e-06, 3.0000000000030003e-06, 3.041999999994771e-06, 3.0000000000030003e-06, 2.9860000000103692e-06, 3.041999999994771e-06, 3.041999999994771e-06, 3.0270000000026664e-06, 3.05600000000128e-06, 3.028000000016018e-06, 3.041000000036931e-06, 3.028000000016018e-06, 3.0139999999678757e-06, 3.0279999999605067e-06, 3.042000000008649e-06, 3.097000000007455e-06, 3.042000000008649e-06, 3.014000000023387e-06, 3.042000000008649e-06, 3.041000000036931e-06, 3.0419999999531377e-06, 3.0279999999605067e-06, 3.0279999999605067e-06, 3.028000000016018e-06, 3.0139999999678757e-06, 2.9999999999752447e-06, 3.028000000016018e-06, 3.05600000000128e-06, 3.042000000008649e-06, 3.028000000016018e-06, 3.069000000022193e-06, 3.028000000016018e-06, 3.042000000008649e-06, 3.0409999999814197e-06, 3.042000000008649e-06, 3.055000000029562e-06, 3.042000000008649e-06, 3.069999999993911e-06, 2.9859999999826137e-06, 3.028000000016018e-06, 3.028000000016018e-06, 3.042000000008649e-06, 3.0409999999814197e-06, 3.0409999999814197e-06, 3.0279999999605067e-06, 3.083999999986542e-06, 3.0419999999531377e-06, 3.0409999999814197e-06, 3.05600000000128e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.0549999999740507e-06, 3.028000000016018e-06, 3.041000000036931e-06, 3.0419999999531377e-06, 3.042000000008649e-06]</msg>
<status status="PASS" starttime="20201029 12:46:14.915" endtime="20201029 12:46:14.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.911" endtime="20201029 12:46:14.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.542" endtime="20201029 12:46:14.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.541" endtime="20201029 12:46:14.918"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.927" endtime="20201029 12:46:14.939"></status>
</kw>
<msg timestamp="20201029 12:46:14.939" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:14.925" endtime="20201029 12:46:14.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.942" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:14.940" endtime="20201029 12:46:14.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.943" endtime="20201029 12:46:14.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.922" endtime="20201029 12:46:14.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.920" endtime="20201029 12:46:14.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.952" endtime="20201029 12:46:15.249"></status>
</kw>
<msg timestamp="20201029 12:46:15.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.411208958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.411211986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:14.950" endtime="20201029 12:46:15.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.411208958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.411211986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:15.254" endtime="20201029 12:46:15.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.264" endtime="20201029 12:46:15.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.948" endtime="20201029 12:46:15.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.946" endtime="20201029 12:46:15.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:15.271" level="INFO">${RESULT} = [{'diff': 3.0279999999605067e-06}, {'diff': 3.083999999986542e-06}, {'diff': 3.0419999999531377e-06}, {'diff': 3.0409999999814197e-06}, {'diff': 3.05600000000128e-06}, {'diff': 3.042000000008649e-06},...</msg>
<status status="PASS" starttime="20201029 12:46:15.268" endtime="20201029 12:46:15.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:15.279" level="INFO">${OVERHEAD} = {'diff': [3.0279999999605067e-06, 3.083999999986542e-06, 3.0419999999531377e-06, 3.0409999999814197e-06, 3.05600000000128e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.04...</msg>
<status status="PASS" starttime="20201029 12:46:15.272" endtime="20201029 12:46:15.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.283" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:15.282" endtime="20201029 12:46:15.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.286" level="INFO">VALUE: [3.0279999999605067e-06, 3.083999999986542e-06, 3.0419999999531377e-06, 3.0409999999814197e-06, 3.05600000000128e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.0549999999740507e-06, 3.028000000016018e-06, 3.041000000036931e-06, 3.0419999999531377e-06, 3.042000000008649e-06, 3.028000000071529e-06, 3.0409999999259085e-06, 3.0279999999605067e-06, 3.0409999999259085e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.042000000008649e-06, 2.9859999999271025e-06, 3.069000000022193e-06, 3.0269999999887887e-06, 3.0549999999740507e-06, 3.0269999999887887e-06, 3.000000000086267e-06, 3.083999999931031e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.014000000023387e-06, 3.056000000056791e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.028000000071529e-06, 3.0409999999259085e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.041000000036931e-06, 3.042000000008649e-06, 3.0279999999605067e-06, 3.028000000071529e-06, 3.042000000008649e-06, 3.056000000056791e-06, 3.041000000036931e-06, 3.041000000036931e-06, 3.028000000071529e-06, 3.0279999999605067e-06, 3.041000000036931e-06, 3.0279999999605067e-06, 3.055000000085073e-06, 3.0269999999887887e-06, 3.0409999999259085e-06, 3.042000000008649e-06, 3.0549999999740507e-06, 3.042000000008649e-06, 3.0279999999605067e-06, 3.042000000008649e-06, 3.0279999999605067e-06, 3.0409999999259085e-06, 3.042000000008649e-06, 3.0409999999259085e-06]</msg>
<status status="PASS" starttime="20201029 12:46:15.284" endtime="20201029 12:46:15.286"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.280" endtime="20201029 12:46:15.286"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.919" endtime="20201029 12:46:15.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.919" endtime="20201029 12:46:15.287"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.295" endtime="20201029 12:46:15.307"></status>
</kw>
<msg timestamp="20201029 12:46:15.307" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:15.293" endtime="20201029 12:46:15.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.310" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:15.308" endtime="20201029 12:46:15.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.311" endtime="20201029 12:46:15.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.291" endtime="20201029 12:46:15.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.289" endtime="20201029 12:46:15.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.320" endtime="20201029 12:46:15.623"></status>
</kw>
<msg timestamp="20201029 12:46:15.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.780336181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.780339222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:15.318" endtime="20201029 12:46:15.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.780336181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.780339222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:15.628" endtime="20201029 12:46:15.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.638" endtime="20201029 12:46:15.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.316" endtime="20201029 12:46:15.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.314" endtime="20201029 12:46:15.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:15.645" level="INFO">${RESULT} = [{'diff': 3.041000000036931e-06}, {'diff': 3.0279999999605067e-06}, {'diff': 3.055000000085073e-06}, {'diff': 3.0269999999887887e-06}, {'diff': 3.0409999999259085e-06}, {'diff': 3.042000000008649e-06}...</msg>
<status status="PASS" starttime="20201029 12:46:15.642" endtime="20201029 12:46:15.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:15.651" level="INFO">${OVERHEAD} = {'diff': [3.041000000036931e-06, 3.0279999999605067e-06, 3.055000000085073e-06, 3.0269999999887887e-06, 3.0409999999259085e-06, 3.042000000008649e-06, 3.0549999999740507e-06, 3.042000000008649e-06, 3....</msg>
<status status="PASS" starttime="20201029 12:46:15.646" endtime="20201029 12:46:15.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.655" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:15.654" endtime="20201029 12:46:15.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.658" level="INFO">VALUE: [3.041000000036931e-06, 3.0279999999605067e-06, 3.055000000085073e-06, 3.0269999999887887e-06, 3.0409999999259085e-06, 3.042000000008649e-06, 3.0549999999740507e-06, 3.042000000008649e-06, 3.0279999999605067e-06, 3.042000000008649e-06, 3.0279999999605067e-06, 3.0409999999259085e-06, 3.042000000008649e-06, 3.0409999999259085e-06, 3.042000000119671e-06, 3.0269999999887887e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.0830000001813573e-06, 3.042000000119671e-06, 3.0559999999457688e-06, 3.042000000119671e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.041000000036931e-06, 3.111000000055597e-06, 3.0419999998976266e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.041000000036931e-06, 2.972000000101005e-06, 3.028000000071529e-06, 3.0419999998976266e-06, 3.014000000023387e-06, 3.097000000007455e-06, 3.028000000071529e-06, 3.0559999999457688e-06, 3.0559999999457688e-06, 3.042000000119671e-06, 3.028000000071529e-06, 3.0139999998013423e-06, 3.0419999998976266e-06, 2.972000000101005e-06, 3.0000000001972893e-06, 3.0269999999887887e-06, 3.0269999999887887e-06, 2.972000000101005e-06, 2.9999999999752447e-06, 3.0419999998976266e-06, 3.0279999998494844e-06, 2.972000000101005e-06, 2.9580000000528628e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.014000000023387e-06, 3.0559999999457688e-06, 3.014000000023387e-06, 3.0559999999457688e-06, 3.0559999999457688e-06, 3.055000000085073e-06, 3.041000000036931e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 3.0419999998976266e-06]</msg>
<status status="PASS" starttime="20201029 12:46:15.656" endtime="20201029 12:46:15.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.652" endtime="20201029 12:46:15.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.288" endtime="20201029 12:46:15.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.287" endtime="20201029 12:46:15.659"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.667" endtime="20201029 12:46:15.679"></status>
</kw>
<msg timestamp="20201029 12:46:15.680" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:15.665" endtime="20201029 12:46:15.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.682" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:15.681" endtime="20201029 12:46:15.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.683" endtime="20201029 12:46:15.685"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.663" endtime="20201029 12:46:15.685"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.661" endtime="20201029 12:46:15.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.692" endtime="20201029 12:46:16.000"></status>
</kw>
<msg timestamp="20201029 12:46:16.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.138286986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.138289958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:15.690" endtime="20201029 12:46:16.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.138286986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.138289958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:16.005" endtime="20201029 12:46:16.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.015" endtime="20201029 12:46:16.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.688" endtime="20201029 12:46:16.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.686" endtime="20201029 12:46:16.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:16.022" level="INFO">${RESULT} = [{'diff': 2.972000000101005e-06}, {'diff': 2.9580000000528628e-06}, {'diff': 3.0419999998976266e-06}, {'diff': 3.0409999998148862e-06}, {'diff': 3.014000000023387e-06}, {'diff': 3.0559999999457688e-06...</msg>
<status status="PASS" starttime="20201029 12:46:16.019" endtime="20201029 12:46:16.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:16.027" level="INFO">${OVERHEAD} = {'diff': [2.972000000101005e-06, 2.9580000000528628e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.014000000023387e-06, 3.0559999999457688e-06, 3.014000000023387e-06, 3.0559999999457688e-06, 3...</msg>
<status status="PASS" starttime="20201029 12:46:16.023" endtime="20201029 12:46:16.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.031" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:16.030" endtime="20201029 12:46:16.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.034" level="INFO">VALUE: [2.972000000101005e-06, 2.9580000000528628e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.014000000023387e-06, 3.0559999999457688e-06, 3.014000000023387e-06, 3.0559999999457688e-06, 3.0559999999457688e-06, 3.055000000085073e-06, 3.041000000036931e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.042000000119671e-06, 3.0270000002108333e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.041000000036931e-06, 3.0419999998976266e-06, 3.014000000023387e-06, 3.042000000119671e-06, 3.055000000085073e-06, 3.055000000085073e-06, 3.111000000055597e-06, 3.041000000036931e-06, 3.0419999998976266e-06, 3.0559999999457688e-06, 3.0419999998976266e-06, 3.0269999999887887e-06, 3.0559999999457688e-06, 3.0000000001972893e-06, 3.1250000001037392e-06, 3.0419999998976266e-06, 3.055000000085073e-06, 3.028000000071529e-06, 3.055000000085073e-06, 3.0559999999457688e-06, 3.041000000036931e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 3.0559999999457688e-06, 3.014000000023387e-06, 3.0279999998494844e-06, 3.069999999993911e-06, 3.041000000036931e-06, 3.0279999998494844e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 3.0279999998494844e-06, 3.042000000119671e-06, 3.0559999999457688e-06, 3.0419999998976266e-06, 3.042000000119671e-06, 3.0549999998630284e-06, 3.0419999998976266e-06, 3.0139999998013423e-06, 3.042000000119671e-06, 3.042000000119671e-06, 3.028000000071529e-06, 3.041000000036931e-06, 3.041000000036931e-06]</msg>
<status status="PASS" starttime="20201029 12:46:16.032" endtime="20201029 12:46:16.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.028" endtime="20201029 12:46:16.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.660" endtime="20201029 12:46:16.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.659" endtime="20201029 12:46:16.035"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.044" endtime="20201029 12:46:16.055"></status>
</kw>
<msg timestamp="20201029 12:46:16.056" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:16.042" endtime="20201029 12:46:16.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.058" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:16.057" endtime="20201029 12:46:16.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.059" endtime="20201029 12:46:16.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.039" endtime="20201029 12:46:16.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.037" endtime="20201029 12:46:16.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.068" endtime="20201029 12:46:16.356"></status>
</kw>
<msg timestamp="20201029 12:46:16.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.500312458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.5003155, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:16.066" endtime="20201029 12:46:16.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.500312458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.5003155, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:16.362" endtime="20201029 12:46:16.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.371" endtime="20201029 12:46:16.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.064" endtime="20201029 12:46:16.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.062" endtime="20201029 12:46:16.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:16.378" level="INFO">${RESULT} = [{'diff': 3.0419999998976266e-06}, {'diff': 3.0279999998494844e-06}, {'diff': 3.042000000119671e-06}, {'diff': 3.0559999999457688e-06}, {'diff': 3.0419999998976266e-06}, {'diff': 3.042000000119671e-06...</msg>
<status status="PASS" starttime="20201029 12:46:16.375" endtime="20201029 12:46:16.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:16.384" level="INFO">${OVERHEAD} = {'diff': [3.0419999998976266e-06, 3.0279999998494844e-06, 3.042000000119671e-06, 3.0559999999457688e-06, 3.0419999998976266e-06, 3.042000000119671e-06, 3.0549999998630284e-06, 3.0419999998976266e-06, ...</msg>
<status status="PASS" starttime="20201029 12:46:16.379" endtime="20201029 12:46:16.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.388" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:16.387" endtime="20201029 12:46:16.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.390" level="INFO">VALUE: [3.0419999998976266e-06, 3.0279999998494844e-06, 3.042000000119671e-06, 3.0559999999457688e-06, 3.0419999998976266e-06, 3.042000000119671e-06, 3.0549999998630284e-06, 3.0419999998976266e-06, 3.0139999998013423e-06, 3.042000000119671e-06, 3.042000000119671e-06, 3.028000000071529e-06, 3.041000000036931e-06, 3.041000000036931e-06, 3.0409999998148862e-06, 2.9999999999752447e-06, 3.041000000036931e-06, 3.0269999999887887e-06, 3.0279999998494844e-06, 3.097000000007455e-06, 3.042000000119671e-06, 3.055000000085073e-06, 3.0419999998976266e-06, 1.2278000000032208e-05, 3.0560000001678134e-06, 2.9999999999752447e-06, 3.069999999993911e-06, 3.0279999998494844e-06, 3.028000000071529e-06, 3.0549999998630284e-06, 3.042000000119671e-06, 3.041000000036931e-06, 3.055000000085073e-06, 3.042000000119671e-06, 3.042000000119671e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0689999999111706e-06, 3.041000000036931e-06, 3.0279999998494844e-06, 3.0549999998630284e-06, 3.0269999999887887e-06, 3.0279999998494844e-06, 3.0559999999457688e-06, 3.042000000119671e-06, 3.055000000085073e-06, 3.0559999999457688e-06, 3.041000000036931e-06, 3.0270000002108333e-06, 3.0419999998976266e-06, 3.0279999998494844e-06, 3.028000000071529e-06, 3.042000000119671e-06, 3.041000000036931e-06, 3.041000000036931e-06, 3.0829999999593127e-06, 3.069999999993911e-06, 3.042000000119671e-06, 3.0419999998976266e-06, 3.042000000119671e-06, 3.0559999999457688e-06, 3.0559999999457688e-06, 3.0549999998630284e-06, 3.042000000119671e-06]</msg>
<status status="PASS" starttime="20201029 12:46:16.389" endtime="20201029 12:46:16.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.385" endtime="20201029 12:46:16.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.036" endtime="20201029 12:46:16.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.036" endtime="20201029 12:46:16.392"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.400" endtime="20201029 12:46:16.412"></status>
</kw>
<msg timestamp="20201029 12:46:16.412" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:16.398" endtime="20201029 12:46:16.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.415" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:16.413" endtime="20201029 12:46:16.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.416" endtime="20201029 12:46:16.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.396" endtime="20201029 12:46:16.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.394" endtime="20201029 12:46:16.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.425" endtime="20201029 12:46:16.727"></status>
</kw>
<msg timestamp="20201029 12:46:16.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.865373208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.865376236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:16.423" endtime="20201029 12:46:16.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.865373208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.865376236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:16.732" endtime="20201029 12:46:16.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.742" endtime="20201029 12:46:16.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.421" endtime="20201029 12:46:16.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.419" endtime="20201029 12:46:16.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:16.749" level="INFO">${RESULT} = [{'diff': 3.0279999998494844e-06}, {'diff': 3.028000000071529e-06}, {'diff': 3.042000000119671e-06}, {'diff': 3.041000000036931e-06}, {'diff': 3.041000000036931e-06}, {'diff': 3.0829999999593127e-06},...</msg>
<status status="PASS" starttime="20201029 12:46:16.745" endtime="20201029 12:46:16.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:16.755" level="INFO">${OVERHEAD} = {'diff': [3.0279999998494844e-06, 3.028000000071529e-06, 3.042000000119671e-06, 3.041000000036931e-06, 3.041000000036931e-06, 3.0829999999593127e-06, 3.069999999993911e-06, 3.042000000119671e-06, 3.04...</msg>
<status status="PASS" starttime="20201029 12:46:16.750" endtime="20201029 12:46:16.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.759" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:16.758" endtime="20201029 12:46:16.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.761" level="INFO">VALUE: [3.0279999998494844e-06, 3.028000000071529e-06, 3.042000000119671e-06, 3.041000000036931e-06, 3.041000000036931e-06, 3.0829999999593127e-06, 3.069999999993911e-06, 3.042000000119671e-06, 3.0419999998976266e-06, 3.042000000119671e-06, 3.0559999999457688e-06, 3.0559999999457688e-06, 3.0549999998630284e-06, 3.042000000119671e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 3.055000000085073e-06, 3.0419999998976266e-06, 3.028000000071529e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.0409999998148862e-06, 3.028000000071529e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0560000001678134e-06, 3.0419999998976266e-06, 2.9999999999752447e-06, 3.028000000071529e-06, 3.0409999998148862e-06, 3.042000000341716e-06, 3.055000000085073e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.0139999998013423e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 2.9999999999752447e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.0409999998148862e-06, 3.055999999723724e-06, 3.012999999718602e-06, 3.028000000071529e-06, 2.9999999999752447e-06, 3.0549999996409838e-06, 3.0410000002589754e-06, 3.0409999998148862e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0560000001678134e-06, 3.0139999998013423e-06, 3.0560000001678134e-06, 3.0419999998976266e-06, 2.986000000149147e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.055999999723724e-06, 3.0419999998976266e-06, 3.0410000002589754e-06]</msg>
<status status="PASS" starttime="20201029 12:46:16.760" endtime="20201029 12:46:16.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.756" endtime="20201029 12:46:16.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.393" endtime="20201029 12:46:16.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.392" endtime="20201029 12:46:16.763"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.771" endtime="20201029 12:46:16.783"></status>
</kw>
<msg timestamp="20201029 12:46:16.783" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:16.769" endtime="20201029 12:46:16.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.786" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:16.784" endtime="20201029 12:46:16.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.787" endtime="20201029 12:46:16.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.767" endtime="20201029 12:46:16.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.765" endtime="20201029 12:46:16.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.797" endtime="20201029 12:46:17.100"></status>
</kw>
<msg timestamp="20201029 12:46:17.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.211381639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.211384681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:16.795" endtime="20201029 12:46:17.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.211381639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.211384681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:17.105" endtime="20201029 12:46:17.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.116" endtime="20201029 12:46:17.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.792" endtime="20201029 12:46:17.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.790" endtime="20201029 12:46:17.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:17.123" level="INFO">${RESULT} = [{'diff': 3.042000000341716e-06}, {'diff': 3.0410000002589754e-06}, {'diff': 3.042000000341716e-06}, {'diff': 3.042000000341716e-06}, {'diff': 3.0560000001678134e-06}, {'diff': 3.0139999998013423e-06}...</msg>
<status status="PASS" starttime="20201029 12:46:17.119" endtime="20201029 12:46:17.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:17.127" level="INFO">${OVERHEAD} = {'diff': [3.042000000341716e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0560000001678134e-06, 3.0139999998013423e-06, 3.0560000001678134e-06, 3.0419999998976266e-06, 2...</msg>
<status status="PASS" starttime="20201029 12:46:17.124" endtime="20201029 12:46:17.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.132" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:17.131" endtime="20201029 12:46:17.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.134" level="INFO">VALUE: [3.042000000341716e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0560000001678134e-06, 3.0139999998013423e-06, 3.0560000001678134e-06, 3.0419999998976266e-06, 2.986000000149147e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.055999999723724e-06, 3.0419999998976266e-06, 3.0410000002589754e-06, 3.0560000001678134e-06, 3.0419999998976266e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.0410000002589754e-06, 3.055999999723724e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 2.9580000000528628e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 3.097000000007455e-06, 3.028000000071529e-06, 3.0419999998976266e-06, 3.0410000002589754e-06, 3.0410000002589754e-06, 3.0560000001678134e-06, 3.028000000071529e-06, 3.0409999998148862e-06, 3.055000000085073e-06, 3.0419999998976266e-06, 3.0560000001678134e-06, 3.0419999998976266e-06, 3.097000000007455e-06, 3.055000000085073e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0560000001678134e-06, 3.097000000007455e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.097000000007455e-06, 3.0409999998148862e-06, 3.0409999998148862e-06, 3.0549999996409838e-06, 2.9999999999752447e-06, 3.028000000071529e-06, 3.02799999962744e-06, 3.0410000002589754e-06, 3.0419999998976266e-06]</msg>
<status status="PASS" starttime="20201029 12:46:17.133" endtime="20201029 12:46:17.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.128" endtime="20201029 12:46:17.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.764" endtime="20201029 12:46:17.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.763" endtime="20201029 12:46:17.136"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.145" endtime="20201029 12:46:17.157"></status>
</kw>
<msg timestamp="20201029 12:46:17.157" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:17.143" endtime="20201029 12:46:17.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.160" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:17.158" endtime="20201029 12:46:17.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.161" endtime="20201029 12:46:17.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.140" endtime="20201029 12:46:17.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.139" endtime="20201029 12:46:17.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.170" endtime="20201029 12:46:17.488"></status>
</kw>
<msg timestamp="20201029 12:46:17.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.572524958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.572528014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:17.169" endtime="20201029 12:46:17.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.572524958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.572528014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:17.494" endtime="20201029 12:46:17.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.504" endtime="20201029 12:46:17.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.166" endtime="20201029 12:46:17.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.164" endtime="20201029 12:46:17.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:17.511" level="INFO">${RESULT} = [{'diff': 3.0560000001678134e-06}, {'diff': 3.097000000007455e-06}, {'diff': 3.0409999998148862e-06}, {'diff': 3.0419999998976266e-06}, {'diff': 3.0409999998148862e-06}, {'diff': 3.097000000007455e-06...</msg>
<status status="PASS" starttime="20201029 12:46:17.507" endtime="20201029 12:46:17.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:17.516" level="INFO">${OVERHEAD} = {'diff': [3.0560000001678134e-06, 3.097000000007455e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.097000000007455e-06, 3.0409999998148862e-06, 3.0409999998148862e-06, ...</msg>
<status status="PASS" starttime="20201029 12:46:17.512" endtime="20201029 12:46:17.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.521" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:17.520" endtime="20201029 12:46:17.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.523" level="INFO">VALUE: [3.0560000001678134e-06, 3.097000000007455e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.097000000007455e-06, 3.0409999998148862e-06, 3.0409999998148862e-06, 3.0549999996409838e-06, 2.9999999999752447e-06, 3.028000000071529e-06, 3.02799999962744e-06, 3.0410000002589754e-06, 3.0419999998976266e-06, 3.082999999737268e-06, 3.028000000071529e-06, 3.0549999996409838e-06, 2.9999999999752447e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.097000000007455e-06, 3.0980000000901953e-06, 3.0409999998148862e-06, 3.0560000001678134e-06, 3.0269999999887887e-06, 3.0419999998976266e-06, 3.0140000002454315e-06, 3.0560000001678134e-06, 3.0549999996409838e-06, 3.028000000071529e-06, 3.0419999998976266e-06, 3.028000000071529e-06, 3.0410000002589754e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 3.028000000071529e-06, 3.0980000000901953e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.055000000085073e-06, 3.1109999998335525e-06, 3.0419999998976266e-06, 3.0689999999111706e-06, 3.0269999999887887e-06, 3.055000000085073e-06, 3.0139999998013423e-06, 3.02799999962744e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.0419999998976266e-06, 3.028000000071529e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.042000000341716e-06, 2.986000000149147e-06, 3.055000000085073e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.02799999962744e-06, 3.042000000341716e-06]</msg>
<status status="PASS" starttime="20201029 12:46:17.522" endtime="20201029 12:46:17.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.517" endtime="20201029 12:46:17.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.137" endtime="20201029 12:46:17.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.136" endtime="20201029 12:46:17.525"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.533" endtime="20201029 12:46:17.545"></status>
</kw>
<msg timestamp="20201029 12:46:17.545" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:17.531" endtime="20201029 12:46:17.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.548" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:17.546" endtime="20201029 12:46:17.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.549" endtime="20201029 12:46:17.550"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.528" endtime="20201029 12:46:17.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.527" endtime="20201029 12:46:17.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.558" endtime="20201029 12:46:17.881"></status>
</kw>
<msg timestamp="20201029 12:46:17.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.936306389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.936309431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:17.557" endtime="20201029 12:46:17.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.936306389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.936309431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:17.887" endtime="20201029 12:46:17.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.897" endtime="20201029 12:46:17.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.554" endtime="20201029 12:46:17.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.552" endtime="20201029 12:46:17.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:17.905" level="INFO">${RESULT} = [{'diff': 3.042000000341716e-06}, {'diff': 3.028000000071529e-06}, {'diff': 3.0419999998976266e-06}, {'diff': 3.028000000071529e-06}, {'diff': 3.0419999998976266e-06}, {'diff': 3.0409999998148862e-06}...</msg>
<status status="PASS" starttime="20201029 12:46:17.901" endtime="20201029 12:46:17.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:17.909" level="INFO">${OVERHEAD} = {'diff': [3.042000000341716e-06, 3.028000000071529e-06, 3.0419999998976266e-06, 3.028000000071529e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.042000000341716e-06, 2.986000000149147e-06, 3.0...</msg>
<status status="PASS" starttime="20201029 12:46:17.906" endtime="20201029 12:46:17.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.914" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:17.912" endtime="20201029 12:46:17.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.916" level="INFO">VALUE: [3.042000000341716e-06, 3.028000000071529e-06, 3.0419999998976266e-06, 3.028000000071529e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.042000000341716e-06, 2.986000000149147e-06, 3.055000000085073e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.02799999962744e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0560000001678134e-06, 2.985999999705058e-06, 3.055999999723724e-06, 3.028000000071529e-06, 3.069999999993911e-06, 3.0419999998976266e-06, 3.028000000071529e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.02799999962744e-06, 3.069999999993911e-06, 3.028000000071529e-06, 3.0140000002454315e-06, 2.9999999999752447e-06, 3.069999999993911e-06, 3.0269999999887887e-06, 2.9999999999752447e-06, 3.0560000001678134e-06, 3.028000000071529e-06, 3.0419999998976266e-06, 3.082999999737268e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.028000000071529e-06, 3.0419999998976266e-06, 3.0410000002589754e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0269999999887887e-06, 3.0419999998976266e-06, 3.028000000071529e-06, 3.097000000007455e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.055000000085073e-06, 3.0419999998976266e-06, 3.0139999998013423e-06, 2.9999999999752447e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0980000000901953e-06, 3.013000000162691e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 2.9999999999752447e-06, 3.0560000001678134e-06, 3.0689999999111706e-06, 2.9999999999752447e-06, 3.042000000341716e-06]</msg>
<status status="PASS" starttime="20201029 12:46:17.915" endtime="20201029 12:46:17.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.910" endtime="20201029 12:46:17.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.525" endtime="20201029 12:46:17.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.525" endtime="20201029 12:46:17.918"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.925" endtime="20201029 12:46:17.938"></status>
</kw>
<msg timestamp="20201029 12:46:17.939" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:17.924" endtime="20201029 12:46:17.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.941" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:17.940" endtime="20201029 12:46:17.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.942" endtime="20201029 12:46:17.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.921" endtime="20201029 12:46:17.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.920" endtime="20201029 12:46:17.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.952" endtime="20201029 12:46:18.276"></status>
</kw>
<msg timestamp="20201029 12:46:18.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.315484347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.315487389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:17.950" endtime="20201029 12:46:18.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.315484347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.315487389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:18.282" endtime="20201029 12:46:18.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.292" endtime="20201029 12:46:18.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.948" endtime="20201029 12:46:18.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.946" endtime="20201029 12:46:18.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:18.299" level="INFO">${RESULT} = [{'diff': 3.0419999998976266e-06}, {'diff': 3.0139999998013423e-06}, {'diff': 2.9999999999752447e-06}, {'diff': 3.0419999998976266e-06}, {'diff': 3.0419999998976266e-06}, {'diff': 3.0980000000901953e-...</msg>
<status status="PASS" starttime="20201029 12:46:18.295" endtime="20201029 12:46:18.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:18.305" level="INFO">${OVERHEAD} = {'diff': [3.0419999998976266e-06, 3.0139999998013423e-06, 2.9999999999752447e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0980000000901953e-06, 3.013000000162691e-06, 3.0419999998976266e-06,...</msg>
<status status="PASS" starttime="20201029 12:46:18.300" endtime="20201029 12:46:18.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.309" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:18.308" endtime="20201029 12:46:18.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.312" level="INFO">VALUE: [3.0419999998976266e-06, 3.0139999998013423e-06, 2.9999999999752447e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0980000000901953e-06, 3.013000000162691e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 2.9999999999752447e-06, 3.0560000001678134e-06, 3.0689999999111706e-06, 2.9999999999752447e-06, 3.042000000341716e-06, 3.0419999998976266e-06, 3.028000000071529e-06, 3.097000000007455e-06, 3.0409999998148862e-06, 3.0409999998148862e-06, 3.0409999998148862e-06, 3.0269999999887887e-06, 3.042000000341716e-06, 3.0419999998976266e-06, 3.028000000071529e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.0139999998013423e-06, 3.042000000341716e-06, 3.0419999998976266e-06, 3.042000000341716e-06, 3.0689999999111706e-06, 3.0269999999887887e-06, 3.028000000071529e-06, 3.0269999999887887e-06, 3.0419999998976266e-06, 2.9719999998789604e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 3.028000000071529e-06, 3.0269999999887887e-06, 3.0409999998148862e-06, 3.042000000341716e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0139999998013423e-06, 3.0560000001678134e-06, 2.9999999999752447e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0419999998976266e-06, 3.0269999999887887e-06, 3.0410000002589754e-06, 3.0560000001678134e-06, 3.055000000085073e-06, 3.028000000071529e-06, 3.0409999998148862e-06, 3.0410000002589754e-06, 2.9999999999752447e-06, 3.028000000071529e-06]</msg>
<status status="PASS" starttime="20201029 12:46:18.310" endtime="20201029 12:46:18.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.306" endtime="20201029 12:46:18.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.918" endtime="20201029 12:46:18.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.918" endtime="20201029 12:46:18.314"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.322" endtime="20201029 12:46:18.334"></status>
</kw>
<msg timestamp="20201029 12:46:18.335" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:18.320" endtime="20201029 12:46:18.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.337" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:18.336" endtime="20201029 12:46:18.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.338" endtime="20201029 12:46:18.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.317" endtime="20201029 12:46:18.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.316" endtime="20201029 12:46:18.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.348" endtime="20201029 12:46:18.683"></status>
</kw>
<msg timestamp="20201029 12:46:18.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.69719675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.697199806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:18.346" endtime="20201029 12:46:18.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.69719675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.697199806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:18.687" endtime="20201029 12:46:18.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.697" endtime="20201029 12:46:18.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.344" endtime="20201029 12:46:18.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.342" endtime="20201029 12:46:18.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:18.704" level="INFO">${RESULT} = [{'diff': 3.0560000001678134e-06}, {'diff': 2.9999999999752447e-06}, {'diff': 3.042000000341716e-06}, {'diff': 3.042000000341716e-06}, {'diff': 3.0419999998976266e-06}, {'diff': 3.0269999999887887e-06...</msg>
<status status="PASS" starttime="20201029 12:46:18.700" endtime="20201029 12:46:18.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:18.711" level="INFO">${OVERHEAD} = {'diff': [3.0560000001678134e-06, 2.9999999999752447e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0419999998976266e-06, 3.0269999999887887e-06, 3.0410000002589754e-06, 3.0560000001678134e-06, ...</msg>
<status status="PASS" starttime="20201029 12:46:18.705" endtime="20201029 12:46:18.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.716" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:18.715" endtime="20201029 12:46:18.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.718" level="INFO">VALUE: [3.0560000001678134e-06, 2.9999999999752447e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0419999998976266e-06, 3.0269999999887887e-06, 3.0410000002589754e-06, 3.0560000001678134e-06, 3.055000000085073e-06, 3.028000000071529e-06, 3.0409999998148862e-06, 3.0410000002589754e-06, 2.9999999999752447e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.0269999999887887e-06, 3.0419999994535374e-06, 3.069999999993911e-06, 3.055999999723724e-06, 3.0419999994535374e-06, 3.040999999370797e-06, 3.028000000071529e-06, 3.0410000002589754e-06, 3.055000000529162e-06, 3.0419999994535374e-06, 3.0560000006119026e-06, 2.9999999995311555e-06, 2.9859999992609687e-06, 3.042000000341716e-06, 3.012999999718602e-06, 3.042000000341716e-06, 3.0560000006119026e-06, 3.042000000341716e-06, 3.0140000006895207e-06, 3.0410000002589754e-06, 3.0560000006119026e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.0549999996409838e-06, 3.040999999370797e-06, 3.028000000071529e-06, 3.069999999993911e-06, 3.0130000006067803e-06, 3.0410000002589754e-06, 3.0279999991833506e-06, 3.0140000006895207e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0560000006119026e-06, 3.0139999998013423e-06, 3.0269999999887887e-06, 3.0419999994535374e-06, 3.0560000006119026e-06, 3.040999999370797e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.028000000071529e-06, 2.9999999995311555e-06, 3.0139999998013423e-06]</msg>
<status status="PASS" starttime="20201029 12:46:18.717" endtime="20201029 12:46:18.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.712" endtime="20201029 12:46:18.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.314" endtime="20201029 12:46:18.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.314" endtime="20201029 12:46:18.720"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.727" endtime="20201029 12:46:18.739"></status>
</kw>
<msg timestamp="20201029 12:46:18.740" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:18.726" endtime="20201029 12:46:18.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.742" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:18.741" endtime="20201029 12:46:18.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.743" endtime="20201029 12:46:18.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.723" endtime="20201029 12:46:18.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.722" endtime="20201029 12:46:18.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.752" endtime="20201029 12:46:19.065"></status>
</kw>
<msg timestamp="20201029 12:46:19.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.081692958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.081695972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:18.751" endtime="20201029 12:46:19.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.081692958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.081695972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:19.070" endtime="20201029 12:46:19.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.080" endtime="20201029 12:46:19.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.748" endtime="20201029 12:46:19.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.747" endtime="20201029 12:46:19.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:19.086" level="INFO">${RESULT} = [{'diff': 3.0140000006895207e-06}, {'diff': 3.042000000341716e-06}, {'diff': 3.042000000341716e-06}, {'diff': 3.0560000006119026e-06}, {'diff': 3.0139999998013423e-06}, {'diff': 3.0269999999887887e-06...</msg>
<status status="PASS" starttime="20201029 12:46:19.083" endtime="20201029 12:46:19.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:19.091" level="INFO">${OVERHEAD} = {'diff': [3.0140000006895207e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0560000006119026e-06, 3.0139999998013423e-06, 3.0269999999887887e-06, 3.0419999994535374e-06, 3.0560000006119026e-06, ...</msg>
<status status="PASS" starttime="20201029 12:46:19.087" endtime="20201029 12:46:19.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.095" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:19.094" endtime="20201029 12:46:19.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.098" level="INFO">VALUE: [3.0140000006895207e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0560000006119026e-06, 3.0139999998013423e-06, 3.0269999999887887e-06, 3.0419999994535374e-06, 3.0560000006119026e-06, 3.040999999370797e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.028000000071529e-06, 2.9999999995311555e-06, 3.0139999998013423e-06, 3.0560000006119026e-06, 3.0410000002589754e-06, 3.028000000071529e-06, 3.0410000002589754e-06, 3.0269999999887887e-06, 3.0560000006119026e-06, 3.055999999723724e-06, 3.0410000002589754e-06, 3.0419999994535374e-06, 3.028000000071529e-06, 3.069999999993911e-06, 3.0549999996409838e-06, 3.042000000341716e-06, 3.0560000006119026e-06, 3.097999999646106e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.055999999723724e-06, 3.028000000071529e-06, 3.0410000002589754e-06, 3.000000000419334e-06, 3.0419999994535374e-06, 3.0419999994535374e-06, 3.0969999995633657e-06, 3.028000000071529e-06, 3.040999999370797e-06, 3.055999999723724e-06, 3.042000000341716e-06, 2.9859999992609687e-06, 3.028000000071529e-06, 3.0549999996409838e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.0419999994535374e-06, 3.0419999994535374e-06, 3.055999999723724e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.028000000071529e-06, 3.0410000002589754e-06, 3.055999999723724e-06, 3.0269999999887887e-06, 3.042000000341716e-06, 3.0410000002589754e-06]</msg>
<status status="PASS" starttime="20201029 12:46:19.096" endtime="20201029 12:46:19.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.092" endtime="20201029 12:46:19.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.720" endtime="20201029 12:46:19.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.720" endtime="20201029 12:46:19.099"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.108" endtime="20201029 12:46:19.120"></status>
</kw>
<msg timestamp="20201029 12:46:19.120" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:19.106" endtime="20201029 12:46:19.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.123" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:19.121" endtime="20201029 12:46:19.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.124" endtime="20201029 12:46:19.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.103" endtime="20201029 12:46:19.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.101" endtime="20201029 12:46:19.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.133" endtime="20201029 12:46:19.452"></status>
</kw>
<msg timestamp="20201029 12:46:19.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.477290472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.4772935, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:19.132" endtime="20201029 12:46:19.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.477290472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.4772935, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:19.457" endtime="20201029 12:46:19.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.467" endtime="20201029 12:46:19.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.129" endtime="20201029 12:46:19.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.128" endtime="20201029 12:46:19.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:19.474" level="INFO">${RESULT} = [{'diff': 3.028000000071529e-06}, {'diff': 3.028000000071529e-06}, {'diff': 3.042000000341716e-06}, {'diff': 3.0419999994535374e-06}, {'diff': 3.0410000002589754e-06}, {'diff': 3.028000000071529e-06},...</msg>
<status status="PASS" starttime="20201029 12:46:19.470" endtime="20201029 12:46:19.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:19.479" level="INFO">${OVERHEAD} = {'diff': [3.028000000071529e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.0...</msg>
<status status="PASS" starttime="20201029 12:46:19.475" endtime="20201029 12:46:19.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.484" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:19.483" endtime="20201029 12:46:19.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.487" level="INFO">VALUE: [3.028000000071529e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.028000000071529e-06, 3.0410000002589754e-06, 3.055999999723724e-06, 3.0269999999887887e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0279999991833506e-06, 3.097000000451544e-06, 3.0830000001813573e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0279999991833506e-06, 3.055000000529162e-06, 3.055999999723724e-06, 3.055999999723724e-06, 3.0419999994535374e-06, 3.0419999994535374e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.000000000419334e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.055999999723724e-06, 3.097999999646106e-06, 3.0419999994535374e-06, 3.028000000071529e-06, 3.1109999998335525e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.0549999996409838e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.0410000002589754e-06, 3.028000000071529e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.0140000006895207e-06, 3.0549999996409838e-06, 3.0419999994535374e-06, 3.0269999999887887e-06, 3.0419999994535374e-06, 3.0139999998013423e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0840000002640977e-06, 3.0410000002589754e-06]</msg>
<status status="PASS" starttime="20201029 12:46:19.485" endtime="20201029 12:46:19.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.480" endtime="20201029 12:46:19.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.100" endtime="20201029 12:46:19.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.099" endtime="20201029 12:46:19.488"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.496" endtime="20201029 12:46:19.508"></status>
</kw>
<msg timestamp="20201029 12:46:19.509" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:19.495" endtime="20201029 12:46:19.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.511" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:19.510" endtime="20201029 12:46:19.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.513" endtime="20201029 12:46:19.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.492" endtime="20201029 12:46:19.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.490" endtime="20201029 12:46:19.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.522" endtime="20201029 12:46:19.843"></status>
</kw>
<msg timestamp="20201029 12:46:19.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.846685625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.846688653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:19.520" endtime="20201029 12:46:19.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.846685625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.846688653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:19.848" endtime="20201029 12:46:19.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.857" endtime="20201029 12:46:19.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.518" endtime="20201029 12:46:19.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.516" endtime="20201029 12:46:19.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:19.864" level="INFO">${RESULT} = [{'diff': 3.028000000071529e-06}, {'diff': 3.0419999994535374e-06}, {'diff': 3.0410000002589754e-06}, {'diff': 3.0140000006895207e-06}, {'diff': 3.0549999996409838e-06}, {'diff': 3.0419999994535374e-0...</msg>
<status status="PASS" starttime="20201029 12:46:19.861" endtime="20201029 12:46:19.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:19.870" level="INFO">${OVERHEAD} = {'diff': [3.028000000071529e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.0140000006895207e-06, 3.0549999996409838e-06, 3.0419999994535374e-06, 3.0269999999887887e-06, 3.0419999994535374e-06,...</msg>
<status status="PASS" starttime="20201029 12:46:19.865" endtime="20201029 12:46:19.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.874" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:19.873" endtime="20201029 12:46:19.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.877" level="INFO">VALUE: [3.028000000071529e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.0140000006895207e-06, 3.0549999996409838e-06, 3.0419999994535374e-06, 3.0269999999887887e-06, 3.0419999994535374e-06, 3.0139999998013423e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0840000002640977e-06, 3.0410000002589754e-06, 3.0410000002589754e-06, 3.0139999998013423e-06, 3.0560000006119026e-06, 3.040999999370797e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.0689999999111706e-06, 3.028000000071529e-06, 3.0549999996409838e-06, 3.028000000071529e-06, 3.055000000529162e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.040999999370797e-06, 3.0410000002589754e-06, 3.028000000071529e-06, 3.040999999370797e-06, 3.0560000006119026e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.028000000071529e-06, 3.0410000002589754e-06, 3.069999999993911e-06, 3.0269999999887887e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.0560000006119026e-06, 3.055999999723724e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.028000000071529e-06, 2.9859999992609687e-06, 3.0969999995633657e-06, 3.0689999999111706e-06, 3.0549999996409838e-06, 3.0419999994535374e-06, 3.0140000006895207e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.040999999370797e-06, 3.028000000071529e-06, 3.0830000001813573e-06, 2.9720000007671388e-06, 3.028000000071529e-06]</msg>
<status status="PASS" starttime="20201029 12:46:19.875" endtime="20201029 12:46:19.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.871" endtime="20201029 12:46:19.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.489" endtime="20201029 12:46:19.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.488" endtime="20201029 12:46:19.878"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.886" endtime="20201029 12:46:19.898"></status>
</kw>
<msg timestamp="20201029 12:46:19.898" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:19.884" endtime="20201029 12:46:19.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.901" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:19.899" endtime="20201029 12:46:19.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.902" endtime="20201029 12:46:19.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.882" endtime="20201029 12:46:19.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.880" endtime="20201029 12:46:19.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.912" endtime="20201029 12:46:20.238"></status>
</kw>
<msg timestamp="20201029 12:46:20.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.226219986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.226223014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:19.909" endtime="20201029 12:46:20.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.226219986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.226223014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:20.243" endtime="20201029 12:46:20.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.253" endtime="20201029 12:46:20.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.907" endtime="20201029 12:46:20.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.905" endtime="20201029 12:46:20.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:20.260" level="INFO">${RESULT} = [{'diff': 3.028000000071529e-06}, {'diff': 2.9859999992609687e-06}, {'diff': 3.0969999995633657e-06}, {'diff': 3.0689999999111706e-06}, {'diff': 3.0549999996409838e-06}, {'diff': 3.0419999994535374e-0...</msg>
<status status="PASS" starttime="20201029 12:46:20.256" endtime="20201029 12:46:20.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:20.264" level="INFO">${OVERHEAD} = {'diff': [3.028000000071529e-06, 2.9859999992609687e-06, 3.0969999995633657e-06, 3.0689999999111706e-06, 3.0549999996409838e-06, 3.0419999994535374e-06, 3.0140000006895207e-06, 3.042000000341716e-06, ...</msg>
<status status="PASS" starttime="20201029 12:46:20.260" endtime="20201029 12:46:20.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.269" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:20.267" endtime="20201029 12:46:20.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.275" level="INFO">VALUE: [3.028000000071529e-06, 2.9859999992609687e-06, 3.0969999995633657e-06, 3.0689999999111706e-06, 3.0549999996409838e-06, 3.0419999994535374e-06, 3.0140000006895207e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.040999999370797e-06, 3.028000000071529e-06, 3.0830000001813573e-06, 2.9720000007671388e-06, 3.028000000071529e-06, 3.0269999999887887e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.0560000006119026e-06, 3.0969999995633657e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.0549999996409838e-06, 3.042000000341716e-06, 3.055000000529162e-06, 3.0839999993759193e-06, 3.0969999995633657e-06, 3.0410000002589754e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.055000000529162e-06, 3.055000000529162e-06, 3.111999999916293e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.040999999370797e-06, 3.0410000002589754e-06, 3.055000000529162e-06, 3.055000000529162e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.0139999998013423e-06, 3.042000000341716e-06, 3.0279999991833506e-06, 3.0410000002589754e-06, 2.9999999995311555e-06, 3.069999999993911e-06, 3.042000000341716e-06, 3.040999999370797e-06, 3.0560000006119026e-06, 2.986000000149147e-06, 3.028000000071529e-06, 3.0980000005342845e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 2.9999999995311555e-06]</msg>
<status status="PASS" starttime="20201029 12:46:20.273" endtime="20201029 12:46:20.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.265" endtime="20201029 12:46:20.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.879" endtime="20201029 12:46:20.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.878" endtime="20201029 12:46:20.277"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.295" endtime="20201029 12:46:20.312"></status>
</kw>
<msg timestamp="20201029 12:46:20.312" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:20.292" endtime="20201029 12:46:20.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.315" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:20.314" endtime="20201029 12:46:20.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.316" endtime="20201029 12:46:20.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.286" endtime="20201029 12:46:20.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.280" endtime="20201029 12:46:20.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.326" endtime="20201029 12:46:20.638"></status>
</kw>
<msg timestamp="20201029 12:46:20.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.607175347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.607178389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:20.324" endtime="20201029 12:46:20.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.607175347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.607178389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:20.643" endtime="20201029 12:46:20.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.653" endtime="20201029 12:46:20.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.321" endtime="20201029 12:46:20.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.319" endtime="20201029 12:46:20.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:20.659" level="INFO">${RESULT} = [{'diff': 3.042000000341716e-06}, {'diff': 3.040999999370797e-06}, {'diff': 3.0560000006119026e-06}, {'diff': 2.986000000149147e-06}, {'diff': 3.028000000071529e-06}, {'diff': 3.0980000005342845e-06},...</msg>
<status status="PASS" starttime="20201029 12:46:20.656" endtime="20201029 12:46:20.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:20.665" level="INFO">${OVERHEAD} = {'diff': [3.042000000341716e-06, 3.040999999370797e-06, 3.0560000006119026e-06, 2.986000000149147e-06, 3.028000000071529e-06, 3.0980000005342845e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.04...</msg>
<status status="PASS" starttime="20201029 12:46:20.660" endtime="20201029 12:46:20.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.669" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:20.668" endtime="20201029 12:46:20.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.672" level="INFO">VALUE: [3.042000000341716e-06, 3.040999999370797e-06, 3.0560000006119026e-06, 2.986000000149147e-06, 3.028000000071529e-06, 3.0980000005342845e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 2.9999999995311555e-06, 3.097000000451544e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.040999999370797e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.0269999999887887e-06, 3.0139999998013423e-06, 3.028000000071529e-06, 3.0549999996409838e-06, 3.0139999998013423e-06, 3.0269999999887887e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0549999996409838e-06, 2.986000000149147e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.0139999998013423e-06, 3.028000000071529e-06, 3.055999999723724e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.0419999994535374e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.0560000006119026e-06, 3.0410000002589754e-06, 3.0419999994535374e-06, 3.0549999996409838e-06, 3.0410000002589754e-06, 3.028000000071529e-06, 3.042000000341716e-06, 2.9719999998789604e-06, 3.042000000341716e-06, 3.0560000006119026e-06, 3.040999999370797e-06, 3.042000000341716e-06, 2.958000000496952e-06, 3.0419999994535374e-06, 3.0269999999887887e-06, 3.0969999995633657e-06, 3.055999999723724e-06, 2.986000000149147e-06, 3.0140000006895207e-06, 3.055000000529162e-06, 3.0269999999887887e-06, 3.055000000529162e-06, 3.040999999370797e-06, 3.0689999999111706e-06]</msg>
<status status="PASS" starttime="20201029 12:46:20.670" endtime="20201029 12:46:20.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.666" endtime="20201029 12:46:20.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.279" endtime="20201029 12:46:20.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.278" endtime="20201029 12:46:20.673"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.681" endtime="20201029 12:46:20.694"></status>
</kw>
<msg timestamp="20201029 12:46:20.694" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:20.680" endtime="20201029 12:46:20.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.697" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:20.695" endtime="20201029 12:46:20.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.698" endtime="20201029 12:46:20.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.677" endtime="20201029 12:46:20.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.675" endtime="20201029 12:46:20.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.707" endtime="20201029 12:46:21.015"></status>
</kw>
<msg timestamp="20201029 12:46:21.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.010478153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.010481194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:20.705" endtime="20201029 12:46:21.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.010478153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.010481194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:21.020" endtime="20201029 12:46:21.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.029" endtime="20201029 12:46:21.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.703" endtime="20201029 12:46:21.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.701" endtime="20201029 12:46:21.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:21.037" level="INFO">${RESULT} = [{'diff': 3.040999999370797e-06}, {'diff': 3.042000000341716e-06}, {'diff': 2.958000000496952e-06}, {'diff': 3.0419999994535374e-06}, {'diff': 3.0269999999887887e-06}, {'diff': 3.0969999995633657e-06}...</msg>
<status status="PASS" starttime="20201029 12:46:21.033" endtime="20201029 12:46:21.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:21.042" level="INFO">${OVERHEAD} = {'diff': [3.040999999370797e-06, 3.042000000341716e-06, 2.958000000496952e-06, 3.0419999994535374e-06, 3.0269999999887887e-06, 3.0969999995633657e-06, 3.055999999723724e-06, 2.986000000149147e-06, 3.0...</msg>
<status status="PASS" starttime="20201029 12:46:21.038" endtime="20201029 12:46:21.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.046" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:21.045" endtime="20201029 12:46:21.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.048" level="INFO">VALUE: [3.040999999370797e-06, 3.042000000341716e-06, 2.958000000496952e-06, 3.0419999994535374e-06, 3.0269999999887887e-06, 3.0969999995633657e-06, 3.055999999723724e-06, 2.986000000149147e-06, 3.0140000006895207e-06, 3.055000000529162e-06, 3.0269999999887887e-06, 3.055000000529162e-06, 3.040999999370797e-06, 3.0689999999111706e-06, 3.040999999370797e-06, 3.028000000071529e-06, 3.027000000876967e-06, 3.0410000002589754e-06, 3.0549999996409838e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.0549999996409838e-06, 3.055999999723724e-06, 3.040999999370797e-06, 3.0130000006067803e-06, 3.0419999994535374e-06, 3.097000000451544e-06, 2.9999999995311555e-06, 3.0279999991833506e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.0139999998013423e-06, 3.000000000419334e-06, 3.028000000071529e-06, 3.0549999996409838e-06, 3.028000000071529e-06, 3.040999999370797e-06, 3.042000000341716e-06, 3.0549999996409838e-06, 3.0139999998013423e-06, 3.0269999999887887e-06, 3.040999999370797e-06, 3.0410000002589754e-06, 3.0419999994535374e-06, 3.0139999998013423e-06, 3.0419999994535374e-06, 3.040999999370797e-06, 3.055000000529162e-06, 3.0419999994535374e-06, 2.986000000149147e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.042000000341716e-06, 2.986000000149147e-06, 3.0410000002589754e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.0139999998013423e-06, 3.028000000071529e-06, 3.0549999996409838e-06, 3.042000000341716e-06, 3.055999999723724e-06, 3.0140000006895207e-06]</msg>
<status status="PASS" starttime="20201029 12:46:21.047" endtime="20201029 12:46:21.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.043" endtime="20201029 12:46:21.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.674" endtime="20201029 12:46:21.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.674" endtime="20201029 12:46:21.050"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.058" endtime="20201029 12:46:21.070"></status>
</kw>
<msg timestamp="20201029 12:46:21.070" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:21.057" endtime="20201029 12:46:21.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.073" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:21.071" endtime="20201029 12:46:21.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.074" endtime="20201029 12:46:21.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.054" endtime="20201029 12:46:21.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.052" endtime="20201029 12:46:21.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.084" endtime="20201029 12:46:21.401"></status>
</kw>
<msg timestamp="20201029 12:46:21.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.381674472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.381677514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:21.082" endtime="20201029 12:46:21.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.381674472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.381677514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:21.406" endtime="20201029 12:46:21.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.416" endtime="20201029 12:46:21.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.079" endtime="20201029 12:46:21.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.077" endtime="20201029 12:46:21.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:21.423" level="INFO">${RESULT} = [{'diff': 3.0419999994535374e-06}, {'diff': 3.042000000341716e-06}, {'diff': 3.042000000341716e-06}, {'diff': 3.042000000341716e-06}, {'diff': 2.986000000149147e-06}, {'diff': 3.0410000002589754e-06},...</msg>
<status status="PASS" starttime="20201029 12:46:21.419" endtime="20201029 12:46:21.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:21.428" level="INFO">${OVERHEAD} = {'diff': [3.0419999994535374e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.042000000341716e-06, 2.986000000149147e-06, 3.0410000002589754e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.0...</msg>
<status status="PASS" starttime="20201029 12:46:21.424" endtime="20201029 12:46:21.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.433" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:21.431" endtime="20201029 12:46:21.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.435" level="INFO">VALUE: [3.0419999994535374e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.042000000341716e-06, 2.986000000149147e-06, 3.0410000002589754e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.0139999998013423e-06, 3.028000000071529e-06, 3.0549999996409838e-06, 3.042000000341716e-06, 3.055999999723724e-06, 3.0140000006895207e-06, 3.0269999999887887e-06, 3.028000000071529e-06, 3.0419999994535374e-06, 3.0840000002640977e-06, 3.042000000341716e-06, 3.069999999993911e-06, 3.055999999723724e-06, 3.0269999999887887e-06, 3.0269999999887887e-06, 3.0419999994535374e-06, 3.028000000071529e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.040999999370797e-06, 3.040999999370797e-06, 3.0139999998013423e-06, 3.040999999370797e-06, 3.0549999996409838e-06, 3.042000000341716e-06, 3.040999999370797e-06, 3.0410000002589754e-06, 3.0269999999887887e-06, 2.9719999998789604e-06, 3.028000000071529e-06, 3.0139999998013423e-06, 3.040999999370797e-06, 3.0419999994535374e-06, 3.0830000001813573e-06, 3.040999999370797e-06, 3.055999999723724e-06, 3.0410000002589754e-06, 3.055000000529162e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0269999999887887e-06, 3.028000000071529e-06, 2.9719999998789604e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.0269999999887887e-06, 3.040999999370797e-06, 3.0419999994535374e-06, 3.0419999994535374e-06, 3.0830000001813573e-06, 3.0549999996409838e-06, 3.0419999994535374e-06]</msg>
<status status="PASS" starttime="20201029 12:46:21.434" endtime="20201029 12:46:21.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.429" endtime="20201029 12:46:21.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.051" endtime="20201029 12:46:21.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.050" endtime="20201029 12:46:21.437"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.445" endtime="20201029 12:46:21.457"></status>
</kw>
<msg timestamp="20201029 12:46:21.457" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:21.443" endtime="20201029 12:46:21.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.460" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:21.458" endtime="20201029 12:46:21.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.461" endtime="20201029 12:46:21.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.441" endtime="20201029 12:46:21.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.439" endtime="20201029 12:46:21.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.470" endtime="20201029 12:46:21.793"></status>
</kw>
<msg timestamp="20201029 12:46:21.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.747294806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.747297833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:21.468" endtime="20201029 12:46:21.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.747294806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.747297833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:21.798" endtime="20201029 12:46:21.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.808" endtime="20201029 12:46:21.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.466" endtime="20201029 12:46:21.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.464" endtime="20201029 12:46:21.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:21.815" level="INFO">${RESULT} = [{'diff': 3.0269999999887887e-06}, {'diff': 3.028000000071529e-06}, {'diff': 2.9719999998789604e-06}, {'diff': 3.0419999994535374e-06}, {'diff': 3.0410000002589754e-06}, {'diff': 3.042000000341716e-06...</msg>
<status status="PASS" starttime="20201029 12:46:21.812" endtime="20201029 12:46:21.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:21.821" level="INFO">${OVERHEAD} = {'diff': [3.0269999999887887e-06, 3.028000000071529e-06, 2.9719999998789604e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.0269999999887887e-06, ...</msg>
<status status="PASS" starttime="20201029 12:46:21.816" endtime="20201029 12:46:21.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.826" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:21.825" endtime="20201029 12:46:21.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.828" level="INFO">VALUE: [3.0269999999887887e-06, 3.028000000071529e-06, 2.9719999998789604e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.0269999999887887e-06, 3.040999999370797e-06, 3.0419999994535374e-06, 3.0419999994535374e-06, 3.0830000001813573e-06, 3.0549999996409838e-06, 3.0419999994535374e-06, 3.055999999723724e-06, 3.028000000071529e-06, 3.0839999993759193e-06, 3.0410000002589754e-06, 3.0269999999887887e-06, 3.069999999993911e-06, 3.0549999996409838e-06, 3.040999999370797e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.055999999723724e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.069999999993911e-06, 3.0410000002589754e-06, 3.0830000001813573e-06, 3.0410000002589754e-06, 3.055000000529162e-06, 2.986999999343709e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.0419999994535374e-06, 3.0549999996409838e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.0269999999887887e-06, 3.0549999996409838e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.000000000419334e-06, 3.0139999998013423e-06, 3.042000000341716e-06, 3.055999999723724e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.0139999998013423e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.055000000529162e-06, 3.028000000071529e-06, 3.042000000341716e-06]</msg>
<status status="PASS" starttime="20201029 12:46:21.827" endtime="20201029 12:46:21.829"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.822" endtime="20201029 12:46:21.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.438" endtime="20201029 12:46:21.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.437" endtime="20201029 12:46:21.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.183" endtime="20201029 12:46:21.830"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:14.114" endtime="20201029 12:46:21.831" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:21.838" endtime="20201029 12:46:21.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.836" endtime="20201029 12:46:21.858"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.871" endtime="20201029 12:46:21.888"></status>
</kw>
<msg timestamp="20201029 12:46:21.889" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:21.870" endtime="20201029 12:46:21.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.891" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:21.890" endtime="20201029 12:46:21.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.895" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:21.893" endtime="20201029 12:46:21.895"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:21.867" endtime="20201029 12:46:21.896"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:21.865" endtime="20201029 12:46:21.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.863" endtime="20201029 12:46:21.896"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:21.900" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:21.900" endtime="20201029 12:46:21.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.897" endtime="20201029 12:46:21.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.862" endtime="20201029 12:46:21.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.862" endtime="20201029 12:46:21.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.902" endtime="20201029 12:46:21.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.860" endtime="20201029 12:46:21.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.859" endtime="20201029 12:46:21.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.835" endtime="20201029 12:46:21.905"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.914" endtime="20201029 12:46:21.934"></status>
</kw>
<msg timestamp="20201029 12:46:21.935" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:21.912" endtime="20201029 12:46:21.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.937" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:21.936" endtime="20201029 12:46:21.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.938" endtime="20201029 12:46:21.940"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.909" endtime="20201029 12:46:21.940"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.907" endtime="20201029 12:46:21.941"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.944" endtime="20201029 12:46:21.945"></status>
</kw>
<msg timestamp="20201029 12:46:21.946" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:46:21.942" endtime="20201029 12:46:21.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.950" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:46:21.949" endtime="20201029 12:46:21.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.952" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:46:21.951" endtime="20201029 12:46:21.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.947" endtime="20201029 12:46:21.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.957" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:46:21.956" endtime="20201029 12:46:21.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.959" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:46:21.958" endtime="20201029 12:46:21.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.954" endtime="20201029 12:46:21.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.967" endtime="20201029 12:46:22.272"></status>
</kw>
<msg timestamp="20201029 12:46:22.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068517264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068526417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:21.965" endtime="20201029 12:46:22.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068517264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068526417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:22.276" endtime="20201029 12:46:22.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.284" endtime="20201029 12:46:22.286"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.963" endtime="20201029 12:46:22.286"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.961" endtime="20201029 12:46:22.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:22.291" level="INFO">${RESULT} = [{'diff': 9.153000000011735e-06}, {'diff': 1.0957999999991475e-05}, {'diff': 1.0958000000005352e-05}, {'diff': 1.0958999999990948e-05}, {'diff': 1.0972000000011861e-05}, {'diff': 1.0971999999997983e-0...</msg>
<status status="PASS" starttime="20201029 12:46:22.287" endtime="20201029 12:46:22.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:22.295" level="INFO">${OVERHEAD} = {'diff': [9.153000000011735e-06, 1.0957999999991475e-05, 1.0958000000005352e-05, 1.0958999999990948e-05, 1.0972000000011861e-05, 1.0971999999997983e-05, 1.0971999999997983e-05, 1.0957999999991475e-05,...</msg>
<status status="PASS" starttime="20201029 12:46:22.292" endtime="20201029 12:46:22.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.299" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 12:46:22.298" endtime="20201029 12:46:22.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.302" level="INFO">VALUE: [9.153000000011735e-06, 1.0957999999991475e-05, 1.0958000000005352e-05, 1.0958999999990948e-05, 1.0972000000011861e-05, 1.0971999999997983e-05, 1.0971999999997983e-05, 1.0957999999991475e-05, 1.0958000000005352e-05, 1.0916999999999177e-05, 1.0943999999998844e-05, 1.0903000000006546e-05, 1.0943999999998844e-05, 1.0958000000005352e-05, 1.0943999999998844e-05, 1.0945000000012195e-05, 1.0986000000004492e-05, 1.0958999999990948e-05, 1.0971999999997983e-05, 1.0931000000005686e-05, 1.0929999999992335e-05, 1.0957999999991475e-05, 1.0958000000005352e-05, 1.0985999999990614e-05, 1.1014000000003632e-05, 1.0916999999999177e-05, 1.0931000000005686e-05, 1.0943999999998844e-05, 1.0943999999998844e-05, 1.0958000000005352e-05, 1.0944999999998317e-05, 1.0944999999998317e-05, 1.0959000000004826e-05, 1.0943999999998844e-05, 1.0971999999997983e-05, 1.0958000000005352e-05, 1.0958000000005352e-05, 1.0944999999998317e-05, 1.0971999999997983e-05, 1.0986000000004492e-05, 1.0957999999991475e-05, 1.0944999999998317e-05, 1.0999999999997123e-05, 1.0959000000004826e-05, 1.0944999999998317e-05, 1.0958000000005352e-05, 1.0958000000005352e-05, 1.0945000000012195e-05, 1.0971999999997983e-05, 1.0944999999998317e-05]</msg>
<status status="PASS" starttime="20201029 12:46:22.300" endtime="20201029 12:46:22.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.296" endtime="20201029 12:46:22.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.906" endtime="20201029 12:46:22.304"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:21.833" endtime="20201029 12:46:22.304" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:22.311" endtime="20201029 12:46:22.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.309" endtime="20201029 12:46:22.331"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.345" endtime="20201029 12:46:22.359"></status>
</kw>
<msg timestamp="20201029 12:46:22.360" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:22.343" endtime="20201029 12:46:22.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.362" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:22.361" endtime="20201029 12:46:22.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.365" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:22.363" endtime="20201029 12:46:22.365"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:22.340" endtime="20201029 12:46:22.366"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:22.338" endtime="20201029 12:46:22.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.336" endtime="20201029 12:46:22.367"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:22.370" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:22.370" endtime="20201029 12:46:22.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.368" endtime="20201029 12:46:22.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.335" endtime="20201029 12:46:22.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.335" endtime="20201029 12:46:22.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.372" endtime="20201029 12:46:22.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.333" endtime="20201029 12:46:22.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.331" endtime="20201029 12:46:22.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.308" endtime="20201029 12:46:22.375"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.383" endtime="20201029 12:46:22.454"></status>
</kw>
<msg timestamp="20201029 12:46:22.455" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:22.382" endtime="20201029 12:46:22.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.457" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:22.456" endtime="20201029 12:46:22.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.458" endtime="20201029 12:46:22.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.379" endtime="20201029 12:46:22.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.377" endtime="20201029 12:46:22.461"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.463" endtime="20201029 12:46:22.465"></status>
</kw>
<msg timestamp="20201029 12:46:22.465" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:46:22.462" endtime="20201029 12:46:22.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.469" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:46:22.468" endtime="20201029 12:46:22.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.472" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:46:22.471" endtime="20201029 12:46:22.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.466" endtime="20201029 12:46:22.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.478" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:46:22.475" endtime="20201029 12:46:22.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.480" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:46:22.479" endtime="20201029 12:46:22.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.473" endtime="20201029 12:46:22.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.487" endtime="20201029 12:46:22.777"></status>
</kw>
<msg timestamp="20201029 12:46:22.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065794903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065816431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:22.485" endtime="20201029 12:46:22.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065794903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065816431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:22.781" endtime="20201029 12:46:22.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.788" endtime="20201029 12:46:22.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.483" endtime="20201029 12:46:22.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.481" endtime="20201029 12:46:22.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:22.795" level="INFO">${RESULT} = [{'diff': 2.1527999999992886e-05}, {'diff': 3.402799999999151e-05}, {'diff': 3.3750000000012936e-05}, {'diff': 3.376400000000557e-05}, {'diff': 3.372199999999992e-05}, {'diff': 3.372199999999992e-05},...</msg>
<status status="PASS" starttime="20201029 12:46:22.792" endtime="20201029 12:46:22.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:22.799" level="INFO">${OVERHEAD} = {'diff': [2.1527999999992886e-05, 3.402799999999151e-05, 3.3750000000012936e-05, 3.376400000000557e-05, 3.372199999999992e-05, 3.372199999999992e-05, 3.366600000000164e-05, 3.369500000000025e-05, 3.37...</msg>
<status status="PASS" starttime="20201029 12:46:22.796" endtime="20201029 12:46:22.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.804" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 12:46:22.803" endtime="20201029 12:46:22.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.806" level="INFO">VALUE: [2.1527999999992886e-05, 3.402799999999151e-05, 3.3750000000012936e-05, 3.376400000000557e-05, 3.372199999999992e-05, 3.372199999999992e-05, 3.366600000000164e-05, 3.369500000000025e-05, 3.376400000000557e-05, 3.373599999999255e-05, 3.370900000000676e-05, 3.3708999999992884e-05, 3.372199999999992e-05, 3.376400000000557e-05, 3.370800000000729e-05, 3.370799999999341e-05, 3.372199999999992e-05, 3.37370000000059e-05, 3.372199999999992e-05, 3.373599999999255e-05, 3.379199999999083e-05, 3.372199999999992e-05, 3.373600000000643e-05, 3.379199999999083e-05, 3.373600000000643e-05, 3.373599999999255e-05, 3.370800000000729e-05, 3.374999999999906e-05, 3.372199999999992e-05, 3.374999999999906e-05, 3.372199999999992e-05, 3.372199999999992e-05, 3.372299999999939e-05, 3.3680999999993744e-05, 3.372299999999939e-05, 3.373599999999255e-05, 3.370799999999341e-05, 3.374999999999906e-05, 3.374999999999906e-05, 3.373599999999255e-05, 3.373600000000643e-05, 3.3652999999994604e-05, 3.373600000000643e-05, 3.372199999999992e-05, 3.374999999999906e-05, 3.372299999999939e-05, 3.372199999999992e-05, 3.372299999999939e-05, 3.374999999999906e-05, 3.373699999999202e-05]</msg>
<status status="PASS" starttime="20201029 12:46:22.805" endtime="20201029 12:46:22.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.800" endtime="20201029 12:46:22.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.376" endtime="20201029 12:46:22.809"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:22.306" endtime="20201029 12:46:22.809" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:22.816" endtime="20201029 12:46:22.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.814" endtime="20201029 12:46:22.836"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.848" endtime="20201029 12:46:22.862"></status>
</kw>
<msg timestamp="20201029 12:46:22.863" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:22.847" endtime="20201029 12:46:22.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.865" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:22.864" endtime="20201029 12:46:22.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.868" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:22.866" endtime="20201029 12:46:22.869"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:22.844" endtime="20201029 12:46:22.869"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:22.842" endtime="20201029 12:46:22.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.841" endtime="20201029 12:46:22.870"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:22.874" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:22.873" endtime="20201029 12:46:22.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.871" endtime="20201029 12:46:22.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.840" endtime="20201029 12:46:22.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.839" endtime="20201029 12:46:22.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.876" endtime="20201029 12:46:22.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.838" endtime="20201029 12:46:22.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.836" endtime="20201029 12:46:22.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.813" endtime="20201029 12:46:22.878"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.888" endtime="20201029 12:46:23.078"></status>
</kw>
<msg timestamp="20201029 12:46:23.079" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:22.885" endtime="20201029 12:46:23.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.081" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:23.080" endtime="20201029 12:46:23.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.082" endtime="20201029 12:46:23.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.882" endtime="20201029 12:46:23.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.880" endtime="20201029 12:46:23.085"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.087" endtime="20201029 12:46:23.089"></status>
</kw>
<msg timestamp="20201029 12:46:23.089" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:46:23.085" endtime="20201029 12:46:23.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.093" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:46:23.092" endtime="20201029 12:46:23.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.095" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:46:23.094" endtime="20201029 12:46:23.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.090" endtime="20201029 12:46:23.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.100" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:46:23.099" endtime="20201029 12:46:23.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.102" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:46:23.101" endtime="20201029 12:46:23.102"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.097" endtime="20201029 12:46:23.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.109" endtime="20201029 12:46:23.403"></status>
</kw>
<msg timestamp="20201029 12:46:23.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065944722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065981875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:23.108" endtime="20201029 12:46:23.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065944722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065981875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:23.407" endtime="20201029 12:46:23.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.415" endtime="20201029 12:46:23.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.105" endtime="20201029 12:46:23.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.103" endtime="20201029 12:46:23.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:23.422" level="INFO">${RESULT} = [{'diff': 3.7152999999998104e-05}, {'diff': 6.038899999999403e-05}, {'diff': 6.034700000000226e-05}, {'diff': 6.040300000000054e-05}, {'diff': 6.036099999999489e-05}, {'diff': 6.034700000000226e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:23.418" endtime="20201029 12:46:23.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:23.427" level="INFO">${OVERHEAD} = {'diff': [3.7152999999998104e-05, 6.038899999999403e-05, 6.034700000000226e-05, 6.040300000000054e-05, 6.036099999999489e-05, 6.034700000000226e-05, 6.03750000000014e-05, 6.036099999999489e-05, 6.0375...</msg>
<status status="PASS" starttime="20201029 12:46:23.423" endtime="20201029 12:46:23.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.431" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 12:46:23.430" endtime="20201029 12:46:23.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.434" level="INFO">VALUE: [3.7152999999998104e-05, 6.038899999999403e-05, 6.034700000000226e-05, 6.040300000000054e-05, 6.036099999999489e-05, 6.034700000000226e-05, 6.03750000000014e-05, 6.036099999999489e-05, 6.03750000000014e-05, 6.037499999998752e-05, 6.0291999999989576e-05, 6.036100000000877e-05, 6.0305999999996085e-05, 6.038900000000791e-05, 6.034700000000226e-05, 6.034700000000226e-05, 6.036100000000877e-05, 6.03750000000014e-05, 6.036099999998101e-05, 6.034699999998838e-05, 6.034700000001614e-05, 6.034699999998838e-05, 6.034699999998838e-05, 6.034800000001561e-05, 6.03750000000014e-05, 6.040199999998719e-05, 6.036200000000824e-05, 6.038799999999456e-05, 6.03750000000014e-05, 6.038899999999403e-05, 6.036200000000824e-05, 6.036100000000877e-05, 6.034800000001561e-05, 6.036100000000877e-05, 6.0374999999973644e-05, 6.0333999999995225e-05, 6.034700000001614e-05, 6.03750000000014e-05, 6.0347999999987856e-05, 6.036099999998101e-05, 6.036099999998101e-05, 6.040299999998666e-05, 6.036100000000877e-05, 6.030600000000996e-05, 6.034700000001614e-05, 6.03750000000014e-05, 6.036099999998101e-05, 6.034699999998838e-05, 6.036100000000877e-05, 6.036099999998101e-05]</msg>
<status status="PASS" starttime="20201029 12:46:23.432" endtime="20201029 12:46:23.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.428" endtime="20201029 12:46:23.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.879" endtime="20201029 12:46:23.435"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:22.811" endtime="20201029 12:46:23.436" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:23.443" endtime="20201029 12:46:23.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.441" endtime="20201029 12:46:23.463"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.487" endtime="20201029 12:46:23.501"></status>
</kw>
<msg timestamp="20201029 12:46:23.501" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:23.485" endtime="20201029 12:46:23.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.504" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:23.502" endtime="20201029 12:46:23.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.507" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:23.505" endtime="20201029 12:46:23.507"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:23.482" endtime="20201029 12:46:23.508"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:23.480" endtime="20201029 12:46:23.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.478" endtime="20201029 12:46:23.509"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:23.513" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:23.512" endtime="20201029 12:46:23.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.510" endtime="20201029 12:46:23.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.474" endtime="20201029 12:46:23.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.472" endtime="20201029 12:46:23.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.516" endtime="20201029 12:46:23.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.470" endtime="20201029 12:46:23.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.466" endtime="20201029 12:46:23.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.440" endtime="20201029 12:46:23.518"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.527" endtime="20201029 12:46:23.548"></status>
</kw>
<msg timestamp="20201029 12:46:23.548" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:23.526" endtime="20201029 12:46:23.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.551" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:23.549" endtime="20201029 12:46:23.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.552" endtime="20201029 12:46:23.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.523" endtime="20201029 12:46:23.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.521" endtime="20201029 12:46:23.555"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.557" endtime="20201029 12:46:23.559"></status>
</kw>
<msg timestamp="20201029 12:46:23.560" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:46:23.556" endtime="20201029 12:46:23.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.564" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:46:23.563" endtime="20201029 12:46:23.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.566" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:46:23.565" endtime="20201029 12:46:23.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.560" endtime="20201029 12:46:23.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.571" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:46:23.570" endtime="20201029 12:46:23.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.573" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:46:23.572" endtime="20201029 12:46:23.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.568" endtime="20201029 12:46:23.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.581" endtime="20201029 12:46:23.881"></status>
</kw>
<msg timestamp="20201029 12:46:23.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077629722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077639625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:23.579" endtime="20201029 12:46:23.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077629722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077639625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:23.885" endtime="20201029 12:46:23.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.894" endtime="20201029 12:46:23.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.576" endtime="20201029 12:46:23.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.575" endtime="20201029 12:46:23.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:23.901" level="INFO">${RESULT} = [{'diff': 9.903000000005546e-06}, {'diff': 9.915999999998704e-06}, {'diff': 9.915999999998704e-06}, {'diff': 9.915999999998704e-06}, {'diff': 9.915999999998704e-06}, {'diff': 9.915999999998704e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:46:23.897" endtime="20201029 12:46:23.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:23.905" level="INFO">${OVERHEAD} = {'diff': [9.903000000005546e-06, 9.915999999998704e-06, 9.915999999998704e-06, 9.915999999998704e-06, 9.915999999998704e-06, 9.915999999998704e-06, 9.973000000010335e-06, 9.957999999990474e-06, 9.9159...</msg>
<status status="PASS" starttime="20201029 12:46:23.902" endtime="20201029 12:46:23.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.910" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 12:46:23.909" endtime="20201029 12:46:23.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.912" level="INFO">VALUE: [9.903000000005546e-06, 9.915999999998704e-06, 9.915999999998704e-06, 9.915999999998704e-06, 9.915999999998704e-06, 9.915999999998704e-06, 9.973000000010335e-06, 9.957999999990474e-06, 9.915999999998704e-06, 9.916999999998177e-06, 9.874999999992529e-06, 9.931000000004686e-06, 9.916999999998177e-06, 9.903000000005546e-06, 9.916999999998177e-06, 9.916999999998177e-06, 9.902999999991668e-06, 9.915999999998704e-06, 9.916999999998177e-06, 9.901999999992195e-06, 9.916999999998177e-06, 9.903000000005546e-06, 9.916999999998177e-06, 9.915999999998704e-06, 9.917000000012055e-06, 9.874999999992529e-06, 9.930000000005212e-06, 9.944999999997317e-06, 9.916999999998177e-06, 9.903000000005546e-06, 9.915999999998704e-06, 9.902999999991668e-06, 9.916999999998177e-06, 9.915999999998704e-06, 9.917000000012055e-06, 9.903000000005546e-06, 9.916999999998177e-06, 9.930999999990808e-06, 9.916999999998177e-06, 9.888999999999037e-06, 9.846999999993389e-06, 9.930000000005212e-06, 9.915999999998704e-06, 9.902999999991668e-06, 9.916999999998177e-06, 9.931000000004686e-06, 9.916999999998177e-06, 9.930999999990808e-06, 9.860999999999898e-06, 9.916999999998177e-06]</msg>
<status status="PASS" starttime="20201029 12:46:23.911" endtime="20201029 12:46:23.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.906" endtime="20201029 12:46:23.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.519" endtime="20201029 12:46:23.914"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:23.437" endtime="20201029 12:46:23.914" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:23.921" endtime="20201029 12:46:23.940"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.920" endtime="20201029 12:46:23.941"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.955" endtime="20201029 12:46:23.968"></status>
</kw>
<msg timestamp="20201029 12:46:23.969" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:23.953" endtime="20201029 12:46:23.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.971" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:23.970" endtime="20201029 12:46:23.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.974" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:23.972" endtime="20201029 12:46:23.974"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:23.950" endtime="20201029 12:46:23.975"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:23.947" endtime="20201029 12:46:23.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.946" endtime="20201029 12:46:23.976"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:23.979" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:23.979" endtime="20201029 12:46:23.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.977" endtime="20201029 12:46:23.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.945" endtime="20201029 12:46:23.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.945" endtime="20201029 12:46:23.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.981" endtime="20201029 12:46:23.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.943" endtime="20201029 12:46:23.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.942" endtime="20201029 12:46:23.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.918" endtime="20201029 12:46:23.984"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.992" endtime="20201029 12:46:24.064"></status>
</kw>
<msg timestamp="20201029 12:46:24.064" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:23.991" endtime="20201029 12:46:24.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.067" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:24.065" endtime="20201029 12:46:24.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.068" endtime="20201029 12:46:24.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.988" endtime="20201029 12:46:24.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.986" endtime="20201029 12:46:24.070"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.072" endtime="20201029 12:46:24.074"></status>
</kw>
<msg timestamp="20201029 12:46:24.075" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:46:24.071" endtime="20201029 12:46:24.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.080" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:46:24.078" endtime="20201029 12:46:24.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.082" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:46:24.081" endtime="20201029 12:46:24.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.076" endtime="20201029 12:46:24.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.089" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:46:24.088" endtime="20201029 12:46:24.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.092" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:46:24.091" endtime="20201029 12:46:24.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.084" endtime="20201029 12:46:24.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.103" endtime="20201029 12:46:24.396"></status>
</kw>
<msg timestamp="20201029 12:46:24.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064992, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065012972, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:24.101" endtime="20201029 12:46:24.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064992, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065012972, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:24.400" endtime="20201029 12:46:24.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.409" endtime="20201029 12:46:24.411"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.097" endtime="20201029 12:46:24.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.095" endtime="20201029 12:46:24.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:24.418" level="INFO">${RESULT} = [{'diff': 2.0972000000007984e-05}, {'diff': 2.0916000000009705e-05}, {'diff': 2.0929999999988458e-05}, {'diff': 2.0944000000008844e-05}, {'diff': 2.0986000000000615e-05}, {'diff': 2.0945000000008318e-...</msg>
<status status="PASS" starttime="20201029 12:46:24.414" endtime="20201029 12:46:24.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:24.422" level="INFO">${OVERHEAD} = {'diff': [2.0972000000007984e-05, 2.0916000000009705e-05, 2.0929999999988458e-05, 2.0944000000008844e-05, 2.0986000000000615e-05, 2.0945000000008318e-05, 2.093099999998793e-05, 2.0943999999994967e-05,...</msg>
<status status="PASS" starttime="20201029 12:46:24.419" endtime="20201029 12:46:24.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.428" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 12:46:24.426" endtime="20201029 12:46:24.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.431" level="INFO">VALUE: [2.0972000000007984e-05, 2.0916000000009705e-05, 2.0929999999988458e-05, 2.0944000000008844e-05, 2.0986000000000615e-05, 2.0945000000008318e-05, 2.093099999998793e-05, 2.0943999999994967e-05, 2.0986000000000615e-05, 2.0917000000009178e-05, 2.093100000000181e-05, 2.093100000000181e-05, 2.0917000000009178e-05, 2.0945000000008318e-05, 2.0917000000009178e-05, 2.094499999999444e-05, 2.0958000000001475e-05, 2.0930000000002336e-05, 2.0943999999994967e-05, 2.094499999999444e-05, 2.0915999999995827e-05, 2.0943999999994967e-05, 2.0945000000008318e-05, 2.0944000000008844e-05, 2.093100000000181e-05, 2.0917000000009178e-05, 2.0944000000008844e-05, 2.093100000000181e-05, 2.0986000000000615e-05, 2.097299999999358e-05, 2.094499999999444e-05, 2.0943999999994967e-05, 2.0944000000008844e-05, 2.093100000000181e-05, 2.09169999999953e-05, 2.094499999999444e-05, 2.094499999999444e-05, 2.093100000000181e-05, 2.0930000000002336e-05, 2.0902000000003196e-05, 2.0945000000008318e-05, 2.088900000001004e-05, 2.0943999999994967e-05, 2.093100000000181e-05, 2.0986000000000615e-05, 2.094499999999444e-05, 2.094499999999444e-05, 2.0943999999994967e-05, 2.0943999999994967e-05, 2.093100000000181e-05]</msg>
<status status="PASS" starttime="20201029 12:46:24.429" endtime="20201029 12:46:24.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.423" endtime="20201029 12:46:24.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.984" endtime="20201029 12:46:24.432"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:23.916" endtime="20201029 12:46:24.432" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:24.440" endtime="20201029 12:46:24.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.439" endtime="20201029 12:46:24.460"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.474" endtime="20201029 12:46:24.489"></status>
</kw>
<msg timestamp="20201029 12:46:24.489" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:24.472" endtime="20201029 12:46:24.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.492" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:24.490" endtime="20201029 12:46:24.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.495" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:24.493" endtime="20201029 12:46:24.496"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:24.469" endtime="20201029 12:46:24.496"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:24.467" endtime="20201029 12:46:24.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.466" endtime="20201029 12:46:24.497"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:24.501" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:24.500" endtime="20201029 12:46:24.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.498" endtime="20201029 12:46:24.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.465" endtime="20201029 12:46:24.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.465" endtime="20201029 12:46:24.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.503" endtime="20201029 12:46:24.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.463" endtime="20201029 12:46:24.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.461" endtime="20201029 12:46:24.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.437" endtime="20201029 12:46:24.505"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.514" endtime="20201029 12:46:24.705"></status>
</kw>
<msg timestamp="20201029 12:46:24.705" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:24.512" endtime="20201029 12:46:24.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.708" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:24.706" endtime="20201029 12:46:24.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.712" endtime="20201029 12:46:24.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.509" endtime="20201029 12:46:24.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.507" endtime="20201029 12:46:24.715"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.719" endtime="20201029 12:46:24.727"></status>
</kw>
<msg timestamp="20201029 12:46:24.728" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:46:24.716" endtime="20201029 12:46:24.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.750" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:46:24.745" endtime="20201029 12:46:24.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.759" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:46:24.755" endtime="20201029 12:46:24.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.729" endtime="20201029 12:46:24.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.778" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:46:24.774" endtime="20201029 12:46:24.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.786" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:46:24.782" endtime="20201029 12:46:24.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.766" endtime="20201029 12:46:24.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.810" endtime="20201029 12:46:25.109"></status>
</kw>
<msg timestamp="20201029 12:46:25.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068553222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068585611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:24.805" endtime="20201029 12:46:25.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068553222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068585611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:25.114" endtime="20201029 12:46:25.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.121" endtime="20201029 12:46:25.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.798" endtime="20201029 12:46:25.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.792" endtime="20201029 12:46:25.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:25.128" level="INFO">${RESULT} = [{'diff': 3.238900000000766e-05}, {'diff': 3.24579999999991e-05}, {'diff': 3.236100000000852e-05}, {'diff': 3.238800000000819e-05}, {'diff': 3.244500000000594e-05}, {'diff': 3.240300000000029e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:25.125" endtime="20201029 12:46:25.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:25.133" level="INFO">${OVERHEAD} = {'diff': [3.238900000000766e-05, 3.24579999999991e-05, 3.236100000000852e-05, 3.238800000000819e-05, 3.244500000000594e-05, 3.240300000000029e-05, 3.238799999999431e-05, 3.237500000000115e-05, 3.24170...</msg>
<status status="PASS" starttime="20201029 12:46:25.129" endtime="20201029 12:46:25.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.138" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 12:46:25.137" endtime="20201029 12:46:25.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.140" level="INFO">VALUE: [3.238900000000766e-05, 3.24579999999991e-05, 3.236100000000852e-05, 3.238800000000819e-05, 3.244500000000594e-05, 3.240300000000029e-05, 3.238799999999431e-05, 3.237500000000115e-05, 3.24170000000068e-05, 3.240300000000029e-05, 3.240300000000029e-05, 3.2388999999993784e-05, 3.2388999999993784e-05, 3.2360999999994644e-05, 3.240300000000029e-05, 3.234700000000201e-05, 3.237500000000115e-05, 3.2388999999993784e-05, 3.240300000001417e-05, 3.23749999999734e-05, 3.240300000001417e-05, 3.240300000001417e-05, 3.240300000001417e-05, 3.241600000000733e-05, 3.2402999999986415e-05, 3.2388999999993784e-05, 3.24170000000068e-05, 3.2416999999979046e-05, 3.2388999999993784e-05, 3.2402999999986415e-05, 3.2388999999993784e-05, 3.2388999999993784e-05, 3.2416999999979046e-05, 3.2388999999993784e-05, 3.2388999999993784e-05, 3.237500000000115e-05, 3.238900000002154e-05, 3.240300000001417e-05, 3.2388999999993784e-05, 3.24020000000147e-05, 3.240300000001417e-05, 3.2402999999986415e-05, 3.2388999999993784e-05, 3.240300000001417e-05, 3.234700000001589e-05, 3.2402999999986415e-05, 3.240300000001417e-05, 3.2388999999993784e-05, 3.240199999998694e-05, 3.240300000001417e-05]</msg>
<status status="PASS" starttime="20201029 12:46:25.139" endtime="20201029 12:46:25.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.134" endtime="20201029 12:46:25.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.506" endtime="20201029 12:46:25.142"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:24.434" endtime="20201029 12:46:25.142" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:25.153" endtime="20201029 12:46:25.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.151" endtime="20201029 12:46:25.173"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.186" endtime="20201029 12:46:25.202"></status>
</kw>
<msg timestamp="20201029 12:46:25.203" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:25.185" endtime="20201029 12:46:25.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.209" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:25.206" endtime="20201029 12:46:25.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.215" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:25.211" endtime="20201029 12:46:25.215"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:25.182" endtime="20201029 12:46:25.217"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:25.180" endtime="20201029 12:46:25.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.179" endtime="20201029 12:46:25.219"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:25.226" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:25.225" endtime="20201029 12:46:25.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.220" endtime="20201029 12:46:25.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.178" endtime="20201029 12:46:25.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.177" endtime="20201029 12:46:25.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.230" endtime="20201029 12:46:25.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.176" endtime="20201029 12:46:25.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.174" endtime="20201029 12:46:25.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.150" endtime="20201029 12:46:25.237"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.244" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:46:25.260" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:46:26.440" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:46:25.241" endtime="20201029 12:46:26.441"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.445" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:46:26.442" endtime="20201029 12:46:26.446"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.238" endtime="20201029 12:46:26.446"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:26.449" endtime="20201029 12:46:26.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.448" endtime="20201029 12:46:26.469"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.478" endtime="20201029 12:46:26.486"></status>
</kw>
<msg timestamp="20201029 12:46:26.487" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:26.476" endtime="20201029 12:46:26.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.489" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:26.488" endtime="20201029 12:46:26.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.490" endtime="20201029 12:46:26.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.474" endtime="20201029 12:46:26.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.472" endtime="20201029 12:46:26.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.500" endtime="20201029 12:46:26.805"></status>
</kw>
<msg timestamp="20201029 12:46:26.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017945, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017954542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:26.498" endtime="20201029 12:46:26.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017945, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017954542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:26.812" endtime="20201029 12:46:26.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.820" endtime="20201029 12:46:26.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.496" endtime="20201029 12:46:26.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.494" endtime="20201029 12:46:26.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:26.827" level="INFO">${PHILIP_RES} = [{'diff': 9.542000000001272e-06}, {'diff': 9.582999999997038e-06}, {'diff': 9.569000000000938e-06}, {'diff': 9.583999999999981e-06}, {'diff': 9.583000000000508e-06}, {'diff': 9.583000000000508e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:46:26.823" endtime="20201029 12:46:26.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:26.837" level="INFO">${RESULT} = {'diff': [9.542000000001272e-06, 9.582999999997038e-06, 9.569000000000938e-06, 9.583999999999981e-06, 9.583000000000508e-06, 9.583000000000508e-06, 9.583999999999981e-06, 9.541000000001798e-06, 9.5970...</msg>
<status status="PASS" starttime="20201029 12:46:26.828" endtime="20201029 12:46:26.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.844" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:26.843" endtime="20201029 12:46:26.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.847" level="INFO">VALUE: [9.542000000001272e-06, 9.582999999997038e-06, 9.569000000000938e-06, 9.583999999999981e-06, 9.583000000000508e-06, 9.583000000000508e-06, 9.583999999999981e-06, 9.541000000001798e-06, 9.597000000000078e-06, 9.570000000000412e-06, 9.569000000000938e-06, 9.569999999996942e-06, 9.583000000000508e-06, 9.569000000000938e-06, 9.570000000000412e-06, 9.540999999998329e-06, 9.583000000000508e-06, 9.569999999996942e-06, 9.569000000000938e-06, 9.583000000000508e-06, 9.583999999999981e-06, 9.653000000001827e-06, 9.542000000001272e-06, 9.583000000000508e-06, 9.625000000002687e-06, 9.610999999999648e-06, 9.597000000000078e-06, 9.583000000000508e-06, 9.556000000000842e-06, 9.583999999999981e-06, 9.583000000000508e-06, 9.583999999999981e-06, 9.583000000000508e-06, 9.568999999997468e-06, 9.570000000000412e-06, 9.597000000000078e-06, 9.610999999999648e-06, 9.583999999999981e-06, 9.583000000000508e-06, 9.555999999997372e-06, 9.597999999999551e-06, 9.597000000000078e-06, 9.597000000000078e-06, 9.597000000000078e-06, 9.583000000000508e-06, 9.582999999997038e-06, 9.570000000000412e-06, 9.597000000000078e-06, 9.652999999998357e-06, 9.583000000000508e-06]</msg>
<status status="PASS" starttime="20201029 12:46:26.845" endtime="20201029 12:46:26.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.839" endtime="20201029 12:46:26.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.470" endtime="20201029 12:46:26.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.447" endtime="20201029 12:46:26.850"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:26.854" endtime="20201029 12:46:26.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.851" endtime="20201029 12:46:26.874"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.882" endtime="20201029 12:46:26.891"></status>
</kw>
<msg timestamp="20201029 12:46:26.891" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:26.881" endtime="20201029 12:46:26.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.894" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:26.892" endtime="20201029 12:46:26.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.895" endtime="20201029 12:46:26.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.878" endtime="20201029 12:46:26.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.876" endtime="20201029 12:46:26.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.904" endtime="20201029 12:46:27.191"></status>
</kw>
<msg timestamp="20201029 12:46:27.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017691625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017707542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:26.903" endtime="20201029 12:46:27.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017691625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017707542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:27.195" endtime="20201029 12:46:27.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.203" endtime="20201029 12:46:27.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.900" endtime="20201029 12:46:27.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.898" endtime="20201029 12:46:27.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:27.210" level="INFO">${PHILIP_RES} = [{'diff': 1.591700000000071e-05}, {'diff': 1.5957999999999944e-05}, {'diff': 1.5944000000000375e-05}, {'diff': 1.5957999999999944e-05}, {'diff': 1.5944999999999848e-05}, {'diff': 1.5999999999998654e-0...</msg>
<status status="PASS" starttime="20201029 12:46:27.207" endtime="20201029 12:46:27.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:27.214" level="INFO">${RESULT} = {'diff': [1.591700000000071e-05, 1.5957999999999944e-05, 1.5944000000000375e-05, 1.5957999999999944e-05, 1.5944999999999848e-05, 1.5999999999998654e-05, 1.5957999999999944e-05, 1.5958999999999418e-05,...</msg>
<status status="PASS" starttime="20201029 12:46:27.211" endtime="20201029 12:46:27.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.218" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:27.217" endtime="20201029 12:46:27.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.221" level="INFO">VALUE: [1.591700000000071e-05, 1.5957999999999944e-05, 1.5944000000000375e-05, 1.5957999999999944e-05, 1.5944999999999848e-05, 1.5999999999998654e-05, 1.5957999999999944e-05, 1.5958999999999418e-05, 1.5971999999999514e-05, 1.5957999999999944e-05, 1.5958999999999418e-05, 1.5944999999999848e-05, 1.5930000000000805e-05, 1.5944999999999848e-05, 1.5958999999999418e-05, 1.590300000000114e-05, 1.5957999999999944e-05, 1.5972999999998988e-05, 1.602700000000179e-05, 1.5957999999999944e-05, 1.5931000000000278e-05, 1.5944999999999848e-05, 1.5957999999999944e-05, 1.5944999999999848e-05, 1.5986000000002554e-05, 1.5957999999999944e-05, 1.5971999999999514e-05, 1.5986999999998558e-05, 1.5957999999999944e-05, 1.5957999999999944e-05, 1.5944999999999848e-05, 1.5985999999999084e-05, 1.5972000000002984e-05, 1.5958999999999418e-05, 1.5957999999999944e-05, 1.5957999999999944e-05, 1.5957999999999944e-05, 1.5958999999999418e-05, 1.5999999999998654e-05, 1.5999999999998654e-05, 1.5958999999999418e-05, 1.5957999999999944e-05, 1.5957999999999944e-05, 1.5944999999999848e-05, 1.5944999999999848e-05, 1.5944000000000375e-05, 1.5985999999999084e-05, 1.5931000000000278e-05, 1.5957999999999944e-05, 1.5957999999999944e-05]</msg>
<status status="PASS" starttime="20201029 12:46:27.219" endtime="20201029 12:46:27.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.215" endtime="20201029 12:46:27.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.875" endtime="20201029 12:46:27.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.850" endtime="20201029 12:46:27.222"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:27.224" endtime="20201029 12:46:27.244"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.223" endtime="20201029 12:46:27.244"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.252" endtime="20201029 12:46:27.262"></status>
</kw>
<msg timestamp="20201029 12:46:27.263" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:27.251" endtime="20201029 12:46:27.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.266" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:27.264" endtime="20201029 12:46:27.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.267" endtime="20201029 12:46:27.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.248" endtime="20201029 12:46:27.270"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.246" endtime="20201029 12:46:27.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.277" endtime="20201029 12:46:27.564"></status>
</kw>
<msg timestamp="20201029 12:46:27.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017547681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017570361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:27.275" endtime="20201029 12:46:27.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017547681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017570361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:27.568" endtime="20201029 12:46:27.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.576" endtime="20201029 12:46:27.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.273" endtime="20201029 12:46:27.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.271" endtime="20201029 12:46:27.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:27.583" level="INFO">${PHILIP_RES} = [{'diff': 2.2680000000000616e-05}, {'diff': 2.265299999999748e-05}, {'diff': 2.2637999999998437e-05}, {'diff': 2.2721999999999326e-05}, {'diff': 2.25830000000031e-05}, {'diff': 2.265299999999748e-05},...</msg>
<status status="PASS" starttime="20201029 12:46:27.579" endtime="20201029 12:46:27.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:27.587" level="INFO">${RESULT} = {'diff': [2.2680000000000616e-05, 2.265299999999748e-05, 2.2637999999998437e-05, 2.2721999999999326e-05, 2.25830000000031e-05, 2.265299999999748e-05, 2.2651999999998007e-05, 2.263900000000138e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 12:46:27.584" endtime="20201029 12:46:27.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.591" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:27.590" endtime="20201029 12:46:27.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.594" level="INFO">VALUE: [2.2680000000000616e-05, 2.265299999999748e-05, 2.2637999999998437e-05, 2.2721999999999326e-05, 2.25830000000031e-05, 2.265299999999748e-05, 2.2651999999998007e-05, 2.263900000000138e-05, 2.265300000000095e-05, 2.262499999999834e-05, 2.265300000000095e-05, 2.263900000000138e-05, 2.265300000000095e-05, 2.2665999999997577e-05, 2.258299999999963e-05, 2.2652000000001477e-05, 2.263900000000138e-05, 2.2651999999998007e-05, 2.266699999999705e-05, 2.263900000000138e-05, 2.263900000000138e-05, 2.258299999999963e-05, 2.263899999999791e-05, 2.263900000000138e-05, 2.2680000000000616e-05, 2.266700000000052e-05, 2.2651999999998007e-05, 2.266700000000052e-05, 2.2666000000001046e-05, 2.263900000000138e-05, 2.262499999999834e-05, 2.2666000000001046e-05, 2.266700000000052e-05, 2.265300000000095e-05, 2.263899999999791e-05, 2.262499999999834e-05, 2.2637999999998437e-05, 2.2721999999999326e-05, 2.261099999999877e-05, 2.2652000000001477e-05, 2.263900000000138e-05, 2.263899999999791e-05, 2.266699999999705e-05, 2.265299999999748e-05, 2.2638000000001907e-05, 2.263899999999791e-05, 2.263899999999791e-05, 2.263900000000138e-05, 2.262500000000181e-05, 2.2570000000003004e-05]</msg>
<status status="PASS" starttime="20201029 12:46:27.592" endtime="20201029 12:46:27.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.588" endtime="20201029 12:46:27.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.245" endtime="20201029 12:46:27.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.223" endtime="20201029 12:46:27.596"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:27.598" endtime="20201029 12:46:27.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.597" endtime="20201029 12:46:27.618"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.626" endtime="20201029 12:46:27.637"></status>
</kw>
<msg timestamp="20201029 12:46:27.638" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:27.624" endtime="20201029 12:46:27.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.641" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:27.639" endtime="20201029 12:46:27.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.642" endtime="20201029 12:46:27.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.622" endtime="20201029 12:46:27.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.620" endtime="20201029 12:46:27.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.651" endtime="20201029 12:46:27.937"></status>
</kw>
<msg timestamp="20201029 12:46:27.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017419444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017449, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:27.649" endtime="20201029 12:46:27.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017419444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017449, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:27.941" endtime="20201029 12:46:27.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.949" endtime="20201029 12:46:27.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.647" endtime="20201029 12:46:27.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.645" endtime="20201029 12:46:27.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:27.956" level="INFO">${PHILIP_RES} = [{'diff': 2.9556000000000027e-05}, {'diff': 2.9667000000000582e-05}, {'diff': 2.9639000000001442e-05}, {'diff': 2.966599999999764e-05}, {'diff': 2.9666000000001108e-05}, {'diff': 2.9569999999999597e-0...</msg>
<status status="PASS" starttime="20201029 12:46:27.952" endtime="20201029 12:46:27.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:27.960" level="INFO">${RESULT} = {'diff': [2.9556000000000027e-05, 2.9667000000000582e-05, 2.9639000000001442e-05, 2.966599999999764e-05, 2.9666000000001108e-05, 2.9569999999999597e-05, 2.9653000000001012e-05, 2.9653000000001012e-05,...</msg>
<status status="PASS" starttime="20201029 12:46:27.957" endtime="20201029 12:46:27.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.965" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:27.964" endtime="20201029 12:46:27.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.967" level="INFO">VALUE: [2.9556000000000027e-05, 2.9667000000000582e-05, 2.9639000000001442e-05, 2.966599999999764e-05, 2.9666000000001108e-05, 2.9569999999999597e-05, 2.9653000000001012e-05, 2.9653000000001012e-05, 2.9638999999997973e-05, 2.9639000000001442e-05, 2.9638999999997973e-05, 2.9653000000001012e-05, 2.9653000000001012e-05, 2.9666000000001108e-05, 2.9707999999999818e-05, 2.965199999999807e-05, 2.9653000000001012e-05, 2.9653000000001012e-05, 2.9667000000000582e-05, 2.9667000000000582e-05, 2.9735999999998958e-05, 2.9667000000000582e-05, 2.969399999999678e-05, 2.9624999999998403e-05, 2.9652000000001538e-05, 2.9652999999997542e-05, 2.9653000000001012e-05, 2.9638999999997973e-05, 2.9639000000001442e-05, 2.9639000000001442e-05, 2.9652999999997542e-05, 2.9667000000000582e-05, 2.9694000000000248e-05, 2.9694000000000248e-05, 2.9653000000001012e-05, 2.9652999999997542e-05, 2.9653000000001012e-05, 2.9596999999999263e-05, 2.9721999999999388e-05, 2.972300000000233e-05, 2.9653000000001012e-05, 2.9639000000001442e-05, 2.9694000000000248e-05, 2.9639000000001442e-05, 2.9624999999998403e-05, 2.9680000000000678e-05, 2.9653000000001012e-05, 2.9652999999997542e-05, 2.9596999999999263e-05, 2.9681000000000152e-05]</msg>
<status status="PASS" starttime="20201029 12:46:27.966" endtime="20201029 12:46:27.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.961" endtime="20201029 12:46:27.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.619" endtime="20201029 12:46:27.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.596" endtime="20201029 12:46:27.969"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:27.971" endtime="20201029 12:46:27.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.970" endtime="20201029 12:46:27.991"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.999" endtime="20201029 12:46:28.010"></status>
</kw>
<msg timestamp="20201029 12:46:28.011" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:27.997" endtime="20201029 12:46:28.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.013" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:28.012" endtime="20201029 12:46:28.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.014" endtime="20201029 12:46:28.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.995" endtime="20201029 12:46:28.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.993" endtime="20201029 12:46:28.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.023" endtime="20201029 12:46:28.309"></status>
</kw>
<msg timestamp="20201029 12:46:28.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018023764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018060694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:28.022" endtime="20201029 12:46:28.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018023764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018060694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:28.314" endtime="20201029 12:46:28.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.322" endtime="20201029 12:46:28.324"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.019" endtime="20201029 12:46:28.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.018" endtime="20201029 12:46:28.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:28.329" level="INFO">${PHILIP_RES} = [{'diff': 3.692999999999752e-05}, {'diff': 3.69589999999996e-05}, {'diff': 3.6874999999998714e-05}, {'diff': 3.69719999999997e-05}, {'diff': 3.694500000000003e-05}, {'diff': 3.69589999999996e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:28.326" endtime="20201029 12:46:28.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:28.333" level="INFO">${RESULT} = {'diff': [3.692999999999752e-05, 3.69589999999996e-05, 3.6874999999998714e-05, 3.69719999999997e-05, 3.694500000000003e-05, 3.69589999999996e-05, 3.69719999999997e-05, 3.693000000000099e-05, 3.6945000...</msg>
<status status="PASS" starttime="20201029 12:46:28.330" endtime="20201029 12:46:28.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.338" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:28.337" endtime="20201029 12:46:28.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.340" level="INFO">VALUE: [3.692999999999752e-05, 3.69589999999996e-05, 3.6874999999998714e-05, 3.69719999999997e-05, 3.694500000000003e-05, 3.69589999999996e-05, 3.69719999999997e-05, 3.693000000000099e-05, 3.694500000000003e-05, 3.69589999999996e-05, 3.695800000000013e-05, 3.702799999999798e-05, 3.69589999999996e-05, 3.697200000000317e-05, 3.7040999999998075e-05, 3.69719999999997e-05, 3.697299999999917e-05, 3.694500000000003e-05, 3.694400000000056e-05, 3.691599999999795e-05, 3.694400000000056e-05, 3.694500000000003e-05, 3.695800000000013e-05, 3.695800000000013e-05, 3.697299999999917e-05, 3.695800000000013e-05, 3.697200000000317e-05, 3.695800000000013e-05, 3.69589999999996e-05, 3.695800000000013e-05, 3.692999999999752e-05, 3.695800000000013e-05, 3.69589999999996e-05, 3.695800000000013e-05, 3.694400000000056e-05, 3.693000000000099e-05, 3.698699999999874e-05, 3.695800000000013e-05, 3.692999999999752e-05, 3.698599999999927e-05, 3.69589999999996e-05, 3.69719999999997e-05, 3.694400000000056e-05, 3.697200000000317e-05, 3.69589999999996e-05, 3.695800000000013e-05, 3.699999999999884e-05, 3.69589999999996e-05, 3.6903000000001324e-05, 3.69719999999997e-05]</msg>
<status status="PASS" starttime="20201029 12:46:28.339" endtime="20201029 12:46:28.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.334" endtime="20201029 12:46:28.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.991" endtime="20201029 12:46:28.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.969" endtime="20201029 12:46:28.341"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:28.344" endtime="20201029 12:46:28.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.342" endtime="20201029 12:46:28.364"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.372" endtime="20201029 12:46:28.385"></status>
</kw>
<msg timestamp="20201029 12:46:28.385" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:28.371" endtime="20201029 12:46:28.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.388" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:28.386" endtime="20201029 12:46:28.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.389" endtime="20201029 12:46:28.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.368" endtime="20201029 12:46:28.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.366" endtime="20201029 12:46:28.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.398" endtime="20201029 12:46:28.683"></status>
</kw>
<msg timestamp="20201029 12:46:28.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017974278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018018819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:28.397" endtime="20201029 12:46:28.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017974278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018018819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:28.687" endtime="20201029 12:46:28.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.696" endtime="20201029 12:46:28.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.394" endtime="20201029 12:46:28.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.393" endtime="20201029 12:46:28.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:28.702" level="INFO">${PHILIP_RES} = [{'diff': 4.454099999999864e-05}, {'diff': 4.4610999999999956e-05}, {'diff': 4.456899999999778e-05}, {'diff': 4.4583000000000816e-05}, {'diff': 4.456899999999778e-05}, {'diff': 4.4597000000000386e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:28.699" endtime="20201029 12:46:28.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:28.706" level="INFO">${RESULT} = {'diff': [4.454099999999864e-05, 4.4610999999999956e-05, 4.456899999999778e-05, 4.4583000000000816e-05, 4.456899999999778e-05, 4.4597000000000386e-05, 4.457000000000072e-05, 4.4597000000000386e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:46:28.703" endtime="20201029 12:46:28.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.711" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:28.709" endtime="20201029 12:46:28.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.714" level="INFO">VALUE: [4.454099999999864e-05, 4.4610999999999956e-05, 4.456899999999778e-05, 4.4583000000000816e-05, 4.456899999999778e-05, 4.4597000000000386e-05, 4.457000000000072e-05, 4.4597000000000386e-05, 4.4653000000002135e-05, 4.458400000000029e-05, 4.457000000000072e-05, 4.4583000000000816e-05, 4.4569000000001247e-05, 4.4597000000000386e-05, 4.4597000000000386e-05, 4.4583000000000816e-05, 4.4583000000000816e-05, 4.458299999999735e-05, 4.458400000000029e-05, 4.458399999999682e-05, 4.4625000000002996e-05, 4.458400000000029e-05, 4.4639000000002566e-05, 4.4583000000000816e-05, 4.4569000000001247e-05, 4.4667000000001705e-05, 4.4583000000000816e-05, 4.454200000000158e-05, 4.4624999999999526e-05, 4.458400000000029e-05, 4.458400000000029e-05, 4.458400000000029e-05, 4.4652999999998666e-05, 4.4555000000001677e-05, 4.455499999999821e-05, 4.458299999999735e-05, 4.451399999999897e-05, 4.4624999999999526e-05, 4.4597000000000386e-05, 4.4597000000000386e-05, 4.458400000000029e-05, 4.4638999999999096e-05, 4.455600000000115e-05, 4.4583000000000816e-05, 4.4583000000000816e-05, 4.4583000000000816e-05, 4.4624999999999526e-05, 4.4583000000000816e-05, 4.4597000000000386e-05, 4.4597000000000386e-05]</msg>
<status status="PASS" starttime="20201029 12:46:28.712" endtime="20201029 12:46:28.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.707" endtime="20201029 12:46:28.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.364" endtime="20201029 12:46:28.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.342" endtime="20201029 12:46:28.716"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:28.718" endtime="20201029 12:46:28.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.717" endtime="20201029 12:46:28.738"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.747" endtime="20201029 12:46:28.760"></status>
</kw>
<msg timestamp="20201029 12:46:28.761" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:28.745" endtime="20201029 12:46:28.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.763" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:28.762" endtime="20201029 12:46:28.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.764" endtime="20201029 12:46:28.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.743" endtime="20201029 12:46:28.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.740" endtime="20201029 12:46:28.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.773" endtime="20201029 12:46:29.059"></status>
</kw>
<msg timestamp="20201029 12:46:29.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018049472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018101875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:28.772" endtime="20201029 12:46:29.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018049472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018101875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:29.063" endtime="20201029 12:46:29.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.071" endtime="20201029 12:46:29.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.769" endtime="20201029 12:46:29.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.767" endtime="20201029 12:46:29.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:29.078" level="INFO">${PHILIP_RES} = [{'diff': 5.240299999999948e-05}, {'diff': 5.254199999999917e-05}, {'diff': 5.25279999999996e-05}, {'diff': 5.244400000000218e-05}, {'diff': 5.25279999999996e-05}, {'diff': 5.254199999999917e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:29.075" endtime="20201029 12:46:29.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:29.083" level="INFO">${RESULT} = {'diff': [5.240299999999948e-05, 5.254199999999917e-05, 5.25279999999996e-05, 5.244400000000218e-05, 5.25279999999996e-05, 5.254199999999917e-05, 5.252700000000013e-05, 5.252700000000013e-05, 5.252700...</msg>
<status status="PASS" starttime="20201029 12:46:29.079" endtime="20201029 12:46:29.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.087" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:29.086" endtime="20201029 12:46:29.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.090" level="INFO">VALUE: [5.240299999999948e-05, 5.254199999999917e-05, 5.25279999999996e-05, 5.244400000000218e-05, 5.25279999999996e-05, 5.254199999999917e-05, 5.252700000000013e-05, 5.252700000000013e-05, 5.252700000000013e-05, 5.251400000000003e-05, 5.25279999999996e-05, 5.248700000000037e-05, 5.25279999999996e-05, 5.254199999999917e-05, 5.254200000000264e-05, 5.251400000000003e-05, 5.252800000000307e-05, 5.251400000000003e-05, 5.250000000000046e-05, 5.251400000000003e-05, 5.2513999999996563e-05, 5.258400000000135e-05, 5.25279999999996e-05, 5.251400000000003e-05, 5.250000000000046e-05, 5.251400000000003e-05, 5.251299999999709e-05, 5.251400000000003e-05, 5.251400000000003e-05, 5.256899999999884e-05, 5.250000000000046e-05, 5.258300000000188e-05, 5.25279999999996e-05, 5.251400000000003e-05, 5.25279999999996e-05, 5.25279999999996e-05, 5.251400000000003e-05, 5.25279999999996e-05, 5.25279999999996e-05, 5.254199999999917e-05, 5.247200000000132e-05, 5.251400000000003e-05, 5.25409999999997e-05, 5.252699999999666e-05, 5.252700000000013e-05, 5.248700000000037e-05, 5.25279999999996e-05, 5.254199999999917e-05, 5.251400000000003e-05, 5.251400000000003e-05]</msg>
<status status="PASS" starttime="20201029 12:46:29.088" endtime="20201029 12:46:29.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.084" endtime="20201029 12:46:29.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.739" endtime="20201029 12:46:29.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.716" endtime="20201029 12:46:29.091"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:29.093" endtime="20201029 12:46:29.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.092" endtime="20201029 12:46:29.113"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.122" endtime="20201029 12:46:29.136"></status>
</kw>
<msg timestamp="20201029 12:46:29.136" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.120" endtime="20201029 12:46:29.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.139" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.137" endtime="20201029 12:46:29.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.140" endtime="20201029 12:46:29.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.118" endtime="20201029 12:46:29.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.116" endtime="20201029 12:46:29.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.149" endtime="20201029 12:46:29.435"></status>
</kw>
<msg timestamp="20201029 12:46:29.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017864167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017924917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:29.147" endtime="20201029 12:46:29.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017864167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017924917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:29.439" endtime="20201029 12:46:29.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.447" endtime="20201029 12:46:29.452"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.145" endtime="20201029 12:46:29.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.143" endtime="20201029 12:46:29.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:29.457" level="INFO">${PHILIP_RES} = [{'diff': 6.0749999999998305e-05}, {'diff': 6.0721999999999166e-05}, {'diff': 6.0736000000002205e-05}, {'diff': 6.0792000000000485e-05}, {'diff': 6.077700000000144e-05}, {'diff': 6.0792000000000485e-0...</msg>
<status status="PASS" starttime="20201029 12:46:29.454" endtime="20201029 12:46:29.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:29.461" level="INFO">${RESULT} = {'diff': [6.0749999999998305e-05, 6.0721999999999166e-05, 6.0736000000002205e-05, 6.0792000000000485e-05, 6.077700000000144e-05, 6.0792000000000485e-05, 6.0764000000001345e-05, 6.080500000000058e-05, ...</msg>
<status status="PASS" starttime="20201029 12:46:29.458" endtime="20201029 12:46:29.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.465" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:29.464" endtime="20201029 12:46:29.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.468" level="INFO">VALUE: [6.0749999999998305e-05, 6.0721999999999166e-05, 6.0736000000002205e-05, 6.0792000000000485e-05, 6.077700000000144e-05, 6.0792000000000485e-05, 6.0764000000001345e-05, 6.080500000000058e-05, 6.07629999999984e-05, 6.0777999999997445e-05, 6.0778000000000915e-05, 6.069500000000297e-05, 6.0778000000000915e-05, 6.0778000000000915e-05, 6.0792000000000485e-05, 6.0764000000001345e-05, 6.0778000000000915e-05, 6.0777999999997445e-05, 6.079099999999754e-05, 6.0763999999997875e-05, 6.0764000000001345e-05, 6.083299999999972e-05, 6.079100000000101e-05, 6.0778000000000915e-05, 6.0778000000000915e-05, 6.077699999999797e-05, 6.0792000000000485e-05, 6.0792000000000485e-05, 6.0778000000000915e-05, 6.0792000000000485e-05, 6.0778000000000915e-05, 6.0764000000001345e-05, 6.077700000000144e-05, 6.0764000000001345e-05, 6.0792000000000485e-05, 6.079099999999754e-05, 6.0792000000000485e-05, 6.0778000000000915e-05, 6.084699999999929e-05, 6.0764000000001345e-05, 6.0778000000000915e-05, 6.0778000000000915e-05, 6.077700000000144e-05, 6.0778000000000915e-05, 6.081900000000015e-05, 6.0778000000000915e-05, 6.0763999999997875e-05, 6.084699999999929e-05, 6.0778000000000915e-05, 6.079100000000101e-05]</msg>
<status status="PASS" starttime="20201029 12:46:29.466" endtime="20201029 12:46:29.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.462" endtime="20201029 12:46:29.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.114" endtime="20201029 12:46:29.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.091" endtime="20201029 12:46:29.469"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:29.472" endtime="20201029 12:46:29.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.470" endtime="20201029 12:46:29.492"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.500" endtime="20201029 12:46:29.515"></status>
</kw>
<msg timestamp="20201029 12:46:29.516" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.498" endtime="20201029 12:46:29.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.518" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.517" endtime="20201029 12:46:29.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.519" endtime="20201029 12:46:29.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.496" endtime="20201029 12:46:29.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.494" endtime="20201029 12:46:29.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.529" endtime="20201029 12:46:29.816"></status>
</kw>
<msg timestamp="20201029 12:46:29.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017351306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017420611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:29.527" endtime="20201029 12:46:29.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017351306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017420611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:29.821" endtime="20201029 12:46:29.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.829" endtime="20201029 12:46:29.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.525" endtime="20201029 12:46:29.831"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.523" endtime="20201029 12:46:29.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:29.835" level="INFO">${PHILIP_RES} = [{'diff': 6.930499999999867e-05}, {'diff': 6.931900000000171e-05}, {'diff': 6.934700000000085e-05}, {'diff': 6.934700000000085e-05}, {'diff': 6.931999999999772e-05}, {'diff': 6.933399999999729e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:29.832" endtime="20201029 12:46:29.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:29.839" level="INFO">${RESULT} = {'diff': [6.930499999999867e-05, 6.931900000000171e-05, 6.934700000000085e-05, 6.934700000000085e-05, 6.931999999999772e-05, 6.933399999999729e-05, 6.936100000000042e-05, 6.936100000000042e-05, 6.9333...</msg>
<status status="PASS" starttime="20201029 12:46:29.836" endtime="20201029 12:46:29.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.844" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:29.843" endtime="20201029 12:46:29.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.846" level="INFO">VALUE: [6.930499999999867e-05, 6.931900000000171e-05, 6.934700000000085e-05, 6.934700000000085e-05, 6.931999999999772e-05, 6.933399999999729e-05, 6.936100000000042e-05, 6.936100000000042e-05, 6.933300000000128e-05, 6.930599999999815e-05, 6.936100000000042e-05, 6.93619999999999e-05, 6.934700000000085e-05, 6.936100000000042e-05, 6.934700000000085e-05, 6.929199999999858e-05, 6.933299999999781e-05, 6.933400000000076e-05, 6.932000000000119e-05, 6.934700000000085e-05, 6.933299999999781e-05, 6.934699999999738e-05, 6.933299999999781e-05, 6.931900000000171e-05, 6.933400000000076e-05, 6.938899999999956e-05, 6.94169999999987e-05, 6.931899999999824e-05, 6.933300000000128e-05, 6.934700000000085e-05, 6.934700000000085e-05, 6.933299999999781e-05, 6.93619999999999e-05, 6.930499999999867e-05, 6.934700000000085e-05, 6.933300000000128e-05, 6.933300000000128e-05, 6.936100000000042e-05, 6.931999999999772e-05, 6.934800000000033e-05, 6.930600000000162e-05, 6.926299999999996e-05, 6.934700000000085e-05, 6.934699999999738e-05, 6.934700000000085e-05, 6.932000000000119e-05, 6.934800000000033e-05, 6.934800000000033e-05, 6.933299999999781e-05, 6.934700000000085e-05]</msg>
<status status="PASS" starttime="20201029 12:46:29.845" endtime="20201029 12:46:29.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.840" endtime="20201029 12:46:29.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.492" endtime="20201029 12:46:29.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.469" endtime="20201029 12:46:29.849"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:29.851" endtime="20201029 12:46:29.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.850" endtime="20201029 12:46:29.871"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.879" endtime="20201029 12:46:29.895"></status>
</kw>
<msg timestamp="20201029 12:46:29.895" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.877" endtime="20201029 12:46:29.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.898" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.896" endtime="20201029 12:46:29.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.899" endtime="20201029 12:46:29.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.875" endtime="20201029 12:46:29.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.873" endtime="20201029 12:46:29.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.907" endtime="20201029 12:46:30.193"></status>
</kw>
<msg timestamp="20201029 12:46:30.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017596375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017674542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:29.906" endtime="20201029 12:46:30.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017596375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017674542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:30.197" endtime="20201029 12:46:30.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.206" endtime="20201029 12:46:30.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.903" endtime="20201029 12:46:30.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.902" endtime="20201029 12:46:30.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:30.212" level="INFO">${PHILIP_RES} = [{'diff': 7.816700000000051e-05}, {'diff': 7.823600000000236e-05}, {'diff': 7.820899999999922e-05}, {'diff': 7.823599999999889e-05}, {'diff': 7.820899999999922e-05}, {'diff': 7.822199999999932e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:30.209" endtime="20201029 12:46:30.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:30.217" level="INFO">${RESULT} = {'diff': [7.816700000000051e-05, 7.823600000000236e-05, 7.820899999999922e-05, 7.823599999999889e-05, 7.820899999999922e-05, 7.822199999999932e-05, 7.816700000000051e-05, 7.818000000000061e-05, 7.8235...</msg>
<status status="PASS" starttime="20201029 12:46:30.213" endtime="20201029 12:46:30.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.221" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:30.220" endtime="20201029 12:46:30.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.224" level="INFO">VALUE: [7.816700000000051e-05, 7.823600000000236e-05, 7.820899999999922e-05, 7.823599999999889e-05, 7.820899999999922e-05, 7.822199999999932e-05, 7.816700000000051e-05, 7.818000000000061e-05, 7.823599999999889e-05, 7.820799999999975e-05, 7.822199999999932e-05, 7.822199999999932e-05, 7.822300000000226e-05, 7.822200000000279e-05, 7.820900000000269e-05, 7.822200000000279e-05, 7.818100000000008e-05, 7.822199999999932e-05, 7.822199999999932e-05, 7.8151999999998e-05, 7.820799999999975e-05, 7.822199999999932e-05, 7.822199999999932e-05, 7.820799999999975e-05, 7.823599999999889e-05, 7.820799999999975e-05, 7.820899999999922e-05, 7.820800000000322e-05, 7.822200000000279e-05, 7.822200000000279e-05, 7.820799999999975e-05, 7.822199999999932e-05, 7.820799999999975e-05, 7.829200000000064e-05, 7.822199999999932e-05, 7.820799999999975e-05, 7.820799999999975e-05, 7.820799999999975e-05, 7.822199999999932e-05, 7.822300000000226e-05, 7.820799999999975e-05, 7.823600000000236e-05, 7.822200000000279e-05, 7.822300000000226e-05, 7.820799999999975e-05, 7.82229999999988e-05, 7.818100000000008e-05, 7.820899999999922e-05, 7.818000000000061e-05, 7.818100000000008e-05]</msg>
<status status="PASS" starttime="20201029 12:46:30.222" endtime="20201029 12:46:30.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.218" endtime="20201029 12:46:30.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.871" endtime="20201029 12:46:30.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.849" endtime="20201029 12:46:30.225"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:30.228" endtime="20201029 12:46:30.247"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.226" endtime="20201029 12:46:30.248"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.256" endtime="20201029 12:46:30.273"></status>
</kw>
<msg timestamp="20201029 12:46:30.273" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:30.254" endtime="20201029 12:46:30.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.276" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:30.274" endtime="20201029 12:46:30.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.277" endtime="20201029 12:46:30.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.252" endtime="20201029 12:46:30.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.250" endtime="20201029 12:46:30.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.286" endtime="20201029 12:46:30.571"></status>
</kw>
<msg timestamp="20201029 12:46:30.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017662292, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:30.284" endtime="20201029 12:46:30.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017662292, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:30.575" endtime="20201029 12:46:30.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.583" endtime="20201029 12:46:30.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.281" endtime="20201029 12:46:30.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.280" endtime="20201029 12:46:30.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:30.591" level="INFO">${PHILIP_RES} = [{'diff': 8.729199999999923e-05}, {'diff': 8.740199999999684e-05}, {'diff': 8.740299999999979e-05}, {'diff': 8.743000000000292e-05}, {'diff': 8.740299999999979e-05}, {'diff': 8.741700000000283e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:30.588" endtime="20201029 12:46:30.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:30.595" level="INFO">${RESULT} = {'diff': [8.729199999999923e-05, 8.740199999999684e-05, 8.740299999999979e-05, 8.743000000000292e-05, 8.740299999999979e-05, 8.741700000000283e-05, 8.741599999999988e-05, 8.744500000000197e-05, 8.7457...</msg>
<status status="PASS" starttime="20201029 12:46:30.592" endtime="20201029 12:46:30.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.599" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:30.598" endtime="20201029 12:46:30.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.602" level="INFO">VALUE: [8.729199999999923e-05, 8.740199999999684e-05, 8.740299999999979e-05, 8.743000000000292e-05, 8.740299999999979e-05, 8.741700000000283e-05, 8.741599999999988e-05, 8.744500000000197e-05, 8.745799999999859e-05, 8.738900000000022e-05, 8.738900000000022e-05, 8.738900000000022e-05, 8.738900000000022e-05, 8.741699999999936e-05, 8.740299999999979e-05, 8.742999999999945e-05, 8.744500000000197e-05, 8.741699999999936e-05, 8.74860000000012e-05, 8.736100000000108e-05, 8.737500000000065e-05, 8.741599999999988e-05, 8.737500000000065e-05, 8.741700000000283e-05, 8.736100000000108e-05, 8.738900000000022e-05, 8.740299999999979e-05, 8.737500000000065e-05, 8.738900000000022e-05, 8.740299999999979e-05, 8.742999999999945e-05, 8.741699999999936e-05, 8.741699999999936e-05, 8.743099999999893e-05, 8.738900000000022e-05, 8.741699999999936e-05, 8.740200000000031e-05, 8.741699999999936e-05, 8.740299999999979e-05, 8.733300000000194e-05, 8.740299999999979e-05, 8.740299999999979e-05, 8.742999999999945e-05, 8.741700000000283e-05, 8.737500000000065e-05, 8.738899999999675e-05, 8.741699999999936e-05, 8.744400000000249e-05, 8.740299999999979e-05, 8.738900000000022e-05]</msg>
<status status="PASS" starttime="20201029 12:46:30.600" endtime="20201029 12:46:30.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.596" endtime="20201029 12:46:30.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.248" endtime="20201029 12:46:30.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.226" endtime="20201029 12:46:30.604"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:30.606" endtime="20201029 12:46:30.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.604" endtime="20201029 12:46:30.626"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.634" endtime="20201029 12:46:30.652"></status>
</kw>
<msg timestamp="20201029 12:46:30.653" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:30.632" endtime="20201029 12:46:30.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.655" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:30.654" endtime="20201029 12:46:30.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.656" endtime="20201029 12:46:30.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.630" endtime="20201029 12:46:30.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.628" endtime="20201029 12:46:30.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.666" endtime="20201029 12:46:30.952"></status>
</kw>
<msg timestamp="20201029 12:46:30.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017671681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017768556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:30.664" endtime="20201029 12:46:30.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017671681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017768556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:30.957" endtime="20201029 12:46:30.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.965" endtime="20201029 12:46:30.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.662" endtime="20201029 12:46:30.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.660" endtime="20201029 12:46:30.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:30.972" level="INFO">${PHILIP_RES} = [{'diff': 9.687499999999974e-05}, {'diff': 9.688899999999931e-05}, {'diff': 9.69860000000003e-05}, {'diff': 9.694400000000158e-05}, {'diff': 9.688899999999931e-05}, {'diff': 9.688899999999931e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:30.968" endtime="20201029 12:46:30.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:30.976" level="INFO">${RESULT} = {'diff': [9.687499999999974e-05, 9.688899999999931e-05, 9.69860000000003e-05, 9.694400000000158e-05, 9.688899999999931e-05, 9.688899999999931e-05, 9.688799999999984e-05, 9.690299999999888e-05, 9.69030...</msg>
<status status="PASS" starttime="20201029 12:46:30.973" endtime="20201029 12:46:30.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.980" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:30.979" endtime="20201029 12:46:30.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.983" level="INFO">VALUE: [9.687499999999974e-05, 9.688899999999931e-05, 9.69860000000003e-05, 9.694400000000158e-05, 9.688899999999931e-05, 9.688899999999931e-05, 9.688799999999984e-05, 9.690299999999888e-05, 9.690300000000235e-05, 9.688799999999984e-05, 9.688899999999931e-05, 9.69860000000003e-05, 9.69019999999994e-05, 9.690300000000235e-05, 9.691700000000192e-05, 9.691599999999898e-05, 9.691600000000244e-05, 9.690299999999888e-05, 9.690299999999888e-05, 9.688899999999931e-05, 9.691699999999845e-05, 9.695900000000063e-05, 9.686100000000017e-05, 9.691699999999845e-05, 9.688899999999931e-05, 9.688899999999931e-05, 9.690300000000235e-05, 9.690299999999888e-05, 9.688899999999931e-05, 9.690300000000235e-05, 9.690299999999888e-05, 9.686100000000017e-05, 9.690300000000235e-05, 9.691699999999845e-05, 9.690300000000235e-05, 9.69019999999994e-05, 9.688899999999931e-05, 9.690300000000235e-05, 9.691599999999898e-05, 9.690300000000235e-05, 9.688899999999931e-05, 9.691599999999898e-05, 9.690300000000235e-05, 9.688899999999931e-05, 9.690299999999888e-05, 9.691599999999898e-05, 9.690299999999888e-05, 9.688900000000278e-05, 9.69019999999994e-05, 9.690299999999888e-05]</msg>
<status status="PASS" starttime="20201029 12:46:30.982" endtime="20201029 12:46:30.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.977" endtime="20201029 12:46:30.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.626" endtime="20201029 12:46:30.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.604" endtime="20201029 12:46:30.986"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:30.988" endtime="20201029 12:46:31.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.987" endtime="20201029 12:46:31.008"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.017" endtime="20201029 12:46:31.035"></status>
</kw>
<msg timestamp="20201029 12:46:31.036" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.015" endtime="20201029 12:46:31.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.038" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.037" endtime="20201029 12:46:31.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.040" endtime="20201029 12:46:31.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.012" endtime="20201029 12:46:31.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.010" endtime="20201029 12:46:31.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.056" endtime="20201029 12:46:31.355"></status>
</kw>
<msg timestamp="20201029 12:46:31.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018131958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018238681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:31.053" endtime="20201029 12:46:31.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018131958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018238681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:31.359" endtime="20201029 12:46:31.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.367" endtime="20201029 12:46:31.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.047" endtime="20201029 12:46:31.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.043" endtime="20201029 12:46:31.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:31.374" level="INFO">${PHILIP_RES} = [{'diff': 0.00010672299999999954}, {'diff': 0.00010669399999999746}, {'diff': 0.00010679100000000191}, {'diff': 0.00010672200000000007}, {'diff': 0.00010673599999999964}, {'diff': 0.000106722000000000...</msg>
<status status="PASS" starttime="20201029 12:46:31.371" endtime="20201029 12:46:31.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:31.379" level="INFO">${RESULT} = {'diff': [0.00010672299999999954, 0.00010669399999999746, 0.00010679100000000191, 0.00010672200000000007, 0.00010673599999999964, 0.00010672200000000007, 0.00010679200000000139, 0.0001067080000000005,...</msg>
<status status="PASS" starttime="20201029 12:46:31.375" endtime="20201029 12:46:31.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.384" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:31.382" endtime="20201029 12:46:31.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.386" level="INFO">VALUE: [0.00010672299999999954, 0.00010669399999999746, 0.00010679100000000191, 0.00010672200000000007, 0.00010673599999999964, 0.00010672200000000007, 0.00010679200000000139, 0.0001067080000000005, 0.00010672300000000301, 0.00010668099999999736, 0.00010677800000000182, 0.00010673599999999964, 0.00010673599999999964, 0.00010672200000000007, 0.00010665200000000222, 0.00010672299999999954, 0.00010673599999999964, 0.00010673699999999911, 0.0001067080000000005, 0.00010672200000000007, 0.00010676400000000225, 0.00010672200000000007, 0.00010677699999999887, 0.00010672200000000007, 0.00010672200000000007, 0.00010677799999999835, 0.00010670899999999997, 0.0001067080000000005, 0.00010672299999999954, 0.00010673599999999964, 0.00010670899999999997, 0.00010672200000000007, 0.00010677799999999835, 0.00010668100000000083, 0.00010672200000000007, 0.00010673599999999964, 0.00010672200000000007, 0.0001066950000000004, 0.00010672200000000007, 0.00010673599999999964, 0.00010673599999999964, 0.00010672300000000301, 0.00010673599999999964, 0.0001067080000000005, 0.00010672200000000007, 0.00010670899999999997, 0.00010677700000000234, 0.0001067080000000005, 0.0001067080000000005, 0.00010672200000000007]</msg>
<status status="PASS" starttime="20201029 12:46:31.385" endtime="20201029 12:46:31.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.380" endtime="20201029 12:46:31.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.009" endtime="20201029 12:46:31.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.986" endtime="20201029 12:46:31.388"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:31.390" endtime="20201029 12:46:31.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.389" endtime="20201029 12:46:31.411"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.419" endtime="20201029 12:46:31.439"></status>
</kw>
<msg timestamp="20201029 12:46:31.439" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.417" endtime="20201029 12:46:31.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.442" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.440" endtime="20201029 12:46:31.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.443" endtime="20201029 12:46:31.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.415" endtime="20201029 12:46:31.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.413" endtime="20201029 12:46:31.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.452" endtime="20201029 12:46:31.739"></status>
</kw>
<msg timestamp="20201029 12:46:31.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018165542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018282361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:31.451" endtime="20201029 12:46:31.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018165542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018282361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:31.743" endtime="20201029 12:46:31.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.751" endtime="20201029 12:46:31.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.448" endtime="20201029 12:46:31.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.446" endtime="20201029 12:46:31.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:31.759" level="INFO">${PHILIP_RES} = [{'diff': 0.00011681900000000064}, {'diff': 0.00011683300000000021}, {'diff': 0.0001167910000000015}, {'diff': 0.00011683399999999969}, {'diff': 0.00011687499999999892}, {'diff': 0.0001168339999999996...</msg>
<status status="PASS" starttime="20201029 12:46:31.755" endtime="20201029 12:46:31.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:31.763" level="INFO">${RESULT} = {'diff': [0.00011681900000000064, 0.00011683300000000021, 0.0001167910000000015, 0.00011683399999999969, 0.00011687499999999892, 0.00011683399999999969, 0.00011686099999999935, 0.00011683300000000021,...</msg>
<status status="PASS" starttime="20201029 12:46:31.760" endtime="20201029 12:46:31.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.767" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:31.766" endtime="20201029 12:46:31.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.770" level="INFO">VALUE: [0.00011681900000000064, 0.00011683300000000021, 0.0001167910000000015, 0.00011683399999999969, 0.00011687499999999892, 0.00011683399999999969, 0.00011686099999999935, 0.00011683300000000021, 0.00011684699999999978, 0.00011683300000000021, 0.0001168750000000024, 0.00011681900000000064, 0.00011677700000000193, 0.00011680600000000055, 0.0001168620000000023, 0.00011684799999999926, 0.00011686100000000282, 0.00011688900000000196, 0.0001168049999999976, 0.00011684699999999978, 0.00011683300000000021, 0.00011686099999999935, 0.00011688900000000196, 0.00011682000000000012, 0.00011683399999999969, 0.00011683300000000021, 0.00011681900000000064, 0.00011686099999999935, 0.00011683300000000021, 0.00011684699999999978, 0.00011686099999999935, 0.00011683399999999969, 0.00011688900000000196, 0.00011680600000000055, 0.00011683399999999969, 0.0001168889999999985, 0.00011684699999999978, 0.00011684699999999978, 0.00011684699999999978, 0.00011684699999999978, 0.00011684699999999978, 0.00011684699999999978, 0.00011686199999999883, 0.00011686100000000282, 0.00011690199999999859, 0.00011684699999999978, 0.00011686099999999935, 0.00011686100000000282, 0.00011684699999999978, 0.00011684699999999978]</msg>
<status status="PASS" starttime="20201029 12:46:31.769" endtime="20201029 12:46:31.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.764" endtime="20201029 12:46:31.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.411" endtime="20201029 12:46:31.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.388" endtime="20201029 12:46:31.772"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:31.774" endtime="20201029 12:46:31.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.773" endtime="20201029 12:46:31.794"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.803" endtime="20201029 12:46:31.824"></status>
</kw>
<msg timestamp="20201029 12:46:31.824" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.801" endtime="20201029 12:46:31.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.827" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.825" endtime="20201029 12:46:31.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.828" endtime="20201029 12:46:31.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.799" endtime="20201029 12:46:31.831"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.797" endtime="20201029 12:46:31.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.838" endtime="20201029 12:46:32.125"></status>
</kw>
<msg timestamp="20201029 12:46:32.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018026944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018154181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:31.837" endtime="20201029 12:46:32.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018026944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018154181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:32.129" endtime="20201029 12:46:32.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.136" endtime="20201029 12:46:32.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.834" endtime="20201029 12:46:32.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.832" endtime="20201029 12:46:32.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:32.143" level="INFO">${PHILIP_RES} = [{'diff': 0.0001272369999999988}, {'diff': 0.0001272919999999976}, {'diff': 0.00012729200000000107}, {'diff': 0.00012727699999999856}, {'diff': 0.0001272780000000015}, {'diff': 0.00012729200000000107}...</msg>
<status status="PASS" starttime="20201029 12:46:32.140" endtime="20201029 12:46:32.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:32.147" level="INFO">${RESULT} = {'diff': [0.0001272369999999988, 0.0001272919999999976, 0.00012729200000000107, 0.00012727699999999856, 0.0001272780000000015, 0.00012729200000000107, 0.0001272919999999976, 0.00012727700000000203, 0....</msg>
<status status="PASS" starttime="20201029 12:46:32.144" endtime="20201029 12:46:32.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.151" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:32.150" endtime="20201029 12:46:32.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.154" level="INFO">VALUE: [0.0001272369999999988, 0.0001272919999999976, 0.00012729200000000107, 0.00012727699999999856, 0.0001272780000000015, 0.00012729200000000107, 0.0001272919999999976, 0.00012727700000000203, 0.0001272780000000015, 0.00012727799999999803, 0.00012729200000000107, 0.00012726399999999846, 0.00012736099999999945, 0.00012729200000000107, 0.00012727799999999803, 0.00012727799999999803, 0.000127262999999999, 0.00012726400000000193, 0.00012723599999999932, 0.0001272910000000016, 0.00012727799999999803, 0.00012723599999999932, 0.00012729200000000107, 0.00012729099999999813, 0.0001272780000000015, 0.0001273200000000002, 0.0001272499999999989, 0.00012734699999999988, 0.0001272780000000015, 0.00012727799999999803, 0.0001272780000000015, 0.0001272780000000015, 0.00012720899999999966, 0.00012736099999999945, 0.00012727799999999803, 0.00012727699999999856, 0.00012726400000000193, 0.00012727799999999803, 0.0001272780000000015, 0.00012727700000000203, 0.00012726399999999846, 0.00012729200000000107, 0.0001272780000000015, 0.00012727799999999803, 0.0001272780000000015, 0.00012723599999999932, 0.00012727799999999803, 0.0001272910000000016, 0.00012730600000000064, 0.00012727799999999803]</msg>
<status status="PASS" starttime="20201029 12:46:32.152" endtime="20201029 12:46:32.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.148" endtime="20201029 12:46:32.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.795" endtime="20201029 12:46:32.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.772" endtime="20201029 12:46:32.157"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:32.159" endtime="20201029 12:46:32.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.157" endtime="20201029 12:46:32.180"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.193" endtime="20201029 12:46:32.216"></status>
</kw>
<msg timestamp="20201029 12:46:32.216" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:32.190" endtime="20201029 12:46:32.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.219" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:32.217" endtime="20201029 12:46:32.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.220" endtime="20201029 12:46:32.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.186" endtime="20201029 12:46:32.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.183" endtime="20201029 12:46:32.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.229" endtime="20201029 12:46:32.517"></status>
</kw>
<msg timestamp="20201029 12:46:32.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023991931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024129903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:32.227" endtime="20201029 12:46:32.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023991931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024129903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:32.521" endtime="20201029 12:46:32.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.529" endtime="20201029 12:46:32.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.225" endtime="20201029 12:46:32.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.223" endtime="20201029 12:46:32.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:32.535" level="INFO">${PHILIP_RES} = [{'diff': 0.0001379720000000001}, {'diff': 0.00013802800000000184}, {'diff': 0.00013805499999999804}, {'diff': 0.0001380269999999989}, {'diff': 0.00013804100000000194}, {'diff': 0.0001380550000000015}...</msg>
<status status="PASS" starttime="20201029 12:46:32.532" endtime="20201029 12:46:32.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:32.540" level="INFO">${RESULT} = {'diff': [0.0001379720000000001, 0.00013802800000000184, 0.00013805499999999804, 0.0001380269999999989, 0.00013804100000000194, 0.0001380550000000015, 0.00013802800000000184, 0.0001380139999999988, 0....</msg>
<status status="PASS" starttime="20201029 12:46:32.536" endtime="20201029 12:46:32.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.545" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:32.544" endtime="20201029 12:46:32.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.547" level="INFO">VALUE: [0.0001379720000000001, 0.00013802800000000184, 0.00013805499999999804, 0.0001380269999999989, 0.00013804100000000194, 0.0001380550000000015, 0.00013802800000000184, 0.0001380139999999988, 0.00013802800000000184, 0.00013804200000000141, 0.00013804200000000141, 0.00013804199999999794, 0.0001380550000000015, 0.00013799999999999923, 0.0001380550000000015, 0.00013808399999999665, 0.00013802799999999837, 0.00013805600000000098, 0.00013801400000000227, 0.00013805600000000098, 0.00013804199999999794, 0.00013805599999999751, 0.00013802800000000184, 0.00013801400000000227, 0.0001380269999999989, 0.00013804099999999847, 0.0001380410000000054, 0.00013811200000000273, 0.00013802799999999837, 0.00013805600000000445, 0.00013804199999999794, 0.00013802799999999837, 0.0001380139999999988, 0.0001380139999999988, 0.0001380410000000054, 0.00013804099999999847, 0.0001379720000000001, 0.00013802799999999837, 0.00013804199999999794, 0.0001380280000000053, 0.00013802799999999837, 0.0001380139999999988, 0.00013805600000000445, 0.00013802799999999837, 0.0001380410000000054, 0.00013804099999999847, 0.00013804099999999847, 0.00013804200000000488, 0.00013798599999999966, 0.0001380280000000053]</msg>
<status status="PASS" starttime="20201029 12:46:32.546" endtime="20201029 12:46:32.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.541" endtime="20201029 12:46:32.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.181" endtime="20201029 12:46:32.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.157" endtime="20201029 12:46:32.549"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:32.551" endtime="20201029 12:46:32.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.550" endtime="20201029 12:46:32.573"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.590" endtime="20201029 12:46:32.615"></status>
</kw>
<msg timestamp="20201029 12:46:32.616" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:32.587" endtime="20201029 12:46:32.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.621" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:32.618" endtime="20201029 12:46:32.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.623" endtime="20201029 12:46:32.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.581" endtime="20201029 12:46:32.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.577" endtime="20201029 12:46:32.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.641" endtime="20201029 12:46:32.930"></status>
</kw>
<msg timestamp="20201029 12:46:32.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029440361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029589403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:32.638" endtime="20201029 12:46:32.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029440361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029589403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:32.934" endtime="20201029 12:46:32.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.941" endtime="20201029 12:46:32.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.633" endtime="20201029 12:46:32.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.629" endtime="20201029 12:46:32.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:32.951" level="INFO">${PHILIP_RES} = [{'diff': 0.00014904199999999854}, {'diff': 0.0001490970000000008}, {'diff': 0.00014908299999999777}, {'diff': 0.0001490970000000008}, {'diff': 0.0001490970000000008}, {'diff': 0.00014908300000000124}...</msg>
<status status="PASS" starttime="20201029 12:46:32.948" endtime="20201029 12:46:32.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:32.955" level="INFO">${RESULT} = {'diff': [0.00014904199999999854, 0.0001490970000000008, 0.00014908299999999777, 0.0001490970000000008, 0.0001490970000000008, 0.00014908300000000124, 0.00014911100000000038, 0.0001490970000000008, 0....</msg>
<status status="PASS" starttime="20201029 12:46:32.952" endtime="20201029 12:46:32.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.959" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:32.958" endtime="20201029 12:46:32.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.961" level="INFO">VALUE: [0.00014904199999999854, 0.0001490970000000008, 0.00014908299999999777, 0.0001490970000000008, 0.0001490970000000008, 0.00014908300000000124, 0.00014911100000000038, 0.0001490970000000008, 0.00014912499999999995, 0.00014901400000000287, 0.0001490970000000008, 0.00014908300000000124, 0.0001490970000000008, 0.00014908300000000124, 0.00014909699999999387, 0.000149042000000002, 0.00014908400000000072, 0.00014918099999999823, 0.00014909800000000029, 0.00014909800000000029, 0.0001490970000000008, 0.00014911199999999986, 0.00014911100000000038, 0.00014913900000000646, 0.00014911099999999344, 0.00014908300000000124, 0.0001490550000000021, 0.00014912499999999995, 0.00014911100000000038, 0.00014911100000000038, 0.0001490970000000008, 0.00014906900000000167, 0.00014906900000000167, 0.0001490970000000008, 0.00014909699999999387, 0.00014909800000000029, 0.00014911100000000038, 0.00014908400000000072, 0.00014911199999999986, 0.00014909800000000029, 0.00014911100000000038, 0.0001490279999999955, 0.0001490970000000008, 0.00014909699999999387, 0.00014906899999999473, 0.00014911100000000038, 0.0001490970000000008, 0.0001490970000000008, 0.00014911100000000038, 0.00014911100000000038]</msg>
<status status="PASS" starttime="20201029 12:46:32.960" endtime="20201029 12:46:32.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.956" endtime="20201029 12:46:32.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.574" endtime="20201029 12:46:32.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.549" endtime="20201029 12:46:32.963"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:32.966" endtime="20201029 12:46:32.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.964" endtime="20201029 12:46:32.985"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.993" endtime="20201029 12:46:33.017"></status>
</kw>
<msg timestamp="20201029 12:46:33.018" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:32.992" endtime="20201029 12:46:33.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.020" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.019" endtime="20201029 12:46:33.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.021" endtime="20201029 12:46:33.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.989" endtime="20201029 12:46:33.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.987" endtime="20201029 12:46:33.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.031" endtime="20201029 12:46:33.316"></status>
</kw>
<msg timestamp="20201029 12:46:33.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017484514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017644958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:33.029" endtime="20201029 12:46:33.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017484514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017644958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:33.320" endtime="20201029 12:46:33.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.327" endtime="20201029 12:46:33.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.027" endtime="20201029 12:46:33.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.025" endtime="20201029 12:46:33.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:33.334" level="INFO">${PHILIP_RES} = [{'diff': 0.00016044399999999917}, {'diff': 0.00016047200000000178}, {'diff': 0.00016048600000000135}, {'diff': 0.00016045899999999821}, {'diff': 0.0001605140000000005}, {'diff': 0.0001604859999999978...</msg>
<status status="PASS" starttime="20201029 12:46:33.331" endtime="20201029 12:46:33.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:33.338" level="INFO">${RESULT} = {'diff': [0.00016044399999999917, 0.00016047200000000178, 0.00016048600000000135, 0.00016045899999999821, 0.0001605140000000005, 0.00016048599999999788, 0.00016047300000000125, 0.00016048600000000135,...</msg>
<status status="PASS" starttime="20201029 12:46:33.335" endtime="20201029 12:46:33.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.342" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:33.341" endtime="20201029 12:46:33.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.344" level="INFO">VALUE: [0.00016044399999999917, 0.00016047200000000178, 0.00016048600000000135, 0.00016045899999999821, 0.0001605140000000005, 0.00016048599999999788, 0.00016047300000000125, 0.00016048600000000135, 0.00016045799999999874, 0.00016048600000000135, 0.0001604299999999996, 0.00016048600000000135, 0.00016048600000000135, 0.00016047300000000125, 0.00016047200000000178, 0.0001604719999999983, 0.00016048600000000135, 0.00016048600000000135, 0.00016040299999999993, 0.00016048600000000135, 0.00016041600000000003, 0.00016048600000000135, 0.00016047200000000178, 0.0001604719999999983, 0.00016048600000000135, 0.0001604719999999983, 0.00016050000000000092, 0.0001604719999999983, 0.0001604719999999983, 0.00016048700000000082, 0.0001604719999999983, 0.00016054199999999963, 0.00016048600000000135, 0.00016045799999999874, 0.00016048600000000135, 0.00016045799999999874, 0.00016047200000000178, 0.00016048599999999788, 0.0001604719999999983, 0.00016047300000000125, 0.00016048599999999788, 0.00016047200000000178, 0.00016044499999999517, 0.00016048600000000135, 0.00016050000000000092, 0.0001604580000000022, 0.00016045899999999474, 0.00016047200000000178, 0.00016044500000000211, 0.00016043100000000254]</msg>
<status status="PASS" starttime="20201029 12:46:33.343" endtime="20201029 12:46:33.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.339" endtime="20201029 12:46:33.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.986" endtime="20201029 12:46:33.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.964" endtime="20201029 12:46:33.347"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:33.349" endtime="20201029 12:46:33.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.348" endtime="20201029 12:46:33.369"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.377" endtime="20201029 12:46:33.401"></status>
</kw>
<msg timestamp="20201029 12:46:33.402" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.376" endtime="20201029 12:46:33.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.404" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.403" endtime="20201029 12:46:33.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.405" endtime="20201029 12:46:33.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.373" endtime="20201029 12:46:33.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.371" endtime="20201029 12:46:33.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.414" endtime="20201029 12:46:33.700"></status>
</kw>
<msg timestamp="20201029 12:46:33.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017416375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0175885, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:33.413" endtime="20201029 12:46:33.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017416375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0175885, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:33.704" endtime="20201029 12:46:33.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.712" endtime="20201029 12:46:33.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.410" endtime="20201029 12:46:33.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.408" endtime="20201029 12:46:33.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:33.718" level="INFO">${PHILIP_RES} = [{'diff': 0.00017212499999999867}, {'diff': 0.00017222199999999965}, {'diff': 0.00017216700000000085}, {'diff': 0.00017216699999999738}, {'diff': 0.0001721520000000018}, {'diff': 0.0001721940000000005...</msg>
<status status="PASS" starttime="20201029 12:46:33.715" endtime="20201029 12:46:33.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:33.723" level="INFO">${RESULT} = {'diff': [0.00017212499999999867, 0.00017222199999999965, 0.00017216700000000085, 0.00017216699999999738, 0.0001721520000000018, 0.0001721940000000005, 0.00017216700000000085, 0.0001721390000000017, 0...</msg>
<status status="PASS" starttime="20201029 12:46:33.719" endtime="20201029 12:46:33.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.727" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:33.726" endtime="20201029 12:46:33.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.729" level="INFO">VALUE: [0.00017212499999999867, 0.00017222199999999965, 0.00017216700000000085, 0.00017216699999999738, 0.0001721520000000018, 0.0001721940000000005, 0.00017216700000000085, 0.0001721390000000017, 0.00017218099999999695, 0.00017216600000000137, 0.0001721940000000005, 0.00017213899999999824, 0.0001722369999999987, 0.00017218100000000042, 0.0001721390000000017, 0.00017220800000000008, 0.00017216700000000085, 0.0001721940000000005, 0.00017220800000000008, 0.00017211100000000257, 0.00017215300000000128, 0.00017216699999999738, 0.00017216600000000137, 0.00017217999999999747, 0.0001721390000000017, 0.00017215300000000128, 0.00017216699999999738, 0.00017218100000000042, 0.00017218099999999695, 0.00017215300000000128, 0.00017216600000000137, 0.0001721659999999979, 0.0001721659999999979, 0.000172195, 0.00017218100000000042, 0.00017215199999999833, 0.0001721659999999979, 0.0001721520000000018, 0.00017216699999999738, 0.00017216700000000085, 0.00017216700000000085, 0.00017215300000000128, 0.00017215299999999434, 0.0001721520000000018, 0.00017216700000000085, 0.00017218100000000042, 0.00017215300000000128, 0.0001721390000000017, 0.00017218000000000094, 0.000172179999999994]</msg>
<status status="PASS" starttime="20201029 12:46:33.728" endtime="20201029 12:46:33.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.724" endtime="20201029 12:46:33.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.370" endtime="20201029 12:46:33.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.347" endtime="20201029 12:46:33.731"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:33.734" endtime="20201029 12:46:33.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.732" endtime="20201029 12:46:33.754"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.767" endtime="20201029 12:46:33.794"></status>
</kw>
<msg timestamp="20201029 12:46:33.794" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.765" endtime="20201029 12:46:33.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.797" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.795" endtime="20201029 12:46:33.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.798" endtime="20201029 12:46:33.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.760" endtime="20201029 12:46:33.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.758" endtime="20201029 12:46:33.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.807" endtime="20201029 12:46:34.097"></status>
</kw>
<msg timestamp="20201029 12:46:34.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023763819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023947944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:33.805" endtime="20201029 12:46:34.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023763819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023947944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:34.106" endtime="20201029 12:46:34.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.123" endtime="20201029 12:46:34.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.803" endtime="20201029 12:46:34.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.801" endtime="20201029 12:46:34.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:34.138" level="INFO">${PHILIP_RES} = [{'diff': 0.00018412500000000026}, {'diff': 0.00018420899999999768}, {'diff': 0.00018416600000000297}, {'diff': 0.0001841529999999994}, {'diff': 0.00018417999999999907}, {'diff': 0.0001841670000000024...</msg>
<status status="PASS" starttime="20201029 12:46:34.132" endtime="20201029 12:46:34.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:34.147" level="INFO">${RESULT} = {'diff': [0.00018412500000000026, 0.00018420899999999768, 0.00018416600000000297, 0.0001841529999999994, 0.00018417999999999907, 0.00018416700000000244, 0.0001841529999999994, 0.0001841529999999994, 0...</msg>
<status status="PASS" starttime="20201029 12:46:34.140" endtime="20201029 12:46:34.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.156" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:34.154" endtime="20201029 12:46:34.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.161" level="INFO">VALUE: [0.00018412500000000026, 0.00018420899999999768, 0.00018416600000000297, 0.0001841529999999994, 0.00018417999999999907, 0.00018416700000000244, 0.0001841529999999994, 0.0001841529999999994, 0.00018412500000000026, 0.0001841529999999994, 0.00018418000000000254, 0.00018416699999999897, 0.00018415199999999993, 0.00018416699999999897, 0.0001841659999999995, 0.00018416700000000244, 0.00018415199999999993, 0.0001842079999999982, 0.00018418000000000254, 0.0001841529999999994, 0.00018416599999999603, 0.00018416699999999897, 0.0001841659999999995, 0.0001841529999999994, 0.00018416600000000644, 0.00018418100000000548, 0.00018418099999999854, 0.00018418099999999854, 0.0001841110000000007, 0.00018418099999999854, 0.00018420900000000462, 0.00018418099999999854, 0.00018416699999999897, 0.0001841529999999994, 0.0001841529999999994, 0.0001841670000000059, 0.0001841659999999995, 0.0001842079999999982, 0.0001841659999999995, 0.00018411200000000016, 0.00018413899999999983, 0.00018418099999999854, 0.00018413899999999983, 0.00018419399999999864, 0.0001841949999999981, 0.00018418100000000548, 0.0001841529999999994, 0.0001841529999999994, 0.00018413899999999983, 0.0001841529999999994]</msg>
<status status="PASS" starttime="20201029 12:46:34.158" endtime="20201029 12:46:34.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.149" endtime="20201029 12:46:34.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.755" endtime="20201029 12:46:34.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.732" endtime="20201029 12:46:34.165"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:34.170" endtime="20201029 12:46:34.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.167" endtime="20201029 12:46:34.190"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.198" endtime="20201029 12:46:34.226"></status>
</kw>
<msg timestamp="20201029 12:46:34.226" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:34.197" endtime="20201029 12:46:34.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.228" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:34.227" endtime="20201029 12:46:34.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.229" endtime="20201029 12:46:34.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.194" endtime="20201029 12:46:34.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.192" endtime="20201029 12:46:34.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.239" endtime="20201029 12:46:34.532"></status>
</kw>
<msg timestamp="20201029 12:46:34.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017838861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018035306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:34.238" endtime="20201029 12:46:34.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017838861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018035306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:34.536" endtime="20201029 12:46:34.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.544" endtime="20201029 12:46:34.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.235" endtime="20201029 12:46:34.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.234" endtime="20201029 12:46:34.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:34.550" level="INFO">${PHILIP_RES} = [{'diff': 0.00019644499999999995}, {'diff': 0.0001964300000000009}, {'diff': 0.0001964859999999992}, {'diff': 0.0001964729999999991}, {'diff': 0.00019647199999999962}, {'diff': 0.0001964859999999992},...</msg>
<status status="PASS" starttime="20201029 12:46:34.547" endtime="20201029 12:46:34.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:34.555" level="INFO">${RESULT} = {'diff': [0.00019644499999999995, 0.0001964300000000009, 0.0001964859999999992, 0.0001964729999999991, 0.00019647199999999962, 0.0001964859999999992, 0.0001964859999999992, 0.0001964859999999992, 0.00...</msg>
<status status="PASS" starttime="20201029 12:46:34.551" endtime="20201029 12:46:34.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.559" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:34.558" endtime="20201029 12:46:34.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.561" level="INFO">VALUE: [0.00019644499999999995, 0.0001964300000000009, 0.0001964859999999992, 0.0001964729999999991, 0.00019647199999999962, 0.0001964859999999992, 0.0001964859999999992, 0.0001964859999999992, 0.00019654100000000146, 0.00019645800000000005, 0.00019649999999999876, 0.0001965140000000018, 0.00019647199999999962, 0.0001964859999999992, 0.00019649999999999876, 0.0001964859999999992, 0.00019654100000000146, 0.00019645899999999952, 0.00019649999999999876, 0.0001964859999999992, 0.00019650000000000223, 0.00019649999999999876, 0.0001964729999999991, 0.00019649999999999876, 0.00019645800000000005, 0.00019645899999999952, 0.00019649999999999876, 0.00019647199999999962, 0.0001964859999999992, 0.00019649999999999876, 0.0001964859999999992, 0.00019647199999999962, 0.00019647199999999962, 0.000196459000000003, 0.0001964859999999992, 0.00019648600000000266, 0.0001964999999999953, 0.00019647199999999615, 0.00019648599999999572, 0.00019648700000000213, 0.0001964720000000031, 0.000196459000000003, 0.0001964720000000031, 0.00019650000000000223, 0.0001964999999999953, 0.00019647199999999615, 0.00019645799999999658, 0.0001965270000000019, 0.0001964720000000031, 0.00019648600000000266]</msg>
<status status="PASS" starttime="20201029 12:46:34.560" endtime="20201029 12:46:34.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.555" endtime="20201029 12:46:34.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.191" endtime="20201029 12:46:34.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.166" endtime="20201029 12:46:34.564"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:34.566" endtime="20201029 12:46:34.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.565" endtime="20201029 12:46:34.586"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.594" endtime="20201029 12:46:34.622"></status>
</kw>
<msg timestamp="20201029 12:46:34.622" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:34.592" endtime="20201029 12:46:34.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.625" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:34.623" endtime="20201029 12:46:34.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.626" endtime="20201029 12:46:34.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.590" endtime="20201029 12:46:34.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.588" endtime="20201029 12:46:34.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.635" endtime="20201029 12:46:34.928"></status>
</kw>
<msg timestamp="20201029 12:46:34.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017581111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017790167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:34.633" endtime="20201029 12:46:34.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017581111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017790167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:34.937" endtime="20201029 12:46:34.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.954" endtime="20201029 12:46:34.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.631" endtime="20201029 12:46:34.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.629" endtime="20201029 12:46:34.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:34.968" level="INFO">${PHILIP_RES} = [{'diff': 0.00020905599999999913}, {'diff': 0.00020909700000000184}, {'diff': 0.0002091110000000014}, {'diff': 0.0002091110000000014}, {'diff': 0.0002091110000000014}, {'diff': 0.0002091110000000014},...</msg>
<status status="PASS" starttime="20201029 12:46:34.961" endtime="20201029 12:46:34.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:34.979" level="INFO">${RESULT} = {'diff': [0.00020905599999999913, 0.00020909700000000184, 0.0002091110000000014, 0.0002091110000000014, 0.0002091110000000014, 0.0002091110000000014, 0.0002091110000000014, 0.0002091119999999974, 0.00...</msg>
<status status="PASS" starttime="20201029 12:46:34.970" endtime="20201029 12:46:34.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.986" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:34.985" endtime="20201029 12:46:34.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.988" level="INFO">VALUE: [0.00020905599999999913, 0.00020909700000000184, 0.0002091110000000014, 0.0002091110000000014, 0.0002091110000000014, 0.0002091110000000014, 0.0002091110000000014, 0.0002091119999999974, 0.0002091110000000014, 0.00020909700000000184, 0.0002091110000000014, 0.00020911099999999794, 0.00020912500000000098, 0.0002091110000000014, 0.00020909799999999784, 0.00020911099999999794, 0.00020909700000000184, 0.00020909700000000184, 0.00020909699999999837, 0.0002091110000000014, 0.0002091110000000014, 0.00020908399999999827, 0.00020909699999999837, 0.00020908300000000227, 0.00020905499999999966, 0.00020909699999999837, 0.0002090829999999988, 0.00020912500000000098, 0.00020911200000000088, 0.00020917999999999978, 0.00020909700000000184, 0.00020909700000000184, 0.00020917999999999978, 0.0002090970000000053, 0.00020911099999999794, 0.00020905599999999913, 0.00020915300000000359, 0.00020909699999999837, 0.00020911099999999794, 0.00020911100000000488, 0.00020909699999999837, 0.00020911099999999794, 0.00020905599999999913, 0.00020911099999999794, 0.00020913900000000402, 0.00020911099999999794, 0.00020911099999999794, 0.0002090970000000053, 0.00020911099999999794, 0.0002091119999999974]</msg>
<status status="PASS" starttime="20201029 12:46:34.987" endtime="20201029 12:46:34.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.980" endtime="20201029 12:46:34.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.587" endtime="20201029 12:46:34.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.564" endtime="20201029 12:46:34.990"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:34.993" endtime="20201029 12:46:35.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.991" endtime="20201029 12:46:35.013"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.021" endtime="20201029 12:46:35.050"></status>
</kw>
<msg timestamp="20201029 12:46:35.051" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.019" endtime="20201029 12:46:35.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.053" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.052" endtime="20201029 12:46:35.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.054" endtime="20201029 12:46:35.056"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.017" endtime="20201029 12:46:35.056"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.015" endtime="20201029 12:46:35.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.063" endtime="20201029 12:46:35.350"></status>
</kw>
<msg timestamp="20201029 12:46:35.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017784639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018006667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:35.062" endtime="20201029 12:46:35.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017784639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018006667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:35.354" endtime="20201029 12:46:35.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.362" endtime="20201029 12:46:35.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.059" endtime="20201029 12:46:35.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.057" endtime="20201029 12:46:35.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:35.368" level="INFO">${PHILIP_RES} = [{'diff': 0.00022202799999999911}, {'diff': 0.00022205499999999878}, {'diff': 0.00022204199999999868}, {'diff': 0.00022199999999999998}, {'diff': 0.00022205600000000172}, {'diff': 0.000222041999999998...</msg>
<status status="PASS" starttime="20201029 12:46:35.365" endtime="20201029 12:46:35.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:35.373" level="INFO">${RESULT} = {'diff': [0.00022202799999999911, 0.00022205499999999878, 0.00022204199999999868, 0.00022199999999999998, 0.00022205600000000172, 0.00022204199999999868, 0.0002220409999999992, 0.00022202800000000258,...</msg>
<status status="PASS" starttime="20201029 12:46:35.369" endtime="20201029 12:46:35.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.377" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:35.376" endtime="20201029 12:46:35.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.379" level="INFO">VALUE: [0.00022202799999999911, 0.00022205499999999878, 0.00022204199999999868, 0.00022199999999999998, 0.00022205600000000172, 0.00022204199999999868, 0.0002220409999999992, 0.00022202800000000258, 0.0002219860000000004, 0.00022205599999999825, 0.00022211099999999706, 0.00022205600000000172, 0.00022206999999999782, 0.00022206899999999835, 0.0002220700000000013, 0.0002220409999999992, 0.00022204199999999868, 0.00022201399999999955, 0.00022204200000000215, 0.00022205599999999825, 0.00022202799999999911, 0.00022204200000000215, 0.00022205500000000225, 0.00022206999999999782, 0.0002219860000000004, 0.00022204199999999868, 0.00022204199999999868, 0.00022202799999999911, 0.00022205599999999825, 0.00022206900000000182, 0.00022202799999999911, 0.00022205500000000572, 0.00022205599999999825, 0.00022205599999999825, 0.00022208299999999792, 0.00022204199999999868, 0.00022202699999999964, 0.00022204200000000562, 0.0002220409999999992, 0.00022205599999999825, 0.00022205499999999878, 0.00022205599999999825, 0.0002220560000000052, 0.0002220409999999992, 0.00022204199999999868, 0.00022201400000000648, 0.00022202799999999911, 0.0002220409999999992, 0.00022204200000000562, 0.00022204199999999868]</msg>
<status status="PASS" starttime="20201029 12:46:35.378" endtime="20201029 12:46:35.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.373" endtime="20201029 12:46:35.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.013" endtime="20201029 12:46:35.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.991" endtime="20201029 12:46:35.381"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:35.384" endtime="20201029 12:46:35.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.382" endtime="20201029 12:46:35.404"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.412" endtime="20201029 12:46:35.442"></status>
</kw>
<msg timestamp="20201029 12:46:35.443" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.410" endtime="20201029 12:46:35.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.445" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.444" endtime="20201029 12:46:35.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.446" endtime="20201029 12:46:35.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.408" endtime="20201029 12:46:35.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.406" endtime="20201029 12:46:35.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.456" endtime="20201029 12:46:35.759"></status>
</kw>
<msg timestamp="20201029 12:46:35.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017867139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018102403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:35.454" endtime="20201029 12:46:35.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017867139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018102403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:35.768" endtime="20201029 12:46:35.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.786" endtime="20201029 12:46:35.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.452" endtime="20201029 12:46:35.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.450" endtime="20201029 12:46:35.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:35.797" level="INFO">${PHILIP_RES} = [{'diff': 0.00023526399999999892}, {'diff': 0.00023529200000000153}, {'diff': 0.00023529199999999806}, {'diff': 0.00023536199999999938}, {'diff': 0.00023530599999999763}, {'diff': 0.000235291000000002...</msg>
<status status="PASS" starttime="20201029 12:46:35.794" endtime="20201029 12:46:35.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:35.801" level="INFO">${RESULT} = {'diff': [0.00023526399999999892, 0.00023529200000000153, 0.00023529199999999806, 0.00023536199999999938, 0.00023530599999999763, 0.00023529100000000205, 0.00023530500000000162, 0.0002353329999999973,...</msg>
<status status="PASS" starttime="20201029 12:46:35.798" endtime="20201029 12:46:35.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.806" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:35.805" endtime="20201029 12:46:35.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.808" level="INFO">VALUE: [0.00023526399999999892, 0.00023529200000000153, 0.00023529199999999806, 0.00023536199999999938, 0.00023530599999999763, 0.00023529100000000205, 0.00023530500000000162, 0.0002353329999999973, 0.00023527700000000248, 0.00023526399999999892, 0.00023529099999999858, 0.0002353060000000011, 0.0002353609999999999, 0.00023529200000000153, 0.00023530599999999763, 0.00023529200000000153, 0.00023530599999999763, 0.00023530500000000162, 0.00023529099999999858, 0.00023530499999999815, 0.00023529100000000205, 0.00023530499999999815, 0.00023530500000000162, 0.0002353060000000011, 0.00023533300000000076, 0.00023534700000000033, 0.00023526399999999892, 0.0002353060000000011, 0.00023529199999999806, 0.00023529200000000153, 0.00023531899999999772, 0.0002353050000000051, 0.00023529099999999858, 0.00023523599999999978, 0.0002353470000000038, 0.00023526399999999892, 0.0002352779999999985, 0.00023530599999999763, 0.00023530600000000457, 0.00023529199999999806, 0.00023529199999999806, 0.00023530599999999763, 0.00023530600000000457, 0.00023529099999999858, 0.00023530499999999815, 0.00023529100000000552, 0.00023530499999999815, 0.00023529099999999858, 0.00023531899999999772, 0.00023523599999999978]</msg>
<status status="PASS" starttime="20201029 12:46:35.807" endtime="20201029 12:46:35.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.802" endtime="20201029 12:46:35.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.404" endtime="20201029 12:46:35.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.382" endtime="20201029 12:46:35.811"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:35.814" endtime="20201029 12:46:35.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.812" endtime="20201029 12:46:35.834"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.842" endtime="20201029 12:46:35.874"></status>
</kw>
<msg timestamp="20201029 12:46:35.875" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.840" endtime="20201029 12:46:35.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.877" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.876" endtime="20201029 12:46:35.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.878" endtime="20201029 12:46:35.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.838" endtime="20201029 12:46:35.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.836" endtime="20201029 12:46:35.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.888" endtime="20201029 12:46:36.173"></status>
</kw>
<msg timestamp="20201029 12:46:36.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018146167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018395, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:35.886" endtime="20201029 12:46:36.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018146167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018395, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:36.177" endtime="20201029 12:46:36.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.184" endtime="20201029 12:46:36.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.884" endtime="20201029 12:46:36.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.882" endtime="20201029 12:46:36.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:36.191" level="INFO">${PHILIP_RES} = [{'diff': 0.0002488330000000004}, {'diff': 0.0002488609999999995}, {'diff': 0.000248861999999999}, {'diff': 0.0002488749999999991}, {'diff': 0.0002488609999999995}, {'diff': 0.0002488609999999995}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:36.188" endtime="20201029 12:46:36.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:36.196" level="INFO">${RESULT} = {'diff': [0.0002488330000000004, 0.0002488609999999995, 0.000248861999999999, 0.0002488749999999991, 0.0002488609999999995, 0.0002488609999999995, 0.00024888900000000214, 0.0002488609999999995, 0.0002...</msg>
<status status="PASS" starttime="20201029 12:46:36.192" endtime="20201029 12:46:36.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.200" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:36.199" endtime="20201029 12:46:36.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.203" level="INFO">VALUE: [0.0002488330000000004, 0.0002488609999999995, 0.000248861999999999, 0.0002488749999999991, 0.0002488609999999995, 0.0002488609999999995, 0.00024888900000000214, 0.0002488609999999995, 0.0002488609999999995, 0.0002488609999999995, 0.0002488330000000004, 0.00024879200000000115, 0.00024887500000000257, 0.00024887500000000257, 0.00024884699999999996, 0.0002488609999999995, 0.0002488749999999991, 0.0002488609999999995, 0.0002488609999999995, 0.000248861000000003, 0.000248861999999999, 0.0002488609999999995, 0.0002488609999999995, 0.0002488609999999995, 0.00024884699999999996, 0.0002488480000000029, 0.00024884699999999996, 0.0002488049999999978, 0.0002488470000000034, 0.0002489170000000013, 0.00024886099999999606, 0.00024887500000000257, 0.00024887499999999563, 0.00024887500000000257, 0.00024886199999999553, 0.0002488470000000034, 0.000248861000000003, 0.0002488469999999965, 0.00024887500000000257, 0.00024886099999999606, 0.000248861000000003, 0.00024887500000000257, 0.0002488469999999965, 0.0002488470000000034, 0.0002488469999999965, 0.00024887500000000257, 0.0002488329999999969, 0.0002488480000000029, 0.00024880599999999725, 0.0002488049999999978]</msg>
<status status="PASS" starttime="20201029 12:46:36.201" endtime="20201029 12:46:36.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.197" endtime="20201029 12:46:36.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.834" endtime="20201029 12:46:36.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.811" endtime="20201029 12:46:36.205"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:36.207" endtime="20201029 12:46:36.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.206" endtime="20201029 12:46:36.227"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.235" endtime="20201029 12:46:36.268"></status>
</kw>
<msg timestamp="20201029 12:46:36.268" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:36.233" endtime="20201029 12:46:36.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.271" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:36.269" endtime="20201029 12:46:36.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.272" endtime="20201029 12:46:36.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.231" endtime="20201029 12:46:36.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.229" endtime="20201029 12:46:36.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.280" endtime="20201029 12:46:36.586"></status>
</kw>
<msg timestamp="20201029 12:46:36.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017553347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017816042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:36.279" endtime="20201029 12:46:36.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017553347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017816042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:36.595" endtime="20201029 12:46:36.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.606" endtime="20201029 12:46:36.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.277" endtime="20201029 12:46:36.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.275" endtime="20201029 12:46:36.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:36.612" level="INFO">${PHILIP_RES} = [{'diff': 0.0002626950000000003}, {'diff': 0.000262736999999999}, {'diff': 0.00026276399999999867}, {'diff': 0.0002627359999999995}, {'diff': 0.00026272199999999996}, {'diff': 0.0002627499999999991}, ...</msg>
<status status="PASS" starttime="20201029 12:46:36.609" endtime="20201029 12:46:36.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:36.616" level="INFO">${RESULT} = {'diff': [0.0002626950000000003, 0.000262736999999999, 0.00026276399999999867, 0.0002627359999999995, 0.00026272199999999996, 0.0002627499999999991, 0.0002627359999999995, 0.00026272199999999996, 0.00...</msg>
<status status="PASS" starttime="20201029 12:46:36.613" endtime="20201029 12:46:36.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.620" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:36.619" endtime="20201029 12:46:36.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.623" level="INFO">VALUE: [0.0002626950000000003, 0.000262736999999999, 0.00026276399999999867, 0.0002627359999999995, 0.00026272199999999996, 0.0002627499999999991, 0.0002627359999999995, 0.00026272199999999996, 0.0002627359999999995, 0.000262736999999999, 0.00026268000000000125, 0.0002627359999999995, 0.00026272199999999996, 0.0002627359999999995, 0.00026266700000000115, 0.0002627359999999995, 0.0002627359999999995, 0.00026272199999999996, 0.00026272199999999996, 0.000262736000000003, 0.00026266700000000115, 0.00026275000000000256, 0.0002627359999999995, 0.0002627499999999991, 0.0002627499999999991, 0.0002627359999999995, 0.0002627780000000017, 0.00026281999999999694, 0.0002627499999999991, 0.0002627080000000004, 0.00026272199999999996, 0.0002627359999999995, 0.000262736999999999, 0.00026272199999999996, 0.00026276399999999867, 0.0002627359999999995, 0.0002627359999999995, 0.0002627359999999995, 0.0002627359999999995, 0.00026270899999999986, 0.0002627499999999991, 0.00026273600000000646, 0.0002627499999999991, 0.0002627359999999995, 0.0002627499999999991, 0.0002626950000000003, 0.0002627499999999991, 0.00026277799999999824, 0.0002627359999999995, 0.0002627359999999995]</msg>
<status status="PASS" starttime="20201029 12:46:36.621" endtime="20201029 12:46:36.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.617" endtime="20201029 12:46:36.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.227" endtime="20201029 12:46:36.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.205" endtime="20201029 12:46:36.625"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:36.627" endtime="20201029 12:46:36.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.626" endtime="20201029 12:46:36.647"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.655" endtime="20201029 12:46:36.689"></status>
</kw>
<msg timestamp="20201029 12:46:36.690" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:36.654" endtime="20201029 12:46:36.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.692" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:36.691" endtime="20201029 12:46:36.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.693" endtime="20201029 12:46:36.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.651" endtime="20201029 12:46:36.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.649" endtime="20201029 12:46:36.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.704" endtime="20201029 12:46:36.989"></status>
</kw>
<msg timestamp="20201029 12:46:36.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017726278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018003153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:36.702" endtime="20201029 12:46:36.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017726278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018003153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:36.993" endtime="20201029 12:46:37.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.001" endtime="20201029 12:46:37.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.699" endtime="20201029 12:46:37.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.697" endtime="20201029 12:46:37.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:37.007" level="INFO">${PHILIP_RES} = [{'diff': 0.00027687499999999934}, {'diff': 0.0002769309999999976}, {'diff': 0.0002769310000000011}, {'diff': 0.0002769310000000011}, {'diff': 0.0002769309999999976}, {'diff': 0.0002769170000000015}, ...</msg>
<status status="PASS" starttime="20201029 12:46:37.004" endtime="20201029 12:46:37.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:37.011" level="INFO">${RESULT} = {'diff': [0.00027687499999999934, 0.0002769309999999976, 0.0002769310000000011, 0.0002769310000000011, 0.0002769309999999976, 0.0002769170000000015, 0.00027694500000000066, 0.0002768889999999989, 0.00...</msg>
<status status="PASS" starttime="20201029 12:46:37.008" endtime="20201029 12:46:37.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.015" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:37.014" endtime="20201029 12:46:37.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.018" level="INFO">VALUE: [0.00027687499999999934, 0.0002769309999999976, 0.0002769310000000011, 0.0002769310000000011, 0.0002769309999999976, 0.0002769170000000015, 0.00027694500000000066, 0.0002768889999999989, 0.0002769310000000011, 0.0002769449999999972, 0.00027694500000000066, 0.00027695900000000023, 0.00027694500000000066, 0.0002769310000000011, 0.0002769310000000011, 0.0002769310000000011, 0.00027694500000000066, 0.0002769310000000011, 0.0002769170000000015, 0.0002769029999999985, 0.0002769300000000016, 0.00027691699999999805, 0.0002769440000000012, 0.00027694500000000066, 0.00027691699999999805, 0.00027690300000000195, 0.00027691600000000205, 0.00027691600000000205, 0.00027694399999999425, 0.00027699999999999947, 0.0002768890000000024, 0.0002769300000000016, 0.0002769440000000012, 0.00027691600000000205, 0.00027691600000000205, 0.0002769299999999947, 0.00027690300000000195, 0.00027691600000000205, 0.0002769579999999938, 0.0002769300000000016, 0.00027691600000000205, 0.0002769159999999951, 0.00027690300000000195, 0.0002769300000000016, 0.00027691600000000205, 0.0002769159999999951, 0.0002768470000000037, 0.0002769300000000016, 0.000276902999999995, 0.0002768890000000024]</msg>
<status status="PASS" starttime="20201029 12:46:37.017" endtime="20201029 12:46:37.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.012" endtime="20201029 12:46:37.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.647" endtime="20201029 12:46:37.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.625" endtime="20201029 12:46:37.020"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:37.023" endtime="20201029 12:46:37.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.021" endtime="20201029 12:46:37.043"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.051" endtime="20201029 12:46:37.086"></status>
</kw>
<msg timestamp="20201029 12:46:37.087" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:37.049" endtime="20201029 12:46:37.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.089" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:37.088" endtime="20201029 12:46:37.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.090" endtime="20201029 12:46:37.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.047" endtime="20201029 12:46:37.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.045" endtime="20201029 12:46:37.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.099" endtime="20201029 12:46:37.404"></status>
</kw>
<msg timestamp="20201029 12:46:37.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017880389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018171778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:37.098" endtime="20201029 12:46:37.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017880389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018171778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:37.413" endtime="20201029 12:46:37.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.421" endtime="20201029 12:46:37.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.095" endtime="20201029 12:46:37.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.093" endtime="20201029 12:46:37.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:37.428" level="INFO">${PHILIP_RES} = [{'diff': 0.00029138899999999954}, {'diff': 0.0002914299999999988}, {'diff': 0.0002914299999999988}, {'diff': 0.00029137499999999997}, {'diff': 0.0002914299999999988}, {'diff': 0.00029143000000000224}...</msg>
<status status="PASS" starttime="20201029 12:46:37.425" endtime="20201029 12:46:37.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:37.432" level="INFO">${RESULT} = {'diff': [0.00029138899999999954, 0.0002914299999999988, 0.0002914299999999988, 0.00029137499999999997, 0.0002914299999999988, 0.00029143000000000224, 0.00029147200000000095, 0.0002914440000000018, 0....</msg>
<status status="PASS" starttime="20201029 12:46:37.429" endtime="20201029 12:46:37.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.437" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:37.436" endtime="20201029 12:46:37.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.439" level="INFO">VALUE: [0.00029138899999999954, 0.0002914299999999988, 0.0002914299999999988, 0.00029137499999999997, 0.0002914299999999988, 0.00029143000000000224, 0.00029147200000000095, 0.0002914440000000018, 0.00029143000000000224, 0.0002914450000000013, 0.0002914299999999988, 0.00029143099999999825, 0.0002914449999999978, 0.0002914299999999988, 0.0002914580000000014, 0.00029141700000000215, 0.0002914160000000027, 0.0002914030000000026, 0.0002914310000000017, 0.0002914159999999992, 0.00029143099999999825, 0.00029143099999999825, 0.00029137499999999997, 0.00029143099999999825, 0.0002914449999999978, 0.0002914299999999953, 0.00029144499999999435, 0.00029140299999999564, 0.00029141599999999573, 0.0002914309999999948, 0.0002914450000000013, 0.0002914160000000027, 0.0002914030000000026, 0.00029141700000000215, 0.0002915000000000001, 0.000291389000000003, 0.00029141700000000215, 0.00029143000000000224, 0.0002915000000000001, 0.0002914310000000017, 0.0002914160000000027, 0.00029136099999999693, 0.0002914440000000018, 0.0002914299999999953, 0.0002914169999999952, 0.0002914309999999948, 0.0002914030000000026, 0.00029145900000000086, 0.0002914440000000018, 0.00029140299999999564]</msg>
<status status="PASS" starttime="20201029 12:46:37.438" endtime="20201029 12:46:37.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.433" endtime="20201029 12:46:37.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.043" endtime="20201029 12:46:37.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.021" endtime="20201029 12:46:37.441"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:37.443" endtime="20201029 12:46:37.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.442" endtime="20201029 12:46:37.463"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.471" endtime="20201029 12:46:37.508"></status>
</kw>
<msg timestamp="20201029 12:46:37.509" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:37.470" endtime="20201029 12:46:37.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.511" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:37.510" endtime="20201029 12:46:37.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.512" endtime="20201029 12:46:37.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.467" endtime="20201029 12:46:37.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.465" endtime="20201029 12:46:37.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.521" endtime="20201029 12:46:37.807"></status>
</kw>
<msg timestamp="20201029 12:46:37.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017505514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017811708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:37.520" endtime="20201029 12:46:37.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017505514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017811708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:37.811" endtime="20201029 12:46:37.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.819" endtime="20201029 12:46:37.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.517" endtime="20201029 12:46:37.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.515" endtime="20201029 12:46:37.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:37.825" level="INFO">${PHILIP_RES} = [{'diff': 0.0003061939999999992}, {'diff': 0.0003062359999999979}, {'diff': 0.00030630499999999977}, {'diff': 0.0003062499999999975}, {'diff': 0.0003062359999999979}, {'diff': 0.0003062499999999975}, ...</msg>
<status status="PASS" starttime="20201029 12:46:37.822" endtime="20201029 12:46:37.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:37.829" level="INFO">${RESULT} = {'diff': [0.0003061939999999992, 0.0003062359999999979, 0.00030630499999999977, 0.0003062499999999975, 0.0003062359999999979, 0.0003062499999999975, 0.0003062499999999975, 0.00030626400000000054, 0.00...</msg>
<status status="PASS" starttime="20201029 12:46:37.826" endtime="20201029 12:46:37.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.833" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:37.832" endtime="20201029 12:46:37.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.836" level="INFO">VALUE: [0.0003061939999999992, 0.0003062359999999979, 0.00030630499999999977, 0.0003062499999999975, 0.0003062359999999979, 0.0003062499999999975, 0.0003062499999999975, 0.00030626400000000054, 0.00030622199999999836, 0.00030622299999999783, 0.0003062499999999975, 0.00030626400000000054, 0.00030625000000000097, 0.00030625000000000097, 0.00030620800000000226, 0.00030625000000000097, 0.00030625000000000097, 0.0003062220000000018, 0.0003062220000000018, 0.00030625000000000097, 0.00030625000000000097, 0.0003062359999999979, 0.0003062220000000018, 0.00030626400000000054, 0.00030625000000000097, 0.0003062220000000018, 0.0003062220000000018, 0.00030625000000000097, 0.00030626400000000054, 0.00030625000000000097, 0.0003061940000000027, 0.0003062360000000014, 0.00030625000000000097, 0.0003061810000000026, 0.0003062910000000002, 0.0003063199999999988, 0.00030625000000000097, 0.0003062360000000014, 0.0003062360000000014, 0.0003062230000000013, 0.00030626400000000054, 0.00030625000000000097, 0.0003062919999999997, 0.00030619500000000216, 0.00030626400000000054, 0.00030625000000000097, 0.00030625000000000097, 0.0003062360000000014, 0.00030625000000000097, 0.00030626400000000054]</msg>
<status status="PASS" starttime="20201029 12:46:37.834" endtime="20201029 12:46:37.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.830" endtime="20201029 12:46:37.837"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.464" endtime="20201029 12:46:37.837"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.441" endtime="20201029 12:46:37.838"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:37.840" endtime="20201029 12:46:37.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.838" endtime="20201029 12:46:37.860"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.868" endtime="20201029 12:46:37.905"></status>
</kw>
<msg timestamp="20201029 12:46:37.906" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:37.866" endtime="20201029 12:46:37.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.909" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:37.907" endtime="20201029 12:46:37.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.910" endtime="20201029 12:46:37.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.864" endtime="20201029 12:46:37.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.862" endtime="20201029 12:46:37.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.920" endtime="20201029 12:46:38.205"></status>
</kw>
<msg timestamp="20201029 12:46:38.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017520778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017842097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:37.918" endtime="20201029 12:46:38.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017520778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017842097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:38.208" endtime="20201029 12:46:38.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.216" endtime="20201029 12:46:38.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.916" endtime="20201029 12:46:38.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.914" endtime="20201029 12:46:38.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:38.223" level="INFO">${PHILIP_RES} = [{'diff': 0.00032131900000000047}, {'diff': 0.00032131999999999994}, {'diff': 0.0003213469999999996}, {'diff': 0.0003213620000000021}, {'diff': 0.0003213889999999983}, {'diff': 0.0003213609999999992},...</msg>
<status status="PASS" starttime="20201029 12:46:38.219" endtime="20201029 12:46:38.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:38.226" level="INFO">${RESULT} = {'diff': [0.00032131900000000047, 0.00032131999999999994, 0.0003213469999999996, 0.0003213620000000021, 0.0003213889999999983, 0.0003213609999999992, 0.0003213890000000018, 0.00032137499999999875, 0.0...</msg>
<status status="PASS" starttime="20201029 12:46:38.223" endtime="20201029 12:46:38.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.231" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:38.230" endtime="20201029 12:46:38.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.233" level="INFO">VALUE: [0.00032131900000000047, 0.00032131999999999994, 0.0003213469999999996, 0.0003213620000000021, 0.0003213889999999983, 0.0003213609999999992, 0.0003213890000000018, 0.00032137499999999875, 0.0003213609999999992, 0.00032136100000000264, 0.0003213609999999992, 0.0003213609999999992, 0.0003213880000000023, 0.00032137499999999875, 0.00032137499999999875, 0.0003213890000000018, 0.00032137499999999875, 0.00032137499999999875, 0.0003213750000000022, 0.0003213889999999983, 0.00032131900000000047, 0.00032136100000000264, 0.00032137499999999875, 0.0003213620000000056, 0.00032137499999999875, 0.0003213609999999992, 0.00032130600000000037, 0.0003213469999999996, 0.0003213469999999996, 0.0003213050000000009, 0.0003213609999999992, 0.00032137499999999875, 0.00032138799999999884, 0.0003213609999999992, 0.0003213609999999992, 0.0003213750000000057, 0.00032137499999999875, 0.00032130600000000037, 0.00032137499999999875, 0.0003213609999999992, 0.00032137499999999875, 0.00032130600000000037, 0.00032137499999999875, 0.00032137499999999875, 0.00032137499999999875, 0.00032137499999999875, 0.0003213339999999995, 0.0003213609999999992, 0.0003213609999999992, 0.0003213609999999992]</msg>
<status status="PASS" starttime="20201029 12:46:38.232" endtime="20201029 12:46:38.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.227" endtime="20201029 12:46:38.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.860" endtime="20201029 12:46:38.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.838" endtime="20201029 12:46:38.236"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:38.238" endtime="20201029 12:46:38.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.237" endtime="20201029 12:46:38.258"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.266" endtime="20201029 12:46:38.305"></status>
</kw>
<msg timestamp="20201029 12:46:38.305" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:38.264" endtime="20201029 12:46:38.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.307" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:38.306" endtime="20201029 12:46:38.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.308" endtime="20201029 12:46:38.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.262" endtime="20201029 12:46:38.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.260" endtime="20201029 12:46:38.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.317" endtime="20201029 12:46:38.603"></status>
</kw>
<msg timestamp="20201029 12:46:38.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017539097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017875861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:38.316" endtime="20201029 12:46:38.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017539097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017875861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:38.607" endtime="20201029 12:46:38.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.615" endtime="20201029 12:46:38.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.313" endtime="20201029 12:46:38.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.312" endtime="20201029 12:46:38.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:38.621" level="INFO">${PHILIP_RES} = [{'diff': 0.0003367639999999998}, {'diff': 0.0003367639999999998}, {'diff': 0.0003368189999999986}, {'diff': 0.0003368199999999981}, {'diff': 0.0003367769999999999}, {'diff': 0.0003368059999999985}, {...</msg>
<status status="PASS" starttime="20201029 12:46:38.618" endtime="20201029 12:46:38.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:38.626" level="INFO">${RESULT} = {'diff': [0.0003367639999999998, 0.0003367639999999998, 0.0003368189999999986, 0.0003368199999999981, 0.0003367769999999999, 0.0003368059999999985, 0.00033679199999999895, 0.0003367909999999995, 0.000...</msg>
<status status="PASS" starttime="20201029 12:46:38.622" endtime="20201029 12:46:38.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.630" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:38.629" endtime="20201029 12:46:38.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.633" level="INFO">VALUE: [0.0003367639999999998, 0.0003367639999999998, 0.0003368189999999986, 0.0003368199999999981, 0.0003367769999999999, 0.0003368059999999985, 0.00033679199999999895, 0.0003367909999999995, 0.00033683400000000113, 0.0003368059999999985, 0.00033684700000000123, 0.000336806000000002, 0.0003368050000000025, 0.00033684700000000123, 0.0003368190000000021, 0.000336806000000002, 0.00033682000000000156, 0.00033680499999999905, 0.0003367639999999998, 0.00033680499999999905, 0.0003368189999999986, 0.0003368059999999985, 0.0003368050000000025, 0.00033683400000000113, 0.00033679100000000295, 0.000336806000000002, 0.00033682000000000156, 0.0003368049999999956, 0.00033682000000000156, 0.00033681899999999515, 0.000336806000000002, 0.00033680599999999505, 0.00033683300000000166, 0.0003367919999999955, 0.00033679100000000295, 0.0003368610000000008, 0.000336806000000002, 0.0003367919999999955, 0.00033684700000000123, 0.0003368050000000025, 0.000336806000000002, 0.00033683300000000166, 0.0003367920000000024, 0.00033682000000000156, 0.00033683300000000166, 0.000336806000000002, 0.00033677699999999644, 0.0003367920000000024, 0.0003368329999999947, 0.0003368050000000025]</msg>
<status status="PASS" starttime="20201029 12:46:38.631" endtime="20201029 12:46:38.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.627" endtime="20201029 12:46:38.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.259" endtime="20201029 12:46:38.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.236" endtime="20201029 12:46:38.635"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:38.637" endtime="20201029 12:46:38.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.636" endtime="20201029 12:46:38.657"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.665" endtime="20201029 12:46:38.706"></status>
</kw>
<msg timestamp="20201029 12:46:38.706" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:38.664" endtime="20201029 12:46:38.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.708" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:38.707" endtime="20201029 12:46:38.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.710" endtime="20201029 12:46:38.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.661" endtime="20201029 12:46:38.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.659" endtime="20201029 12:46:38.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.719" endtime="20201029 12:46:39.022"></status>
</kw>
<msg timestamp="20201029 12:46:39.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017708417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018060889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:38.717" endtime="20201029 12:46:39.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017708417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018060889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:39.026" endtime="20201029 12:46:39.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.034" endtime="20201029 12:46:39.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.715" endtime="20201029 12:46:39.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.713" endtime="20201029 12:46:39.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:39.040" level="INFO">${PHILIP_RES} = [{'diff': 0.0003524719999999995}, {'diff': 0.0003525560000000004}, {'diff': 0.00035255499999999745}, {'diff': 0.0003525690000000005}, {'diff': 0.00035259699999999963}, {'diff': 0.0003526109999999992},...</msg>
<status status="PASS" starttime="20201029 12:46:39.037" endtime="20201029 12:46:39.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:39.045" level="INFO">${RESULT} = {'diff': [0.0003524719999999995, 0.0003525560000000004, 0.00035255499999999745, 0.0003525690000000005, 0.00035259699999999963, 0.0003526109999999992, 0.00035252800000000126, 0.00035258300000000006, 0....</msg>
<status status="PASS" starttime="20201029 12:46:39.041" endtime="20201029 12:46:39.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.049" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:39.048" endtime="20201029 12:46:39.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.051" level="INFO">VALUE: [0.0003524719999999995, 0.0003525560000000004, 0.00035255499999999745, 0.0003525690000000005, 0.00035259699999999963, 0.0003526109999999992, 0.00035252800000000126, 0.00035258300000000006, 0.0003525560000000004, 0.0003526119999999987, 0.00035252800000000126, 0.0003525690000000005, 0.0003525560000000004, 0.0003525979999999991, 0.0003525690000000005, 0.0003525550000000009, 0.0003525560000000004, 0.0003525420000000008, 0.00035255499999999745, 0.00035254100000000135, 0.00035258300000000006, 0.00035251400000000516, 0.00035256900000000396, 0.00035252700000000525, 0.00035255600000000387, 0.00035255600000000387, 0.00035255599999999693, 0.0003525279999999978, 0.00035255499999999745, 0.00035261099999999573, 0.00035255599999999693, 0.00035255499999999745, 0.0003524719999999995, 0.00035257000000000344, 0.00035255600000000387, 0.0003525279999999978, 0.00035256900000000396, 0.00035255599999999693, 0.00035254199999999736, 0.00035249999999999865, 0.00035255499999999745, 0.00035255599999999693, 0.00035255599999999693, 0.00035255600000000387, 0.0003525970000000031, 0.00035256900000000396, 0.00035255600000000387, 0.00035254199999999736, 0.0003525829999999966, 0.0003525409999999979]</msg>
<status status="PASS" starttime="20201029 12:46:39.050" endtime="20201029 12:46:39.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.045" endtime="20201029 12:46:39.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.658" endtime="20201029 12:46:39.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.635" endtime="20201029 12:46:39.053"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:39.056" endtime="20201029 12:46:39.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.054" endtime="20201029 12:46:39.075"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.083" endtime="20201029 12:46:39.124"></status>
</kw>
<msg timestamp="20201029 12:46:39.125" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.082" endtime="20201029 12:46:39.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.127" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.126" endtime="20201029 12:46:39.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.128" endtime="20201029 12:46:39.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.079" endtime="20201029 12:46:39.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.077" endtime="20201029 12:46:39.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.138" endtime="20201029 12:46:39.423"></status>
</kw>
<msg timestamp="20201029 12:46:39.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017596958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017965542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:39.136" endtime="20201029 12:46:39.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017596958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017965542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:39.427" endtime="20201029 12:46:39.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.435" endtime="20201029 12:46:39.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.134" endtime="20201029 12:46:39.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.132" endtime="20201029 12:46:39.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:39.441" level="INFO">${PHILIP_RES} = [{'diff': 0.00036858400000000166}, {'diff': 0.0003685969999999983}, {'diff': 0.0003686250000000009}, {'diff': 0.0003686250000000009}, {'diff': 0.0003686250000000009}, {'diff': 0.000368638999999997}, {...</msg>
<status status="PASS" starttime="20201029 12:46:39.438" endtime="20201029 12:46:39.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:39.445" level="INFO">${RESULT} = {'diff': [0.00036858400000000166, 0.0003685969999999983, 0.0003686250000000009, 0.0003686250000000009, 0.0003686250000000009, 0.000368638999999997, 0.0003686250000000009, 0.0003685830000000022, 0.0003...</msg>
<status status="PASS" starttime="20201029 12:46:39.442" endtime="20201029 12:46:39.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.449" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:39.448" endtime="20201029 12:46:39.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.452" level="INFO">VALUE: [0.00036858400000000166, 0.0003685969999999983, 0.0003686250000000009, 0.0003686250000000009, 0.0003686250000000009, 0.000368638999999997, 0.0003686250000000009, 0.0003685830000000022, 0.0003686250000000009, 0.0003686249999999974, 0.0003686120000000008, 0.0003686250000000009, 0.00036861099999999786, 0.0003686250000000009, 0.0003686250000000009, 0.0003685830000000022, 0.00036861099999999786, 0.0003686110000000013, 0.00036863900000000047, 0.0003686250000000009, 0.0003686249999999974, 0.0003686519999999971, 0.000368638999999997, 0.00036863900000000394, 0.0003686110000000048, 0.00036861099999999786, 0.0003686249999999974, 0.000368638999999997, 0.000368638999999997, 0.000368638999999997, 0.00036862500000000437, 0.0003685970000000052, 0.00036863900000000394, 0.00036863900000000394, 0.0003686249999999974, 0.000368638999999997, 0.0003686249999999974, 0.0003685839999999982, 0.00036862500000000437, 0.00036862500000000437, 0.00036869400000000274, 0.0003686249999999974, 0.0003686249999999974, 0.0003685829999999987, 0.0003686249999999974, 0.0003686249999999974, 0.00036862500000000437, 0.00036862500000000437, 0.00036863900000000394, 0.000368638999999997]</msg>
<status status="PASS" starttime="20201029 12:46:39.451" endtime="20201029 12:46:39.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.446" endtime="20201029 12:46:39.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.076" endtime="20201029 12:46:39.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.053" endtime="20201029 12:46:39.455"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:39.457" endtime="20201029 12:46:39.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.456" endtime="20201029 12:46:39.477"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.485" endtime="20201029 12:46:39.528"></status>
</kw>
<msg timestamp="20201029 12:46:39.528" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.483" endtime="20201029 12:46:39.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.531" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.529" endtime="20201029 12:46:39.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.532" endtime="20201029 12:46:39.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.481" endtime="20201029 12:46:39.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.479" endtime="20201029 12:46:39.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.541" endtime="20201029 12:46:39.837"></status>
</kw>
<msg timestamp="20201029 12:46:39.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017478778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017863722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:39.539" endtime="20201029 12:46:39.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017478778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017863722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:39.841" endtime="20201029 12:46:39.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.848" endtime="20201029 12:46:39.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.537" endtime="20201029 12:46:39.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.535" endtime="20201029 12:46:39.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:39.855" level="INFO">${PHILIP_RES} = [{'diff': 0.0003849439999999982}, {'diff': 0.0003849999999999999}, {'diff': 0.0003850699999999978}, {'diff': 0.0003849439999999982}, {'diff': 0.0003850139999999995}, {'diff': 0.0003849999999999999}, {...</msg>
<status status="PASS" starttime="20201029 12:46:39.852" endtime="20201029 12:46:39.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:39.860" level="INFO">${RESULT} = {'diff': [0.0003849439999999982, 0.0003849999999999999, 0.0003850699999999978, 0.0003849439999999982, 0.0003850139999999995, 0.0003849999999999999, 0.00038498600000000036, 0.0003849439999999982, 0.000...</msg>
<status status="PASS" starttime="20201029 12:46:39.856" endtime="20201029 12:46:39.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.864" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:39.863" endtime="20201029 12:46:39.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.866" level="INFO">VALUE: [0.0003849439999999982, 0.0003849999999999999, 0.0003850699999999978, 0.0003849439999999982, 0.0003850139999999995, 0.0003849999999999999, 0.00038498600000000036, 0.0003849439999999982, 0.0003849999999999999, 0.00038498600000000036, 0.00038502800000000253, 0.0003849999999999999, 0.0003849999999999999, 0.0003849590000000007, 0.0003849299999999986, 0.0003849999999999999, 0.0003849999999999999, 0.0003850139999999995, 0.00038498600000000036, 0.0003849999999999999, 0.000385013999999996, 0.00038502800000000253, 0.0003850000000000034, 0.00038502800000000253, 0.00038501400000000296, 0.0003849859999999969, 0.0003849859999999969, 0.0003849309999999981, 0.00038501400000000296, 0.0003850000000000034, 0.0003850000000000034, 0.00038499999999999646, 0.00038499999999999646, 0.0003849859999999969, 0.0003849859999999969, 0.00038501400000000296, 0.0003850000000000034, 0.0003849450000000046, 0.00038507000000000124, 0.00038499999999999646, 0.0003850279999999956, 0.00038501400000000296, 0.00038501400000000296, 0.0003850000000000034, 0.00038502800000000253, 0.00038499999999999646, 0.0003849859999999969, 0.0003850000000000034, 0.0003849860000000038, 0.00038501400000000296]</msg>
<status status="PASS" starttime="20201029 12:46:39.865" endtime="20201029 12:46:39.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.861" endtime="20201029 12:46:39.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.477" endtime="20201029 12:46:39.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.455" endtime="20201029 12:46:39.868"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:39.871" endtime="20201029 12:46:39.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.869" endtime="20201029 12:46:39.890"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.898" endtime="20201029 12:46:39.941"></status>
</kw>
<msg timestamp="20201029 12:46:39.942" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.897" endtime="20201029 12:46:39.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.944" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.943" endtime="20201029 12:46:39.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.945" endtime="20201029 12:46:39.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.894" endtime="20201029 12:46:39.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.893" endtime="20201029 12:46:39.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.954" endtime="20201029 12:46:40.244"></status>
</kw>
<msg timestamp="20201029 12:46:40.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017431028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017832708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:39.953" endtime="20201029 12:46:40.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017431028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017832708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:40.247" endtime="20201029 12:46:40.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.255" endtime="20201029 12:46:40.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.950" endtime="20201029 12:46:40.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.949" endtime="20201029 12:46:40.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:40.262" level="INFO">${PHILIP_RES} = [{'diff': 0.000401679999999998}, {'diff': 0.00040161099999999963}, {'diff': 0.00040172299999999966}, {'diff': 0.0004017080000000006}, {'diff': 0.0004016939999999976}, {'diff': 0.00040161099999999963},...</msg>
<status status="PASS" starttime="20201029 12:46:40.259" endtime="20201029 12:46:40.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:40.266" level="INFO">${RESULT} = {'diff': [0.000401679999999998, 0.00040161099999999963, 0.00040172299999999966, 0.0004017080000000006, 0.0004016939999999976, 0.00040161099999999963, 0.0004016950000000005, 0.0004016809999999975, 0.00...</msg>
<status status="PASS" starttime="20201029 12:46:40.263" endtime="20201029 12:46:40.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.270" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:40.269" endtime="20201029 12:46:40.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.272" level="INFO">VALUE: [0.000401679999999998, 0.00040161099999999963, 0.00040172299999999966, 0.0004017080000000006, 0.0004016939999999976, 0.00040161099999999963, 0.0004016950000000005, 0.0004016809999999975, 0.0004016669999999979, 0.00040169400000000105, 0.0004017080000000006, 0.00040169400000000105, 0.0004016530000000018, 0.0004016950000000005, 0.0004016950000000005, 0.00040169400000000105, 0.00040169400000000105, 0.00040169400000000105, 0.0004017080000000006, 0.0004016950000000005, 0.00040172299999999966, 0.0004016670000000014, 0.00040169400000000105, 0.00040169400000000105, 0.0004016950000000005, 0.0004016950000000005, 0.00040168100000000095, 0.0004016939999999941, 0.0004016939999999941, 0.0004016939999999941, 0.0004016949999999936, 0.0004017090000000001, 0.0004016530000000018, 0.00040169400000000105, 0.0004016800000000015, 0.00040169400000000105, 0.0004017080000000006, 0.0004016950000000005, 0.00040172299999999966, 0.0004016800000000015, 0.0004017080000000006, 0.00040169400000000105, 0.00040169400000000105, 0.00040168100000000095, 0.00040168100000000095, 0.0004016250000000027, 0.00040169400000000105, 0.00040173599999999976, 0.0004016950000000005, 0.00040163900000000224]</msg>
<status status="PASS" starttime="20201029 12:46:40.271" endtime="20201029 12:46:40.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.266" endtime="20201029 12:46:40.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.891" endtime="20201029 12:46:40.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.869" endtime="20201029 12:46:40.274"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:40.277" endtime="20201029 12:46:40.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.275" endtime="20201029 12:46:40.297"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.305" endtime="20201029 12:46:40.350"></status>
</kw>
<msg timestamp="20201029 12:46:40.350" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.303" endtime="20201029 12:46:40.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.353" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.351" endtime="20201029 12:46:40.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.354" endtime="20201029 12:46:40.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.300" endtime="20201029 12:46:40.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.299" endtime="20201029 12:46:40.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.364" endtime="20201029 12:46:40.666"></status>
</kw>
<msg timestamp="20201029 12:46:40.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017553486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017972139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:40.362" endtime="20201029 12:46:40.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017553486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017972139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:40.670" endtime="20201029 12:46:40.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.678" endtime="20201029 12:46:40.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.360" endtime="20201029 12:46:40.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.358" endtime="20201029 12:46:40.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:40.684" level="INFO">${PHILIP_RES} = [{'diff': 0.00041865300000000147}, {'diff': 0.00041868099999999714}, {'diff': 0.00041863799999999896}, {'diff': 0.000418764000000002}, {'diff': 0.0004187359999999994}, {'diff': 0.0004186940000000007},...</msg>
<status status="PASS" starttime="20201029 12:46:40.681" endtime="20201029 12:46:40.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:40.688" level="INFO">${RESULT} = {'diff': [0.00041865300000000147, 0.00041868099999999714, 0.00041863799999999896, 0.000418764000000002, 0.0004187359999999994, 0.0004186940000000007, 0.0004186810000000006, 0.00041866699999999757, 0.0...</msg>
<status status="PASS" starttime="20201029 12:46:40.685" endtime="20201029 12:46:40.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.693" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:40.692" endtime="20201029 12:46:40.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.695" level="INFO">VALUE: [0.00041865300000000147, 0.00041868099999999714, 0.00041863799999999896, 0.000418764000000002, 0.0004187359999999994, 0.0004186940000000007, 0.0004186810000000006, 0.00041866699999999757, 0.0004186940000000007, 0.00041868000000000113, 0.0004186810000000006, 0.00041870899999999975, 0.0004186810000000006, 0.0004186659999999981, 0.00041868000000000113, 0.0004186940000000007, 0.00041862499999999886, 0.0004186950000000002, 0.00041868000000000113, 0.00041869399999999724, 0.00041870800000000374, 0.0004187369999999954, 0.00041868099999999714, 0.00041870800000000374, 0.00041867999999999767, 0.0004186940000000042, 0.00041868099999999714, 0.00041869500000000365, 0.0004186949999999967, 0.00041867999999999767, 0.00041870800000000374, 0.00041868099999999714, 0.0004186810000000041, 0.0004187089999999963, 0.00041867999999999767, 0.00041867999999999767, 0.000418652999999998, 0.000418764000000002, 0.0004187220000000033, 0.0004187220000000033, 0.00041867999999999767, 0.00041869399999999724, 0.000418764000000002, 0.00041868099999999714, 0.0004187220000000033, 0.0004187219999999964, 0.0004187220000000033, 0.00041869399999999724, 0.00041866699999999757, 0.0004186810000000041]</msg>
<status status="PASS" starttime="20201029 12:46:40.694" endtime="20201029 12:46:40.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.689" endtime="20201029 12:46:40.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.297" endtime="20201029 12:46:40.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.275" endtime="20201029 12:46:40.698"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:40.700" endtime="20201029 12:46:40.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.699" endtime="20201029 12:46:40.720"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.728" endtime="20201029 12:46:40.775"></status>
</kw>
<msg timestamp="20201029 12:46:40.776" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.726" endtime="20201029 12:46:40.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.778" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.777" endtime="20201029 12:46:40.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.779" endtime="20201029 12:46:40.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.724" endtime="20201029 12:46:40.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.722" endtime="20201029 12:46:40.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.788" endtime="20201029 12:46:41.073"></status>
</kw>
<msg timestamp="20201029 12:46:41.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017650819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018086778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:40.786" endtime="20201029 12:46:41.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017650819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018086778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:41.077" endtime="20201029 12:46:41.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.085" endtime="20201029 12:46:41.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.784" endtime="20201029 12:46:41.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.782" endtime="20201029 12:46:41.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:41.091" level="INFO">${PHILIP_RES} = [{'diff': 0.00043595899999999965}, {'diff': 0.00043600000000000236}, {'diff': 0.0004360830000000003}, {'diff': 0.00043602699999999855}, {'diff': 0.0004360410000000016}, {'diff': 0.0004360280000000015}...</msg>
<status status="PASS" starttime="20201029 12:46:41.088" endtime="20201029 12:46:41.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:41.096" level="INFO">${RESULT} = {'diff': [0.00043595899999999965, 0.00043600000000000236, 0.0004360830000000003, 0.00043602699999999855, 0.0004360410000000016, 0.0004360280000000015, 0.00043601300000000245, 0.00043600000000000236, 0...</msg>
<status status="PASS" starttime="20201029 12:46:41.092" endtime="20201029 12:46:41.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.100" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:41.099" endtime="20201029 12:46:41.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.103" level="INFO">VALUE: [0.00043595899999999965, 0.00043600000000000236, 0.0004360830000000003, 0.00043602699999999855, 0.0004360410000000016, 0.0004360280000000015, 0.00043601300000000245, 0.00043600000000000236, 0.0004360280000000015, 0.00043601400000000193, 0.00043600000000000236, 0.00043601400000000193, 0.00043601399999999846, 0.00043602799999999803, 0.0004359999999999989, 0.00043601399999999846, 0.00043602799999999803, 0.00043600000000000236, 0.0004359859999999993, 0.0004360140000000054, 0.0004360140000000054, 0.00043600000000000583, 0.0004360140000000054, 0.00043600000000000583, 0.0004360830000000038, 0.0004360270000000055, 0.0004359999999999989, 0.0004360270000000055, 0.0004359999999999989, 0.0004360140000000054, 0.0004359859999999993, 0.00043602799999999803, 0.0004359999999999989, 0.00043602799999999803, 0.00043601399999999846, 0.0004359999999999989, 0.00043605599999999717, 0.0004359580000000002, 0.00043601399999999846, 0.0004359999999999989, 0.00043608299999999683, 0.00043601399999999846, 0.0004359859999999993, 0.00043602799999999803, 0.00043602699999999855, 0.00043602699999999855, 0.0004359999999999989, 0.000436012999999999, 0.0004359859999999993, 0.00043601399999999846]</msg>
<status status="PASS" starttime="20201029 12:46:41.101" endtime="20201029 12:46:41.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.097" endtime="20201029 12:46:41.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.720" endtime="20201029 12:46:41.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.698" endtime="20201029 12:46:41.105"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:41.107" endtime="20201029 12:46:41.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.105" endtime="20201029 12:46:41.127"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.135" endtime="20201029 12:46:41.183"></status>
</kw>
<msg timestamp="20201029 12:46:41.183" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:41.133" endtime="20201029 12:46:41.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.186" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:41.184" endtime="20201029 12:46:41.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.187" endtime="20201029 12:46:41.188"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.131" endtime="20201029 12:46:41.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.129" endtime="20201029 12:46:41.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.196" endtime="20201029 12:46:41.499"></status>
</kw>
<msg timestamp="20201029 12:46:41.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01763425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018087847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:41.194" endtime="20201029 12:46:41.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01763425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018087847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:41.503" endtime="20201029 12:46:41.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.511" endtime="20201029 12:46:41.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.192" endtime="20201029 12:46:41.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.190" endtime="20201029 12:46:41.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:41.518" level="INFO">${PHILIP_RES} = [{'diff': 0.00045359700000000003}, {'diff': 0.00045362499999999917}, {'diff': 0.00045365199999999883}, {'diff': 0.0004536530000000018}, {'diff': 0.00045363899999999874}, {'diff': 0.0004536389999999987...</msg>
<status status="PASS" starttime="20201029 12:46:41.515" endtime="20201029 12:46:41.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:41.522" level="INFO">${RESULT} = {'diff': [0.00045359700000000003, 0.00045362499999999917, 0.00045365199999999883, 0.0004536530000000018, 0.00045363899999999874, 0.00045363899999999874, 0.00045359700000000003, 0.00045363899999999874,...</msg>
<status status="PASS" starttime="20201029 12:46:41.519" endtime="20201029 12:46:41.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.526" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:41.525" endtime="20201029 12:46:41.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.528" level="INFO">VALUE: [0.00045359700000000003, 0.00045362499999999917, 0.00045365199999999883, 0.0004536530000000018, 0.00045363899999999874, 0.00045363899999999874, 0.00045359700000000003, 0.00045363899999999874, 0.0004536530000000018, 0.0004536390000000022, 0.00045363899999999874, 0.00045362500000000264, 0.00045362499999999917, 0.00045363899999999874, 0.0004536390000000022, 0.0004536669999999979, 0.00045366700000000135, 0.0004535690000000009, 0.00045363899999999874, 0.00045363899999999874, 0.00045365300000000525, 0.0004536390000000057, 0.0004536669999999979, 0.0004536669999999979, 0.00045363799999999926, 0.00045363899999999874, 0.00045365300000000525, 0.00045362499999999917, 0.0004536529999999983, 0.00045363799999999926, 0.00045359700000000003, 0.0004536109999999996, 0.00045362499999999917, 0.00045363899999999874, 0.00045363899999999874, 0.00045363899999999874, 0.00045357000000000036, 0.00045359700000000003, 0.00045362499999999917, 0.00045362499999999917, 0.00045363899999999874, 0.00045365199999999883, 0.00045362499999999917, 0.00045362499999999917, 0.00045362499999999917, 0.0004535560000000008, 0.00045363799999999926, 0.0004536390000000057, 0.0004536109999999996, 0.0004536529999999983]</msg>
<status status="PASS" starttime="20201029 12:46:41.527" endtime="20201029 12:46:41.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.523" endtime="20201029 12:46:41.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.127" endtime="20201029 12:46:41.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.105" endtime="20201029 12:46:41.530"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:41.533" endtime="20201029 12:46:41.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.531" endtime="20201029 12:46:41.553"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.561" endtime="20201029 12:46:41.609"></status>
</kw>
<msg timestamp="20201029 12:46:41.610" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:41.559" endtime="20201029 12:46:41.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.612" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:41.611" endtime="20201029 12:46:41.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.613" endtime="20201029 12:46:41.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.556" endtime="20201029 12:46:41.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.555" endtime="20201029 12:46:41.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.623" endtime="20201029 12:46:41.909"></status>
</kw>
<msg timestamp="20201029 12:46:41.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017755667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018227222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:41.621" endtime="20201029 12:46:41.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017755667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018227222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:41.913" endtime="20201029 12:46:41.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.920" endtime="20201029 12:46:41.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.619" endtime="20201029 12:46:41.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.617" endtime="20201029 12:46:41.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:41.927" level="INFO">${PHILIP_RES} = [{'diff': 0.00047155500000000197}, {'diff': 0.0004715689999999981}, {'diff': 0.000471570000000001}, {'diff': 0.0004715840000000006}, {'diff': 0.0004715549999999985}, {'diff': 0.00047155500000000197}, ...</msg>
<status status="PASS" starttime="20201029 12:46:41.924" endtime="20201029 12:46:41.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:41.931" level="INFO">${RESULT} = {'diff': [0.00047155500000000197, 0.0004715689999999981, 0.000471570000000001, 0.0004715840000000006, 0.0004715549999999985, 0.00047155500000000197, 0.0004715970000000007, 0.000471570000000001, 0.0004...</msg>
<status status="PASS" starttime="20201029 12:46:41.928" endtime="20201029 12:46:41.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.935" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:41.934" endtime="20201029 12:46:41.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.937" level="INFO">VALUE: [0.00047155500000000197, 0.0004715689999999981, 0.000471570000000001, 0.0004715840000000006, 0.0004715549999999985, 0.00047155500000000197, 0.0004715970000000007, 0.000471570000000001, 0.00047155500000000197, 0.0004715689999999981, 0.00047155600000000145, 0.00047152700000000283, 0.0004715830000000011, 0.0004715830000000011, 0.0004715839999999971, 0.0004715830000000011, 0.00047156900000000154, 0.0004715700000000045, 0.00047156999999999755, 0.00047158299999999764, 0.0004715689999999981, 0.000471555999999998, 0.00047158400000000406, 0.000471569000000005, 0.0004715689999999981, 0.0004715839999999971, 0.00047158299999999764, 0.0004716110000000037, 0.000471569000000005, 0.0004715839999999971, 0.0004715689999999981, 0.0004715689999999981, 0.00047158299999999764, 0.0004715560000000049, 0.000471569000000005, 0.0004715689999999981, 0.0004715419999999984, 0.00047158299999999764, 0.0004715830000000046, 0.000471569000000005, 0.0004715839999999971, 0.0004714999999999997, 0.0004715689999999981, 0.0004715689999999981, 0.0004716110000000037, 0.0004715689999999981, 0.00047158299999999764, 0.000471555999999998, 0.0004715839999999971, 0.0004715689999999981]</msg>
<status status="PASS" starttime="20201029 12:46:41.936" endtime="20201029 12:46:41.939"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.932" endtime="20201029 12:46:41.939"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.553" endtime="20201029 12:46:41.940"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.531" endtime="20201029 12:46:41.940"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:41.942" endtime="20201029 12:46:41.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.941" endtime="20201029 12:46:41.962"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.970" endtime="20201029 12:46:42.022"></status>
</kw>
<msg timestamp="20201029 12:46:42.022" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:41.969" endtime="20201029 12:46:42.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.025" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.023" endtime="20201029 12:46:42.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.026" endtime="20201029 12:46:42.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.966" endtime="20201029 12:46:42.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.964" endtime="20201029 12:46:42.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.034" endtime="20201029 12:46:42.334"></status>
</kw>
<msg timestamp="20201029 12:46:42.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017747333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018237097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:42.033" endtime="20201029 12:46:42.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017747333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018237097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:42.338" endtime="20201029 12:46:42.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.345" endtime="20201029 12:46:42.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.030" endtime="20201029 12:46:42.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.029" endtime="20201029 12:46:42.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:42.351" level="INFO">${PHILIP_RES} = [{'diff': 0.0004897640000000002}, {'diff': 0.000489818999999999}, {'diff': 0.0004898329999999985}, {'diff': 0.0004899029999999999}, {'diff': 0.0004897779999999997}, {'diff': 0.000489818999999999}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:42.348" endtime="20201029 12:46:42.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:42.356" level="INFO">${RESULT} = {'diff': [0.0004897640000000002, 0.000489818999999999, 0.0004898329999999985, 0.0004899029999999999, 0.0004897779999999997, 0.000489818999999999, 0.0004897909999999998, 0.0004898199999999985, 0.000489...</msg>
<status status="PASS" starttime="20201029 12:46:42.353" endtime="20201029 12:46:42.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.361" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:42.360" endtime="20201029 12:46:42.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.363" level="INFO">VALUE: [0.0004897640000000002, 0.000489818999999999, 0.0004898329999999985, 0.0004899029999999999, 0.0004897779999999997, 0.000489818999999999, 0.0004897909999999998, 0.0004898199999999985, 0.0004897909999999998, 0.000489833999999998, 0.0004898329999999985, 0.000489833000000002, 0.0004898750000000007, 0.000489818999999999, 0.0004898190000000024, 0.0004898340000000015, 0.0004898189999999955, 0.000489819999999995, 0.0004898329999999951, 0.0004898329999999951, 0.0004898200000000019, 0.0004898189999999955, 0.0004898470000000016, 0.0004898200000000019, 0.0004898470000000016, 0.0004898340000000015, 0.0004898190000000024, 0.0004898190000000024, 0.0004898340000000015, 0.0004898050000000029, 0.0004898750000000007, 0.0004898340000000015, 0.000489833000000002, 0.0004898200000000019, 0.0004898610000000012, 0.0004898470000000016, 0.0004898200000000019, 0.000489833000000002, 0.000489833000000002, 0.0004898200000000019, 0.000489833000000002, 0.0004898200000000019, 0.0004898060000000024, 0.0004898470000000016, 0.0004898200000000019, 0.0004898190000000024, 0.0004898470000000016, 0.0004898340000000015, 0.0004898329999999951, 0.0004898200000000019]</msg>
<status status="PASS" starttime="20201029 12:46:42.362" endtime="20201029 12:46:42.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.357" endtime="20201029 12:46:42.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.963" endtime="20201029 12:46:42.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.940" endtime="20201029 12:46:42.365"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:42.367" endtime="20201029 12:46:42.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.366" endtime="20201029 12:46:42.387"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.395" endtime="20201029 12:46:42.447"></status>
</kw>
<msg timestamp="20201029 12:46:42.447" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.394" endtime="20201029 12:46:42.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.450" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.448" endtime="20201029 12:46:42.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.451" endtime="20201029 12:46:42.452"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.391" endtime="20201029 12:46:42.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.389" endtime="20201029 12:46:42.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.460" endtime="20201029 12:46:42.746"></status>
</kw>
<msg timestamp="20201029 12:46:42.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017475139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0179835, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:42.458" endtime="20201029 12:46:42.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017475139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0179835, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:42.750" endtime="20201029 12:46:42.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.758" endtime="20201029 12:46:42.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.456" endtime="20201029 12:46:42.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.454" endtime="20201029 12:46:42.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:42.765" level="INFO">${PHILIP_RES} = [{'diff': 0.0005083609999999988}, {'diff': 0.000508403000000001}, {'diff': 0.0005083610000000023}, {'diff': 0.0005083609999999988}, {'diff': 0.0005084019999999981}, {'diff': 0.000508388999999998}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:42.762" endtime="20201029 12:46:42.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:42.769" level="INFO">${RESULT} = {'diff': [0.0005083609999999988, 0.000508403000000001, 0.0005083610000000023, 0.0005083609999999988, 0.0005084019999999981, 0.000508388999999998, 0.0005083879999999985, 0.000508403000000001, 0.0005084...</msg>
<status status="PASS" starttime="20201029 12:46:42.766" endtime="20201029 12:46:42.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.773" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:42.772" endtime="20201029 12:46:42.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.775" level="INFO">VALUE: [0.0005083609999999988, 0.000508403000000001, 0.0005083610000000023, 0.0005083609999999988, 0.0005084019999999981, 0.000508388999999998, 0.0005083879999999985, 0.000508403000000001, 0.0005084440000000003, 0.0005083890000000015, 0.0005084160000000011, 0.0005083890000000015, 0.0005084019999999981, 0.0005084029999999976, 0.000508388999999998, 0.0005083890000000049, 0.0005084019999999981, 0.0005084029999999976, 0.0005083609999999988, 0.0005084029999999976, 0.000508388999999998, 0.0005084029999999976, 0.0005084030000000045, 0.0005083749999999984, 0.0005083750000000054, 0.0005083749999999984, 0.0005084300000000042, 0.0005083609999999988, 0.000508388999999998, 0.0005083750000000054, 0.000508388999999998, 0.0005084030000000045, 0.000508388999999998, 0.0005083879999999985, 0.000508388999999998, 0.0005083879999999985, 0.0005084030000000045, 0.0005083879999999985, 0.0005083890000000049, 0.0005083749999999984, 0.0005083190000000001, 0.0005084439999999968, 0.0005083609999999988, 0.0005084019999999981, 0.0005084590000000028, 0.0005083749999999984, 0.000508388999999998, 0.0005084030000000045, 0.0005083749999999984, 0.0005083890000000049]</msg>
<status status="PASS" starttime="20201029 12:46:42.774" endtime="20201029 12:46:42.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.770" endtime="20201029 12:46:42.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.388" endtime="20201029 12:46:42.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.365" endtime="20201029 12:46:42.777"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:42.780" endtime="20201029 12:46:42.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.778" endtime="20201029 12:46:42.799"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.807" endtime="20201029 12:46:42.861"></status>
</kw>
<msg timestamp="20201029 12:46:42.862" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.806" endtime="20201029 12:46:42.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.867" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.864" endtime="20201029 12:46:42.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.869" endtime="20201029 12:46:42.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.803" endtime="20201029 12:46:42.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.801" endtime="20201029 12:46:42.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.890" endtime="20201029 12:46:43.182"></status>
</kw>
<msg timestamp="20201029 12:46:43.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017643403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018170625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:42.886" endtime="20201029 12:46:43.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017643403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018170625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:43.186" endtime="20201029 12:46:43.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.194" endtime="20201029 12:46:43.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.881" endtime="20201029 12:46:43.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.878" endtime="20201029 12:46:43.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:43.200" level="INFO">${PHILIP_RES} = [{'diff': 0.0005272220000000008}, {'diff': 0.0005272919999999987}, {'diff': 0.0005272499999999999}, {'diff': 0.0005272909999999992}, {'diff': 0.0005272230000000003}, {'diff': 0.0005272639999999995}, {...</msg>
<status status="PASS" starttime="20201029 12:46:43.197" endtime="20201029 12:46:43.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:43.204" level="INFO">${RESULT} = {'diff': [0.0005272220000000008, 0.0005272919999999987, 0.0005272499999999999, 0.0005272909999999992, 0.0005272230000000003, 0.0005272639999999995, 0.0005272639999999995, 0.0005272639999999995, 0.0005...</msg>
<status status="PASS" starttime="20201029 12:46:43.201" endtime="20201029 12:46:43.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.209" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:43.208" endtime="20201029 12:46:43.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.211" level="INFO">VALUE: [0.0005272220000000008, 0.0005272919999999987, 0.0005272499999999999, 0.0005272909999999992, 0.0005272230000000003, 0.0005272639999999995, 0.0005272639999999995, 0.0005272639999999995, 0.0005272499999999999, 0.000527263, 0.0005272780000000026, 0.0005272499999999999, 0.0005272499999999999, 0.0005272639999999995, 0.0005272499999999999, 0.0005272220000000008, 0.0005272909999999992, 0.0005272779999999991, 0.0005272499999999999, 0.0005272639999999995, 0.0005272639999999995, 0.0005272639999999995, 0.000527263, 0.0005272499999999999, 0.0005272779999999991, 0.0005272360000000004, 0.0005272779999999991, 0.0005272639999999995, 0.0005272360000000004, 0.0005272779999999991, 0.0005272499999999999, 0.0005272639999999995, 0.000527278000000006, 0.0005272779999999991, 0.0005273049999999987, 0.0005272499999999999, 0.0005272919999999987, 0.0005272499999999999, 0.0005272779999999991, 0.0005272779999999991, 0.0005272639999999995, 0.0005272769999999996, 0.0005272639999999995, 0.0005272639999999995, 0.0005273470000000044, 0.0005272919999999987, 0.0005272639999999995, 0.0005272639999999995, 0.0005272640000000064, 0.0005272500000000069]</msg>
<status status="PASS" starttime="20201029 12:46:43.210" endtime="20201029 12:46:43.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.205" endtime="20201029 12:46:43.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.800" endtime="20201029 12:46:43.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.778" endtime="20201029 12:46:43.214"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:43.216" endtime="20201029 12:46:43.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.215" endtime="20201029 12:46:43.236"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.244" endtime="20201029 12:46:43.299"></status>
</kw>
<msg timestamp="20201029 12:46:43.300" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:43.243" endtime="20201029 12:46:43.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.302" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:43.301" endtime="20201029 12:46:43.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.303" endtime="20201029 12:46:43.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.240" endtime="20201029 12:46:43.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.238" endtime="20201029 12:46:43.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.312" endtime="20201029 12:46:43.598"></status>
</kw>
<msg timestamp="20201029 12:46:43.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017625708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018172097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:43.311" endtime="20201029 12:46:43.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017625708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018172097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:43.601" endtime="20201029 12:46:43.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.609" endtime="20201029 12:46:43.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.308" endtime="20201029 12:46:43.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.306" endtime="20201029 12:46:43.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:43.616" level="INFO">${PHILIP_RES} = [{'diff': 0.0005463890000000013}, {'diff': 0.0005464579999999997}, {'diff': 0.0005464449999999996}, {'diff': 0.0005464579999999997}, {'diff': 0.0005464440000000001}, {'diff': 0.0005464730000000022}, {...</msg>
<status status="PASS" starttime="20201029 12:46:43.612" endtime="20201029 12:46:43.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:43.620" level="INFO">${RESULT} = {'diff': [0.0005463890000000013, 0.0005464579999999997, 0.0005464449999999996, 0.0005464579999999997, 0.0005464440000000001, 0.0005464730000000022, 0.0005464719999999992, 0.0005464859999999988, 0.0005...</msg>
<status status="PASS" starttime="20201029 12:46:43.616" endtime="20201029 12:46:43.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.625" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:43.624" endtime="20201029 12:46:43.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.627" level="INFO">VALUE: [0.0005463890000000013, 0.0005464579999999997, 0.0005464449999999996, 0.0005464579999999997, 0.0005464440000000001, 0.0005464730000000022, 0.0005464719999999992, 0.0005464859999999988, 0.0005464589999999991, 0.0005464580000000031, 0.0005464579999999997, 0.0005464300000000005, 0.0005464729999999987, 0.0005464440000000001, 0.0005464580000000031, 0.0005464730000000056, 0.0005464579999999997, 0.0005464579999999997, 0.0005464589999999991, 0.0005464589999999991, 0.0005464859999999988, 0.0005464300000000005, 0.0005464589999999991, 0.0005464579999999997, 0.0005464440000000001, 0.000546431, 0.0005464440000000001, 0.0005464579999999997, 0.0005464589999999991, 0.0005464449999999996, 0.0005464579999999997, 0.0005464859999999988, 0.0005464590000000061, 0.0005464580000000066, 0.0005464860000000057, 0.0005464589999999991, 0.0005464869999999983, 0.0005464719999999992, 0.0005464589999999991, 0.0005464719999999992, 0.0005464859999999988, 0.0005464440000000001, 0.0005464730000000056, 0.0005464440000000001, 0.0005464579999999997, 0.0005464589999999991, 0.0005464999999999984, 0.0005464579999999927, 0.0005464450000000065, 0.0005464449999999926]</msg>
<status status="PASS" starttime="20201029 12:46:43.626" endtime="20201029 12:46:43.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.621" endtime="20201029 12:46:43.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.237" endtime="20201029 12:46:43.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.214" endtime="20201029 12:46:43.629"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:43.631" endtime="20201029 12:46:43.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.630" endtime="20201029 12:46:43.651"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.660" endtime="20201029 12:46:43.715"></status>
</kw>
<msg timestamp="20201029 12:46:43.716" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:43.658" endtime="20201029 12:46:43.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.718" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:43.717" endtime="20201029 12:46:43.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.719" endtime="20201029 12:46:43.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.655" endtime="20201029 12:46:43.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.653" endtime="20201029 12:46:43.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.728" endtime="20201029 12:46:44.018"></status>
</kw>
<msg timestamp="20201029 12:46:44.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018274931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018840861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:43.727" endtime="20201029 12:46:44.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018274931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018840861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:44.021" endtime="20201029 12:46:44.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.029" endtime="20201029 12:46:44.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.724" endtime="20201029 12:46:44.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.723" endtime="20201029 12:46:44.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:44.035" level="INFO">${PHILIP_RES} = [{'diff': 0.0005659299999999992}, {'diff': 0.0005659440000000023}, {'diff': 0.0005659440000000023}, {'diff': 0.0005659579999999984}, {'diff': 0.0005659579999999984}, {'diff': 0.0005659169999999991}, {...</msg>
<status status="PASS" starttime="20201029 12:46:44.032" endtime="20201029 12:46:44.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:44.039" level="INFO">${RESULT} = {'diff': [0.0005659299999999992, 0.0005659440000000023, 0.0005659440000000023, 0.0005659579999999984, 0.0005659579999999984, 0.0005659169999999991, 0.0005659590000000013, 0.0005659590000000013, 0.0005...</msg>
<status status="PASS" starttime="20201029 12:46:44.036" endtime="20201029 12:46:44.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.044" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:44.042" endtime="20201029 12:46:44.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.046" level="INFO">VALUE: [0.0005659299999999992, 0.0005659440000000023, 0.0005659440000000023, 0.0005659579999999984, 0.0005659579999999984, 0.0005659169999999991, 0.0005659590000000013, 0.0005659590000000013, 0.0005659450000000017, 0.0005660279999999997, 0.0005659589999999978, 0.0005659299999999992, 0.0005659720000000014, 0.0005659580000000018, 0.0005659159999999996, 0.0005659580000000053, 0.0005659580000000053, 0.0005659579999999984, 0.0005659579999999984, 0.0005659579999999984, 0.0005659579999999984, 0.0005659309999999987, 0.0005659449999999983, 0.0005659589999999978, 0.0005659589999999978, 0.0005659590000000048, 0.000566000000000004, 0.000566000000000004, 0.0005659020000000001, 0.0005659579999999984, 0.0005660140000000036, 0.0005659439999999988, 0.0005659439999999988, 0.0005659439999999988, 0.0005659439999999988, 0.0005659439999999988, 0.000565889, 0.0005659579999999984, 0.0005659590000000048, 0.0005659310000000056, 0.0005659589999999978, 0.0005659449999999983, 0.0005659449999999983, 0.0005659589999999978, 0.0005659449999999983, 0.0005659299999999992, 0.0005659719999999979, 0.0005659439999999988, 0.0005659579999999914, 0.0005660279999999962]</msg>
<status status="PASS" starttime="20201029 12:46:44.045" endtime="20201029 12:46:44.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.040" endtime="20201029 12:46:44.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.652" endtime="20201029 12:46:44.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.629" endtime="20201029 12:46:44.048"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:44.050" endtime="20201029 12:46:44.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.049" endtime="20201029 12:46:44.070"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.078" endtime="20201029 12:46:44.136"></status>
</kw>
<msg timestamp="20201029 12:46:44.136" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:44.076" endtime="20201029 12:46:44.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.139" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:44.137" endtime="20201029 12:46:44.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.140" endtime="20201029 12:46:44.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.074" endtime="20201029 12:46:44.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.072" endtime="20201029 12:46:44.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.150" endtime="20201029 12:46:44.447"></status>
</kw>
<msg timestamp="20201029 12:46:44.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017667153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018252903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:44.148" endtime="20201029 12:46:44.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017667153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018252903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:44.455" endtime="20201029 12:46:44.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.472" endtime="20201029 12:46:44.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.146" endtime="20201029 12:46:44.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.144" endtime="20201029 12:46:44.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:44.480" level="INFO">${PHILIP_RES} = [{'diff': 0.0005857499999999995}, {'diff': 0.0005857780000000021}, {'diff': 0.0005858059999999977}, {'diff': 0.000585763999999999}, {'diff': 0.0005857780000000021}, {'diff': 0.0005858059999999977}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:44.477" endtime="20201029 12:46:44.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:44.484" level="INFO">${RESULT} = {'diff': [0.0005857499999999995, 0.0005857780000000021, 0.0005858059999999977, 0.000585763999999999, 0.0005857780000000021, 0.0005858059999999977, 0.0005857769999999991, 0.0005857770000000026, 0.00058...</msg>
<status status="PASS" starttime="20201029 12:46:44.481" endtime="20201029 12:46:44.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.488" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:44.487" endtime="20201029 12:46:44.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.490" level="INFO">VALUE: [0.0005857499999999995, 0.0005857780000000021, 0.0005858059999999977, 0.000585763999999999, 0.0005857780000000021, 0.0005858059999999977, 0.0005857769999999991, 0.0005857770000000026, 0.0005857769999999991, 0.0005857779999999986, 0.0005857780000000021, 0.0005857919999999982, 0.000585763999999999, 0.0005857780000000021, 0.0005857780000000021, 0.0005857780000000021, 0.0005857639999999956, 0.0005857779999999951, 0.0005857639999999956, 0.0005857500000000029, 0.0005857770000000026, 0.0005857780000000021, 0.0005857780000000021, 0.0005857219999999969, 0.0005857779999999951, 0.0005857920000000016, 0.0005858340000000004, 0.0005857920000000016, 0.0005857780000000021, 0.0005857920000000016, 0.0005857639999999956, 0.0005857920000000016, 0.0005858050000000017, 0.0005857780000000021, 0.0005857910000000022, 0.0005857640000000025, 0.0005857780000000021, 0.0005857639999999956, 0.0005857779999999951, 0.0005857780000000021, 0.0005857640000000025, 0.0005857640000000025, 0.0005857920000000016, 0.000585749999999996, 0.0005857079999999973, 0.0005858050000000087, 0.000585763000000003, 0.0005857779999999951, 0.0005857640000000025, 0.000585778000000009]</msg>
<status status="PASS" starttime="20201029 12:46:44.489" endtime="20201029 12:46:44.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.484" endtime="20201029 12:46:44.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.070" endtime="20201029 12:46:44.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.048" endtime="20201029 12:46:44.493"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:44.495" endtime="20201029 12:46:44.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.494" endtime="20201029 12:46:44.515"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.523" endtime="20201029 12:46:44.583"></status>
</kw>
<msg timestamp="20201029 12:46:44.583" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:44.521" endtime="20201029 12:46:44.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.585" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:44.584" endtime="20201029 12:46:44.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.586" endtime="20201029 12:46:44.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.519" endtime="20201029 12:46:44.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.517" endtime="20201029 12:46:44.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.595" endtime="20201029 12:46:44.882"></status>
</kw>
<msg timestamp="20201029 12:46:44.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017498306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018104167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:44.594" endtime="20201029 12:46:44.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017498306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018104167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:44.885" endtime="20201029 12:46:44.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.893" endtime="20201029 12:46:44.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.591" endtime="20201029 12:46:44.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.590" endtime="20201029 12:46:44.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:44.899" level="INFO">${PHILIP_RES} = [{'diff': 0.0006058609999999992}, {'diff': 0.0006059020000000019}, {'diff': 0.0006058469999999996}, {'diff': 0.0006059029999999979}, {'diff': 0.0006059029999999979}, {'diff': 0.0006059160000000015}, {...</msg>
<status status="PASS" starttime="20201029 12:46:44.896" endtime="20201029 12:46:44.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:44.904" level="INFO">${RESULT} = {'diff': [0.0006058609999999992, 0.0006059020000000019, 0.0006058469999999996, 0.0006059029999999979, 0.0006059029999999979, 0.0006059160000000015, 0.0006058890000000018, 0.0006059030000000014, 0.0006...</msg>
<status status="PASS" starttime="20201029 12:46:44.900" endtime="20201029 12:46:44.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.909" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:44.908" endtime="20201029 12:46:44.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.911" level="INFO">VALUE: [0.0006058609999999992, 0.0006059020000000019, 0.0006058469999999996, 0.0006059029999999979, 0.0006059029999999979, 0.0006059160000000015, 0.0006058890000000018, 0.0006059030000000014, 0.0006058609999999992, 0.0006058609999999992, 0.0006058889999999983, 0.0006059440000000006, 0.0006059020000000019, 0.0006059030000000014, 0.0006059030000000049, 0.0006059579999999967, 0.0006059030000000049, 0.0006059029999999979, 0.0006059719999999963, 0.0006058879999999989, 0.0006059169999999975, 0.0006059030000000049, 0.0006059029999999979, 0.0006059029999999979, 0.0006058889999999983, 0.0006058889999999983, 0.0006059020000000054, 0.0006059029999999979, 0.0006059169999999975, 0.0006059169999999975, 0.0006059019999999984, 0.0006059170000000044, 0.0006059169999999975, 0.0006059019999999984, 0.0006058889999999983, 0.0006059029999999979, 0.0006059170000000044, 0.0006059719999999963, 0.0006059030000000049, 0.0006059029999999979, 0.0006059029999999979, 0.0006059029999999979, 0.0006059309999999971, 0.0006059029999999979, 0.0006058879999999989, 0.0006058889999999983, 0.0006059030000000049, 0.0006059160000000119, 0.0006059169999999975, 0.0006058890000000122]</msg>
<status status="PASS" starttime="20201029 12:46:44.910" endtime="20201029 12:46:44.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.905" endtime="20201029 12:46:44.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.516" endtime="20201029 12:46:44.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.493" endtime="20201029 12:46:44.913"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:44.915" endtime="20201029 12:46:44.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.914" endtime="20201029 12:46:44.935"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.943" endtime="20201029 12:46:45.005"></status>
</kw>
<msg timestamp="20201029 12:46:45.006" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:44.942" endtime="20201029 12:46:45.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.008" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:45.007" endtime="20201029 12:46:45.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.009" endtime="20201029 12:46:45.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.939" endtime="20201029 12:46:45.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.937" endtime="20201029 12:46:45.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.018" endtime="20201029 12:46:45.322"></status>
</kw>
<msg timestamp="20201029 12:46:45.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017427875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018054181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:45.017" endtime="20201029 12:46:45.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017427875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018054181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:45.326" endtime="20201029 12:46:45.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.334" endtime="20201029 12:46:45.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.014" endtime="20201029 12:46:45.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.012" endtime="20201029 12:46:45.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:45.340" level="INFO">${PHILIP_RES} = [{'diff': 0.0006263060000000001}, {'diff': 0.0006263329999999998}, {'diff': 0.0006263469999999993}, {'diff': 0.0006263470000000028}, {'diff': 0.0006263050000000006}, {'diff': 0.0006263470000000028}, {...</msg>
<status status="PASS" starttime="20201029 12:46:45.337" endtime="20201029 12:46:45.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:45.344" level="INFO">${RESULT} = {'diff': [0.0006263060000000001, 0.0006263329999999998, 0.0006263469999999993, 0.0006263470000000028, 0.0006263050000000006, 0.0006263470000000028, 0.0006263879999999986, 0.0006263890000000015, 0.0006...</msg>
<status status="PASS" starttime="20201029 12:46:45.341" endtime="20201029 12:46:45.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.349" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:45.348" endtime="20201029 12:46:45.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.351" level="INFO">VALUE: [0.0006263060000000001, 0.0006263329999999998, 0.0006263469999999993, 0.0006263470000000028, 0.0006263050000000006, 0.0006263470000000028, 0.0006263879999999986, 0.0006263890000000015, 0.0006263469999999993, 0.0006263469999999993, 0.0006263609999999989, 0.0006263469999999993, 0.0006263329999999998, 0.0006263749999999985, 0.0006262920000000005, 0.0006262500000000018, 0.0006263329999999998, 0.0006263470000000063, 0.0006263469999999993, 0.0006263329999999998, 0.0006263199999999997, 0.0006263060000000001, 0.0006263339999999992, 0.0006263469999999993, 0.0006263609999999989, 0.0006263469999999993, 0.0006263469999999993, 0.0006263329999999998, 0.0006263060000000001, 0.0006263609999999989, 0.0006263750000000054, 0.0006263050000000006, 0.0006263190000000002, 0.0006263469999999993, 0.0006263470000000063, 0.0006263619999999984, 0.0006263609999999989, 0.0006263469999999993, 0.0006263610000000058, 0.0006262780000000009, 0.0006263329999999998, 0.0006264159999999977, 0.0006263060000000001, 0.0006263479999999988, 0.0006263469999999993, 0.0006262640000000014, 0.0006263330000000067, 0.0006263469999999993, 0.0006263469999999993, 0.0006263200000000135]</msg>
<status status="PASS" starttime="20201029 12:46:45.350" endtime="20201029 12:46:45.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.345" endtime="20201029 12:46:45.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.936" endtime="20201029 12:46:45.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.913" endtime="20201029 12:46:45.357"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:45.359" endtime="20201029 12:46:45.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.358" endtime="20201029 12:46:45.379"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.387" endtime="20201029 12:46:45.449"></status>
</kw>
<msg timestamp="20201029 12:46:45.450" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:45.385" endtime="20201029 12:46:45.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.452" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:45.451" endtime="20201029 12:46:45.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.453" endtime="20201029 12:46:45.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.383" endtime="20201029 12:46:45.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.381" endtime="20201029 12:46:45.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.463" endtime="20201029 12:46:45.750"></status>
</kw>
<msg timestamp="20201029 12:46:45.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017545681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018192708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:45.462" endtime="20201029 12:46:45.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017545681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018192708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:45.754" endtime="20201029 12:46:45.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.762" endtime="20201029 12:46:45.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.459" endtime="20201029 12:46:45.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.457" endtime="20201029 12:46:45.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:45.768" level="INFO">${PHILIP_RES} = [{'diff': 0.0006470269999999979}, {'diff': 0.0006471519999999981}, {'diff': 0.0006471670000000006}, {'diff': 0.0006470969999999993}, {'diff': 0.0006470690000000001}, {'diff': 0.0006471250000000019}, {...</msg>
<status status="PASS" starttime="20201029 12:46:45.765" endtime="20201029 12:46:45.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:45.772" level="INFO">${RESULT} = {'diff': [0.0006470269999999979, 0.0006471519999999981, 0.0006471670000000006, 0.0006470969999999993, 0.0006470690000000001, 0.0006471250000000019, 0.0006470970000000027, 0.0006470979999999987, 0.0006...</msg>
<status status="PASS" starttime="20201029 12:46:45.769" endtime="20201029 12:46:45.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.776" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:45.775" endtime="20201029 12:46:45.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.779" level="INFO">VALUE: [0.0006470269999999979, 0.0006471519999999981, 0.0006471670000000006, 0.0006470969999999993, 0.0006470690000000001, 0.0006471250000000019, 0.0006470970000000027, 0.0006470979999999987, 0.0006470969999999993, 0.0006470969999999993, 0.0006471249999999984, 0.0006471110000000023, 0.0006471110000000023, 0.000647056, 0.0006470829999999997, 0.000647056, 0.0006471109999999988, 0.0006471109999999988, 0.0006470969999999993, 0.0006470969999999993, 0.0006470969999999993, 0.0006471110000000058, 0.0006471109999999988, 0.0006471799999999972, 0.0006470829999999997, 0.0006470969999999993, 0.000647138999999998, 0.0006471109999999988, 0.0006470829999999997, 0.0006470979999999987, 0.0006470969999999993, 0.0006470839999999992, 0.000647167000000004, 0.0006470840000000061, 0.0006470829999999997, 0.0006470839999999992, 0.000647138999999998, 0.0006470699999999996, 0.0006470969999999993, 0.0006470839999999992, 0.0006470969999999993, 0.0006470700000000065, 0.0006470969999999993, 0.0006470839999999922, 0.0006470969999999993, 0.0006470699999999996, 0.0006470690000000001, 0.0006470840000000061, 0.0006470969999999993, 0.0006470979999999987]</msg>
<status status="PASS" starttime="20201029 12:46:45.777" endtime="20201029 12:46:45.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.773" endtime="20201029 12:46:45.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.379" endtime="20201029 12:46:45.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.357" endtime="20201029 12:46:45.781"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:45.784" endtime="20201029 12:46:45.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.782" endtime="20201029 12:46:45.804"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.812" endtime="20201029 12:46:45.876"></status>
</kw>
<msg timestamp="20201029 12:46:45.877" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:45.810" endtime="20201029 12:46:45.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.879" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:45.878" endtime="20201029 12:46:45.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.880" endtime="20201029 12:46:45.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.808" endtime="20201029 12:46:45.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.806" endtime="20201029 12:46:45.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.889" endtime="20201029 12:46:46.185"></status>
</kw>
<msg timestamp="20201029 12:46:46.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017486347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018154472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:45.887" endtime="20201029 12:46:46.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017486347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018154472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:46.189" endtime="20201029 12:46:46.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.196" endtime="20201029 12:46:46.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.885" endtime="20201029 12:46:46.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.883" endtime="20201029 12:46:46.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:46.203" level="INFO">${PHILIP_RES} = [{'diff': 0.000668125000000002}, {'diff': 0.0006681810000000003}, {'diff': 0.0006681659999999978}, {'diff': 0.0006681669999999973}, {'diff': 0.0006680970000000029}, {'diff': 0.0006681800000000009}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:46.200" endtime="20201029 12:46:46.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:46.208" level="INFO">${RESULT} = {'diff': [0.000668125000000002, 0.0006681810000000003, 0.0006681659999999978, 0.0006681669999999973, 0.0006680970000000029, 0.0006681800000000009, 0.0006681810000000003, 0.0006681530000000012, 0.00066...</msg>
<status status="PASS" starttime="20201029 12:46:46.204" endtime="20201029 12:46:46.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.212" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:46.211" endtime="20201029 12:46:46.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.214" level="INFO">VALUE: [0.000668125000000002, 0.0006681810000000003, 0.0006681659999999978, 0.0006681669999999973, 0.0006680970000000029, 0.0006681800000000009, 0.0006681810000000003, 0.0006681530000000012, 0.0006681660000000013, 0.0006681810000000003, 0.0006681669999999973, 0.000668125000000002, 0.0006682089999999995, 0.0006681669999999973, 0.0006681389999999982, 0.0006681249999999986, 0.0006681390000000051, 0.0006681530000000047, 0.0006681389999999982, 0.0006681659999999978, 0.0006681389999999982, 0.0006681249999999986, 0.0006681389999999982, 0.000668222000000003, 0.000668222000000003, 0.0006681670000000042, 0.0006681249999999986, 0.0006681379999999987, 0.0006681669999999973, 0.0006681389999999982, 0.0006681659999999978, 0.0006681530000000047, 0.0006681530000000047, 0.0006681799999999974, 0.0006680829999999999, 0.0006681529999999977, 0.0006681799999999974, 0.0006681950000000034, 0.0006682080000000035, 0.0006681530000000047, 0.0006681529999999908, 0.0006681659999999978, 0.0006681110000000129, 0.0006681530000000047, 0.0006681519999999913, 0.0006681669999999973, 0.0006681669999999973, 0.0006682079999999896, 0.0006681810000000038, 0.0006681660000000117]</msg>
<status status="PASS" starttime="20201029 12:46:46.213" endtime="20201029 12:46:46.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.208" endtime="20201029 12:46:46.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.804" endtime="20201029 12:46:46.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.782" endtime="20201029 12:46:46.216"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:46.219" endtime="20201029 12:46:46.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.217" endtime="20201029 12:46:46.239"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.246" endtime="20201029 12:46:46.312"></status>
</kw>
<msg timestamp="20201029 12:46:46.312" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:46.245" endtime="20201029 12:46:46.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.315" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:46.313" endtime="20201029 12:46:46.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.316" endtime="20201029 12:46:46.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.242" endtime="20201029 12:46:46.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.241" endtime="20201029 12:46:46.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.325" endtime="20201029 12:46:46.611"></status>
</kw>
<msg timestamp="20201029 12:46:46.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017579431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018268917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:46.323" endtime="20201029 12:46:46.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017579431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018268917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:46.615" endtime="20201029 12:46:46.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.623" endtime="20201029 12:46:46.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.321" endtime="20201029 12:46:46.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.319" endtime="20201029 12:46:46.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:46.629" level="INFO">${PHILIP_RES} = [{'diff': 0.0006894859999999996}, {'diff': 0.0006895280000000018}, {'diff': 0.0006895410000000018}, {'diff': 0.0006895140000000022}, {'diff': 0.0006895420000000013}, {'diff': 0.0006894580000000004}, {...</msg>
<status status="PASS" starttime="20201029 12:46:46.626" endtime="20201029 12:46:46.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:46.633" level="INFO">${RESULT} = {'diff': [0.0006894859999999996, 0.0006895280000000018, 0.0006895410000000018, 0.0006895140000000022, 0.0006895420000000013, 0.0006894580000000004, 0.0006895409999999984, 0.0006895420000000013, 0.0006...</msg>
<status status="PASS" starttime="20201029 12:46:46.630" endtime="20201029 12:46:46.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.638" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:46.636" endtime="20201029 12:46:46.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.640" level="INFO">VALUE: [0.0006894859999999996, 0.0006895280000000018, 0.0006895410000000018, 0.0006895140000000022, 0.0006895420000000013, 0.0006894580000000004, 0.0006895409999999984, 0.0006895420000000013, 0.0006895280000000018, 0.0006895279999999983, 0.0006895409999999984, 0.0006895420000000013, 0.0006895419999999944, 0.0006895410000000018, 0.0006895280000000018, 0.0006895560000000009, 0.0006895700000000005, 0.0006895409999999949, 0.0006895280000000018, 0.0006895140000000022, 0.0006895550000000014, 0.0006895830000000006, 0.000689555999999994, 0.0006895420000000013, 0.0006895550000000014, 0.0006895280000000018, 0.0006895420000000013, 0.0006895139999999952, 0.0006895410000000018, 0.0006895280000000018, 0.0006895420000000013, 0.0006895410000000018, 0.0006895970000000001, 0.0006896109999999997, 0.0006895420000000013, 0.0006895410000000018, 0.0006895280000000018, 0.0006895419999999944, 0.0006895410000000018, 0.0006895550000000084, 0.0006895140000000022, 0.0006895420000000013, 0.0006895269999999953, 0.000689569000000001, 0.0006895420000000013, 0.0006895420000000013, 0.0006895700000000005, 0.0006895420000000013, 0.0006895279999999948, 0.0006895549999999945]</msg>
<status status="PASS" starttime="20201029 12:46:46.639" endtime="20201029 12:46:46.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.634" endtime="20201029 12:46:46.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.239" endtime="20201029 12:46:46.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.217" endtime="20201029 12:46:46.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.447" endtime="20201029 12:46:46.642"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:25.148" endtime="20201029 12:46:46.643" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:46:04.743" endtime="20201029 12:46:46.651"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.723" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:46:46.731" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:46:47.865" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:46:46.721" endtime="20201029 12:46:47.866"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.869" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:46:47.867" endtime="20201029 12:46:47.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.720" endtime="20201029 12:46:47.869"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:47.871" endtime="20201029 12:46:48.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.870" endtime="20201029 12:46:48.072"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.084" endtime="20201029 12:46:48.099"></status>
</kw>
<msg timestamp="20201029 12:46:48.099" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:48.083" endtime="20201029 12:46:48.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.102" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:48.101" endtime="20201029 12:46:48.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.105" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:48.103" endtime="20201029 12:46:48.105"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:48.080" endtime="20201029 12:46:48.106"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:48.078" endtime="20201029 12:46:48.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.077" endtime="20201029 12:46:48.107"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:48.111" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:48.110" endtime="20201029 12:46:48.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.108" endtime="20201029 12:46:48.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.076" endtime="20201029 12:46:48.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.076" endtime="20201029 12:46:48.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.113" endtime="20201029 12:46:48.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.074" endtime="20201029 12:46:48.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.115" endtime="20201029 12:46:48.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.073" endtime="20201029 12:46:48.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.719" endtime="20201029 12:46:48.118"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:48.124" endtime="20201029 12:46:48.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.122" endtime="20201029 12:46:48.144"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.158" endtime="20201029 12:46:48.172"></status>
</kw>
<msg timestamp="20201029 12:46:48.173" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:48.156" endtime="20201029 12:46:48.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.175" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:48.174" endtime="20201029 12:46:48.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.178" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:48.176" endtime="20201029 12:46:48.179"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:48.154" endtime="20201029 12:46:48.179"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:48.151" endtime="20201029 12:46:48.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.150" endtime="20201029 12:46:48.180"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:48.184" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:48.183" endtime="20201029 12:46:48.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.181" endtime="20201029 12:46:48.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.149" endtime="20201029 12:46:48.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.149" endtime="20201029 12:46:48.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.185" endtime="20201029 12:46:48.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.146" endtime="20201029 12:46:48.188"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.144" endtime="20201029 12:46:48.188"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.121" endtime="20201029 12:46:48.188"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.198" endtime="20201029 12:46:48.215"></status>
</kw>
<msg timestamp="20201029 12:46:48.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:48.196" endtime="20201029 12:46:48.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:48.218" endtime="20201029 12:46:48.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.223" endtime="20201029 12:46:48.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.194" endtime="20201029 12:46:48.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.191" endtime="20201029 12:46:48.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.242" endtime="20201029 12:46:48.542"></status>
</kw>
<msg timestamp="20201029 12:46:48.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066588736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066610819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:48.239" endtime="20201029 12:46:48.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066588736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066610819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:48.547" endtime="20201029 12:46:48.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.555" endtime="20201029 12:46:48.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.233" endtime="20201029 12:46:48.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.230" endtime="20201029 12:46:48.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:48.562" level="INFO">${RESULT} = [{'diff': 2.208300000000607e-05}, {'diff': 2.2250000000001435e-05}, {'diff': 2.204100000000042e-05}, {'diff': 2.187500000000453e-05}, {'diff': 2.2249999999987558e-05}, {'diff': 2.211100000000521e-05},...</msg>
<status status="PASS" starttime="20201029 12:46:48.558" endtime="20201029 12:46:48.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:48.566" level="INFO">${ACCURACY} = {'diff': [2.208300000000607e-05, 2.2250000000001435e-05, 2.204100000000042e-05, 2.187500000000453e-05, 2.2249999999987558e-05, 2.211100000000521e-05, 2.263900000000485e-05, 2.2721999999988918e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 12:46:48.563" endtime="20201029 12:46:48.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.570" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 12:46:48.569" endtime="20201029 12:46:48.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.573" level="INFO">VALUE: [2.208300000000607e-05, 2.2250000000001435e-05, 2.204100000000042e-05, 2.187500000000453e-05, 2.2249999999987558e-05, 2.211100000000521e-05, 2.263900000000485e-05, 2.2721999999988918e-05, 2.20969999999987e-05, 2.2082999999992192e-05, 2.20969999999987e-05, 2.2235999999994926e-05, 2.187500000000453e-05, 2.2250000000001435e-05, 2.2305999999999715e-05, 2.2500000000008624e-05, 2.2556000000006904e-05, 2.263900000000485e-05, 2.187500000000453e-05, 2.2735999999995427e-05, 2.2569999999999535e-05, 2.184700000000539e-05, 2.2138999999990472e-05, 2.215299999999698e-05, 2.208300000000607e-05, 2.2235999999994926e-05, 2.2222000000002295e-05, 2.1819999999991846e-05, 2.236099999999852e-05, 2.1790999999993232e-05, 2.25969999999992e-05, 2.20969999999987e-05, 2.20969999999987e-05, 2.206899999999956e-05, 2.208300000000607e-05, 2.24169999999968e-05, 2.2443999999996467e-05, 2.2292000000007084e-05, 2.20969999999987e-05, 2.2486000000002115e-05, 2.238899999999766e-05, 2.212499999999784e-05, 2.2320000000006224e-05, 2.262499999999834e-05, 2.2305999999999715e-05, 2.237500000000503e-05, 2.194499999999544e-05, 2.233299999999938e-05, 2.190300000000367e-05, 2.2235999999994926e-05]</msg>
<status status="PASS" starttime="20201029 12:46:48.571" endtime="20201029 12:46:48.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.567" endtime="20201029 12:46:48.574"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:48.577" endtime="20201029 12:46:48.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.576" endtime="20201029 12:46:48.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.575" endtime="20201029 12:46:48.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.190" endtime="20201029 12:46:48.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.189" endtime="20201029 12:46:48.600"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.619" endtime="20201029 12:46:48.635"></status>
</kw>
<msg timestamp="20201029 12:46:48.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:48.617" endtime="20201029 12:46:48.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:48.637" endtime="20201029 12:46:48.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.639" endtime="20201029 12:46:48.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.610" endtime="20201029 12:46:48.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.607" endtime="20201029 12:46:48.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.649" endtime="20201029 12:46:48.935"></status>
</kw>
<msg timestamp="20201029 12:46:48.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034290986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034313792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:48.647" endtime="20201029 12:46:48.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034290986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034313792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:48.941" endtime="20201029 12:46:48.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.951" endtime="20201029 12:46:48.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.644" endtime="20201029 12:46:48.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.643" endtime="20201029 12:46:48.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:48.957" level="INFO">${RESULT} = [{'diff': 2.2806000000000215e-05}, {'diff': 2.2708000000003226e-05}, {'diff': 2.2235999999994926e-05}, {'diff': 2.197300000000152e-05}, {'diff': 2.194500000000238e-05}, {'diff': 2.211099999999827e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:48.954" endtime="20201029 12:46:48.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:48.961" level="INFO">${ACCURACY} = {'diff': [2.2806000000000215e-05, 2.2708000000003226e-05, 2.2235999999994926e-05, 2.197300000000152e-05, 2.194500000000238e-05, 2.211099999999827e-05, 2.208300000000607e-05, 2.1805999999999215e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:46:48.958" endtime="20201029 12:46:48.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.966" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 12:46:48.965" endtime="20201029 12:46:48.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.969" level="INFO">VALUE: [2.2806000000000215e-05, 2.2708000000003226e-05, 2.2235999999994926e-05, 2.197300000000152e-05, 2.194500000000238e-05, 2.211099999999827e-05, 2.208300000000607e-05, 2.1805999999999215e-05, 2.244499999999594e-05, 2.187500000000453e-05, 2.2236000000001865e-05, 2.2542000000000395e-05, 2.233299999999938e-05, 2.2555999999999965e-05, 2.197300000000152e-05, 2.197299999999458e-05, 2.22770000000011e-05, 2.272299999999533e-05, 2.272299999999533e-05, 2.206899999999956e-05, 2.237500000000503e-05, 2.20969999999987e-05, 2.2458000000002976e-05, 2.2429999999996897e-05, 2.1958000000002476e-05, 2.180499999999974e-05, 2.2430000000003836e-05, 2.20969999999987e-05, 2.24169999999968e-05, 2.2014000000000755e-05, 2.258300000000657e-05, 2.2250000000001435e-05, 2.240299999999723e-05, 2.2583999999999105e-05, 2.2333999999998855e-05, 2.2069999999999035e-05, 2.2055999999999465e-05, 2.2070000000005974e-05, 2.2069999999999035e-05, 2.2528000000000825e-05, 2.245900000000245e-05, 2.2264000000001005e-05, 2.244499999999594e-05, 2.2264000000001005e-05, 2.263899999999791e-05, 2.256900000000006e-05, 2.231899999999981e-05, 2.255500000000049e-05, 2.215300000000392e-05, 2.2736000000002365e-05]</msg>
<status status="PASS" starttime="20201029 12:46:48.968" endtime="20201029 12:46:48.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.962" endtime="20201029 12:46:48.970"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:48.973" endtime="20201029 12:46:48.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.972" endtime="20201029 12:46:48.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.971" endtime="20201029 12:46:48.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.605" endtime="20201029 12:46:48.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.601" endtime="20201029 12:46:48.994"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.003" endtime="20201029 12:46:49.020"></status>
</kw>
<msg timestamp="20201029 12:46:49.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.001" endtime="20201029 12:46:49.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.023" endtime="20201029 12:46:49.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.028" endtime="20201029 12:46:49.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.999" endtime="20201029 12:46:49.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.997" endtime="20201029 12:46:49.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.048" endtime="20201029 12:46:49.342"></status>
</kw>
<msg timestamp="20201029 12:46:49.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021697764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021720014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:49.044" endtime="20201029 12:46:49.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021697764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021720014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:49.347" endtime="20201029 12:46:49.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.357" endtime="20201029 12:46:49.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.039" endtime="20201029 12:46:49.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.036" endtime="20201029 12:46:49.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:49.363" level="INFO">${RESULT} = [{'diff': 2.2249999999997966e-05}, {'diff': 2.211100000000174e-05}, {'diff': 2.1820000000002254e-05}, {'diff': 2.2098000000001644e-05}, {'diff': 2.202700000000085e-05}, {'diff': 2.2000000000001185e-05...</msg>
<status status="PASS" starttime="20201029 12:46:49.360" endtime="20201029 12:46:49.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:49.368" level="INFO">${ACCURACY} = {'diff': [2.2249999999997966e-05, 2.211100000000174e-05, 2.1820000000002254e-05, 2.2098000000001644e-05, 2.202700000000085e-05, 2.2000000000001185e-05, 2.2319999999999285e-05, 2.2264000000001005e-05, ...</msg>
<status status="PASS" starttime="20201029 12:46:49.364" endtime="20201029 12:46:49.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.373" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 12:46:49.372" endtime="20201029 12:46:49.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.375" level="INFO">VALUE: [2.2249999999997966e-05, 2.211100000000174e-05, 2.1820000000002254e-05, 2.2098000000001644e-05, 2.202700000000085e-05, 2.2000000000001185e-05, 2.2319999999999285e-05, 2.2264000000001005e-05, 2.230500000000024e-05, 2.20969999999987e-05, 2.238900000000113e-05, 2.180499999999974e-05, 2.2250000000001435e-05, 2.255500000000049e-05, 2.1971999999998576e-05, 2.211099999999827e-05, 2.213900000000088e-05, 2.2250000000001435e-05, 2.211100000000174e-05, 2.1957999999999006e-05, 2.265299999999748e-05, 2.2555999999999965e-05, 2.1958000000002476e-05, 2.263900000000138e-05, 2.2555999999999965e-05, 2.244499999999941e-05, 2.2764000000001505e-05, 2.2721999999999326e-05, 2.2583999999999105e-05, 2.1972000000002045e-05, 2.2721999999999326e-05, 2.1916000000000296e-05, 2.240299999999723e-05, 2.17770000000006e-05, 2.215299999999698e-05, 2.234699999999895e-05, 2.2263999999997536e-05, 2.1943999999999436e-05, 2.229100000000067e-05, 2.265300000000095e-05, 2.2236000000001865e-05, 2.187500000000106e-05, 2.262499999999834e-05, 2.1958000000002476e-05, 2.213900000000088e-05, 2.2264000000001005e-05, 2.2264000000001005e-05, 2.2485999999998646e-05, 2.2250000000001435e-05, 2.188900000000063e-05]</msg>
<status status="PASS" starttime="20201029 12:46:49.374" endtime="20201029 12:46:49.376"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.369" endtime="20201029 12:46:49.376"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:49.380" endtime="20201029 12:46:49.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.378" endtime="20201029 12:46:49.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.377" endtime="20201029 12:46:49.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.995" endtime="20201029 12:46:49.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.994" endtime="20201029 12:46:49.401"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.409" endtime="20201029 12:46:49.425"></status>
</kw>
<msg timestamp="20201029 12:46:49.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.408" endtime="20201029 12:46:49.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.427" endtime="20201029 12:46:49.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.430" endtime="20201029 12:46:49.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.405" endtime="20201029 12:46:49.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.403" endtime="20201029 12:46:49.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.439" endtime="20201029 12:46:49.727"></status>
</kw>
<msg timestamp="20201029 12:46:49.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021543792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021566208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:49.437" endtime="20201029 12:46:49.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021543792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021566208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:49.731" endtime="20201029 12:46:49.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.739" endtime="20201029 12:46:49.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.435" endtime="20201029 12:46:49.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.433" endtime="20201029 12:46:49.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:49.746" level="INFO">${RESULT} = [{'diff': 2.2416000000000796e-05}, {'diff': 2.1971999999998576e-05}, {'diff': 2.1958000000002476e-05}, {'diff': 2.211099999999827e-05}, {'diff': 2.230500000000024e-05}, {'diff': 2.19030000000002e-05},...</msg>
<status status="PASS" starttime="20201029 12:46:49.743" endtime="20201029 12:46:49.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:49.750" level="INFO">${ACCURACY} = {'diff': [2.2416000000000796e-05, 2.1971999999998576e-05, 2.1958000000002476e-05, 2.211099999999827e-05, 2.230500000000024e-05, 2.19030000000002e-05, 2.2735999999998896e-05, 2.213900000000088e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 12:46:49.747" endtime="20201029 12:46:49.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.755" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 12:46:49.754" endtime="20201029 12:46:49.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.758" level="INFO">VALUE: [2.2416000000000796e-05, 2.1971999999998576e-05, 2.1958000000002476e-05, 2.211099999999827e-05, 2.230500000000024e-05, 2.19030000000002e-05, 2.2735999999998896e-05, 2.213900000000088e-05, 2.208299999999913e-05, 2.2070000000002504e-05, 2.188899999999716e-05, 2.2264000000001005e-05, 2.1791999999999645e-05, 2.2055999999999465e-05, 2.2041999999999895e-05, 2.219499999999916e-05, 2.1833999999998355e-05, 2.24169999999968e-05, 2.1986000000001615e-05, 2.263899999999791e-05, 2.2528000000000825e-05, 2.2637999999998437e-05, 2.2402000000001226e-05, 2.179100000000017e-05, 2.2443999999999936e-05, 2.2485999999998646e-05, 2.2443999999999936e-05, 2.1971999999998576e-05, 2.1971999999998576e-05, 2.183299999999888e-05, 2.20969999999987e-05, 2.229100000000067e-05, 2.256900000000006e-05, 2.211099999999827e-05, 2.258299999999963e-05, 2.236099999999852e-05, 2.2555999999999965e-05, 2.183300000000235e-05, 2.216700000000002e-05, 2.1986000000001615e-05, 2.1986000000001615e-05, 2.2207999999999256e-05, 2.191699999999977e-05, 2.270899999999923e-05, 2.268100000000009e-05, 2.27229999999988e-05, 2.1833999999998355e-05, 2.193099999999934e-05, 2.2292000000000145e-05, 2.1916000000000296e-05]</msg>
<status status="PASS" starttime="20201029 12:46:49.757" endtime="20201029 12:46:49.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.751" endtime="20201029 12:46:49.759"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:49.763" endtime="20201029 12:46:49.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.761" endtime="20201029 12:46:49.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.760" endtime="20201029 12:46:49.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.402" endtime="20201029 12:46:49.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.401" endtime="20201029 12:46:49.784"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.794" endtime="20201029 12:46:49.811"></status>
</kw>
<msg timestamp="20201029 12:46:49.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.791" endtime="20201029 12:46:49.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.812" endtime="20201029 12:46:49.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.816" endtime="20201029 12:46:49.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.788" endtime="20201029 12:46:49.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.786" endtime="20201029 12:46:49.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.827" endtime="20201029 12:46:50.114"></status>
</kw>
<msg timestamp="20201029 12:46:50.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024524833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024546764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:49.826" endtime="20201029 12:46:50.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024524833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024546764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:50.118" endtime="20201029 12:46:50.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.126" endtime="20201029 12:46:50.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.823" endtime="20201029 12:46:50.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.820" endtime="20201029 12:46:50.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:50.133" level="INFO">${RESULT} = [{'diff': 2.193099999999934e-05}, {'diff': 2.2707999999999756e-05}, {'diff': 2.180499999999974e-05}, {'diff': 2.2292000000000145e-05}, {'diff': 2.2749999999998466e-05}, {'diff': 2.266700000000052e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:50.129" endtime="20201029 12:46:50.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:50.137" level="INFO">${ACCURACY} = {'diff': [2.193099999999934e-05, 2.2707999999999756e-05, 2.180499999999974e-05, 2.2292000000000145e-05, 2.2749999999998466e-05, 2.266700000000052e-05, 2.27229999999988e-05, 2.2569999999999535e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 12:46:50.134" endtime="20201029 12:46:50.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.141" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 12:46:50.140" endtime="20201029 12:46:50.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.144" level="INFO">VALUE: [2.193099999999934e-05, 2.2707999999999756e-05, 2.180499999999974e-05, 2.2292000000000145e-05, 2.2749999999998466e-05, 2.266700000000052e-05, 2.27229999999988e-05, 2.2569999999999535e-05, 2.212499999999784e-05, 2.2069999999999035e-05, 2.237499999999809e-05, 2.20969999999987e-05, 2.213900000000088e-05, 2.2319999999999285e-05, 2.2555999999999965e-05, 2.2665999999997577e-05, 2.2193999999999686e-05, 2.206899999999956e-05, 2.2763999999998036e-05, 2.2500000000001685e-05, 2.255500000000049e-05, 2.1985999999998146e-05, 2.1972000000002045e-05, 2.263900000000138e-05, 2.2540999999997452e-05, 2.2457999999999506e-05, 2.20830000000026e-05, 2.2207999999999256e-05, 2.2542000000000395e-05, 2.1943999999999436e-05, 2.1957999999999006e-05, 2.2278000000000575e-05, 2.191699999999977e-05, 2.2708000000003226e-05, 2.1819999999998785e-05, 2.2278000000000575e-05, 2.2084000000002074e-05, 2.2249999999997966e-05, 2.188900000000063e-05, 2.2583999999999105e-05, 2.2680000000000616e-05, 2.2401999999997757e-05, 2.1750000000000935e-05, 2.237499999999809e-05, 2.180499999999974e-05, 2.2222000000002295e-05, 2.252700000000135e-05, 2.2457999999999506e-05, 2.1916000000000296e-05, 2.2222000000002295e-05]</msg>
<status status="PASS" starttime="20201029 12:46:50.142" endtime="20201029 12:46:50.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.138" endtime="20201029 12:46:50.145"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:50.149" endtime="20201029 12:46:50.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.147" endtime="20201029 12:46:50.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.146" endtime="20201029 12:46:50.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.785" endtime="20201029 12:46:50.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.784" endtime="20201029 12:46:50.169"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.179" endtime="20201029 12:46:50.194"></status>
</kw>
<msg timestamp="20201029 12:46:50.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:50.177" endtime="20201029 12:46:50.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:50.196" endtime="20201029 12:46:50.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.198" endtime="20201029 12:46:50.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.174" endtime="20201029 12:46:50.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.172" endtime="20201029 12:46:50.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.207" endtime="20201029 12:46:50.492"></status>
</kw>
<msg timestamp="20201029 12:46:50.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022212653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022234514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:50.206" endtime="20201029 12:46:50.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022212653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022234514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:50.496" endtime="20201029 12:46:50.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.504" endtime="20201029 12:46:50.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.203" endtime="20201029 12:46:50.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.201" endtime="20201029 12:46:50.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:50.511" level="INFO">${RESULT} = [{'diff': 2.186100000000149e-05}, {'diff': 2.2111999999997745e-05}, {'diff': 2.2457999999999506e-05}, {'diff': 2.211099999999827e-05}, {'diff': 2.216700000000002e-05}, {'diff': 2.1791999999999645e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:50.508" endtime="20201029 12:46:50.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:50.516" level="INFO">${ACCURACY} = {'diff': [2.186100000000149e-05, 2.2111999999997745e-05, 2.2457999999999506e-05, 2.211099999999827e-05, 2.216700000000002e-05, 2.1791999999999645e-05, 2.265300000000095e-05, 2.188900000000063e-05, 2.1...</msg>
<status status="PASS" starttime="20201029 12:46:50.512" endtime="20201029 12:46:50.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.520" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 12:46:50.519" endtime="20201029 12:46:50.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.523" level="INFO">VALUE: [2.186100000000149e-05, 2.2111999999997745e-05, 2.2457999999999506e-05, 2.211099999999827e-05, 2.216700000000002e-05, 2.1791999999999645e-05, 2.265300000000095e-05, 2.188900000000063e-05, 2.1972000000002045e-05, 2.2277999999997106e-05, 2.2542000000000395e-05, 2.263899999999791e-05, 2.2542000000000395e-05, 2.197300000000152e-05, 2.1957999999999006e-05, 2.2098000000001644e-05, 2.1986000000001615e-05, 2.2166000000000546e-05, 2.20830000000026e-05, 2.240299999999723e-05, 2.229100000000067e-05, 2.231899999999981e-05, 2.2735999999998896e-05, 2.2735999999998896e-05, 2.206899999999956e-05, 2.187500000000106e-05, 2.208299999999913e-05, 2.238899999999766e-05, 2.2278000000000575e-05, 2.1958000000002476e-05, 2.2486000000002115e-05, 2.269500000000313e-05, 2.2500000000001685e-05, 2.240299999999723e-05, 2.262500000000181e-05, 2.209700000000217e-05, 2.2207999999999256e-05, 2.270899999999923e-05, 2.2500000000001685e-05, 2.243099999999984e-05, 2.1957999999999006e-05, 2.1958000000002476e-05, 2.1985999999998146e-05, 2.20830000000026e-05, 2.183299999999888e-05, 2.211099999999827e-05, 2.265299999999748e-05, 2.206899999999956e-05, 2.245899999999898e-05, 2.1820000000002254e-05]</msg>
<status status="PASS" starttime="20201029 12:46:50.521" endtime="20201029 12:46:50.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.517" endtime="20201029 12:46:50.524"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:50.527" endtime="20201029 12:46:50.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.526" endtime="20201029 12:46:50.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.524" endtime="20201029 12:46:50.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.170" endtime="20201029 12:46:50.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.170" endtime="20201029 12:46:50.555"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.563" endtime="20201029 12:46:50.579"></status>
</kw>
<msg timestamp="20201029 12:46:50.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:50.562" endtime="20201029 12:46:50.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:50.580" endtime="20201029 12:46:50.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.583" endtime="20201029 12:46:50.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.559" endtime="20201029 12:46:50.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.557" endtime="20201029 12:46:50.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.592" endtime="20201029 12:46:50.879"></status>
</kw>
<msg timestamp="20201029 12:46:50.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021683236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021705333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:50.590" endtime="20201029 12:46:50.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021683236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021705333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:50.883" endtime="20201029 12:46:50.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.891" endtime="20201029 12:46:50.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.588" endtime="20201029 12:46:50.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.586" endtime="20201029 12:46:50.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:50.898" level="INFO">${RESULT} = [{'diff': 2.20969999999987e-05}, {'diff': 2.1833999999998355e-05}, {'diff': 2.1916000000000296e-05}, {'diff': 2.2235999999998396e-05}, {'diff': 2.187499999999759e-05}, {'diff': 2.20969999999987e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:50.894" endtime="20201029 12:46:50.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:50.902" level="INFO">${ACCURACY} = {'diff': [2.20969999999987e-05, 2.1833999999998355e-05, 2.1916000000000296e-05, 2.2235999999998396e-05, 2.187499999999759e-05, 2.20969999999987e-05, 2.2707999999999756e-05, 2.2514000000001255e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 12:46:50.898" endtime="20201029 12:46:50.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.906" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 12:46:50.905" endtime="20201029 12:46:50.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.909" level="INFO">VALUE: [2.20969999999987e-05, 2.1833999999998355e-05, 2.1916000000000296e-05, 2.2235999999998396e-05, 2.187499999999759e-05, 2.20969999999987e-05, 2.2707999999999756e-05, 2.2514000000001255e-05, 2.2041999999999895e-05, 2.24030000000007e-05, 2.208299999999913e-05, 2.191699999999977e-05, 2.211099999999827e-05, 2.2514000000001255e-05, 2.220899999999873e-05, 2.238900000000113e-05, 2.2278000000000575e-05, 2.2499999999998216e-05, 2.240299999999723e-05, 2.1805999999999215e-05, 2.2041999999999895e-05, 2.188900000000063e-05, 2.213899999999741e-05, 2.2528000000000825e-05, 2.2278000000000575e-05, 2.2569999999999535e-05, 2.2665999999997577e-05, 2.24030000000007e-05, 2.2443999999999936e-05, 2.1916000000000296e-05, 2.24030000000007e-05, 2.179100000000017e-05, 2.238900000000113e-05, 2.1971999999998576e-05, 2.2277999999997106e-05, 2.2500000000001685e-05, 2.2499999999998216e-05, 2.2208000000002726e-05, 2.2083999999998605e-05, 2.184699999999845e-05, 2.2263999999997536e-05, 2.195900000000195e-05, 2.2069999999999035e-05, 2.1971999999998576e-05, 2.2278000000000575e-05, 2.20969999999987e-05, 2.2055999999999465e-05, 2.237500000000156e-05, 2.262499999999834e-05, 2.2249999999997966e-05]</msg>
<status status="PASS" starttime="20201029 12:46:50.907" endtime="20201029 12:46:50.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.903" endtime="20201029 12:46:50.910"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:50.914" endtime="20201029 12:46:50.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.912" endtime="20201029 12:46:50.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.911" endtime="20201029 12:46:50.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.556" endtime="20201029 12:46:50.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.555" endtime="20201029 12:46:50.934"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.943" endtime="20201029 12:46:50.960"></status>
</kw>
<msg timestamp="20201029 12:46:50.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:50.941" endtime="20201029 12:46:50.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:50.961" endtime="20201029 12:46:50.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.964" endtime="20201029 12:46:50.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.939" endtime="20201029 12:46:50.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.937" endtime="20201029 12:46:50.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.972" endtime="20201029 12:46:51.258"></status>
</kw>
<msg timestamp="20201029 12:46:51.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022443431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0224655, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:50.971" endtime="20201029 12:46:51.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022443431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0224655, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:51.262" endtime="20201029 12:46:51.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.270" endtime="20201029 12:46:51.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.968" endtime="20201029 12:46:51.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.967" endtime="20201029 12:46:51.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:51.277" level="INFO">${RESULT} = [{'diff': 2.206899999999956e-05}, {'diff': 2.238899999999766e-05}, {'diff': 2.2278000000000575e-05}, {'diff': 2.180499999999974e-05}, {'diff': 2.2443999999999936e-05}, {'diff': 2.24030000000007e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:51.274" endtime="20201029 12:46:51.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:51.281" level="INFO">${ACCURACY} = {'diff': [2.206899999999956e-05, 2.238899999999766e-05, 2.2278000000000575e-05, 2.180499999999974e-05, 2.2443999999999936e-05, 2.24030000000007e-05, 2.1820000000002254e-05, 2.1806000000002684e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 12:46:51.278" endtime="20201029 12:46:51.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.286" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 12:46:51.285" endtime="20201029 12:46:51.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.288" level="INFO">VALUE: [2.206899999999956e-05, 2.238899999999766e-05, 2.2278000000000575e-05, 2.180499999999974e-05, 2.2443999999999936e-05, 2.24030000000007e-05, 2.1820000000002254e-05, 2.1806000000002684e-05, 2.2250000000001435e-05, 2.2028000000000325e-05, 2.238900000000113e-05, 2.261099999999877e-05, 2.2070000000002504e-05, 2.2055999999999465e-05, 2.237500000000156e-05, 2.2278000000000575e-05, 2.197300000000152e-05, 2.2514000000001255e-05, 2.1887999999997687e-05, 2.2235999999998396e-05, 2.180499999999974e-05, 2.2736000000002365e-05, 2.181899999999931e-05, 2.1971999999998576e-05, 2.1957999999999006e-05, 2.1943999999999436e-05, 2.2277999999997106e-05, 2.208299999999913e-05, 2.186099999999802e-05, 2.236100000000199e-05, 2.258299999999963e-05, 2.2249999999997966e-05, 2.261099999999877e-05, 2.263899999999791e-05, 2.188899999999716e-05, 2.2235999999998396e-05, 2.2013999999997286e-05, 2.195899999999848e-05, 2.211099999999827e-05, 2.263900000000138e-05, 2.27229999999988e-05, 2.215300000000045e-05, 2.1887999999997687e-05, 2.206899999999956e-05, 2.20969999999987e-05, 2.24030000000007e-05, 2.206900000000303e-05, 2.2457999999999506e-05, 2.2721999999999326e-05, 2.255500000000049e-05]</msg>
<status status="PASS" starttime="20201029 12:46:51.287" endtime="20201029 12:46:51.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.282" endtime="20201029 12:46:51.290"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:51.294" endtime="20201029 12:46:51.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.292" endtime="20201029 12:46:51.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.291" endtime="20201029 12:46:51.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.935" endtime="20201029 12:46:51.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.934" endtime="20201029 12:46:51.314"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.323" endtime="20201029 12:46:51.339"></status>
</kw>
<msg timestamp="20201029 12:46:51.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:51.321" endtime="20201029 12:46:51.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:51.341" endtime="20201029 12:46:51.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.343" endtime="20201029 12:46:51.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.319" endtime="20201029 12:46:51.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.317" endtime="20201029 12:46:51.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.352" endtime="20201029 12:46:51.636"></status>
</kw>
<msg timestamp="20201029 12:46:51.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021872889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021895597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:51.350" endtime="20201029 12:46:51.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021872889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021895597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:51.641" endtime="20201029 12:46:51.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.649" endtime="20201029 12:46:51.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.348" endtime="20201029 12:46:51.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.346" endtime="20201029 12:46:51.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:51.655" level="INFO">${RESULT} = [{'diff': 2.2707999999999756e-05}, {'diff': 2.236100000000199e-05}, {'diff': 2.1819999999998785e-05}, {'diff': 2.265300000000095e-05}, {'diff': 2.2707999999999756e-05}, {'diff': 2.2486000000002115e-05...</msg>
<status status="PASS" starttime="20201029 12:46:51.652" endtime="20201029 12:46:51.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:51.662" level="INFO">${ACCURACY} = {'diff': [2.2707999999999756e-05, 2.236100000000199e-05, 2.1819999999998785e-05, 2.265300000000095e-05, 2.2707999999999756e-05, 2.2486000000002115e-05, 2.19030000000002e-05, 2.241700000000027e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 12:46:51.656" endtime="20201029 12:46:51.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.667" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 12:46:51.666" endtime="20201029 12:46:51.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.669" level="INFO">VALUE: [2.2707999999999756e-05, 2.236100000000199e-05, 2.1819999999998785e-05, 2.265300000000095e-05, 2.2707999999999756e-05, 2.2486000000002115e-05, 2.19030000000002e-05, 2.241700000000027e-05, 2.2457999999999506e-05, 2.238900000000113e-05, 2.195900000000195e-05, 2.2278000000000575e-05, 2.2084000000002074e-05, 2.269499999999966e-05, 2.2485999999998646e-05, 2.2221999999998826e-05, 2.236099999999852e-05, 2.2264000000001005e-05, 2.2151999999997507e-05, 2.254100000000092e-05, 2.1971999999998576e-05, 2.181899999999931e-05, 2.1957999999999006e-05, 2.181899999999931e-05, 2.2429999999996897e-05, 2.2250000000001435e-05, 2.258299999999963e-05, 2.24030000000007e-05, 2.180499999999974e-05, 2.2292000000000145e-05, 2.2749999999998466e-05, 2.2721999999999326e-05, 2.193099999999934e-05, 2.2527999999997356e-05, 2.2278000000000575e-05, 2.2097999999998175e-05, 2.2416000000000796e-05, 2.209700000000217e-05, 2.234699999999895e-05, 2.2569999999999535e-05, 2.213900000000088e-05, 2.2264000000001005e-05, 2.211099999999827e-05, 2.2304999999996772e-05, 2.20830000000026e-05, 2.231900000000328e-05, 2.208299999999913e-05, 2.2443999999999936e-05, 2.1929999999999866e-05, 2.2250000000001435e-05]</msg>
<status status="PASS" starttime="20201029 12:46:51.668" endtime="20201029 12:46:51.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.663" endtime="20201029 12:46:51.671"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:51.674" endtime="20201029 12:46:51.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.673" endtime="20201029 12:46:51.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.672" endtime="20201029 12:46:51.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.315" endtime="20201029 12:46:51.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.315" endtime="20201029 12:46:51.695"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.703" endtime="20201029 12:46:51.720"></status>
</kw>
<msg timestamp="20201029 12:46:51.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:51.702" endtime="20201029 12:46:51.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:51.721" endtime="20201029 12:46:51.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.724" endtime="20201029 12:46:51.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.699" endtime="20201029 12:46:51.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.697" endtime="20201029 12:46:51.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.733" endtime="20201029 12:46:52.019"></status>
</kw>
<msg timestamp="20201029 12:46:52.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022094833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022117181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:51.731" endtime="20201029 12:46:52.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022094833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022117181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:52.023" endtime="20201029 12:46:52.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.031" endtime="20201029 12:46:52.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.728" endtime="20201029 12:46:52.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.727" endtime="20201029 12:46:52.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:52.038" level="INFO">${RESULT} = [{'diff': 2.2347999999998425e-05}, {'diff': 2.188900000000063e-05}, {'diff': 2.208299999999913e-05}, {'diff': 2.2736000000002365e-05}, {'diff': 2.2680000000000616e-05}, {'diff': 2.2236000000001865e-05...</msg>
<status status="PASS" starttime="20201029 12:46:52.035" endtime="20201029 12:46:52.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:52.042" level="INFO">${ACCURACY} = {'diff': [2.2347999999998425e-05, 2.188900000000063e-05, 2.208299999999913e-05, 2.2736000000002365e-05, 2.2680000000000616e-05, 2.2236000000001865e-05, 2.204100000000042e-05, 2.2207999999999256e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:46:52.039" endtime="20201029 12:46:52.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.047" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 12:46:52.046" endtime="20201029 12:46:52.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.049" level="INFO">VALUE: [2.2347999999998425e-05, 2.188900000000063e-05, 2.208299999999913e-05, 2.2736000000002365e-05, 2.2680000000000616e-05, 2.2236000000001865e-05, 2.204100000000042e-05, 2.2207999999999256e-05, 2.19030000000002e-05, 2.256900000000006e-05, 2.180499999999974e-05, 2.2221999999998826e-05, 2.241700000000027e-05, 2.212500000000131e-05, 2.183299999999888e-05, 2.231899999999981e-05, 2.2263999999997536e-05, 2.1957999999999006e-05, 2.211100000000174e-05, 2.211100000000174e-05, 2.2471999999999076e-05, 2.2055999999999465e-05, 2.269499999999966e-05, 2.262500000000181e-05, 2.186099999999802e-05, 2.2070000000002504e-05, 2.187499999999759e-05, 2.1916000000000296e-05, 2.2402000000001226e-05, 2.1764000000000505e-05, 2.204100000000042e-05, 2.2542000000000395e-05, 2.2416000000000796e-05, 2.2250000000001435e-05, 2.1943999999999436e-05, 2.204100000000042e-05, 2.229100000000067e-05, 2.2736000000002365e-05, 2.2249999999997966e-05, 2.211100000000174e-05, 2.265299999999748e-05, 2.238900000000113e-05, 2.2292000000000145e-05, 2.240299999999723e-05, 2.216700000000002e-05, 2.2250000000001435e-05, 2.244499999999941e-05, 2.2707999999999756e-05, 2.22770000000011e-05, 2.238900000000113e-05]</msg>
<status status="PASS" starttime="20201029 12:46:52.048" endtime="20201029 12:46:52.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.043" endtime="20201029 12:46:52.050"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:52.054" endtime="20201029 12:46:52.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.052" endtime="20201029 12:46:52.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.051" endtime="20201029 12:46:52.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.696" endtime="20201029 12:46:52.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.695" endtime="20201029 12:46:52.074"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.083" endtime="20201029 12:46:52.100"></status>
</kw>
<msg timestamp="20201029 12:46:52.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:52.081" endtime="20201029 12:46:52.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:52.102" endtime="20201029 12:46:52.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.104" endtime="20201029 12:46:52.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.079" endtime="20201029 12:46:52.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.077" endtime="20201029 12:46:52.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.113" endtime="20201029 12:46:52.399"></status>
</kw>
<msg timestamp="20201029 12:46:52.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022977375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023000194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:52.112" endtime="20201029 12:46:52.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022977375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023000194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:52.403" endtime="20201029 12:46:52.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.411" endtime="20201029 12:46:52.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.109" endtime="20201029 12:46:52.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.108" endtime="20201029 12:46:52.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:52.418" level="INFO">${RESULT} = [{'diff': 2.281900000000031e-05}, {'diff': 2.330500000000124e-05}, {'diff': 2.2792000000000645e-05}, {'diff': 2.3415999999998327e-05}, {'diff': 2.365300000000195e-05}, {'diff': 2.3540999999998452e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:52.415" endtime="20201029 12:46:52.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:52.422" level="INFO">${ACCURACY} = {'diff': [2.281900000000031e-05, 2.330500000000124e-05, 2.2792000000000645e-05, 2.3415999999998327e-05, 2.365300000000195e-05, 2.3540999999998452e-05, 2.2806000000000215e-05, 2.308300000000013e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:46:52.419" endtime="20201029 12:46:52.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.426" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 12:46:52.425" endtime="20201029 12:46:52.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.429" level="INFO">VALUE: [2.281900000000031e-05, 2.330500000000124e-05, 2.2792000000000645e-05, 2.3415999999998327e-05, 2.365300000000195e-05, 2.3540999999998452e-05, 2.2806000000000215e-05, 2.308300000000013e-05, 2.2971999999999576e-05, 2.2958000000000006e-05, 2.2971999999999576e-05, 2.341700000000127e-05, 2.2721999999999326e-05, 2.3097999999999175e-05, 2.2819999999999785e-05, 2.3070000000000035e-05, 2.3250000000002435e-05, 2.3542000000001395e-05, 2.283299999999988e-05, 2.2792000000000645e-05, 2.3401999999998757e-05, 2.3070000000000035e-05, 2.3444000000000936e-05, 2.3012999999998812e-05, 2.294499999999991e-05, 2.3401999999998757e-05, 2.312500000000231e-05, 2.3152000000001977e-05, 2.29030000000012e-05, 2.3208000000000256e-05, 2.3526999999998882e-05, 2.3290999999998202e-05, 2.3013999999998286e-05, 2.3235999999999396e-05, 2.3056000000000465e-05, 2.340299999999823e-05, 2.3306000000000715e-05, 2.3056000000000465e-05, 2.3056000000000465e-05, 2.3070000000000035e-05, 2.338900000000213e-05, 2.3584000000000105e-05, 2.27090000000027e-05, 2.2944000000000436e-05, 2.373699999999937e-05, 2.3306000000000715e-05, 2.338899999999866e-05, 2.3638000000002907e-05, 2.3542000000001395e-05, 2.3458000000000506e-05]</msg>
<status status="PASS" starttime="20201029 12:46:52.427" endtime="20201029 12:46:52.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.423" endtime="20201029 12:46:52.431"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:52.435" endtime="20201029 12:46:52.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.433" endtime="20201029 12:46:52.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.432" endtime="20201029 12:46:52.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.075" endtime="20201029 12:46:52.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.075" endtime="20201029 12:46:52.455"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.464" endtime="20201029 12:46:52.479"></status>
</kw>
<msg timestamp="20201029 12:46:52.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:52.462" endtime="20201029 12:46:52.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:52.481" endtime="20201029 12:46:52.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.483" endtime="20201029 12:46:52.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.460" endtime="20201029 12:46:52.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.458" endtime="20201029 12:46:52.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.492" endtime="20201029 12:46:52.779"></status>
</kw>
<msg timestamp="20201029 12:46:52.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021802028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021825875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:52.491" endtime="20201029 12:46:52.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021802028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021825875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:52.783" endtime="20201029 12:46:52.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.791" endtime="20201029 12:46:52.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.488" endtime="20201029 12:46:52.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.486" endtime="20201029 12:46:52.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:52.798" level="INFO">${RESULT} = [{'diff': 2.384700000000045e-05}, {'diff': 2.4277999999999106e-05}, {'diff': 2.411100000000027e-05}, {'diff': 2.4485999999997177e-05}, {'diff': 2.388899999999916e-05}, {'diff': 2.4236000000000396e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:52.795" endtime="20201029 12:46:52.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:52.804" level="INFO">${ACCURACY} = {'diff': [2.384700000000045e-05, 2.4277999999999106e-05, 2.411100000000027e-05, 2.4485999999997177e-05, 2.388899999999916e-05, 2.4236000000000396e-05, 2.387499999999959e-05, 2.44030000000027e-05, 2.42...</msg>
<status status="PASS" starttime="20201029 12:46:52.799" endtime="20201029 12:46:52.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.808" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 12:46:52.807" endtime="20201029 12:46:52.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.811" level="INFO">VALUE: [2.384700000000045e-05, 2.4277999999999106e-05, 2.411100000000027e-05, 2.4485999999997177e-05, 2.388899999999916e-05, 2.4236000000000396e-05, 2.387499999999959e-05, 2.44030000000027e-05, 2.4277999999999106e-05, 2.4291999999998676e-05, 2.415299999999898e-05, 2.4486000000000646e-05, 2.4555999999998496e-05, 2.415299999999898e-05, 2.440299999999923e-05, 2.37229999999998e-05, 2.4194000000001686e-05, 2.469500000000166e-05, 2.4291999999998676e-05, 2.4165999999999077e-05, 2.412499999999984e-05, 2.4499999999996747e-05, 2.3735999999999896e-05, 2.455500000000249e-05, 2.413900000000288e-05, 2.4443999999998467e-05, 2.4249999999999966e-05, 2.4570000000001535e-05, 2.3986000000000146e-05, 2.4569999999998066e-05, 2.4277999999999106e-05, 2.4333999999997385e-05, 2.4458000000001506e-05, 2.4083999999997135e-05, 2.44030000000027e-05, 2.4055999999997996e-05, 2.42230000000003e-05, 2.469500000000166e-05, 2.461100000000077e-05, 2.3944000000001436e-05, 2.4415999999999327e-05, 2.4277999999999106e-05, 2.412499999999984e-05, 2.445900000000098e-05, 2.40970000000007e-05, 2.4306000000001715e-05, 2.390299999999873e-05, 2.4236000000000396e-05, 2.4222000000000826e-05, 2.388899999999916e-05]</msg>
<status status="PASS" starttime="20201029 12:46:52.809" endtime="20201029 12:46:52.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.805" endtime="20201029 12:46:52.812"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:52.816" endtime="20201029 12:46:52.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.814" endtime="20201029 12:46:52.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.813" endtime="20201029 12:46:52.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.456" endtime="20201029 12:46:52.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.456" endtime="20201029 12:46:52.836"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.845" endtime="20201029 12:46:52.862"></status>
</kw>
<msg timestamp="20201029 12:46:52.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:52.843" endtime="20201029 12:46:52.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:52.863" endtime="20201029 12:46:52.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.866" endtime="20201029 12:46:52.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.841" endtime="20201029 12:46:52.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.839" endtime="20201029 12:46:52.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.875" endtime="20201029 12:46:53.159"></status>
</kw>
<msg timestamp="20201029 12:46:53.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0217915, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021817222, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:52.873" endtime="20201029 12:46:53.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0217915, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021817222, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:53.163" endtime="20201029 12:46:53.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.171" endtime="20201029 12:46:53.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.870" endtime="20201029 12:46:53.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.869" endtime="20201029 12:46:53.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:53.178" level="INFO">${RESULT} = [{'diff': 2.5722000000002326e-05}, {'diff': 2.52230000000013e-05}, {'diff': 2.488900000000016e-05}, {'diff': 2.487500000000059e-05}, {'diff': 2.488900000000016e-05}, {'diff': 2.558300000000263e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:53.175" endtime="20201029 12:46:53.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:53.182" level="INFO">${ACCURACY} = {'diff': [2.5722000000002326e-05, 2.52230000000013e-05, 2.488900000000016e-05, 2.487500000000059e-05, 2.488900000000016e-05, 2.558300000000263e-05, 2.561100000000177e-05, 2.5318999999999342e-05, 2.488...</msg>
<status status="PASS" starttime="20201029 12:46:53.179" endtime="20201029 12:46:53.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.186" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 12:46:53.185" endtime="20201029 12:46:53.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.189" level="INFO">VALUE: [2.5722000000002326e-05, 2.52230000000013e-05, 2.488900000000016e-05, 2.487500000000059e-05, 2.488900000000016e-05, 2.558300000000263e-05, 2.561100000000177e-05, 2.5318999999999342e-05, 2.488900000000016e-05, 2.5208000000002256e-05, 2.54169999999998e-05, 2.5054999999999522e-05, 2.4806000000002215e-05, 2.5318999999999342e-05, 2.5304999999999772e-05, 2.5318999999999342e-05, 2.5318999999999342e-05, 2.565300000000048e-05, 2.5041999999999426e-05, 2.5069999999998566e-05, 2.540300000000023e-05, 2.5277000000000632e-05, 2.490299999999973e-05, 2.5429999999999897e-05, 2.5555000000000022e-05, 2.5055999999998996e-05, 2.5416000000000327e-05, 2.5708000000002756e-05, 2.5444000000002936e-05, 2.5638000000001437e-05, 2.561100000000177e-05, 2.55970000000022e-05, 2.5638000000001437e-05, 2.4722000000001326e-05, 2.5472000000002076e-05, 2.5054999999999522e-05, 2.5582999999999162e-05, 2.4791999999999176e-05, 2.558300000000263e-05, 2.543099999999937e-05, 2.565300000000048e-05, 2.5596999999998732e-05, 2.4764000000000036e-05, 2.490299999999973e-05, 2.5069999999998566e-05, 2.52230000000013e-05, 2.5041999999999426e-05, 2.488900000000016e-05, 2.488900000000016e-05, 2.537500000000109e-05]</msg>
<status status="PASS" starttime="20201029 12:46:53.187" endtime="20201029 12:46:53.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.183" endtime="20201029 12:46:53.190"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:53.194" endtime="20201029 12:46:53.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.192" endtime="20201029 12:46:53.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.191" endtime="20201029 12:46:53.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.837" endtime="20201029 12:46:53.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.837" endtime="20201029 12:46:53.214"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.223" endtime="20201029 12:46:53.240"></status>
</kw>
<msg timestamp="20201029 12:46:53.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.221" endtime="20201029 12:46:53.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.241" endtime="20201029 12:46:53.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.244" endtime="20201029 12:46:53.245"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.219" endtime="20201029 12:46:53.246"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.217" endtime="20201029 12:46:53.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.253" endtime="20201029 12:46:53.537"></status>
</kw>
<msg timestamp="20201029 12:46:53.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022677847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022704514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:53.251" endtime="20201029 12:46:53.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022677847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022704514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:53.541" endtime="20201029 12:46:53.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.549" endtime="20201029 12:46:53.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.249" endtime="20201029 12:46:53.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.247" endtime="20201029 12:46:53.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:53.556" level="INFO">${RESULT} = [{'diff': 2.666699999999758e-05}, {'diff': 2.64170000000008e-05}, {'diff': 2.62230000000023e-05}, {'diff': 2.6249999999998497e-05}, {'diff': 2.5750000000001466e-05}, {'diff': 2.6152000000001507e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:53.553" endtime="20201029 12:46:53.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:53.560" level="INFO">${ACCURACY} = {'diff': [2.666699999999758e-05, 2.64170000000008e-05, 2.62230000000023e-05, 2.6249999999998497e-05, 2.5750000000001466e-05, 2.6152000000001507e-05, 2.6361999999998526e-05, 2.5778000000000606e-05, 2.6...</msg>
<status status="PASS" starttime="20201029 12:46:53.557" endtime="20201029 12:46:53.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.565" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 12:46:53.564" endtime="20201029 12:46:53.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.567" level="INFO">VALUE: [2.666699999999758e-05, 2.64170000000008e-05, 2.62230000000023e-05, 2.6249999999998497e-05, 2.5750000000001466e-05, 2.6152000000001507e-05, 2.6361999999998526e-05, 2.5778000000000606e-05, 2.6637999999998968e-05, 2.6514000000001786e-05, 2.6180000000000647e-05, 2.637500000000209e-05, 2.5943999999999967e-05, 2.6569000000000592e-05, 2.6041000000000952e-05, 2.5846999999998982e-05, 2.59170000000003e-05, 2.6040999999997483e-05, 2.6721999999999857e-05, 2.6069999999999566e-05, 2.615300000000098e-05, 2.645899999999951e-05, 2.6624999999998872e-05, 2.6458000000000037e-05, 2.6360999999999052e-05, 2.6263999999998067e-05, 2.6124999999998372e-05, 2.672299999999933e-05, 2.620899999999926e-05, 2.6430000000000897e-05, 2.5888000000001687e-05, 2.6000000000001716e-05, 2.6207999999999787e-05, 2.6069000000000092e-05, 2.6027000000001382e-05, 2.5735999999998427e-05, 2.6624999999998872e-05, 2.6000000000001716e-05, 2.6082999999999662e-05, 2.5986000000002146e-05, 2.6763999999998567e-05, 2.6736000000002896e-05, 2.6028000000000856e-05, 2.616700000000055e-05, 2.6292000000000676e-05, 2.6055999999999996e-05, 2.5847999999998456e-05, 2.6749999999998997e-05, 2.6570000000000066e-05, 2.622299999999883e-05]</msg>
<status status="PASS" starttime="20201029 12:46:53.566" endtime="20201029 12:46:53.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.561" endtime="20201029 12:46:53.569"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:53.573" endtime="20201029 12:46:53.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.571" endtime="20201029 12:46:53.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.570" endtime="20201029 12:46:53.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.215" endtime="20201029 12:46:53.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.215" endtime="20201029 12:46:53.594"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.602" endtime="20201029 12:46:53.619"></status>
</kw>
<msg timestamp="20201029 12:46:53.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.600" endtime="20201029 12:46:53.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.620" endtime="20201029 12:46:53.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.622" endtime="20201029 12:46:53.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.598" endtime="20201029 12:46:53.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.596" endtime="20201029 12:46:53.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.631" endtime="20201029 12:46:53.918"></status>
</kw>
<msg timestamp="20201029 12:46:53.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021587597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021615111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:53.630" endtime="20201029 12:46:53.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021587597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021615111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:53.922" endtime="20201029 12:46:53.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.930" endtime="20201029 12:46:53.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.627" endtime="20201029 12:46:53.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.626" endtime="20201029 12:46:53.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:53.937" level="INFO">${RESULT} = [{'diff': 2.7513999999999317e-05}, {'diff': 2.7542000000001926e-05}, {'diff': 2.6791999999997707e-05}, {'diff': 2.7263999999999067e-05}, {'diff': 2.7208000000000787e-05}, {'diff': 2.670899999999976e-0...</msg>
<status status="PASS" starttime="20201029 12:46:53.934" endtime="20201029 12:46:53.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:53.942" level="INFO">${ACCURACY} = {'diff': [2.7513999999999317e-05, 2.7542000000001926e-05, 2.6791999999997707e-05, 2.7263999999999067e-05, 2.7208000000000787e-05, 2.670899999999976e-05, 2.7569999999997596e-05, 2.6778000000001606e-05,...</msg>
<status status="PASS" starttime="20201029 12:46:53.938" endtime="20201029 12:46:53.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.946" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 12:46:53.945" endtime="20201029 12:46:53.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.949" level="INFO">VALUE: [2.7513999999999317e-05, 2.7542000000001926e-05, 2.6791999999997707e-05, 2.7263999999999067e-05, 2.7208000000000787e-05, 2.670899999999976e-05, 2.7569999999997596e-05, 2.6778000000001606e-05, 2.7013999999998817e-05, 2.7374999999999622e-05, 2.7222000000000357e-05, 2.7070000000000566e-05, 2.7180000000001647e-05, 2.7749999999999997e-05, 2.7027999999998387e-05, 2.6846999999999982e-05, 2.6944000000000967e-05, 2.7152000000002507e-05, 2.690300000000173e-05, 2.6944000000000967e-05, 2.6763999999998567e-05, 2.6930000000001397e-05, 2.740300000000223e-05, 2.695900000000001e-05, 2.7318999999997873e-05, 2.7194000000001217e-05, 2.7263999999999067e-05, 2.7388999999999192e-05, 2.7235999999999927e-05, 2.6749999999998997e-05, 2.6777999999998137e-05, 2.719499999999722e-05, 2.7070000000000566e-05, 2.7292000000001676e-05, 2.7042000000001426e-05, 2.715300000000198e-05, 2.6874999999999122e-05, 2.6764000000002036e-05, 2.748699999999965e-05, 2.7304999999998303e-05, 2.6902000000002257e-05, 2.6818999999997373e-05, 2.7347000000000482e-05, 2.6791999999997707e-05, 2.7041999999997957e-05, 2.7055000000001522e-05, 2.7624999999999872e-05, 2.690300000000173e-05, 2.7082999999997193e-05, 2.7347000000000482e-05]</msg>
<status status="PASS" starttime="20201029 12:46:53.948" endtime="20201029 12:46:53.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.943" endtime="20201029 12:46:53.950"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:53.954" endtime="20201029 12:46:53.973"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.952" endtime="20201029 12:46:53.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.951" endtime="20201029 12:46:53.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.595" endtime="20201029 12:46:53.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.594" endtime="20201029 12:46:53.975"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.983" endtime="20201029 12:46:54.000"></status>
</kw>
<msg timestamp="20201029 12:46:54.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.981" endtime="20201029 12:46:54.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:54.002" endtime="20201029 12:46:54.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.004" endtime="20201029 12:46:54.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.979" endtime="20201029 12:46:54.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.977" endtime="20201029 12:46:54.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.013" endtime="20201029 12:46:54.300"></status>
</kw>
<msg timestamp="20201029 12:46:54.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021888694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021917361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:54.011" endtime="20201029 12:46:54.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021888694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021917361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:54.304" endtime="20201029 12:46:54.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.312" endtime="20201029 12:46:54.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.009" endtime="20201029 12:46:54.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.007" endtime="20201029 12:46:54.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:54.319" level="INFO">${RESULT} = [{'diff': 2.8666999999999582e-05}, {'diff': 2.8653000000000012e-05}, {'diff': 2.7806000000001746e-05}, {'diff': 2.8639000000000442e-05}, {'diff': 2.8125000000000372e-05}, {'diff': 2.79170000000023e-05...</msg>
<status status="PASS" starttime="20201029 12:46:54.316" endtime="20201029 12:46:54.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:54.323" level="INFO">${ACCURACY} = {'diff': [2.8666999999999582e-05, 2.8653000000000012e-05, 2.7806000000001746e-05, 2.8639000000000442e-05, 2.8125000000000372e-05, 2.79170000000023e-05, 2.8277999999999637e-05, 2.7944000000001967e-05, ...</msg>
<status status="PASS" starttime="20201029 12:46:54.320" endtime="20201029 12:46:54.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.327" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 12:46:54.326" endtime="20201029 12:46:54.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.330" level="INFO">VALUE: [2.8666999999999582e-05, 2.8653000000000012e-05, 2.7806000000001746e-05, 2.8639000000000442e-05, 2.8125000000000372e-05, 2.79170000000023e-05, 2.8277999999999637e-05, 2.7944000000001967e-05, 2.86379999999975e-05, 2.8375000000000622e-05, 2.8679999999999678e-05, 2.8625000000000872e-05, 2.794500000000144e-05, 2.8707999999998818e-05, 2.8318999999998873e-05, 2.791699999999883e-05, 2.8193999999998748e-05, 2.8639000000000442e-05, 2.7929999999998928e-05, 2.8666999999999582e-05, 2.8319000000002342e-05, 2.872299999999786e-05, 2.8499999999997278e-05, 2.8083999999997666e-05, 2.8346999999998013e-05, 2.8541999999999457e-05, 2.7804999999998803e-05, 2.8722000000001857e-05, 2.8236000000000927e-05, 2.7805999999998277e-05, 2.8236000000000927e-05, 2.8333000000001912e-05, 2.872299999999786e-05, 2.8389000000000192e-05, 2.7749999999999997e-05, 2.848700000000065e-05, 2.8222000000001357e-05, 2.8013999999999817e-05, 2.7902999999999262e-05, 2.8125000000000372e-05, 2.8582999999998693e-05, 2.7736000000000427e-05, 2.7875000000000122e-05, 2.8304999999999303e-05, 2.8471999999998138e-05, 2.8305999999998777e-05, 2.8222000000001357e-05, 2.7958000000001537e-05, 2.79170000000023e-05, 2.795900000000101e-05]</msg>
<status status="PASS" starttime="20201029 12:46:54.328" endtime="20201029 12:46:54.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.324" endtime="20201029 12:46:54.331"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:54.335" endtime="20201029 12:46:54.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.333" endtime="20201029 12:46:54.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.332" endtime="20201029 12:46:54.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.975" endtime="20201029 12:46:54.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.975" endtime="20201029 12:46:54.355"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.364" endtime="20201029 12:46:54.381"></status>
</kw>
<msg timestamp="20201029 12:46:54.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:54.362" endtime="20201029 12:46:54.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:54.383" endtime="20201029 12:46:54.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.385" endtime="20201029 12:46:54.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.360" endtime="20201029 12:46:54.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.358" endtime="20201029 12:46:54.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.394" endtime="20201029 12:46:54.679"></status>
</kw>
<msg timestamp="20201029 12:46:54.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022521292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022550125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:54.392" endtime="20201029 12:46:54.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022521292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022550125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:54.683" endtime="20201029 12:46:54.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.691" endtime="20201029 12:46:54.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.390" endtime="20201029 12:46:54.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.388" endtime="20201029 12:46:54.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:54.698" level="INFO">${RESULT} = [{'diff': 2.8833000000002412e-05}, {'diff': 2.8750000000000997e-05}, {'diff': 2.92370000000014e-05}, {'diff': 2.9070000000002566e-05}, {'diff': 2.9514000000001317e-05}, {'diff': 2.9374999999998153e-05...</msg>
<status status="PASS" starttime="20201029 12:46:54.694" endtime="20201029 12:46:54.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:54.702" level="INFO">${ACCURACY} = {'diff': [2.8833000000002412e-05, 2.8750000000000997e-05, 2.92370000000014e-05, 2.9070000000002566e-05, 2.9514000000001317e-05, 2.9374999999998153e-05, 2.9457999999999568e-05, 2.9250000000001497e-05, ...</msg>
<status status="PASS" starttime="20201029 12:46:54.699" endtime="20201029 12:46:54.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.706" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 12:46:54.705" endtime="20201029 12:46:54.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.708" level="INFO">VALUE: [2.8833000000002412e-05, 2.8750000000000997e-05, 2.92370000000014e-05, 2.9070000000002566e-05, 2.9514000000001317e-05, 2.9374999999998153e-05, 2.9457999999999568e-05, 2.9250000000001497e-05, 2.9639000000001442e-05, 2.9375000000001622e-05, 2.89309999999994e-05, 2.9486000000002177e-05, 2.9707999999999818e-05, 2.9083000000002662e-05, 2.9263999999997597e-05, 2.9222000000002357e-05, 2.9638999999997973e-05, 2.9707999999999818e-05, 2.9292000000000207e-05, 2.9500000000001747e-05, 2.9347000000002482e-05, 2.9096999999998763e-05, 2.8875000000001122e-05, 2.8889000000000692e-05, 2.8889000000000692e-05, 2.9528000000000887e-05, 2.8986000000001677e-05, 2.9556000000000027e-05, 2.9625000000001872e-05, 2.9235999999998458e-05, 2.8986000000001677e-05, 2.897299999999811e-05, 2.8750000000000997e-05, 2.9250000000001497e-05, 2.8778000000000137e-05, 2.9250000000001497e-05, 2.8749999999997528e-05, 2.9333000000002912e-05, 2.9278000000000637e-05, 2.9221999999998888e-05, 2.9485999999998708e-05, 2.8903000000000262e-05, 2.9250000000001497e-05, 2.9096999999998763e-05, 2.9681000000000152e-05, 2.8888999999997222e-05, 2.8791999999999707e-05, 2.9278000000000637e-05, 2.89309999999994e-05, 2.9667000000000582e-05]</msg>
<status status="PASS" starttime="20201029 12:46:54.707" endtime="20201029 12:46:54.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.703" endtime="20201029 12:46:54.711"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:54.714" endtime="20201029 12:46:54.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.713" endtime="20201029 12:46:54.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.712" endtime="20201029 12:46:54.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.356" endtime="20201029 12:46:54.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.356" endtime="20201029 12:46:54.735"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.743" endtime="20201029 12:46:54.762"></status>
</kw>
<msg timestamp="20201029 12:46:54.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:54.742" endtime="20201029 12:46:54.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:54.765" endtime="20201029 12:46:54.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.770" endtime="20201029 12:46:54.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.739" endtime="20201029 12:46:54.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.737" endtime="20201029 12:46:54.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.788" endtime="20201029 12:46:55.083"></status>
</kw>
<msg timestamp="20201029 12:46:55.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022099417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02212925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:54.785" endtime="20201029 12:46:55.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022099417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02212925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:55.087" endtime="20201029 12:46:55.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.095" endtime="20201029 12:46:55.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.780" endtime="20201029 12:46:55.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.776" endtime="20201029 12:46:55.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:55.101" level="INFO">${RESULT} = [{'diff': 2.9832999999999943e-05}, {'diff': 3.0513999999998848e-05}, {'diff': 3.072199999999692e-05}, {'diff': 3.0499999999999278e-05}, {'diff': 3.072200000000039e-05}, {'diff': 3.066700000000158e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:55.098" endtime="20201029 12:46:55.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:55.109" level="INFO">${ACCURACY} = {'diff': [2.9832999999999943e-05, 3.0513999999998848e-05, 3.072199999999692e-05, 3.0499999999999278e-05, 3.072200000000039e-05, 3.066700000000158e-05, 3.0208000000000318e-05, 3.0042000000000957e-05, 3...</msg>
<status status="PASS" starttime="20201029 12:46:55.102" endtime="20201029 12:46:55.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.113" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 12:46:55.112" endtime="20201029 12:46:55.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.116" level="INFO">VALUE: [2.9832999999999943e-05, 3.0513999999998848e-05, 3.072199999999692e-05, 3.0499999999999278e-05, 3.072200000000039e-05, 3.066700000000158e-05, 3.0208000000000318e-05, 3.0042000000000957e-05, 3.054199999999799e-05, 3.06379999999995e-05, 3.069500000000072e-05, 2.997300000000258e-05, 3.015199999999857e-05, 2.9916000000001358e-05, 2.9874999999998653e-05, 3.0138999999998473e-05, 3.070799999999735e-05, 3.0249999999999028e-05, 2.9749999999998528e-05, 3.0235999999999458e-05, 2.9958000000000068e-05, 3.0110999999999333e-05, 3.0306000000000777e-05, 3.0347000000000013e-05, 3.063899999999897e-05, 3.068100000000115e-05, 2.9999999999998778e-05, 2.9819999999999847e-05, 3.0277999999998167e-05, 3.055600000000103e-05, 3.0083999999999667e-05, 2.972300000000233e-05, 3.0082999999996723e-05, 3.070800000000082e-05, 3.068000000000168e-05, 3.0235999999999458e-05, 2.9874999999998653e-05, 3.0083000000000193e-05, 2.9874999999998653e-05, 2.9749999999998528e-05, 2.9903000000001262e-05, 3.0402999999998293e-05, 2.9958000000000068e-05, 2.9763999999998098e-05, 3.0430999999997432e-05, 3.0264000000002067e-05, 2.9792000000000707e-05, 3.069500000000072e-05, 2.9888999999998223e-05, 3.0097000000003232e-05]</msg>
<status status="PASS" starttime="20201029 12:46:55.114" endtime="20201029 12:46:55.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.110" endtime="20201029 12:46:55.117"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:55.120" endtime="20201029 12:46:55.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.119" endtime="20201029 12:46:55.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.118" endtime="20201029 12:46:55.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.736" endtime="20201029 12:46:55.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.735" endtime="20201029 12:46:55.141"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.150" endtime="20201029 12:46:55.168"></status>
</kw>
<msg timestamp="20201029 12:46:55.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.148" endtime="20201029 12:46:55.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.171" endtime="20201029 12:46:55.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.176" endtime="20201029 12:46:55.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.146" endtime="20201029 12:46:55.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.144" endtime="20201029 12:46:55.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.189" endtime="20201029 12:46:55.475"></status>
</kw>
<msg timestamp="20201029 12:46:55.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021598319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021629847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:55.187" endtime="20201029 12:46:55.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021598319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021629847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:55.479" endtime="20201029 12:46:55.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.487" endtime="20201029 12:46:55.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.184" endtime="20201029 12:46:55.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.181" endtime="20201029 12:46:55.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:55.493" level="INFO">${RESULT} = [{'diff': 3.152799999999942e-05}, {'diff': 3.122200000000089e-05}, {'diff': 3.1040999999999014e-05}, {'diff': 3.087499999999965e-05}, {'diff': 3.069400000000125e-05}, {'diff': 3.141699999999886e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:55.490" endtime="20201029 12:46:55.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:55.497" level="INFO">${ACCURACY} = {'diff': [3.152799999999942e-05, 3.122200000000089e-05, 3.1040999999999014e-05, 3.087499999999965e-05, 3.069400000000125e-05, 3.141699999999886e-05, 3.09310000000014e-05, 3.15839999999977e-05, 3.07779...</msg>
<status status="PASS" starttime="20201029 12:46:55.494" endtime="20201029 12:46:55.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.502" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 12:46:55.501" endtime="20201029 12:46:55.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.504" level="INFO">VALUE: [3.152799999999942e-05, 3.122200000000089e-05, 3.1040999999999014e-05, 3.087499999999965e-05, 3.069400000000125e-05, 3.141699999999886e-05, 3.09310000000014e-05, 3.15839999999977e-05, 3.077799999999867e-05, 3.097200000000064e-05, 3.141699999999886e-05, 3.095900000000054e-05, 3.155599999999856e-05, 3.145900000000104e-05, 3.16250000000004e-05, 3.134799999999702e-05, 3.1554999999999084e-05, 3.116699999999861e-05, 3.094399999999803e-05, 3.105500000000205e-05, 3.09579999999976e-05, 3.108300000000119e-05, 3.170800000000182e-05, 3.161100000000083e-05, 3.069400000000125e-05, 3.137500000000015e-05, 3.115299999999904e-05, 3.099999999999978e-05, 3.138899999999972e-05, 3.090299999999879e-05, 3.073599999999996e-05, 3.125000000000003e-05, 3.119400000000175e-05, 3.127799999999917e-05, 3.086100000000008e-05, 3.144500000000147e-05, 3.095900000000054e-05, 3.152799999999942e-05, 3.161100000000083e-05, 3.16380000000005e-05, 3.072200000000039e-05, 3.129199999999874e-05, 3.140299999999929e-05, 3.1318999999998404e-05, 3.123600000000046e-05, 3.143099999999843e-05, 3.083399999999695e-05, 3.155599999999856e-05, 3.11249999999999e-05, 3.127799999999917e-05]</msg>
<status status="PASS" starttime="20201029 12:46:55.503" endtime="20201029 12:46:55.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.498" endtime="20201029 12:46:55.506"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:55.509" endtime="20201029 12:46:55.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.508" endtime="20201029 12:46:55.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.507" endtime="20201029 12:46:55.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.142" endtime="20201029 12:46:55.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.141" endtime="20201029 12:46:55.530"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.538" endtime="20201029 12:46:55.556"></status>
</kw>
<msg timestamp="20201029 12:46:55.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.537" endtime="20201029 12:46:55.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.558" endtime="20201029 12:46:55.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.560" endtime="20201029 12:46:55.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.534" endtime="20201029 12:46:55.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.532" endtime="20201029 12:46:55.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.569" endtime="20201029 12:46:55.855"></status>
</kw>
<msg timestamp="20201029 12:46:55.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022829875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022861861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:55.568" endtime="20201029 12:46:55.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022829875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022861861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:55.860" endtime="20201029 12:46:55.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.868" endtime="20201029 12:46:55.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.565" endtime="20201029 12:46:55.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.563" endtime="20201029 12:46:55.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:55.875" level="INFO">${RESULT} = [{'diff': 3.198600000000121e-05}, {'diff': 3.2610999999998364e-05}, {'diff': 3.206999999999863e-05}, {'diff': 3.202799999999992e-05}, {'diff': 3.225000000000103e-05}, {'diff': 3.273600000000196e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:55.872" endtime="20201029 12:46:55.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:55.879" level="INFO">${ACCURACY} = {'diff': [3.198600000000121e-05, 3.2610999999998364e-05, 3.206999999999863e-05, 3.202799999999992e-05, 3.225000000000103e-05, 3.273600000000196e-05, 3.259700000000226e-05, 3.215300000000004e-05, 3.216...</msg>
<status status="PASS" starttime="20201029 12:46:55.876" endtime="20201029 12:46:55.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.883" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 12:46:55.882" endtime="20201029 12:46:55.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.886" level="INFO">VALUE: [3.198600000000121e-05, 3.2610999999998364e-05, 3.206999999999863e-05, 3.202799999999992e-05, 3.225000000000103e-05, 3.273600000000196e-05, 3.259700000000226e-05, 3.215300000000004e-05, 3.216699999999961e-05, 3.195899999999807e-05, 3.256999999999913e-05, 3.273700000000143e-05, 3.2304999999999834e-05, 3.1790999999999764e-05, 3.190299999999979e-05, 3.188800000000075e-05, 3.261100000000183e-05, 3.213900000000047e-05, 3.223599999999799e-05, 3.244399999999953e-05, 3.2054999999999584e-05, 3.202799999999992e-05, 3.244399999999953e-05, 3.259700000000226e-05, 3.216699999999961e-05, 3.199999999999731e-05, 3.25700000000026e-05, 3.275000000000153e-05, 3.191699999999936e-05, 3.186100000000108e-05, 3.26389999999975e-05, 3.259800000000174e-05, 3.2304999999999834e-05, 3.2444999999999e-05, 3.247299999999814e-05, 3.241699999999986e-05, 3.173700000000043e-05, 3.265200000000107e-05, 3.200000000000078e-05, 3.187500000000065e-05, 3.2582999999999224e-05, 3.265299999999707e-05, 3.247199999999867e-05, 3.19449999999985e-05, 3.172199999999792e-05, 3.250000000000128e-05, 3.241699999999986e-05, 3.220799999999885e-05, 3.247200000000214e-05, 3.255599999999956e-05]</msg>
<status status="PASS" starttime="20201029 12:46:55.885" endtime="20201029 12:46:55.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.880" endtime="20201029 12:46:55.892"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:55.895" endtime="20201029 12:46:55.915"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.894" endtime="20201029 12:46:55.915"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.893" endtime="20201029 12:46:55.915"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.531" endtime="20201029 12:46:55.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.530" endtime="20201029 12:46:55.916"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.924" endtime="20201029 12:46:55.941"></status>
</kw>
<msg timestamp="20201029 12:46:55.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.923" endtime="20201029 12:46:55.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.943" endtime="20201029 12:46:55.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.945" endtime="20201029 12:46:55.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.920" endtime="20201029 12:46:55.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.918" endtime="20201029 12:46:55.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.954" endtime="20201029 12:46:56.240"></status>
</kw>
<msg timestamp="20201029 12:46:56.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021651611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021684653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:55.953" endtime="20201029 12:46:56.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021651611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021684653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:56.244" endtime="20201029 12:46:56.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.252" endtime="20201029 12:46:56.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.950" endtime="20201029 12:46:56.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.948" endtime="20201029 12:46:56.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:56.259" level="INFO">${RESULT} = [{'diff': 3.304200000000049e-05}, {'diff': 3.3596999999999794e-05}, {'diff': 3.277800000000067e-05}, {'diff': 3.322199999999942e-05}, {'diff': 3.305600000000006e-05}, {'diff': 3.270799999999935e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:56.255" endtime="20201029 12:46:56.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:56.263" level="INFO">${ACCURACY} = {'diff': [3.304200000000049e-05, 3.3596999999999794e-05, 3.277800000000067e-05, 3.322199999999942e-05, 3.305600000000006e-05, 3.270799999999935e-05, 3.36250000000024e-05, 3.2805000000000334e-05, 3.305...</msg>
<status status="PASS" starttime="20201029 12:46:56.259" endtime="20201029 12:46:56.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.268" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 12:46:56.267" endtime="20201029 12:46:56.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.270" level="INFO">VALUE: [3.304200000000049e-05, 3.3596999999999794e-05, 3.277800000000067e-05, 3.322199999999942e-05, 3.305600000000006e-05, 3.270799999999935e-05, 3.36250000000024e-05, 3.2805000000000334e-05, 3.305600000000006e-05, 3.319400000000028e-05, 3.293099999999993e-05, 3.359700000000326e-05, 3.372199999999992e-05, 3.3388999999998253e-05, 3.34580000000001e-05, 3.322199999999942e-05, 3.324999999999856e-05, 3.3583000000000224e-05, 3.320799999999985e-05, 3.290300000000079e-05, 3.284700000000251e-05, 3.373599999999949e-05, 3.322200000000289e-05, 3.290299999999732e-05, 3.319400000000028e-05, 3.280599999999981e-05, 3.35839999999997e-05, 3.336100000000258e-05, 3.341700000000086e-05, 3.354200000000099e-05, 3.294400000000003e-05, 3.280599999999981e-05, 3.359700000000326e-05, 3.3540999999998045e-05, 3.3027000000001444e-05, 3.315299999999757e-05, 3.3610999999999364e-05, 3.3124999999998433e-05, 3.3388999999998253e-05, 3.273600000000196e-05, 3.2805000000000334e-05, 3.291700000000036e-05, 3.281999999999938e-05, 3.372199999999992e-05, 3.324999999999856e-05, 3.3610999999999364e-05, 3.357000000000013e-05, 3.357000000000013e-05, 3.290200000000132e-05, 3.315300000000104e-05]</msg>
<status status="PASS" starttime="20201029 12:46:56.269" endtime="20201029 12:46:56.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.264" endtime="20201029 12:46:56.272"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:56.275" endtime="20201029 12:46:56.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.274" endtime="20201029 12:46:56.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.273" endtime="20201029 12:46:56.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.917" endtime="20201029 12:46:56.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.916" endtime="20201029 12:46:56.296"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.304" endtime="20201029 12:46:56.321"></status>
</kw>
<msg timestamp="20201029 12:46:56.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:56.303" endtime="20201029 12:46:56.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:56.323" endtime="20201029 12:46:56.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.325" endtime="20201029 12:46:56.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.300" endtime="20201029 12:46:56.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.298" endtime="20201029 12:46:56.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.334" endtime="20201029 12:46:56.620"></status>
</kw>
<msg timestamp="20201029 12:46:56.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021648556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021682736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:56.332" endtime="20201029 12:46:56.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021648556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021682736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:56.624" endtime="20201029 12:46:56.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.632" endtime="20201029 12:46:56.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.330" endtime="20201029 12:46:56.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.328" endtime="20201029 12:46:56.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:56.638" level="INFO">${RESULT} = [{'diff': 3.418000000000171e-05}, {'diff': 3.430600000000131e-05}, {'diff': 3.4374999999999684e-05}, {'diff': 3.420800000000085e-05}, {'diff': 3.45840000000007e-05}, {'diff': 3.426399999999913e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:56.635" endtime="20201029 12:46:56.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:56.643" level="INFO">${ACCURACY} = {'diff': [3.418000000000171e-05, 3.430600000000131e-05, 3.4374999999999684e-05, 3.420800000000085e-05, 3.45840000000007e-05, 3.426399999999913e-05, 3.4361000000000114e-05, 3.4638999999999504e-05, 3.39...</msg>
<status status="PASS" starttime="20201029 12:46:56.639" endtime="20201029 12:46:56.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.647" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 12:46:56.646" endtime="20201029 12:46:56.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.649" level="INFO">VALUE: [3.418000000000171e-05, 3.430600000000131e-05, 3.4374999999999684e-05, 3.420800000000085e-05, 3.45840000000007e-05, 3.426399999999913e-05, 3.4361000000000114e-05, 3.4638999999999504e-05, 3.39450000000005e-05, 3.423599999999999e-05, 3.405599999999759e-05, 3.4652999999999073e-05, 3.382000000000038e-05, 3.3860999999999614e-05, 3.461199999999984e-05, 3.395900000000007e-05, 3.390199999999885e-05, 3.4624999999999934e-05, 3.395799999999713e-05, 3.377800000000167e-05, 3.4610999999996894e-05, 3.4110999999999864e-05, 3.4055000000001584e-05, 3.449999999999981e-05, 3.380600000000081e-05, 3.458399999999723e-05, 3.4388999999999253e-05, 3.424999999999956e-05, 3.441699999999839e-05, 3.475000000000006e-05, 3.470900000000082e-05, 3.405600000000106e-05, 3.468000000000221e-05, 3.4276999999999225e-05, 3.405600000000106e-05, 3.4624999999999934e-05, 3.449999999999981e-05, 3.44580000000011e-05, 3.4040999999998545e-05, 3.4611000000000364e-05, 3.3791000000001764e-05, 3.423599999999999e-05, 3.391700000000136e-05, 3.4638999999999504e-05, 3.4624999999999934e-05, 3.4152999999998573e-05, 3.422200000000042e-05, 3.433400000000045e-05, 3.4347000000000544e-05, 3.454200000000199e-05]</msg>
<status status="PASS" starttime="20201029 12:46:56.648" endtime="20201029 12:46:56.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.644" endtime="20201029 12:46:56.651"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:56.654" endtime="20201029 12:46:56.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.653" endtime="20201029 12:46:56.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.652" endtime="20201029 12:46:56.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.297" endtime="20201029 12:46:56.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.296" endtime="20201029 12:46:56.675"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.684" endtime="20201029 12:46:56.701"></status>
</kw>
<msg timestamp="20201029 12:46:56.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:56.682" endtime="20201029 12:46:56.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:56.703" endtime="20201029 12:46:56.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.705" endtime="20201029 12:46:56.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.679" endtime="20201029 12:46:56.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.677" endtime="20201029 12:46:56.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.714" endtime="20201029 12:46:56.999"></status>
</kw>
<msg timestamp="20201029 12:46:57.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022656514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022692014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:56.713" endtime="20201029 12:46:57.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022656514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022692014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:57.003" endtime="20201029 12:46:57.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.012" endtime="20201029 12:46:57.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.710" endtime="20201029 12:46:57.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.708" endtime="20201029 12:46:57.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:57.018" level="INFO">${RESULT} = [{'diff': 3.550000000000081e-05}, {'diff': 3.5139000000000004e-05}, {'diff': 3.5402999999999823e-05}, {'diff': 3.491699999999889e-05}, {'diff': 3.548600000000124e-05}, {'diff': 3.576400000000063e-05},...</msg>
<status status="PASS" starttime="20201029 12:46:57.015" endtime="20201029 12:46:57.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:57.022" level="INFO">${ACCURACY} = {'diff': [3.550000000000081e-05, 3.5139000000000004e-05, 3.5402999999999823e-05, 3.491699999999889e-05, 3.548600000000124e-05, 3.576400000000063e-05, 3.470800000000135e-05, 3.525000000000056e-05, 3.56...</msg>
<status status="PASS" starttime="20201029 12:46:57.019" endtime="20201029 12:46:57.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.026" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 12:46:57.025" endtime="20201029 12:46:57.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.029" level="INFO">VALUE: [3.550000000000081e-05, 3.5139000000000004e-05, 3.5402999999999823e-05, 3.491699999999889e-05, 3.548600000000124e-05, 3.576400000000063e-05, 3.470800000000135e-05, 3.525000000000056e-05, 3.5638999999997034e-05, 3.4804999999998865e-05, 3.47779999999992e-05, 3.558399999999823e-05, 3.5611000000001364e-05, 3.552799999999995e-05, 3.5389000000000254e-05, 3.491699999999889e-05, 3.475000000000006e-05, 3.49719999999977e-05, 3.5374999999997214e-05, 3.473600000000049e-05, 3.5416999999999393e-05, 3.473600000000049e-05, 3.502799999999945e-05, 3.476399999999963e-05, 3.5125000000000434e-05, 3.5402999999999823e-05, 3.491599999999942e-05, 3.4791000000002764e-05, 3.56520000000006e-05, 3.548599999999777e-05, 3.5375000000000684e-05, 3.5639000000000504e-05, 3.548600000000124e-05, 3.569399999999931e-05, 3.491699999999889e-05, 3.5125000000000434e-05, 3.5054999999999115e-05, 3.5139000000000004e-05, 3.476399999999963e-05, 3.555600000000256e-05, 3.475000000000006e-05, 3.520900000000132e-05, 3.507000000000163e-05, 3.525000000000056e-05, 3.498599999999727e-05, 3.523699999999699e-05, 3.5332999999998504e-05, 3.519399999999881e-05, 3.4790999999999295e-05, 3.5139000000000004e-05]</msg>
<status status="PASS" starttime="20201029 12:46:57.028" endtime="20201029 12:46:57.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.023" endtime="20201029 12:46:57.031"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:57.035" endtime="20201029 12:46:57.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.033" endtime="20201029 12:46:57.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.032" endtime="20201029 12:46:57.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.676" endtime="20201029 12:46:57.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.675" endtime="20201029 12:46:57.055"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.064" endtime="20201029 12:46:57.081"></status>
</kw>
<msg timestamp="20201029 12:46:57.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:57.062" endtime="20201029 12:46:57.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:57.083" endtime="20201029 12:46:57.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.085" endtime="20201029 12:46:57.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.060" endtime="20201029 12:46:57.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.058" endtime="20201029 12:46:57.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.094" endtime="20201029 12:46:57.380"></status>
</kw>
<msg timestamp="20201029 12:46:57.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021723292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02176, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 12:46:57.093" endtime="20201029 12:46:57.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021723292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02176, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 12:46:57.384" endtime="20201029 12:46:57.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.393" endtime="20201029 12:46:57.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.090" endtime="20201029 12:46:57.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.089" endtime="20201029 12:46:57.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:57.399" level="INFO">${RESULT} = [{'diff': 3.670799999999988e-05}, {'diff': 3.6111000000001864e-05}, {'diff': 3.623599999999852e-05}, {'diff': 3.64719999999992e-05}, {'diff': 3.669400000000031e-05}, {'diff': 3.6403000000000824e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:57.396" endtime="20201029 12:46:57.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:57.404" level="INFO">${ACCURACY} = {'diff': [3.670799999999988e-05, 3.6111000000001864e-05, 3.623599999999852e-05, 3.64719999999992e-05, 3.669400000000031e-05, 3.6403000000000824e-05, 3.600000000000131e-05, 3.659800000000227e-05, 3.640...</msg>
<status status="PASS" starttime="20201029 12:46:57.400" endtime="20201029 12:46:57.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.408" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 12:46:57.407" endtime="20201029 12:46:57.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.411" level="INFO">VALUE: [3.670799999999988e-05, 3.6111000000001864e-05, 3.623599999999852e-05, 3.64719999999992e-05, 3.669400000000031e-05, 3.6403000000000824e-05, 3.600000000000131e-05, 3.659800000000227e-05, 3.6402999999997354e-05, 3.6681000000000213e-05, 3.626400000000113e-05, 3.622299999999842e-05, 3.580599999999934e-05, 3.629200000000027e-05, 3.6403000000000824e-05, 3.6332999999999505e-05, 3.6055000000000115e-05, 3.6069000000003154e-05, 3.6360999999998644e-05, 3.5791000000000295e-05, 3.6138999999997534e-05, 3.652800000000095e-05, 3.6403000000000824e-05, 3.651399999999791e-05, 3.623599999999852e-05, 3.6111000000001864e-05, 3.6667000000000644e-05, 3.6111000000001864e-05, 3.598599999999827e-05, 3.5916999999999893e-05, 3.654200000000052e-05, 3.6125000000001434e-05, 3.581999999999891e-05, 3.5889000000000754e-05, 3.6068999999999685e-05, 3.6082999999999255e-05, 3.6068999999999685e-05, 3.623600000000199e-05, 3.644400000000006e-05, 3.6417000000000394e-05, 3.598600000000174e-05, 3.6402999999997354e-05, 3.6318999999999935e-05, 3.5903000000000324e-05, 3.648599999999877e-05, 3.6153000000000574e-05, 3.575000000000106e-05, 3.623700000000146e-05, 3.6110999999998394e-05, 3.6125000000001434e-05]</msg>
<status status="PASS" starttime="20201029 12:46:57.409" endtime="20201029 12:46:57.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.405" endtime="20201029 12:46:57.412"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:57.416" endtime="20201029 12:46:57.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.414" endtime="20201029 12:46:57.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.413" endtime="20201029 12:46:57.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.056" endtime="20201029 12:46:57.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.056" endtime="20201029 12:46:57.436"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.445" endtime="20201029 12:46:57.462"></status>
</kw>
<msg timestamp="20201029 12:46:57.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:57.444" endtime="20201029 12:46:57.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:57.463" endtime="20201029 12:46:57.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.466" endtime="20201029 12:46:57.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.441" endtime="20201029 12:46:57.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.439" endtime="20201029 12:46:57.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.475" endtime="20201029 12:46:57.762"></status>
</kw>
<msg timestamp="20201029 12:46:57.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021896125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021933139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:57.473" endtime="20201029 12:46:57.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021896125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021933139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:57.766" endtime="20201029 12:46:57.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.774" endtime="20201029 12:46:57.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.470" endtime="20201029 12:46:57.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.469" endtime="20201029 12:46:57.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:57.780" level="INFO">${RESULT} = [{'diff': 3.701400000000188e-05}, {'diff': 3.673599999999902e-05}, {'diff': 3.7388999999998784e-05}, {'diff': 3.729200000000127e-05}, {'diff': 3.708399999999973e-05}, {'diff': 3.754199999999805e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:57.777" endtime="20201029 12:46:57.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:57.784" level="INFO">${ACCURACY} = {'diff': [3.701400000000188e-05, 3.673599999999902e-05, 3.7388999999998784e-05, 3.729200000000127e-05, 3.708399999999973e-05, 3.754199999999805e-05, 3.6833000000000005e-05, 3.711200000000234e-05, 3.74...</msg>
<status status="PASS" starttime="20201029 12:46:57.781" endtime="20201029 12:46:57.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.789" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 12:46:57.788" endtime="20201029 12:46:57.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.791" level="INFO">VALUE: [3.701400000000188e-05, 3.673599999999902e-05, 3.7388999999998784e-05, 3.729200000000127e-05, 3.708399999999973e-05, 3.754199999999805e-05, 3.6833000000000005e-05, 3.711200000000234e-05, 3.7445000000000533e-05, 3.7554999999998145e-05, 3.7304999999997895e-05, 3.693000000000099e-05, 3.7389000000002254e-05, 3.742999999999802e-05, 3.724999999999909e-05, 3.7597000000000325e-05, 3.7569000000001185e-05, 3.699999999999884e-05, 3.7681000000001214e-05, 3.705599999999712e-05, 3.705600000000059e-05, 3.7569000000001185e-05, 3.7110999999999394e-05, 3.698599999999927e-05, 3.7124999999998964e-05, 3.724999999999909e-05, 3.7124999999998964e-05, 3.7304999999997895e-05, 3.673599999999902e-05, 3.7096999999999825e-05, 3.6875000000002184e-05, 3.7388999999998784e-05, 3.695800000000013e-05, 3.695800000000013e-05, 3.7639000000002504e-05, 3.7652999999998604e-05, 3.749999999999934e-05, 3.6875000000002184e-05, 3.70979999999993e-05, 3.705600000000059e-05, 3.724999999999909e-05, 3.6874999999998714e-05, 3.723699999999899e-05, 3.7417000000001394e-05, 3.6874999999998714e-05, 3.747299999999967e-05, 3.729200000000127e-05, 3.7568999999997715e-05, 3.7638999999999034e-05, 3.772200000000045e-05]</msg>
<status status="PASS" starttime="20201029 12:46:57.790" endtime="20201029 12:46:57.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.785" endtime="20201029 12:46:57.793"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:57.796" endtime="20201029 12:46:57.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.795" endtime="20201029 12:46:57.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.794" endtime="20201029 12:46:57.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.437" endtime="20201029 12:46:57.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.437" endtime="20201029 12:46:57.817"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.825" endtime="20201029 12:46:57.843"></status>
</kw>
<msg timestamp="20201029 12:46:57.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:57.824" endtime="20201029 12:46:57.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:57.845" endtime="20201029 12:46:57.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.847" endtime="20201029 12:46:57.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.821" endtime="20201029 12:46:57.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.819" endtime="20201029 12:46:57.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.856" endtime="20201029 12:46:58.142"></status>
</kw>
<msg timestamp="20201029 12:46:58.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0225835, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022621667, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:57.855" endtime="20201029 12:46:58.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0225835, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022621667, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:58.147" endtime="20201029 12:46:58.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.155" endtime="20201029 12:46:58.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.852" endtime="20201029 12:46:58.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.850" endtime="20201029 12:46:58.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:58.161" level="INFO">${RESULT} = [{'diff': 3.8167000000002144e-05}, {'diff': 3.791599999999895e-05}, {'diff': 3.823600000000052e-05}, {'diff': 3.7874999999999714e-05}, {'diff': 3.850000000000034e-05}, {'diff': 3.7790999999998826e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:58.158" endtime="20201029 12:46:58.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:58.165" level="INFO">${ACCURACY} = {'diff': [3.8167000000002144e-05, 3.791599999999895e-05, 3.823600000000052e-05, 3.7874999999999714e-05, 3.850000000000034e-05, 3.7790999999998826e-05, 3.822200000000095e-05, 3.820800000000138e-05, 3.8...</msg>
<status status="PASS" starttime="20201029 12:46:58.162" endtime="20201029 12:46:58.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.170" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 12:46:58.169" endtime="20201029 12:46:58.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.172" level="INFO">VALUE: [3.8167000000002144e-05, 3.791599999999895e-05, 3.823600000000052e-05, 3.7874999999999714e-05, 3.850000000000034e-05, 3.7790999999998826e-05, 3.822200000000095e-05, 3.820800000000138e-05, 3.870800000000188e-05, 3.8124999999999964e-05, 3.82919999999988e-05, 3.8055000000002115e-05, 3.8124999999999964e-05, 3.77919999999983e-05, 3.822300000000042e-05, 3.804199999999855e-05, 3.7903000000002324e-05, 3.807000000000116e-05, 3.8709000000001353e-05, 3.7819000000001435e-05, 3.8568999999998715e-05, 3.850000000000034e-05, 3.842999999999902e-05, 3.823599999999705e-05, 3.7874999999999714e-05, 3.8568999999998715e-05, 3.798600000000027e-05, 3.8304999999998895e-05, 3.8680999999998744e-05, 3.8417000000002394e-05, 3.873599999999755e-05, 3.8124999999999964e-05, 3.8333000000001505e-05, 3.845799999999816e-05, 3.8402999999999354e-05, 3.8445000000001534e-05, 3.8639000000000034e-05, 3.8610999999997425e-05, 3.7791000000002295e-05, 3.8582999999998285e-05, 3.8597000000001325e-05, 3.7888999999999284e-05, 3.825000000000009e-05, 3.823600000000052e-05, 3.8402999999999354e-05, 3.8568999999998715e-05, 3.842999999999902e-05, 3.826399999999966e-05, 3.772199999999698e-05, 3.773600000000002e-05]</msg>
<status status="PASS" starttime="20201029 12:46:58.171" endtime="20201029 12:46:58.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.166" endtime="20201029 12:46:58.174"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:58.178" endtime="20201029 12:46:58.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.176" endtime="20201029 12:46:58.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.175" endtime="20201029 12:46:58.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.818" endtime="20201029 12:46:58.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.817" endtime="20201029 12:46:58.198"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.207" endtime="20201029 12:46:58.223"></status>
</kw>
<msg timestamp="20201029 12:46:58.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.205" endtime="20201029 12:46:58.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.224" endtime="20201029 12:46:58.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.227" endtime="20201029 12:46:58.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.203" endtime="20201029 12:46:58.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.201" endtime="20201029 12:46:58.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.236" endtime="20201029 12:46:58.521"></status>
</kw>
<msg timestamp="20201029 12:46:58.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021653542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021692875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:58.234" endtime="20201029 12:46:58.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021653542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021692875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:58.525" endtime="20201029 12:46:58.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.533" endtime="20201029 12:46:58.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.232" endtime="20201029 12:46:58.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.230" endtime="20201029 12:46:58.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:58.540" level="INFO">${RESULT} = [{'diff': 3.9332999999999035e-05}, {'diff': 3.904199999999955e-05}, {'diff': 3.906999999999869e-05}, {'diff': 3.8902999999999854e-05}, {'diff': 3.9416999999999924e-05}, {'diff': 3.8875000000000715e-05...</msg>
<status status="PASS" starttime="20201029 12:46:58.537" endtime="20201029 12:46:58.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:58.547" level="INFO">${ACCURACY} = {'diff': [3.9332999999999035e-05, 3.904199999999955e-05, 3.906999999999869e-05, 3.8902999999999854e-05, 3.9416999999999924e-05, 3.8875000000000715e-05, 3.933400000000198e-05, 3.9138999999997065e-05, 3...</msg>
<status status="PASS" starttime="20201029 12:46:58.541" endtime="20201029 12:46:58.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.552" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 12:46:58.551" endtime="20201029 12:46:58.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.554" level="INFO">VALUE: [3.9332999999999035e-05, 3.904199999999955e-05, 3.906999999999869e-05, 3.8902999999999854e-05, 3.9416999999999924e-05, 3.8875000000000715e-05, 3.933400000000198e-05, 3.9138999999997065e-05, 3.915200000000063e-05, 3.9610999999998425e-05, 3.915200000000063e-05, 3.9304999999999896e-05, 3.9277000000000756e-05, 3.9624999999997995e-05, 3.922199999999848e-05, 3.922199999999848e-05, 3.9125000000000965e-05, 3.9597000000002325e-05, 3.92919999999998e-05, 3.9124999999997495e-05, 3.9389000000000784e-05, 3.975000000000159e-05, 3.9444999999999064e-05, 3.87780000000032e-05, 3.954200000000005e-05, 3.941600000000045e-05, 3.925000000000109e-05, 3.9583000000002755e-05, 3.89720000000017e-05, 3.9041000000000076e-05, 3.925000000000109e-05, 3.8875000000000715e-05, 3.948600000000177e-05, 3.9055000000003115e-05, 3.8889000000000284e-05, 3.9416999999999924e-05, 3.9389000000000784e-05, 3.909799999999783e-05, 3.9416999999999924e-05, 3.9389000000000784e-05, 3.923700000000099e-05, 3.95980000000018e-05, 3.89720000000017e-05, 3.940199999999741e-05, 3.888800000000081e-05, 3.948700000000124e-05, 3.874999999999712e-05, 3.8833000000002005e-05, 3.8889000000000284e-05, 3.9318999999999465e-05]</msg>
<status status="PASS" starttime="20201029 12:46:58.553" endtime="20201029 12:46:58.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.548" endtime="20201029 12:46:58.555"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:58.559" endtime="20201029 12:46:58.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.558" endtime="20201029 12:46:58.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.556" endtime="20201029 12:46:58.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.199" endtime="20201029 12:46:58.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.199" endtime="20201029 12:46:58.580"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.588" endtime="20201029 12:46:58.605"></status>
</kw>
<msg timestamp="20201029 12:46:58.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.587" endtime="20201029 12:46:58.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.606" endtime="20201029 12:46:58.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.609" endtime="20201029 12:46:58.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.584" endtime="20201029 12:46:58.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.582" endtime="20201029 12:46:58.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.618" endtime="20201029 12:46:58.908"></status>
</kw>
<msg timestamp="20201029 12:46:58.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021732653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021772681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:58.616" endtime="20201029 12:46:58.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021732653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021772681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:58.912" endtime="20201029 12:46:58.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.921" endtime="20201029 12:46:58.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.614" endtime="20201029 12:46:58.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.612" endtime="20201029 12:46:58.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:58.927" level="INFO">${RESULT} = [{'diff': 4.002799999999751e-05}, {'diff': 4.052800000000148e-05}, {'diff': 3.977800000000073e-05}, {'diff': 3.9736999999998024e-05}, {'diff': 3.997199999999923e-05}, {'diff': 4.019400000000034e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:58.924" endtime="20201029 12:46:58.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:58.931" level="INFO">${ACCURACY} = {'diff': [4.002799999999751e-05, 4.052800000000148e-05, 3.977800000000073e-05, 3.9736999999998024e-05, 3.997199999999923e-05, 4.019400000000034e-05, 3.972200000000245e-05, 4.0124999999998495e-05, 4.04...</msg>
<status status="PASS" starttime="20201029 12:46:58.928" endtime="20201029 12:46:58.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.936" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 12:46:58.935" endtime="20201029 12:46:58.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.938" level="INFO">VALUE: [4.002799999999751e-05, 4.052800000000148e-05, 3.977800000000073e-05, 3.9736999999998024e-05, 3.997199999999923e-05, 4.019400000000034e-05, 3.972200000000245e-05, 4.0124999999998495e-05, 4.0431000000000494e-05, 4.0431000000000494e-05, 4.0569000000000716e-05, 4.0417000000000924e-05, 4.0055000000000646e-05, 4.002800000000098e-05, 3.9902999999997385e-05, 4.0639000000002035e-05, 4.0431000000000494e-05, 4.0208999999999384e-05, 4.0389000000001785e-05, 4.0722999999999454e-05, 4.0208999999999384e-05, 4.0111000000002395e-05, 4.0069000000000216e-05, 4.023599999999905e-05, 3.9874999999998245e-05, 4.016599999999773e-05, 4.0111000000002395e-05, 4.0374999999998745e-05, 4.0416999999997455e-05, 4.020799999999991e-05, 3.9888999999997815e-05, 4.0139000000001535e-05, 3.9930999999999994e-05, 3.974999999999812e-05, 3.977800000000073e-05, 4.005600000000012e-05, 4.024999999999862e-05, 4.042999999999755e-05, 4.0222999999998954e-05, 4.040200000000188e-05, 4.0208999999999384e-05, 4.0069000000000216e-05, 3.972199999999898e-05, 4.045800000000016e-05, 4.047199999999973e-05, 4.0639000000002035e-05, 3.9832999999999535e-05, 4.006999999999969e-05, 3.9832999999999535e-05, 3.9846999999999105e-05]</msg>
<status status="PASS" starttime="20201029 12:46:58.937" endtime="20201029 12:46:58.939"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.932" endtime="20201029 12:46:58.940"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:58.943" endtime="20201029 12:46:58.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.942" endtime="20201029 12:46:58.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.941" endtime="20201029 12:46:58.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.580" endtime="20201029 12:46:58.964"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.580" endtime="20201029 12:46:58.964"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.972" endtime="20201029 12:46:58.990"></status>
</kw>
<msg timestamp="20201029 12:46:58.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.971" endtime="20201029 12:46:58.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.991" endtime="20201029 12:46:58.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.994" endtime="20201029 12:46:58.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.968" endtime="20201029 12:46:58.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.966" endtime="20201029 12:46:58.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.003" endtime="20201029 12:46:59.289"></status>
</kw>
<msg timestamp="20201029 12:46:59.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022516528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022558028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:59.001" endtime="20201029 12:46:59.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022516528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022558028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:59.293" endtime="20201029 12:46:59.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.302" endtime="20201029 12:46:59.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.999" endtime="20201029 12:46:59.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.997" endtime="20201029 12:46:59.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:59.308" level="INFO">${RESULT} = [{'diff': 4.149999999999987e-05}, {'diff': 4.134800000000008e-05}, {'diff': 4.12920000000018e-05}, {'diff': 4.1374999999999745e-05}, {'diff': 4.076400000000216e-05}, {'diff': 4.076399999999869e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:59.305" endtime="20201029 12:46:59.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:59.312" level="INFO">${ACCURACY} = {'diff': [4.149999999999987e-05, 4.134800000000008e-05, 4.12920000000018e-05, 4.1374999999999745e-05, 4.076400000000216e-05, 4.076399999999869e-05, 4.077799999999826e-05, 4.1055000000001646e-05, 4.098...</msg>
<status status="PASS" starttime="20201029 12:46:59.309" endtime="20201029 12:46:59.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.317" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 12:46:59.316" endtime="20201029 12:46:59.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.319" level="INFO">VALUE: [4.149999999999987e-05, 4.134800000000008e-05, 4.12920000000018e-05, 4.1374999999999745e-05, 4.076400000000216e-05, 4.076399999999869e-05, 4.077799999999826e-05, 4.1055000000001646e-05, 4.09859999999998e-05, 4.172200000000098e-05, 4.0902999999998385e-05, 4.127799999999876e-05, 4.1069000000001216e-05, 4.1611000000000425e-05, 4.131999999999747e-05, 4.120800000000091e-05, 4.101399999999894e-05, 4.152799999999901e-05, 4.105600000000112e-05, 4.082000000000044e-05, 4.1597000000000856e-05, 4.170799999999794e-05, 4.1167000000001674e-05, 4.1361000000000175e-05, 4.1583000000001286e-05, 4.1124999999999495e-05, 4.122199999999701e-05, 4.122200000000048e-05, 4.0917000000001424e-05, 4.1139000000002535e-05, 4.154199999999858e-05, 4.125000000000309e-05, 4.1388999999999315e-05, 4.1596999999997386e-05, 4.104199999999808e-05, 4.095800000000066e-05, 4.075000000000259e-05, 4.101399999999894e-05, 4.158400000000076e-05, 4.1361000000000175e-05, 4.1402999999998885e-05, 4.076399999999869e-05, 4.147200000000073e-05, 4.120800000000091e-05, 4.11799999999983e-05, 4.0959000000000134e-05, 4.126399999999919e-05, 4.1555000000002146e-05, 4.122200000000048e-05, 4.1069000000001216e-05]</msg>
<status status="PASS" starttime="20201029 12:46:59.318" endtime="20201029 12:46:59.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.313" endtime="20201029 12:46:59.321"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:59.325" endtime="20201029 12:46:59.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.323" endtime="20201029 12:46:59.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.322" endtime="20201029 12:46:59.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.965" endtime="20201029 12:46:59.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.964" endtime="20201029 12:46:59.345"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.354" endtime="20201029 12:46:59.371"></status>
</kw>
<msg timestamp="20201029 12:46:59.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.352" endtime="20201029 12:46:59.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.372" endtime="20201029 12:46:59.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.375" endtime="20201029 12:46:59.376"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.350" endtime="20201029 12:46:59.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.348" endtime="20201029 12:46:59.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.384" endtime="20201029 12:46:59.668"></status>
</kw>
<msg timestamp="20201029 12:46:59.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021927944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021969778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:59.382" endtime="20201029 12:46:59.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021927944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021969778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:59.673" endtime="20201029 12:46:59.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.681" endtime="20201029 12:46:59.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.380" endtime="20201029 12:46:59.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.378" endtime="20201029 12:46:59.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:59.687" level="INFO">${RESULT} = [{'diff': 4.183399999999754e-05}, {'diff': 4.202799999999951e-05}, {'diff': 4.182000000000144e-05}, {'diff': 4.2375000000000745e-05}, {'diff': 4.2723000000001454e-05}, {'diff': 4.2389000000000315e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:59.684" endtime="20201029 12:46:59.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:59.692" level="INFO">${ACCURACY} = {'diff': [4.183399999999754e-05, 4.202799999999951e-05, 4.182000000000144e-05, 4.2375000000000745e-05, 4.2723000000001454e-05, 4.2389000000000315e-05, 4.240200000000041e-05, 4.222200000000148e-05, 4.2...</msg>
<status status="PASS" starttime="20201029 12:46:59.688" endtime="20201029 12:46:59.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.697" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 12:46:59.696" endtime="20201029 12:46:59.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.699" level="INFO">VALUE: [4.183399999999754e-05, 4.202799999999951e-05, 4.182000000000144e-05, 4.2375000000000745e-05, 4.2723000000001454e-05, 4.2389000000000315e-05, 4.240200000000041e-05, 4.222200000000148e-05, 4.2333000000002036e-05, 4.220799999999844e-05, 4.2096999999997886e-05, 4.175000000000012e-05, 4.254200000000305e-05, 4.173599999999708e-05, 4.252800000000001e-05, 4.1902999999999385e-05, 4.2653000000000135e-05, 4.182000000000144e-05, 4.2709000000001884e-05, 4.255599999999915e-05, 4.2223000000000954e-05, 4.2625000000000995e-05, 4.242999999999955e-05, 4.241599999999998e-05, 4.190199999999991e-05, 4.176399999999969e-05, 4.2304999999999426e-05, 4.1902999999999385e-05, 4.2068999999998746e-05, 4.2111000000000925e-05, 4.176399999999969e-05, 4.208400000000126e-05, 4.1944999999998095e-05, 4.17920000000023e-05, 4.258399999999829e-05, 4.1916999999998955e-05, 4.1930999999998525e-05, 4.21799999999993e-05, 4.2709000000001884e-05, 4.207000000000169e-05, 4.1959000000001134e-05, 4.2568999999999246e-05, 4.2083000000001786e-05, 4.2194999999998345e-05, 4.2568999999999246e-05, 4.2389000000000315e-05, 4.1931000000001994e-05, 4.256999999999872e-05, 4.1902999999999385e-05, 4.255600000000262e-05]</msg>
<status status="PASS" starttime="20201029 12:46:59.698" endtime="20201029 12:46:59.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.693" endtime="20201029 12:46:59.700"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:59.704" endtime="20201029 12:46:59.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.703" endtime="20201029 12:46:59.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.701" endtime="20201029 12:46:59.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.346" endtime="20201029 12:46:59.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.346" endtime="20201029 12:46:59.725"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.733" endtime="20201029 12:46:59.751"></status>
</kw>
<msg timestamp="20201029 12:46:59.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.732" endtime="20201029 12:46:59.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.752" endtime="20201029 12:46:59.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.755" endtime="20201029 12:46:59.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.729" endtime="20201029 12:46:59.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.727" endtime="20201029 12:46:59.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.763" endtime="20201029 12:47:00.051"></status>
</kw>
<msg timestamp="20201029 12:47:00.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022145153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022188806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:59.762" endtime="20201029 12:47:00.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022145153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022188806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:00.055" endtime="20201029 12:47:00.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.063" endtime="20201029 12:47:00.065"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.759" endtime="20201029 12:47:00.065"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.758" endtime="20201029 12:47:00.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:00.070" level="INFO">${RESULT} = [{'diff': 4.3652999999997666e-05}, {'diff': 4.3653000000001135e-05}, {'diff': 4.2916999999999955e-05}, {'diff': 4.3388999999997846e-05}, {'diff': 4.277700000000079e-05}, {'diff': 4.3153000000000635e-0...</msg>
<status status="PASS" starttime="20201029 12:47:00.066" endtime="20201029 12:47:00.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:00.074" level="INFO">${ACCURACY} = {'diff': [4.3652999999997666e-05, 4.3653000000001135e-05, 4.2916999999999955e-05, 4.3388999999997846e-05, 4.277700000000079e-05, 4.3153000000000635e-05, 4.273600000000155e-05, 4.3375000000001745e-05, ...</msg>
<status status="PASS" starttime="20201029 12:47:00.071" endtime="20201029 12:47:00.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.078" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 12:47:00.077" endtime="20201029 12:47:00.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.080" level="INFO">VALUE: [4.3652999999997666e-05, 4.3653000000001135e-05, 4.2916999999999955e-05, 4.3388999999997846e-05, 4.277700000000079e-05, 4.3153000000000635e-05, 4.273600000000155e-05, 4.3375000000001745e-05, 4.298599999999833e-05, 4.28059999999994e-05, 4.3153000000000635e-05, 4.356999999999972e-05, 4.275000000000112e-05, 4.3374999999998276e-05, 4.3139000000001065e-05, 4.276400000000069e-05, 4.3389000000001315e-05, 4.279099999999689e-05, 4.3139000000001065e-05, 4.320799999999944e-05, 4.3125000000001495e-05, 4.322199999999901e-05, 4.3652999999997666e-05, 4.370799999999994e-05, 4.322199999999901e-05, 4.279199999999983e-05, 4.331999999999947e-05, 4.354200000000058e-05, 4.274999999999765e-05, 4.3082999999999316e-05, 4.333399999999904e-05, 4.331999999999947e-05, 4.3083000000002786e-05, 4.276300000000122e-05, 4.2916999999999955e-05, 4.34999999999984e-05, 4.352699999999807e-05, 4.297199999999876e-05, 4.3555000000000677e-05, 4.2903000000000385e-05, 4.2903000000000385e-05, 4.3332999999999566e-05, 4.3652999999997666e-05, 4.2930999999999525e-05, 4.3694999999999845e-05, 4.2944999999999095e-05, 4.306999999999922e-05, 4.3708999999999415e-05, 4.34860000000023e-05, 4.3403000000000885e-05]</msg>
<status status="PASS" starttime="20201029 12:47:00.079" endtime="20201029 12:47:00.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.075" endtime="20201029 12:47:00.082"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:00.085" endtime="20201029 12:47:00.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.084" endtime="20201029 12:47:00.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.083" endtime="20201029 12:47:00.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.726" endtime="20201029 12:47:00.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.725" endtime="20201029 12:47:00.106"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.115" endtime="20201029 12:47:00.132"></status>
</kw>
<msg timestamp="20201029 12:47:00.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:00.113" endtime="20201029 12:47:00.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:00.134" endtime="20201029 12:47:00.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.136" endtime="20201029 12:47:00.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.111" endtime="20201029 12:47:00.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.108" endtime="20201029 12:47:00.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.145" endtime="20201029 12:47:00.430"></status>
</kw>
<msg timestamp="20201029 12:47:00.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022775125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022819125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:00.143" endtime="20201029 12:47:00.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022775125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022819125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:00.434" endtime="20201029 12:47:00.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.442" endtime="20201029 12:47:00.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.141" endtime="20201029 12:47:00.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.139" endtime="20201029 12:47:00.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:00.448" level="INFO">${RESULT} = [{'diff': 4.39999999999989e-05}, {'diff': 4.377800000000126e-05}, {'diff': 4.444400000000112e-05}, {'diff': 4.398599999999933e-05}, {'diff': 4.3945000000000095e-05}, {'diff': 4.381999999999997e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:00.445" endtime="20201029 12:47:00.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:00.453" level="INFO">${ACCURACY} = {'diff': [4.39999999999989e-05, 4.377800000000126e-05, 4.444400000000112e-05, 4.398599999999933e-05, 4.3945000000000095e-05, 4.381999999999997e-05, 4.409799999999936e-05, 4.463799999999962e-05, 4.4208...</msg>
<status status="PASS" starttime="20201029 12:47:00.449" endtime="20201029 12:47:00.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.457" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 12:47:00.456" endtime="20201029 12:47:00.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.459" level="INFO">VALUE: [4.39999999999989e-05, 4.377800000000126e-05, 4.444400000000112e-05, 4.398599999999933e-05, 4.3945000000000095e-05, 4.381999999999997e-05, 4.409799999999936e-05, 4.463799999999962e-05, 4.420800000000044e-05, 4.419400000000087e-05, 4.423599999999958e-05, 4.4374999999999276e-05, 4.4096999999999886e-05, 4.451399999999897e-05, 4.372199999999951e-05, 4.4096999999999886e-05, 4.4667000000001705e-05, 4.400000000000237e-05, 4.39860000000028e-05, 4.43060000000009e-05, 4.444400000000112e-05, 4.3833000000000066e-05, 4.409799999999936e-05, 4.4124999999999026e-05, 4.429199999999786e-05, 4.455599999999768e-05, 4.3833000000000066e-05, 4.3819000000000496e-05, 4.380499999999746e-05, 4.472200000000051e-05, 4.4139000000002065e-05, 4.4389000000002315e-05, 4.38060000000004e-05, 4.377799999999779e-05, 4.408399999999979e-05, 4.422200000000001e-05, 4.4110999999999456e-05, 4.44999999999994e-05, 4.4459000000000165e-05, 4.3709000000002884e-05, 4.4083000000000316e-05, 4.470799999999747e-05, 4.3945000000000095e-05, 4.4347000000000136e-05, 4.423600000000305e-05, 4.422200000000001e-05, 4.476399999999922e-05, 4.398599999999933e-05, 4.398599999999933e-05, 4.4138999999998596e-05]</msg>
<status status="PASS" starttime="20201029 12:47:00.458" endtime="20201029 12:47:00.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.453" endtime="20201029 12:47:00.461"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:00.465" endtime="20201029 12:47:00.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.464" endtime="20201029 12:47:00.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.463" endtime="20201029 12:47:00.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.107" endtime="20201029 12:47:00.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.106" endtime="20201029 12:47:00.486"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.494" endtime="20201029 12:47:00.512"></status>
</kw>
<msg timestamp="20201029 12:47:00.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:00.493" endtime="20201029 12:47:00.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:00.514" endtime="20201029 12:47:00.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.516" endtime="20201029 12:47:00.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.490" endtime="20201029 12:47:00.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.488" endtime="20201029 12:47:00.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.525" endtime="20201029 12:47:00.810"></status>
</kw>
<msg timestamp="20201029 12:47:00.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021725375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021770222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:00.523" endtime="20201029 12:47:00.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021725375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021770222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:00.814" endtime="20201029 12:47:00.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.822" endtime="20201029 12:47:00.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.521" endtime="20201029 12:47:00.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.519" endtime="20201029 12:47:00.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:00.829" level="INFO">${RESULT} = [{'diff': 4.484699999999717e-05}, {'diff': 4.562499999999706e-05}, {'diff': 4.508299999999785e-05}, {'diff': 4.4888999999999346e-05}, {'diff': 4.5444999999998126e-05}, {'diff': 4.495800000000119e-05},...</msg>
<status status="PASS" starttime="20201029 12:47:00.826" endtime="20201029 12:47:00.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:00.834" level="INFO">${ACCURACY} = {'diff': [4.484699999999717e-05, 4.562499999999706e-05, 4.508299999999785e-05, 4.4888999999999346e-05, 4.5444999999998126e-05, 4.495800000000119e-05, 4.5402999999999416e-05, 4.555600000000215e-05, 4.5...</msg>
<status status="PASS" starttime="20201029 12:47:00.830" endtime="20201029 12:47:00.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.838" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 12:47:00.837" endtime="20201029 12:47:00.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.841" level="INFO">VALUE: [4.484699999999717e-05, 4.562499999999706e-05, 4.508299999999785e-05, 4.4888999999999346e-05, 4.5444999999998126e-05, 4.495800000000119e-05, 4.5402999999999416e-05, 4.555600000000215e-05, 4.5611000000000956e-05, 4.509800000000036e-05, 4.4888999999999346e-05, 4.473600000000008e-05, 4.527799999999929e-05, 4.502799999999904e-05, 4.5083000000001316e-05, 4.4888999999999346e-05, 4.525000000000015e-05, 4.5388999999999846e-05, 4.572199999999804e-05, 4.5111000000000456e-05, 4.5097000000000886e-05, 4.502799999999904e-05, 4.5666999999999236e-05, 4.4874999999999776e-05, 4.4736999999999555e-05, 4.477699999999932e-05, 4.472200000000051e-05, 4.5402999999999416e-05, 4.505500000000218e-05, 4.5083000000001316e-05, 4.542999999999908e-05, 4.566599999999976e-05, 4.522200000000101e-05, 4.5152999999999166e-05, 4.4902999999998916e-05, 4.526399999999972e-05, 4.5388999999999846e-05, 4.570799999999847e-05, 4.529199999999886e-05, 4.498600000000033e-05, 4.530599999999843e-05, 4.483399999999707e-05, 4.5111000000000456e-05, 4.561099999999749e-05, 4.525000000000015e-05, 4.4861000000000206e-05, 4.5347000000001136e-05, 4.476399999999922e-05, 4.4888999999999346e-05, 4.551399999999997e-05]</msg>
<status status="PASS" starttime="20201029 12:47:00.839" endtime="20201029 12:47:00.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.835" endtime="20201029 12:47:00.842"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:00.846" endtime="20201029 12:47:00.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.844" endtime="20201029 12:47:00.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.843" endtime="20201029 12:47:00.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.487" endtime="20201029 12:47:00.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.486" endtime="20201029 12:47:00.866"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.875" endtime="20201029 12:47:00.892"></status>
</kw>
<msg timestamp="20201029 12:47:00.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:00.873" endtime="20201029 12:47:00.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:00.894" endtime="20201029 12:47:00.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.896" endtime="20201029 12:47:00.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.871" endtime="20201029 12:47:00.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.869" endtime="20201029 12:47:00.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.905" endtime="20201029 12:47:01.193"></status>
</kw>
<msg timestamp="20201029 12:47:01.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021642833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021689222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:00.903" endtime="20201029 12:47:01.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021642833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021689222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:01.197" endtime="20201029 12:47:01.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.205" endtime="20201029 12:47:01.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.901" endtime="20201029 12:47:01.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.899" endtime="20201029 12:47:01.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:01.211" level="INFO">${RESULT} = [{'diff': 4.6389000000000846e-05}, {'diff': 4.625000000000115e-05}, {'diff': 4.584800000000111e-05}, {'diff': 4.63060000000029e-05}, {'diff': 4.592999999999958e-05}, {'diff': 4.629099999999692e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:01.208" endtime="20201029 12:47:01.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:01.216" level="INFO">${ACCURACY} = {'diff': [4.6389000000000846e-05, 4.625000000000115e-05, 4.584800000000111e-05, 4.63060000000029e-05, 4.592999999999958e-05, 4.629099999999692e-05, 4.644399999999965e-05, 4.580499999999946e-05, 4.6193...</msg>
<status status="PASS" starttime="20201029 12:47:01.212" endtime="20201029 12:47:01.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.220" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 12:47:01.219" endtime="20201029 12:47:01.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.222" level="INFO">VALUE: [4.6389000000000846e-05, 4.625000000000115e-05, 4.584800000000111e-05, 4.63060000000029e-05, 4.592999999999958e-05, 4.629099999999692e-05, 4.644399999999965e-05, 4.580499999999946e-05, 4.61939999999994e-05, 4.6639000000001096e-05, 4.661099999999849e-05, 4.613899999999713e-05, 4.60000000000009e-05, 4.604199999999961e-05, 4.5916999999999486e-05, 4.572199999999804e-05, 4.582000000000197e-05, 4.6737000000001555e-05, 4.627800000000029e-05, 4.594399999999915e-05, 4.641600000000051e-05, 4.655500000000021e-05, 4.623600000000158e-05, 4.573600000000108e-05, 4.665200000000119e-05, 4.625000000000115e-05, 4.634699999999867e-05, 4.620800000000244e-05, 4.5889000000000346e-05, 4.606899999999928e-05, 4.658400000000229e-05, 4.572200000000151e-05, 4.594399999999915e-05, 4.5902999999999916e-05, 4.6597000000002387e-05, 4.597199999999829e-05, 4.673600000000208e-05, 4.575000000000065e-05, 4.6083000000002317e-05, 4.58879999999974e-05, 4.575000000000065e-05, 4.58329999999986e-05, 4.6583000000002817e-05, 4.5889000000000346e-05, 4.6639000000001096e-05, 4.5916999999999486e-05, 4.6597000000002387e-05, 4.629199999999986e-05, 4.659699999999892e-05, 4.5972999999997766e-05]</msg>
<status status="PASS" starttime="20201029 12:47:01.221" endtime="20201029 12:47:01.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.216" endtime="20201029 12:47:01.228"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:01.231" endtime="20201029 12:47:01.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.230" endtime="20201029 12:47:01.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.229" endtime="20201029 12:47:01.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.867" endtime="20201029 12:47:01.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.867" endtime="20201029 12:47:01.252"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.260" endtime="20201029 12:47:01.279"></status>
</kw>
<msg timestamp="20201029 12:47:01.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:01.259" endtime="20201029 12:47:01.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:01.280" endtime="20201029 12:47:01.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.283" endtime="20201029 12:47:01.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.256" endtime="20201029 12:47:01.285"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.254" endtime="20201029 12:47:01.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.291" endtime="20201029 12:47:01.578"></status>
</kw>
<msg timestamp="20201029 12:47:01.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022985917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023033236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:01.290" endtime="20201029 12:47:01.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022985917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023033236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:01.582" endtime="20201029 12:47:01.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.590" endtime="20201029 12:47:01.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.287" endtime="20201029 12:47:01.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.286" endtime="20201029 12:47:01.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:01.597" level="INFO">${RESULT} = [{'diff': 4.731899999999706e-05}, {'diff': 4.744399999999718e-05}, {'diff': 4.683399999999907e-05}, {'diff': 4.6889000000001346e-05}, {'diff': 4.7458999999999696e-05}, {'diff': 4.730600000000043e-05},...</msg>
<status status="PASS" starttime="20201029 12:47:01.594" endtime="20201029 12:47:01.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:01.601" level="INFO">${ACCURACY} = {'diff': [4.731899999999706e-05, 4.744399999999718e-05, 4.683399999999907e-05, 4.6889000000001346e-05, 4.7458999999999696e-05, 4.730600000000043e-05, 4.759800000000286e-05, 4.677800000000079e-05, 4.72...</msg>
<status status="PASS" starttime="20201029 12:47:01.598" endtime="20201029 12:47:01.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.606" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 12:47:01.605" endtime="20201029 12:47:01.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.608" level="INFO">VALUE: [4.731899999999706e-05, 4.744399999999718e-05, 4.683399999999907e-05, 4.6889000000001346e-05, 4.7458999999999696e-05, 4.730600000000043e-05, 4.759800000000286e-05, 4.677800000000079e-05, 4.7236999999998586e-05, 4.758300000000035e-05, 4.775000000000265e-05, 4.708299999999985e-05, 4.730500000000096e-05, 4.7153000000001166e-05, 4.704100000000114e-05, 4.68329999999996e-05, 4.759799999999939e-05, 4.7375000000002276e-05, 4.723599999999911e-05, 4.7417000000000986e-05, 4.7222999999999016e-05, 4.6903000000000916e-05, 4.682000000000297e-05, 4.774999999999918e-05, 4.694400000000015e-05, 4.747199999999979e-05, 4.729100000000139e-05, 4.749999999999893e-05, 4.731900000000053e-05, 4.772200000000004e-05, 4.773600000000308e-05, 4.705500000000071e-05, 4.68329999999996e-05, 4.720799999999997e-05, 4.720799999999997e-05, 4.705600000000018e-05, 4.7445000000000126e-05, 4.7209000000002915e-05, 4.7403000000001416e-05, 4.737499999999881e-05, 4.684800000000211e-05, 4.7139000000001596e-05, 4.699999999999843e-05, 4.743000000000108e-05, 4.770800000000047e-05, 4.737499999999881e-05, 4.740299999999795e-05, 4.756900000000078e-05, 4.777800000000179e-05, 4.731900000000053e-05]</msg>
<status status="PASS" starttime="20201029 12:47:01.607" endtime="20201029 12:47:01.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.602" endtime="20201029 12:47:01.610"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:01.614" endtime="20201029 12:47:01.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.612" endtime="20201029 12:47:01.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.611" endtime="20201029 12:47:01.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.253" endtime="20201029 12:47:01.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.252" endtime="20201029 12:47:01.634"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.643" endtime="20201029 12:47:01.660"></status>
</kw>
<msg timestamp="20201029 12:47:01.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:01.641" endtime="20201029 12:47:01.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:01.661" endtime="20201029 12:47:01.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.664" endtime="20201029 12:47:01.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.639" endtime="20201029 12:47:01.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.637" endtime="20201029 12:47:01.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.673" endtime="20201029 12:47:01.974"></status>
</kw>
<msg timestamp="20201029 12:47:01.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021818556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021866764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:01.671" endtime="20201029 12:47:01.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021818556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021866764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:01.984" endtime="20201029 12:47:02.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.004" endtime="20201029 12:47:02.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.669" endtime="20201029 12:47:02.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.667" endtime="20201029 12:47:02.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:02.018" level="INFO">${RESULT} = [{'diff': 4.820800000000097e-05}, {'diff': 4.798599999999986e-05}, {'diff': 4.788899999999888e-05}, {'diff': 4.831999999999753e-05}, {'diff': 4.805600000000118e-05}, {'diff': 4.848600000000036e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:02.011" endtime="20201029 12:47:02.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:02.027" level="INFO">${ACCURACY} = {'diff': [4.820800000000097e-05, 4.798599999999986e-05, 4.788899999999888e-05, 4.831999999999753e-05, 4.805600000000118e-05, 4.848600000000036e-05, 4.777800000000179e-05, 4.847200000000079e-05, 4.7778...</msg>
<status status="PASS" starttime="20201029 12:47:02.020" endtime="20201029 12:47:02.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.032" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 12:47:02.031" endtime="20201029 12:47:02.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.034" level="INFO">VALUE: [4.820800000000097e-05, 4.798599999999986e-05, 4.788899999999888e-05, 4.831999999999753e-05, 4.805600000000118e-05, 4.848600000000036e-05, 4.777800000000179e-05, 4.847200000000079e-05, 4.777800000000179e-05, 4.804199999999814e-05, 4.78200000000005e-05, 4.805600000000118e-05, 4.834700000000067e-05, 4.794400000000115e-05, 4.840199999999947e-05, 4.776400000000222e-05, 4.8667000000002236e-05, 4.793000000000158e-05, 4.804099999999867e-05, 4.851400000000297e-05, 4.848600000000036e-05, 4.830600000000143e-05, 4.822200000000054e-05, 4.833400000000057e-05, 4.852799999999907e-05, 4.791599999999854e-05, 4.7945000000000626e-05, 4.790299999999845e-05, 4.834700000000067e-05, 4.879200000000236e-05, 4.848600000000036e-05, 4.776400000000222e-05, 4.830600000000143e-05, 4.872200000000104e-05, 4.8403000000002416e-05, 4.777800000000179e-05, 4.845799999999775e-05, 4.849999999999993e-05, 4.774999999999918e-05, 4.777799999999832e-05, 4.80000000000029e-05, 4.852799999999907e-05, 4.8167000000001736e-05, 4.858300000000135e-05, 4.830599999999796e-05, 4.805500000000171e-05, 4.8013999999999e-05, 4.790299999999845e-05, 4.809699999999695e-05, 4.776400000000222e-05]</msg>
<status status="PASS" starttime="20201029 12:47:02.033" endtime="20201029 12:47:02.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.028" endtime="20201029 12:47:02.036"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:02.040" endtime="20201029 12:47:02.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.038" endtime="20201029 12:47:02.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.037" endtime="20201029 12:47:02.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.635" endtime="20201029 12:47:02.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.635" endtime="20201029 12:47:02.060"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.069" endtime="20201029 12:47:02.086"></status>
</kw>
<msg timestamp="20201029 12:47:02.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.068" endtime="20201029 12:47:02.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.088" endtime="20201029 12:47:02.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.091" endtime="20201029 12:47:02.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.065" endtime="20201029 12:47:02.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.063" endtime="20201029 12:47:02.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.100" endtime="20201029 12:47:02.386"></status>
</kw>
<msg timestamp="20201029 12:47:02.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022502778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022551556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:02.098" endtime="20201029 12:47:02.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022502778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022551556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:02.391" endtime="20201029 12:47:02.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.399" endtime="20201029 12:47:02.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.096" endtime="20201029 12:47:02.402"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.094" endtime="20201029 12:47:02.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:02.406" level="INFO">${RESULT} = [{'diff': 4.877799999999932e-05}, {'diff': 4.873600000000061e-05}, {'diff': 4.938900000000038e-05}, {'diff': 4.934700000000167e-05}, {'diff': 4.938900000000038e-05}, {'diff': 4.898600000000086e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:02.403" endtime="20201029 12:47:02.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:02.410" level="INFO">${ACCURACY} = {'diff': [4.877799999999932e-05, 4.873600000000061e-05, 4.938900000000038e-05, 4.934700000000167e-05, 4.938900000000038e-05, 4.898600000000086e-05, 4.8707999999998e-05, 4.954199999999964e-05, 4.891700...</msg>
<status status="PASS" starttime="20201029 12:47:02.407" endtime="20201029 12:47:02.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.415" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 12:47:02.414" endtime="20201029 12:47:02.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.418" level="INFO">VALUE: [4.877799999999932e-05, 4.873600000000061e-05, 4.938900000000038e-05, 4.934700000000167e-05, 4.938900000000038e-05, 4.898600000000086e-05, 4.8707999999998e-05, 4.954199999999964e-05, 4.8917000000002486e-05, 4.9458999999998227e-05, 4.92079999999985e-05, 4.91529999999997e-05, 4.956999999999878e-05, 4.905600000000218e-05, 4.880599999999846e-05, 4.890299999999945e-05, 4.922200000000154e-05, 4.88330000000016e-05, 4.923600000000111e-05, 4.93469999999982e-05, 4.955499999999974e-05, 4.923599999999764e-05, 4.919499999999841e-05, 4.890299999999945e-05, 4.91940000000024e-05, 4.898600000000086e-05, 4.904199999999914e-05, 4.917999999999936e-05, 4.9209000000001446e-05, 4.96530000000002e-05, 4.875000000000018e-05, 4.919399999999893e-05, 4.965200000000072e-05, 4.9388000000000903e-05, 4.90270000000001e-05, 4.963899999999716e-05, 4.947200000000179e-05, 4.972199999999857e-05, 4.923600000000111e-05, 4.880599999999846e-05, 4.923600000000111e-05, 4.897200000000129e-05, 4.940299999999995e-05, 4.909800000000089e-05, 4.8973000000000766e-05, 4.940299999999995e-05, 4.908299999999838e-05, 4.926400000000025e-05, 4.9707999999999e-05, 4.891599999999954e-05]</msg>
<status status="PASS" starttime="20201029 12:47:02.416" endtime="20201029 12:47:02.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.411" endtime="20201029 12:47:02.419"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:02.423" endtime="20201029 12:47:02.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.421" endtime="20201029 12:47:02.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.420" endtime="20201029 12:47:02.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.061" endtime="20201029 12:47:02.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.061" endtime="20201029 12:47:02.444"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.453" endtime="20201029 12:47:02.472"></status>
</kw>
<msg timestamp="20201029 12:47:02.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.452" endtime="20201029 12:47:02.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.474" endtime="20201029 12:47:02.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.477" endtime="20201029 12:47:02.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.449" endtime="20201029 12:47:02.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.447" endtime="20201029 12:47:02.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.486" endtime="20201029 12:47:02.772"></status>
</kw>
<msg timestamp="20201029 12:47:02.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02442, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024470028, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 12:47:02.484" endtime="20201029 12:47:02.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02442, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024470028, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 12:47:02.776" endtime="20201029 12:47:02.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.785" endtime="20201029 12:47:02.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.482" endtime="20201029 12:47:02.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.480" endtime="20201029 12:47:02.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:02.791" level="INFO">${RESULT} = [{'diff': 5.002800000000057e-05}, {'diff': 5.023600000000211e-05}, {'diff': 4.981999999999903e-05}, {'diff': 5.029200000000039e-05}, {'diff': 5.0237000000001586e-05}, {'diff': 5.044400000000018e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:02.788" endtime="20201029 12:47:02.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:02.796" level="INFO">${ACCURACY} = {'diff': [5.002800000000057e-05, 5.023600000000211e-05, 4.981999999999903e-05, 5.029200000000039e-05, 5.0237000000001586e-05, 5.044400000000018e-05, 5.069499999999991e-05, 4.976399999999728e-05, 4.990...</msg>
<status status="PASS" starttime="20201029 12:47:02.792" endtime="20201029 12:47:02.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.800" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 12:47:02.799" endtime="20201029 12:47:02.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.803" level="INFO">VALUE: [5.002800000000057e-05, 5.023600000000211e-05, 4.981999999999903e-05, 5.029200000000039e-05, 5.0237000000001586e-05, 5.044400000000018e-05, 5.069499999999991e-05, 4.976399999999728e-05, 4.990300000000045e-05, 4.988900000000088e-05, 4.995899999999873e-05, 5.038900000000138e-05, 5.048599999999889e-05, 5.059800000000239e-05, 5.033400000000257e-05, 5.006999999999928e-05, 4.988900000000088e-05, 5.072199999999957e-05, 5.015299999999723e-05, 5.027799999999735e-05, 4.976300000000128e-05, 4.987500000000131e-05, 4.990200000000097e-05, 5.005500000000024e-05, 5.043100000000009e-05, 5.048599999999889e-05, 5.023599999999864e-05, 4.980599999999946e-05, 4.980599999999946e-05, 4.988900000000088e-05, 4.981999999999903e-05, 5.048599999999889e-05, 5.052800000000107e-05, 5.027800000000082e-05, 5.069499999999991e-05, 4.9737000000001086e-05, 5.034799999999867e-05, 5.015200000000122e-05, 5.037499999999834e-05, 5.03469999999992e-05, 5.063899999999816e-05, 4.981899999999956e-05, 5.069499999999991e-05, 5.068100000000034e-05, 5.069400000000043e-05, 5.011099999999852e-05, 5.027799999999735e-05, 4.973599999999814e-05, 5.054200000000064e-05, 4.980599999999946e-05]</msg>
<status status="PASS" starttime="20201029 12:47:02.801" endtime="20201029 12:47:02.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.796" endtime="20201029 12:47:02.805"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:02.809" endtime="20201029 12:47:02.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.807" endtime="20201029 12:47:02.829"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.806" endtime="20201029 12:47:02.829"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.445" endtime="20201029 12:47:02.829"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.445" endtime="20201029 12:47:02.829"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.838" endtime="20201029 12:47:02.855"></status>
</kw>
<msg timestamp="20201029 12:47:02.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.837" endtime="20201029 12:47:02.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.857" endtime="20201029 12:47:02.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.859" endtime="20201029 12:47:02.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.834" endtime="20201029 12:47:02.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.832" endtime="20201029 12:47:02.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.869" endtime="20201029 12:47:03.155"></status>
</kw>
<msg timestamp="20201029 12:47:03.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022244347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022296083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:02.867" endtime="20201029 12:47:03.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022244347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022296083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:03.159" endtime="20201029 12:47:03.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.168" endtime="20201029 12:47:03.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.864" endtime="20201029 12:47:03.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.863" endtime="20201029 12:47:03.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:03.174" level="INFO">${RESULT} = [{'diff': 5.173600000000014e-05}, {'diff': 5.144500000000066e-05}, {'diff': 5.072199999999957e-05}, {'diff': 5.073599999999914e-05}, {'diff': 5.149999999999946e-05}, {'diff': 5.129199999999792e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:03.171" endtime="20201029 12:47:03.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:03.179" level="INFO">${ACCURACY} = {'diff': [5.173600000000014e-05, 5.144500000000066e-05, 5.072199999999957e-05, 5.073599999999914e-05, 5.149999999999946e-05, 5.129199999999792e-05, 5.0901999999998504e-05, 5.169500000000091e-05, 5.115...</msg>
<status status="PASS" starttime="20201029 12:47:03.175" endtime="20201029 12:47:03.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.184" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 12:47:03.183" endtime="20201029 12:47:03.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.186" level="INFO">VALUE: [5.173600000000014e-05, 5.144500000000066e-05, 5.072199999999957e-05, 5.073599999999914e-05, 5.149999999999946e-05, 5.129199999999792e-05, 5.0901999999998504e-05, 5.169500000000091e-05, 5.1152000000002223e-05, 5.094499999999669e-05, 5.1693999999997964e-05, 5.166700000000177e-05, 5.137500000000281e-05, 5.109699999999995e-05, 5.113899999999866e-05, 5.115299999999823e-05, 5.072199999999957e-05, 5.087499999999884e-05, 5.152800000000207e-05, 5.109699999999995e-05, 5.119400000000093e-05, 5.0736999999998617e-05, 5.156900000000131e-05, 5.168000000000186e-05, 5.123599999999964e-05, 5.105500000000124e-05, 5.140299999999848e-05, 5.079200000000089e-05, 5.108399999999985e-05, 5.138899999999891e-05, 5.126399999999878e-05, 5.149999999999946e-05, 5.140299999999848e-05, 5.111099999999952e-05, 5.081899999999709e-05, 5.081900000000056e-05, 5.155599999999774e-05, 5.130499999999802e-05, 5.1443999999997714e-05, 5.1665999999998824e-05, 5.087500000000231e-05, 5.140299999999848e-05, 5.145800000000075e-05, 5.138900000000238e-05, 5.119500000000041e-05, 5.149999999999946e-05, 5.141699999999805e-05, 5.0973000000002766e-05, 5.077799999999785e-05, 5.163900000000263e-05]</msg>
<status status="PASS" starttime="20201029 12:47:03.185" endtime="20201029 12:47:03.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.180" endtime="20201029 12:47:03.188"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:03.191" endtime="20201029 12:47:03.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.190" endtime="20201029 12:47:03.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.189" endtime="20201029 12:47:03.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.830" endtime="20201029 12:47:03.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.830" endtime="20201029 12:47:03.212"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.220" endtime="20201029 12:47:03.238"></status>
</kw>
<msg timestamp="20201029 12:47:03.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:03.219" endtime="20201029 12:47:03.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:03.239" endtime="20201029 12:47:03.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.242" endtime="20201029 12:47:03.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.216" endtime="20201029 12:47:03.244"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.214" endtime="20201029 12:47:03.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.251" endtime="20201029 12:47:03.552"></status>
</kw>
<msg timestamp="20201029 12:47:03.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021732069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021784194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:03.249" endtime="20201029 12:47:03.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021732069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021784194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:03.556" endtime="20201029 12:47:03.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.565" endtime="20201029 12:47:03.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.247" endtime="20201029 12:47:03.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.245" endtime="20201029 12:47:03.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:03.571" level="INFO">${RESULT} = [{'diff': 5.212500000000009e-05}, {'diff': 5.225000000000021e-05}, {'diff': 5.256899999999884e-05}, {'diff': 5.180499999999852e-05}, {'diff': 5.223600000000064e-05}, {'diff': 5.2207999999998034e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:03.568" endtime="20201029 12:47:03.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:03.575" level="INFO">${ACCURACY} = {'diff': [5.212500000000009e-05, 5.225000000000021e-05, 5.256899999999884e-05, 5.180499999999852e-05, 5.223600000000064e-05, 5.2207999999998034e-05, 5.188899999999941e-05, 5.175000000000318e-05, 5.174...</msg>
<status status="PASS" starttime="20201029 12:47:03.572" endtime="20201029 12:47:03.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.580" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 12:47:03.579" endtime="20201029 12:47:03.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.583" level="INFO">VALUE: [5.212500000000009e-05, 5.225000000000021e-05, 5.256899999999884e-05, 5.180499999999852e-05, 5.223600000000064e-05, 5.2207999999998034e-05, 5.188899999999941e-05, 5.175000000000318e-05, 5.174999999999971e-05, 5.174999999999971e-05, 5.257000000000178e-05, 5.227799999999935e-05, 5.198600000000039e-05, 5.213899999999966e-05, 5.181899999999809e-05, 5.236100000000077e-05, 5.225000000000021e-05, 5.2707999999998534e-05, 5.265299999999973e-05, 5.190299999999898e-05, 5.258299999999841e-05, 5.213899999999966e-05, 5.262500000000059e-05, 5.174999999999971e-05, 5.190299999999898e-05, 5.190300000000245e-05, 5.211100000000052e-05, 5.270899999999801e-05, 5.181899999999809e-05, 5.256899999999884e-05, 5.21669999999988e-05, 5.225000000000021e-05, 5.227699999999988e-05, 5.2193999999998464e-05, 5.198600000000039e-05, 5.229200000000239e-05, 5.183300000000113e-05, 5.2471999999997854e-05, 5.227800000000282e-05, 5.229099999999945e-05, 5.240300000000295e-05, 5.211100000000052e-05, 5.255600000000221e-05, 5.251400000000003e-05, 5.187499999999984e-05, 5.209700000000095e-05, 5.256900000000231e-05, 5.179100000000242e-05, 5.225000000000021e-05, 5.2652000000000254e-05]</msg>
<status status="PASS" starttime="20201029 12:47:03.581" endtime="20201029 12:47:03.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.576" endtime="20201029 12:47:03.584"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:03.587" endtime="20201029 12:47:03.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.586" endtime="20201029 12:47:03.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.585" endtime="20201029 12:47:03.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.213" endtime="20201029 12:47:03.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.212" endtime="20201029 12:47:03.608"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.617" endtime="20201029 12:47:03.636"></status>
</kw>
<msg timestamp="20201029 12:47:03.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:03.615" endtime="20201029 12:47:03.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:03.637" endtime="20201029 12:47:03.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.640" endtime="20201029 12:47:03.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.613" endtime="20201029 12:47:03.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.611" endtime="20201029 12:47:03.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.649" endtime="20201029 12:47:03.936"></status>
</kw>
<msg timestamp="20201029 12:47:03.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023243, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023295847, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:47:03.647" endtime="20201029 12:47:03.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023243, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023295847, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:47:03.941" endtime="20201029 12:47:03.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.949" endtime="20201029 12:47:03.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.645" endtime="20201029 12:47:03.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.643" endtime="20201029 12:47:03.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:03.955" level="INFO">${RESULT} = [{'diff': 5.28470000000017e-05}, {'diff': 5.330500000000002e-05}, {'diff': 5.323600000000164e-05}, {'diff': 5.3443999999999714e-05}, {'diff': 5.345800000000275e-05}, {'diff': 5.361099999999855e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:03.952" endtime="20201029 12:47:03.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:03.960" level="INFO">${ACCURACY} = {'diff': [5.28470000000017e-05, 5.330500000000002e-05, 5.323600000000164e-05, 5.3443999999999714e-05, 5.345800000000275e-05, 5.361099999999855e-05, 5.338900000000091e-05, 5.3221999999998604e-05, 5.344...</msg>
<status status="PASS" starttime="20201029 12:47:03.956" endtime="20201029 12:47:03.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.964" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 12:47:03.963" endtime="20201029 12:47:03.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.966" level="INFO">VALUE: [5.28470000000017e-05, 5.330500000000002e-05, 5.323600000000164e-05, 5.3443999999999714e-05, 5.345800000000275e-05, 5.361099999999855e-05, 5.338900000000091e-05, 5.3221999999998604e-05, 5.344499999999919e-05, 5.308299999999891e-05, 5.3430000000000144e-05, 5.356899999999984e-05, 5.3416000000000574e-05, 5.3735999999998674e-05, 5.329100000000045e-05, 5.309699999999848e-05, 5.355500000000027e-05, 5.3735999999998674e-05, 5.354099999999723e-05, 5.315300000000023e-05, 5.363900000000116e-05, 5.358400000000235e-05, 5.361099999999855e-05, 5.31669999999998e-05, 5.283299999999866e-05, 5.305599999999924e-05, 5.3430000000000144e-05, 5.356900000000331e-05, 5.3249999999997744e-05, 5.355500000000027e-05, 5.363900000000116e-05, 5.28609999999978e-05, 5.3221999999998604e-05, 5.359700000000245e-05, 5.3249999999997744e-05, 5.330600000000296e-05, 5.3235999999998174e-05, 5.282000000000203e-05, 5.304199999999967e-05, 5.273600000000114e-05, 5.315300000000023e-05, 5.329199999999992e-05, 5.281900000000256e-05, 5.375000000000171e-05, 5.330500000000002e-05, 5.359700000000245e-05, 5.283299999999866e-05, 5.375000000000171e-05, 5.312499999999762e-05, 5.358399999999888e-05]</msg>
<status status="PASS" starttime="20201029 12:47:03.965" endtime="20201029 12:47:03.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.960" endtime="20201029 12:47:03.969"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:03.972" endtime="20201029 12:47:03.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.971" endtime="20201029 12:47:03.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.969" endtime="20201029 12:47:03.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.609" endtime="20201029 12:47:03.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.608" endtime="20201029 12:47:03.993"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.002" endtime="20201029 12:47:04.020"></status>
</kw>
<msg timestamp="20201029 12:47:04.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.001" endtime="20201029 12:47:04.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.022" endtime="20201029 12:47:04.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.024" endtime="20201029 12:47:04.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.998" endtime="20201029 12:47:04.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.995" endtime="20201029 12:47:04.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.033" endtime="20201029 12:47:04.336"></status>
</kw>
<msg timestamp="20201029 12:47:04.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023155653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023209792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:04.031" endtime="20201029 12:47:04.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023155653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023209792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:04.344" endtime="20201029 12:47:04.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.353" endtime="20201029 12:47:04.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.029" endtime="20201029 12:47:04.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.027" endtime="20201029 12:47:04.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:04.359" level="INFO">${RESULT} = [{'diff': 5.413899999999819e-05}, {'diff': 5.444500000000019e-05}, {'diff': 5.431900000000059e-05}, {'diff': 5.3999999999998494e-05}, {'diff': 5.408299999999991e-05}, {'diff': 5.458300000000041e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:04.356" endtime="20201029 12:47:04.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:04.364" level="INFO">${ACCURACY} = {'diff': [5.413899999999819e-05, 5.444500000000019e-05, 5.431900000000059e-05, 5.3999999999998494e-05, 5.408299999999991e-05, 5.458300000000041e-05, 5.387499999999837e-05, 5.3971999999999354e-05, 5.40...</msg>
<status status="PASS" starttime="20201029 12:47:04.360" endtime="20201029 12:47:04.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.369" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 12:47:04.367" endtime="20201029 12:47:04.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.371" level="INFO">VALUE: [5.413899999999819e-05, 5.444500000000019e-05, 5.431900000000059e-05, 5.3999999999998494e-05, 5.408299999999991e-05, 5.458300000000041e-05, 5.387499999999837e-05, 5.3971999999999354e-05, 5.4027999999997633e-05, 5.41809999999969e-05, 5.445900000000323e-05, 5.415300000000123e-05, 5.468100000000087e-05, 5.457000000000031e-05, 5.387500000000184e-05, 5.431900000000059e-05, 5.4471999999999854e-05, 5.379100000000095e-05, 5.406900000000034e-05, 5.461099999999955e-05, 5.461100000000302e-05, 5.455600000000074e-05, 5.40280000000011e-05, 5.383399999999913e-05, 5.387500000000184e-05, 5.462499999999912e-05, 5.438900000000191e-05, 5.4165999999997855e-05, 5.422299999999908e-05, 5.4499999999998994e-05, 5.404200000000067e-05, 5.430500000000102e-05, 5.379100000000095e-05, 5.388900000000141e-05, 5.381900000000009e-05, 5.4735999999999674e-05, 5.4221999999999604e-05, 5.443100000000062e-05, 5.437499999999887e-05, 5.4249999999998744e-05, 5.409799999999895e-05, 5.441700000000105e-05, 5.420899999999951e-05, 5.458399999999988e-05, 5.404200000000067e-05, 5.431900000000059e-05, 5.4457999999996815e-05, 5.3985999999998924e-05, 5.4735999999999674e-05, 5.4208000000000034e-05]</msg>
<status status="PASS" starttime="20201029 12:47:04.370" endtime="20201029 12:47:04.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.365" endtime="20201029 12:47:04.372"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:04.376" endtime="20201029 12:47:04.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.374" endtime="20201029 12:47:04.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.373" endtime="20201029 12:47:04.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.994" endtime="20201029 12:47:04.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.993" endtime="20201029 12:47:04.396"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.405" endtime="20201029 12:47:04.423"></status>
</kw>
<msg timestamp="20201029 12:47:04.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.404" endtime="20201029 12:47:04.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.425" endtime="20201029 12:47:04.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.427" endtime="20201029 12:47:04.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.401" endtime="20201029 12:47:04.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.399" endtime="20201029 12:47:04.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.436" endtime="20201029 12:47:04.724"></status>
</kw>
<msg timestamp="20201029 12:47:04.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021964722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022020069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:04.434" endtime="20201029 12:47:04.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021964722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022020069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:04.728" endtime="20201029 12:47:04.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.736" endtime="20201029 12:47:04.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.432" endtime="20201029 12:47:04.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.430" endtime="20201029 12:47:04.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:04.742" level="INFO">${RESULT} = [{'diff': 5.534700000000073e-05}, {'diff': 5.531900000000159e-05}, {'diff': 5.5736000000000674e-05}, {'diff': 5.502699999999916e-05}, {'diff': 5.515299999999876e-05}, {'diff': 5.490299999999851e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:04.739" endtime="20201029 12:47:04.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:04.746" level="INFO">${ACCURACY} = {'diff': [5.534700000000073e-05, 5.531900000000159e-05, 5.5736000000000674e-05, 5.502699999999916e-05, 5.515299999999876e-05, 5.490299999999851e-05, 5.512499999999962e-05, 5.5207999999997565e-05, 5.52...</msg>
<status status="PASS" starttime="20201029 12:47:04.743" endtime="20201029 12:47:04.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.751" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 12:47:04.750" endtime="20201029 12:47:04.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.753" level="INFO">VALUE: [5.534700000000073e-05, 5.531900000000159e-05, 5.5736000000000674e-05, 5.502699999999916e-05, 5.515299999999876e-05, 5.490299999999851e-05, 5.512499999999962e-05, 5.5207999999997565e-05, 5.5222000000000604e-05, 5.540299999999901e-05, 5.5249999999999744e-05, 5.476400000000228e-05, 5.5137999999999715e-05, 5.476299999999934e-05, 5.561100000000055e-05, 5.529099999999898e-05, 5.504099999999873e-05, 5.5486000000000424e-05, 5.565299999999926e-05, 5.479200000000142e-05, 5.518100000000137e-05, 5.53610000000003e-05, 5.506900000000134e-05, 5.501400000000253e-05, 5.533400000000063e-05, 5.505600000000124e-05, 5.502699999999916e-05, 5.522300000000008e-05, 5.4999999999999494e-05, 5.520900000000051e-05, 5.533299999999769e-05, 5.530500000000202e-05, 5.491700000000155e-05, 5.5429999999998675e-05, 5.537499999999987e-05, 5.540299999999901e-05, 5.55280000000026e-05, 5.5722000000001104e-05, 5.5735999999997204e-05, 5.532000000000106e-05, 5.509799999999995e-05, 5.480600000000099e-05, 5.475000000000271e-05, 5.529099999999898e-05, 5.520900000000051e-05, 5.533299999999769e-05, 5.479099999999848e-05, 5.533300000000116e-05, 5.51809999999979e-05, 5.525000000000321e-05]</msg>
<status status="PASS" starttime="20201029 12:47:04.752" endtime="20201029 12:47:04.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.747" endtime="20201029 12:47:04.755"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:04.759" endtime="20201029 12:47:04.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.757" endtime="20201029 12:47:04.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.756" endtime="20201029 12:47:04.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.397" endtime="20201029 12:47:04.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.397" endtime="20201029 12:47:04.780"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.788" endtime="20201029 12:47:04.806"></status>
</kw>
<msg timestamp="20201029 12:47:04.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.787" endtime="20201029 12:47:04.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.808" endtime="20201029 12:47:04.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.810" endtime="20201029 12:47:04.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.784" endtime="20201029 12:47:04.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.782" endtime="20201029 12:47:04.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.819" endtime="20201029 12:47:05.113"></status>
</kw>
<msg timestamp="20201029 12:47:05.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022702292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022758486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:04.817" endtime="20201029 12:47:05.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022702292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022758486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:05.117" endtime="20201029 12:47:05.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.125" endtime="20201029 12:47:05.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.815" endtime="20201029 12:47:05.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.813" endtime="20201029 12:47:05.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:05.132" level="INFO">${RESULT} = [{'diff': 5.6194000000002464e-05}, {'diff': 5.6721999999998635e-05}, {'diff': 5.637500000000087e-05}, {'diff': 5.606900000000234e-05}, {'diff': 5.613900000000019e-05}, {'diff': 5.662500000000112e-05},...</msg>
<status status="PASS" starttime="20201029 12:47:05.129" endtime="20201029 12:47:05.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:05.136" level="INFO">${ACCURACY} = {'diff': [5.6194000000002464e-05, 5.6721999999998635e-05, 5.637500000000087e-05, 5.606900000000234e-05, 5.613900000000019e-05, 5.662500000000112e-05, 5.640300000000001e-05, 5.6055999999998773e-05, 5.6...</msg>
<status status="PASS" starttime="20201029 12:47:05.133" endtime="20201029 12:47:05.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.140" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 12:47:05.139" endtime="20201029 12:47:05.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.143" level="INFO">VALUE: [5.6194000000002464e-05, 5.6721999999998635e-05, 5.637500000000087e-05, 5.606900000000234e-05, 5.613900000000019e-05, 5.662500000000112e-05, 5.640300000000001e-05, 5.6055999999998773e-05, 5.612500000000062e-05, 5.640300000000001e-05, 5.606999999999834e-05, 5.6485999999997955e-05, 5.6208000000002034e-05, 5.579100000000295e-05, 5.616699999999933e-05, 5.6221999999998135e-05, 5.595900000000126e-05, 5.591700000000255e-05, 5.5777999999999384e-05, 5.5791999999998954e-05, 5.6514000000000564e-05, 5.6277999999999884e-05, 5.577699999999991e-05, 5.5888000000000465e-05, 5.670900000000201e-05, 5.6444000000002714e-05, 5.6193999999998995e-05, 5.613900000000019e-05, 5.606899999999887e-05, 5.5957999999998315e-05, 5.583299999999819e-05, 5.590299999999951e-05, 5.5943999999998745e-05, 5.5972000000001354e-05, 5.5750000000000244e-05, 5.619500000000194e-05, 5.6679999999999925e-05, 5.609799999999748e-05, 5.641699999999958e-05, 5.6041999999999204e-05, 5.631899999999912e-05, 5.588899999999994e-05, 5.6221999999998135e-05, 5.613900000000019e-05, 5.658299999999894e-05, 5.588899999999994e-05, 5.6277999999999884e-05, 5.656899999999937e-05, 5.6235999999997704e-05, 5.663900000000069e-05]</msg>
<status status="PASS" starttime="20201029 12:47:05.141" endtime="20201029 12:47:05.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.137" endtime="20201029 12:47:05.145"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:05.148" endtime="20201029 12:47:05.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.147" endtime="20201029 12:47:05.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.146" endtime="20201029 12:47:05.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.781" endtime="20201029 12:47:05.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.780" endtime="20201029 12:47:05.169"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.178" endtime="20201029 12:47:05.195"></status>
</kw>
<msg timestamp="20201029 12:47:05.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.176" endtime="20201029 12:47:05.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.196" endtime="20201029 12:47:05.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.199" endtime="20201029 12:47:05.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.174" endtime="20201029 12:47:05.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.171" endtime="20201029 12:47:05.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.208" endtime="20201029 12:47:05.494"></status>
</kw>
<msg timestamp="20201029 12:47:05.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021691639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021748972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:05.206" endtime="20201029 12:47:05.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021691639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021748972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:05.498" endtime="20201029 12:47:05.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.506" endtime="20201029 12:47:05.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.204" endtime="20201029 12:47:05.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.202" endtime="20201029 12:47:05.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:05.513" level="INFO">${RESULT} = [{'diff': 5.733299999999969e-05}, {'diff': 5.7721999999999635e-05}, {'diff': 5.7069999999999343e-05}, {'diff': 5.70550000000003e-05}, {'diff': 5.6986000000001924e-05}, {'diff': 5.693099999999965e-05},...</msg>
<status status="PASS" starttime="20201029 12:47:05.510" endtime="20201029 12:47:05.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:05.520" level="INFO">${ACCURACY} = {'diff': [5.733299999999969e-05, 5.7721999999999635e-05, 5.7069999999999343e-05, 5.70550000000003e-05, 5.6986000000001924e-05, 5.693099999999965e-05, 5.738900000000144e-05, 5.6805999999999524e-05, 5.7...</msg>
<status status="PASS" starttime="20201029 12:47:05.514" endtime="20201029 12:47:05.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.525" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 12:47:05.524" endtime="20201029 12:47:05.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.527" level="INFO">VALUE: [5.733299999999969e-05, 5.7721999999999635e-05, 5.7069999999999343e-05, 5.70550000000003e-05, 5.6986000000001924e-05, 5.693099999999965e-05, 5.738900000000144e-05, 5.6805999999999524e-05, 5.7292000000000454e-05, 5.709699999999901e-05, 5.7638000000002215e-05, 5.6888000000001465e-05, 5.6901999999997566e-05, 5.73749999999984e-05, 5.679100000000048e-05, 5.680500000000005e-05, 5.743100000000015e-05, 5.7694000000000495e-05, 5.6736000000001674e-05, 5.738900000000144e-05, 5.7485999999998955e-05, 5.7735999999999205e-05, 5.7583999999999413e-05, 5.740300000000101e-05, 5.694499999999922e-05, 5.7236000000002174e-05, 5.7166000000000855e-05, 5.7236000000002174e-05, 5.772300000000258e-05, 5.737500000000187e-05, 5.7486000000002424e-05, 5.688899999999747e-05, 5.7069999999999343e-05, 5.7235999999998705e-05, 5.6791999999999954e-05, 5.709699999999901e-05, 5.752699999999819e-05, 5.690300000000051e-05, 5.6902000000001035e-05, 5.7236000000002174e-05, 5.6943999999999745e-05, 5.679100000000048e-05, 5.6986000000001924e-05, 5.681899999999962e-05, 5.715300000000076e-05, 5.743100000000015e-05, 5.769499999999997e-05, 5.7457999999999815e-05, 5.741700000000058e-05, 5.713899999999772e-05]</msg>
<status status="PASS" starttime="20201029 12:47:05.526" endtime="20201029 12:47:05.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.521" endtime="20201029 12:47:05.528"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:05.532" endtime="20201029 12:47:05.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.531" endtime="20201029 12:47:05.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.529" endtime="20201029 12:47:05.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.170" endtime="20201029 12:47:05.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.169" endtime="20201029 12:47:05.553"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.561" endtime="20201029 12:47:05.579"></status>
</kw>
<msg timestamp="20201029 12:47:05.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.560" endtime="20201029 12:47:05.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.580" endtime="20201029 12:47:05.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.583" endtime="20201029 12:47:05.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.557" endtime="20201029 12:47:05.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.555" endtime="20201029 12:47:05.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.592" endtime="20201029 12:47:05.878"></status>
</kw>
<msg timestamp="20201029 12:47:05.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022035694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022093556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:05.590" endtime="20201029 12:47:05.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022035694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022093556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:05.882" endtime="20201029 12:47:05.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.890" endtime="20201029 12:47:05.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.588" endtime="20201029 12:47:05.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.586" endtime="20201029 12:47:05.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:05.896" level="INFO">${RESULT} = [{'diff': 5.78619999999988e-05}, {'diff': 5.813899999999872e-05}, {'diff': 5.8250000000002744e-05}, {'diff': 5.861100000000008e-05}, {'diff': 5.856900000000137e-05}, {'diff': 5.7958000000000315e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:05.893" endtime="20201029 12:47:05.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:05.900" level="INFO">${ACCURACY} = {'diff': [5.78619999999988e-05, 5.813899999999872e-05, 5.8250000000002744e-05, 5.861100000000008e-05, 5.856900000000137e-05, 5.7958000000000315e-05, 5.8485999999999955e-05, 5.808300000000044e-05, 5.80...</msg>
<status status="PASS" starttime="20201029 12:47:05.897" endtime="20201029 12:47:05.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.905" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 12:47:05.904" endtime="20201029 12:47:05.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.907" level="INFO">VALUE: [5.78619999999988e-05, 5.813899999999872e-05, 5.8250000000002744e-05, 5.861100000000008e-05, 5.856900000000137e-05, 5.7958000000000315e-05, 5.8485999999999955e-05, 5.808300000000044e-05, 5.808300000000044e-05, 5.8555999999997804e-05, 5.7833999999999663e-05, 5.812499999999915e-05, 5.8292000000001454e-05, 5.8264000000002314e-05, 5.820900000000004e-05, 5.795899999999979e-05, 5.815300000000176e-05, 5.7735999999999205e-05, 5.809700000000001e-05, 5.840299999999854e-05, 5.861100000000008e-05, 5.8249999999999275e-05, 5.811099999999958e-05, 5.862499999999965e-05, 5.8235999999999705e-05, 5.840300000000201e-05, 5.8263999999998844e-05, 5.8305999999997554e-05, 5.8514000000002564e-05, 5.795899999999979e-05, 5.8222000000000135e-05, 5.7763999999998344e-05, 5.8387999999999496e-05, 5.784699999999976e-05, 5.7985999999999455e-05, 5.8278000000001884e-05, 5.787500000000237e-05, 5.7971999999999885e-05, 5.7985999999999455e-05, 5.834699999999679e-05, 5.8249999999999275e-05, 5.861100000000008e-05, 5.8584000000000414e-05, 5.798699999999893e-05, 5.7820000000000094e-05, 5.8152000000002285e-05, 5.780500000000105e-05, 5.787500000000237e-05, 5.7958000000000315e-05, 5.8430000000001675e-05]</msg>
<status status="PASS" starttime="20201029 12:47:05.906" endtime="20201029 12:47:05.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.901" endtime="20201029 12:47:05.909"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:05.912" endtime="20201029 12:47:05.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.911" endtime="20201029 12:47:05.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.910" endtime="20201029 12:47:05.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.554" endtime="20201029 12:47:05.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.553" endtime="20201029 12:47:05.933"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.941" endtime="20201029 12:47:05.960"></status>
</kw>
<msg timestamp="20201029 12:47:05.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.940" endtime="20201029 12:47:05.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.961" endtime="20201029 12:47:05.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.964" endtime="20201029 12:47:05.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.937" endtime="20201029 12:47:05.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.935" endtime="20201029 12:47:05.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.973" endtime="20201029 12:47:06.258"></status>
</kw>
<msg timestamp="20201029 12:47:06.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022503542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022562403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:05.971" endtime="20201029 12:47:06.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022503542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022562403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:06.262" endtime="20201029 12:47:06.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.270" endtime="20201029 12:47:06.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.969" endtime="20201029 12:47:06.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.967" endtime="20201029 12:47:06.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:06.277" level="INFO">${RESULT} = [{'diff': 5.886100000000033e-05}, {'diff': 5.897300000000036e-05}, {'diff': 5.9291999999998984e-05}, {'diff': 5.9485999999997485e-05}, {'diff': 5.890299999999904e-05}, {'diff': 5.8763999999999345e-05}...</msg>
<status status="PASS" starttime="20201029 12:47:06.274" endtime="20201029 12:47:06.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:06.281" level="INFO">${ACCURACY} = {'diff': [5.886100000000033e-05, 5.897300000000036e-05, 5.9291999999998984e-05, 5.9485999999997485e-05, 5.890299999999904e-05, 5.8763999999999345e-05, 5.955499999999933e-05, 5.912500000000015e-05, 5.9...</msg>
<status status="PASS" starttime="20201029 12:47:06.278" endtime="20201029 12:47:06.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.285" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 12:47:06.284" endtime="20201029 12:47:06.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.288" level="INFO">VALUE: [5.886100000000033e-05, 5.897300000000036e-05, 5.9291999999998984e-05, 5.9485999999997485e-05, 5.890299999999904e-05, 5.8763999999999345e-05, 5.955499999999933e-05, 5.912500000000015e-05, 5.969500000000197e-05, 5.8736000000000205e-05, 5.95689999999989e-05, 5.930500000000255e-05, 5.9722000000001635e-05, 5.9236000000000705e-05, 5.9570000000001844e-05, 5.895900000000079e-05, 5.90689999999984e-05, 5.9570000000001844e-05, 5.909700000000101e-05, 5.912500000000015e-05, 5.933300000000169e-05, 5.956900000000237e-05, 5.913899999999972e-05, 5.881899999999815e-05, 5.9250000000000275e-05, 5.958299999999847e-05, 5.944500000000172e-05, 5.913899999999972e-05, 5.9472000000001385e-05, 5.9570000000001844e-05, 5.898699999999993e-05, 5.8985999999996985e-05, 5.9402000000000066e-05, 5.970900000000154e-05, 5.881900000000162e-05, 5.936099999999736e-05, 5.9707999999998596e-05, 5.9291999999998984e-05, 5.934700000000126e-05, 5.909700000000101e-05, 5.888899999999947e-05, 5.9069999999997874e-05, 5.9055999999998304e-05, 5.931899999999865e-05, 5.940299999999954e-05, 5.88749999999999e-05, 5.90689999999984e-05, 5.9236000000000705e-05, 5.88749999999999e-05, 5.8929999999998706e-05]</msg>
<status status="PASS" starttime="20201029 12:47:06.286" endtime="20201029 12:47:06.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.282" endtime="20201029 12:47:06.301"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:06.305" endtime="20201029 12:47:06.324"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.304" endtime="20201029 12:47:06.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.302" endtime="20201029 12:47:06.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.934" endtime="20201029 12:47:06.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.933" endtime="20201029 12:47:06.326"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.334" endtime="20201029 12:47:06.352"></status>
</kw>
<msg timestamp="20201029 12:47:06.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.333" endtime="20201029 12:47:06.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.353" endtime="20201029 12:47:06.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.356" endtime="20201029 12:47:06.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.330" endtime="20201029 12:47:06.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.328" endtime="20201029 12:47:06.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.365" endtime="20201029 12:47:06.649"></status>
</kw>
<msg timestamp="20201029 12:47:06.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022022, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022082333, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:47:06.363" endtime="20201029 12:47:06.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022022, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022082333, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:47:06.653" endtime="20201029 12:47:06.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.662" endtime="20201029 12:47:06.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.361" endtime="20201029 12:47:06.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.359" endtime="20201029 12:47:06.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:06.668" level="INFO">${RESULT} = [{'diff': 6.033299999999922e-05}, {'diff': 5.9888999999997e-05}, {'diff': 5.990300000000004e-05}, {'diff': 5.988900000000047e-05}, {'diff': 6.041700000000011e-05}, {'diff': 5.987499999999743e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:06.665" endtime="20201029 12:47:06.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:06.673" level="INFO">${ACCURACY} = {'diff': [6.033299999999922e-05, 5.9888999999997e-05, 5.990300000000004e-05, 5.988900000000047e-05, 6.041700000000011e-05, 5.987499999999743e-05, 6.066700000000036e-05, 5.990300000000004e-05, 5.973600...</msg>
<status status="PASS" starttime="20201029 12:47:06.669" endtime="20201029 12:47:06.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.678" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 12:47:06.677" endtime="20201029 12:47:06.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.680" level="INFO">VALUE: [6.033299999999922e-05, 5.9888999999997e-05, 5.990300000000004e-05, 5.988900000000047e-05, 6.041700000000011e-05, 5.987499999999743e-05, 6.066700000000036e-05, 5.990300000000004e-05, 5.9736000000001205e-05, 6.061100000000208e-05, 5.973700000000068e-05, 6.0500000000001525e-05, 6.005499999999983e-05, 6.0249999999997805e-05, 6.040300000000054e-05, 6.005499999999983e-05, 6.0250000000001275e-05, 6.0735999999998735e-05, 5.9985999999997985e-05, 6.0736000000002205e-05, 6.062499999999818e-05, 6.065300000000079e-05, 6.0084000000001914e-05, 6.0415999999997166e-05, 6.055500000000033e-05, 6.0721999999999166e-05, 6.029099999999704e-05, 6.058299999999947e-05, 6.0500000000001525e-05, 5.9736000000001205e-05, 5.986100000000133e-05, 6.0735999999998735e-05, 6.061100000000208e-05, 6.013900000000072e-05, 6.015300000000029e-05, 5.995899999999832e-05, 6.055500000000033e-05, 6.0735999999998735e-05, 5.9972000000001885e-05, 6.05689999999999e-05, 6.05689999999999e-05, 6.005499999999983e-05, 6.043099999999968e-05, 6.040300000000054e-05, 6.0222000000002135e-05, 6.013900000000072e-05, 6.0250000000001275e-05, 6.0569999999999374e-05, 6.0527999999997195e-05, 6.023700000000118e-05]</msg>
<status status="PASS" starttime="20201029 12:47:06.679" endtime="20201029 12:47:06.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.674" endtime="20201029 12:47:06.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:06.685" endtime="20201029 12:47:06.704"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.684" endtime="20201029 12:47:06.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.682" endtime="20201029 12:47:06.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.327" endtime="20201029 12:47:06.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.326" endtime="20201029 12:47:06.706"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.714" endtime="20201029 12:47:06.733"></status>
</kw>
<msg timestamp="20201029 12:47:06.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.713" endtime="20201029 12:47:06.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.734" endtime="20201029 12:47:06.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.737" endtime="20201029 12:47:06.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.710" endtime="20201029 12:47:06.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.708" endtime="20201029 12:47:06.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.746" endtime="20201029 12:47:07.031"></status>
</kw>
<msg timestamp="20201029 12:47:07.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021817278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021878806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:06.744" endtime="20201029 12:47:07.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021817278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021878806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:07.036" endtime="20201029 12:47:07.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.044" endtime="20201029 12:47:07.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.742" endtime="20201029 12:47:07.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.740" endtime="20201029 12:47:07.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:07.051" level="INFO">${RESULT} = [{'diff': 6.152800000000166e-05}, {'diff': 6.0735999999998735e-05}, {'diff': 6.086100000000233e-05}, {'diff': 6.140200000000207e-05}, {'diff': 6.137499999999893e-05}, {'diff': 6.10690000000004e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:07.048" endtime="20201029 12:47:07.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:07.056" level="INFO">${ACCURACY} = {'diff': [6.152800000000166e-05, 6.0735999999998735e-05, 6.086100000000233e-05, 6.140200000000207e-05, 6.137499999999893e-05, 6.10690000000004e-05, 6.123599999999924e-05, 6.144500000000025e-05, 6.1208...</msg>
<status status="PASS" starttime="20201029 12:47:07.052" endtime="20201029 12:47:07.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.060" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 12:47:07.059" endtime="20201029 12:47:07.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.063" level="INFO">VALUE: [6.152800000000166e-05, 6.0735999999998735e-05, 6.086100000000233e-05, 6.140200000000207e-05, 6.137499999999893e-05, 6.10690000000004e-05, 6.123599999999924e-05, 6.144500000000025e-05, 6.12080000000001e-05, 6.143100000000068e-05, 6.157000000000037e-05, 6.087499999999843e-05, 6.112500000000215e-05, 6.120899999999957e-05, 6.163899999999875e-05, 6.15140000000021e-05, 6.08750000000019e-05, 6.115200000000182e-05, 6.086099999999886e-05, 6.147199999999992e-05, 6.080499999999711e-05, 6.0722000000002635e-05, 6.093100000000018e-05, 6.109799999999901e-05, 6.165300000000179e-05, 6.123599999999924e-05, 6.104200000000073e-05, 6.163899999999875e-05, 6.0944000000000276e-05, 6.0985999999998985e-05, 6.0888000000001996e-05, 6.116600000000139e-05, 6.173599999999974e-05, 6.105500000000083e-05, 6.0986000000002455e-05, 6.105499999999736e-05, 6.086099999999886e-05, 6.123599999999924e-05, 6.108399999999944e-05, 6.123599999999924e-05, 6.158399999999994e-05, 6.141599999999817e-05, 6.090300000000104e-05, 6.165300000000179e-05, 6.108299999999997e-05, 6.0778000000000915e-05, 6.0971999999999416e-05, 6.087499999999843e-05, 6.145800000000035e-05, 6.081900000000015e-05]</msg>
<status status="PASS" starttime="20201029 12:47:07.061" endtime="20201029 12:47:07.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.057" endtime="20201029 12:47:07.064"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:07.068" endtime="20201029 12:47:07.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.066" endtime="20201029 12:47:07.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.065" endtime="20201029 12:47:07.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.707" endtime="20201029 12:47:07.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.706" endtime="20201029 12:47:07.089"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.097" endtime="20201029 12:47:07.116"></status>
</kw>
<msg timestamp="20201029 12:47:07.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:07.096" endtime="20201029 12:47:07.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:07.117" endtime="20201029 12:47:07.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.120" endtime="20201029 12:47:07.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.093" endtime="20201029 12:47:07.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.091" endtime="20201029 12:47:07.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.128" endtime="20201029 12:47:07.417"></status>
</kw>
<msg timestamp="20201029 12:47:07.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022718667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022780458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:07.127" endtime="20201029 12:47:07.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022718667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022780458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:07.422" endtime="20201029 12:47:07.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.430" endtime="20201029 12:47:07.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.124" endtime="20201029 12:47:07.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.123" endtime="20201029 12:47:07.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:07.436" level="INFO">${RESULT} = [{'diff': 6.179099999999854e-05}, {'diff': 6.187499999999943e-05}, {'diff': 6.247200000000092e-05}, {'diff': 6.204100000000226e-05}, {'diff': 6.248600000000049e-05}, {'diff': 6.17080000000006e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:07.433" endtime="20201029 12:47:07.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:07.440" level="INFO">${ACCURACY} = {'diff': [6.179099999999854e-05, 6.187499999999943e-05, 6.247200000000092e-05, 6.204100000000226e-05, 6.248600000000049e-05, 6.17080000000006e-05, 6.265299999999932e-05, 6.176399999999888e-05, 6.24029...</msg>
<status status="PASS" starttime="20201029 12:47:07.437" endtime="20201029 12:47:07.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.447" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 12:47:07.445" endtime="20201029 12:47:07.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.452" level="INFO">VALUE: [6.179099999999854e-05, 6.187499999999943e-05, 6.247200000000092e-05, 6.204100000000226e-05, 6.248600000000049e-05, 6.17080000000006e-05, 6.265299999999932e-05, 6.176399999999888e-05, 6.240299999999907e-05, 6.237499999999993e-05, 6.223699999999971e-05, 6.257000000000137e-05, 6.238800000000003e-05, 6.238800000000003e-05, 6.19019999999991e-05, 6.248600000000049e-05, 6.241699999999864e-05, 6.213899999999925e-05, 6.26950000000015e-05, 6.247199999999745e-05, 6.248600000000049e-05, 6.247300000000039e-05, 6.1888999999999e-05, 6.213899999999925e-05, 6.25690000000019e-05, 6.222300000000014e-05, 6.248699999999996e-05, 6.263800000000028e-05, 6.213899999999925e-05, 6.201399999999913e-05, 6.233300000000122e-05, 6.27500000000003e-05, 6.222200000000067e-05, 6.250000000000006e-05, 6.232000000000112e-05, 6.202800000000216e-05, 6.265299999999932e-05, 6.230599999999809e-05, 6.191600000000214e-05, 6.263899999999975e-05, 6.226399999999938e-05, 6.206899999999793e-05, 6.231899999999818e-05, 6.204099999999879e-05, 6.177800000000191e-05, 6.176399999999888e-05, 6.244500000000125e-05, 6.202800000000216e-05, 6.247300000000039e-05, 6.197299999999989e-05]</msg>
<status status="PASS" starttime="20201029 12:47:07.449" endtime="20201029 12:47:07.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.441" endtime="20201029 12:47:07.456"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:07.464" endtime="20201029 12:47:07.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.461" endtime="20201029 12:47:07.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.458" endtime="20201029 12:47:07.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.089" endtime="20201029 12:47:07.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.089" endtime="20201029 12:47:07.488"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.506" endtime="20201029 12:47:07.525"></status>
</kw>
<msg timestamp="20201029 12:47:07.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:07.502" endtime="20201029 12:47:07.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:07.528" endtime="20201029 12:47:07.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.535" endtime="20201029 12:47:07.539"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.497" endtime="20201029 12:47:07.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.493" endtime="20201029 12:47:07.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.554" endtime="20201029 12:47:07.840"></status>
</kw>
<msg timestamp="20201029 12:47:07.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034725097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034788542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:07.551" endtime="20201029 12:47:07.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034725097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034788542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:07.844" endtime="20201029 12:47:07.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.853" endtime="20201029 12:47:07.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.546" endtime="20201029 12:47:07.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.543" endtime="20201029 12:47:07.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:07.859" level="INFO">${RESULT} = [{'diff': 6.344499999999531e-05}, {'diff': 6.345799999999541e-05}, {'diff': 6.322200000000167e-05}, {'diff': 6.362499999999771e-05}, {'diff': 6.326400000000038e-05}, {'diff': 6.276399999999988e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:07.856" endtime="20201029 12:47:07.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:07.864" level="INFO">${ACCURACY} = {'diff': [6.344499999999531e-05, 6.345799999999541e-05, 6.322200000000167e-05, 6.362499999999771e-05, 6.326400000000038e-05, 6.276399999999988e-05, 6.37080000000026e-05, 6.32359999999943e-05, 6.275000...</msg>
<status status="PASS" starttime="20201029 12:47:07.860" endtime="20201029 12:47:07.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.869" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 12:47:07.868" endtime="20201029 12:47:07.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.872" level="INFO">VALUE: [6.344499999999531e-05, 6.345799999999541e-05, 6.322200000000167e-05, 6.362499999999771e-05, 6.326400000000038e-05, 6.276399999999988e-05, 6.37080000000026e-05, 6.32359999999943e-05, 6.27500000000003e-05, 6.273600000000074e-05, 6.366699999999642e-05, 6.309700000000501e-05, 6.348600000000149e-05, 6.288900000000347e-05, 6.338899999999703e-05, 6.365200000000432e-05, 6.370900000000207e-05, 6.316700000000286e-05, 6.336099999999789e-05, 6.27080000000016e-05, 6.355599999999934e-05, 6.35699999999989e-05, 6.34029999999966e-05, 6.307000000000534e-05, 6.347200000000192e-05, 6.288799999999706e-05, 6.309699999999807e-05, 6.311099999999764e-05, 6.306899999999893e-05, 6.312500000000415e-05, 6.32500000000008e-05, 6.363900000000422e-05, 6.331999999999866e-05, 6.29029999999961e-05, 6.288900000000347e-05, 6.288900000000347e-05, 6.30699999999984e-05, 6.362499999999771e-05, 6.290200000000357e-05, 6.326400000000038e-05, 6.295800000000185e-05, 6.326400000000038e-05, 6.316699999999592e-05, 6.294500000000175e-05, 6.319399999999559e-05, 6.297199999999448e-05, 6.32359999999943e-05, 6.302700000000022e-05, 6.340300000000354e-05, 6.35699999999989e-05]</msg>
<status status="PASS" starttime="20201029 12:47:07.870" endtime="20201029 12:47:07.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.865" endtime="20201029 12:47:07.874"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:07.882" endtime="20201029 12:47:07.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.879" endtime="20201029 12:47:07.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.876" endtime="20201029 12:47:07.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.490" endtime="20201029 12:47:07.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.489" endtime="20201029 12:47:07.907"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.925" endtime="20201029 12:47:07.946"></status>
</kw>
<msg timestamp="20201029 12:47:07.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:07.921" endtime="20201029 12:47:07.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:07.949" endtime="20201029 12:47:07.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.955" endtime="20201029 12:47:07.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.916" endtime="20201029 12:47:07.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.912" endtime="20201029 12:47:07.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.974" endtime="20201029 12:47:08.260"></status>
</kw>
<msg timestamp="20201029 12:47:08.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036163264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036227444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:07.970" endtime="20201029 12:47:08.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036163264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036227444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:08.265" endtime="20201029 12:47:08.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.273" endtime="20201029 12:47:08.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.965" endtime="20201029 12:47:08.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.961" endtime="20201029 12:47:08.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:08.279" level="INFO">${RESULT} = [{'diff': 6.417999999999702e-05}, {'diff': 6.42080000000031e-05}, {'diff': 6.444399999999684e-05}, {'diff': 6.391600000000414e-05}, {'diff': 6.440300000000454e-05}, {'diff': 6.380500000000011e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:08.276" endtime="20201029 12:47:08.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:08.284" level="INFO">${ACCURACY} = {'diff': [6.417999999999702e-05, 6.42080000000031e-05, 6.444399999999684e-05, 6.391600000000414e-05, 6.440300000000454e-05, 6.380500000000011e-05, 6.380599999999959e-05, 6.433399999999923e-05, 6.42220...</msg>
<status status="PASS" starttime="20201029 12:47:08.280" endtime="20201029 12:47:08.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.288" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 12:47:08.287" endtime="20201029 12:47:08.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.290" level="INFO">VALUE: [6.417999999999702e-05, 6.42080000000031e-05, 6.444399999999684e-05, 6.391600000000414e-05, 6.440300000000454e-05, 6.380500000000011e-05, 6.380599999999959e-05, 6.433399999999923e-05, 6.422200000000267e-05, 6.380599999999959e-05, 6.398600000000199e-05, 6.434700000000626e-05, 6.40699999999994e-05, 6.390199999999763e-05, 6.39029999999971e-05, 6.406899999999993e-05, 6.454100000000129e-05, 6.413899999999778e-05, 6.422200000000267e-05, 6.383299999999925e-05, 6.397200000000242e-05, 6.45280000000012e-05, 6.455600000000034e-05, 6.466699999999742e-05, 6.411099999999864e-05, 6.381999999999916e-05, 6.417999999999702e-05, 6.379200000000002e-05, 6.424999999999487e-05, 6.377800000000045e-05, 6.394400000000328e-05, 6.465299999999785e-05, 6.405599999999984e-05, 6.42359999999953e-05, 6.444399999999684e-05, 6.408399999999898e-05, 6.391600000000414e-05, 6.412499999999821e-05, 6.441699999999717e-05, 6.413799999999831e-05, 6.424999999999487e-05, 6.449999999999512e-05, 6.474999999999537e-05, 6.423600000000224e-05, 6.395799999999591e-05, 6.401400000000113e-05, 6.40829999999995e-05, 6.394400000000328e-05, 6.469400000000403e-05, 6.40699999999994e-05]</msg>
<status status="PASS" starttime="20201029 12:47:08.289" endtime="20201029 12:47:08.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.284" endtime="20201029 12:47:08.292"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:08.295" endtime="20201029 12:47:08.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.294" endtime="20201029 12:47:08.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.293" endtime="20201029 12:47:08.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.908" endtime="20201029 12:47:08.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.907" endtime="20201029 12:47:08.316"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.324" endtime="20201029 12:47:08.344"></status>
</kw>
<msg timestamp="20201029 12:47:08.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:08.323" endtime="20201029 12:47:08.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:08.346" endtime="20201029 12:47:08.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.348" endtime="20201029 12:47:08.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.320" endtime="20201029 12:47:08.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.318" endtime="20201029 12:47:08.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.357" endtime="20201029 12:47:08.642"></status>
</kw>
<msg timestamp="20201029 12:47:08.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023053958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023119486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:08.355" endtime="20201029 12:47:08.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023053958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023119486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:08.646" endtime="20201029 12:47:08.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.655" endtime="20201029 12:47:08.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.353" endtime="20201029 12:47:08.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.351" endtime="20201029 12:47:08.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:08.661" level="INFO">${RESULT} = [{'diff': 6.55280000000022e-05}, {'diff': 6.50830000000005e-05}, {'diff': 6.524999999999934e-05}, {'diff': 6.567999999999852e-05}, {'diff': 6.549999999999959e-05}, {'diff': 6.486099999999939e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:08.658" endtime="20201029 12:47:08.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:08.665" level="INFO">${ACCURACY} = {'diff': [6.55280000000022e-05, 6.50830000000005e-05, 6.524999999999934e-05, 6.567999999999852e-05, 6.549999999999959e-05, 6.486099999999939e-05, 6.512499999999921e-05, 6.555600000000134e-05, 6.532000...</msg>
<status status="PASS" starttime="20201029 12:47:08.662" endtime="20201029 12:47:08.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.670" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 12:47:08.669" endtime="20201029 12:47:08.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.672" level="INFO">VALUE: [6.55280000000022e-05, 6.50830000000005e-05, 6.524999999999934e-05, 6.567999999999852e-05, 6.549999999999959e-05, 6.486099999999939e-05, 6.512499999999921e-05, 6.555600000000134e-05, 6.532000000000066e-05, 6.52639999999989e-05, 6.47769999999985e-05, 6.57220000000007e-05, 6.570800000000113e-05, 6.540300000000207e-05, 6.495799999999691e-05, 6.529199999999805e-05, 6.54029999999986e-05, 6.548600000000002e-05, 6.523599999999977e-05, 6.495899999999985e-05, 6.509700000000007e-05, 6.544500000000078e-05, 6.526299999999943e-05, 6.559800000000005e-05, 6.508299999999703e-05, 6.556900000000143e-05, 6.529100000000204e-05, 6.49029999999981e-05, 6.555499999999839e-05, 6.515300000000182e-05, 6.48340000000032e-05, 6.527800000000195e-05, 6.476400000000188e-05, 6.536099999999989e-05, 6.497299999999942e-05, 6.569399999999809e-05, 6.57090000000006e-05, 6.527800000000195e-05, 6.526400000000238e-05, 6.54440000000013e-05, 6.511099999999964e-05, 6.486099999999939e-05, 6.490300000000157e-05, 6.513900000000225e-05, 6.523600000000324e-05, 6.555600000000134e-05, 6.548600000000002e-05, 6.55700000000009e-05, 6.499999999999909e-05, 6.498599999999952e-05]</msg>
<status status="PASS" starttime="20201029 12:47:08.671" endtime="20201029 12:47:08.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.666" endtime="20201029 12:47:08.674"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:08.678" endtime="20201029 12:47:08.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.676" endtime="20201029 12:47:08.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.675" endtime="20201029 12:47:08.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.317" endtime="20201029 12:47:08.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.316" endtime="20201029 12:47:08.701"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.719" endtime="20201029 12:47:08.741"></status>
</kw>
<msg timestamp="20201029 12:47:08.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:08.716" endtime="20201029 12:47:08.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:08.744" endtime="20201029 12:47:08.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.749" endtime="20201029 12:47:08.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.711" endtime="20201029 12:47:08.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.706" endtime="20201029 12:47:08.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.768" endtime="20201029 12:47:09.055"></status>
</kw>
<msg timestamp="20201029 12:47:09.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035959167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0360255, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:08.765" endtime="20201029 12:47:09.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035959167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0360255, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:09.059" endtime="20201029 12:47:09.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.067" endtime="20201029 12:47:09.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.759" endtime="20201029 12:47:09.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.756" endtime="20201029 12:47:09.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:09.074" level="INFO">${RESULT} = [{'diff': 6.633300000000175e-05}, {'diff': 6.572199999999723e-05}, {'diff': 6.608400000000098e-05}, {'diff': 6.586100000000039e-05}, {'diff': 6.591700000000561e-05}, {'diff': 6.59029999999991e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:09.071" endtime="20201029 12:47:09.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:09.082" level="INFO">${ACCURACY} = {'diff': [6.633300000000175e-05, 6.572199999999723e-05, 6.608400000000098e-05, 6.586100000000039e-05, 6.591700000000561e-05, 6.59029999999991e-05, 6.656900000000243e-05, 6.598599999999705e-05, 6.66110...</msg>
<status status="PASS" starttime="20201029 12:47:09.075" endtime="20201029 12:47:09.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.087" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 12:47:09.086" endtime="20201029 12:47:09.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.089" level="INFO">VALUE: [6.633300000000175e-05, 6.572199999999723e-05, 6.608400000000098e-05, 6.586100000000039e-05, 6.591700000000561e-05, 6.59029999999991e-05, 6.656900000000243e-05, 6.598599999999705e-05, 6.661100000000114e-05, 6.656899999999549e-05, 6.62909999999961e-05, 6.631899999999524e-05, 6.57500000000033e-05, 6.57359999999968e-05, 6.590300000000604e-05, 6.641700000000611e-05, 6.629200000000252e-05, 6.580600000000159e-05, 6.604199999999533e-05, 6.643099999999874e-05, 6.644499999999831e-05, 6.64300000000062e-05, 6.609700000000107e-05, 6.612500000000021e-05, 6.613899999999978e-05, 6.644399999999884e-05, 6.666699999999942e-05, 6.670799999999866e-05, 6.629200000000252e-05, 6.631999999999472e-05, 6.583400000000073e-05, 6.573600000000374e-05, 6.573700000000321e-05, 6.649999999999712e-05, 6.581900000000168e-05, 6.601400000000313e-05, 6.624999999999687e-05, 6.622200000000467e-05, 6.659800000000105e-05, 6.597200000000442e-05, 6.608400000000098e-05, 6.60559999999949e-05, 6.60830000000015e-05, 6.652799999999626e-05, 6.647300000000439e-05, 6.64159999999997e-05, 6.6195000000005e-05, 6.629200000000252e-05, 6.594399999999834e-05, 6.648600000000449e-05]</msg>
<status status="PASS" starttime="20201029 12:47:09.088" endtime="20201029 12:47:09.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.083" endtime="20201029 12:47:09.091"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:09.094" endtime="20201029 12:47:09.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.093" endtime="20201029 12:47:09.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.091" endtime="20201029 12:47:09.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.703" endtime="20201029 12:47:09.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.702" endtime="20201029 12:47:09.115"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.123" endtime="20201029 12:47:09.141"></status>
</kw>
<msg timestamp="20201029 12:47:09.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:09.122" endtime="20201029 12:47:09.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:09.142" endtime="20201029 12:47:09.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.145" endtime="20201029 12:47:09.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.119" endtime="20201029 12:47:09.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.117" endtime="20201029 12:47:09.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.154" endtime="20201029 12:47:09.439"></status>
</kw>
<msg timestamp="20201029 12:47:09.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021689125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021756167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:09.152" endtime="20201029 12:47:09.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021689125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021756167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:09.443" endtime="20201029 12:47:09.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.451" endtime="20201029 12:47:09.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.150" endtime="20201029 12:47:09.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.148" endtime="20201029 12:47:09.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:09.458" level="INFO">${RESULT} = [{'diff': 6.70419999999998e-05}, {'diff': 6.683399999999826e-05}, {'diff': 6.741700000000017e-05}, {'diff': 6.687499999999749e-05}, {'diff': 6.683400000000173e-05}, {'diff': 6.740200000000113e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:09.455" endtime="20201029 12:47:09.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:09.462" level="INFO">${ACCURACY} = {'diff': [6.70419999999998e-05, 6.683399999999826e-05, 6.741700000000017e-05, 6.687499999999749e-05, 6.683400000000173e-05, 6.740200000000113e-05, 6.756899999999996e-05, 6.77359999999988e-05, 6.677700...</msg>
<status status="PASS" starttime="20201029 12:47:09.459" endtime="20201029 12:47:09.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.466" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 12:47:09.465" endtime="20201029 12:47:09.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.469" level="INFO">VALUE: [6.70419999999998e-05, 6.683399999999826e-05, 6.741700000000017e-05, 6.687499999999749e-05, 6.683400000000173e-05, 6.740200000000113e-05, 6.756899999999996e-05, 6.77359999999988e-05, 6.67770000000005e-05, 6.705499999999989e-05, 6.759800000000205e-05, 6.693099999999924e-05, 6.773600000000227e-05, 6.72640000000009e-05, 6.680599999999912e-05, 6.758299999999953e-05, 6.768099999999999e-05, 6.713800000000131e-05, 6.688799999999759e-05, 6.748599999999855e-05, 6.743000000000027e-05, 6.702699999999728e-05, 6.67359999999978e-05, 6.730500000000014e-05, 6.701400000000066e-05, 6.741700000000017e-05, 6.694499999999881e-05, 6.720799999999916e-05, 6.673600000000127e-05, 6.698699999999752e-05, 6.726300000000143e-05, 6.744500000000278e-05, 6.747199999999898e-05, 6.713900000000078e-05, 6.762500000000171e-05, 6.747299999999845e-05, 6.70419999999998e-05, 6.69030000000001e-05, 6.679200000000302e-05, 6.731999999999919e-05, 6.701400000000066e-05, 6.761099999999867e-05, 6.683299999999878e-05, 6.70419999999998e-05, 6.673600000000127e-05, 6.748600000000202e-05, 6.725000000000134e-05, 6.738899999999756e-05, 6.720799999999916e-05, 6.687499999999749e-05]</msg>
<status status="PASS" starttime="20201029 12:47:09.467" endtime="20201029 12:47:09.470"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.463" endtime="20201029 12:47:09.470"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:09.474" endtime="20201029 12:47:09.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.472" endtime="20201029 12:47:09.494"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.471" endtime="20201029 12:47:09.494"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.116" endtime="20201029 12:47:09.494"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.115" endtime="20201029 12:47:09.494"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.503" endtime="20201029 12:47:09.521"></status>
</kw>
<msg timestamp="20201029 12:47:09.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:09.501" endtime="20201029 12:47:09.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:09.523" endtime="20201029 12:47:09.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.525" endtime="20201029 12:47:09.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.499" endtime="20201029 12:47:09.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.497" endtime="20201029 12:47:09.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.534" endtime="20201029 12:47:09.819"></status>
</kw>
<msg timestamp="20201029 12:47:09.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022520458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0225885, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:09.532" endtime="20201029 12:47:09.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022520458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0225885, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:09.823" endtime="20201029 12:47:09.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.831" endtime="20201029 12:47:09.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.530" endtime="20201029 12:47:09.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.528" endtime="20201029 12:47:09.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:09.838" level="INFO">${RESULT} = [{'diff': 6.80420000000008e-05}, {'diff': 6.82359999999993e-05}, {'diff': 6.806900000000046e-05}, {'diff': 6.865300000000185e-05}, {'diff': 6.77359999999988e-05}, {'diff': 6.832000000000019e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:47:09.835" endtime="20201029 12:47:09.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:09.842" level="INFO">${ACCURACY} = {'diff': [6.80420000000008e-05, 6.82359999999993e-05, 6.806900000000046e-05, 6.865300000000185e-05, 6.77359999999988e-05, 6.832000000000019e-05, 6.777800000000098e-05, 6.806999999999994e-05, 6.8069999...</msg>
<status status="PASS" starttime="20201029 12:47:09.839" endtime="20201029 12:47:09.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.846" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 12:47:09.845" endtime="20201029 12:47:09.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.849" level="INFO">VALUE: [6.80420000000008e-05, 6.82359999999993e-05, 6.806900000000046e-05, 6.865300000000185e-05, 6.77359999999988e-05, 6.832000000000019e-05, 6.777800000000098e-05, 6.806999999999994e-05, 6.806999999999994e-05, 6.788900000000153e-05, 6.819400000000059e-05, 6.812499999999874e-05, 6.808300000000003e-05, 6.816699999999745e-05, 6.812500000000221e-05, 6.856999999999697e-05, 6.823600000000277e-05, 6.772199999999923e-05, 6.774999999999837e-05, 6.80700000000034e-05, 6.85970000000001e-05, 6.790200000000163e-05, 6.815200000000188e-05, 6.787499999999849e-05, 6.862499999999924e-05, 6.813899999999831e-05, 6.795799999999991e-05, 6.804199999999733e-05, 6.824999999999887e-05, 6.826399999999844e-05, 6.84169999999977e-05, 6.84030000000016e-05, 6.859699999999663e-05, 6.793000000000077e-05, 6.847199999999998e-05, 6.815299999999788e-05, 6.811099999999917e-05, 6.849999999999912e-05, 6.819500000000006e-05, 6.79299999999973e-05, 6.77359999999988e-05, 6.861099999999967e-05, 6.837499999999899e-05, 6.781999999999969e-05, 6.855500000000139e-05, 6.787500000000196e-05, 6.815200000000188e-05, 6.856899999999749e-05, 6.87359999999998e-05, 6.849999999999912e-05]</msg>
<status status="PASS" starttime="20201029 12:47:09.847" endtime="20201029 12:47:09.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.843" endtime="20201029 12:47:09.851"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:09.855" endtime="20201029 12:47:09.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.853" endtime="20201029 12:47:09.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.852" endtime="20201029 12:47:09.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.495" endtime="20201029 12:47:09.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.495" endtime="20201029 12:47:09.875"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.884" endtime="20201029 12:47:09.902"></status>
</kw>
<msg timestamp="20201029 12:47:09.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:09.882" endtime="20201029 12:47:09.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:09.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:09.904" endtime="20201029 12:47:09.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.906" endtime="20201029 12:47:09.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.880" endtime="20201029 12:47:09.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.878" endtime="20201029 12:47:09.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:09.915" endtime="20201029 12:47:10.201"></status>
</kw>
<msg timestamp="20201029 12:47:10.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021756264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021825764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:09.914" endtime="20201029 12:47:10.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021756264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021825764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:10.205" endtime="20201029 12:47:10.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.214" endtime="20201029 12:47:10.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.911" endtime="20201029 12:47:10.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.909" endtime="20201029 12:47:10.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:10.220" level="INFO">${RESULT} = [{'diff': 6.950000000000012e-05}, {'diff': 6.898699999999952e-05}, {'diff': 6.938899999999956e-05}, {'diff': 6.888899999999906e-05}, {'diff': 6.904199999999833e-05}, {'diff': 6.890199999999916e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:10.217" endtime="20201029 12:47:10.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:10.225" level="INFO">${ACCURACY} = {'diff': [6.950000000000012e-05, 6.898699999999952e-05, 6.938899999999956e-05, 6.888899999999906e-05, 6.904199999999833e-05, 6.890199999999916e-05, 6.894400000000134e-05, 6.890200000000263e-05, 6.8944...</msg>
<status status="PASS" starttime="20201029 12:47:10.221" endtime="20201029 12:47:10.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.229" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 12:47:10.228" endtime="20201029 12:47:10.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.232" level="INFO">VALUE: [6.950000000000012e-05, 6.898699999999952e-05, 6.938899999999956e-05, 6.888899999999906e-05, 6.904199999999833e-05, 6.890199999999916e-05, 6.894400000000134e-05, 6.890200000000263e-05, 6.894400000000134e-05, 6.958299999999806e-05, 6.902799999999876e-05, 6.879200000000155e-05, 6.958399999999754e-05, 6.958299999999806e-05, 6.92360000000003e-05, 6.907000000000094e-05, 6.916599999999898e-05, 6.888899999999906e-05, 6.911100000000017e-05, 6.96109999999972e-05, 6.905499999999842e-05, 6.965300000000285e-05, 6.897200000000048e-05, 6.926399999999944e-05, 6.907000000000094e-05, 6.901399999999919e-05, 6.948600000000055e-05, 6.92360000000003e-05, 6.959699999999763e-05, 6.922200000000073e-05, 6.893000000000177e-05, 6.944500000000131e-05, 6.874999999999937e-05, 6.945800000000141e-05, 6.90420000000018e-05, 6.915299999999888e-05, 6.937499999999999e-05, 6.944500000000131e-05, 6.919500000000106e-05, 6.951399999999969e-05, 6.948599999999708e-05, 6.929100000000257e-05, 6.972200000000123e-05, 6.938899999999956e-05, 6.902800000000223e-05, 6.923699999999977e-05, 6.888900000000253e-05, 6.911100000000017e-05, 6.938899999999956e-05, 6.876399999999894e-05]</msg>
<status status="PASS" starttime="20201029 12:47:10.231" endtime="20201029 12:47:10.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.226" endtime="20201029 12:47:10.233"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:10.237" endtime="20201029 12:47:10.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.235" endtime="20201029 12:47:10.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.234" endtime="20201029 12:47:10.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.876" endtime="20201029 12:47:10.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:09.876" endtime="20201029 12:47:10.258"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.266" endtime="20201029 12:47:10.284"></status>
</kw>
<msg timestamp="20201029 12:47:10.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:10.265" endtime="20201029 12:47:10.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:10.286" endtime="20201029 12:47:10.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.288" endtime="20201029 12:47:10.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.262" endtime="20201029 12:47:10.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.260" endtime="20201029 12:47:10.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.297" endtime="20201029 12:47:10.584"></status>
</kw>
<msg timestamp="20201029 12:47:10.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021934778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022004972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:10.296" endtime="20201029 12:47:10.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021934778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022004972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:10.588" endtime="20201029 12:47:10.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.596" endtime="20201029 12:47:10.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.293" endtime="20201029 12:47:10.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.291" endtime="20201029 12:47:10.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:10.603" level="INFO">${RESULT} = [{'diff': 7.019400000000259e-05}, {'diff': 7.040300000000013e-05}, {'diff': 7.051399999999722e-05}, {'diff': 7.026400000000044e-05}, {'diff': 7.062500000000124e-05}, {'diff': 7.006899999999899e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:10.599" endtime="20201029 12:47:10.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:10.607" level="INFO">${ACCURACY} = {'diff': [7.019400000000259e-05, 7.040300000000013e-05, 7.051399999999722e-05, 7.026400000000044e-05, 7.062500000000124e-05, 7.006899999999899e-05, 7.012500000000074e-05, 7.026399999999697e-05, 7.0348...</msg>
<status status="PASS" starttime="20201029 12:47:10.604" endtime="20201029 12:47:10.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.611" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 12:47:10.610" endtime="20201029 12:47:10.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.614" level="INFO">VALUE: [7.019400000000259e-05, 7.040300000000013e-05, 7.051399999999722e-05, 7.026400000000044e-05, 7.062500000000124e-05, 7.006899999999899e-05, 7.012500000000074e-05, 7.026399999999697e-05, 7.034800000000133e-05, 6.991599999999973e-05, 7.040200000000066e-05, 7.069399999999962e-05, 7.031899999999924e-05, 6.990299999999963e-05, 6.987500000000049e-05, 7.070799999999919e-05, 7.025000000000087e-05, 7.016699999999945e-05, 7.068099999999952e-05, 7.040300000000013e-05, 7.008399999999804e-05, 6.995899999999791e-05, 7.008399999999804e-05, 7.002799999999976e-05, 6.975000000000037e-05, 7.041600000000023e-05, 6.977800000000298e-05, 7.037500000000099e-05, 7.033299999999881e-05, 7.013900000000031e-05, 7.048600000000155e-05, 7.059800000000158e-05, 6.997200000000148e-05, 6.979199999999908e-05, 6.998599999999758e-05, 7.022299999999773e-05, 7.012500000000074e-05, 6.990299999999963e-05, 7.038900000000056e-05, 6.99299999999993e-05, 6.975000000000037e-05, 7.016699999999945e-05, 7.047199999999851e-05, 7.007000000000194e-05, 6.994500000000181e-05, 7.009800000000108e-05, 7.005499999999942e-05, 7.011199999999718e-05, 7.011100000000117e-05, 6.977700000000003e-05]</msg>
<status status="PASS" starttime="20201029 12:47:10.612" endtime="20201029 12:47:10.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.608" endtime="20201029 12:47:10.615"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:10.619" endtime="20201029 12:47:10.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.617" endtime="20201029 12:47:10.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.616" endtime="20201029 12:47:10.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.258" endtime="20201029 12:47:10.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.258" endtime="20201029 12:47:10.639"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.648" endtime="20201029 12:47:10.667"></status>
</kw>
<msg timestamp="20201029 12:47:10.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:10.646" endtime="20201029 12:47:10.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:10.669" endtime="20201029 12:47:10.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.671" endtime="20201029 12:47:10.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.644" endtime="20201029 12:47:10.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.642" endtime="20201029 12:47:10.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.680" endtime="20201029 12:47:10.966"></status>
</kw>
<msg timestamp="20201029 12:47:10.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02280675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022878111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:10.679" endtime="20201029 12:47:10.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02280675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022878111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:10.970" endtime="20201029 12:47:10.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:10.978" endtime="20201029 12:47:10.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.676" endtime="20201029 12:47:10.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.674" endtime="20201029 12:47:10.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:10.985" level="INFO">${RESULT} = [{'diff': 7.136099999999895e-05}, {'diff': 7.105499999999695e-05}, {'diff': 7.090299999999716e-05}, {'diff': 7.170800000000019e-05}, {'diff': 7.138899999999809e-05}, {'diff': 7.083299999999931e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:10.981" endtime="20201029 12:47:10.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:10.989" level="INFO">${ACCURACY} = {'diff': [7.136099999999895e-05, 7.105499999999695e-05, 7.090299999999716e-05, 7.170800000000019e-05, 7.138899999999809e-05, 7.083299999999931e-05, 7.130600000000015e-05, 7.170899999999966e-05, 7.1139...</msg>
<status status="PASS" starttime="20201029 12:47:10.986" endtime="20201029 12:47:10.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.993" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 12:47:10.992" endtime="20201029 12:47:10.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.995" level="INFO">VALUE: [7.136099999999895e-05, 7.105499999999695e-05, 7.090299999999716e-05, 7.170800000000019e-05, 7.138899999999809e-05, 7.083299999999931e-05, 7.130600000000015e-05, 7.170899999999966e-05, 7.113900000000131e-05, 7.127799999999754e-05, 7.091600000000073e-05, 7.1069e-05, 7.090299999999716e-05, 7.104200000000033e-05, 7.136100000000242e-05, 7.113900000000131e-05, 7.09170000000002e-05, 7.169399999999715e-05, 7.122199999999926e-05, 7.097200000000248e-05, 7.115300000000088e-05, 7.140300000000113e-05, 7.116599999999751e-05, 7.15690000000005e-05, 7.102800000000076e-05, 7.126400000000144e-05, 7.15690000000005e-05, 7.155500000000092e-05, 7.076399999999747e-05, 7.123599999999883e-05, 7.080599999999965e-05, 7.127799999999754e-05, 7.125000000000187e-05, 7.162499999999877e-05, 7.123599999999883e-05, 7.09300000000003e-05, 7.113900000000131e-05, 7.076399999999747e-05, 7.088900000000106e-05, 7.088900000000106e-05, 7.166700000000095e-05, 7.09170000000002e-05, 7.138900000000156e-05, 7.112500000000174e-05, 7.109699999999913e-05, 7.163900000000181e-05, 7.144400000000037e-05, 7.166599999999801e-05, 7.102800000000076e-05, 7.169400000000062e-05]</msg>
<status status="PASS" starttime="20201029 12:47:10.994" endtime="20201029 12:47:10.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.989" endtime="20201029 12:47:10.998"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:11.001" endtime="20201029 12:47:11.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.000" endtime="20201029 12:47:11.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.999" endtime="20201029 12:47:11.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.640" endtime="20201029 12:47:11.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.640" endtime="20201029 12:47:11.022"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.030" endtime="20201029 12:47:11.049"></status>
</kw>
<msg timestamp="20201029 12:47:11.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.029" endtime="20201029 12:47:11.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.050" endtime="20201029 12:47:11.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.053" endtime="20201029 12:47:11.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.026" endtime="20201029 12:47:11.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.024" endtime="20201029 12:47:11.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.062" endtime="20201029 12:47:11.347"></status>
</kw>
<msg timestamp="20201029 12:47:11.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021578611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021651306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:11.060" endtime="20201029 12:47:11.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021578611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021651306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:11.351" endtime="20201029 12:47:11.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.359" endtime="20201029 12:47:11.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.058" endtime="20201029 12:47:11.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.056" endtime="20201029 12:47:11.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:11.366" level="INFO">${RESULT} = [{'diff': 7.269499999999762e-05}, {'diff': 7.211199999999918e-05}, {'diff': 7.247299999999998e-05}, {'diff': 7.191599999999826e-05}, {'diff': 7.254100000000235e-05}, {'diff': 7.241599999999876e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:11.363" endtime="20201029 12:47:11.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:11.371" level="INFO">${ACCURACY} = {'diff': [7.269499999999762e-05, 7.211199999999918e-05, 7.247299999999998e-05, 7.191599999999826e-05, 7.254100000000235e-05, 7.241599999999876e-05, 7.22499999999994e-05, 7.191699999999773e-05, 7.23060...</msg>
<status status="PASS" starttime="20201029 12:47:11.367" endtime="20201029 12:47:11.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.376" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 12:47:11.375" endtime="20201029 12:47:11.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.378" level="INFO">VALUE: [7.269499999999762e-05, 7.211199999999918e-05, 7.247299999999998e-05, 7.191599999999826e-05, 7.254100000000235e-05, 7.241599999999876e-05, 7.22499999999994e-05, 7.191699999999773e-05, 7.230600000000115e-05, 7.223599999999983e-05, 7.211100000000317e-05, 7.232000000000072e-05, 7.226399999999897e-05, 7.20560000000009e-05, 7.248600000000008e-05, 7.208300000000056e-05, 7.205499999999795e-05, 7.188899999999859e-05, 7.191699999999773e-05, 7.255500000000192e-05, 7.212499999999927e-05, 7.231899999999777e-05, 7.254199999999836e-05, 7.238900000000256e-05, 7.208400000000004e-05, 7.240199999999919e-05, 7.194400000000087e-05, 7.263899999999934e-05, 7.209700000000013e-05, 7.227800000000201e-05, 7.205499999999795e-05, 7.188899999999859e-05, 7.240300000000213e-05, 7.179099999999813e-05, 7.209700000000013e-05, 7.194500000000034e-05, 7.245900000000041e-05, 7.194400000000087e-05, 7.270900000000066e-05, 7.180500000000117e-05, 7.229099999999863e-05, 7.242999999999833e-05, 7.227799999999854e-05, 7.22499999999994e-05, 7.261099999999673e-05, 7.19309999999973e-05, 7.186100000000292e-05, 7.257000000000097e-05, 7.179200000000108e-05, 7.229200000000158e-05]</msg>
<status status="PASS" starttime="20201029 12:47:11.377" endtime="20201029 12:47:11.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.372" endtime="20201029 12:47:11.383"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:11.386" endtime="20201029 12:47:11.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.385" endtime="20201029 12:47:11.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.384" endtime="20201029 12:47:11.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.023" endtime="20201029 12:47:11.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.022" endtime="20201029 12:47:11.407"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.416" endtime="20201029 12:47:11.434"></status>
</kw>
<msg timestamp="20201029 12:47:11.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.414" endtime="20201029 12:47:11.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.436" endtime="20201029 12:47:11.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.438" endtime="20201029 12:47:11.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.411" endtime="20201029 12:47:11.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.409" endtime="20201029 12:47:11.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.447" endtime="20201029 12:47:11.733"></status>
</kw>
<msg timestamp="20201029 12:47:11.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021822972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021895972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:11.446" endtime="20201029 12:47:11.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021822972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021895972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:11.737" endtime="20201029 12:47:11.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.746" endtime="20201029 12:47:11.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.443" endtime="20201029 12:47:11.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.441" endtime="20201029 12:47:11.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:11.752" level="INFO">${RESULT} = [{'diff': 7.300000000000015e-05}, {'diff': 7.315300000000288e-05}, {'diff': 7.286100000000045e-05}, {'diff': 7.297200000000101e-05}, {'diff': 7.37500000000009e-05}, {'diff': 7.347200000000151e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:11.749" endtime="20201029 12:47:11.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:11.756" level="INFO">${ACCURACY} = {'diff': [7.300000000000015e-05, 7.315300000000288e-05, 7.286100000000045e-05, 7.297200000000101e-05, 7.37500000000009e-05, 7.347200000000151e-05, 7.287500000000002e-05, 7.32630000000005e-05, 7.290299...</msg>
<status status="PASS" starttime="20201029 12:47:11.753" endtime="20201029 12:47:11.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.761" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 12:47:11.760" endtime="20201029 12:47:11.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.763" level="INFO">VALUE: [7.300000000000015e-05, 7.315300000000288e-05, 7.286100000000045e-05, 7.297200000000101e-05, 7.37500000000009e-05, 7.347200000000151e-05, 7.287500000000002e-05, 7.32630000000005e-05, 7.290299999999916e-05, 7.308300000000156e-05, 7.309700000000113e-05, 7.356899999999902e-05, 7.362500000000077e-05, 7.327799999999954e-05, 7.290299999999916e-05, 7.291699999999873e-05, 7.35699999999985e-05, 7.297200000000101e-05, 7.326399999999997e-05, 7.301399999999972e-05, 7.313899999999984e-05, 7.28049999999987e-05, 7.288899999999959e-05, 7.29170000000022e-05, 7.308300000000156e-05, 7.372199999999829e-05, 7.329199999999911e-05, 7.332000000000172e-05, 7.309800000000061e-05, 7.35699999999985e-05, 7.313800000000037e-05, 7.361200000000068e-05, 7.356899999999902e-05, 7.298600000000058e-05, 7.36110000000012e-05, 7.331899999999877e-05, 7.355599999999893e-05, 7.279199999999861e-05, 7.323599999999736e-05, 7.287500000000002e-05, 7.302799999999929e-05, 7.32370000000003e-05, 7.372300000000123e-05, 7.362500000000077e-05, 7.309699999999766e-05, 7.35690000000025e-05, 7.297199999999754e-05, 7.340299999999966e-05, 7.35699999999985e-05, 7.327799999999954e-05]</msg>
<status status="PASS" starttime="20201029 12:47:11.762" endtime="20201029 12:47:11.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.757" endtime="20201029 12:47:11.765"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:11.768" endtime="20201029 12:47:11.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.767" endtime="20201029 12:47:11.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.766" endtime="20201029 12:47:11.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.408" endtime="20201029 12:47:11.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.407" endtime="20201029 12:47:11.789"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.798" endtime="20201029 12:47:11.817"></status>
</kw>
<msg timestamp="20201029 12:47:11.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.796" endtime="20201029 12:47:11.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.819" endtime="20201029 12:47:11.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.821" endtime="20201029 12:47:11.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.794" endtime="20201029 12:47:11.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.791" endtime="20201029 12:47:11.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.830" endtime="20201029 12:47:12.117"></status>
</kw>
<msg timestamp="20201029 12:47:12.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022610639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022685347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:11.829" endtime="20201029 12:47:12.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022610639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022685347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:12.121" endtime="20201029 12:47:12.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.130" endtime="20201029 12:47:12.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.826" endtime="20201029 12:47:12.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.825" endtime="20201029 12:47:12.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:12.136" level="INFO">${RESULT} = [{'diff': 7.470800000000319e-05}, {'diff': 7.387499999999755e-05}, {'diff': 7.472199999999929e-05}, {'diff': 7.46110000000022e-05}, {'diff': 7.427800000000054e-05}, {'diff': 7.465299999999744e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:12.133" endtime="20201029 12:47:12.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:12.140" level="INFO">${ACCURACY} = {'diff': [7.470800000000319e-05, 7.387499999999755e-05, 7.472199999999929e-05, 7.46110000000022e-05, 7.427800000000054e-05, 7.465299999999744e-05, 7.431899999999977e-05, 7.415300000000041e-05, 7.46250...</msg>
<status status="PASS" starttime="20201029 12:47:12.137" endtime="20201029 12:47:12.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.145" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 12:47:12.144" endtime="20201029 12:47:12.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.147" level="INFO">VALUE: [7.470800000000319e-05, 7.387499999999755e-05, 7.472199999999929e-05, 7.46110000000022e-05, 7.427800000000054e-05, 7.465299999999744e-05, 7.431899999999977e-05, 7.415300000000041e-05, 7.462500000000177e-05, 7.426400000000097e-05, 7.418099999999955e-05, 7.445799999999947e-05, 7.445800000000294e-05, 7.381900000000274e-05, 7.456900000000002e-05, 7.404100000000038e-05, 7.406899999999952e-05, 7.390300000000016e-05, 7.42500000000014e-05, 7.387500000000102e-05, 7.432000000000272e-05, 7.466600000000101e-05, 7.4069999999999e-05, 7.459699999999916e-05, 7.3763000000001e-05, 7.449999999999818e-05, 7.456900000000002e-05, 7.386099999999798e-05, 7.448599999999861e-05, 7.406899999999952e-05, 7.437500000000152e-05, 7.441700000000023e-05, 7.386100000000145e-05, 7.448599999999861e-05, 7.42639999999975e-05, 7.458300000000306e-05, 7.388899999999712e-05, 7.465199999999797e-05, 7.429200000000011e-05, 7.44309999999998e-05, 7.404199999999986e-05, 7.390300000000016e-05, 7.372200000000176e-05, 7.415299999999694e-05, 7.465300000000091e-05, 7.456900000000002e-05, 7.379100000000013e-05, 7.388800000000112e-05, 7.404100000000038e-05, 7.391600000000026e-05]</msg>
<status status="PASS" starttime="20201029 12:47:12.146" endtime="20201029 12:47:12.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.141" endtime="20201029 12:47:12.149"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:12.153" endtime="20201029 12:47:12.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.151" endtime="20201029 12:47:12.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.150" endtime="20201029 12:47:12.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.790" endtime="20201029 12:47:12.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.789" endtime="20201029 12:47:12.174"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.182" endtime="20201029 12:47:12.201"></status>
</kw>
<msg timestamp="20201029 12:47:12.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.180" endtime="20201029 12:47:12.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.203" endtime="20201029 12:47:12.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.205" endtime="20201029 12:47:12.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.178" endtime="20201029 12:47:12.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.176" endtime="20201029 12:47:12.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.214" endtime="20201029 12:47:12.500"></status>
</kw>
<msg timestamp="20201029 12:47:12.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021685292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021760625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:12.213" endtime="20201029 12:47:12.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021685292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021760625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:12.504" endtime="20201029 12:47:12.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.512" endtime="20201029 12:47:12.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.210" endtime="20201029 12:47:12.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.208" endtime="20201029 12:47:12.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:12.518" level="INFO">${RESULT} = [{'diff': 7.533300000000034e-05}, {'diff': 7.566699999999801e-05}, {'diff': 7.505600000000043e-05}, {'diff': 7.507e-05}, {'diff': 7.55830000000006e-05}, {'diff': 7.522300000000273e-05}, {'diff': 7.558...</msg>
<status status="PASS" starttime="20201029 12:47:12.515" endtime="20201029 12:47:12.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:12.526" level="INFO">${ACCURACY} = {'diff': [7.533300000000034e-05, 7.566699999999801e-05, 7.505600000000043e-05, 7.507e-05, 7.55830000000006e-05, 7.522300000000273e-05, 7.55830000000006e-05, 7.556900000000102e-05, 7.555500000000145e-0...</msg>
<status status="PASS" starttime="20201029 12:47:12.519" endtime="20201029 12:47:12.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.530" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 12:47:12.529" endtime="20201029 12:47:12.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.533" level="INFO">VALUE: [7.533300000000034e-05, 7.566699999999801e-05, 7.505600000000043e-05, 7.507e-05, 7.55830000000006e-05, 7.522300000000273e-05, 7.55830000000006e-05, 7.556900000000102e-05, 7.555500000000145e-05, 7.487500000000202e-05, 7.498599999999911e-05, 7.529100000000163e-05, 7.491700000000073e-05, 7.484799999999889e-05, 7.519500000000012e-05, 7.56249999999993e-05, 7.505600000000043e-05, 7.517999999999761e-05, 7.545800000000047e-05, 7.561099999999973e-05, 7.547200000000004e-05, 7.511099999999923e-05, 7.522199999999979e-05, 7.490300000000116e-05, 7.483399999999932e-05, 7.505600000000043e-05, 7.518000000000108e-05, 7.547200000000004e-05, 7.516699999999751e-05, 7.541599999999829e-05, 7.488899999999812e-05, 7.53050000000012e-05, 7.531900000000077e-05, 7.530600000000068e-05, 7.55700000000005e-05, 7.552799999999832e-05, 7.570900000000019e-05, 7.51249999999988e-05, 7.532000000000025e-05, 7.56249999999993e-05, 7.548599999999961e-05, 7.547200000000004e-05, 7.483299999999984e-05, 7.570799999999725e-05, 7.488899999999812e-05, 7.473599999999886e-05, 7.559700000000016e-05, 7.522199999999979e-05, 7.470900000000266e-05, 7.480600000000018e-05]</msg>
<status status="PASS" starttime="20201029 12:47:12.531" endtime="20201029 12:47:12.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.527" endtime="20201029 12:47:12.534"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:12.538" endtime="20201029 12:47:12.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.536" endtime="20201029 12:47:12.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.535" endtime="20201029 12:47:12.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.175" endtime="20201029 12:47:12.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.174" endtime="20201029 12:47:12.558"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.567" endtime="20201029 12:47:12.585"></status>
</kw>
<msg timestamp="20201029 12:47:12.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.565" endtime="20201029 12:47:12.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.587" endtime="20201029 12:47:12.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.589" endtime="20201029 12:47:12.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.563" endtime="20201029 12:47:12.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.561" endtime="20201029 12:47:12.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.598" endtime="20201029 12:47:12.884"></status>
</kw>
<msg timestamp="20201029 12:47:12.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021966514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022042486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:12.597" endtime="20201029 12:47:12.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021966514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022042486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:12.889" endtime="20201029 12:47:12.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.897" endtime="20201029 12:47:12.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.594" endtime="20201029 12:47:12.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.592" endtime="20201029 12:47:12.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:12.903" level="INFO">${RESULT} = [{'diff': 7.597200000000054e-05}, {'diff': 7.655499999999898e-05}, {'diff': 7.623600000000036e-05}, {'diff': 7.661100000000073e-05}, {'diff': 7.673600000000086e-05}, {'diff': 7.605599999999796e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:12.900" endtime="20201029 12:47:12.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:12.907" level="INFO">${ACCURACY} = {'diff': [7.597200000000054e-05, 7.655499999999898e-05, 7.623600000000036e-05, 7.661100000000073e-05, 7.673600000000086e-05, 7.605599999999796e-05, 7.580600000000118e-05, 7.61249999999998e-05, 7.66389...</msg>
<status status="PASS" starttime="20201029 12:47:12.904" endtime="20201029 12:47:12.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.912" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 12:47:12.911" endtime="20201029 12:47:12.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.914" level="INFO">VALUE: [7.597200000000054e-05, 7.655499999999898e-05, 7.623600000000036e-05, 7.661100000000073e-05, 7.673600000000086e-05, 7.605599999999796e-05, 7.580600000000118e-05, 7.61249999999998e-05, 7.663899999999987e-05, 7.599999999999968e-05, 7.63890000000031e-05, 7.60830000000011e-05, 7.665299999999944e-05, 7.648600000000061e-05, 7.583400000000032e-05, 7.624999999999993e-05, 7.616699999999851e-05, 7.588899999999912e-05, 7.62769999999996e-05, 7.594500000000087e-05, 7.611100000000023e-05, 7.622200000000079e-05, 7.623600000000036e-05, 7.644399999999843e-05, 7.622200000000079e-05, 7.641599999999929e-05, 7.630599999999821e-05, 7.619500000000112e-05, 7.663899999999987e-05, 7.66250000000003e-05, 7.665300000000291e-05, 7.620800000000122e-05, 7.598600000000011e-05, 7.613900000000284e-05, 7.673600000000086e-05, 7.606899999999805e-05, 7.616700000000198e-05, 7.637500000000005e-05, 7.64029999999992e-05, 7.6070000000001e-05, 7.611199999999971e-05, 7.606900000000152e-05, 7.647199999999757e-05, 7.648600000000061e-05, 7.672200000000129e-05, 7.605500000000195e-05, 7.647199999999757e-05, 7.651400000000322e-05, 7.623600000000036e-05, 7.587499999999955e-05]</msg>
<status status="PASS" starttime="20201029 12:47:12.913" endtime="20201029 12:47:12.915"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.908" endtime="20201029 12:47:12.915"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:12.919" endtime="20201029 12:47:12.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.918" endtime="20201029 12:47:12.939"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.916" endtime="20201029 12:47:12.939"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.559" endtime="20201029 12:47:12.940"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.558" endtime="20201029 12:47:12.940"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.948" endtime="20201029 12:47:12.968"></status>
</kw>
<msg timestamp="20201029 12:47:12.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.947" endtime="20201029 12:47:12.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.970" endtime="20201029 12:47:12.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.972" endtime="20201029 12:47:12.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.944" endtime="20201029 12:47:12.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.942" endtime="20201029 12:47:12.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.981" endtime="20201029 12:47:13.267"></status>
</kw>
<msg timestamp="20201029 12:47:13.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022505875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022583264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:12.980" endtime="20201029 12:47:13.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022505875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022583264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:13.272" endtime="20201029 12:47:13.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.280" endtime="20201029 12:47:13.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.977" endtime="20201029 12:47:13.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.975" endtime="20201029 12:47:13.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:13.286" level="INFO">${RESULT} = [{'diff': 7.738899999999715e-05}, {'diff': 7.76250000000013e-05}, {'diff': 7.74030000000002e-05}, {'diff': 7.716699999999951e-05}, {'diff': 7.773599999999839e-05}, {'diff': 7.705600000000243e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:13.283" endtime="20201029 12:47:13.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:13.290" level="INFO">${ACCURACY} = {'diff': [7.738899999999715e-05, 7.76250000000013e-05, 7.74030000000002e-05, 7.716699999999951e-05, 7.773599999999839e-05, 7.705600000000243e-05, 7.70839999999981e-05, 7.673599999999739e-05, 7.7194999...</msg>
<status status="PASS" starttime="20201029 12:47:13.287" endtime="20201029 12:47:13.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.295" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 12:47:13.294" endtime="20201029 12:47:13.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.297" level="INFO">VALUE: [7.738899999999715e-05, 7.76250000000013e-05, 7.74030000000002e-05, 7.716699999999951e-05, 7.773599999999839e-05, 7.705600000000243e-05, 7.70839999999981e-05, 7.673599999999739e-05, 7.719499999999865e-05, 7.713900000000037e-05, 7.691599999999979e-05, 7.763900000000087e-05, 7.706899999999905e-05, 7.727800000000007e-05, 7.722200000000179e-05, 7.752800000000032e-05, 7.677799999999957e-05, 7.680600000000218e-05, 7.770799999999925e-05, 7.766600000000054e-05, 7.763900000000087e-05, 7.772199999999882e-05, 7.706899999999905e-05, 7.694399999999893e-05, 7.693099999999883e-05, 7.761100000000173e-05, 7.691699999999926e-05, 7.769499999999915e-05, 7.675000000000043e-05, 7.770900000000219e-05, 7.711100000000123e-05, 7.68189999999988e-05, 7.720799999999875e-05, 7.706899999999905e-05, 7.682000000000175e-05, 7.697199999999807e-05, 7.691699999999926e-05, 7.71250000000008e-05, 7.691699999999926e-05, 7.695900000000144e-05, 7.730499999999974e-05, 7.705499999999949e-05, 7.698600000000111e-05, 7.749999999999771e-05, 7.769499999999915e-05, 7.695899999999797e-05, 7.72640000000005e-05, 7.765300000000044e-05, 7.76389999999974e-05, 7.733399999999835e-05]</msg>
<status status="PASS" starttime="20201029 12:47:13.296" endtime="20201029 12:47:13.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.291" endtime="20201029 12:47:13.299"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:13.303" endtime="20201029 12:47:13.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.301" endtime="20201029 12:47:13.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.300" endtime="20201029 12:47:13.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.941" endtime="20201029 12:47:13.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.940" endtime="20201029 12:47:13.324"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.332" endtime="20201029 12:47:13.351"></status>
</kw>
<msg timestamp="20201029 12:47:13.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:13.330" endtime="20201029 12:47:13.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:13.352" endtime="20201029 12:47:13.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.355" endtime="20201029 12:47:13.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.328" endtime="20201029 12:47:13.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.326" endtime="20201029 12:47:13.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.364" endtime="20201029 12:47:13.650"></status>
</kw>
<msg timestamp="20201029 12:47:13.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021688014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021765931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:13.362" endtime="20201029 12:47:13.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021688014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021765931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:13.654" endtime="20201029 12:47:13.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.662" endtime="20201029 12:47:13.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.360" endtime="20201029 12:47:13.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.358" endtime="20201029 12:47:13.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:13.668" level="INFO">${RESULT} = [{'diff': 7.791700000000026e-05}, {'diff': 7.84169999999973e-05}, {'diff': 7.834699999999944e-05}, {'diff': 7.837499999999858e-05}, {'diff': 7.813900000000137e-05}, {'diff': 7.823599999999889e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:13.665" endtime="20201029 12:47:13.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:13.674" level="INFO">${ACCURACY} = {'diff': [7.791700000000026e-05, 7.84169999999973e-05, 7.834699999999944e-05, 7.837499999999858e-05, 7.813900000000137e-05, 7.823599999999889e-05, 7.79449999999994e-05, 7.780500000000024e-05, 7.798600...</msg>
<status status="PASS" starttime="20201029 12:47:13.669" endtime="20201029 12:47:13.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.678" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 12:47:13.677" endtime="20201029 12:47:13.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.680" level="INFO">VALUE: [7.791700000000026e-05, 7.84169999999973e-05, 7.834699999999944e-05, 7.837499999999858e-05, 7.813900000000137e-05, 7.823599999999889e-05, 7.79449999999994e-05, 7.780500000000024e-05, 7.798600000000211e-05, 7.824999999999846e-05, 7.815300000000094e-05, 7.808299999999962e-05, 7.779200000000014e-05, 7.779200000000014e-05, 7.84449999999999e-05, 7.837499999999858e-05, 7.838899999999815e-05, 7.837500000000205e-05, 7.795899999999897e-05, 7.836099999999901e-05, 7.793099999999983e-05, 7.837499999999858e-05, 7.794399999999993e-05, 7.866700000000101e-05, 7.777800000000057e-05, 7.793099999999983e-05, 7.834800000000239e-05, 7.873699999999886e-05, 7.811100000000223e-05, 7.81389999999979e-05, 7.816600000000104e-05, 7.79169999999968e-05, 7.838900000000162e-05, 7.812499999999833e-05, 7.791700000000026e-05, 7.837499999999858e-05, 7.848599999999914e-05, 7.806999999999953e-05, 7.791599999999732e-05, 7.837500000000205e-05, 7.818000000000061e-05, 7.838800000000215e-05, 7.873599999999939e-05, 7.78189999999998e-05, 7.862499999999883e-05, 7.870800000000025e-05, 7.775000000000143e-05, 7.838900000000162e-05, 7.823599999999889e-05, 7.7764000000001e-05]</msg>
<status status="PASS" starttime="20201029 12:47:13.679" endtime="20201029 12:47:13.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.674" endtime="20201029 12:47:13.682"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:13.685" endtime="20201029 12:47:13.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.684" endtime="20201029 12:47:13.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.683" endtime="20201029 12:47:13.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.324" endtime="20201029 12:47:13.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.324" endtime="20201029 12:47:13.706"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.715" endtime="20201029 12:47:13.734"></status>
</kw>
<msg timestamp="20201029 12:47:13.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:13.713" endtime="20201029 12:47:13.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:13.735" endtime="20201029 12:47:13.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.737" endtime="20201029 12:47:13.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.710" endtime="20201029 12:47:13.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.708" endtime="20201029 12:47:13.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.746" endtime="20201029 12:47:14.033"></status>
</kw>
<msg timestamp="20201029 12:47:14.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021829014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021908528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:13.745" endtime="20201029 12:47:14.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021829014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021908528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:14.037" endtime="20201029 12:47:14.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.045" endtime="20201029 12:47:14.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.742" endtime="20201029 12:47:14.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.741" endtime="20201029 12:47:14.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:14.052" level="INFO">${RESULT} = [{'diff': 7.951399999999928e-05}, {'diff': 7.952799999999885e-05}, {'diff': 7.9458999999997e-05}, {'diff': 7.875000000000243e-05}, {'diff': 7.866700000000101e-05}, {'diff': 7.908300000000063e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:14.048" endtime="20201029 12:47:14.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:14.056" level="INFO">${ACCURACY} = {'diff': [7.951399999999928e-05, 7.952799999999885e-05, 7.9458999999997e-05, 7.875000000000243e-05, 7.866700000000101e-05, 7.908300000000063e-05, 7.904100000000192e-05, 7.952699999999938e-05, 7.881899...</msg>
<status status="PASS" starttime="20201029 12:47:14.053" endtime="20201029 12:47:14.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.060" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 12:47:14.059" endtime="20201029 12:47:14.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.063" level="INFO">VALUE: [7.951399999999928e-05, 7.952799999999885e-05, 7.9458999999997e-05, 7.875000000000243e-05, 7.866700000000101e-05, 7.908300000000063e-05, 7.904100000000192e-05, 7.952699999999938e-05, 7.881899999999734e-05, 7.927800000000207e-05, 7.91389999999989e-05, 7.872199999999982e-05, 7.955599999999799e-05, 7.930600000000121e-05, 7.957000000000103e-05, 7.955500000000199e-05, 7.941599999999882e-05, 7.897200000000007e-05, 7.96389999999994e-05, 7.94169999999983e-05, 7.94169999999983e-05, 7.869399999999721e-05, 7.940299999999872e-05, 7.965299999999897e-05, 7.94030000000022e-05, 7.88190000000008e-05, 7.908299999999716e-05, 7.955600000000146e-05, 7.933300000000088e-05, 7.940199999999925e-05, 7.881899999999734e-05, 7.911100000000323e-05, 7.948600000000014e-05, 7.90970000000002e-05, 7.966699999999854e-05, 7.968099999999811e-05, 7.941600000000229e-05, 7.883300000000037e-05, 7.97230000000003e-05, 7.898599999999964e-05, 7.880500000000124e-05, 7.894399999999746e-05, 7.886200000000246e-05, 7.89580000000005e-05, 7.961100000000026e-05, 7.893100000000083e-05, 7.92229999999998e-05, 7.923700000000283e-05, 7.912499999999933e-05, 7.955599999999799e-05]</msg>
<status status="PASS" starttime="20201029 12:47:14.061" endtime="20201029 12:47:14.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.057" endtime="20201029 12:47:14.064"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:14.067" endtime="20201029 12:47:14.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.066" endtime="20201029 12:47:14.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.065" endtime="20201029 12:47:14.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.707" endtime="20201029 12:47:14.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.706" endtime="20201029 12:47:14.088"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.097" endtime="20201029 12:47:14.117"></status>
</kw>
<msg timestamp="20201029 12:47:14.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:14.095" endtime="20201029 12:47:14.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:14.118" endtime="20201029 12:47:14.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.121" endtime="20201029 12:47:14.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.093" endtime="20201029 12:47:14.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.090" endtime="20201029 12:47:14.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.130" endtime="20201029 12:47:14.416"></status>
</kw>
<msg timestamp="20201029 12:47:14.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022990792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023070806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:14.128" endtime="20201029 12:47:14.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022990792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023070806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:14.420" endtime="20201029 12:47:14.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.428" endtime="20201029 12:47:14.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.126" endtime="20201029 12:47:14.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.124" endtime="20201029 12:47:14.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:14.435" level="INFO">${RESULT} = [{'diff': 8.001399999999978e-05}, {'diff': 8.016599999999957e-05}, {'diff': 8.066600000000007e-05}, {'diff': 8.004099999999945e-05}, {'diff': 7.980600000000171e-05}, {'diff': 8.062500000000083e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:14.431" endtime="20201029 12:47:14.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:14.439" level="INFO">${ACCURACY} = {'diff': [8.001399999999978e-05, 8.016599999999957e-05, 8.066600000000007e-05, 8.004099999999945e-05, 7.980600000000171e-05, 8.062500000000083e-05, 8.065299999999997e-05, 8.04169999999993e-05, 8.01389...</msg>
<status status="PASS" starttime="20201029 12:47:14.436" endtime="20201029 12:47:14.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.443" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 12:47:14.442" endtime="20201029 12:47:14.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.446" level="INFO">VALUE: [8.001399999999978e-05, 8.016599999999957e-05, 8.066600000000007e-05, 8.004099999999945e-05, 7.980600000000171e-05, 8.062500000000083e-05, 8.065299999999997e-05, 8.04169999999993e-05, 8.01389999999999e-05, 7.997300000000054e-05, 8.025000000000046e-05, 8.077799999999663e-05, 7.994400000000193e-05, 8.015299999999947e-05, 8.059699999999823e-05, 8.027800000000307e-05, 7.98329999999979e-05, 8.04169999999993e-05, 8.062500000000083e-05, 7.993100000000183e-05, 8.027700000000013e-05, 8.025000000000046e-05, 8.070899999999825e-05, 7.997200000000107e-05, 8.029100000000317e-05, 7.98190000000018e-05, 8.002800000000282e-05, 8.00970000000012e-05, 8.072199999999835e-05, 8.01389999999999e-05, 8.030600000000221e-05, 7.984800000000042e-05, 8.062499999999737e-05, 8.00970000000012e-05, 8.025000000000046e-05, 8.040299999999972e-05, 8.040299999999972e-05, 8.011100000000076e-05, 7.991700000000226e-05, 7.973599999999692e-05, 8.055599999999899e-05, 8.01389999999999e-05, 8.012499999999687e-05, 8.012500000000033e-05, 8.0458000000002e-05, 7.987500000000008e-05, 7.991599999999932e-05, 7.969400000000168e-05, 7.990299999999922e-05, 8.008300000000163e-05]</msg>
<status status="PASS" starttime="20201029 12:47:14.444" endtime="20201029 12:47:14.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.440" endtime="20201029 12:47:14.448"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:14.451" endtime="20201029 12:47:14.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.450" endtime="20201029 12:47:14.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.449" endtime="20201029 12:47:14.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.089" endtime="20201029 12:47:14.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.088" endtime="20201029 12:47:14.472"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.481" endtime="20201029 12:47:14.500"></status>
</kw>
<msg timestamp="20201029 12:47:14.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:14.479" endtime="20201029 12:47:14.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:14.501" endtime="20201029 12:47:14.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.504" endtime="20201029 12:47:14.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.477" endtime="20201029 12:47:14.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.475" endtime="20201029 12:47:14.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.513" endtime="20201029 12:47:14.797"></status>
</kw>
<msg timestamp="20201029 12:47:14.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021871514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021952389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:14.511" endtime="20201029 12:47:14.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021871514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021952389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:14.801" endtime="20201029 12:47:14.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.810" endtime="20201029 12:47:14.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.509" endtime="20201029 12:47:14.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.507" endtime="20201029 12:47:14.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:14.816" level="INFO">${RESULT} = [{'diff': 8.087499999999762e-05}, {'diff': 8.120799999999928e-05}, {'diff': 8.122199999999885e-05}, {'diff': 8.112499999999787e-05}, {'diff': 8.125000000000146e-05}, {'diff': 8.158299999999966e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:14.813" endtime="20201029 12:47:14.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:14.821" level="INFO">${ACCURACY} = {'diff': [8.087499999999762e-05, 8.120799999999928e-05, 8.122199999999885e-05, 8.112499999999787e-05, 8.125000000000146e-05, 8.158299999999966e-05, 8.154099999999748e-05, 8.156900000000009e-05, 8.1221...</msg>
<status status="PASS" starttime="20201029 12:47:14.817" endtime="20201029 12:47:14.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.826" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 12:47:14.825" endtime="20201029 12:47:14.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.828" level="INFO">VALUE: [8.087499999999762e-05, 8.120799999999928e-05, 8.122199999999885e-05, 8.112499999999787e-05, 8.125000000000146e-05, 8.158299999999966e-05, 8.154099999999748e-05, 8.156900000000009e-05, 8.122199999999885e-05, 8.073600000000139e-05, 8.08329999999989e-05, 8.168100000000011e-05, 8.11109999999983e-05, 8.173599999999892e-05, 8.11390000000009e-05, 8.14170000000003e-05, 8.140200000000125e-05, 8.08329999999989e-05, 8.11109999999983e-05, 8.127699999999766e-05, 8.08329999999989e-05, 8.105500000000002e-05, 8.14170000000003e-05, 8.123599999999842e-05, 8.09169999999998e-05, 8.090300000000022e-05, 8.095799999999903e-05, 8.162500000000183e-05, 8.091600000000032e-05, 8.140300000000072e-05, 8.140300000000072e-05, 8.173599999999892e-05, 8.076400000000053e-05, 8.074999999999749e-05, 8.099999999999774e-05, 8.080599999999924e-05, 8.125000000000146e-05, 8.090300000000022e-05, 8.084699999999848e-05, 8.156900000000009e-05, 8.141600000000082e-05, 8.126400000000103e-05, 8.073600000000139e-05, 8.148600000000214e-05, 8.090300000000022e-05, 8.090300000000022e-05, 8.101400000000078e-05, 8.14170000000003e-05, 8.174999999999849e-05, 8.143099999999986e-05]</msg>
<status status="PASS" starttime="20201029 12:47:14.827" endtime="20201029 12:47:14.829"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.822" endtime="20201029 12:47:14.829"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:14.833" endtime="20201029 12:47:14.852"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.831" endtime="20201029 12:47:14.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.830" endtime="20201029 12:47:14.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.473" endtime="20201029 12:47:14.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.472" endtime="20201029 12:47:14.854"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.862" endtime="20201029 12:47:14.881"></status>
</kw>
<msg timestamp="20201029 12:47:14.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:14.861" endtime="20201029 12:47:14.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:14.883" endtime="20201029 12:47:14.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.885" endtime="20201029 12:47:14.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.858" endtime="20201029 12:47:14.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.856" endtime="20201029 12:47:14.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.894" endtime="20201029 12:47:15.180"></status>
</kw>
<msg timestamp="20201029 12:47:15.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021752194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021834222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:14.892" endtime="20201029 12:47:15.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021752194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021834222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:15.185" endtime="20201029 12:47:15.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.193" endtime="20201029 12:47:15.194"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.890" endtime="20201029 12:47:15.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.888" endtime="20201029 12:47:15.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:15.199" level="INFO">${RESULT} = [{'diff': 8.202800000000135e-05}, {'diff': 8.216700000000104e-05}, {'diff': 8.201400000000178e-05}, {'diff': 8.198599999999917e-05}, {'diff': 8.188900000000165e-05}, {'diff': 8.19719999999996e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:15.196" endtime="20201029 12:47:15.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:15.203" level="INFO">${ACCURACY} = {'diff': [8.202800000000135e-05, 8.216700000000104e-05, 8.201400000000178e-05, 8.198599999999917e-05, 8.188900000000165e-05, 8.19719999999996e-05, 8.255599999999752e-05, 8.219500000000018e-05, 8.22229...</msg>
<status status="PASS" starttime="20201029 12:47:15.200" endtime="20201029 12:47:15.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.208" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 12:47:15.207" endtime="20201029 12:47:15.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.210" level="INFO">VALUE: [8.202800000000135e-05, 8.216700000000104e-05, 8.201400000000178e-05, 8.198599999999917e-05, 8.188900000000165e-05, 8.19719999999996e-05, 8.255599999999752e-05, 8.219500000000018e-05, 8.222299999999932e-05, 8.191600000000132e-05, 8.231899999999737e-05, 8.231900000000084e-05, 8.170799999999978e-05, 8.206900000000059e-05, 8.258300000000066e-05, 8.224999999999899e-05, 8.226399999999856e-05, 8.173599999999892e-05, 8.247300000000304e-05, 8.226400000000203e-05, 8.2459e-05, 8.263799999999946e-05, 8.26390000000024e-05, 8.205500000000102e-05, 8.243100000000086e-05, 8.252799999999838e-05, 8.220800000000028e-05, 8.190300000000122e-05, 8.21390000000019e-05, 8.26109999999998e-05, 8.231900000000084e-05, 8.245800000000053e-05, 8.26109999999998e-05, 8.21390000000019e-05, 8.24170000000013e-05, 8.173600000000239e-05, 8.19719999999996e-05, 8.204199999999745e-05, 8.225000000000246e-05, 8.17780000000011e-05, 8.216700000000104e-05, 8.190299999999776e-05, 8.231899999999737e-05, 8.215300000000147e-05, 8.237500000000259e-05, 8.173599999999892e-05, 8.262499999999937e-05, 8.231900000000084e-05, 8.181999999999981e-05, 8.243100000000086e-05]</msg>
<status status="PASS" starttime="20201029 12:47:15.209" endtime="20201029 12:47:15.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.204" endtime="20201029 12:47:15.211"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:15.215" endtime="20201029 12:47:15.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.214" endtime="20201029 12:47:15.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.212" endtime="20201029 12:47:15.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.855" endtime="20201029 12:47:15.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.854" endtime="20201029 12:47:15.236"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.244" endtime="20201029 12:47:15.264"></status>
</kw>
<msg timestamp="20201029 12:47:15.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.243" endtime="20201029 12:47:15.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.266" endtime="20201029 12:47:15.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.268" endtime="20201029 12:47:15.270"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.240" endtime="20201029 12:47:15.270"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.238" endtime="20201029 12:47:15.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.277" endtime="20201029 12:47:15.563"></status>
</kw>
<msg timestamp="20201029 12:47:15.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022716417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02279975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:15.276" endtime="20201029 12:47:15.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022716417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02279975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:15.567" endtime="20201029 12:47:15.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.575" endtime="20201029 12:47:15.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.273" endtime="20201029 12:47:15.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.271" endtime="20201029 12:47:15.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:15.582" level="INFO">${RESULT} = [{'diff': 8.33330000000014e-05}, {'diff': 8.280600000000124e-05}, {'diff': 8.340299999999926e-05}, {'diff': 8.338899999999969e-05}, {'diff': 8.358299999999819e-05}, {'diff': 8.304199999999845e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:15.579" endtime="20201029 12:47:15.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:15.586" level="INFO">${ACCURACY} = {'diff': [8.33330000000014e-05, 8.280600000000124e-05, 8.340299999999926e-05, 8.338899999999969e-05, 8.358299999999819e-05, 8.304199999999845e-05, 8.295800000000103e-05, 8.306900000000159e-05, 8.31109...</msg>
<status status="PASS" starttime="20201029 12:47:15.583" endtime="20201029 12:47:15.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.591" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 12:47:15.590" endtime="20201029 12:47:15.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.593" level="INFO">VALUE: [8.33330000000014e-05, 8.280600000000124e-05, 8.340299999999926e-05, 8.338899999999969e-05, 8.358299999999819e-05, 8.304199999999845e-05, 8.295800000000103e-05, 8.306900000000159e-05, 8.311099999999683e-05, 8.323600000000042e-05, 8.33330000000014e-05, 8.277799999999863e-05, 8.282000000000081e-05, 8.35980000000007e-05, 8.372200000000135e-05, 8.288899999999919e-05, 8.292999999999842e-05, 8.340199999999978e-05, 8.340200000000325e-05, 8.338900000000316e-05, 8.290300000000222e-05, 8.337500000000012e-05, 8.354200000000242e-05, 8.352799999999938e-05, 8.375000000000049e-05, 8.318100000000161e-05, 8.302799999999888e-05, 8.351299999999687e-05, 8.29309999999979e-05, 8.279099999999873e-05, 8.334700000000098e-05, 8.287499999999962e-05, 8.31390000000029e-05, 8.355600000000199e-05, 8.324999999999999e-05, 8.269400000000121e-05, 8.337500000000012e-05, 8.356899999999862e-05, 8.340200000000325e-05, 8.358299999999819e-05, 8.290299999999876e-05, 8.34720000000011e-05, 8.338899999999969e-05, 8.343100000000186e-05, 8.326399999999956e-05, 8.306999999999759e-05, 8.319399999999824e-05, 8.375000000000049e-05, 8.291599999999885e-05, 8.347199999999763e-05]</msg>
<status status="PASS" starttime="20201029 12:47:15.592" endtime="20201029 12:47:15.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.587" endtime="20201029 12:47:15.595"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:15.599" endtime="20201029 12:47:15.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.597" endtime="20201029 12:47:15.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.596" endtime="20201029 12:47:15.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.237" endtime="20201029 12:47:15.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.236" endtime="20201029 12:47:15.619"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.628" endtime="20201029 12:47:15.648"></status>
</kw>
<msg timestamp="20201029 12:47:15.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.627" endtime="20201029 12:47:15.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.649" endtime="20201029 12:47:15.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.652" endtime="20201029 12:47:15.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.624" endtime="20201029 12:47:15.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.622" endtime="20201029 12:47:15.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.661" endtime="20201029 12:47:15.946"></status>
</kw>
<msg timestamp="20201029 12:47:15.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022238972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022322986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:15.659" endtime="20201029 12:47:15.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022238972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022322986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:15.950" endtime="20201029 12:47:15.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.958" endtime="20201029 12:47:15.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.657" endtime="20201029 12:47:15.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.655" endtime="20201029 12:47:15.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:15.965" level="INFO">${RESULT} = [{'diff': 8.401400000000031e-05}, {'diff': 8.39170000000028e-05}, {'diff': 8.436100000000155e-05}, {'diff': 8.438800000000121e-05}, {'diff': 8.455599999999952e-05}, {'diff': 8.413899999999697e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:15.962" endtime="20201029 12:47:15.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:15.972" level="INFO">${ACCURACY} = {'diff': [8.401400000000031e-05, 8.39170000000028e-05, 8.436100000000155e-05, 8.438800000000121e-05, 8.455599999999952e-05, 8.413899999999697e-05, 8.398700000000064e-05, 8.374999999999702e-05, 8.47219...</msg>
<status status="PASS" starttime="20201029 12:47:15.966" endtime="20201029 12:47:15.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.977" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 12:47:15.976" endtime="20201029 12:47:15.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.979" level="INFO">VALUE: [8.401400000000031e-05, 8.39170000000028e-05, 8.436100000000155e-05, 8.438800000000121e-05, 8.455599999999952e-05, 8.413899999999697e-05, 8.398700000000064e-05, 8.374999999999702e-05, 8.472199999999888e-05, 8.424999999999752e-05, 8.404200000000292e-05, 8.422200000000185e-05, 8.433299999999894e-05, 8.406999999999859e-05, 8.376400000000006e-05, 8.427800000000013e-05, 8.437499999999765e-05, 8.43469999999985e-05, 8.455599999999952e-05, 8.441600000000035e-05, 8.408300000000216e-05, 8.43049999999998e-05, 8.390299999999976e-05, 8.455599999999952e-05, 8.440300000000026e-05, 8.458400000000213e-05, 8.390300000000323e-05, 8.427800000000013e-05, 8.426300000000109e-05, 8.383299999999844e-05, 8.422199999999838e-05, 8.425000000000099e-05, 8.455500000000005e-05, 8.376400000000006e-05, 8.390299999999976e-05, 8.451400000000081e-05, 8.440300000000026e-05, 8.405599999999902e-05, 8.397300000000107e-05, 8.457000000000256e-05, 8.423599999999795e-05, 8.43469999999985e-05, 8.455500000000005e-05, 8.458300000000266e-05, 8.376400000000006e-05, 8.408400000000163e-05, 8.380599999999877e-05, 8.405499999999955e-05, 8.387499999999715e-05, 8.394399999999899e-05]</msg>
<status status="PASS" starttime="20201029 12:47:15.978" endtime="20201029 12:47:15.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.973" endtime="20201029 12:47:15.981"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:15.984" endtime="20201029 12:47:16.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.983" endtime="20201029 12:47:16.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.982" endtime="20201029 12:47:16.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.620" endtime="20201029 12:47:16.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.620" endtime="20201029 12:47:16.005"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.013" endtime="20201029 12:47:16.033"></status>
</kw>
<msg timestamp="20201029 12:47:16.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.012" endtime="20201029 12:47:16.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.034" endtime="20201029 12:47:16.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.037" endtime="20201029 12:47:16.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.009" endtime="20201029 12:47:16.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.007" endtime="20201029 12:47:16.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.046" endtime="20201029 12:47:16.333"></status>
</kw>
<msg timestamp="20201029 12:47:16.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022056778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022142347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.044" endtime="20201029 12:47:16.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022056778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022142347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.337" endtime="20201029 12:47:16.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.345" endtime="20201029 12:47:16.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.042" endtime="20201029 12:47:16.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.040" endtime="20201029 12:47:16.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:16.351" level="INFO">${RESULT} = [{'diff': 8.556900000000062e-05}, {'diff': 8.495899999999904e-05}, {'diff': 8.506999999999959e-05}, {'diff': 8.540300000000126e-05}, {'diff': 8.563899999999847e-05}, {'diff': 8.565299999999804e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:16.348" endtime="20201029 12:47:16.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:16.355" level="INFO">${ACCURACY} = {'diff': [8.556900000000062e-05, 8.495899999999904e-05, 8.506999999999959e-05, 8.540300000000126e-05, 8.563899999999847e-05, 8.565299999999804e-05, 8.508299999999969e-05, 8.490300000000076e-05, 8.5250...</msg>
<status status="PASS" starttime="20201029 12:47:16.352" endtime="20201029 12:47:16.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.360" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 12:47:16.359" endtime="20201029 12:47:16.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.362" level="INFO">VALUE: [8.556900000000062e-05, 8.495899999999904e-05, 8.506999999999959e-05, 8.540300000000126e-05, 8.563899999999847e-05, 8.565299999999804e-05, 8.508299999999969e-05, 8.490300000000076e-05, 8.525000000000199e-05, 8.527800000000113e-05, 8.536099999999908e-05, 8.49859999999987e-05, 8.544400000000049e-05, 8.537499999999865e-05, 8.490200000000128e-05, 8.506900000000012e-05, 8.554100000000148e-05, 8.566700000000108e-05, 8.494399999999999e-05, 8.49859999999987e-05, 8.533399999999941e-05, 8.555600000000052e-05, 8.515299999999754e-05, 8.541700000000083e-05, 8.509700000000273e-05, 8.479100000000073e-05, 8.562500000000237e-05, 8.523599999999895e-05, 8.515299999999754e-05, 8.551399999999834e-05, 8.491700000000033e-05, 8.506999999999959e-05, 8.52370000000019e-05, 8.477800000000063e-05, 8.513899999999797e-05, 8.565299999999804e-05, 8.49859999999987e-05, 8.56530000000015e-05, 8.509699999999926e-05, 8.555500000000105e-05, 8.474999999999802e-05, 8.500000000000174e-05, 8.475000000000149e-05, 8.541700000000083e-05, 8.53469999999995e-05, 8.52920000000007e-05, 8.534700000000298e-05, 8.506900000000012e-05, 8.493000000000042e-05, 8.549999999999877e-05]</msg>
<status status="PASS" starttime="20201029 12:47:16.361" endtime="20201029 12:47:16.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.356" endtime="20201029 12:47:16.364"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:16.367" endtime="20201029 12:47:16.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.366" endtime="20201029 12:47:16.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.365" endtime="20201029 12:47:16.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.006" endtime="20201029 12:47:16.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.005" endtime="20201029 12:47:16.388"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.396" endtime="20201029 12:47:16.417"></status>
</kw>
<msg timestamp="20201029 12:47:16.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.395" endtime="20201029 12:47:16.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.419" endtime="20201029 12:47:16.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.421" endtime="20201029 12:47:16.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.392" endtime="20201029 12:47:16.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.390" endtime="20201029 12:47:16.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.430" endtime="20201029 12:47:16.715"></status>
</kw>
<msg timestamp="20201029 12:47:16.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022620861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022707153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.429" endtime="20201029 12:47:16.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022620861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022707153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.719" endtime="20201029 12:47:16.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.727" endtime="20201029 12:47:16.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.426" endtime="20201029 12:47:16.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.424" endtime="20201029 12:47:16.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:16.734" level="INFO">${RESULT} = [{'diff': 8.62920000000017e-05}, {'diff': 8.608400000000016e-05}, {'diff': 8.673599999999698e-05}, {'diff': 8.66799999999987e-05}, {'diff': 8.609699999999679e-05}, {'diff': 8.608299999999722e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:16.731" endtime="20201029 12:47:16.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:16.738" level="INFO">${ACCURACY} = {'diff': [8.62920000000017e-05, 8.608400000000016e-05, 8.673599999999698e-05, 8.66799999999987e-05, 8.609699999999679e-05, 8.608299999999722e-05, 8.619399999999777e-05, 8.605500000000155e-05, 8.606900...</msg>
<status status="PASS" starttime="20201029 12:47:16.735" endtime="20201029 12:47:16.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.742" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 12:47:16.741" endtime="20201029 12:47:16.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.745" level="INFO">VALUE: [8.62920000000017e-05, 8.608400000000016e-05, 8.673599999999698e-05, 8.66799999999987e-05, 8.609699999999679e-05, 8.608299999999722e-05, 8.619399999999777e-05, 8.605500000000155e-05, 8.606900000000112e-05, 8.645900000000054e-05, 8.61249999999994e-05, 8.670800000000131e-05, 8.588899999999872e-05, 8.624999999999952e-05, 8.645799999999759e-05, 8.638799999999974e-05, 8.580499999999783e-05, 8.590299999999829e-05, 8.643000000000192e-05, 8.644500000000097e-05, 8.582000000000034e-05, 8.583300000000044e-05, 8.640299999999879e-05, 8.627800000000213e-05, 8.652699999999944e-05, 8.655499999999858e-05, 8.594400000000099e-05, 8.623599999999995e-05, 8.656899999999815e-05, 8.668099999999818e-05, 8.640300000000226e-05, 8.574999999999902e-05, 8.588900000000219e-05, 8.572200000000335e-05, 8.624999999999952e-05, 8.644399999999802e-05, 8.573599999999945e-05, 8.658300000000119e-05, 8.63189999999979e-05, 8.659700000000076e-05, 8.652800000000238e-05, 8.655600000000152e-05, 8.647200000000063e-05, 8.654100000000248e-05, 8.584799999999948e-05, 8.611099999999983e-05, 8.583300000000044e-05, 8.58050000000013e-05, 8.597200000000013e-05, 8.645799999999759e-05]</msg>
<status status="PASS" starttime="20201029 12:47:16.744" endtime="20201029 12:47:16.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.739" endtime="20201029 12:47:16.747"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:16.751" endtime="20201029 12:47:16.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.749" endtime="20201029 12:47:16.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.748" endtime="20201029 12:47:16.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.389" endtime="20201029 12:47:16.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.388" endtime="20201029 12:47:16.771"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.780" endtime="20201029 12:47:16.800"></status>
</kw>
<msg timestamp="20201029 12:47:16.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.778" endtime="20201029 12:47:16.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.801" endtime="20201029 12:47:16.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.804" endtime="20201029 12:47:16.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.776" endtime="20201029 12:47:16.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.774" endtime="20201029 12:47:16.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.813" endtime="20201029 12:47:17.098"></status>
</kw>
<msg timestamp="20201029 12:47:17.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021914083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022000917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.811" endtime="20201029 12:47:17.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021914083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022000917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:17.102" endtime="20201029 12:47:17.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.110" endtime="20201029 12:47:17.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.809" endtime="20201029 12:47:17.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.807" endtime="20201029 12:47:17.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:17.117" level="INFO">${RESULT} = [{'diff': 8.683399999999744e-05}, {'diff': 8.741699999999936e-05}, {'diff': 8.709700000000126e-05}, {'diff': 8.772199999999841e-05}, {'diff': 8.694399999999852e-05}, {'diff': 8.744399999999902e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:17.114" endtime="20201029 12:47:17.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:17.122" level="INFO">${ACCURACY} = {'diff': [8.683399999999744e-05, 8.741699999999936e-05, 8.709700000000126e-05, 8.772199999999841e-05, 8.694399999999852e-05, 8.744399999999902e-05, 8.73470000000015e-05, 8.691699999999886e-05, 8.70280...</msg>
<status status="PASS" starttime="20201029 12:47:17.118" endtime="20201029 12:47:17.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.126" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 12:47:17.125" endtime="20201029 12:47:17.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.129" level="INFO">VALUE: [8.683399999999744e-05, 8.741699999999936e-05, 8.709700000000126e-05, 8.772199999999841e-05, 8.694399999999852e-05, 8.744399999999902e-05, 8.73470000000015e-05, 8.691699999999886e-05, 8.702800000000288e-05, 8.723600000000095e-05, 8.755599999999905e-05, 8.762499999999743e-05, 8.673699999999993e-05, 8.690199999999981e-05, 8.742999999999945e-05, 8.74860000000012e-05, 8.683300000000144e-05, 8.74860000000012e-05, 8.748599999999773e-05, 8.758399999999819e-05, 8.715299999999954e-05, 8.761099999999786e-05, 8.742999999999945e-05, 8.719499999999825e-05, 8.713899999999997e-05, 8.727799999999966e-05, 8.747200000000163e-05, 8.675000000000002e-05, 8.726399999999662e-05, 8.687500000000015e-05, 8.690299999999929e-05, 8.756999999999862e-05, 8.76250000000009e-05, 8.708300000000169e-05, 8.688899999999972e-05, 8.742999999999945e-05, 8.76250000000009e-05, 8.690299999999929e-05, 8.709700000000126e-05, 8.687500000000015e-05, 8.755600000000252e-05, 8.715200000000006e-05, 8.697199999999766e-05, 8.76250000000009e-05, 8.690199999999981e-05, 8.744400000000249e-05, 8.719500000000172e-05, 8.745800000000206e-05, 8.673600000000045e-05, 8.691700000000233e-05]</msg>
<status status="PASS" starttime="20201029 12:47:17.127" endtime="20201029 12:47:17.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.123" endtime="20201029 12:47:17.130"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:17.134" endtime="20201029 12:47:17.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.132" endtime="20201029 12:47:17.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.131" endtime="20201029 12:47:17.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.772" endtime="20201029 12:47:17.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.772" endtime="20201029 12:47:17.155"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.163" endtime="20201029 12:47:17.183"></status>
</kw>
<msg timestamp="20201029 12:47:17.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:17.161" endtime="20201029 12:47:17.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:17.185" endtime="20201029 12:47:17.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.187" endtime="20201029 12:47:17.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.159" endtime="20201029 12:47:17.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.157" endtime="20201029 12:47:17.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.197" endtime="20201029 12:47:17.483"></status>
</kw>
<msg timestamp="20201029 12:47:17.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022083597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022171944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:17.195" endtime="20201029 12:47:17.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022083597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022171944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:17.487" endtime="20201029 12:47:17.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.496" endtime="20201029 12:47:17.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.192" endtime="20201029 12:47:17.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.190" endtime="20201029 12:47:17.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:17.502" level="INFO">${RESULT} = [{'diff': 8.834699999999904e-05}, {'diff': 8.76799999999997e-05}, {'diff': 8.83189999999999e-05}, {'diff': 8.815300000000054e-05}, {'diff': 8.815300000000054e-05}, {'diff': 8.79860000000017e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:47:17.499" endtime="20201029 12:47:17.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:17.506" level="INFO">${ACCURACY} = {'diff': [8.834699999999904e-05, 8.76799999999997e-05, 8.83189999999999e-05, 8.815300000000054e-05, 8.815300000000054e-05, 8.79860000000017e-05, 8.840300000000079e-05, 8.841700000000036e-05, 8.8222000...</msg>
<status status="PASS" starttime="20201029 12:47:17.503" endtime="20201029 12:47:17.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.511" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 12:47:17.510" endtime="20201029 12:47:17.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.513" level="INFO">VALUE: [8.834699999999904e-05, 8.76799999999997e-05, 8.83189999999999e-05, 8.815300000000054e-05, 8.815300000000054e-05, 8.79860000000017e-05, 8.840300000000079e-05, 8.841700000000036e-05, 8.822200000000238e-05, 8.854100000000101e-05, 8.772200000000188e-05, 8.827800000000066e-05, 8.838900000000122e-05, 8.841700000000036e-05, 8.874999999999855e-05, 8.813900000000097e-05, 8.804199999999998e-05, 8.84449999999995e-05, 8.795900000000204e-05, 8.805599999999955e-05, 8.776399999999712e-05, 8.801399999999737e-05, 8.815299999999707e-05, 8.813900000000097e-05, 8.859699999999929e-05, 8.861099999999886e-05, 8.837500000000165e-05, 8.86670000000006e-05, 8.773600000000145e-05, 8.863900000000147e-05, 8.808299999999922e-05, 8.841600000000088e-05, 8.856900000000015e-05, 8.820799999999934e-05, 8.775000000000102e-05, 8.81670000000001e-05, 8.802699999999747e-05, 8.875000000000202e-05, 8.813900000000097e-05, 8.79999999999978e-05, 8.777800000000016e-05, 8.81519999999976e-05, 8.863900000000147e-05, 8.773600000000145e-05, 8.834699999999904e-05, 8.786100000000158e-05, 8.822200000000238e-05, 8.841700000000036e-05, 8.873599999999898e-05, 8.841700000000036e-05]</msg>
<status status="PASS" starttime="20201029 12:47:17.512" endtime="20201029 12:47:17.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.507" endtime="20201029 12:47:17.514"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:17.518" endtime="20201029 12:47:17.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.516" endtime="20201029 12:47:17.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.515" endtime="20201029 12:47:17.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.155" endtime="20201029 12:47:17.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.155" endtime="20201029 12:47:17.539"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.547" endtime="20201029 12:47:17.568"></status>
</kw>
<msg timestamp="20201029 12:47:17.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:17.546" endtime="20201029 12:47:17.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:17.569" endtime="20201029 12:47:17.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.572" endtime="20201029 12:47:17.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.543" endtime="20201029 12:47:17.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.541" endtime="20201029 12:47:17.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.581" endtime="20201029 12:47:17.866"></status>
</kw>
<msg timestamp="20201029 12:47:17.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022701778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022790708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:17.579" endtime="20201029 12:47:17.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022701778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022790708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:17.870" endtime="20201029 12:47:17.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.878" endtime="20201029 12:47:17.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.576" endtime="20201029 12:47:17.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.575" endtime="20201029 12:47:17.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:17.885" level="INFO">${RESULT} = [{'diff': 8.893000000000095e-05}, {'diff': 8.934700000000004e-05}, {'diff': 8.873600000000245e-05}, {'diff': 8.96519999999991e-05}, {'diff': 8.89999999999988e-05}, {'diff': 8.89999999999988e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:47:17.882" endtime="20201029 12:47:17.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:17.889" level="INFO">${ACCURACY} = {'diff': [8.893000000000095e-05, 8.934700000000004e-05, 8.873600000000245e-05, 8.96519999999991e-05, 8.89999999999988e-05, 8.89999999999988e-05, 8.900000000000227e-05, 8.904099999999804e-05, 8.8832999...</msg>
<status status="PASS" starttime="20201029 12:47:17.886" endtime="20201029 12:47:17.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.894" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 12:47:17.892" endtime="20201029 12:47:17.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.896" level="INFO">VALUE: [8.893000000000095e-05, 8.934700000000004e-05, 8.873600000000245e-05, 8.96519999999991e-05, 8.89999999999988e-05, 8.89999999999988e-05, 8.900000000000227e-05, 8.904099999999804e-05, 8.883299999999997e-05, 8.956900000000115e-05, 8.888900000000172e-05, 8.897199999999966e-05, 8.938899999999875e-05, 8.958400000000019e-05, 8.920899999999982e-05, 8.877799999999769e-05, 8.89999999999988e-05, 8.922199999999991e-05, 8.873599999999898e-05, 8.933300000000047e-05, 8.915299999999807e-05, 8.888899999999825e-05, 8.915300000000154e-05, 8.937499999999918e-05, 8.907000000000012e-05, 8.924999999999905e-05, 8.870799999999984e-05, 8.897199999999966e-05, 8.890300000000129e-05, 8.898599999999923e-05, 8.904199999999751e-05, 8.934700000000004e-05, 8.93060000000008e-05, 8.9332999999997e-05, 8.891600000000138e-05, 8.963900000000247e-05, 8.883299999999997e-05, 8.956900000000115e-05, 8.959700000000029e-05, 8.888899999999825e-05, 8.945800000000059e-05, 8.874999999999855e-05, 8.959799999999976e-05, 8.887500000000215e-05, 8.88060000000003e-05, 8.906900000000065e-05, 8.905500000000108e-05, 8.941599999999841e-05, 8.905499999999761e-05, 8.968100000000118e-05]</msg>
<status status="PASS" starttime="20201029 12:47:17.895" endtime="20201029 12:47:17.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.890" endtime="20201029 12:47:17.898"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:17.902" endtime="20201029 12:47:17.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.900" endtime="20201029 12:47:17.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.899" endtime="20201029 12:47:17.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.539" endtime="20201029 12:47:17.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.539" endtime="20201029 12:47:17.922"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.931" endtime="20201029 12:47:17.951"></status>
</kw>
<msg timestamp="20201029 12:47:17.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:17.929" endtime="20201029 12:47:17.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:17.952" endtime="20201029 12:47:17.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.955" endtime="20201029 12:47:17.956"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.927" endtime="20201029 12:47:17.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.925" endtime="20201029 12:47:17.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.964" endtime="20201029 12:47:18.249"></status>
</kw>
<msg timestamp="20201029 12:47:18.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021908236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021998694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:17.962" endtime="20201029 12:47:18.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021908236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021998694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:18.253" endtime="20201029 12:47:18.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.261" endtime="20201029 12:47:18.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.960" endtime="20201029 12:47:18.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.958" endtime="20201029 12:47:18.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:18.268" level="INFO">${RESULT} = [{'diff': 9.045799999999812e-05}, {'diff': 9.034699999999757e-05}, {'diff': 9.03060000000018e-05}, {'diff': 9.075000000000055e-05}, {'diff': 9.073600000000098e-05}, {'diff': 9.037500000000018e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:18.265" endtime="20201029 12:47:18.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:18.273" level="INFO">${ACCURACY} = {'diff': [9.045799999999812e-05, 9.034699999999757e-05, 9.03060000000018e-05, 9.075000000000055e-05, 9.073600000000098e-05, 9.037500000000018e-05, 9.038899999999975e-05, 8.991599999999891e-05, 9.01939...</msg>
<status status="PASS" starttime="20201029 12:47:18.269" endtime="20201029 12:47:18.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.277" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 12:47:18.276" endtime="20201029 12:47:18.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.279" level="INFO">VALUE: [9.045799999999812e-05, 9.034699999999757e-05, 9.03060000000018e-05, 9.075000000000055e-05, 9.073600000000098e-05, 9.037500000000018e-05, 9.038899999999975e-05, 8.991599999999891e-05, 9.01939999999983e-05, 9.040199999999984e-05, 9.045800000000159e-05, 9.006900000000165e-05, 9.05000000000003e-05, 9.0639e-05, 9.020800000000134e-05, 9.040299999999932e-05, 8.988899999999925e-05, 9.029199999999876e-05, 9.05130000000004e-05, 9.052699999999997e-05, 9.005499999999861e-05, 8.98190000000014e-05, 8.990299999999882e-05, 9.062499999999696e-05, 9.05000000000003e-05, 9.032000000000137e-05, 8.995800000000109e-05, 9.047200000000116e-05, 9.038899999999975e-05, 9.024999999999658e-05, 8.991599999999891e-05, 9.048600000000073e-05, 9.029199999999876e-05, 9.070800000000184e-05, 9.004199999999851e-05, 8.974999999999955e-05, 9.007000000000112e-05, 9.029099999999929e-05, 9.047200000000116e-05, 8.990300000000229e-05, 9.01389999999995e-05, 9.058299999999825e-05, 9.056899999999868e-05, 9.040299999999932e-05, 8.993099999999796e-05, 9.048600000000073e-05, 8.979199999999826e-05, 9.00129999999999e-05, 8.990199999999934e-05, 9.0639e-05]</msg>
<status status="PASS" starttime="20201029 12:47:18.278" endtime="20201029 12:47:18.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.274" endtime="20201029 12:47:18.281"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:18.285" endtime="20201029 12:47:18.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.283" endtime="20201029 12:47:18.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.282" endtime="20201029 12:47:18.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.923" endtime="20201029 12:47:18.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.923" endtime="20201029 12:47:18.305"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.314" endtime="20201029 12:47:18.333"></status>
</kw>
<msg timestamp="20201029 12:47:18.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.312" endtime="20201029 12:47:18.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.334" endtime="20201029 12:47:18.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.337" endtime="20201029 12:47:18.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.310" endtime="20201029 12:47:18.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.308" endtime="20201029 12:47:18.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.346" endtime="20201029 12:47:18.633"></status>
</kw>
<msg timestamp="20201029 12:47:18.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021695458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021786972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:18.344" endtime="20201029 12:47:18.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021695458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021786972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:18.637" endtime="20201029 12:47:18.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.645" endtime="20201029 12:47:18.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.342" endtime="20201029 12:47:18.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.340" endtime="20201029 12:47:18.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:18.651" level="INFO">${RESULT} = [{'diff': 9.151400000000087e-05}, {'diff': 9.131899999999943e-05}, {'diff': 9.091699999999939e-05}, {'diff': 9.140300000000032e-05}, {'diff': 9.166700000000014e-05}, {'diff': 9.11390000000005e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:18.648" endtime="20201029 12:47:18.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:18.655" level="INFO">${ACCURACY} = {'diff': [9.151400000000087e-05, 9.131899999999943e-05, 9.091699999999939e-05, 9.140300000000032e-05, 9.166700000000014e-05, 9.11390000000005e-05, 9.092999999999948e-05, 9.079099999999979e-05, 9.14439...</msg>
<status status="PASS" starttime="20201029 12:47:18.652" endtime="20201029 12:47:18.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.660" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 12:47:18.659" endtime="20201029 12:47:18.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.662" level="INFO">VALUE: [9.151400000000087e-05, 9.131899999999943e-05, 9.091699999999939e-05, 9.140300000000032e-05, 9.166700000000014e-05, 9.11390000000005e-05, 9.092999999999948e-05, 9.079099999999979e-05, 9.144399999999955e-05, 9.140300000000032e-05, 9.122199999999844e-05, 9.090299999999982e-05, 9.137499999999771e-05, 9.10000000000008e-05, 9.106999999999865e-05, 9.130599999999933e-05, 9.179200000000026e-05, 9.155500000000011e-05, 9.140200000000084e-05, 9.076400000000012e-05, 9.122199999999844e-05, 9.130599999999933e-05, 9.11800000000032e-05, 9.151400000000087e-05, 9.140300000000032e-05, 9.098600000000123e-05, 9.138800000000127e-05, 9.156999999999915e-05, 9.105499999999961e-05, 9.08190000000024e-05, 9.166600000000066e-05, 9.16529999999971e-05, 9.163899999999753e-05, 9.154200000000001e-05, 9.140300000000032e-05, 9.074999999999708e-05, 9.173700000000146e-05, 9.106899999999918e-05, 9.098599999999776e-05, 9.108299999999875e-05, 9.16529999999971e-05, 9.112499999999746e-05, 9.149999999999783e-05, 9.156899999999968e-05, 9.107000000000212e-05, 9.138899999999728e-05, 9.109699999999832e-05, 9.077699999999675e-05, 9.113899999999703e-05, 9.095799999999862e-05]</msg>
<status status="PASS" starttime="20201029 12:47:18.661" endtime="20201029 12:47:18.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.656" endtime="20201029 12:47:18.664"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:18.667" endtime="20201029 12:47:18.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.666" endtime="20201029 12:47:18.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.664" endtime="20201029 12:47:18.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.306" endtime="20201029 12:47:18.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.306" endtime="20201029 12:47:18.688"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.696" endtime="20201029 12:47:18.717"></status>
</kw>
<msg timestamp="20201029 12:47:18.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.695" endtime="20201029 12:47:18.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.718" endtime="20201029 12:47:18.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.721" endtime="20201029 12:47:18.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.692" endtime="20201029 12:47:18.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.690" endtime="20201029 12:47:18.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.729" endtime="20201029 12:47:19.014"></status>
</kw>
<msg timestamp="20201029 12:47:19.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022688208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022780042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:18.728" endtime="20201029 12:47:19.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022688208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022780042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:19.018" endtime="20201029 12:47:19.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.026" endtime="20201029 12:47:19.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.725" endtime="20201029 12:47:19.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.724" endtime="20201029 12:47:19.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:19.032" level="INFO">${RESULT} = [{'diff': 9.183399999999897e-05}, {'diff': 9.209699999999932e-05}, {'diff': 9.24719999999997e-05}, {'diff': 9.224999999999858e-05}, {'diff': 9.195799999999962e-05}, {'diff': 9.268100000000071e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:19.029" endtime="20201029 12:47:19.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:19.036" level="INFO">${ACCURACY} = {'diff': [9.183399999999897e-05, 9.209699999999932e-05, 9.24719999999997e-05, 9.224999999999858e-05, 9.195799999999962e-05, 9.268100000000071e-05, 9.268100000000071e-05, 9.206999999999965e-05, 9.20839...</msg>
<status status="PASS" starttime="20201029 12:47:19.033" endtime="20201029 12:47:19.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.041" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 12:47:19.040" endtime="20201029 12:47:19.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.043" level="INFO">VALUE: [9.183399999999897e-05, 9.209699999999932e-05, 9.24719999999997e-05, 9.224999999999858e-05, 9.195799999999962e-05, 9.268100000000071e-05, 9.268100000000071e-05, 9.206999999999965e-05, 9.208399999999922e-05, 9.191700000000039e-05, 9.237500000000218e-05, 9.213899999999803e-05, 9.209699999999932e-05, 9.194400000000005e-05, 9.190300000000082e-05, 9.201400000000137e-05, 9.208399999999922e-05, 9.179200000000026e-05, 9.244500000000003e-05, 9.194400000000005e-05, 9.238899999999828e-05, 9.266600000000166e-05, 9.208299999999975e-05, 9.238899999999828e-05, 9.249999999999883e-05, 9.238899999999828e-05, 9.212499999999846e-05, 9.225000000000205e-05, 9.179200000000026e-05, 9.247299999999917e-05, 9.202700000000147e-05, 9.191600000000091e-05, 9.190200000000134e-05, 9.206900000000018e-05, 9.238900000000175e-05, 9.229200000000076e-05, 9.191700000000039e-05, 9.238900000000175e-05, 9.215300000000107e-05, 9.193099999999996e-05, 9.205500000000061e-05, 9.206900000000018e-05, 9.187500000000168e-05, 9.238900000000175e-05, 9.230500000000086e-05, 9.208299999999975e-05, 9.179200000000026e-05, 9.193099999999996e-05, 9.26529999999981e-05, 9.227799999999772e-05]</msg>
<status status="PASS" starttime="20201029 12:47:19.042" endtime="20201029 12:47:19.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.037" endtime="20201029 12:47:19.045"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:19.049" endtime="20201029 12:47:19.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.048" endtime="20201029 12:47:19.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.046" endtime="20201029 12:47:19.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.689" endtime="20201029 12:47:19.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.688" endtime="20201029 12:47:19.070"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.078" endtime="20201029 12:47:19.098"></status>
</kw>
<msg timestamp="20201029 12:47:19.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.077" endtime="20201029 12:47:19.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.099" endtime="20201029 12:47:19.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.101" endtime="20201029 12:47:19.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.074" endtime="20201029 12:47:19.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.072" endtime="20201029 12:47:19.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.110" endtime="20201029 12:47:19.396"></status>
</kw>
<msg timestamp="20201029 12:47:19.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021695222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021788597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:19.109" endtime="20201029 12:47:19.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021695222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021788597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:19.401" endtime="20201029 12:47:19.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.409" endtime="20201029 12:47:19.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.106" endtime="20201029 12:47:19.411"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.105" endtime="20201029 12:47:19.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:19.415" level="INFO">${RESULT} = [{'diff': 9.337499999999971e-05}, {'diff': 9.341700000000189e-05}, {'diff': 9.359700000000082e-05}, {'diff': 9.293099999999749e-05}, {'diff': 9.307000000000065e-05}, {'diff': 9.340299999999885e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:19.412" endtime="20201029 12:47:19.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:19.423" level="INFO">${ACCURACY} = {'diff': [9.337499999999971e-05, 9.341700000000189e-05, 9.359700000000082e-05, 9.293099999999749e-05, 9.307000000000065e-05, 9.340299999999885e-05, 9.312499999999946e-05, 9.31529999999986e-05, 9.34869...</msg>
<status status="PASS" starttime="20201029 12:47:19.416" endtime="20201029 12:47:19.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.427" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 12:47:19.426" endtime="20201029 12:47:19.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.429" level="INFO">VALUE: [9.337499999999971e-05, 9.341700000000189e-05, 9.359700000000082e-05, 9.293099999999749e-05, 9.307000000000065e-05, 9.340299999999885e-05, 9.312499999999946e-05, 9.31529999999986e-05, 9.348699999999974e-05, 9.340200000000284e-05, 9.312499999999946e-05, 9.29720000000002e-05, 9.363899999999953e-05, 9.308300000000075e-05, 9.311099999999989e-05, 9.337499999999971e-05, 9.359700000000082e-05, 9.309799999999979e-05, 9.305499999999814e-05, 9.324999999999958e-05, 9.306899999999771e-05, 9.309700000000032e-05, 9.341699999999842e-05, 9.344399999999808e-05, 9.273599999999951e-05, 9.273599999999951e-05, 9.308400000000022e-05, 9.323699999999949e-05, 9.362499999999996e-05, 9.312499999999946e-05, 9.35139999999994e-05, 9.36940000000018e-05, 9.331899999999796e-05, 9.361100000000039e-05, 9.313899999999903e-05, 9.273599999999951e-05, 9.277699999999875e-05, 9.355600000000158e-05, 9.297299999999967e-05, 9.298599999999976e-05, 9.281900000000093e-05, 9.298599999999976e-05, 9.36529999999991e-05, 9.354199999999854e-05, 9.28200000000004e-05, 9.344500000000103e-05, 9.276399999999865e-05, 9.340299999999885e-05, 9.352799999999897e-05, 9.309700000000032e-05]</msg>
<status status="PASS" starttime="20201029 12:47:19.428" endtime="20201029 12:47:19.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.423" endtime="20201029 12:47:19.431"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:19.435" endtime="20201029 12:47:19.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.433" endtime="20201029 12:47:19.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.432" endtime="20201029 12:47:19.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.071" endtime="20201029 12:47:19.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.070" endtime="20201029 12:47:19.455"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.464" endtime="20201029 12:47:19.484"></status>
</kw>
<msg timestamp="20201029 12:47:19.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.462" endtime="20201029 12:47:19.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.485" endtime="20201029 12:47:19.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.488" endtime="20201029 12:47:19.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.460" endtime="20201029 12:47:19.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.458" endtime="20201029 12:47:19.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.497" endtime="20201029 12:47:19.783"></status>
</kw>
<msg timestamp="20201029 12:47:19.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021639847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021733861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:19.495" endtime="20201029 12:47:19.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021639847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021733861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:19.787" endtime="20201029 12:47:19.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.795" endtime="20201029 12:47:19.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.492" endtime="20201029 12:47:19.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.491" endtime="20201029 12:47:19.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:19.802" level="INFO">${RESULT} = [{'diff': 9.40139999999999e-05}, {'diff': 9.43469999999981e-05}, {'diff': 9.372200000000094e-05}, {'diff': 9.408400000000122e-05}, {'diff': 9.441699999999942e-05}, {'diff': 9.405600000000208e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:19.799" endtime="20201029 12:47:19.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:19.806" level="INFO">${ACCURACY} = {'diff': [9.40139999999999e-05, 9.43469999999981e-05, 9.372200000000094e-05, 9.408400000000122e-05, 9.441699999999942e-05, 9.405600000000208e-05, 9.373699999999999e-05, 9.425000000000058e-05, 9.470799...</msg>
<status status="PASS" starttime="20201029 12:47:19.803" endtime="20201029 12:47:19.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.810" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 12:47:19.809" endtime="20201029 12:47:19.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.813" level="INFO">VALUE: [9.40139999999999e-05, 9.43469999999981e-05, 9.372200000000094e-05, 9.408400000000122e-05, 9.441699999999942e-05, 9.405600000000208e-05, 9.373699999999999e-05, 9.425000000000058e-05, 9.47079999999989e-05, 9.462499999999749e-05, 9.384700000000107e-05, 9.390300000000282e-05, 9.387500000000021e-05, 9.406999999999818e-05, 9.455599999999911e-05, 9.447199999999822e-05, 9.426300000000068e-05, 9.411100000000089e-05, 9.388900000000325e-05, 9.458300000000225e-05, 9.44859999999978e-05, 9.38330000000015e-05, 9.409800000000079e-05, 9.426300000000068e-05, 9.391600000000291e-05, 9.375000000000008e-05, 9.441599999999994e-05, 9.444399999999908e-05, 9.431900000000243e-05, 9.422200000000144e-05, 9.457000000000215e-05, 9.430599999999886e-05, 9.45140000000004e-05, 9.411100000000089e-05, 9.456899999999921e-05, 9.444399999999908e-05, 9.448600000000126e-05, 9.390199999999987e-05, 9.409699999999785e-05, 9.388899999999978e-05, 9.373600000000051e-05, 9.375000000000008e-05, 9.376300000000018e-05, 9.456999999999868e-05, 9.445899999999813e-05, 9.38880000000003e-05, 9.391599999999944e-05, 9.440299999999985e-05, 9.412500000000046e-05, 9.431999999999843e-05]</msg>
<status status="PASS" starttime="20201029 12:47:19.811" endtime="20201029 12:47:19.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.807" endtime="20201029 12:47:19.814"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:19.818" endtime="20201029 12:47:19.837"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.816" endtime="20201029 12:47:19.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.815" endtime="20201029 12:47:19.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.456" endtime="20201029 12:47:19.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.456" endtime="20201029 12:47:19.838"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.847" endtime="20201029 12:47:19.867"></status>
</kw>
<msg timestamp="20201029 12:47:19.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.845" endtime="20201029 12:47:19.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.868" endtime="20201029 12:47:19.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.871" endtime="20201029 12:47:19.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.843" endtime="20201029 12:47:19.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.841" endtime="20201029 12:47:19.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.879" endtime="20201029 12:47:20.166"></status>
</kw>
<msg timestamp="20201029 12:47:20.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022568542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022663556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:19.878" endtime="20201029 12:47:20.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022568542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022663556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:20.170" endtime="20201029 12:47:20.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.178" endtime="20201029 12:47:20.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.875" endtime="20201029 12:47:20.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.874" endtime="20201029 12:47:20.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:20.185" level="INFO">${RESULT} = [{'diff': 9.50140000000009e-05}, {'diff': 9.565199999999816e-05}, {'diff': 9.540300000000085e-05}, {'diff': 9.555500000000064e-05}, {'diff': 9.570899999999938e-05}, {'diff': 9.49859999999983e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:20.181" endtime="20201029 12:47:20.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:20.189" level="INFO">${ACCURACY} = {'diff': [9.50140000000009e-05, 9.565199999999816e-05, 9.540300000000085e-05, 9.555500000000064e-05, 9.570899999999938e-05, 9.49859999999983e-05, 9.574999999999861e-05, 9.512499999999799e-05, 9.522300...</msg>
<status status="PASS" starttime="20201029 12:47:20.186" endtime="20201029 12:47:20.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.193" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 12:47:20.192" endtime="20201029 12:47:20.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.196" level="INFO">VALUE: [9.50140000000009e-05, 9.565199999999816e-05, 9.540300000000085e-05, 9.555500000000064e-05, 9.570899999999938e-05, 9.49859999999983e-05, 9.574999999999861e-05, 9.512499999999799e-05, 9.522300000000192e-05, 9.559699999999935e-05, 9.481899999999946e-05, 9.541599999999748e-05, 9.488899999999731e-05, 9.51530000000006e-05, 9.529200000000029e-05, 9.545800000000312e-05, 9.481999999999893e-05, 9.49859999999983e-05, 9.524999999999811e-05, 9.488900000000078e-05, 9.515200000000112e-05, 9.479100000000032e-05, 9.5027000000001e-05, 9.488900000000078e-05, 9.505500000000014e-05, 9.527799999999725e-05, 9.555600000000011e-05, 9.486100000000164e-05, 9.548600000000226e-05, 9.509699999999885e-05, 9.490200000000087e-05, 9.542999999999704e-05, 9.541700000000042e-05, 9.522200000000244e-05, 9.473600000000151e-05, 9.51530000000006e-05, 9.563899999999806e-05, 9.526299999999821e-05, 9.505599999999961e-05, 9.525000000000158e-05, 9.487500000000121e-05, 9.565199999999816e-05, 9.473599999999804e-05, 9.533299999999953e-05, 9.531999999999943e-05, 9.51530000000006e-05, 9.56530000000011e-05, 9.543000000000051e-05, 9.522299999999845e-05, 9.490200000000087e-05]</msg>
<status status="PASS" starttime="20201029 12:47:20.194" endtime="20201029 12:47:20.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.190" endtime="20201029 12:47:20.198"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:20.201" endtime="20201029 12:47:20.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.200" endtime="20201029 12:47:20.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.199" endtime="20201029 12:47:20.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.839" endtime="20201029 12:47:20.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.839" endtime="20201029 12:47:20.222"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.230" endtime="20201029 12:47:20.250"></status>
</kw>
<msg timestamp="20201029 12:47:20.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.229" endtime="20201029 12:47:20.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.251" endtime="20201029 12:47:20.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.254" endtime="20201029 12:47:20.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.226" endtime="20201029 12:47:20.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.224" endtime="20201029 12:47:20.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.263" endtime="20201029 12:47:20.548"></status>
</kw>
<msg timestamp="20201029 12:47:20.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021650431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021746792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:20.261" endtime="20201029 12:47:20.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021650431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021746792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:20.552" endtime="20201029 12:47:20.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.560" endtime="20201029 12:47:20.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.259" endtime="20201029 12:47:20.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.257" endtime="20201029 12:47:20.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:20.567" level="INFO">${RESULT} = [{'diff': 9.636099999999967e-05}, {'diff': 9.579199999999732e-05}, {'diff': 9.620899999999988e-05}, {'diff': 9.623599999999954e-05}, {'diff': 9.66669999999982e-05}, {'diff': 9.673600000000004e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:20.563" endtime="20201029 12:47:20.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:20.572" level="INFO">${ACCURACY} = {'diff': [9.636099999999967e-05, 9.579199999999732e-05, 9.620899999999988e-05, 9.623599999999954e-05, 9.66669999999982e-05, 9.673600000000004e-05, 9.638899999999881e-05, 9.643100000000099e-05, 9.64029...</msg>
<status status="PASS" starttime="20201029 12:47:20.568" endtime="20201029 12:47:20.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.576" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 12:47:20.575" endtime="20201029 12:47:20.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.578" level="INFO">VALUE: [9.636099999999967e-05, 9.579199999999732e-05, 9.620899999999988e-05, 9.623599999999954e-05, 9.66669999999982e-05, 9.673600000000004e-05, 9.638899999999881e-05, 9.643100000000099e-05, 9.640299999999838e-05, 9.623599999999954e-05, 9.591699999999745e-05, 9.618000000000126e-05, 9.59859999999993e-05, 9.652800000000197e-05, 9.586100000000264e-05, 9.645800000000065e-05, 9.64729999999997e-05, 9.61669999999977e-05, 9.612499999999899e-05, 9.6027000000002e-05, 9.588900000000178e-05, 9.626300000000268e-05, 9.630500000000139e-05, 9.588900000000178e-05, 9.633300000000053e-05, 9.580600000000036e-05, 9.659700000000035e-05, 9.658400000000025e-05, 9.60140000000019e-05, 9.601399999999843e-05, 9.622299999999945e-05, 9.594400000000058e-05, 9.618000000000126e-05, 9.661099999999992e-05, 9.580500000000089e-05, 9.644500000000056e-05, 9.601399999999843e-05, 9.6334e-05, 9.580600000000036e-05, 9.641700000000142e-05, 9.677800000000222e-05, 9.655500000000164e-05, 9.661099999999992e-05, 9.608300000000028e-05, 9.59859999999993e-05, 9.62080000000004e-05, 9.641700000000142e-05, 9.624999999999911e-05, 9.590299999999788e-05, 9.588899999999831e-05]</msg>
<status status="PASS" starttime="20201029 12:47:20.577" endtime="20201029 12:47:20.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.572" endtime="20201029 12:47:20.580"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:20.583" endtime="20201029 12:47:20.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.582" endtime="20201029 12:47:20.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.581" endtime="20201029 12:47:20.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.223" endtime="20201029 12:47:20.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.222" endtime="20201029 12:47:20.604"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.612" endtime="20201029 12:47:20.633"></status>
</kw>
<msg timestamp="20201029 12:47:20.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.611" endtime="20201029 12:47:20.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.635" endtime="20201029 12:47:20.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.637" endtime="20201029 12:47:20.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.608" endtime="20201029 12:47:20.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.606" endtime="20201029 12:47:20.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.646" endtime="20201029 12:47:20.933"></status>
</kw>
<msg timestamp="20201029 12:47:20.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021699167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021796736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:20.645" endtime="20201029 12:47:20.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021699167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021796736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:20.937" endtime="20201029 12:47:20.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.946" endtime="20201029 12:47:20.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.642" endtime="20201029 12:47:20.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.641" endtime="20201029 12:47:20.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:20.952" level="INFO">${RESULT} = [{'diff': 9.756900000000221e-05}, {'diff': 9.738899999999981e-05}, {'diff': 9.731900000000196e-05}, {'diff': 9.726399999999968e-05}, {'diff': 9.702800000000247e-05}, {'diff': 9.759800000000082e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:20.949" endtime="20201029 12:47:20.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:20.956" level="INFO">${ACCURACY} = {'diff': [9.756900000000221e-05, 9.738899999999981e-05, 9.731900000000196e-05, 9.726399999999968e-05, 9.702800000000247e-05, 9.759800000000082e-05, 9.757000000000168e-05, 9.72219999999975e-05, 9.68340...</msg>
<status status="PASS" starttime="20201029 12:47:20.953" endtime="20201029 12:47:20.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.960" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 12:47:20.959" endtime="20201029 12:47:20.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.963" level="INFO">VALUE: [9.756900000000221e-05, 9.738899999999981e-05, 9.731900000000196e-05, 9.726399999999968e-05, 9.702800000000247e-05, 9.759800000000082e-05, 9.757000000000168e-05, 9.72219999999975e-05, 9.68340000000005e-05, 9.707000000000118e-05, 9.765200000000016e-05, 9.73470000000011e-05, 9.694399999999812e-05, 9.691700000000192e-05, 9.698599999999682e-05, 9.673600000000004e-05, 9.676400000000265e-05, 9.68340000000005e-05, 9.690300000000235e-05, 9.673699999999952e-05, 9.723600000000054e-05, 9.676399999999918e-05, 9.763900000000006e-05, 9.745799999999818e-05, 9.738899999999981e-05, 9.740299999999938e-05, 9.674999999999961e-05, 9.737500000000024e-05, 9.718099999999827e-05, 9.70140000000029e-05, 9.704100000000257e-05, 9.680500000000189e-05, 9.740299999999938e-05, 9.690299999999888e-05, 9.74860000000008e-05, 9.711100000000042e-05, 9.71669999999987e-05, 9.725000000000011e-05, 9.690300000000235e-05, 9.680500000000189e-05, 9.723600000000054e-05, 9.688899999999931e-05, 9.680499999999842e-05, 9.691699999999845e-05, 9.750000000000036e-05, 9.712499999999999e-05, 9.758399999999778e-05, 9.770799999999843e-05, 9.754100000000307e-05, 9.706899999999824e-05]</msg>
<status status="PASS" starttime="20201029 12:47:20.962" endtime="20201029 12:47:20.964"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.957" endtime="20201029 12:47:20.964"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:20.968" endtime="20201029 12:47:20.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.966" endtime="20201029 12:47:20.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.965" endtime="20201029 12:47:20.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.605" endtime="20201029 12:47:20.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.604" endtime="20201029 12:47:20.988"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.997" endtime="20201029 12:47:21.018"></status>
</kw>
<msg timestamp="20201029 12:47:21.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.996" endtime="20201029 12:47:21.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.019" endtime="20201029 12:47:21.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.022" endtime="20201029 12:47:21.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.993" endtime="20201029 12:47:21.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.991" endtime="20201029 12:47:21.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.030" endtime="20201029 12:47:21.316"></status>
</kw>
<msg timestamp="20201029 12:47:21.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022608083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022706583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:21.029" endtime="20201029 12:47:21.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022608083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022706583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:21.320" endtime="20201029 12:47:21.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.328" endtime="20201029 12:47:21.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.026" endtime="20201029 12:47:21.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.025" endtime="20201029 12:47:21.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:21.335" level="INFO">${RESULT} = [{'diff': 9.84999999999979e-05}, {'diff': 9.801400000000043e-05}, {'diff': 9.793099999999902e-05}, {'diff': 9.847199999999875e-05}, {'diff': 9.873600000000204e-05}, {'diff': 9.823600000000154e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:21.331" endtime="20201029 12:47:21.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:21.339" level="INFO">${ACCURACY} = {'diff': [9.84999999999979e-05, 9.801400000000043e-05, 9.793099999999902e-05, 9.847199999999875e-05, 9.873600000000204e-05, 9.823600000000154e-05, 9.79860000000013e-05, 9.854200000000007e-05, 9.843000...</msg>
<status status="PASS" starttime="20201029 12:47:21.335" endtime="20201029 12:47:21.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.343" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 12:47:21.342" endtime="20201029 12:47:21.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.346" level="INFO">VALUE: [9.84999999999979e-05, 9.801400000000043e-05, 9.793099999999902e-05, 9.847199999999875e-05, 9.873600000000204e-05, 9.823600000000154e-05, 9.79860000000013e-05, 9.854200000000007e-05, 9.843000000000005e-05, 9.806899999999924e-05, 9.783299999999856e-05, 9.86670000000002e-05, 9.780600000000236e-05, 9.811099999999795e-05, 9.790299999999988e-05, 9.805599999999914e-05, 9.794499999999859e-05, 9.781899999999899e-05, 9.809700000000185e-05, 9.780500000000289e-05, 9.833300000000253e-05, 9.822200000000197e-05, 9.86670000000002e-05, 9.848700000000127e-05, 9.872300000000195e-05, 9.776400000000018e-05, 9.806899999999924e-05, 9.827700000000078e-05, 9.840199999999744e-05, 9.856999999999921e-05, 9.777799999999975e-05, 9.837500000000124e-05, 9.82219999999985e-05, 9.838900000000081e-05, 9.79730000000012e-05, 9.840299999999691e-05, 9.790299999999988e-05, 9.845799999999919e-05, 9.806899999999924e-05, 9.866600000000073e-05, 9.870799999999944e-05, 9.838900000000081e-05, 9.773600000000104e-05, 9.855599999999964e-05, 9.855599999999964e-05, 9.808299999999881e-05, 9.84999999999979e-05, 9.808299999999881e-05, 9.823600000000154e-05, 9.843099999999952e-05]</msg>
<status status="PASS" starttime="20201029 12:47:21.344" endtime="20201029 12:47:21.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.340" endtime="20201029 12:47:21.348"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:21.351" endtime="20201029 12:47:21.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.350" endtime="20201029 12:47:21.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.349" endtime="20201029 12:47:21.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.989" endtime="20201029 12:47:21.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.989" endtime="20201029 12:47:21.372"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.380" endtime="20201029 12:47:21.400"></status>
</kw>
<msg timestamp="20201029 12:47:21.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.379" endtime="20201029 12:47:21.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.401" endtime="20201029 12:47:21.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.404" endtime="20201029 12:47:21.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.376" endtime="20201029 12:47:21.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.374" endtime="20201029 12:47:21.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.413" endtime="20201029 12:47:21.698"></status>
</kw>
<msg timestamp="20201029 12:47:21.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02171625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021815264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:21.411" endtime="20201029 12:47:21.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02171625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021815264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:21.702" endtime="20201029 12:47:21.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.710" endtime="20201029 12:47:21.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.409" endtime="20201029 12:47:21.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.407" endtime="20201029 12:47:21.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:21.717" level="INFO">${RESULT} = [{'diff': 9.901400000000143e-05}, {'diff': 9.9028000000001e-05}, {'diff': 9.895899999999916e-05}, {'diff': 9.948599999999932e-05}, {'diff': 9.955500000000117e-05}, {'diff': 9.883299999999956e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:21.714" endtime="20201029 12:47:21.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:21.722" level="INFO">${ACCURACY} = {'diff': [9.901400000000143e-05, 9.9028000000001e-05, 9.895899999999916e-05, 9.948599999999932e-05, 9.955500000000117e-05, 9.883299999999956e-05, 9.968100000000077e-05, 9.894400000000012e-05, 9.948599...</msg>
<status status="PASS" starttime="20201029 12:47:21.718" endtime="20201029 12:47:21.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.726" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 12:47:21.725" endtime="20201029 12:47:21.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.729" level="INFO">VALUE: [9.901400000000143e-05, 9.9028000000001e-05, 9.895899999999916e-05, 9.948599999999932e-05, 9.955500000000117e-05, 9.883299999999956e-05, 9.968100000000077e-05, 9.894400000000012e-05, 9.948599999999932e-05, 9.908399999999928e-05, 9.908400000000275e-05, 9.954200000000107e-05, 9.883299999999956e-05, 9.955600000000064e-05, 9.970800000000044e-05, 9.901299999999849e-05, 9.890299999999741e-05, 9.890300000000088e-05, 9.970800000000044e-05, 9.923600000000254e-05, 9.94869999999988e-05, 9.905500000000067e-05, 9.96800000000013e-05, 9.944400000000062e-05, 9.967999999999783e-05, 9.968100000000077e-05, 9.891700000000045e-05, 9.956999999999674e-05, 9.89860000000023e-05, 9.958399999999978e-05, 9.876299999999824e-05, 9.94999999999989e-05, 9.897199999999926e-05, 9.923599999999907e-05, 9.880500000000042e-05, 9.891699999999698e-05, 9.881999999999946e-05, 9.900000000000186e-05, 9.909799999999885e-05, 9.904200000000057e-05, 9.931899999999702e-05, 9.9722e-05, 9.874999999999814e-05, 9.973600000000304e-05, 9.895899999999916e-05, 9.955600000000064e-05, 9.898599999999882e-05, 9.959799999999935e-05, 9.909699999999938e-05, 9.909800000000232e-05]</msg>
<status status="PASS" starttime="20201029 12:47:21.727" endtime="20201029 12:47:21.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.723" endtime="20201029 12:47:21.730"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:21.734" endtime="20201029 12:47:21.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.732" endtime="20201029 12:47:21.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.731" endtime="20201029 12:47:21.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.373" endtime="20201029 12:47:21.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.372" endtime="20201029 12:47:21.754"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.763" endtime="20201029 12:47:21.784"></status>
</kw>
<msg timestamp="20201029 12:47:21.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.761" endtime="20201029 12:47:21.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.785" endtime="20201029 12:47:21.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.788" endtime="20201029 12:47:21.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.759" endtime="20201029 12:47:21.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.757" endtime="20201029 12:47:21.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.796" endtime="20201029 12:47:22.083"></status>
</kw>
<msg timestamp="20201029 12:47:22.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021805556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021905917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:21.795" endtime="20201029 12:47:22.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021805556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021905917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.087" endtime="20201029 12:47:22.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.095" endtime="20201029 12:47:22.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.792" endtime="20201029 12:47:22.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.791" endtime="20201029 12:47:22.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:22.102" level="INFO">${RESULT} = [{'diff': 0.0001003610000000002}, {'diff': 0.0001005419999999986}, {'diff': 0.00010013900000000256}, {'diff': 9.997299999999973e-05}, {'diff': 9.983300000000056e-05}, {'diff': 9.980500000000142e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:22.099" endtime="20201029 12:47:22.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:22.106" level="INFO">${ACCURACY} = {'diff': [0.0001003610000000002, 0.0001005419999999986, 0.00010013900000000256, 9.997299999999973e-05, 9.983300000000056e-05, 9.980500000000142e-05, 9.98060000000009e-05, 0.00010040300000000238, 0.000...</msg>
<status status="PASS" starttime="20201029 12:47:22.103" endtime="20201029 12:47:22.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.110" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 12:47:22.109" endtime="20201029 12:47:22.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.113" level="INFO">VALUE: [0.0001003610000000002, 0.0001005419999999986, 0.00010013900000000256, 9.997299999999973e-05, 9.983300000000056e-05, 9.980500000000142e-05, 9.98060000000009e-05, 0.00010040300000000238, 0.00010061100000000045, 0.00010061199999999992, 0.00010015299999999866, 9.993000000000155e-05, 0.00010063899999999959, 0.00010066600000000273, 9.988899999999884e-05, 9.973599999999957e-05, 0.00010043100000000152, 0.00010045799999999772, 0.00010055600000000164, 0.00010015299999999866, 0.00010008299999999734, 0.0001005419999999986, 0.00010029099999999888, 0.00010009700000000038, 0.00010040300000000238, 0.00010027800000000225, 0.00010011099999999995, 9.975000000000261e-05, 0.00010024999999999964, 9.974999999999914e-05, 0.000100415999999999, 0.00010030499999999845, 0.00010009700000000038, 0.00010073600000000058, 0.00010030499999999845, 0.00010026400000000268, 0.00010002799999999853, 0.00010011099999999995, 0.00010031900000000149, 0.00010026399999999921, 9.998599999999983e-05, 0.00010044400000000162, 9.973600000000304e-05, 0.00010058299999999784, 0.00010051399999999946, 0.00010009799999999985, 0.00010007000000000071, 0.00010072300000000048, 0.00010013899999999909, 0.00010011099999999995]</msg>
<status status="PASS" starttime="20201029 12:47:22.111" endtime="20201029 12:47:22.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.107" endtime="20201029 12:47:22.115"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:22.119" endtime="20201029 12:47:22.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.117" endtime="20201029 12:47:22.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.116" endtime="20201029 12:47:22.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.755" endtime="20201029 12:47:22.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.754" endtime="20201029 12:47:22.140"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.149" endtime="20201029 12:47:22.170"></status>
</kw>
<msg timestamp="20201029 12:47:22.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.147" endtime="20201029 12:47:22.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.171" endtime="20201029 12:47:22.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.174" endtime="20201029 12:47:22.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.145" endtime="20201029 12:47:22.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.143" endtime="20201029 12:47:22.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.183" endtime="20201029 12:47:22.468"></status>
</kw>
<msg timestamp="20201029 12:47:22.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022720278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022821444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.181" endtime="20201029 12:47:22.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022720278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022821444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.472" endtime="20201029 12:47:22.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.480" endtime="20201029 12:47:22.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.178" endtime="20201029 12:47:22.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.177" endtime="20201029 12:47:22.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:22.486" level="INFO">${RESULT} = [{'diff': 0.00010116599999999976}, {'diff': 0.00010156900000000274}, {'diff': 0.00010081900000000199}, {'diff': 0.00010088899999999984}, {'diff': 0.00010076300000000024}, {'diff': 0.000101569999999998...</msg>
<status status="PASS" starttime="20201029 12:47:22.483" endtime="20201029 12:47:22.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:22.490" level="INFO">${ACCURACY} = {'diff': [0.00010116599999999976, 0.00010156900000000274, 0.00010081900000000199, 0.00010088899999999984, 0.00010076300000000024, 0.00010156999999999874, 0.0001009870000000003, 0.00010161100000000145,...</msg>
<status status="PASS" starttime="20201029 12:47:22.487" endtime="20201029 12:47:22.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.495" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 12:47:22.494" endtime="20201029 12:47:22.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.497" level="INFO">VALUE: [0.00010116599999999976, 0.00010156900000000274, 0.00010081900000000199, 0.00010088899999999984, 0.00010076300000000024, 0.00010156999999999874, 0.0001009870000000003, 0.00010161100000000145, 0.00010109699999999791, 0.00010172199999999854, 0.00010145799999999872, 0.00010156899999999927, 0.00010163900000000059, 0.00010109800000000085, 0.00010106999999999824, 0.00010122300000000098, 0.00010124999999999718, 0.00010090199999999994, 0.00010142999999999958, 0.00010130499999999945, 0.00010115299999999966, 0.00010115299999999966, 0.00010097200000000126, 0.00010162499999999755, 0.0001013749999999973, 0.00010145899999999819, 0.00010161099999999798, 0.00010126400000000021, 0.00010136099999999773, 0.0001017359999999981, 0.00010130499999999945, 0.0001016809999999993, 0.00010172199999999854, 0.00010147200000000176, 0.00010113900000000009, 0.00010166600000000026, 0.00010098600000000083, 0.00010113900000000009, 0.00010091699999999898, 0.00010141699999999948, 0.00010126400000000021, 0.00010158400000000178, 0.00010161100000000145, 0.00010077699999999981, 0.00010155599999999917, 0.00010097200000000126, 0.0001015000000000009, 0.0001008610000000007, 0.00010144399999999915, 0.00010112500000000052]</msg>
<status status="PASS" starttime="20201029 12:47:22.496" endtime="20201029 12:47:22.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.491" endtime="20201029 12:47:22.499"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:22.503" endtime="20201029 12:47:22.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.501" endtime="20201029 12:47:22.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.500" endtime="20201029 12:47:22.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.141" endtime="20201029 12:47:22.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.140" endtime="20201029 12:47:22.523"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.532" endtime="20201029 12:47:22.552"></status>
</kw>
<msg timestamp="20201029 12:47:22.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.530" endtime="20201029 12:47:22.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.553" endtime="20201029 12:47:22.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.556" endtime="20201029 12:47:22.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.528" endtime="20201029 12:47:22.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.526" endtime="20201029 12:47:22.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.566" endtime="20201029 12:47:22.853"></status>
</kw>
<msg timestamp="20201029 12:47:22.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021755653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021858153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.565" endtime="20201029 12:47:22.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021755653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021858153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.857" endtime="20201029 12:47:22.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.865" endtime="20201029 12:47:22.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.561" endtime="20201029 12:47:22.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.559" endtime="20201029 12:47:22.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:22.871" level="INFO">${RESULT} = [{'diff': 0.0001025000000000019}, {'diff': 0.00010244400000000015}, {'diff': 0.0001020420000000001}, {'diff': 0.00010230599999999992}, {'diff': 0.00010259699999999941}, {'diff': 0.00010259699999999941...</msg>
<status status="PASS" starttime="20201029 12:47:22.868" endtime="20201029 12:47:22.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:22.878" level="INFO">${ACCURACY} = {'diff': [0.0001025000000000019, 0.00010244400000000015, 0.0001020420000000001, 0.00010230599999999992, 0.00010259699999999941, 0.00010259699999999941, 0.00010258299999999984, 0.00010188900000000084, ...</msg>
<status status="PASS" starttime="20201029 12:47:22.872" endtime="20201029 12:47:22.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.883" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 12:47:22.882" endtime="20201029 12:47:22.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.885" level="INFO">VALUE: [0.0001025000000000019, 0.00010244400000000015, 0.0001020420000000001, 0.00010230599999999992, 0.00010259699999999941, 0.00010259699999999941, 0.00010258299999999984, 0.00010188900000000084, 0.00010238900000000134, 0.00010262500000000202, 0.00010261099999999898, 0.00010197200000000226, 0.00010187500000000127, 0.00010183300000000256, 0.0001022220000000025, 0.00010186099999999823, 0.0001022359999999986, 0.0001020420000000001, 0.00010206999999999924, 0.00010256900000000027, 0.00010240300000000091, 0.00010261100000000245, 0.00010173600000000158, 0.0001020420000000001, 0.00010244400000000015, 0.00010216700000000023, 0.00010195899999999869, 0.00010241700000000048, 0.00010205599999999967, 0.00010226399999999775, 0.00010275000000000215, 0.00010229200000000035, 0.0001023199999999995, 0.00010230599999999992, 0.00010244499999999962, 0.00010263900000000159, 0.00010191699999999998, 0.00010208400000000228, 0.00010190300000000041, 0.00010174999999999768, 0.00010216599999999729, 0.00010266700000000073, 0.00010174999999999768, 0.0001020000000000014, 0.00010195899999999869, 0.00010280499999999748, 0.00010244499999999962, 0.00010181899999999952, 0.00010243000000000058, 0.00010276399999999825]</msg>
<status status="PASS" starttime="20201029 12:47:22.884" endtime="20201029 12:47:22.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.879" endtime="20201029 12:47:22.886"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:22.890" endtime="20201029 12:47:22.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.888" endtime="20201029 12:47:22.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.887" endtime="20201029 12:47:22.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.524" endtime="20201029 12:47:22.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.524" endtime="20201029 12:47:22.911"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.919" endtime="20201029 12:47:22.940"></status>
</kw>
<msg timestamp="20201029 12:47:22.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.918" endtime="20201029 12:47:22.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.941" endtime="20201029 12:47:22.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.944" endtime="20201029 12:47:22.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.915" endtime="20201029 12:47:22.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.913" endtime="20201029 12:47:22.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.953" endtime="20201029 12:47:23.239"></status>
</kw>
<msg timestamp="20201029 12:47:23.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021867917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021971444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.951" endtime="20201029 12:47:23.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021867917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021971444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:23.243" endtime="20201029 12:47:23.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.251" endtime="20201029 12:47:23.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.949" endtime="20201029 12:47:23.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.947" endtime="20201029 12:47:23.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:23.257" level="INFO">${RESULT} = [{'diff': 0.00010352699999999909}, {'diff': 0.00010306900000000077}, {'diff': 0.00010308300000000034}, {'diff': 0.00010294400000000065}, {'diff': 0.00010330500000000145}, {'diff': 0.000102888999999998...</msg>
<status status="PASS" starttime="20201029 12:47:23.254" endtime="20201029 12:47:23.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:23.261" level="INFO">${ACCURACY} = {'diff': [0.00010352699999999909, 0.00010306900000000077, 0.00010308300000000034, 0.00010294400000000065, 0.00010330500000000145, 0.00010288899999999837, 0.00010273600000000258, 0.00010297299999999926...</msg>
<status status="PASS" starttime="20201029 12:47:23.258" endtime="20201029 12:47:23.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.266" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 12:47:23.265" endtime="20201029 12:47:23.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.268" level="INFO">VALUE: [0.00010352699999999909, 0.00010306900000000077, 0.00010308300000000034, 0.00010294400000000065, 0.00010330500000000145, 0.00010288899999999837, 0.00010273600000000258, 0.00010297299999999926, 0.0001030559999999972, 0.00010340300000000191, 0.00010283300000000009, 0.00010306900000000077, 0.00010299999999999893, 0.0001035559999999977, 0.00010320800000000047, 0.00010343099999999758, 0.00010370900000000044, 0.0001037079999999975, 0.00010290199999999847, 0.00010279100000000138, 0.00010288900000000184, 0.00010316700000000123, 0.00010276400000000172, 0.00010305600000000067, 0.00010291699999999751, 0.0001033480000000031, 0.0001033200000000005, 0.00010329100000000188, 0.00010372200000000054, 0.00010327800000000179, 0.00010359700000000041, 0.0001037360000000001, 0.00010304199999999764, 0.00010320800000000047, 0.00010349999999999943, 0.00010313899999999862, 0.0001030559999999972, 0.00010318000000000133, 0.00010362499999999955, 0.00010280500000000095, 0.00010359699999999694, 0.00010307000000000024, 0.00010313899999999862, 0.00010277799999999782, 0.00010345800000000072, 0.00010333300000000059, 0.0001032359999999996, 0.00010359700000000041, 0.00010356900000000127, 0.00010376400000000272]</msg>
<status status="PASS" starttime="20201029 12:47:23.267" endtime="20201029 12:47:23.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.262" endtime="20201029 12:47:23.269"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:23.273" endtime="20201029 12:47:23.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.272" endtime="20201029 12:47:23.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.270" endtime="20201029 12:47:23.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.912" endtime="20201029 12:47:23.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.911" endtime="20201029 12:47:23.294"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.302" endtime="20201029 12:47:23.324"></status>
</kw>
<msg timestamp="20201029 12:47:23.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.301" endtime="20201029 12:47:23.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.325" endtime="20201029 12:47:23.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.327" endtime="20201029 12:47:23.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.298" endtime="20201029 12:47:23.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.296" endtime="20201029 12:47:23.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.336" endtime="20201029 12:47:23.622"></status>
</kw>
<msg timestamp="20201029 12:47:23.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022865806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022970014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:23.335" endtime="20201029 12:47:23.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022865806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022970014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:23.626" endtime="20201029 12:47:23.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.634" endtime="20201029 12:47:23.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.332" endtime="20201029 12:47:23.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.331" endtime="20201029 12:47:23.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:23.640" level="INFO">${RESULT} = [{'diff': 0.00010420800000000147}, {'diff': 0.00010411100000000048}, {'diff': 0.00010461099999999751}, {'diff': 0.00010390300000000241}, {'diff': 0.00010430599999999846}, {'diff': 0.000103901999999999...</msg>
<status status="PASS" starttime="20201029 12:47:23.637" endtime="20201029 12:47:23.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:23.644" level="INFO">${ACCURACY} = {'diff': [0.00010420800000000147, 0.00010411100000000048, 0.00010461099999999751, 0.00010390300000000241, 0.00010430599999999846, 0.00010390199999999947, 0.00010430499999999898, 0.00010442999999999911...</msg>
<status status="PASS" starttime="20201029 12:47:23.641" endtime="20201029 12:47:23.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.649" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 12:47:23.648" endtime="20201029 12:47:23.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.651" level="INFO">VALUE: [0.00010420800000000147, 0.00010411100000000048, 0.00010461099999999751, 0.00010390300000000241, 0.00010430599999999846, 0.00010390199999999947, 0.00010430499999999898, 0.00010442999999999911, 0.0001039160000000025, 0.00010415300000000266, 0.00010391699999999851, 0.00010412500000000005, 0.00010461200000000045, 0.0001040559999999982, 0.00010415199999999972, 0.00010405499999999873, 0.00010415299999999919, 0.0001047360000000011, 0.0001043750000000003, 0.00010390299999999894, 0.00010380599999999796, 0.00010458400000000131, 0.00010390299999999894, 0.00010463900000000012, 0.00010445799999999825, 0.0001040689999999983, 0.00010415300000000266, 0.00010438899999999987, 0.00010386100000000023, 0.00010433400000000106, 0.00010405600000000167, 0.00010462500000000055, 0.00010380600000000142, 0.00010377800000000229, 0.00010412500000000005, 0.00010390300000000241, 0.00010395800000000122, 0.00010390299999999894, 0.00010397199999999732, 0.00010422200000000104, 0.00010441699999999901, 0.00010425000000000018, 0.00010390300000000241, 0.00010429199999999889, 0.00010437499999999683, 0.00010459700000000141, 0.00010384700000000066, 0.00010379200000000185, 0.0001040139999999995, 0.0001043750000000003]</msg>
<status status="PASS" starttime="20201029 12:47:23.650" endtime="20201029 12:47:23.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.645" endtime="20201029 12:47:23.653"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:23.657" endtime="20201029 12:47:23.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.655" endtime="20201029 12:47:23.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.654" endtime="20201029 12:47:23.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.295" endtime="20201029 12:47:23.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.294" endtime="20201029 12:47:23.678"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.686" endtime="20201029 12:47:23.706"></status>
</kw>
<msg timestamp="20201029 12:47:23.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.685" endtime="20201029 12:47:23.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.708" endtime="20201029 12:47:23.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.710" endtime="20201029 12:47:23.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.682" endtime="20201029 12:47:23.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.680" endtime="20201029 12:47:23.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.719" endtime="20201029 12:47:24.005"></status>
</kw>
<msg timestamp="20201029 12:47:24.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021795694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021900556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:23.718" endtime="20201029 12:47:24.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021795694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021900556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.009" endtime="20201029 12:47:24.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.017" endtime="20201029 12:47:24.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.715" endtime="20201029 12:47:24.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.713" endtime="20201029 12:47:24.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:24.023" level="INFO">${RESULT} = [{'diff': 0.0001048620000000007}, {'diff': 0.00010540300000000044}, {'diff': 0.00010476400000000025}, {'diff': 0.0001057079999999995}, {'diff': 0.00010494500000000212}, {'diff': 0.00010511099999999801...</msg>
<status status="PASS" starttime="20201029 12:47:24.020" endtime="20201029 12:47:24.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:24.028" level="INFO">${ACCURACY} = {'diff': [0.0001048620000000007, 0.00010540300000000044, 0.00010476400000000025, 0.0001057079999999995, 0.00010494500000000212, 0.00010511099999999801, 0.00010536100000000173, 0.0001052360000000016, 0...</msg>
<status status="PASS" starttime="20201029 12:47:24.024" endtime="20201029 12:47:24.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.033" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 12:47:24.032" endtime="20201029 12:47:24.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.035" level="INFO">VALUE: [0.0001048620000000007, 0.00010540300000000044, 0.00010476400000000025, 0.0001057079999999995, 0.00010494500000000212, 0.00010511099999999801, 0.00010536100000000173, 0.0001052360000000016, 0.00010498600000000136, 0.0001052360000000016, 0.0001050140000000005, 0.00010475000000000068, 0.00010522199999999857, 0.00010515300000000019, 0.00010558299999999937, 0.00010508300000000234, 0.00010547299999999829, 0.0001055559999999997, 0.00010495799999999875, 0.00010512499999999758, 0.00010491600000000004, 0.00010477799999999982, 0.00010533299999999912, 0.0001053750000000013, 0.00010497199999999832, 0.00010540300000000044, 0.0001052499999999977, 0.00010536100000000173, 0.00010543000000000011, 0.00010499999999999746, 0.0001047360000000011, 0.00010522199999999857, 0.00010565300000000069, 0.00010530599999999946, 0.00010523599999999814, 0.000104820000000002, 0.00010538900000000087, 0.00010559699999999894, 0.00010475000000000068, 0.00010541700000000001, 0.00010479199999999939, 0.0001052360000000016, 0.00010538900000000087, 0.00010572300000000201, 0.00010506999999999878, 0.00010565199999999775, 0.00010530499999999998, 0.00010525000000000118, 0.00010552800000000057, 0.00010563900000000112]</msg>
<status status="PASS" starttime="20201029 12:47:24.034" endtime="20201029 12:47:24.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.029" endtime="20201029 12:47:24.037"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:24.040" endtime="20201029 12:47:24.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.039" endtime="20201029 12:47:24.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.038" endtime="20201029 12:47:24.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.678" endtime="20201029 12:47:24.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.678" endtime="20201029 12:47:24.061"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.069" endtime="20201029 12:47:24.090"></status>
</kw>
<msg timestamp="20201029 12:47:24.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.068" endtime="20201029 12:47:24.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.091" endtime="20201029 12:47:24.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.094" endtime="20201029 12:47:24.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.065" endtime="20201029 12:47:24.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.063" endtime="20201029 12:47:24.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.103" endtime="20201029 12:47:24.391"></status>
</kw>
<msg timestamp="20201029 12:47:24.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021770583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021876403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.101" endtime="20201029 12:47:24.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021770583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021876403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.395" endtime="20201029 12:47:24.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.403" endtime="20201029 12:47:24.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.098" endtime="20201029 12:47:24.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.097" endtime="20201029 12:47:24.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:24.409" level="INFO">${RESULT} = [{'diff': 0.00010581999999999953}, {'diff': 0.00010623599999999914}, {'diff': 0.00010594499999999965}, {'diff': 0.00010652800000000157}, {'diff': 0.00010668000000000136}, {'diff': 0.000106569000000000...</msg>
<status status="PASS" starttime="20201029 12:47:24.406" endtime="20201029 12:47:24.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:24.413" level="INFO">${ACCURACY} = {'diff': [0.00010581999999999953, 0.00010623599999999914, 0.00010594499999999965, 0.00010652800000000157, 0.00010668000000000136, 0.0001065690000000008, 0.0001062499999999987, 0.00010630599999999699, ...</msg>
<status status="PASS" starttime="20201029 12:47:24.410" endtime="20201029 12:47:24.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.418" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 12:47:24.417" endtime="20201029 12:47:24.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.422" level="INFO">VALUE: [0.00010581999999999953, 0.00010623599999999914, 0.00010594499999999965, 0.00010652800000000157, 0.00010668000000000136, 0.0001065690000000008, 0.0001062499999999987, 0.00010630599999999699, 0.00010577799999999735, 0.00010606999999999978, 0.000106208, 0.00010627699999999837, 0.0001064019999999985, 0.00010616599999999782, 0.00010641700000000101, 0.00010633300000000012, 0.0001062499999999987, 0.00010612499999999858, 0.00010659799999999942, 0.00010615299999999772, 0.00010581900000000005, 0.00010616600000000129, 0.00010611099999999901, 0.00010644400000000068, 0.00010644500000000015, 0.00010581999999999953, 0.00010652699999999862, 0.00010670899999999997, 0.00010657000000000028, 0.000106208, 0.00010580499999999701, 0.00010595799999999975, 0.00010656899999999733, 0.00010606999999999978, 0.00010601399999999803, 0.00010588900000000137, 0.00010672299999999954, 0.00010629199999999742, 0.00010581900000000005, 0.00010595799999999975, 0.00010672299999999954, 0.00010666699999999779, 0.0001060140000000015, 0.00010612499999999858, 0.00010657000000000028, 0.00010579200000000039, 0.00010666599999999832, 0.00010650000000000243, 0.00010591700000000051, 0.00010644500000000015]</msg>
<status status="PASS" starttime="20201029 12:47:24.420" endtime="20201029 12:47:24.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.414" endtime="20201029 12:47:24.424"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:24.427" endtime="20201029 12:47:24.446"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.426" endtime="20201029 12:47:24.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.425" endtime="20201029 12:47:24.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.062" endtime="20201029 12:47:24.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.061" endtime="20201029 12:47:24.448"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.456" endtime="20201029 12:47:24.478"></status>
</kw>
<msg timestamp="20201029 12:47:24.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.455" endtime="20201029 12:47:24.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.479" endtime="20201029 12:47:24.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.482" endtime="20201029 12:47:24.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.452" endtime="20201029 12:47:24.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.450" endtime="20201029 12:47:24.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.491" endtime="20201029 12:47:24.775"></status>
</kw>
<msg timestamp="20201029 12:47:24.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022866903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022973903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.489" endtime="20201029 12:47:24.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022866903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022973903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.780" endtime="20201029 12:47:24.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.788" endtime="20201029 12:47:24.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.487" endtime="20201029 12:47:24.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.485" endtime="20201029 12:47:24.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:24.794" level="INFO">${RESULT} = [{'diff': 0.00010699999999999946}, {'diff': 0.00010693000000000161}, {'diff': 0.00010755500000000223}, {'diff': 0.00010733300000000112}, {'diff': 0.00010741599999999907}, {'diff': 0.000106847999999999...</msg>
<status status="PASS" starttime="20201029 12:47:24.791" endtime="20201029 12:47:24.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:24.798" level="INFO">${ACCURACY} = {'diff': [0.00010699999999999946, 0.00010693000000000161, 0.00010755500000000223, 0.00010733300000000112, 0.00010741599999999907, 0.00010684799999999967, 0.00010729199999999842, 0.00010769499999999793...</msg>
<status status="PASS" starttime="20201029 12:47:24.795" endtime="20201029 12:47:24.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.802" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 12:47:24.801" endtime="20201029 12:47:24.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.805" level="INFO">VALUE: [0.00010699999999999946, 0.00010693000000000161, 0.00010755500000000223, 0.00010733300000000112, 0.00010741599999999907, 0.00010684799999999967, 0.00010729199999999842, 0.00010769499999999793, 0.0001068889999999989, 0.00010709700000000044, 0.00010723600000000014, 0.00010742999999999864, 0.00010711100000000001, 0.00010697200000000032, 0.00010713899999999915, 0.00010698599999999989, 0.00010732000000000103, 0.00010755599999999824, 0.00010680600000000096, 0.000107208000000001, 0.00010751399999999953, 0.00010723600000000014, 0.00010754099999999919, 0.00010747200000000082, 0.00010686099999999976, 0.00010752800000000257, 0.00010745900000000072, 0.00010711100000000001, 0.00010741599999999907, 0.00010763899999999965, 0.0001067499999999992, 0.0001067499999999992, 0.00010711100000000001, 0.00010687499999999933, 0.00010693100000000108, 0.0001070829999999974, 0.00010691599999999857, 0.00010697200000000032, 0.00010765199999999975, 0.00010698599999999989, 0.00010697200000000032, 0.00010731999999999756, 0.00010740300000000244, 0.00010715300000000219, 0.00010686099999999976, 0.00010715199999999925, 0.00010713799999999968, 0.00010694400000000118, 0.00010713899999999915, 0.00010723600000000014]</msg>
<status status="PASS" starttime="20201029 12:47:24.804" endtime="20201029 12:47:24.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.799" endtime="20201029 12:47:24.807"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:24.811" endtime="20201029 12:47:24.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.809" endtime="20201029 12:47:24.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.808" endtime="20201029 12:47:24.831"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.449" endtime="20201029 12:47:24.831"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.448" endtime="20201029 12:47:24.831"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.840" endtime="20201029 12:47:24.861"></status>
</kw>
<msg timestamp="20201029 12:47:24.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.838" endtime="20201029 12:47:24.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.862" endtime="20201029 12:47:24.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.865" endtime="20201029 12:47:24.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.836" endtime="20201029 12:47:24.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.834" endtime="20201029 12:47:24.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.874" endtime="20201029 12:47:25.158"></status>
</kw>
<msg timestamp="20201029 12:47:25.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022038208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022146556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.872" endtime="20201029 12:47:25.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022038208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022146556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:25.162" endtime="20201029 12:47:25.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.170" endtime="20201029 12:47:25.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.870" endtime="20201029 12:47:25.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.868" endtime="20201029 12:47:25.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:25.176" level="INFO">${RESULT} = [{'diff': 0.00010834800000000117}, {'diff': 0.00010842999999999964}, {'diff': 0.00010845800000000225}, {'diff': 0.00010793000000000261}, {'diff': 0.0001077500000000002}, {'diff': 0.0001081110000000010...</msg>
<status status="PASS" starttime="20201029 12:47:25.173" endtime="20201029 12:47:25.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:25.181" level="INFO">${ACCURACY} = {'diff': [0.00010834800000000117, 0.00010842999999999964, 0.00010845800000000225, 0.00010793000000000261, 0.0001077500000000002, 0.00010811100000000101, 0.0001085699999999988, 0.00010813900000000015, ...</msg>
<status status="PASS" starttime="20201029 12:47:25.177" endtime="20201029 12:47:25.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.186" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 12:47:25.185" endtime="20201029 12:47:25.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.188" level="INFO">VALUE: [0.00010834800000000117, 0.00010842999999999964, 0.00010845800000000225, 0.00010793000000000261, 0.0001077500000000002, 0.00010811100000000101, 0.0001085699999999988, 0.00010813900000000015, 0.00010827799999999985, 0.00010862500000000108, 0.0001082500000000007, 0.0001082500000000007, 0.00010841699999999954, 0.0001080829999999984, 0.00010773600000000064, 0.0001085699999999988, 0.00010844499999999868, 0.00010854100000000019, 0.00010847199999999835, 0.00010854100000000019, 0.00010800000000000046, 0.00010837500000000083, 0.00010850000000000096, 0.00010808400000000135, 0.00010812499999999711, 0.0001085699999999988, 0.00010798599999999742, 0.00010862500000000108, 0.00010851400000000053, 0.00010783299999999815, 0.00010826400000000028, 0.00010804199999999917, 0.00010841699999999954, 0.00010826400000000028, 0.00010780500000000248, 0.0001084020000000005, 0.00010840299999999997, 0.00010840299999999997, 0.0001082500000000007, 0.0001085699999999988, 0.00010847200000000182, 0.00010836200000000074, 0.00010858399999999838, 0.00010843000000000311, 0.0001082500000000007, 0.00010840299999999997, 0.00010794500000000165, 0.00010809700000000144, 0.00010858400000000185, 0.00010780600000000196]</msg>
<status status="PASS" starttime="20201029 12:47:25.187" endtime="20201029 12:47:25.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.182" endtime="20201029 12:47:25.189"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:25.193" endtime="20201029 12:47:25.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.191" endtime="20201029 12:47:25.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.190" endtime="20201029 12:47:25.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.832" endtime="20201029 12:47:25.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.831" endtime="20201029 12:47:25.214"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.222" endtime="20201029 12:47:25.242"></status>
</kw>
<msg timestamp="20201029 12:47:25.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:25.220" endtime="20201029 12:47:25.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:25.244" endtime="20201029 12:47:25.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.246" endtime="20201029 12:47:25.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.218" endtime="20201029 12:47:25.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.216" endtime="20201029 12:47:25.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.255" endtime="20201029 12:47:25.542"></status>
</kw>
<msg timestamp="20201029 12:47:25.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021689139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021798931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:25.254" endtime="20201029 12:47:25.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021689139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021798931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:25.546" endtime="20201029 12:47:25.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.554" endtime="20201029 12:47:25.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.251" endtime="20201029 12:47:25.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.249" endtime="20201029 12:47:25.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:25.561" level="INFO">${RESULT} = [{'diff': 0.00010979200000000092}, {'diff': 0.00010940300000000097}, {'diff': 0.00010895900000000222}, {'diff': 0.0001090280000000006}, {'diff': 0.00010943100000000011}, {'diff': 0.0001089860000000018...</msg>
<status status="PASS" starttime="20201029 12:47:25.558" endtime="20201029 12:47:25.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:25.565" level="INFO">${ACCURACY} = {'diff': [0.00010979200000000092, 0.00010940300000000097, 0.00010895900000000222, 0.0001090280000000006, 0.00010943100000000011, 0.00010898600000000189, 0.0001094159999999976, 0.00010956900000000033, ...</msg>
<status status="PASS" starttime="20201029 12:47:25.562" endtime="20201029 12:47:25.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.570" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 12:47:25.569" endtime="20201029 12:47:25.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.573" level="INFO">VALUE: [0.00010979200000000092, 0.00010940300000000097, 0.00010895900000000222, 0.0001090280000000006, 0.00010943100000000011, 0.00010898600000000189, 0.0001094159999999976, 0.00010956900000000033, 0.00010975000000000221, 0.00010915299999999725, 0.00010972200000000307, 0.00010913900000000115, 0.00010941700000000054, 0.00010958399999999938, 0.00010958399999999938, 0.000109208999999999, 0.00010943000000000064, 0.00010956900000000033, 0.0001092219999999991, 0.00010891700000000004, 0.00010962499999999861, 0.00010877800000000035, 0.00010907000000000278, 0.00010937499999999836, 0.000109208999999999, 0.00010872200000000207, 0.00010948599999999892, 0.00010891600000000057, 0.00010927800000000085, 0.00010905599999999974, 0.00010958399999999938, 0.00010930599999999999, 0.00010945899999999925, 0.00010965200000000175, 0.0001087219999999986, 0.00010886100000000176, 0.00010975000000000221, 0.00010898600000000189, 0.00010943100000000011, 0.0001090699999999993, 0.00010926299999999833, 0.000109208999999999, 0.00010890300000000047, 0.00010926399999999781, 0.00010922200000000257, 0.0001090829999999994, 0.00010877800000000035, 0.00010902799999999713, 0.00010895899999999875, 0.00010955600000000024]</msg>
<status status="PASS" starttime="20201029 12:47:25.572" endtime="20201029 12:47:25.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.566" endtime="20201029 12:47:25.575"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:25.578" endtime="20201029 12:47:25.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.577" endtime="20201029 12:47:25.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.576" endtime="20201029 12:47:25.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.214" endtime="20201029 12:47:25.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.214" endtime="20201029 12:47:25.599"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.607" endtime="20201029 12:47:25.629"></status>
</kw>
<msg timestamp="20201029 12:47:25.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:25.606" endtime="20201029 12:47:25.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:25.630" endtime="20201029 12:47:25.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.633" endtime="20201029 12:47:25.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.603" endtime="20201029 12:47:25.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.601" endtime="20201029 12:47:25.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.641" endtime="20201029 12:47:25.927"></status>
</kw>
<msg timestamp="20201029 12:47:25.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022711764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022821806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:25.640" endtime="20201029 12:47:25.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022711764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022821806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:25.931" endtime="20201029 12:47:25.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.939" endtime="20201029 12:47:25.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.638" endtime="20201029 12:47:25.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.636" endtime="20201029 12:47:25.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:25.946" level="INFO">${RESULT} = [{'diff': 0.00011004200000000117}, {'diff': 0.00011011199999999902}, {'diff': 0.00011040199999999903}, {'diff': 0.00011056900000000133}, {'diff': 0.00010987500000000233}, {'diff': 0.000110332999999997...</msg>
<status status="PASS" starttime="20201029 12:47:25.942" endtime="20201029 12:47:25.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:25.950" level="INFO">${ACCURACY} = {'diff': [0.00011004200000000117, 0.00011011199999999902, 0.00011040199999999903, 0.00011056900000000133, 0.00010987500000000233, 0.00011033299999999718, 0.00011030600000000099, 0.00011004200000000117...</msg>
<status status="PASS" starttime="20201029 12:47:25.947" endtime="20201029 12:47:25.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.954" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 12:47:25.953" endtime="20201029 12:47:25.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.956" level="INFO">VALUE: [0.00011004200000000117, 0.00011011199999999902, 0.00011040199999999903, 0.00011056900000000133, 0.00010987500000000233, 0.00011033299999999718, 0.00011030600000000099, 0.00011004200000000117, 0.0001098340000000031, 0.00011037499999999936, 0.0001105830000000009, 0.00010999999999999899, 0.00011048599999999992, 0.00011062500000000308, 0.0001100830000000004, 0.00010991699999999757, 0.00011032000000000056, 0.00010980600000000049, 0.00011026299999999933, 0.00011022299999999957, 0.00011059700000000047, 0.00011036099999999979, 0.00011024999999999924, 0.00011045899999999678, 0.00011044400000000121, 0.00011059799999999995, 0.00011005599999999727, 0.00011015199999999878, 0.00011069499999999746, 0.00010977700000000187, 0.00010990300000000147, 0.00011027800000000185, 0.00011050000000000296, 0.00011065300000000222, 0.00011059799999999995, 0.00011022299999999957, 0.00011005599999999727, 0.00011006900000000083, 0.00011043099999999764, 0.00011005500000000126, 0.0001105280000000021, 0.00011048599999999992, 0.00011065300000000222, 0.00011059700000000047, 0.00011073600000000017, 0.00011040199999999903, 0.0001100830000000004, 0.0001102220000000001, 0.00011023599999999967, 0.00011023599999999967]</msg>
<status status="PASS" starttime="20201029 12:47:25.955" endtime="20201029 12:47:25.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.950" endtime="20201029 12:47:25.958"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:25.962" endtime="20201029 12:47:25.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.961" endtime="20201029 12:47:25.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.959" endtime="20201029 12:47:25.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.600" endtime="20201029 12:47:25.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.599" endtime="20201029 12:47:25.983"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.992" endtime="20201029 12:47:26.013"></status>
</kw>
<msg timestamp="20201029 12:47:26.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:25.990" endtime="20201029 12:47:26.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.014" endtime="20201029 12:47:26.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.017" endtime="20201029 12:47:26.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.987" endtime="20201029 12:47:26.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.985" endtime="20201029 12:47:26.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.026" endtime="20201029 12:47:26.311"></status>
</kw>
<msg timestamp="20201029 12:47:26.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022484819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022595833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.024" endtime="20201029 12:47:26.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022484819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022595833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.315" endtime="20201029 12:47:26.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.323" endtime="20201029 12:47:26.324"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.022" endtime="20201029 12:47:26.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.020" endtime="20201029 12:47:26.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:26.329" level="INFO">${RESULT} = [{'diff': 0.00011101399999999956}, {'diff': 0.00011115199999999978}, {'diff': 0.00011165299999999975}, {'diff': 0.00011098599999999695}, {'diff': 0.00011136099999999732}, {'diff': 0.000111070000000001...</msg>
<status status="PASS" starttime="20201029 12:47:26.326" endtime="20201029 12:47:26.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:26.337" level="INFO">${ACCURACY} = {'diff': [0.00011101399999999956, 0.00011115199999999978, 0.00011165299999999975, 0.00011098599999999695, 0.00011136099999999732, 0.0001110700000000013, 0.00011101399999999956, 0.00011137500000000036,...</msg>
<status status="PASS" starttime="20201029 12:47:26.330" endtime="20201029 12:47:26.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.342" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 12:47:26.341" endtime="20201029 12:47:26.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.344" level="INFO">VALUE: [0.00011101399999999956, 0.00011115199999999978, 0.00011165299999999975, 0.00011098599999999695, 0.00011136099999999732, 0.0001110700000000013, 0.00011101399999999956, 0.00011137500000000036, 0.00011159700000000147, 0.0001114029999999995, 0.00011097300000000032, 0.00011118100000000186, 0.00011137500000000036, 0.00011156999999999834, 0.0001110419999999987, 0.00011094500000000118, 0.00011125000000000024, 0.00011123600000000067, 0.00011106899999999836, 0.00011113899999999968, 0.00011154200000000267, 0.00011105599999999827, 0.00011148600000000092, 0.00011131999999999809, 0.0001117359999999977, 0.00011126399999999981, 0.00011136099999999732, 0.00011079099999999897, 0.00011081900000000158, 0.0001110700000000013, 0.00011083399999999716, 0.00011161100000000104, 0.00011137500000000036, 0.0001110700000000013, 0.00011150000000000049, 0.00011095800000000128, 0.00011087499999999986, 0.00011112500000000011, 0.00011098600000000042, 0.00011133400000000113, 0.00011122300000000057, 0.00011172199999999813, 0.00011150000000000049, 0.00011151400000000006, 0.00011106899999999836, 0.00011088899999999943, 0.0001113480000000007, 0.00011137500000000036, 0.00011088899999999943, 0.00011094500000000118]</msg>
<status status="PASS" starttime="20201029 12:47:26.343" endtime="20201029 12:47:26.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.338" endtime="20201029 12:47:26.346"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:26.349" endtime="20201029 12:47:26.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.348" endtime="20201029 12:47:26.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.347" endtime="20201029 12:47:26.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.984" endtime="20201029 12:47:26.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.983" endtime="20201029 12:47:26.370"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.379" endtime="20201029 12:47:26.399"></status>
</kw>
<msg timestamp="20201029 12:47:26.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.377" endtime="20201029 12:47:26.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.401" endtime="20201029 12:47:26.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.403" endtime="20201029 12:47:26.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.375" endtime="20201029 12:47:26.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.373" endtime="20201029 12:47:26.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.412" endtime="20201029 12:47:26.699"></status>
</kw>
<msg timestamp="20201029 12:47:26.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021900819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022012806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.411" endtime="20201029 12:47:26.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021900819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022012806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.703" endtime="20201029 12:47:26.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.711" endtime="20201029 12:47:26.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.408" endtime="20201029 12:47:26.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.406" endtime="20201029 12:47:26.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:26.717" level="INFO">${RESULT} = [{'diff': 0.00011198700000000089}, {'diff': 0.00011209700000000197}, {'diff': 0.00011175000000000074}, {'diff': 0.00011183300000000215}, {'diff': 0.00011256899999999986}, {'diff': 0.000112375000000001...</msg>
<status status="PASS" starttime="20201029 12:47:26.714" endtime="20201029 12:47:26.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:26.721" level="INFO">${ACCURACY} = {'diff': [0.00011198700000000089, 0.00011209700000000197, 0.00011175000000000074, 0.00011183300000000215, 0.00011256899999999986, 0.00011237500000000136, 0.00011256999999999934, 0.00011202800000000013...</msg>
<status status="PASS" starttime="20201029 12:47:26.718" endtime="20201029 12:47:26.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.726" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 12:47:26.725" endtime="20201029 12:47:26.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.728" level="INFO">VALUE: [0.00011198700000000089, 0.00011209700000000197, 0.00011175000000000074, 0.00011183300000000215, 0.00011256899999999986, 0.00011237500000000136, 0.00011256999999999934, 0.00011202800000000013, 0.00011197199999999838, 0.00011194399999999924, 0.00011197199999999838, 0.00011238900000000093, 0.00011245799999999931, 0.00011254100000000072, 0.00011226400000000081, 0.00011200000000000099, 0.00011226400000000081, 0.00011201399999999709, 0.00011223699999999767, 0.00011181900000000258, 0.00011240200000000103, 0.00011225000000000124, 0.00011198600000000142, 0.00011206899999999936, 0.00011265300000000075, 0.00011212500000000111, 0.00011175000000000074, 0.0001125550000000003, 0.00011192999999999967, 0.00011245799999999931, 0.00011238900000000093, 0.00011181899999999911, 0.00011193099999999914, 0.00011194500000000218, 0.00011249999999999802, 0.00011222300000000157, 0.00011192999999999967, 0.00011270899999999903, 0.00011220799999999906, 0.00011233399999999866, 0.00011241700000000007, 0.00011234799999999823, 0.00011272300000000207, 0.00011225000000000124, 0.00011265200000000128, 0.00011233300000000265, 0.00011220799999999906, 0.00011191699999999957, 0.00011243099999999964, 0.00011256999999999934]</msg>
<status status="PASS" starttime="20201029 12:47:26.727" endtime="20201029 12:47:26.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.722" endtime="20201029 12:47:26.729"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:26.733" endtime="20201029 12:47:26.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.731" endtime="20201029 12:47:26.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.730" endtime="20201029 12:47:26.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.371" endtime="20201029 12:47:26.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.370" endtime="20201029 12:47:26.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.189" endtime="20201029 12:47:26.754"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:48.118" endtime="20201029 12:47:26.754" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:26.761" endtime="20201029 12:47:26.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.759" endtime="20201029 12:47:26.781"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.795" endtime="20201029 12:47:26.809"></status>
</kw>
<msg timestamp="20201029 12:47:26.809" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.793" endtime="20201029 12:47:26.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.811" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.810" endtime="20201029 12:47:26.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.814" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:26.813" endtime="20201029 12:47:26.815"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:26.791" endtime="20201029 12:47:26.815"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:26.788" endtime="20201029 12:47:26.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.786" endtime="20201029 12:47:26.816"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:26.820" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:26.819" endtime="20201029 12:47:26.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.817" endtime="20201029 12:47:26.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.785" endtime="20201029 12:47:26.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.784" endtime="20201029 12:47:26.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.822" endtime="20201029 12:47:26.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.783" endtime="20201029 12:47:26.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.781" endtime="20201029 12:47:26.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.758" endtime="20201029 12:47:26.824"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.834" endtime="20201029 12:47:26.850"></status>
</kw>
<msg timestamp="20201029 12:47:26.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.832" endtime="20201029 12:47:26.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.852" endtime="20201029 12:47:26.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.855" endtime="20201029 12:47:26.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.829" endtime="20201029 12:47:26.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.827" endtime="20201029 12:47:26.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.863" endtime="20201029 12:47:27.150"></status>
</kw>
<msg timestamp="20201029 12:47:27.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065821306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065865708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.862" endtime="20201029 12:47:27.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065821306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065865708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:27.154" endtime="20201029 12:47:27.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.162" endtime="20201029 12:47:27.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.859" endtime="20201029 12:47:27.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.858" endtime="20201029 12:47:27.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:27.169" level="INFO">${RESULT} = [{'diff': 4.440199999999894e-05}, {'diff': 4.441699999999105e-05}, {'diff': 4.293000000001046e-05}, {'diff': 4.394499999998969e-05}, {'diff': 4.294400000000309e-05}, {'diff': 4.3958999999996196e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:27.165" endtime="20201029 12:47:27.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:27.173" level="INFO">${ACCURACY} = {'diff': [4.440199999999894e-05, 4.441699999999105e-05, 4.293000000001046e-05, 4.394499999998969e-05, 4.294400000000309e-05, 4.3958999999996196e-05, 4.3055000000000176e-05, 4.3874999999998776e-05, 4.2...</msg>
<status status="PASS" starttime="20201029 12:47:27.170" endtime="20201029 12:47:27.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.177" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 12:47:27.176" endtime="20201029 12:47:27.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.179" level="INFO">VALUE: [4.440199999999894e-05, 4.441699999999105e-05, 4.293000000001046e-05, 4.394499999998969e-05, 4.294400000000309e-05, 4.3958999999996196e-05, 4.3055000000000176e-05, 4.3874999999998776e-05, 4.2874999999997776e-05, 4.4083000000000316e-05, 4.3153000000004105e-05, 4.386099999999227e-05, 4.4389000000005785e-05, 4.292999999999658e-05, 4.398599999999586e-05, 4.3153000000004105e-05, 4.3653000000004605e-05, 4.3055000000000176e-05, 4.394400000000409e-05, 4.300000000000137e-05, 4.276300000000122e-05, 4.3667000000011114e-05, 4.304099999999367e-05, 4.386099999999227e-05, 4.4403000000012294e-05, 4.3110999999998456e-05, 4.3846999999999636e-05, 4.300000000000137e-05, 4.395799999999672e-05, 4.294399999998921e-05, 4.401400000000888e-05, 4.442999999999808e-05, 4.3125000000004965e-05, 4.388899999999141e-05, 4.443000000001196e-05, 4.441599999999157e-05, 4.308400000001267e-05, 4.383299999999313e-05, 4.2874999999997776e-05, 4.404200000000802e-05, 4.315200000000463e-05, 4.374999999999518e-05, 4.295799999999572e-05, 4.397200000000323e-05, 4.324999999999468e-05, 4.3722999999995515e-05, 4.2874999999997776e-05, 4.405600000000065e-05, 4.2737000000001024e-05, 4.418000000000477e-05]</msg>
<status status="PASS" starttime="20201029 12:47:27.178" endtime="20201029 12:47:27.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.174" endtime="20201029 12:47:27.180"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:27.184" endtime="20201029 12:47:27.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.183" endtime="20201029 12:47:27.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.181" endtime="20201029 12:47:27.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.826" endtime="20201029 12:47:27.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.825" endtime="20201029 12:47:27.205"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.214" endtime="20201029 12:47:27.236"></status>
</kw>
<msg timestamp="20201029 12:47:27.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:27.213" endtime="20201029 12:47:27.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:27.237" endtime="20201029 12:47:27.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.240" endtime="20201029 12:47:27.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.209" endtime="20201029 12:47:27.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.207" endtime="20201029 12:47:27.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.249" endtime="20201029 12:47:27.534"></status>
</kw>
<msg timestamp="20201029 12:47:27.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027389736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027432444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:27.247" endtime="20201029 12:47:27.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027389736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027432444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:27.538" endtime="20201029 12:47:27.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.546" endtime="20201029 12:47:27.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.245" endtime="20201029 12:47:27.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.243" endtime="20201029 12:47:27.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:27.553" level="INFO">${RESULT} = [{'diff': 4.270799999999894e-05}, {'diff': 4.41800000000013e-05}, {'diff': 4.272199999999851e-05}, {'diff': 4.4208999999999915e-05}, {'diff': 4.3041000000000607e-05}, {'diff': 4.397200000000323e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:27.550" endtime="20201029 12:47:27.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:27.557" level="INFO">${ACCURACY} = {'diff': [4.270799999999894e-05, 4.41800000000013e-05, 4.272199999999851e-05, 4.4208999999999915e-05, 4.3041000000000607e-05, 4.397200000000323e-05, 4.4417000000001455e-05, 4.4402999999998416e-05, 4.3...</msg>
<status status="PASS" starttime="20201029 12:47:27.554" endtime="20201029 12:47:27.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.562" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 12:47:27.560" endtime="20201029 12:47:27.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.565" level="INFO">VALUE: [4.270799999999894e-05, 4.41800000000013e-05, 4.272199999999851e-05, 4.4208999999999915e-05, 4.3041000000000607e-05, 4.397200000000323e-05, 4.4417000000001455e-05, 4.4402999999998416e-05, 4.3138999999997596e-05, 4.3653000000001135e-05, 4.273600000000155e-05, 4.4166999999997736e-05, 4.302800000000051e-05, 4.398599999999933e-05, 4.277799999999679e-05, 4.4153000000001635e-05, 4.4388999999998846e-05, 4.275000000000112e-05, 4.4153000000001635e-05, 4.4403000000001885e-05, 4.2916999999999955e-05, 4.394400000000062e-05, 4.327800000000076e-05, 4.36800000000008e-05, 4.2875000000001245e-05, 4.404200000000108e-05, 4.300000000000137e-05, 4.394400000000062e-05, 4.2791000000000357e-05, 4.420800000000044e-05, 4.4388999999998846e-05, 4.325000000000162e-05, 4.3667000000000705e-05, 4.273600000000155e-05, 4.416599999999826e-05, 4.2791000000000357e-05, 4.4181000000000775e-05, 4.3222999999998485e-05, 4.401399999999847e-05, 4.4402999999998416e-05, 4.320799999999944e-05, 4.3681000000000275e-05, 4.3209000000002384e-05, 4.39999999999989e-05, 4.441600000000198e-05, 4.3223000000001954e-05, 4.404200000000108e-05, 4.445800000000069e-05, 4.3068999999999746e-05, 4.401399999999847e-05]</msg>
<status status="PASS" starttime="20201029 12:47:27.563" endtime="20201029 12:47:27.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.558" endtime="20201029 12:47:27.566"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:27.569" endtime="20201029 12:47:27.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.568" endtime="20201029 12:47:27.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.567" endtime="20201029 12:47:27.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.206" endtime="20201029 12:47:27.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.205" endtime="20201029 12:47:27.590"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.599" endtime="20201029 12:47:27.616"></status>
</kw>
<msg timestamp="20201029 12:47:27.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:27.597" endtime="20201029 12:47:27.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:27.617" endtime="20201029 12:47:27.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.620" endtime="20201029 12:47:27.621"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.595" endtime="20201029 12:47:27.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.592" endtime="20201029 12:47:27.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.628" endtime="20201029 12:47:27.914"></status>
</kw>
<msg timestamp="20201029 12:47:27.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022808736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022851778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:27.627" endtime="20201029 12:47:27.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022808736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022851778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:27.918" endtime="20201029 12:47:27.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.927" endtime="20201029 12:47:27.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.625" endtime="20201029 12:47:27.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.623" endtime="20201029 12:47:27.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:27.933" level="INFO">${RESULT} = [{'diff': 4.304200000000008e-05}, {'diff': 4.393000000000105e-05}, {'diff': 4.4416999999997986e-05}, {'diff': 4.438799999999937e-05}, {'diff': 4.4388999999998846e-05}, {'diff': 4.323599999999858e-05},...</msg>
<status status="PASS" starttime="20201029 12:47:27.930" endtime="20201029 12:47:27.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:27.938" level="INFO">${ACCURACY} = {'diff': [4.304200000000008e-05, 4.393000000000105e-05, 4.4416999999997986e-05, 4.438799999999937e-05, 4.4388999999998846e-05, 4.323599999999858e-05, 4.3860999999999206e-05, 4.4402999999998416e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:47:27.934" endtime="20201029 12:47:27.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.943" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 12:47:27.942" endtime="20201029 12:47:27.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.945" level="INFO">VALUE: [4.304200000000008e-05, 4.393000000000105e-05, 4.4416999999997986e-05, 4.438799999999937e-05, 4.4388999999998846e-05, 4.323599999999858e-05, 4.3860999999999206e-05, 4.4402999999998416e-05, 4.3222999999998485e-05, 4.366599999999776e-05, 4.2875000000001245e-05, 4.277800000000026e-05, 4.374999999999865e-05, 4.441600000000198e-05, 4.3167000000000205e-05, 4.3680999999996806e-05, 4.2861000000001676e-05, 4.276400000000069e-05, 4.376399999999822e-05, 4.3124999999998026e-05, 4.376399999999822e-05, 4.297199999999876e-05, 4.3958999999999665e-05, 4.295799999999919e-05, 4.395800000000019e-05, 4.3194999999999345e-05, 4.3860999999999206e-05, 4.3167000000000205e-05, 4.3902999999997916e-05, 4.3041000000000607e-05, 4.393000000000105e-05, 4.447200000000026e-05, 4.4388999999998846e-05, 4.319399999999987e-05, 4.3708999999999415e-05, 4.440199999999894e-05, 4.324999999999815e-05, 4.3653000000001135e-05, 4.4388999999998846e-05, 4.2944999999999095e-05, 4.274999999999765e-05, 4.366599999999776e-05, 4.302800000000051e-05, 4.3875000000002246e-05, 4.4389000000002315e-05, 4.2986999999997805e-05, 4.3861000000002676e-05, 4.301300000000147e-05, 4.3917000000000955e-05, 4.4403000000001885e-05]</msg>
<status status="PASS" starttime="20201029 12:47:27.944" endtime="20201029 12:47:27.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.939" endtime="20201029 12:47:27.946"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:27.950" endtime="20201029 12:47:27.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.948" endtime="20201029 12:47:27.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.947" endtime="20201029 12:47:27.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.591" endtime="20201029 12:47:27.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.590" endtime="20201029 12:47:27.971"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.979" endtime="20201029 12:47:27.996"></status>
</kw>
<msg timestamp="20201029 12:47:27.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:27.978" endtime="20201029 12:47:27.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:27.997" endtime="20201029 12:47:27.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.000" endtime="20201029 12:47:28.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.975" endtime="20201029 12:47:28.002"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.973" endtime="20201029 12:47:28.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.009" endtime="20201029 12:47:28.296"></status>
</kw>
<msg timestamp="20201029 12:47:28.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022128361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022172764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:28.007" endtime="20201029 12:47:28.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022128361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022172764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:28.300" endtime="20201029 12:47:28.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.308" endtime="20201029 12:47:28.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.005" endtime="20201029 12:47:28.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.003" endtime="20201029 12:47:28.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:28.315" level="INFO">${RESULT} = [{'diff': 4.4403000000001885e-05}, {'diff': 4.2916999999999955e-05}, {'diff': 4.401400000000194e-05}, {'diff': 4.304200000000008e-05}, {'diff': 4.3945000000000095e-05}, {'diff': 4.4402999999998416e-05...</msg>
<status status="PASS" starttime="20201029 12:47:28.312" endtime="20201029 12:47:28.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:28.319" level="INFO">${ACCURACY} = {'diff': [4.4403000000001885e-05, 4.2916999999999955e-05, 4.401400000000194e-05, 4.304200000000008e-05, 4.3945000000000095e-05, 4.4402999999998416e-05, 4.2972999999998235e-05, 4.3889000000001815e-05, ...</msg>
<status status="PASS" starttime="20201029 12:47:28.316" endtime="20201029 12:47:28.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.323" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 12:47:28.322" endtime="20201029 12:47:28.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.326" level="INFO">VALUE: [4.4403000000001885e-05, 4.2916999999999955e-05, 4.401400000000194e-05, 4.304200000000008e-05, 4.3945000000000095e-05, 4.4402999999998416e-05, 4.2972999999998235e-05, 4.3889000000001815e-05, 4.4389000000002315e-05, 4.4403000000001885e-05, 4.272200000000198e-05, 4.4181000000000775e-05, 4.273599999999808e-05, 4.291600000000048e-05, 4.407000000000022e-05, 4.316600000000073e-05, 4.369400000000037e-05, 4.304200000000008e-05, 4.3874999999998776e-05, 4.4416999999997986e-05, 4.302800000000051e-05, 4.3860999999999206e-05, 4.300000000000137e-05, 4.3945000000000095e-05, 4.440200000000241e-05, 4.2987000000001274e-05, 4.400000000000237e-05, 4.4388999999998846e-05, 4.325000000000162e-05, 4.3681000000000275e-05, 4.2874999999997776e-05, 4.273600000000155e-05, 4.375000000000212e-05, 4.3124999999998026e-05, 4.374999999999865e-05, 4.29860000000018e-05, 4.394400000000062e-05, 4.327800000000076e-05, 4.3860999999999206e-05, 4.441599999999851e-05, 4.4402999999998416e-05, 4.277799999999679e-05, 4.2944999999999095e-05, 4.373599999999908e-05, 4.3111000000001926e-05, 4.372200000000298e-05, 4.4402999999998416e-05, 4.440199999999894e-05, 4.270799999999894e-05, 4.4166999999997736e-05]</msg>
<status status="PASS" starttime="20201029 12:47:28.324" endtime="20201029 12:47:28.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.320" endtime="20201029 12:47:28.327"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:28.331" endtime="20201029 12:47:28.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.329" endtime="20201029 12:47:28.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.328" endtime="20201029 12:47:28.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.972" endtime="20201029 12:47:28.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.971" endtime="20201029 12:47:28.351"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.361" endtime="20201029 12:47:28.378"></status>
</kw>
<msg timestamp="20201029 12:47:28.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.359" endtime="20201029 12:47:28.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.380" endtime="20201029 12:47:28.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.382" endtime="20201029 12:47:28.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.356" endtime="20201029 12:47:28.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.354" endtime="20201029 12:47:28.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.391" endtime="20201029 12:47:28.678"></status>
</kw>
<msg timestamp="20201029 12:47:28.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023986903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024029708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:28.390" endtime="20201029 12:47:28.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023986903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024029708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:28.682" endtime="20201029 12:47:28.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.691" endtime="20201029 12:47:28.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.387" endtime="20201029 12:47:28.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.386" endtime="20201029 12:47:28.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:28.697" level="INFO">${RESULT} = [{'diff': 4.2804999999999926e-05}, {'diff': 4.404200000000108e-05}, {'diff': 4.2694999999998845e-05}, {'diff': 4.4138999999998596e-05}, {'diff': 4.300000000000137e-05}, {'diff': 4.404200000000108e-05}...</msg>
<status status="PASS" starttime="20201029 12:47:28.694" endtime="20201029 12:47:28.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:28.701" level="INFO">${ACCURACY} = {'diff': [4.2804999999999926e-05, 4.404200000000108e-05, 4.2694999999998845e-05, 4.4138999999998596e-05, 4.300000000000137e-05, 4.404200000000108e-05, 4.4402999999998416e-05, 4.4389000000002315e-05, 4...</msg>
<status status="PASS" starttime="20201029 12:47:28.698" endtime="20201029 12:47:28.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.706" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 12:47:28.705" endtime="20201029 12:47:28.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.708" level="INFO">VALUE: [4.2804999999999926e-05, 4.404200000000108e-05, 4.2694999999998845e-05, 4.4138999999998596e-05, 4.300000000000137e-05, 4.404200000000108e-05, 4.4402999999998416e-05, 4.4389000000002315e-05, 4.274999999999765e-05, 4.277800000000026e-05, 4.274999999999765e-05, 4.3860999999999206e-05, 4.3167000000000205e-05, 4.3819000000000496e-05, 4.4375000000002746e-05, 4.4445000000000595e-05, 4.3096999999998886e-05, 4.3861000000002676e-05, 4.3012999999998e-05, 4.3945000000000095e-05, 4.294399999999962e-05, 4.393000000000105e-05, 4.325000000000162e-05, 4.3681000000000275e-05, 4.4374999999999276e-05, 4.4403000000001885e-05, 4.441599999999851e-05, 4.2694999999998845e-05, 4.2833000000002536e-05, 4.376400000000169e-05, 4.298599999999833e-05, 4.277800000000026e-05, 4.375000000000212e-05, 4.276399999999722e-05, 4.4181000000000775e-05, 4.269399999999937e-05, 4.4181000000000775e-05, 4.444400000000112e-05, 4.440199999999894e-05, 4.277700000000079e-05, 4.4181000000000775e-05, 4.4403000000001885e-05, 4.3068999999999746e-05, 4.3833000000000066e-05, 4.302800000000051e-05, 4.3874999999998776e-05, 4.4403000000001885e-05, 4.304200000000008e-05, 4.3874999999998776e-05, 4.441600000000198e-05]</msg>
<status status="PASS" starttime="20201029 12:47:28.707" endtime="20201029 12:47:28.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.702" endtime="20201029 12:47:28.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:28.714" endtime="20201029 12:47:28.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.713" endtime="20201029 12:47:28.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.711" endtime="20201029 12:47:28.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.352" endtime="20201029 12:47:28.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.352" endtime="20201029 12:47:28.735"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.743" endtime="20201029 12:47:28.760"></status>
</kw>
<msg timestamp="20201029 12:47:28.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.742" endtime="20201029 12:47:28.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.761" endtime="20201029 12:47:28.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.764" endtime="20201029 12:47:28.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.739" endtime="20201029 12:47:28.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.737" endtime="20201029 12:47:28.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.772" endtime="20201029 12:47:29.058"></status>
</kw>
<msg timestamp="20201029 12:47:29.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021819361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021862125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:28.771" endtime="20201029 12:47:29.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021819361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021862125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:29.062" endtime="20201029 12:47:29.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.070" endtime="20201029 12:47:29.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.768" endtime="20201029 12:47:29.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.767" endtime="20201029 12:47:29.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:29.077" level="INFO">${RESULT} = [{'diff': 4.276400000000069e-05}, {'diff': 4.4166999999997736e-05}, {'diff': 4.3012999999998e-05}, {'diff': 4.394399999999715e-05}, {'diff': 4.274999999999765e-05}, {'diff': 4.275000000000112e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:29.073" endtime="20201029 12:47:29.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:29.081" level="INFO">${ACCURACY} = {'diff': [4.276400000000069e-05, 4.4166999999997736e-05, 4.3012999999998e-05, 4.394399999999715e-05, 4.274999999999765e-05, 4.275000000000112e-05, 4.395800000000019e-05, 4.294399999999962e-05, 4.39589...</msg>
<status status="PASS" starttime="20201029 12:47:29.078" endtime="20201029 12:47:29.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.086" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 12:47:29.085" endtime="20201029 12:47:29.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.088" level="INFO">VALUE: [4.276400000000069e-05, 4.4166999999997736e-05, 4.3012999999998e-05, 4.394399999999715e-05, 4.274999999999765e-05, 4.275000000000112e-05, 4.395800000000019e-05, 4.294399999999962e-05, 4.3958999999999665e-05, 4.3082999999999316e-05, 4.3833000000000066e-05, 4.4417000000001455e-05, 4.326399999999772e-05, 4.404200000000108e-05, 4.3208999999998915e-05, 4.3681000000000275e-05, 4.4402999999998416e-05, 4.323599999999858e-05, 4.3653000000001135e-05, 4.4403000000001885e-05, 4.277799999999679e-05, 4.4166999999997736e-05, 4.273599999999808e-05, 4.293000000000005e-05, 4.374999999999865e-05, 4.440200000000241e-05, 4.273599999999808e-05, 4.4153000000001635e-05, 4.29999999999979e-05, 4.277800000000026e-05, 4.3653000000001135e-05, 4.320799999999944e-05, 4.401400000000194e-05, 4.319399999999987e-05, 4.3611000000002426e-05, 4.306999999999922e-05, 4.3889000000001815e-05, 4.3208999999998915e-05, 4.3666999999997236e-05, 4.4388999999998846e-05, 4.4388999999998846e-05, 4.4416999999997986e-05, 4.31800000000003e-05, 4.376400000000169e-05, 4.4388999999998846e-05, 4.269399999999937e-05, 4.4138999999998596e-05, 4.2847000000002106e-05, 4.408399999999979e-05, 4.2861000000001676e-05]</msg>
<status status="PASS" starttime="20201029 12:47:29.087" endtime="20201029 12:47:29.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.082" endtime="20201029 12:47:29.090"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:29.093" endtime="20201029 12:47:29.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.092" endtime="20201029 12:47:29.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.091" endtime="20201029 12:47:29.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.736" endtime="20201029 12:47:29.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.735" endtime="20201029 12:47:29.114"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.122" endtime="20201029 12:47:29.139"></status>
</kw>
<msg timestamp="20201029 12:47:29.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.121" endtime="20201029 12:47:29.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.140" endtime="20201029 12:47:29.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.143" endtime="20201029 12:47:29.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.118" endtime="20201029 12:47:29.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.116" endtime="20201029 12:47:29.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.152" endtime="20201029 12:47:29.442"></status>
</kw>
<msg timestamp="20201029 12:47:29.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022220681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022265097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:29.150" endtime="20201029 12:47:29.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022220681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022265097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:29.447" endtime="20201029 12:47:29.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.455" endtime="20201029 12:47:29.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.148" endtime="20201029 12:47:29.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.146" endtime="20201029 12:47:29.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:29.461" level="INFO">${RESULT} = [{'diff': 4.441600000000198e-05}, {'diff': 4.306999999999922e-05}, {'diff': 4.402800000000151e-05}, {'diff': 4.270799999999894e-05}, {'diff': 4.4195000000000345e-05}, {'diff': 4.302699999999757e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:29.458" endtime="20201029 12:47:29.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:29.466" level="INFO">${ACCURACY} = {'diff': [4.441600000000198e-05, 4.306999999999922e-05, 4.402800000000151e-05, 4.270799999999894e-05, 4.4195000000000345e-05, 4.302699999999757e-05, 4.394400000000062e-05, 4.440200000000241e-05, 4.266...</msg>
<status status="PASS" starttime="20201029 12:47:29.462" endtime="20201029 12:47:29.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.470" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 12:47:29.469" endtime="20201029 12:47:29.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.472" level="INFO">VALUE: [4.441600000000198e-05, 4.306999999999922e-05, 4.402800000000151e-05, 4.270799999999894e-05, 4.4195000000000345e-05, 4.302699999999757e-05, 4.394400000000062e-05, 4.440200000000241e-05, 4.2666999999999705e-05, 4.424999999999915e-05, 4.3138999999997596e-05, 4.38060000000004e-05, 4.320799999999944e-05, 4.3860999999999206e-05, 4.4416999999997986e-05, 4.275000000000112e-05, 4.29860000000018e-05, 4.3860999999999206e-05, 4.302800000000051e-05, 4.394400000000062e-05, 4.4374999999999276e-05, 4.4417000000001455e-05, 4.270800000000241e-05, 4.4167000000001205e-05, 4.270799999999894e-05, 4.291600000000048e-05, 4.376299999999875e-05, 4.2804999999999926e-05, 4.404200000000108e-05, 4.2832999999999066e-05, 4.404199999999761e-05, 4.2889000000000815e-05, 4.404099999999814e-05, 4.2653000000000135e-05, 4.424999999999915e-05, 4.31800000000003e-05, 4.376399999999822e-05, 4.2959000000002134e-05, 4.397199999999976e-05, 4.4416999999997986e-05, 4.266600000000023e-05, 4.422200000000001e-05, 4.4403000000001885e-05, 4.4416999999997986e-05, 4.4402999999998416e-05, 4.273600000000155e-05, 4.4138999999998596e-05, 4.2804999999999926e-05, 4.4166999999997736e-05, 4.302799999999704e-05]</msg>
<status status="PASS" starttime="20201029 12:47:29.471" endtime="20201029 12:47:29.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.466" endtime="20201029 12:47:29.474"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:29.477" endtime="20201029 12:47:29.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.476" endtime="20201029 12:47:29.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.475" endtime="20201029 12:47:29.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.115" endtime="20201029 12:47:29.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.114" endtime="20201029 12:47:29.498"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.507" endtime="20201029 12:47:29.526"></status>
</kw>
<msg timestamp="20201029 12:47:29.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.505" endtime="20201029 12:47:29.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.528" endtime="20201029 12:47:29.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.530" endtime="20201029 12:47:29.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.502" endtime="20201029 12:47:29.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.500" endtime="20201029 12:47:29.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.539" endtime="20201029 12:47:29.824"></status>
</kw>
<msg timestamp="20201029 12:47:29.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025315514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025359931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:29.538" endtime="20201029 12:47:29.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025315514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025359931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:29.828" endtime="20201029 12:47:29.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.836" endtime="20201029 12:47:29.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.535" endtime="20201029 12:47:29.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.534" endtime="20201029 12:47:29.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:29.843" level="INFO">${RESULT} = [{'diff': 4.4416999999997986e-05}, {'diff': 4.305599999999965e-05}, {'diff': 4.4096999999999886e-05}, {'diff': 4.4403000000001885e-05}, {'diff': 4.4403000000001885e-05}, {'diff': 4.4388999999998846e-0...</msg>
<status status="PASS" starttime="20201029 12:47:29.839" endtime="20201029 12:47:29.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:29.847" level="INFO">${ACCURACY} = {'diff': [4.4416999999997986e-05, 4.305599999999965e-05, 4.4096999999999886e-05, 4.4403000000001885e-05, 4.4403000000001885e-05, 4.4388999999998846e-05, 4.3167000000000205e-05, 4.402700000000204e-05, ...</msg>
<status status="PASS" starttime="20201029 12:47:29.844" endtime="20201029 12:47:29.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.851" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 12:47:29.850" endtime="20201029 12:47:29.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.854" level="INFO">VALUE: [4.4416999999997986e-05, 4.305599999999965e-05, 4.4096999999999886e-05, 4.4403000000001885e-05, 4.4403000000001885e-05, 4.4388999999998846e-05, 4.3167000000000205e-05, 4.402700000000204e-05, 4.4360999999999706e-05, 4.4402999999998416e-05, 4.4402999999998416e-05, 4.4388999999998846e-05, 4.2902999999996916e-05, 4.405499999999771e-05, 4.4402999999998416e-05, 4.440199999999894e-05, 4.440199999999894e-05, 4.4374999999999276e-05, 4.275000000000112e-05, 4.2861000000001676e-05, 4.376400000000169e-05, 4.3124999999998026e-05, 4.372199999999951e-05, 4.4445000000000595e-05, 4.270800000000241e-05, 4.2916999999999955e-05, 4.375000000000212e-05, 4.4403000000001885e-05, 4.301400000000094e-05, 4.277800000000026e-05, 4.3819000000000496e-05, 4.4388999999998846e-05, 4.3041000000000607e-05, 4.402800000000151e-05, 4.440199999999894e-05, 4.4388999999998846e-05, 4.4403000000001885e-05, 4.3138999999997596e-05, 4.375000000000212e-05, 4.4388999999998846e-05, 4.3180999999999775e-05, 4.376299999999875e-05, 4.4403000000001885e-05, 4.298599999999833e-05, 4.3917000000000955e-05, 4.2818999999999496e-05, 4.297200000000223e-05, 4.375000000000212e-05, 4.4388999999998846e-05, 4.3153000000000635e-05]</msg>
<status status="PASS" starttime="20201029 12:47:29.852" endtime="20201029 12:47:29.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.848" endtime="20201029 12:47:29.856"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:29.859" endtime="20201029 12:47:29.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.858" endtime="20201029 12:47:29.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.857" endtime="20201029 12:47:29.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.499" endtime="20201029 12:47:29.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.498" endtime="20201029 12:47:29.880"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.888" endtime="20201029 12:47:29.905"></status>
</kw>
<msg timestamp="20201029 12:47:29.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.887" endtime="20201029 12:47:29.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.906" endtime="20201029 12:47:29.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.908" endtime="20201029 12:47:29.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.885" endtime="20201029 12:47:29.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.882" endtime="20201029 12:47:29.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.917" endtime="20201029 12:47:30.204"></status>
</kw>
<msg timestamp="20201029 12:47:30.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021739833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021782847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:29.916" endtime="20201029 12:47:30.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021739833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021782847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:30.208" endtime="20201029 12:47:30.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.216" endtime="20201029 12:47:30.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.913" endtime="20201029 12:47:30.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.912" endtime="20201029 12:47:30.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:30.223" level="INFO">${RESULT} = [{'diff': 4.301400000000094e-05}, {'diff': 4.283399999999854e-05}, {'diff': 4.3875000000002246e-05}, {'diff': 4.319399999999987e-05}, {'diff': 4.3958999999999665e-05}, {'diff': 4.4389000000002315e-05}...</msg>
<status status="PASS" starttime="20201029 12:47:30.219" endtime="20201029 12:47:30.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:30.228" level="INFO">${ACCURACY} = {'diff': [4.301400000000094e-05, 4.283399999999854e-05, 4.3875000000002246e-05, 4.319399999999987e-05, 4.3958999999999665e-05, 4.4389000000002315e-05, 4.4402999999998416e-05, 4.2916999999999955e-05, 4...</msg>
<status status="PASS" starttime="20201029 12:47:30.224" endtime="20201029 12:47:30.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.232" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 12:47:30.231" endtime="20201029 12:47:30.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.234" level="INFO">VALUE: [4.301400000000094e-05, 4.283399999999854e-05, 4.3875000000002246e-05, 4.319399999999987e-05, 4.3958999999999665e-05, 4.4389000000002315e-05, 4.4402999999998416e-05, 4.2916999999999955e-05, 4.3972999999999235e-05, 4.324999999999815e-05, 4.3653000000001135e-05, 4.4402999999998416e-05, 4.4347000000000136e-05, 4.2958999999998665e-05, 4.400000000000237e-05, 4.4403000000001885e-05, 4.2819000000002966e-05, 4.404200000000108e-05, 4.269399999999937e-05, 4.3096999999998886e-05, 4.36800000000008e-05, 4.322199999999901e-05, 4.36800000000008e-05, 4.4388999999998846e-05, 4.2930999999999525e-05, 4.3945000000000095e-05, 4.273599999999808e-05, 4.417999999999783e-05, 4.3083000000002786e-05, 4.3945000000000095e-05, 4.436199999999918e-05, 4.4402999999998416e-05, 4.438799999999937e-05, 4.3223000000001954e-05, 4.404100000000161e-05, 4.3041000000000607e-05, 4.401399999999847e-05, 4.441599999999851e-05, 4.28059999999994e-05, 4.4167000000001205e-05, 4.270799999999894e-05, 4.4166999999997736e-05, 4.302800000000051e-05, 4.394399999999715e-05, 4.305599999999965e-05, 4.376400000000169e-05, 4.4374999999999276e-05, 4.2709000000001884e-05, 4.417999999999783e-05, 4.2846999999998636e-05]</msg>
<status status="PASS" starttime="20201029 12:47:30.233" endtime="20201029 12:47:30.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.228" endtime="20201029 12:47:30.236"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:30.239" endtime="20201029 12:47:30.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.238" endtime="20201029 12:47:30.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.237" endtime="20201029 12:47:30.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.881" endtime="20201029 12:47:30.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.880" endtime="20201029 12:47:30.261"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.274" endtime="20201029 12:47:30.292"></status>
</kw>
<msg timestamp="20201029 12:47:30.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:30.272" endtime="20201029 12:47:30.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:30.293" endtime="20201029 12:47:30.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.296" endtime="20201029 12:47:30.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.268" endtime="20201029 12:47:30.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.265" endtime="20201029 12:47:30.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.305" endtime="20201029 12:47:30.590"></status>
</kw>
<msg timestamp="20201029 12:47:30.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028676847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028719833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:30.303" endtime="20201029 12:47:30.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028676847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028719833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:30.595" endtime="20201029 12:47:30.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.603" endtime="20201029 12:47:30.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.301" endtime="20201029 12:47:30.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.299" endtime="20201029 12:47:30.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:30.609" level="INFO">${RESULT} = [{'diff': 4.29860000000018e-05}, {'diff': 4.394400000000062e-05}, {'diff': 4.2916999999999955e-05}, {'diff': 4.401399999999847e-05}, {'diff': 4.4416999999997986e-05}, {'diff': 4.277800000000026e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:30.606" endtime="20201029 12:47:30.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:30.613" level="INFO">${ACCURACY} = {'diff': [4.29860000000018e-05, 4.394400000000062e-05, 4.2916999999999955e-05, 4.401399999999847e-05, 4.4416999999997986e-05, 4.277800000000026e-05, 4.4181000000000775e-05, 4.3208999999998915e-05, 4.3...</msg>
<status status="PASS" starttime="20201029 12:47:30.610" endtime="20201029 12:47:30.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.618" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 12:47:30.617" endtime="20201029 12:47:30.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.620" level="INFO">VALUE: [4.29860000000018e-05, 4.394400000000062e-05, 4.2916999999999955e-05, 4.401399999999847e-05, 4.4416999999997986e-05, 4.277800000000026e-05, 4.4181000000000775e-05, 4.3208999999998915e-05, 4.3667000000000705e-05, 4.269399999999937e-05, 4.41800000000013e-05, 4.302799999999704e-05, 4.277800000000026e-05, 4.366599999999776e-05, 4.2916999999999955e-05, 4.2805000000003396e-05, 4.375000000000212e-05, 4.2833000000002536e-05, 4.4069000000000746e-05, 4.2680999999999275e-05, 4.427799999999829e-05, 4.277800000000026e-05, 4.416599999999826e-05, 4.2875000000001245e-05, 4.404199999999761e-05, 4.440199999999894e-05, 4.2875000000001245e-05, 4.402800000000151e-05, 4.300000000000137e-05, 4.398599999999933e-05, 4.4374999999999276e-05, 4.290200000000091e-05, 4.394400000000062e-05, 4.3222999999998485e-05, 4.366600000000123e-05, 4.273599999999808e-05, 4.4180999999997306e-05, 4.4389000000002315e-05, 4.319400000000334e-05, 4.3667000000000705e-05, 4.4388999999998846e-05, 4.305599999999965e-05, 4.3861000000002676e-05, 4.4374999999999276e-05, 4.2930999999999525e-05, 4.28059999999994e-05, 4.365200000000166e-05, 4.305599999999965e-05, 4.3874999999998776e-05, 4.3055000000000176e-05]</msg>
<status status="PASS" starttime="20201029 12:47:30.619" endtime="20201029 12:47:30.621"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.614" endtime="20201029 12:47:30.622"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:30.625" endtime="20201029 12:47:30.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.624" endtime="20201029 12:47:30.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.623" endtime="20201029 12:47:30.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.262" endtime="20201029 12:47:30.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.261" endtime="20201029 12:47:30.646"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.654" endtime="20201029 12:47:30.673"></status>
</kw>
<msg timestamp="20201029 12:47:30.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:30.653" endtime="20201029 12:47:30.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:30.674" endtime="20201029 12:47:30.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.677" endtime="20201029 12:47:30.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.650" endtime="20201029 12:47:30.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.648" endtime="20201029 12:47:30.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.686" endtime="20201029 12:47:30.973"></status>
</kw>
<msg timestamp="20201029 12:47:30.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023188556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023232944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:30.684" endtime="20201029 12:47:30.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023188556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023232944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:30.977" endtime="20201029 12:47:30.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.985" endtime="20201029 12:47:30.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.682" endtime="20201029 12:47:30.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.680" endtime="20201029 12:47:30.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:30.992" level="INFO">${RESULT} = [{'diff': 4.438799999999937e-05}, {'diff': 4.4361000000003176e-05}, {'diff': 4.4610999999999956e-05}, {'diff': 4.474999999999965e-05}, {'diff': 4.4597000000000386e-05}, {'diff': 4.4847000000000636e-05...</msg>
<status status="PASS" starttime="20201029 12:47:30.989" endtime="20201029 12:47:30.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:30.996" level="INFO">${ACCURACY} = {'diff': [4.438799999999937e-05, 4.4361000000003176e-05, 4.4610999999999956e-05, 4.474999999999965e-05, 4.4597000000000386e-05, 4.4847000000000636e-05, 4.4597000000000386e-05, 4.4610999999999956e-05, ...</msg>
<status status="PASS" starttime="20201029 12:47:30.993" endtime="20201029 12:47:30.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.000" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 12:47:30.999" endtime="20201029 12:47:31.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.003" level="INFO">VALUE: [4.438799999999937e-05, 4.4361000000003176e-05, 4.4610999999999956e-05, 4.474999999999965e-05, 4.4597000000000386e-05, 4.4847000000000636e-05, 4.4597000000000386e-05, 4.4610999999999956e-05, 4.4597000000000386e-05, 4.479200000000183e-05, 4.4374999999999276e-05, 4.4388999999998846e-05, 4.4374999999999276e-05, 4.480599999999793e-05, 4.444399999999765e-05, 4.4374999999999276e-05, 4.4389000000002315e-05, 4.4374999999999276e-05, 4.434799999999961e-05, 4.4847000000000636e-05, 4.442999999999808e-05, 4.4388999999998846e-05, 4.451399999999897e-05, 4.444400000000112e-05, 4.474999999999965e-05, 4.4403000000001885e-05, 4.4388999999998846e-05, 4.4374999999999276e-05, 4.4375000000002746e-05, 4.444400000000112e-05, 4.4430999999997556e-05, 4.4388999999998846e-05, 4.498600000000033e-05, 4.4374999999999276e-05, 4.4374999999999276e-05, 4.4360999999999706e-05, 4.444399999999765e-05, 4.477699999999932e-05, 4.494400000000162e-05, 4.477799999999879e-05, 4.4402999999998416e-05, 4.451400000000244e-05, 4.494400000000162e-05, 4.4374999999999276e-05, 4.4652999999998666e-05, 4.4402999999998416e-05, 4.4430999999997556e-05, 4.4902999999998916e-05, 4.44860000000033e-05, 4.4445000000000595e-05]</msg>
<status status="PASS" starttime="20201029 12:47:31.001" endtime="20201029 12:47:31.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.997" endtime="20201029 12:47:31.005"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:31.009" endtime="20201029 12:47:31.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.007" endtime="20201029 12:47:31.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.006" endtime="20201029 12:47:31.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.647" endtime="20201029 12:47:31.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.646" endtime="20201029 12:47:31.029"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.038" endtime="20201029 12:47:31.055"></status>
</kw>
<msg timestamp="20201029 12:47:31.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.037" endtime="20201029 12:47:31.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.057" endtime="20201029 12:47:31.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.059" endtime="20201029 12:47:31.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.034" endtime="20201029 12:47:31.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.032" endtime="20201029 12:47:31.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.068" endtime="20201029 12:47:31.354"></status>
</kw>
<msg timestamp="20201029 12:47:31.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021985903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02203175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:31.066" endtime="20201029 12:47:31.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021985903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02203175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:31.358" endtime="20201029 12:47:31.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.366" endtime="20201029 12:47:31.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.064" endtime="20201029 12:47:31.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.062" endtime="20201029 12:47:31.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:31.373" level="INFO">${RESULT} = [{'diff': 4.584699999999817e-05}, {'diff': 4.577799999999979e-05}, {'diff': 4.5944999999998626e-05}, {'diff': 4.5430999999998556e-05}, {'diff': 4.554200000000258e-05}, {'diff': 4.576400000000022e-05},...</msg>
<status status="PASS" starttime="20201029 12:47:31.370" endtime="20201029 12:47:31.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:31.378" level="INFO">${ACCURACY} = {'diff': [4.584699999999817e-05, 4.577799999999979e-05, 4.5944999999998626e-05, 4.5430999999998556e-05, 4.554200000000258e-05, 4.576400000000022e-05, 4.5445000000001595e-05, 4.5125000000000026e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:47:31.374" endtime="20201029 12:47:31.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.382" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 12:47:31.381" endtime="20201029 12:47:31.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.385" level="INFO">VALUE: [4.584699999999817e-05, 4.577799999999979e-05, 4.5944999999998626e-05, 4.5430999999998556e-05, 4.554200000000258e-05, 4.576400000000022e-05, 4.5445000000001595e-05, 4.5125000000000026e-05, 4.5430999999998556e-05, 4.559800000000086e-05, 4.581899999999903e-05, 4.576400000000022e-05, 4.5125000000000026e-05, 4.5111000000000456e-05, 4.5402999999999416e-05, 4.540199999999994e-05, 4.526399999999972e-05, 4.594399999999915e-05, 4.5139000000003066e-05, 4.577800000000326e-05, 4.5125000000000026e-05, 4.544400000000212e-05, 4.5931000000002525e-05, 4.60000000000009e-05, 4.5430999999998556e-05, 4.5139000000003066e-05, 4.5611000000000956e-05, 4.527799999999929e-05, 4.565200000000019e-05, 4.527799999999929e-05, 4.5444999999998126e-05, 4.542999999999908e-05, 4.544399999999865e-05, 4.541599999999951e-05, 4.5833000000002067e-05, 4.592999999999958e-05, 4.5111000000000456e-05, 4.594399999999915e-05, 4.544399999999865e-05, 4.5375000000000276e-05, 4.576400000000022e-05, 4.5597000000001386e-05, 4.5431000000002025e-05, 4.577799999999979e-05, 4.5930999999999056e-05, 4.554199999999911e-05, 4.5430999999998556e-05, 4.5945000000002095e-05, 4.5445000000001595e-05, 4.594400000000262e-05]</msg>
<status status="PASS" starttime="20201029 12:47:31.383" endtime="20201029 12:47:31.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.379" endtime="20201029 12:47:31.386"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:31.390" endtime="20201029 12:47:31.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.388" endtime="20201029 12:47:31.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.387" endtime="20201029 12:47:31.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.030" endtime="20201029 12:47:31.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.030" endtime="20201029 12:47:31.411"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.420" endtime="20201029 12:47:31.436"></status>
</kw>
<msg timestamp="20201029 12:47:31.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.418" endtime="20201029 12:47:31.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.437" endtime="20201029 12:47:31.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.440" endtime="20201029 12:47:31.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.416" endtime="20201029 12:47:31.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.413" endtime="20201029 12:47:31.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.449" endtime="20201029 12:47:31.736"></status>
</kw>
<msg timestamp="20201029 12:47:31.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022593319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022640347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:31.447" endtime="20201029 12:47:31.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022593319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022640347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:31.741" endtime="20201029 12:47:31.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.749" endtime="20201029 12:47:31.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.445" endtime="20201029 12:47:31.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.443" endtime="20201029 12:47:31.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:31.756" level="INFO">${RESULT} = [{'diff': 4.702800000000104e-05}, {'diff': 4.629100000000039e-05}, {'diff': 4.626400000000072e-05}, {'diff': 4.644399999999965e-05}, {'diff': 4.676399999999775e-05}, {'diff': 4.690299999999745e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:31.752" endtime="20201029 12:47:31.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:31.760" level="INFO">${ACCURACY} = {'diff': [4.702800000000104e-05, 4.629100000000039e-05, 4.626400000000072e-05, 4.644399999999965e-05, 4.676399999999775e-05, 4.690299999999745e-05, 4.6153000000000166e-05, 4.6430999999999556e-05, 4.60...</msg>
<status status="PASS" starttime="20201029 12:47:31.757" endtime="20201029 12:47:31.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.764" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 12:47:31.763" endtime="20201029 12:47:31.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.767" level="INFO">VALUE: [4.702800000000104e-05, 4.629100000000039e-05, 4.626400000000072e-05, 4.644399999999965e-05, 4.676399999999775e-05, 4.690299999999745e-05, 4.6153000000000166e-05, 4.6430999999999556e-05, 4.609699999999842e-05, 4.6958999999999196e-05, 4.6444999999999126e-05, 4.658399999999882e-05, 4.627800000000029e-05, 4.659699999999892e-05, 4.6611000000001956e-05, 4.677800000000079e-05, 4.611200000000093e-05, 4.626400000000072e-05, 4.694400000000015e-05, 4.6111000000001456e-05, 4.624999999999768e-05, 4.644399999999965e-05, 4.694400000000015e-05, 4.693000000000058e-05, 4.611099999999799e-05, 4.644399999999965e-05, 4.6111000000001456e-05, 4.627800000000029e-05, 4.630599999999943e-05, 4.6445000000002595e-05, 4.608299999999885e-05, 4.6625000000001526e-05, 4.665199999999772e-05, 4.627800000000029e-05, 4.6430999999999556e-05, 4.677800000000079e-05, 4.627800000000029e-05, 4.6111000000001456e-05, 4.6597000000002387e-05, 4.695799999999972e-05, 4.6125000000001026e-05, 4.6416999999999986e-05, 4.609699999999842e-05, 4.644399999999965e-05, 4.661099999999849e-05, 4.626400000000072e-05, 4.627800000000029e-05, 4.694400000000015e-05, 4.6875000000001776e-05, 4.6458999999998696e-05]</msg>
<status status="PASS" starttime="20201029 12:47:31.765" endtime="20201029 12:47:31.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.761" endtime="20201029 12:47:31.768"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:31.772" endtime="20201029 12:47:31.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.770" endtime="20201029 12:47:31.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.769" endtime="20201029 12:47:31.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.412" endtime="20201029 12:47:31.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.411" endtime="20201029 12:47:31.792"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.801" endtime="20201029 12:47:31.819"></status>
</kw>
<msg timestamp="20201029 12:47:31.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.799" endtime="20201029 12:47:31.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.820" endtime="20201029 12:47:31.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.823" endtime="20201029 12:47:31.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.797" endtime="20201029 12:47:31.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.795" endtime="20201029 12:47:31.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.832" endtime="20201029 12:47:32.118"></status>
</kw>
<msg timestamp="20201029 12:47:32.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023130917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023178931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:31.830" endtime="20201029 12:47:32.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023130917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023178931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:32.122" endtime="20201029 12:47:32.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.130" endtime="20201029 12:47:32.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.828" endtime="20201029 12:47:32.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.826" endtime="20201029 12:47:32.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:32.136" level="INFO">${RESULT} = [{'diff': 4.8013999999999e-05}, {'diff': 4.711200000000193e-05}, {'diff': 4.762499999999906e-05}, {'diff': 4.794399999999768e-05}, {'diff': 4.779100000000189e-05}, {'diff': 4.726400000000172e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:32.133" endtime="20201029 12:47:32.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:32.140" level="INFO">${ACCURACY} = {'diff': [4.8013999999999e-05, 4.711200000000193e-05, 4.762499999999906e-05, 4.794399999999768e-05, 4.779100000000189e-05, 4.726400000000172e-05, 4.724999999999868e-05, 4.777799999999832e-05, 4.744400...</msg>
<status status="PASS" starttime="20201029 12:47:32.137" endtime="20201029 12:47:32.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.145" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 12:47:32.144" endtime="20201029 12:47:32.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.147" level="INFO">VALUE: [4.8013999999999e-05, 4.711200000000193e-05, 4.762499999999906e-05, 4.794399999999768e-05, 4.779100000000189e-05, 4.726400000000172e-05, 4.724999999999868e-05, 4.777799999999832e-05, 4.744400000000065e-05, 4.745800000000022e-05, 4.774999999999918e-05, 4.733399999999957e-05, 4.779200000000136e-05, 4.758300000000035e-05, 4.731900000000053e-05, 4.7431000000000556e-05, 4.776400000000222e-05, 4.7945000000000626e-05, 4.711199999999846e-05, 4.707000000000322e-05, 4.711200000000193e-05, 4.779100000000189e-05, 4.794400000000115e-05, 4.742999999999761e-05, 4.795800000000072e-05, 4.777799999999832e-05, 4.762499999999906e-05, 4.744399999999718e-05, 4.762499999999906e-05, 4.7125000000002026e-05, 4.776400000000222e-05, 4.730600000000043e-05, 4.725000000000215e-05, 4.7458999999999696e-05, 4.7931000000001056e-05, 4.708400000000279e-05, 4.758399999999982e-05, 4.798599999999986e-05, 4.755600000000068e-05, 4.777800000000179e-05, 4.727800000000129e-05, 4.762499999999906e-05, 4.794400000000115e-05, 4.744400000000065e-05, 4.727799999999782e-05, 4.776399999999875e-05, 4.7625000000002526e-05, 4.776399999999875e-05, 4.732e-05, 4.791699999999802e-05]</msg>
<status status="PASS" starttime="20201029 12:47:32.146" endtime="20201029 12:47:32.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.141" endtime="20201029 12:47:32.149"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:32.153" endtime="20201029 12:47:32.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.151" endtime="20201029 12:47:32.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.150" endtime="20201029 12:47:32.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.793" endtime="20201029 12:47:32.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.793" endtime="20201029 12:47:32.174"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.182" endtime="20201029 12:47:32.199"></status>
</kw>
<msg timestamp="20201029 12:47:32.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:32.181" endtime="20201029 12:47:32.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:32.201" endtime="20201029 12:47:32.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.203" endtime="20201029 12:47:32.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.178" endtime="20201029 12:47:32.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.176" endtime="20201029 12:47:32.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.212" endtime="20201029 12:47:32.498"></status>
</kw>
<msg timestamp="20201029 12:47:32.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021879903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021928014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:32.211" endtime="20201029 12:47:32.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021879903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021928014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:32.502" endtime="20201029 12:47:32.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.510" endtime="20201029 12:47:32.512"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.208" endtime="20201029 12:47:32.512"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.206" endtime="20201029 12:47:32.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:32.516" level="INFO">${RESULT} = [{'diff': 4.811099999999999e-05}, {'diff': 4.877799999999932e-05}, {'diff': 4.883299999999813e-05}, {'diff': 4.829199999999839e-05}, {'diff': 4.858400000000082e-05}, {'diff': 4.8945000000001626e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:32.513" endtime="20201029 12:47:32.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:32.521" level="INFO">${ACCURACY} = {'diff': [4.811099999999999e-05, 4.877799999999932e-05, 4.883299999999813e-05, 4.829199999999839e-05, 4.858400000000082e-05, 4.8945000000001626e-05, 4.8431000000001556e-05, 4.880500000000246e-05, 4.86...</msg>
<status status="PASS" starttime="20201029 12:47:32.517" endtime="20201029 12:47:32.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.526" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 12:47:32.525" endtime="20201029 12:47:32.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.528" level="INFO">VALUE: [4.811099999999999e-05, 4.877799999999932e-05, 4.883299999999813e-05, 4.829199999999839e-05, 4.858400000000082e-05, 4.8945000000001626e-05, 4.8431000000001556e-05, 4.880500000000246e-05, 4.861100000000049e-05, 4.877699999999985e-05, 4.888899999999988e-05, 4.811099999999999e-05, 4.880599999999846e-05, 4.862500000000006e-05, 4.859699999999745e-05, 4.805499999999824e-05, 4.811099999999999e-05, 4.843099999999809e-05, 4.8945000000001626e-05, 4.8139000000002596e-05, 4.8958999999997727e-05, 4.8431000000001556e-05, 4.808400000000032e-05, 4.811099999999999e-05, 4.8917000000002486e-05, 4.893099999999859e-05, 4.893099999999859e-05, 4.877699999999985e-05, 4.827800000000229e-05, 4.827699999999935e-05, 4.891599999999954e-05, 4.863899999999963e-05, 4.827799999999882e-05, 4.861100000000049e-05, 4.895800000000172e-05, 4.824999999999968e-05, 4.811099999999999e-05, 4.894499999999816e-05, 4.884700000000117e-05, 4.879199999999889e-05, 4.877799999999932e-05, 4.8445000000001126e-05, 4.897199999999782e-05, 4.862500000000006e-05, 4.8445000000001126e-05, 4.877699999999985e-05, 4.861100000000049e-05, 4.844399999999818e-05, 4.861100000000049e-05, 4.813899999999913e-05]</msg>
<status status="PASS" starttime="20201029 12:47:32.527" endtime="20201029 12:47:32.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.522" endtime="20201029 12:47:32.533"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:32.537" endtime="20201029 12:47:32.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.536" endtime="20201029 12:47:32.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.534" endtime="20201029 12:47:32.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.175" endtime="20201029 12:47:32.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.174" endtime="20201029 12:47:32.558"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.566" endtime="20201029 12:47:32.583"></status>
</kw>
<msg timestamp="20201029 12:47:32.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:32.565" endtime="20201029 12:47:32.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:32.584" endtime="20201029 12:47:32.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.587" endtime="20201029 12:47:32.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.562" endtime="20201029 12:47:32.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.560" endtime="20201029 12:47:32.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.596" endtime="20201029 12:47:32.915"></status>
</kw>
<msg timestamp="20201029 12:47:32.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022032889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022082403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:32.594" endtime="20201029 12:47:32.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022032889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022082403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:32.921" endtime="20201029 12:47:32.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.932" endtime="20201029 12:47:32.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.591" endtime="20201029 12:47:32.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.590" endtime="20201029 12:47:32.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:32.944" level="INFO">${RESULT} = [{'diff': 4.95140000000005e-05}, {'diff': 4.929199999999939e-05}, {'diff': 4.912500000000056e-05}, {'diff': 4.9459000000001696e-05}, {'diff': 4.980599999999946e-05}, {'diff': 4.912500000000056e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:32.939" endtime="20201029 12:47:32.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:32.950" level="INFO">${ACCURACY} = {'diff': [4.95140000000005e-05, 4.929199999999939e-05, 4.912500000000056e-05, 4.9459000000001696e-05, 4.980599999999946e-05, 4.912500000000056e-05, 4.927799999999982e-05, 4.961199999999749e-05, 4.9277...</msg>
<status status="PASS" starttime="20201029 12:47:32.945" endtime="20201029 12:47:32.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.957" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 12:47:32.956" endtime="20201029 12:47:32.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.962" level="INFO">VALUE: [4.95140000000005e-05, 4.929199999999939e-05, 4.912500000000056e-05, 4.9459000000001696e-05, 4.980599999999946e-05, 4.912500000000056e-05, 4.927799999999982e-05, 4.961199999999749e-05, 4.927700000000035e-05, 4.972199999999857e-05, 4.961099999999802e-05, 4.927700000000035e-05, 4.929199999999939e-05, 4.962500000000106e-05, 4.945799999999875e-05, 4.905600000000218e-05, 4.923600000000111e-05, 4.979199999999989e-05, 4.923600000000111e-05, 4.9459000000001696e-05, 4.958299999999888e-05, 4.977800000000032e-05, 4.976400000000075e-05, 4.994499999999916e-05, 4.908399999999785e-05, 4.909699999999795e-05, 4.959800000000139e-05, 4.995800000000272e-05, 4.944399999999918e-05, 4.940200000000047e-05, 4.961099999999802e-05, 4.976400000000075e-05, 4.981999999999903e-05, 4.927799999999982e-05, 4.944399999999918e-05, 4.929200000000286e-05, 4.994399999999968e-05, 4.911100000000099e-05, 4.943099999999909e-05, 4.961100000000149e-05, 4.9445000000002126e-05, 4.993099999999959e-05, 4.993099999999959e-05, 4.945799999999875e-05, 4.926400000000025e-05, 4.991600000000054e-05, 4.9388000000000903e-05, 4.979100000000042e-05, 4.990200000000097e-05, 4.944400000000265e-05]</msg>
<status status="PASS" starttime="20201029 12:47:32.959" endtime="20201029 12:47:32.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.952" endtime="20201029 12:47:32.964"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:32.970" endtime="20201029 12:47:32.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.968" endtime="20201029 12:47:32.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.965" endtime="20201029 12:47:32.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.559" endtime="20201029 12:47:32.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.558" endtime="20201029 12:47:32.992"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.002" endtime="20201029 12:47:33.023"></status>
</kw>
<msg timestamp="20201029 12:47:33.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:33.001" endtime="20201029 12:47:33.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:33.025" endtime="20201029 12:47:33.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.027" endtime="20201029 12:47:33.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.998" endtime="20201029 12:47:33.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.995" endtime="20201029 12:47:33.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.036" endtime="20201029 12:47:33.322"></status>
</kw>
<msg timestamp="20201029 12:47:33.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027470583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027521097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:33.034" endtime="20201029 12:47:33.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027470583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027521097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:33.326" endtime="20201029 12:47:33.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.334" endtime="20201029 12:47:33.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.032" endtime="20201029 12:47:33.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.030" endtime="20201029 12:47:33.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:33.341" level="INFO">${RESULT} = [{'diff': 5.05140000000015e-05}, {'diff': 5.088899999999841e-05}, {'diff': 5.009699999999895e-05}, {'diff': 5.009700000000242e-05}, {'diff': 5.094500000000016e-05}, {'diff': 5.055600000000021e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:33.337" endtime="20201029 12:47:33.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:33.345" level="INFO">${ACCURACY} = {'diff': [5.05140000000015e-05, 5.088899999999841e-05, 5.009699999999895e-05, 5.009700000000242e-05, 5.094500000000016e-05, 5.055600000000021e-05, 5.094500000000016e-05, 5.012500000000156e-05, 5.09729...</msg>
<status status="PASS" starttime="20201029 12:47:33.341" endtime="20201029 12:47:33.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.349" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 12:47:33.348" endtime="20201029 12:47:33.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.351" level="INFO">VALUE: [5.05140000000015e-05, 5.088899999999841e-05, 5.009699999999895e-05, 5.009700000000242e-05, 5.094500000000016e-05, 5.055600000000021e-05, 5.094500000000016e-05, 5.012500000000156e-05, 5.09729999999993e-05, 5.041700000000052e-05, 5.094500000000016e-05, 5.026400000000125e-05, 5.080500000000099e-05, 5.091700000000102e-05, 5.087499999999884e-05, 5.077700000000185e-05, 5.068100000000034e-05, 5.098599999999939e-05, 5.009700000000242e-05, 5.076399999999828e-05, 5.061099999999902e-05, 5.009700000000242e-05, 5.076399999999828e-05, 5.055600000000021e-05, 5.094500000000016e-05, 5.026400000000125e-05, 5.026400000000125e-05, 5.027800000000082e-05, 5.061100000000249e-05, 5.044499999999966e-05, 5.012500000000156e-05, 5.027800000000082e-05, 5.029100000000092e-05, 5.011100000000199e-05, 5.008299999999938e-05, 5.077699999999838e-05, 5.061099999999902e-05, 5.029200000000039e-05, 5.094400000000068e-05, 5.045799999999975e-05, 5.008299999999938e-05, 5.006899999999981e-05, 5.006999999999928e-05, 5.061099999999902e-05, 5.040300000000095e-05, 5.027800000000082e-05, 5.095899999999973e-05, 5.055599999999674e-05, 5.011100000000199e-05, 5.094500000000016e-05]</msg>
<status status="PASS" starttime="20201029 12:47:33.350" endtime="20201029 12:47:33.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.345" endtime="20201029 12:47:33.353"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:33.357" endtime="20201029 12:47:33.376"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.356" endtime="20201029 12:47:33.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.355" endtime="20201029 12:47:33.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.993" endtime="20201029 12:47:33.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.992" endtime="20201029 12:47:33.378"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.386" endtime="20201029 12:47:33.403"></status>
</kw>
<msg timestamp="20201029 12:47:33.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:33.385" endtime="20201029 12:47:33.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:33.405" endtime="20201029 12:47:33.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.407" endtime="20201029 12:47:33.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.382" endtime="20201029 12:47:33.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.380" endtime="20201029 12:47:33.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.416" endtime="20201029 12:47:33.701"></status>
</kw>
<msg timestamp="20201029 12:47:33.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02186225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021913583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:33.415" endtime="20201029 12:47:33.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02186225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021913583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:33.705" endtime="20201029 12:47:33.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.713" endtime="20201029 12:47:33.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.412" endtime="20201029 12:47:33.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.410" endtime="20201029 12:47:33.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:33.720" level="INFO">${RESULT} = [{'diff': 5.133300000000063e-05}, {'diff': 5.108299999999691e-05}, {'diff': 5.145800000000075e-05}, {'diff': 5.159700000000045e-05}, {'diff': 5.111099999999952e-05}, {'diff': 5.161100000000002e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:33.717" endtime="20201029 12:47:33.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:33.727" level="INFO">${ACCURACY} = {'diff': [5.133300000000063e-05, 5.108299999999691e-05, 5.145800000000075e-05, 5.159700000000045e-05, 5.111099999999952e-05, 5.161100000000002e-05, 5.159700000000045e-05, 5.173600000000014e-05, 5.1458...</msg>
<status status="PASS" starttime="20201029 12:47:33.721" endtime="20201029 12:47:33.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.733" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 12:47:33.731" endtime="20201029 12:47:33.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.737" level="INFO">VALUE: [5.133300000000063e-05, 5.108299999999691e-05, 5.145800000000075e-05, 5.159700000000045e-05, 5.111099999999952e-05, 5.161100000000002e-05, 5.159700000000045e-05, 5.173600000000014e-05, 5.145800000000075e-05, 5.159700000000045e-05, 5.194500000000116e-05, 5.158300000000088e-05, 5.179200000000189e-05, 5.159700000000045e-05, 5.172300000000005e-05, 5.201399999999953e-05, 5.112499999999909e-05, 5.177799999999885e-05, 5.127699999999888e-05, 5.1429999999998144e-05, 5.145800000000075e-05, 5.179100000000242e-05, 5.144400000000118e-05, 5.112499999999909e-05, 5.126399999999878e-05, 5.176399999999928e-05, 5.140300000000195e-05, 5.124999999999921e-05, 5.194500000000116e-05, 5.111099999999952e-05, 5.143100000000109e-05, 5.194500000000116e-05, 5.1137999999999184e-05, 5.144500000000066e-05, 5.144499999999719e-05, 5.112499999999909e-05, 5.161100000000002e-05, 5.136099999999977e-05, 5.161100000000002e-05, 5.177799999999885e-05, 5.159700000000045e-05, 5.109699999999995e-05, 5.129200000000139e-05, 5.126400000000225e-05, 5.161099999999655e-05, 5.138899999999891e-05, 5.161100000000002e-05, 5.145900000000023e-05, 5.1943999999998214e-05, 5.172300000000005e-05]</msg>
<status status="PASS" starttime="20201029 12:47:33.735" endtime="20201029 12:47:33.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.728" endtime="20201029 12:47:33.739"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:33.744" endtime="20201029 12:47:33.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.742" endtime="20201029 12:47:33.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.740" endtime="20201029 12:47:33.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.379" endtime="20201029 12:47:33.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.378" endtime="20201029 12:47:33.765"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.774" endtime="20201029 12:47:33.791"></status>
</kw>
<msg timestamp="20201029 12:47:33.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:33.772" endtime="20201029 12:47:33.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:33.792" endtime="20201029 12:47:33.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.795" endtime="20201029 12:47:33.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.769" endtime="20201029 12:47:33.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.767" endtime="20201029 12:47:33.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.804" endtime="20201029 12:47:34.091"></status>
</kw>
<msg timestamp="20201029 12:47:34.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022257264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022309792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:33.802" endtime="20201029 12:47:34.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022257264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022309792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:34.096" endtime="20201029 12:47:34.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.104" endtime="20201029 12:47:34.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.800" endtime="20201029 12:47:34.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.798" endtime="20201029 12:47:34.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:34.110" level="INFO">${RESULT} = [{'diff': 5.25279999999996e-05}, {'diff': 5.208399999999738e-05}, {'diff': 5.209800000000042e-05}, {'diff': 5.262500000000059e-05}, {'diff': 5.273700000000062e-05}, {'diff': 5.294499999999869e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:34.107" endtime="20201029 12:47:34.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:34.114" level="INFO">${ACCURACY} = {'diff': [5.25279999999996e-05, 5.208399999999738e-05, 5.209800000000042e-05, 5.262500000000059e-05, 5.273700000000062e-05, 5.294499999999869e-05, 5.2929999999999644e-05, 5.259699999999798e-05, 5.2276...</msg>
<status status="PASS" starttime="20201029 12:47:34.111" endtime="20201029 12:47:34.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.119" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 12:47:34.118" endtime="20201029 12:47:34.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.121" level="INFO">VALUE: [5.25279999999996e-05, 5.208399999999738e-05, 5.209800000000042e-05, 5.262500000000059e-05, 5.273700000000062e-05, 5.294499999999869e-05, 5.2929999999999644e-05, 5.259699999999798e-05, 5.227699999999988e-05, 5.256900000000231e-05, 5.227799999999935e-05, 5.2943999999999214e-05, 5.279199999999942e-05, 5.211100000000052e-05, 5.2721999999998104e-05, 5.211100000000052e-05, 5.209699999999748e-05, 5.277799999999985e-05, 5.243099999999862e-05, 5.277799999999985e-05, 5.226399999999978e-05, 5.244499999999819e-05, 5.277699999999691e-05, 5.276300000000081e-05, 5.259700000000145e-05, 5.226399999999978e-05, 5.256900000000231e-05, 5.298600000000139e-05, 5.227799999999935e-05, 5.277799999999985e-05, 5.229199999999892e-05, 5.209700000000095e-05, 5.259700000000145e-05, 5.209699999999748e-05, 5.293099999999912e-05, 5.258400000000135e-05, 5.275000000000071e-05, 5.276400000000028e-05, 5.226399999999978e-05, 5.211199999999999e-05, 5.227699999999988e-05, 5.261100000000102e-05, 5.211100000000052e-05, 5.2443999999998714e-05, 5.227799999999935e-05, 5.244400000000218e-05, 5.261100000000102e-05, 5.245800000000175e-05, 5.261100000000102e-05, 5.2443999999998714e-05]</msg>
<status status="PASS" starttime="20201029 12:47:34.120" endtime="20201029 12:47:34.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.115" endtime="20201029 12:47:34.123"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:34.126" endtime="20201029 12:47:34.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.125" endtime="20201029 12:47:34.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.124" endtime="20201029 12:47:34.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.766" endtime="20201029 12:47:34.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.765" endtime="20201029 12:47:34.147"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.155" endtime="20201029 12:47:34.175"></status>
</kw>
<msg timestamp="20201029 12:47:34.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.154" endtime="20201029 12:47:34.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.176" endtime="20201029 12:47:34.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.179" endtime="20201029 12:47:34.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.151" endtime="20201029 12:47:34.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.149" endtime="20201029 12:47:34.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.188" endtime="20201029 12:47:34.474"></status>
</kw>
<msg timestamp="20201029 12:47:34.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023044639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023098264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:34.186" endtime="20201029 12:47:34.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023044639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023098264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:34.478" endtime="20201029 12:47:34.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.486" endtime="20201029 12:47:34.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.183" endtime="20201029 12:47:34.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.182" endtime="20201029 12:47:34.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:34.493" level="INFO">${RESULT} = [{'diff': 5.362500000000159e-05}, {'diff': 5.327800000000035e-05}, {'diff': 5.309699999999848e-05}, {'diff': 5.329199999999992e-05}, {'diff': 5.343099999999962e-05}, {'diff': 5.311099999999805e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:34.490" endtime="20201029 12:47:34.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:34.497" level="INFO">${ACCURACY} = {'diff': [5.362500000000159e-05, 5.327800000000035e-05, 5.309699999999848e-05, 5.329199999999992e-05, 5.343099999999962e-05, 5.311099999999805e-05, 5.311200000000099e-05, 5.359799999999845e-05, 5.3819...</msg>
<status status="PASS" starttime="20201029 12:47:34.494" endtime="20201029 12:47:34.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.501" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 12:47:34.500" endtime="20201029 12:47:34.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.504" level="INFO">VALUE: [5.362500000000159e-05, 5.327800000000035e-05, 5.309699999999848e-05, 5.329199999999992e-05, 5.343099999999962e-05, 5.311099999999805e-05, 5.311200000000099e-05, 5.359799999999845e-05, 5.381900000000009e-05, 5.345800000000275e-05, 5.3430000000000144e-05, 5.327700000000088e-05, 5.359700000000245e-05, 5.3443999999999714e-05, 5.327800000000035e-05, 5.377800000000085e-05, 5.3443999999999714e-05, 5.359699999999898e-05, 5.394499999999969e-05, 5.39730000000023e-05, 5.309699999999848e-05, 5.361100000000202e-05, 5.341700000000005e-05, 5.325000000000121e-05, 5.394499999999969e-05, 5.380599999999999e-05, 5.36670000000003e-05, 5.3430000000000144e-05, 5.3443999999999714e-05, 5.3944000000000214e-05, 5.3930000000000644e-05, 5.376400000000128e-05, 5.3443999999999714e-05, 5.361099999999855e-05, 5.3235999999998174e-05, 5.39730000000023e-05, 5.309700000000195e-05, 5.361099999999855e-05, 5.394499999999969e-05, 5.394499999999969e-05, 5.376400000000128e-05, 5.359800000000192e-05, 5.393100000000012e-05, 5.323600000000164e-05, 5.3430000000000144e-05, 5.395800000000325e-05, 5.372200000000257e-05, 5.359700000000245e-05, 5.376400000000128e-05, 5.312499999999762e-05]</msg>
<status status="PASS" starttime="20201029 12:47:34.502" endtime="20201029 12:47:34.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.498" endtime="20201029 12:47:34.506"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:34.510" endtime="20201029 12:47:34.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.508" endtime="20201029 12:47:34.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.507" endtime="20201029 12:47:34.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.148" endtime="20201029 12:47:34.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.147" endtime="20201029 12:47:34.530"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.539" endtime="20201029 12:47:34.556"></status>
</kw>
<msg timestamp="20201029 12:47:34.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.537" endtime="20201029 12:47:34.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.557" endtime="20201029 12:47:34.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.560" endtime="20201029 12:47:34.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.535" endtime="20201029 12:47:34.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.533" endtime="20201029 12:47:34.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.569" endtime="20201029 12:47:34.853"></status>
</kw>
<msg timestamp="20201029 12:47:34.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021903514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021958181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:34.567" endtime="20201029 12:47:34.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021903514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021958181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:34.858" endtime="20201029 12:47:34.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.866" endtime="20201029 12:47:34.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.565" endtime="20201029 12:47:34.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.563" endtime="20201029 12:47:34.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:34.872" level="INFO">${RESULT} = [{'diff': 5.46670000000013e-05}, {'diff': 5.411099999999905e-05}, {'diff': 5.411100000000252e-05}, {'diff': 5.426400000000178e-05}, {'diff': 5.477800000000185e-05}, {'diff': 5.4221999999999604e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:34.869" endtime="20201029 12:47:34.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:34.877" level="INFO">${ACCURACY} = {'diff': [5.46670000000013e-05, 5.411099999999905e-05, 5.411100000000252e-05, 5.426400000000178e-05, 5.477800000000185e-05, 5.4221999999999604e-05, 5.4943999999997745e-05, 5.411099999999905e-05, 5.437...</msg>
<status status="PASS" starttime="20201029 12:47:34.873" endtime="20201029 12:47:34.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.882" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 12:47:34.881" endtime="20201029 12:47:34.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.884" level="INFO">VALUE: [5.46670000000013e-05, 5.411099999999905e-05, 5.411100000000252e-05, 5.426400000000178e-05, 5.477800000000185e-05, 5.4221999999999604e-05, 5.4943999999997745e-05, 5.411099999999905e-05, 5.437499999999887e-05, 5.480599999999752e-05, 5.412499999999862e-05, 5.411100000000252e-05, 5.4208000000000034e-05, 5.463899999999869e-05, 5.429200000000092e-05, 5.462500000000259e-05, 5.4763999999998814e-05, 5.461199999999902e-05, 5.409799999999895e-05, 5.437499999999887e-05, 5.4930000000001644e-05, 5.4944000000001214e-05, 5.427800000000135e-05, 5.4277999999997883e-05, 5.432000000000006e-05, 5.4444000000000714e-05, 5.4957999999997315e-05, 5.4943999999997745e-05, 5.462499999999912e-05, 5.412499999999862e-05, 5.412499999999862e-05, 5.470900000000001e-05, 5.477800000000185e-05, 5.445899999999976e-05, 5.494500000000069e-05, 5.4929999999998175e-05, 5.462500000000259e-05, 5.41670000000008e-05, 5.426400000000178e-05, 5.459699999999998e-05, 5.4429999999997675e-05, 5.461099999999955e-05, 5.479200000000142e-05, 5.480600000000099e-05, 5.411099999999905e-05, 5.457000000000031e-05, 5.494500000000069e-05, 5.411099999999905e-05, 5.444500000000019e-05, 5.444500000000019e-05]</msg>
<status status="PASS" starttime="20201029 12:47:34.883" endtime="20201029 12:47:34.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.878" endtime="20201029 12:47:34.885"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:34.889" endtime="20201029 12:47:34.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.887" endtime="20201029 12:47:34.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.886" endtime="20201029 12:47:34.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.531" endtime="20201029 12:47:34.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.531" endtime="20201029 12:47:34.909"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.918" endtime="20201029 12:47:34.935"></status>
</kw>
<msg timestamp="20201029 12:47:34.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.917" endtime="20201029 12:47:34.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.937" endtime="20201029 12:47:34.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.939" endtime="20201029 12:47:34.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.914" endtime="20201029 12:47:34.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.912" endtime="20201029 12:47:34.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.949" endtime="20201029 12:47:35.237"></status>
</kw>
<msg timestamp="20201029 12:47:35.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022151097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022206597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:34.947" endtime="20201029 12:47:35.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022151097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022206597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:35.241" endtime="20201029 12:47:35.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.249" endtime="20201029 12:47:35.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.945" endtime="20201029 12:47:35.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.943" endtime="20201029 12:47:35.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:35.256" level="INFO">${RESULT} = [{'diff': 5.5499999999999994e-05}, {'diff': 5.559700000000098e-05}, {'diff': 5.5929999999999175e-05}, {'diff': 5.5443999999998245e-05}, {'diff': 5.5777999999999384e-05}, {'diff': 5.594499999999822e-05...</msg>
<status status="PASS" starttime="20201029 12:47:35.253" endtime="20201029 12:47:35.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:35.260" level="INFO">${ACCURACY} = {'diff': [5.5499999999999994e-05, 5.559700000000098e-05, 5.5929999999999175e-05, 5.5443999999998245e-05, 5.5777999999999384e-05, 5.594499999999822e-05, 5.504200000000167e-05, 5.544500000000119e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:47:35.257" endtime="20201029 12:47:35.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.264" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 12:47:35.263" endtime="20201029 12:47:35.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.267" level="INFO">VALUE: [5.5499999999999994e-05, 5.559700000000098e-05, 5.5929999999999175e-05, 5.5443999999998245e-05, 5.5777999999999384e-05, 5.594499999999822e-05, 5.504200000000167e-05, 5.544500000000119e-05, 5.511199999999952e-05, 5.595900000000126e-05, 5.594500000000169e-05, 5.561200000000002e-05, 5.533400000000063e-05, 5.5387999999999965e-05, 5.527699999999941e-05, 5.562500000000012e-05, 5.511100000000005e-05, 5.561100000000055e-05, 5.561099999999708e-05, 5.5429999999998675e-05, 5.5458000000001284e-05, 5.5263999999999314e-05, 5.544500000000119e-05, 5.588899999999994e-05, 5.5763999999999814e-05, 5.509799999999995e-05, 5.588899999999994e-05, 5.5777999999999384e-05, 5.579200000000242e-05, 5.5944000000002214e-05, 5.526299999999984e-05, 5.5263999999999314e-05, 5.577800000000285e-05, 5.5208000000001034e-05, 5.5957999999998315e-05, 5.586099999999733e-05, 5.509700000000048e-05, 5.5291999999998453e-05, 5.545900000000076e-05, 5.509700000000048e-05, 5.594500000000169e-05, 5.5541999999998704e-05, 5.511100000000005e-05, 5.5458000000001284e-05, 5.5777999999999384e-05, 5.5888000000000465e-05, 5.5444000000001714e-05, 5.509700000000048e-05, 5.5443999999998245e-05, 5.5249999999999744e-05]</msg>
<status status="PASS" starttime="20201029 12:47:35.266" endtime="20201029 12:47:35.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.261" endtime="20201029 12:47:35.268"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:35.272" endtime="20201029 12:47:35.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.270" endtime="20201029 12:47:35.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.269" endtime="20201029 12:47:35.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.910" endtime="20201029 12:47:35.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.910" endtime="20201029 12:47:35.293"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.301" endtime="20201029 12:47:35.319"></status>
</kw>
<msg timestamp="20201029 12:47:35.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:35.299" endtime="20201029 12:47:35.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:35.321" endtime="20201029 12:47:35.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.323" endtime="20201029 12:47:35.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.297" endtime="20201029 12:47:35.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.295" endtime="20201029 12:47:35.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.332" endtime="20201029 12:47:35.617"></status>
</kw>
<msg timestamp="20201029 12:47:35.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022781931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022838611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:35.330" endtime="20201029 12:47:35.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022781931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022838611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:35.621" endtime="20201029 12:47:35.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.629" endtime="20201029 12:47:35.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.328" endtime="20201029 12:47:35.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.326" endtime="20201029 12:47:35.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:35.636" level="INFO">${RESULT} = [{'diff': 5.6680000000003394e-05}, {'diff': 5.652700000000066e-05}, {'diff': 5.694499999999922e-05}, {'diff': 5.6805999999999524e-05}, {'diff': 5.6486000000001424e-05}, {'diff': 5.644499999999872e-05}...</msg>
<status status="PASS" starttime="20201029 12:47:35.633" endtime="20201029 12:47:35.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:35.640" level="INFO">${ACCURACY} = {'diff': [5.6680000000003394e-05, 5.652700000000066e-05, 5.694499999999922e-05, 5.6805999999999524e-05, 5.6486000000001424e-05, 5.644499999999872e-05, 5.6764000000000814e-05, 5.694500000000269e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:47:35.637" endtime="20201029 12:47:35.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.645" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 12:47:35.644" endtime="20201029 12:47:35.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.647" level="INFO">VALUE: [5.6680000000003394e-05, 5.652700000000066e-05, 5.694499999999922e-05, 5.6805999999999524e-05, 5.6486000000001424e-05, 5.644499999999872e-05, 5.6764000000000814e-05, 5.694500000000269e-05, 5.694500000000269e-05, 5.658299999999894e-05, 5.6763999999997344e-05, 5.6943999999999745e-05, 5.677700000000091e-05, 5.661099999999808e-05, 5.679099999999701e-05, 5.615299999999976e-05, 5.6930000000000175e-05, 5.662499999999765e-05, 5.633400000000163e-05, 5.6791999999999954e-05, 5.638899999999697e-05, 5.611099999999758e-05, 5.612500000000062e-05, 5.6264000000000314e-05, 5.644500000000219e-05, 5.658399999999841e-05, 5.6957999999999315e-05, 5.609800000000095e-05, 5.612500000000062e-05, 5.611100000000105e-05, 5.611100000000105e-05, 5.659699999999851e-05, 5.609700000000148e-05, 5.609699999999801e-05, 5.666699999999983e-05, 5.612500000000062e-05, 5.6443999999999245e-05, 5.662500000000112e-05, 5.613899999999672e-05, 5.6486000000001424e-05, 5.645899999999829e-05, 5.6277999999999884e-05, 5.677700000000091e-05, 5.611200000000052e-05, 5.630499999999955e-05, 5.6444000000002714e-05, 5.662500000000112e-05, 5.662500000000112e-05, 5.6957999999999315e-05, 5.659699999999851e-05]</msg>
<status status="PASS" starttime="20201029 12:47:35.646" endtime="20201029 12:47:35.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.641" endtime="20201029 12:47:35.649"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:35.653" endtime="20201029 12:47:35.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.651" endtime="20201029 12:47:35.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.650" endtime="20201029 12:47:35.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.293" endtime="20201029 12:47:35.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.293" endtime="20201029 12:47:35.673"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.682" endtime="20201029 12:47:35.699"></status>
</kw>
<msg timestamp="20201029 12:47:35.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:35.680" endtime="20201029 12:47:35.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:35.701" endtime="20201029 12:47:35.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.703" endtime="20201029 12:47:35.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.678" endtime="20201029 12:47:35.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.676" endtime="20201029 12:47:35.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.712" endtime="20201029 12:47:35.997"></status>
</kw>
<msg timestamp="20201029 12:47:36.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021958917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022016903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:35.711" endtime="20201029 12:47:36.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021958917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022016903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:36.002" endtime="20201029 12:47:36.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.010" endtime="20201029 12:47:36.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.708" endtime="20201029 12:47:36.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.706" endtime="20201029 12:47:36.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:36.016" level="INFO">${RESULT} = [{'diff': 5.7985999999999455e-05}, {'diff': 5.744499999999972e-05}, {'diff': 5.711099999999858e-05}, {'diff': 5.7777999999997914e-05}, {'diff': 5.726299999999837e-05}, {'diff': 5.7444000000000245e-05}...</msg>
<status status="PASS" starttime="20201029 12:47:36.013" endtime="20201029 12:47:36.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:36.021" level="INFO">${ACCURACY} = {'diff': [5.7985999999999455e-05, 5.744499999999972e-05, 5.711099999999858e-05, 5.7777999999997914e-05, 5.726299999999837e-05, 5.7444000000000245e-05, 5.7944000000000745e-05, 5.727699999999794e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:47:36.017" endtime="20201029 12:47:36.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.026" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 12:47:36.025" endtime="20201029 12:47:36.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.028" level="INFO">VALUE: [5.7985999999999455e-05, 5.744499999999972e-05, 5.711099999999858e-05, 5.7777999999997914e-05, 5.726299999999837e-05, 5.7444000000000245e-05, 5.7944000000000745e-05, 5.727699999999794e-05, 5.740299999999754e-05, 5.7958000000000315e-05, 5.7430000000000675e-05, 5.7292000000000454e-05, 5.7694000000000495e-05, 5.7263999999997844e-05, 5.7778000000001384e-05, 5.7777999999997914e-05, 5.7278000000000884e-05, 5.7292000000000454e-05, 5.794500000000022e-05, 5.744499999999972e-05, 5.776299999999887e-05, 5.761099999999908e-05, 5.7764000000001814e-05, 5.711100000000205e-05, 5.7764000000001814e-05, 5.7278000000000884e-05, 5.711100000000205e-05, 5.761099999999908e-05, 5.759699999999951e-05, 5.7249999999998274e-05, 5.7264000000001314e-05, 5.7777999999997914e-05, 5.7249999999998274e-05, 5.7778000000001384e-05, 5.743100000000015e-05, 5.772299999999911e-05, 5.791699999999761e-05, 5.777699999999844e-05, 5.729100000000098e-05, 5.7514000000001564e-05, 5.7457999999999815e-05, 5.712499999999815e-05, 5.711100000000205e-05, 5.7778000000001384e-05, 5.793100000000065e-05, 5.761099999999908e-05, 5.7792000000000954e-05, 5.748699999999843e-05, 5.7263999999997844e-05, 5.793099999999718e-05]</msg>
<status status="PASS" starttime="20201029 12:47:36.027" endtime="20201029 12:47:36.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.022" endtime="20201029 12:47:36.029"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:36.033" endtime="20201029 12:47:36.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.032" endtime="20201029 12:47:36.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.030" endtime="20201029 12:47:36.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.674" endtime="20201029 12:47:36.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.674" endtime="20201029 12:47:36.054"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.062" endtime="20201029 12:47:36.080"></status>
</kw>
<msg timestamp="20201029 12:47:36.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:36.061" endtime="20201029 12:47:36.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:36.081" endtime="20201029 12:47:36.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.084" endtime="20201029 12:47:36.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.058" endtime="20201029 12:47:36.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.056" endtime="20201029 12:47:36.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.093" endtime="20201029 12:47:36.380"></status>
</kw>
<msg timestamp="20201029 12:47:36.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022181542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022239778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:36.091" endtime="20201029 12:47:36.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022181542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022239778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:36.384" endtime="20201029 12:47:36.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.392" endtime="20201029 12:47:36.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.089" endtime="20201029 12:47:36.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.087" endtime="20201029 12:47:36.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:36.399" level="INFO">${RESULT} = [{'diff': 5.8236000000003174e-05}, {'diff': 5.8277999999998414e-05}, {'diff': 5.8277999999998414e-05}, {'diff': 5.861100000000008e-05}, {'diff': 5.866699999999836e-05}, {'diff': 5.884700000000076e-05}...</msg>
<status status="PASS" starttime="20201029 12:47:36.396" endtime="20201029 12:47:36.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:36.403" level="INFO">${ACCURACY} = {'diff': [5.8236000000003174e-05, 5.8277999999998414e-05, 5.8277999999998414e-05, 5.861100000000008e-05, 5.866699999999836e-05, 5.884700000000076e-05, 5.884700000000076e-05, 5.8777999999998914e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:47:36.400" endtime="20201029 12:47:36.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.407" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 12:47:36.406" endtime="20201029 12:47:36.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.410" level="INFO">VALUE: [5.8236000000003174e-05, 5.8277999999998414e-05, 5.8277999999998414e-05, 5.861100000000008e-05, 5.866699999999836e-05, 5.884700000000076e-05, 5.884700000000076e-05, 5.8777999999998914e-05, 5.8749999999999775e-05, 5.8471999999996915e-05, 5.8777999999998914e-05, 5.811200000000252e-05, 5.838899999999897e-05, 5.806900000000087e-05, 5.858299999999747e-05, 5.811099999999958e-05, 5.8778000000002384e-05, 5.811099999999958e-05, 5.858300000000094e-05, 5.8277999999998414e-05, 5.8944000000001745e-05, 5.8943999999998276e-05, 5.8749999999999775e-05, 5.844500000000072e-05, 5.881899999999815e-05, 5.841699999999811e-05, 5.8249999999999275e-05, 5.879100000000248e-05, 5.8485999999999955e-05, 5.811099999999958e-05, 5.8444000000001245e-05, 5.8444000000001245e-05, 5.8901999999999566e-05, 5.861100000000008e-05, 5.88749999999999e-05, 5.8777999999998914e-05, 5.893100000000165e-05, 5.859700000000051e-05, 5.813900000000219e-05, 5.8777999999998914e-05, 5.8736000000000205e-05, 5.861100000000008e-05, 5.8777999999998914e-05, 5.8721999999997165e-05, 5.884700000000076e-05, 5.833300000000069e-05, 5.8944000000001745e-05, 5.8444000000001245e-05, 5.808300000000044e-05, 5.8458000000000815e-05]</msg>
<status status="PASS" starttime="20201029 12:47:36.408" endtime="20201029 12:47:36.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.404" endtime="20201029 12:47:36.411"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:36.415" endtime="20201029 12:47:36.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.413" endtime="20201029 12:47:36.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.412" endtime="20201029 12:47:36.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.055" endtime="20201029 12:47:36.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.054" endtime="20201029 12:47:36.435"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.444" endtime="20201029 12:47:36.465"></status>
</kw>
<msg timestamp="20201029 12:47:36.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:36.442" endtime="20201029 12:47:36.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:36.466" endtime="20201029 12:47:36.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.469" endtime="20201029 12:47:36.470"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.440" endtime="20201029 12:47:36.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.438" endtime="20201029 12:47:36.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.478" endtime="20201029 12:47:36.763"></status>
</kw>
<msg timestamp="20201029 12:47:36.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025296306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025356319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:36.477" endtime="20201029 12:47:36.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025296306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025356319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:36.767" endtime="20201029 12:47:36.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.775" endtime="20201029 12:47:36.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.474" endtime="20201029 12:47:36.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.472" endtime="20201029 12:47:36.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:36.782" level="INFO">${RESULT} = [{'diff': 6.001299999999765e-05}, {'diff': 5.9943999999999276e-05}, {'diff': 5.9943999999999276e-05}, {'diff': 5.912500000000015e-05}, {'diff': 5.9443999999998776e-05}, {'diff': 5.968099999999893e-05}...</msg>
<status status="PASS" starttime="20201029 12:47:36.779" endtime="20201029 12:47:36.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:36.786" level="INFO">${ACCURACY} = {'diff': [6.001299999999765e-05, 5.9943999999999276e-05, 5.9943999999999276e-05, 5.912500000000015e-05, 5.9443999999998776e-05, 5.968099999999893e-05, 5.9443999999998776e-05, 5.9277999999999414e-05, 5...</msg>
<status status="PASS" starttime="20201029 12:47:36.783" endtime="20201029 12:47:36.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.790" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 12:47:36.789" endtime="20201029 12:47:36.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.793" level="INFO">VALUE: [6.001299999999765e-05, 5.9943999999999276e-05, 5.9943999999999276e-05, 5.912500000000015e-05, 5.9443999999998776e-05, 5.968099999999893e-05, 5.9443999999998776e-05, 5.9277999999999414e-05, 5.9263999999999845e-05, 5.9805999999999054e-05, 5.9764000000000345e-05, 5.9764000000000345e-05, 5.912500000000015e-05, 5.9236000000000705e-05, 5.9777999999999915e-05, 5.918099999999843e-05, 5.981899999999915e-05, 5.979100000000001e-05, 5.9263999999999845e-05, 5.9943999999999276e-05, 5.9943999999999276e-05, 5.9278000000002884e-05, 5.9291999999998984e-05, 5.956900000000237e-05, 5.9221999999997665e-05, 5.994499999999875e-05, 5.9514000000000095e-05, 5.9179999999998956e-05, 5.962500000000065e-05, 5.945900000000129e-05, 5.9098000000000483e-05, 5.9598000000000984e-05, 5.98750000000009e-05, 5.9722000000001635e-05, 5.940299999999954e-05, 5.961100000000108e-05, 5.9277999999999414e-05, 5.9236000000000705e-05, 5.9929999999999706e-05, 5.9444000000002245e-05, 5.9777999999999915e-05, 5.911099999999711e-05, 5.9291999999998984e-05, 5.9263999999999845e-05, 5.9098000000000483e-05, 5.938899999999997e-05, 5.9472000000001385e-05, 5.979100000000001e-05, 5.927699999999994e-05, 5.909700000000101e-05]</msg>
<status status="PASS" starttime="20201029 12:47:36.791" endtime="20201029 12:47:36.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.787" endtime="20201029 12:47:36.795"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:36.799" endtime="20201029 12:47:36.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.797" endtime="20201029 12:47:36.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.796" endtime="20201029 12:47:36.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.436" endtime="20201029 12:47:36.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.436" endtime="20201029 12:47:36.819"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.828" endtime="20201029 12:47:36.845"></status>
</kw>
<msg timestamp="20201029 12:47:36.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:36.826" endtime="20201029 12:47:36.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:36.847" endtime="20201029 12:47:36.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.849" endtime="20201029 12:47:36.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.824" endtime="20201029 12:47:36.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.821" endtime="20201029 12:47:36.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.858" endtime="20201029 12:47:37.144"></status>
</kw>
<msg timestamp="20201029 12:47:37.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021883083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021944056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:36.857" endtime="20201029 12:47:37.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021883083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021944056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:37.148" endtime="20201029 12:47:37.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.156" endtime="20201029 12:47:37.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.854" endtime="20201029 12:47:37.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.852" endtime="20201029 12:47:37.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:37.163" level="INFO">${RESULT} = [{'diff': 6.097299999999889e-05}, {'diff': 6.061099999999861e-05}, {'diff': 6.077699999999797e-05}, {'diff': 6.059700000000251e-05}, {'diff': 6.012499999999768e-05}, {'diff': 6.061100000000208e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:37.160" endtime="20201029 12:47:37.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:37.168" level="INFO">${ACCURACY} = {'diff': [6.097299999999889e-05, 6.061099999999861e-05, 6.077699999999797e-05, 6.059700000000251e-05, 6.012499999999768e-05, 6.061100000000208e-05, 6.061100000000208e-05, 6.012500000000115e-05, 6.0125...</msg>
<status status="PASS" starttime="20201029 12:47:37.164" endtime="20201029 12:47:37.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.172" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 12:47:37.171" endtime="20201029 12:47:37.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.175" level="INFO">VALUE: [6.097299999999889e-05, 6.061099999999861e-05, 6.077699999999797e-05, 6.059700000000251e-05, 6.012499999999768e-05, 6.061100000000208e-05, 6.061100000000208e-05, 6.012500000000115e-05, 6.012500000000115e-05, 6.061099999999861e-05, 6.0764000000001345e-05, 6.011099999999811e-05, 6.0264000000000845e-05, 6.011100000000158e-05, 6.094499999999975e-05, 6.0278000000000415e-05, 6.0457999999999346e-05, 6.062499999999818e-05, 6.0443999999999776e-05, 6.012499999999768e-05, 6.011100000000158e-05, 6.0957999999999846e-05, 6.061100000000208e-05, 6.0957999999999846e-05, 6.05689999999999e-05, 6.093100000000018e-05, 6.044500000000272e-05, 6.012499999999768e-05, 6.011100000000158e-05, 6.062500000000165e-05, 6.0083999999998444e-05, 6.043099999999968e-05, 6.0457999999999346e-05, 6.0957999999999846e-05, 6.077700000000144e-05, 6.0457999999999346e-05, 6.0930000000000706e-05, 6.0792000000000485e-05, 6.0819999999999624e-05, 6.0443999999999776e-05, 6.012500000000115e-05, 6.047300000000186e-05, 6.0263999999997375e-05, 6.043099999999968e-05, 6.0278000000000415e-05, 6.0611999999998084e-05, 6.0472000000002385e-05, 6.0944000000000276e-05, 6.0430000000000206e-05, 6.08750000000019e-05]</msg>
<status status="PASS" starttime="20201029 12:47:37.174" endtime="20201029 12:47:37.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.169" endtime="20201029 12:47:37.176"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:37.180" endtime="20201029 12:47:37.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.178" endtime="20201029 12:47:37.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.177" endtime="20201029 12:47:37.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.820" endtime="20201029 12:47:37.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.819" endtime="20201029 12:47:37.200"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.209" endtime="20201029 12:47:37.226"></status>
</kw>
<msg timestamp="20201029 12:47:37.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:37.207" endtime="20201029 12:47:37.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:37.228" endtime="20201029 12:47:37.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.230" endtime="20201029 12:47:37.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.205" endtime="20201029 12:47:37.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.203" endtime="20201029 12:47:37.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.239" endtime="20201029 12:47:37.526"></status>
</kw>
<msg timestamp="20201029 12:47:37.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02204125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022102931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:37.238" endtime="20201029 12:47:37.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02204125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022102931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:37.531" endtime="20201029 12:47:37.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.539" endtime="20201029 12:47:37.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.235" endtime="20201029 12:47:37.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.234" endtime="20201029 12:47:37.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:37.545" level="INFO">${RESULT} = [{'diff': 6.168100000000093e-05}, {'diff': 6.176399999999888e-05}, {'diff': 6.161099999999961e-05}, {'diff': 6.179099999999854e-05}, {'diff': 6.12499999999988e-05}, {'diff': 6.14439999999973e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:37.542" endtime="20201029 12:47:37.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:37.549" level="INFO">${ACCURACY} = {'diff': [6.168100000000093e-05, 6.176399999999888e-05, 6.161099999999961e-05, 6.179099999999854e-05, 6.12499999999988e-05, 6.14439999999973e-05, 6.179200000000148e-05, 6.129200000000098e-05, 6.158300...</msg>
<status status="PASS" starttime="20201029 12:47:37.546" endtime="20201029 12:47:37.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.554" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 12:47:37.553" endtime="20201029 12:47:37.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.556" level="INFO">VALUE: [6.168100000000093e-05, 6.176399999999888e-05, 6.161099999999961e-05, 6.179099999999854e-05, 6.12499999999988e-05, 6.14439999999973e-05, 6.179200000000148e-05, 6.129200000000098e-05, 6.158300000000047e-05, 6.161099999999961e-05, 6.126399999999838e-05, 6.194500000000075e-05, 6.161099999999961e-05, 6.190299999999857e-05, 6.1888999999999e-05, 6.194500000000075e-05, 6.126399999999838e-05, 6.111099999999911e-05, 6.14300000000012e-05, 6.129200000000098e-05, 6.19439999999978e-05, 6.112499999999868e-05, 6.111099999999911e-05, 6.192999999999824e-05, 6.111099999999911e-05, 6.177800000000191e-05, 6.144500000000025e-05, 6.144500000000025e-05, 6.144500000000025e-05, 6.112500000000215e-05, 6.127800000000141e-05, 6.161199999999908e-05, 6.145800000000035e-05, 6.127700000000194e-05, 6.179100000000201e-05, 6.127799999999795e-05, 6.118100000000043e-05, 6.111100000000258e-05, 6.129200000000098e-05, 6.111100000000258e-05, 6.176399999999888e-05, 6.144500000000025e-05, 6.144500000000025e-05, 6.177799999999845e-05, 6.193099999999771e-05, 6.159799999999951e-05, 6.112499999999868e-05, 6.195800000000085e-05, 6.127699999999847e-05, 6.176399999999888e-05]</msg>
<status status="PASS" starttime="20201029 12:47:37.555" endtime="20201029 12:47:37.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.550" endtime="20201029 12:47:37.564"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:37.567" endtime="20201029 12:47:37.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.566" endtime="20201029 12:47:37.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.565" endtime="20201029 12:47:37.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.201" endtime="20201029 12:47:37.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.201" endtime="20201029 12:47:37.588"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.598" endtime="20201029 12:47:37.618"></status>
</kw>
<msg timestamp="20201029 12:47:37.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:37.597" endtime="20201029 12:47:37.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:37.619" endtime="20201029 12:47:37.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.622" endtime="20201029 12:47:37.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.594" endtime="20201029 12:47:37.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.592" endtime="20201029 12:47:37.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.630" endtime="20201029 12:47:37.915"></status>
</kw>
<msg timestamp="20201029 12:47:37.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02527225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025334444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:37.629" endtime="20201029 12:47:37.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02527225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025334444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:37.920" endtime="20201029 12:47:37.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.928" endtime="20201029 12:47:37.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.626" endtime="20201029 12:47:37.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.625" endtime="20201029 12:47:37.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:37.934" level="INFO">${RESULT} = [{'diff': 6.219400000000153e-05}, {'diff': 6.294500000000175e-05}, {'diff': 6.261100000000061e-05}, {'diff': 6.227699999999947e-05}, {'diff': 6.242999999999874e-05}, {'diff': 6.227799999999895e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:37.931" endtime="20201029 12:47:37.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:37.938" level="INFO">${ACCURACY} = {'diff': [6.219400000000153e-05, 6.294500000000175e-05, 6.261100000000061e-05, 6.227699999999947e-05, 6.242999999999874e-05, 6.227799999999895e-05, 6.241599999999917e-05, 6.292999999999924e-05, 6.2138...</msg>
<status status="PASS" starttime="20201029 12:47:37.935" endtime="20201029 12:47:37.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.943" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 12:47:37.942" endtime="20201029 12:47:37.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.945" level="INFO">VALUE: [6.219400000000153e-05, 6.294500000000175e-05, 6.261100000000061e-05, 6.227699999999947e-05, 6.242999999999874e-05, 6.227799999999895e-05, 6.241599999999917e-05, 6.292999999999924e-05, 6.213899999999925e-05, 6.293100000000218e-05, 6.212499999999968e-05, 6.277799999999945e-05, 6.227799999999895e-05, 6.277799999999945e-05, 6.244500000000125e-05, 6.245799999999788e-05, 6.261100000000061e-05, 6.297200000000142e-05, 6.227699999999947e-05, 6.245800000000135e-05, 6.280500000000258e-05, 6.24439999999983e-05, 6.29439999999988e-05, 6.29439999999988e-05, 6.276399999999988e-05, 6.209700000000054e-05, 6.227800000000241e-05, 6.294500000000175e-05, 6.226399999999938e-05, 6.294500000000175e-05, 6.277799999999945e-05, 6.230499999999861e-05, 6.209700000000054e-05, 6.277699999999997e-05, 6.211099999999664e-05, 6.242999999999874e-05, 6.262500000000018e-05, 6.29439999999988e-05, 6.279199999999902e-05, 6.236100000000036e-05, 6.279199999999902e-05, 6.229200000000198e-05, 6.240300000000254e-05, 6.227799999999895e-05, 6.236100000000036e-05, 6.277799999999945e-05, 6.244499999999778e-05, 6.277699999999997e-05, 6.242999999999874e-05, 6.277699999999997e-05]</msg>
<status status="PASS" starttime="20201029 12:47:37.944" endtime="20201029 12:47:37.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.939" endtime="20201029 12:47:37.947"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:37.951" endtime="20201029 12:47:37.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.950" endtime="20201029 12:47:37.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.948" endtime="20201029 12:47:37.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.590" endtime="20201029 12:47:37.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.589" endtime="20201029 12:47:37.972"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.980" endtime="20201029 12:47:37.998"></status>
</kw>
<msg timestamp="20201029 12:47:37.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:37.979" endtime="20201029 12:47:37.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:37.999" endtime="20201029 12:47:38.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.002" endtime="20201029 12:47:38.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.976" endtime="20201029 12:47:38.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.974" endtime="20201029 12:47:38.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.011" endtime="20201029 12:47:38.297"></status>
</kw>
<msg timestamp="20201029 12:47:38.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022263292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022327111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:38.009" endtime="20201029 12:47:38.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022263292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022327111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:38.301" endtime="20201029 12:47:38.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.309" endtime="20201029 12:47:38.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.007" endtime="20201029 12:47:38.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.005" endtime="20201029 12:47:38.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:38.316" level="INFO">${RESULT} = [{'diff': 6.381899999999968e-05}, {'diff': 6.326400000000038e-05}, {'diff': 6.329199999999952e-05}, {'diff': 6.311099999999764e-05}, {'diff': 6.344499999999878e-05}, {'diff': 6.344499999999878e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:38.313" endtime="20201029 12:47:38.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:38.321" level="INFO">${ACCURACY} = {'diff': [6.381899999999968e-05, 6.326400000000038e-05, 6.329199999999952e-05, 6.311099999999764e-05, 6.344499999999878e-05, 6.344499999999878e-05, 6.362500000000118e-05, 6.362500000000118e-05, 6.3430...</msg>
<status status="PASS" starttime="20201029 12:47:38.317" endtime="20201029 12:47:38.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.325" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 12:47:38.324" endtime="20201029 12:47:38.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.328" level="INFO">VALUE: [6.381899999999968e-05, 6.326400000000038e-05, 6.329199999999952e-05, 6.311099999999764e-05, 6.344499999999878e-05, 6.344499999999878e-05, 6.362500000000118e-05, 6.362500000000118e-05, 6.343099999999921e-05, 6.362499999999771e-05, 6.37630000000014e-05, 6.32219999999982e-05, 6.330499999999961e-05, 6.395799999999938e-05, 6.312500000000068e-05, 6.395799999999938e-05, 6.311099999999764e-05, 6.324999999999734e-05, 6.311100000000111e-05, 6.395900000000232e-05, 6.344499999999878e-05, 6.361100000000161e-05, 6.326400000000038e-05, 6.312500000000068e-05, 6.32639999999969e-05, 6.377700000000097e-05, 6.393000000000024e-05, 6.376400000000088e-05, 6.39439999999998e-05, 6.376400000000088e-05, 6.393000000000024e-05, 6.347199999999845e-05, 6.326400000000038e-05, 6.379200000000002e-05, 6.311100000000111e-05, 6.395899999999885e-05, 6.327799999999995e-05, 6.311099999999764e-05, 6.311199999999711e-05, 6.326400000000038e-05, 6.334700000000179e-05, 6.34439999999993e-05, 6.312500000000068e-05, 6.376400000000088e-05, 6.351399999999716e-05, 6.39439999999998e-05, 6.379200000000002e-05, 6.362500000000118e-05, 6.379200000000002e-05, 6.341699999999964e-05]</msg>
<status status="PASS" starttime="20201029 12:47:38.326" endtime="20201029 12:47:38.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.322" endtime="20201029 12:47:38.329"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:38.333" endtime="20201029 12:47:38.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.331" endtime="20201029 12:47:38.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.330" endtime="20201029 12:47:38.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.973" endtime="20201029 12:47:38.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.972" endtime="20201029 12:47:38.353"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.362" endtime="20201029 12:47:38.379"></status>
</kw>
<msg timestamp="20201029 12:47:38.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:38.360" endtime="20201029 12:47:38.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:38.381" endtime="20201029 12:47:38.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.383" endtime="20201029 12:47:38.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.358" endtime="20201029 12:47:38.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.356" endtime="20201029 12:47:38.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.392" endtime="20201029 12:47:38.679"></status>
</kw>
<msg timestamp="20201029 12:47:38.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021921681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021986361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:38.391" endtime="20201029 12:47:38.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021921681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021986361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:38.683" endtime="20201029 12:47:38.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.691" endtime="20201029 12:47:38.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.388" endtime="20201029 12:47:38.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.386" endtime="20201029 12:47:38.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:38.697" level="INFO">${RESULT} = [{'diff': 6.468000000000099e-05}, {'diff': 6.477799999999798e-05}, {'diff': 6.477799999999798e-05}, {'diff': 6.494499999999681e-05}, {'diff': 6.444499999999978e-05}, {'diff': 6.4583e-05}, {'diff': 6.4...</msg>
<status status="PASS" starttime="20201029 12:47:38.694" endtime="20201029 12:47:38.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:38.701" level="INFO">${ACCURACY} = {'diff': [6.468000000000099e-05, 6.477799999999798e-05, 6.477799999999798e-05, 6.494499999999681e-05, 6.444499999999978e-05, 6.4583e-05, 6.444499999999978e-05, 6.443100000000021e-05, 6.411100000000211...</msg>
<status status="PASS" starttime="20201029 12:47:38.698" endtime="20201029 12:47:38.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.706" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 12:47:38.705" endtime="20201029 12:47:38.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.708" level="INFO">VALUE: [6.468000000000099e-05, 6.477799999999798e-05, 6.477799999999798e-05, 6.494499999999681e-05, 6.444499999999978e-05, 6.4583e-05, 6.444499999999978e-05, 6.443100000000021e-05, 6.411100000000211e-05, 6.493099999999724e-05, 6.411099999999864e-05, 6.493000000000124e-05, 6.44440000000003e-05, 6.495800000000038e-05, 6.445799999999988e-05, 6.459699999999957e-05, 6.445899999999935e-05, 6.443100000000021e-05, 6.427799999999748e-05, 6.476400000000188e-05, 6.404200000000027e-05, 6.461099999999914e-05, 6.412500000000168e-05, 6.427799999999748e-05, 6.479100000000154e-05, 6.465300000000132e-05, 6.462499999999871e-05, 6.411099999999864e-05, 6.480500000000111e-05, 6.429200000000052e-05, 6.477799999999798e-05, 6.494399999999734e-05, 6.473599999999927e-05, 6.461099999999914e-05, 6.483300000000025e-05, 6.427800000000095e-05, 6.479200000000102e-05, 6.495899999999985e-05, 6.427800000000095e-05, 6.427800000000095e-05, 6.493000000000124e-05, 6.461099999999914e-05, 6.411099999999864e-05, 6.474999999999884e-05, 6.459699999999957e-05, 6.442999999999727e-05, 6.461100000000261e-05, 6.480600000000059e-05, 6.409699999999907e-05, 6.411100000000211e-05]</msg>
<status status="PASS" starttime="20201029 12:47:38.707" endtime="20201029 12:47:38.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.702" endtime="20201029 12:47:38.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:38.713" endtime="20201029 12:47:38.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.712" endtime="20201029 12:47:38.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.711" endtime="20201029 12:47:38.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.354" endtime="20201029 12:47:38.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.354" endtime="20201029 12:47:38.734"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.742" endtime="20201029 12:47:38.761"></status>
</kw>
<msg timestamp="20201029 12:47:38.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:38.741" endtime="20201029 12:47:38.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:38.763" endtime="20201029 12:47:38.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.765" endtime="20201029 12:47:38.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.738" endtime="20201029 12:47:38.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.736" endtime="20201029 12:47:38.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.774" endtime="20201029 12:47:39.060"></status>
</kw>
<msg timestamp="20201029 12:47:39.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022842778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022908111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:38.773" endtime="20201029 12:47:39.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022842778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022908111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:39.064" endtime="20201029 12:47:39.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.072" endtime="20201029 12:47:39.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.770" endtime="20201029 12:47:39.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.768" endtime="20201029 12:47:39.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:39.079" level="INFO">${RESULT} = [{'diff': 6.533299999999728e-05}, {'diff': 6.52639999999989e-05}, {'diff': 6.559700000000057e-05}, {'diff': 6.548600000000002e-05}, {'diff': 6.529200000000152e-05}, {'diff': 6.543100000000121e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:39.075" endtime="20201029 12:47:39.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:39.083" level="INFO">${ACCURACY} = {'diff': [6.533299999999728e-05, 6.52639999999989e-05, 6.559700000000057e-05, 6.548600000000002e-05, 6.529200000000152e-05, 6.543100000000121e-05, 6.529199999999805e-05, 6.505600000000084e-05, 6.50980...</msg>
<status status="PASS" starttime="20201029 12:47:39.080" endtime="20201029 12:47:39.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.087" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 12:47:39.086" endtime="20201029 12:47:39.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.089" level="INFO">VALUE: [6.533299999999728e-05, 6.52639999999989e-05, 6.559700000000057e-05, 6.548600000000002e-05, 6.529200000000152e-05, 6.543100000000121e-05, 6.529199999999805e-05, 6.505600000000084e-05, 6.509800000000301e-05, 6.534700000000032e-05, 6.512499999999921e-05, 6.509700000000007e-05, 6.587499999999996e-05, 6.561100000000014e-05, 6.591700000000214e-05, 6.511099999999964e-05, 6.515300000000182e-05, 6.5583000000001e-05, 6.544500000000078e-05, 6.511099999999964e-05, 6.594499999999781e-05, 6.595900000000085e-05, 6.594500000000128e-05, 6.511199999999912e-05, 6.57769999999995e-05, 6.538799999999956e-05, 6.518100000000096e-05, 6.573600000000027e-05, 6.561100000000014e-05, 6.579200000000202e-05, 6.511099999999964e-05, 6.54440000000013e-05, 6.526400000000238e-05, 6.562499999999971e-05, 6.509700000000007e-05, 6.579199999999855e-05, 6.54029999999986e-05, 6.526400000000238e-05, 6.577799999999898e-05, 6.509700000000007e-05, 6.57769999999995e-05, 6.511099999999964e-05, 6.577799999999898e-05, 6.563899999999928e-05, 6.562499999999971e-05, 6.527800000000195e-05, 6.543100000000121e-05, 6.595900000000085e-05, 6.527800000000195e-05, 6.561100000000014e-05]</msg>
<status status="PASS" starttime="20201029 12:47:39.088" endtime="20201029 12:47:39.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.084" endtime="20201029 12:47:39.092"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:39.095" endtime="20201029 12:47:39.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.094" endtime="20201029 12:47:39.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.093" endtime="20201029 12:47:39.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.735" endtime="20201029 12:47:39.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.734" endtime="20201029 12:47:39.116"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.124" endtime="20201029 12:47:39.142"></status>
</kw>
<msg timestamp="20201029 12:47:39.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:39.123" endtime="20201029 12:47:39.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:39.143" endtime="20201029 12:47:39.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.146" endtime="20201029 12:47:39.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.120" endtime="20201029 12:47:39.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.118" endtime="20201029 12:47:39.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.155" endtime="20201029 12:47:39.440"></status>
</kw>
<msg timestamp="20201029 12:47:39.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022131181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022197389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:39.153" endtime="20201029 12:47:39.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022131181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022197389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:39.445" endtime="20201029 12:47:39.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.453" endtime="20201029 12:47:39.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.151" endtime="20201029 12:47:39.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.149" endtime="20201029 12:47:39.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:39.459" level="INFO">${RESULT} = [{'diff': 6.620800000000163e-05}, {'diff': 6.661100000000114e-05}, {'diff': 6.677799999999998e-05}, {'diff': 6.612500000000021e-05}, {'diff': 6.662500000000071e-05}, {'diff': 6.694500000000228e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:39.456" endtime="20201029 12:47:39.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:39.464" level="INFO">${ACCURACY} = {'diff': [6.620800000000163e-05, 6.661100000000114e-05, 6.677799999999998e-05, 6.612500000000021e-05, 6.662500000000071e-05, 6.694500000000228e-05, 6.679200000000302e-05, 6.612500000000021e-05, 6.6263...</msg>
<status status="PASS" starttime="20201029 12:47:39.460" endtime="20201029 12:47:39.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.468" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 12:47:39.467" endtime="20201029 12:47:39.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.471" level="INFO">VALUE: [6.620800000000163e-05, 6.661100000000114e-05, 6.677799999999998e-05, 6.612500000000021e-05, 6.662500000000071e-05, 6.694500000000228e-05, 6.679200000000302e-05, 6.612500000000021e-05, 6.62639999999999e-05, 6.663900000000028e-05, 6.659700000000157e-05, 6.694399999999934e-05, 6.644399999999884e-05, 6.661100000000114e-05, 6.641700000000264e-05, 6.67640000000004e-05, 6.643099999999874e-05, 6.659700000000157e-05, 6.644499999999831e-05, 6.694499999999881e-05, 6.611100000000064e-05, 6.627800000000295e-05, 6.611100000000064e-05, 6.662499999999724e-05, 6.67770000000005e-05, 6.611099999999717e-05, 6.612500000000021e-05, 6.661100000000114e-05, 6.62639999999999e-05, 6.679199999999955e-05, 6.659700000000157e-05, 6.693100000000271e-05, 6.62639999999999e-05, 6.644499999999831e-05, 6.611099999999717e-05, 6.612500000000021e-05, 6.677799999999998e-05, 6.677799999999998e-05, 6.694399999999934e-05, 6.626300000000043e-05, 6.6583000000002e-05, 6.627799999999948e-05, 6.633400000000123e-05, 6.680499999999964e-05, 6.611100000000064e-05, 6.643099999999874e-05, 6.65969999999981e-05, 6.694500000000228e-05, 6.644500000000178e-05, 6.662500000000071e-05]</msg>
<status status="PASS" starttime="20201029 12:47:39.469" endtime="20201029 12:47:39.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.465" endtime="20201029 12:47:39.472"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:39.476" endtime="20201029 12:47:39.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.474" endtime="20201029 12:47:39.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.473" endtime="20201029 12:47:39.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.117" endtime="20201029 12:47:39.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.116" endtime="20201029 12:47:39.496"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.505" endtime="20201029 12:47:39.523"></status>
</kw>
<msg timestamp="20201029 12:47:39.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:39.504" endtime="20201029 12:47:39.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:39.525" endtime="20201029 12:47:39.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.527" endtime="20201029 12:47:39.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.501" endtime="20201029 12:47:39.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.499" endtime="20201029 12:47:39.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.537" endtime="20201029 12:47:39.823"></status>
</kw>
<msg timestamp="20201029 12:47:39.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022095764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022163111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:39.536" endtime="20201029 12:47:39.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022095764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022163111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:39.827" endtime="20201029 12:47:39.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.835" endtime="20201029 12:47:39.837"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.533" endtime="20201029 12:47:39.837"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.531" endtime="20201029 12:47:39.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:39.842" level="INFO">${RESULT} = [{'diff': 6.734699999999885e-05}, {'diff': 6.727800000000048e-05}, {'diff': 6.779200000000055e-05}, {'diff': 6.716699999999992e-05}, {'diff': 6.779200000000055e-05}, {'diff': 6.72640000000009e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:39.839" endtime="20201029 12:47:39.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:39.846" level="INFO">${ACCURACY} = {'diff': [6.734699999999885e-05, 6.727800000000048e-05, 6.779200000000055e-05, 6.716699999999992e-05, 6.779200000000055e-05, 6.72640000000009e-05, 6.729200000000005e-05, 6.744500000000278e-05, 6.74449...</msg>
<status status="PASS" starttime="20201029 12:47:39.843" endtime="20201029 12:47:39.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.850" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 12:47:39.849" endtime="20201029 12:47:39.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.853" level="INFO">VALUE: [6.734699999999885e-05, 6.727800000000048e-05, 6.779200000000055e-05, 6.716699999999992e-05, 6.779200000000055e-05, 6.72640000000009e-05, 6.729200000000005e-05, 6.744500000000278e-05, 6.744499999999931e-05, 6.794499999999981e-05, 6.790299999999763e-05, 6.747199999999898e-05, 6.750000000000159e-05, 6.781900000000021e-05, 6.779199999999708e-05, 6.784799999999883e-05, 6.779200000000055e-05, 6.77640000000014e-05, 6.777799999999751e-05, 6.744500000000278e-05, 6.777800000000098e-05, 6.776399999999794e-05, 6.718099999999949e-05, 6.784699999999935e-05, 6.793099999999677e-05, 6.75969999999991e-05, 6.744399999999984e-05, 6.72640000000009e-05, 6.777800000000098e-05, 6.720799999999916e-05, 6.74030000000006e-05, 6.762500000000171e-05, 6.729200000000005e-05, 6.711099999999817e-05, 6.745899999999888e-05, 6.745899999999888e-05, 6.793100000000024e-05, 6.711099999999817e-05, 6.794499999999981e-05, 6.784699999999935e-05, 6.70830000000025e-05, 6.727699999999753e-05, 6.794400000000034e-05, 6.725000000000134e-05, 6.772199999999923e-05, 6.779200000000055e-05, 6.794399999999687e-05, 6.712500000000121e-05, 6.794499999999981e-05, 6.745900000000235e-05]</msg>
<status status="PASS" starttime="20201029 12:47:39.851" endtime="20201029 12:47:39.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.847" endtime="20201029 12:47:39.854"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:39.858" endtime="20201029 12:47:39.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.856" endtime="20201029 12:47:39.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.855" endtime="20201029 12:47:39.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.497" endtime="20201029 12:47:39.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.497" endtime="20201029 12:47:39.878"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.887" endtime="20201029 12:47:39.908"></status>
</kw>
<msg timestamp="20201029 12:47:39.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:39.885" endtime="20201029 12:47:39.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:39.909" endtime="20201029 12:47:39.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.912" endtime="20201029 12:47:39.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.883" endtime="20201029 12:47:39.914"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.881" endtime="20201029 12:47:39.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.921" endtime="20201029 12:47:40.207"></status>
</kw>
<msg timestamp="20201029 12:47:40.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025164014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025232375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:39.919" endtime="20201029 12:47:40.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025164014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025232375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:40.211" endtime="20201029 12:47:40.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.219" endtime="20201029 12:47:40.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.917" endtime="20201029 12:47:40.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.915" endtime="20201029 12:47:40.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:40.226" level="INFO">${RESULT} = [{'diff': 6.836100000000289e-05}, {'diff': 6.80969999999996e-05}, {'diff': 6.844400000000084e-05}, {'diff': 6.812499999999874e-05}, {'diff': 6.861099999999967e-05}, {'diff': 6.827799999999801e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:40.223" endtime="20201029 12:47:40.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:40.230" level="INFO">${ACCURACY} = {'diff': [6.836100000000289e-05, 6.80969999999996e-05, 6.844400000000084e-05, 6.812499999999874e-05, 6.861099999999967e-05, 6.827799999999801e-05, 6.80969999999996e-05, 6.811100000000264e-05, 6.888899...</msg>
<status status="PASS" starttime="20201029 12:47:40.227" endtime="20201029 12:47:40.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.234" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 12:47:40.233" endtime="20201029 12:47:40.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.237" level="INFO">VALUE: [6.836100000000289e-05, 6.80969999999996e-05, 6.844400000000084e-05, 6.812499999999874e-05, 6.861099999999967e-05, 6.827799999999801e-05, 6.80969999999996e-05, 6.811100000000264e-05, 6.888899999999906e-05, 6.894499999999734e-05, 6.82640000000019e-05, 6.862499999999924e-05, 6.861099999999967e-05, 6.877800000000198e-05, 6.827800000000148e-05, 6.877799999999851e-05, 6.894400000000134e-05, 6.829200000000105e-05, 6.880600000000112e-05, 6.827799999999801e-05, 6.80969999999996e-05, 6.845899999999988e-05, 6.812500000000221e-05, 6.894500000000081e-05, 6.844500000000031e-05, 6.877699999999903e-05, 6.868099999999752e-05, 6.877799999999851e-05, 6.894400000000134e-05, 6.844400000000084e-05, 6.827800000000148e-05, 6.811099999999917e-05, 6.894500000000081e-05, 6.879200000000155e-05, 6.827799999999801e-05, 6.82909999999981e-05, 6.87640000000024e-05, 6.861200000000262e-05, 6.862499999999924e-05, 6.811100000000264e-05, 6.876399999999894e-05, 6.829100000000157e-05, 6.83480000000028e-05, 6.876399999999894e-05, 6.82640000000019e-05, 6.830600000000062e-05, 6.857000000000044e-05, 6.879200000000155e-05, 6.80969999999996e-05, 6.894499999999734e-05]</msg>
<status status="PASS" starttime="20201029 12:47:40.235" endtime="20201029 12:47:40.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.231" endtime="20201029 12:47:40.239"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:40.242" endtime="20201029 12:47:40.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.241" endtime="20201029 12:47:40.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.240" endtime="20201029 12:47:40.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.879" endtime="20201029 12:47:40.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.879" endtime="20201029 12:47:40.263"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.271" endtime="20201029 12:47:40.290"></status>
</kw>
<msg timestamp="20201029 12:47:40.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:40.270" endtime="20201029 12:47:40.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:40.291" endtime="20201029 12:47:40.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.294" endtime="20201029 12:47:40.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.268" endtime="20201029 12:47:40.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.266" endtime="20201029 12:47:40.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.303" endtime="20201029 12:47:40.588"></status>
</kw>
<msg timestamp="20201029 12:47:40.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022034278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022103667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:40.301" endtime="20201029 12:47:40.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022034278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022103667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:40.592" endtime="20201029 12:47:40.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.601" endtime="20201029 12:47:40.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.299" endtime="20201029 12:47:40.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.297" endtime="20201029 12:47:40.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:40.608" level="INFO">${RESULT} = [{'diff': 6.938899999999956e-05}, {'diff': 6.927800000000248e-05}, {'diff': 6.994399999999887e-05}, {'diff': 6.958299999999806e-05}, {'diff': 6.911100000000017e-05}, {'diff': 6.931899999999824e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:40.605" endtime="20201029 12:47:40.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:40.613" level="INFO">${ACCURACY} = {'diff': [6.938899999999956e-05, 6.927800000000248e-05, 6.994399999999887e-05, 6.958299999999806e-05, 6.911100000000017e-05, 6.931899999999824e-05, 6.944500000000131e-05, 6.979200000000255e-05, 6.9277...</msg>
<status status="PASS" starttime="20201029 12:47:40.609" endtime="20201029 12:47:40.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.618" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 12:47:40.617" endtime="20201029 12:47:40.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.620" level="INFO">VALUE: [6.938899999999956e-05, 6.927800000000248e-05, 6.994399999999887e-05, 6.958299999999806e-05, 6.911100000000017e-05, 6.931899999999824e-05, 6.944500000000131e-05, 6.979200000000255e-05, 6.927799999999901e-05, 6.912499999999974e-05, 6.96109999999972e-05, 6.977700000000003e-05, 6.911100000000017e-05, 6.927799999999901e-05, 6.926399999999944e-05, 6.944400000000184e-05, 6.976399999999994e-05, 6.944400000000184e-05, 6.961100000000067e-05, 6.943099999999827e-05, 6.994500000000181e-05, 6.929199999999858e-05, 6.909800000000008e-05, 6.977799999999951e-05, 6.977700000000003e-05, 6.926399999999944e-05, 6.944400000000184e-05, 6.991599999999973e-05, 6.994399999999887e-05, 6.962500000000024e-05, 6.961100000000067e-05, 6.944500000000131e-05, 6.994499999999834e-05, 6.994499999999834e-05, 6.986100000000092e-05, 6.915199999999941e-05, 6.961200000000015e-05, 6.977700000000003e-05, 6.962500000000024e-05, 6.961100000000067e-05, 6.929200000000205e-05, 6.995800000000191e-05, 6.995800000000191e-05, 6.927799999999901e-05, 6.944399999999837e-05, 6.927799999999901e-05, 6.911100000000017e-05, 6.944500000000131e-05, 6.994499999999834e-05, 6.995799999999844e-05]</msg>
<status status="PASS" starttime="20201029 12:47:40.619" endtime="20201029 12:47:40.621"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.614" endtime="20201029 12:47:40.621"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:40.625" endtime="20201029 12:47:40.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.623" endtime="20201029 12:47:40.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.622" endtime="20201029 12:47:40.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.264" endtime="20201029 12:47:40.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.263" endtime="20201029 12:47:40.646"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.654" endtime="20201029 12:47:40.672"></status>
</kw>
<msg timestamp="20201029 12:47:40.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:40.653" endtime="20201029 12:47:40.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:40.674" endtime="20201029 12:47:40.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.676" endtime="20201029 12:47:40.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.650" endtime="20201029 12:47:40.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.648" endtime="20201029 12:47:40.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.685" endtime="20201029 12:47:40.973"></status>
</kw>
<msg timestamp="20201029 12:47:40.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022212375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022282722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:40.684" endtime="20201029 12:47:40.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022212375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022282722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:40.977" endtime="20201029 12:47:40.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.985" endtime="20201029 12:47:40.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.681" endtime="20201029 12:47:40.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.679" endtime="20201029 12:47:40.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:40.992" level="INFO">${RESULT} = [{'diff': 7.034700000000185e-05}, {'diff': 7.101400000000119e-05}, {'diff': 7.012500000000074e-05}, {'diff': 7.044399999999937e-05}, {'diff': 7.033399999999829e-05}, {'diff': 7.077800000000051e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:40.989" endtime="20201029 12:47:40.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:40.996" level="INFO">${ACCURACY} = {'diff': [7.034700000000185e-05, 7.101400000000119e-05, 7.012500000000074e-05, 7.044399999999937e-05, 7.033399999999829e-05, 7.077800000000051e-05, 7.030599999999915e-05, 7.101400000000119e-05, 7.0111...</msg>
<status status="PASS" starttime="20201029 12:47:40.993" endtime="20201029 12:47:40.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.000" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 12:47:40.999" endtime="20201029 12:47:41.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.003" level="INFO">VALUE: [7.034700000000185e-05, 7.101400000000119e-05, 7.012500000000074e-05, 7.044399999999937e-05, 7.033399999999829e-05, 7.077800000000051e-05, 7.030599999999915e-05, 7.101400000000119e-05, 7.011100000000117e-05, 7.061200000000115e-05, 7.095799999999944e-05, 7.011200000000065e-05, 7.044399999999937e-05, 7.077700000000103e-05, 7.076399999999747e-05, 7.054100000000035e-05, 7.047199999999851e-05, 7.011100000000117e-05, 7.077800000000051e-05, 7.077800000000051e-05, 7.012499999999727e-05, 7.011100000000117e-05, 7.080599999999965e-05, 7.027800000000001e-05, 7.00979999999976e-05, 7.044399999999937e-05, 7.031899999999924e-05, 7.012500000000074e-05, 7.00970000000016e-05, 7.013900000000031e-05, 7.094399999999987e-05, 7.100000000000162e-05, 7.058299999999906e-05, 7.044499999999884e-05, 7.027800000000001e-05, 7.043099999999927e-05, 7.077800000000051e-05, 7.094500000000281e-05, 7.011200000000065e-05, 7.062500000000124e-05, 7.044399999999937e-05, 7.008299999999856e-05, 7.047199999999851e-05, 7.062499999999777e-05, 7.059699999999863e-05, 7.044399999999937e-05, 7.033299999999881e-05, 7.044499999999884e-05, 7.062500000000124e-05, 7.079200000000008e-05]</msg>
<status status="PASS" starttime="20201029 12:47:41.001" endtime="20201029 12:47:41.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.997" endtime="20201029 12:47:41.004"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:41.008" endtime="20201029 12:47:41.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.006" endtime="20201029 12:47:41.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.005" endtime="20201029 12:47:41.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.646" endtime="20201029 12:47:41.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.646" endtime="20201029 12:47:41.028"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.037" endtime="20201029 12:47:41.056"></status>
</kw>
<msg timestamp="20201029 12:47:41.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:41.035" endtime="20201029 12:47:41.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:41.057" endtime="20201029 12:47:41.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.059" endtime="20201029 12:47:41.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.033" endtime="20201029 12:47:41.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.031" endtime="20201029 12:47:41.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.068" endtime="20201029 12:47:41.353"></status>
</kw>
<msg timestamp="20201029 12:47:41.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023073625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023144819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:41.067" endtime="20201029 12:47:41.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023073625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023144819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:41.357" endtime="20201029 12:47:41.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.365" endtime="20201029 12:47:41.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.064" endtime="20201029 12:47:41.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.063" endtime="20201029 12:47:41.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:41.372" level="INFO">${RESULT} = [{'diff': 7.119400000000012e-05}, {'diff': 7.162499999999877e-05}, {'diff': 7.111200000000165e-05}, {'diff': 7.177699999999856e-05}, {'diff': 7.15690000000005e-05}, {'diff': 7.155499999999745e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:41.369" endtime="20201029 12:47:41.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:41.376" level="INFO">${ACCURACY} = {'diff': [7.119400000000012e-05, 7.162499999999877e-05, 7.111200000000165e-05, 7.177699999999856e-05, 7.15690000000005e-05, 7.155499999999745e-05, 7.11109999999987e-05, 7.16109999999992e-05, 7.1792000...</msg>
<status status="PASS" starttime="20201029 12:47:41.373" endtime="20201029 12:47:41.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.380" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 12:47:41.379" endtime="20201029 12:47:41.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.383" level="INFO">VALUE: [7.119400000000012e-05, 7.162499999999877e-05, 7.111200000000165e-05, 7.177699999999856e-05, 7.15690000000005e-05, 7.155499999999745e-05, 7.11109999999987e-05, 7.16109999999992e-05, 7.179200000000108e-05, 7.11109999999987e-05, 7.194400000000087e-05, 7.144499999999984e-05, 7.162499999999877e-05, 7.145899999999941e-05, 7.144499999999984e-05, 7.144499999999984e-05, 7.126399999999797e-05, 7.177699999999856e-05, 7.159699999999963e-05, 7.111100000000217e-05, 7.176399999999847e-05, 7.177800000000151e-05, 7.192999999999783e-05, 7.165300000000138e-05, 7.133299999999981e-05, 7.145899999999941e-05, 7.111100000000217e-05, 7.161100000000267e-05, 7.16109999999992e-05, 7.126300000000196e-05, 7.130500000000067e-05, 7.180500000000117e-05, 7.158300000000006e-05, 7.161100000000267e-05, 7.116700000000045e-05, 7.127799999999754e-05, 7.194500000000034e-05, 7.195800000000044e-05, 7.11109999999987e-05, 7.130600000000015e-05, 7.159699999999963e-05, 7.127800000000101e-05, 7.176399999999847e-05, 7.193100000000077e-05, 7.17910000000016e-05, 7.19300000000013e-05, 7.126400000000144e-05, 7.162499999999877e-05, 7.17499999999989e-05, 7.11109999999987e-05]</msg>
<status status="PASS" starttime="20201029 12:47:41.382" endtime="20201029 12:47:41.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.377" endtime="20201029 12:47:41.385"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:41.389" endtime="20201029 12:47:41.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.387" endtime="20201029 12:47:41.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.386" endtime="20201029 12:47:41.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.029" endtime="20201029 12:47:41.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.029" endtime="20201029 12:47:41.409"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.418" endtime="20201029 12:47:41.436"></status>
</kw>
<msg timestamp="20201029 12:47:41.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:41.416" endtime="20201029 12:47:41.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:41.437" endtime="20201029 12:47:41.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.439" endtime="20201029 12:47:41.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.414" endtime="20201029 12:47:41.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.412" endtime="20201029 12:47:41.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.448" endtime="20201029 12:47:41.734"></status>
</kw>
<msg timestamp="20201029 12:47:41.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021945208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022017889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:41.447" endtime="20201029 12:47:41.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021945208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022017889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:41.738" endtime="20201029 12:47:41.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.746" endtime="20201029 12:47:41.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.444" endtime="20201029 12:47:41.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.443" endtime="20201029 12:47:41.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:41.753" level="INFO">${RESULT} = [{'diff': 7.268099999999805e-05}, {'diff': 7.259700000000063e-05}, {'diff': 7.29170000000022e-05}, {'diff': 7.279199999999861e-05}, {'diff': 7.208400000000004e-05}, {'diff': 7.244400000000137e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:41.749" endtime="20201029 12:47:41.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:41.758" level="INFO">${ACCURACY} = {'diff': [7.268099999999805e-05, 7.259700000000063e-05, 7.29170000000022e-05, 7.279199999999861e-05, 7.208400000000004e-05, 7.244400000000137e-05, 7.24300000000018e-05, 7.26110000000002e-05, 7.2554999...</msg>
<status status="PASS" starttime="20201029 12:47:41.753" endtime="20201029 12:47:41.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.762" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 12:47:41.761" endtime="20201029 12:47:41.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.764" level="INFO">VALUE: [7.268099999999805e-05, 7.259700000000063e-05, 7.29170000000022e-05, 7.279199999999861e-05, 7.208400000000004e-05, 7.244400000000137e-05, 7.24300000000018e-05, 7.26110000000002e-05, 7.255499999999845e-05, 7.29439999999984e-05, 7.205500000000142e-05, 7.262499999999977e-05, 7.21109999999997e-05, 7.298700000000005e-05, 7.209700000000013e-05, 7.277799999999904e-05, 7.244500000000084e-05, 7.212499999999927e-05, 7.295800000000144e-05, 7.27499999999999e-05, 7.213899999999884e-05, 7.277699999999956e-05, 7.21109999999997e-05, 7.262499999999977e-05, 7.255499999999845e-05, 7.226399999999897e-05, 7.227799999999854e-05, 7.21109999999997e-05, 7.266599999999901e-05, 7.21109999999997e-05, 7.282000000000122e-05, 7.279199999999861e-05, 7.209799999999961e-05, 7.277699999999956e-05, 7.223599999999983e-05, 7.255499999999845e-05, 7.240299999999866e-05, 7.276399999999947e-05, 7.227800000000201e-05, 7.211100000000317e-05, 7.26110000000002e-05, 7.212499999999927e-05, 7.227799999999854e-05, 7.21109999999997e-05, 7.229200000000158e-05, 7.261199999999968e-05, 7.227700000000253e-05, 7.277699999999956e-05, 7.218100000000102e-05, 7.277800000000251e-05]</msg>
<status status="PASS" starttime="20201029 12:47:41.763" endtime="20201029 12:47:41.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.758" endtime="20201029 12:47:41.766"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:41.769" endtime="20201029 12:47:41.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.768" endtime="20201029 12:47:41.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.767" endtime="20201029 12:47:41.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.410" endtime="20201029 12:47:41.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.410" endtime="20201029 12:47:41.790"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.798" endtime="20201029 12:47:41.816"></status>
</kw>
<msg timestamp="20201029 12:47:41.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:41.797" endtime="20201029 12:47:41.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:41.817" endtime="20201029 12:47:41.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.820" endtime="20201029 12:47:41.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.794" endtime="20201029 12:47:41.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.792" endtime="20201029 12:47:41.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.829" endtime="20201029 12:47:42.115"></status>
</kw>
<msg timestamp="20201029 12:47:42.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021952208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022026083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:41.827" endtime="20201029 12:47:42.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021952208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022026083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:42.120" endtime="20201029 12:47:42.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.128" endtime="20201029 12:47:42.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.825" endtime="20201029 12:47:42.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.823" endtime="20201029 12:47:42.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:42.135" level="INFO">${RESULT} = [{'diff': 7.387499999999755e-05}, {'diff': 7.311200000000018e-05}, {'diff': 7.326299999999702e-05}, {'diff': 7.344400000000237e-05}, {'diff': 7.341599999999976e-05}, {'diff': 7.329199999999911e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:42.131" endtime="20201029 12:47:42.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:42.139" level="INFO">${ACCURACY} = {'diff': [7.387499999999755e-05, 7.311200000000018e-05, 7.326299999999702e-05, 7.344400000000237e-05, 7.341599999999976e-05, 7.329199999999911e-05, 7.311099999999723e-05, 7.309700000000113e-05, 7.3611...</msg>
<status status="PASS" starttime="20201029 12:47:42.136" endtime="20201029 12:47:42.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.143" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 12:47:42.142" endtime="20201029 12:47:42.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.145" level="INFO">VALUE: [7.387499999999755e-05, 7.311200000000018e-05, 7.326299999999702e-05, 7.344400000000237e-05, 7.341599999999976e-05, 7.329199999999911e-05, 7.311099999999723e-05, 7.309700000000113e-05, 7.36110000000012e-05, 7.345899999999794e-05, 7.377800000000004e-05, 7.31110000000007e-05, 7.394500000000234e-05, 7.377800000000004e-05, 7.359800000000111e-05, 7.32769999999966e-05, 7.379100000000013e-05, 7.345799999999847e-05, 7.376400000000047e-05, 7.327799999999954e-05, 7.374999999999743e-05, 7.327799999999954e-05, 7.398599999999811e-05, 7.329199999999911e-05, 7.327799999999954e-05, 7.36110000000012e-05, 7.307000000000147e-05, 7.312500000000027e-05, 7.32910000000031e-05, 7.31110000000007e-05, 7.358300000000206e-05, 7.329099999999963e-05, 7.387500000000102e-05, 7.315299999999941e-05, 7.309699999999766e-05, 7.397200000000201e-05, 7.377800000000004e-05, 7.379199999999961e-05, 7.376400000000047e-05, 7.327799999999954e-05, 7.329099999999963e-05, 7.361200000000068e-05, 7.319499999999812e-05, 7.312500000000027e-05, 7.329099999999963e-05, 7.31110000000007e-05, 7.327799999999954e-05, 7.379199999999961e-05, 7.36110000000012e-05, 7.387500000000102e-05]</msg>
<status status="PASS" starttime="20201029 12:47:42.144" endtime="20201029 12:47:42.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.139" endtime="20201029 12:47:42.147"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:42.150" endtime="20201029 12:47:42.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.149" endtime="20201029 12:47:42.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.148" endtime="20201029 12:47:42.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.791" endtime="20201029 12:47:42.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.790" endtime="20201029 12:47:42.171"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.180" endtime="20201029 12:47:42.199"></status>
</kw>
<msg timestamp="20201029 12:47:42.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:42.178" endtime="20201029 12:47:42.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:42.200" endtime="20201029 12:47:42.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.203" endtime="20201029 12:47:42.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.176" endtime="20201029 12:47:42.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.174" endtime="20201029 12:47:42.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.211" endtime="20201029 12:47:42.496"></status>
</kw>
<msg timestamp="20201029 12:47:42.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022996958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023071458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:42.210" endtime="20201029 12:47:42.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022996958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023071458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:42.500" endtime="20201029 12:47:42.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.508" endtime="20201029 12:47:42.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.207" endtime="20201029 12:47:42.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.206" endtime="20201029 12:47:42.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:42.515" level="INFO">${RESULT} = [{'diff': 7.449999999999818e-05}, {'diff': 7.427800000000054e-05}, {'diff': 7.409699999999866e-05}, {'diff': 7.480600000000018e-05}, {'diff': 7.49440000000004e-05}, {'diff': 7.41110000000017e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:42.512" endtime="20201029 12:47:42.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:42.519" level="INFO">${ACCURACY} = {'diff': [7.449999999999818e-05, 7.427800000000054e-05, 7.409699999999866e-05, 7.480600000000018e-05, 7.49440000000004e-05, 7.41110000000017e-05, 7.451400000000122e-05, 7.477800000000104e-05, 7.465199...</msg>
<status status="PASS" starttime="20201029 12:47:42.516" endtime="20201029 12:47:42.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.523" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 12:47:42.522" endtime="20201029 12:47:42.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.526" level="INFO">VALUE: [7.449999999999818e-05, 7.427800000000054e-05, 7.409699999999866e-05, 7.480600000000018e-05, 7.49440000000004e-05, 7.41110000000017e-05, 7.451400000000122e-05, 7.477800000000104e-05, 7.465199999999797e-05, 7.479200000000061e-05, 7.461199999999821e-05, 7.42630000000015e-05, 7.44439999999999e-05, 7.459699999999916e-05, 7.49440000000004e-05, 7.480600000000018e-05, 7.41110000000017e-05, 7.44439999999999e-05, 7.427799999999707e-05, 7.495899999999944e-05, 7.495899999999944e-05, 7.461099999999873e-05, 7.461099999999873e-05, 7.47370000000018e-05, 7.4763999999998e-05, 7.409699999999866e-05, 7.41110000000017e-05, 7.41110000000017e-05, 7.477800000000104e-05, 7.495799999999997e-05, 7.492999999999736e-05, 7.427800000000054e-05, 7.461099999999873e-05, 7.481999999999975e-05, 7.459700000000263e-05, 7.461099999999873e-05, 7.46249999999983e-05, 7.495799999999997e-05, 7.462500000000177e-05, 7.46249999999983e-05, 7.494399999999693e-05, 7.427800000000054e-05, 7.462500000000177e-05, 7.447199999999904e-05, 7.477800000000104e-05, 7.427800000000054e-05, 7.481999999999975e-05, 7.427800000000054e-05, 7.454200000000036e-05, 7.445799999999947e-05]</msg>
<status status="PASS" starttime="20201029 12:47:42.524" endtime="20201029 12:47:42.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.520" endtime="20201029 12:47:42.528"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:42.532" endtime="20201029 12:47:42.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.530" endtime="20201029 12:47:42.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.529" endtime="20201029 12:47:42.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.172" endtime="20201029 12:47:42.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.172" endtime="20201029 12:47:42.552"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.561" endtime="20201029 12:47:42.578"></status>
</kw>
<msg timestamp="20201029 12:47:42.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:42.559" endtime="20201029 12:47:42.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:42.580" endtime="20201029 12:47:42.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.582" endtime="20201029 12:47:42.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.557" endtime="20201029 12:47:42.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.555" endtime="20201029 12:47:42.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.591" endtime="20201029 12:47:42.876"></status>
</kw>
<msg timestamp="20201029 12:47:42.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021765861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021841153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:42.590" endtime="20201029 12:47:42.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021765861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021841153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:42.880" endtime="20201029 12:47:42.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.888" endtime="20201029 12:47:42.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.587" endtime="20201029 12:47:42.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.585" endtime="20201029 12:47:42.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:42.894" level="INFO">${RESULT} = [{'diff': 7.529199999999764e-05}, {'diff': 7.594500000000087e-05}, {'diff': 7.545899999999994e-05}, {'diff': 7.527799999999807e-05}, {'diff': 7.544500000000037e-05}, {'diff': 7.506900000000052e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:42.891" endtime="20201029 12:47:42.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:42.899" level="INFO">${ACCURACY} = {'diff': [7.529199999999764e-05, 7.594500000000087e-05, 7.545899999999994e-05, 7.527799999999807e-05, 7.544500000000037e-05, 7.506900000000052e-05, 7.592999999999836e-05, 7.56249999999993e-05, 7.59580...</msg>
<status status="PASS" starttime="20201029 12:47:42.895" endtime="20201029 12:47:42.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.904" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 12:47:42.903" endtime="20201029 12:47:42.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.906" level="INFO">VALUE: [7.529199999999764e-05, 7.594500000000087e-05, 7.545899999999994e-05, 7.527799999999807e-05, 7.544500000000037e-05, 7.506900000000052e-05, 7.592999999999836e-05, 7.56249999999993e-05, 7.595800000000097e-05, 7.577800000000204e-05, 7.51249999999988e-05, 7.577799999999857e-05, 7.561099999999973e-05, 7.59449999999974e-05, 7.544500000000037e-05, 7.544500000000037e-05, 7.561099999999973e-05, 7.544500000000037e-05, 7.54440000000009e-05, 7.54440000000009e-05, 7.592999999999836e-05, 7.545800000000047e-05, 7.592999999999836e-05, 7.529199999999764e-05, 7.559700000000016e-05, 7.511099999999923e-05, 7.527800000000154e-05, 7.545899999999994e-05, 7.558400000000007e-05, 7.51379999999989e-05, 7.595800000000097e-05, 7.59440000000014e-05, 7.516700000000098e-05, 7.52500000000024e-05, 7.527800000000154e-05, 7.592999999999836e-05, 7.577799999999857e-05, 7.579199999999814e-05, 7.529200000000111e-05, 7.544500000000037e-05, 7.541699999999776e-05, 7.56379999999994e-05, 7.527800000000154e-05, 7.559799999999964e-05, 7.56249999999993e-05, 7.595800000000097e-05, 7.54440000000009e-05, 7.51110000000027e-05, 7.52639999999985e-05, 7.5763999999999e-05]</msg>
<status status="PASS" starttime="20201029 12:47:42.905" endtime="20201029 12:47:42.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.900" endtime="20201029 12:47:42.912"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:42.915" endtime="20201029 12:47:42.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.914" endtime="20201029 12:47:42.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.913" endtime="20201029 12:47:42.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.553" endtime="20201029 12:47:42.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.553" endtime="20201029 12:47:42.936"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.945" endtime="20201029 12:47:42.963"></status>
</kw>
<msg timestamp="20201029 12:47:42.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:42.943" endtime="20201029 12:47:42.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:42.964" endtime="20201029 12:47:42.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.967" endtime="20201029 12:47:42.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.941" endtime="20201029 12:47:42.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.938" endtime="20201029 12:47:42.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.975" endtime="20201029 12:47:43.262"></status>
</kw>
<msg timestamp="20201029 12:47:43.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021983583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022060236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:42.974" endtime="20201029 12:47:43.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021983583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022060236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:43.267" endtime="20201029 12:47:43.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.275" endtime="20201029 12:47:43.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.971" endtime="20201029 12:47:43.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.970" endtime="20201029 12:47:43.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:43.281" level="INFO">${RESULT} = [{'diff': 7.665299999999944e-05}, {'diff': 7.661100000000073e-05}, {'diff': 7.627800000000254e-05}, {'diff': 7.627799999999907e-05}, {'diff': 7.679199999999914e-05}, {'diff': 7.661100000000073e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:43.278" endtime="20201029 12:47:43.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:43.285" level="INFO">${ACCURACY} = {'diff': [7.665299999999944e-05, 7.661100000000073e-05, 7.627800000000254e-05, 7.627799999999907e-05, 7.679199999999914e-05, 7.661100000000073e-05, 7.611100000000023e-05, 7.663899999999987e-05, 7.6958...</msg>
<status status="PASS" starttime="20201029 12:47:43.282" endtime="20201029 12:47:43.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.290" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 12:47:43.289" endtime="20201029 12:47:43.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.292" level="INFO">VALUE: [7.665299999999944e-05, 7.661100000000073e-05, 7.627800000000254e-05, 7.627799999999907e-05, 7.679199999999914e-05, 7.661100000000073e-05, 7.611100000000023e-05, 7.663899999999987e-05, 7.695800000000197e-05, 7.644399999999843e-05, 7.611100000000023e-05, 7.644399999999843e-05, 7.60830000000011e-05, 7.651300000000028e-05, 7.66250000000003e-05, 7.661100000000073e-05, 7.68189999999988e-05, 7.69449999999984e-05, 7.659800000000064e-05, 7.688800000000065e-05, 7.629099999999917e-05, 7.676300000000053e-05, 7.629099999999917e-05, 7.6764e-05, 7.66250000000003e-05, 7.637500000000005e-05, 7.665299999999944e-05, 7.677799999999957e-05, 7.65830000000016e-05, 7.694500000000187e-05, 7.629100000000263e-05, 7.644500000000137e-05, 7.647199999999757e-05, 7.644399999999843e-05, 7.630499999999873e-05, 7.64440000000019e-05, 7.627799999999907e-05, 7.632000000000125e-05, 7.69440000000024e-05, 7.627799999999907e-05, 7.65969999999977e-05, 7.611100000000023e-05, 7.659700000000116e-05, 7.643099999999833e-05, 7.64449999999979e-05, 7.623699999999983e-05, 7.62769999999996e-05, 7.68050000000027e-05, 7.677799999999957e-05, 7.665300000000291e-05]</msg>
<status status="PASS" starttime="20201029 12:47:43.291" endtime="20201029 12:47:43.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.286" endtime="20201029 12:47:43.293"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:43.297" endtime="20201029 12:47:43.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.295" endtime="20201029 12:47:43.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.294" endtime="20201029 12:47:43.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.937" endtime="20201029 12:47:43.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.936" endtime="20201029 12:47:43.318"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.326" endtime="20201029 12:47:43.348"></status>
</kw>
<msg timestamp="20201029 12:47:43.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:43.325" endtime="20201029 12:47:43.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:43.350" endtime="20201029 12:47:43.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.352" endtime="20201029 12:47:43.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.322" endtime="20201029 12:47:43.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.320" endtime="20201029 12:47:43.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.361" endtime="20201029 12:47:43.647"></status>
</kw>
<msg timestamp="20201029 12:47:43.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025511819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025589319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:43.360" endtime="20201029 12:47:43.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025511819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025589319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:43.651" endtime="20201029 12:47:43.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.660" endtime="20201029 12:47:43.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.357" endtime="20201029 12:47:43.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.355" endtime="20201029 12:47:43.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:43.666" level="INFO">${RESULT} = [{'diff': 7.749999999999771e-05}, {'diff': 7.744399999999943e-05}, {'diff': 7.763900000000087e-05}, {'diff': 7.793000000000036e-05}, {'diff': 7.744399999999943e-05}, {'diff': 7.711099999999776e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:43.663" endtime="20201029 12:47:43.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:43.670" level="INFO">${ACCURACY} = {'diff': [7.749999999999771e-05, 7.744399999999943e-05, 7.763900000000087e-05, 7.793000000000036e-05, 7.744399999999943e-05, 7.711099999999776e-05, 7.744399999999943e-05, 7.78189999999998e-05, 7.73890...</msg>
<status status="PASS" starttime="20201029 12:47:43.667" endtime="20201029 12:47:43.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.675" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201029 12:47:43.674" endtime="20201029 12:47:43.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.677" level="INFO">VALUE: [7.749999999999771e-05, 7.744399999999943e-05, 7.763900000000087e-05, 7.793000000000036e-05, 7.744399999999943e-05, 7.711099999999776e-05, 7.744399999999943e-05, 7.78189999999998e-05, 7.738900000000062e-05, 7.794500000000287e-05, 7.709800000000114e-05, 7.777800000000057e-05, 7.72770000000006e-05, 7.784699999999894e-05, 7.702700000000035e-05, 7.7457999999999e-05, 7.76250000000013e-05, 7.727800000000007e-05, 7.74440000000029e-05, 7.744500000000237e-05, 7.793099999999983e-05, 7.711100000000123e-05, 7.70839999999981e-05, 7.761099999999826e-05, 7.758299999999912e-05, 7.794399999999993e-05, 7.72770000000006e-05, 7.723600000000136e-05, 7.72640000000005e-05, 7.77779999999971e-05, 7.729199999999964e-05, 7.711100000000123e-05, 7.7764000000001e-05, 7.77779999999971e-05, 7.79449999999994e-05, 7.797200000000254e-05, 7.79449999999994e-05, 7.74440000000029e-05, 7.71389999999969e-05, 7.711100000000123e-05, 7.724999999999746e-05, 7.744399999999943e-05, 7.749999999999771e-05, 7.779200000000014e-05, 7.74449999999989e-05, 7.75969999999987e-05, 7.74449999999989e-05, 7.72640000000005e-05, 7.741699999999976e-05, 7.797200000000254e-05]</msg>
<status status="PASS" starttime="20201029 12:47:43.676" endtime="20201029 12:47:43.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.671" endtime="20201029 12:47:43.679"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:43.683" endtime="20201029 12:47:43.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.681" endtime="20201029 12:47:43.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.680" endtime="20201029 12:47:43.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.318" endtime="20201029 12:47:43.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.318" endtime="20201029 12:47:43.704"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.712" endtime="20201029 12:47:43.730"></status>
</kw>
<msg timestamp="20201029 12:47:43.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:43.711" endtime="20201029 12:47:43.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:43.731" endtime="20201029 12:47:43.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.734" endtime="20201029 12:47:43.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.708" endtime="20201029 12:47:43.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.706" endtime="20201029 12:47:43.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.743" endtime="20201029 12:47:44.029"></status>
</kw>
<msg timestamp="20201029 12:47:44.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021957222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022035889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:43.741" endtime="20201029 12:47:44.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021957222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022035889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:44.033" endtime="20201029 12:47:44.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.042" endtime="20201029 12:47:44.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.739" endtime="20201029 12:47:44.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.737" endtime="20201029 12:47:44.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:44.048" level="INFO">${RESULT} = [{'diff': 7.866700000000101e-05}, {'diff': 7.829200000000064e-05}, {'diff': 7.829100000000117e-05}, {'diff': 7.827800000000107e-05}, {'diff': 7.876399999999853e-05}, {'diff': 7.843000000000086e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:44.045" endtime="20201029 12:47:44.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:44.053" level="INFO">${ACCURACY} = {'diff': [7.866700000000101e-05, 7.829200000000064e-05, 7.829100000000117e-05, 7.827800000000107e-05, 7.876399999999853e-05, 7.843000000000086e-05, 7.844400000000043e-05, 7.840299999999772e-05, 7.8791...</msg>
<status status="PASS" starttime="20201029 12:47:44.049" endtime="20201029 12:47:44.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.058" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201029 12:47:44.056" endtime="20201029 12:47:44.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.060" level="INFO">VALUE: [7.866700000000101e-05, 7.829200000000064e-05, 7.829100000000117e-05, 7.827800000000107e-05, 7.876399999999853e-05, 7.843000000000086e-05, 7.844400000000043e-05, 7.840299999999772e-05, 7.879199999999767e-05, 7.813900000000137e-05, 7.829200000000064e-05, 7.861099999999926e-05, 7.877800000000157e-05, 7.829199999999717e-05, 7.87779999999981e-05, 7.84449999999999e-05, 7.849999999999871e-05, 7.89580000000005e-05, 7.811100000000223e-05, 7.874999999999896e-05, 7.82779999999976e-05, 7.87779999999981e-05, 7.861099999999926e-05, 7.84449999999999e-05, 7.859799999999917e-05, 7.84449999999999e-05, 7.895899999999997e-05, 7.845899999999947e-05, 7.89450000000004e-05, 7.8458e-05, 7.856900000000056e-05, 7.82909999999977e-05, 7.843000000000086e-05, 7.894399999999746e-05, 7.861099999999926e-05, 7.829199999999717e-05, 7.879200000000114e-05, 7.829200000000064e-05, 7.859700000000316e-05, 7.873599999999939e-05, 7.893099999999736e-05, 7.84449999999999e-05, 7.891600000000179e-05, 7.843000000000086e-05, 7.861099999999926e-05, 7.86250000000023e-05, 7.879199999999767e-05, 7.861099999999926e-05, 7.858300000000012e-05, 7.849999999999871e-05]</msg>
<status status="PASS" starttime="20201029 12:47:44.059" endtime="20201029 12:47:44.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.054" endtime="20201029 12:47:44.061"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:44.065" endtime="20201029 12:47:44.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.063" endtime="20201029 12:47:44.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.062" endtime="20201029 12:47:44.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.705" endtime="20201029 12:47:44.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.704" endtime="20201029 12:47:44.086"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.094" endtime="20201029 12:47:44.112"></status>
</kw>
<msg timestamp="20201029 12:47:44.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:44.093" endtime="20201029 12:47:44.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:44.114" endtime="20201029 12:47:44.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.116" endtime="20201029 12:47:44.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.090" endtime="20201029 12:47:44.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.088" endtime="20201029 12:47:44.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.125" endtime="20201029 12:47:44.412"></status>
</kw>
<msg timestamp="20201029 12:47:44.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0222855, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022364653, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:44.123" endtime="20201029 12:47:44.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0222855, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022364653, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:44.416" endtime="20201029 12:47:44.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.424" endtime="20201029 12:47:44.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.121" endtime="20201029 12:47:44.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.119" endtime="20201029 12:47:44.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:44.431" level="INFO">${RESULT} = [{'diff': 7.915300000000194e-05}, {'diff': 7.976399999999953e-05}, {'diff': 7.92779999999986e-05}, {'diff': 7.92909999999987e-05}, {'diff': 7.961100000000026e-05}, {'diff': 7.929100000000217e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:44.428" endtime="20201029 12:47:44.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:44.435" level="INFO">${ACCURACY} = {'diff': [7.915300000000194e-05, 7.976399999999953e-05, 7.92779999999986e-05, 7.92909999999987e-05, 7.961100000000026e-05, 7.929100000000217e-05, 7.96389999999994e-05, 7.96389999999994e-05, 7.91109999...</msg>
<status status="PASS" starttime="20201029 12:47:44.432" endtime="20201029 12:47:44.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.440" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201029 12:47:44.439" endtime="20201029 12:47:44.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.442" level="INFO">VALUE: [7.915300000000194e-05, 7.976399999999953e-05, 7.92779999999986e-05, 7.92909999999987e-05, 7.961100000000026e-05, 7.929100000000217e-05, 7.96389999999994e-05, 7.96389999999994e-05, 7.911099999999976e-05, 7.976399999999953e-05, 7.993099999999836e-05, 7.97779999999991e-05, 7.924999999999946e-05, 7.911200000000271e-05, 7.929200000000164e-05, 8.000000000000021e-05, 7.95970000000007e-05, 7.936100000000001e-05, 7.931899999999784e-05, 7.944399999999796e-05, 7.962499999999983e-05, 7.915299999999847e-05, 7.944399999999796e-05, 7.979200000000214e-05, 7.95970000000007e-05, 7.912499999999933e-05, 7.994499999999793e-05, 7.993100000000183e-05, 7.9458000000001e-05, 7.994499999999793e-05, 7.944400000000143e-05, 7.927800000000207e-05, 7.944399999999796e-05, 7.979200000000214e-05, 7.944499999999743e-05, 7.961100000000026e-05, 7.95970000000007e-05, 7.979200000000214e-05, 7.994499999999793e-05, 7.927800000000207e-05, 7.912499999999933e-05, 7.974999999999996e-05, 7.977699999999963e-05, 7.980499999999877e-05, 7.943000000000186e-05, 7.994400000000193e-05, 7.962499999999983e-05, 7.962499999999983e-05, 7.965299999999897e-05, 7.994499999999793e-05]</msg>
<status status="PASS" starttime="20201029 12:47:44.441" endtime="20201029 12:47:44.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.436" endtime="20201029 12:47:44.443"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:44.447" endtime="20201029 12:47:44.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.445" endtime="20201029 12:47:44.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.444" endtime="20201029 12:47:44.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.086" endtime="20201029 12:47:44.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.086" endtime="20201029 12:47:44.467"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.476" endtime="20201029 12:47:44.496"></status>
</kw>
<msg timestamp="20201029 12:47:44.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:44.475" endtime="20201029 12:47:44.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:44.497" endtime="20201029 12:47:44.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.500" endtime="20201029 12:47:44.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.472" endtime="20201029 12:47:44.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.470" endtime="20201029 12:47:44.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.510" endtime="20201029 12:47:44.797"></status>
</kw>
<msg timestamp="20201029 12:47:44.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023134667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023215181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:44.508" endtime="20201029 12:47:44.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023134667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023215181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:44.801" endtime="20201029 12:47:44.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.810" endtime="20201029 12:47:44.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.506" endtime="20201029 12:47:44.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.504" endtime="20201029 12:47:44.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:44.816" level="INFO">${RESULT} = [{'diff': 8.051400000000028e-05}, {'diff': 8.045799999999853e-05}, {'diff': 8.07910000000002e-05}, {'diff': 8.094399999999946e-05}, {'diff': 8.012500000000033e-05}, {'diff': 8.07780000000001e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:44.813" endtime="20201029 12:47:44.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:44.820" level="INFO">${ACCURACY} = {'diff': [8.051400000000028e-05, 8.045799999999853e-05, 8.07910000000002e-05, 8.094399999999946e-05, 8.012500000000033e-05, 8.07780000000001e-05, 8.092999999999989e-05, 8.011100000000076e-05, 8.062500...</msg>
<status status="PASS" starttime="20201029 12:47:44.817" endtime="20201029 12:47:44.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.825" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201029 12:47:44.824" endtime="20201029 12:47:44.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.827" level="INFO">VALUE: [8.051400000000028e-05, 8.045799999999853e-05, 8.07910000000002e-05, 8.094399999999946e-05, 8.012500000000033e-05, 8.07780000000001e-05, 8.092999999999989e-05, 8.011100000000076e-05, 8.062500000000083e-05, 8.044499999999843e-05, 8.072199999999835e-05, 8.022299999999732e-05, 8.0458000000002e-05, 8.01109999999973e-05, 8.080499999999977e-05, 8.06109999999978e-05, 8.030600000000221e-05, 8.029199999999917e-05, 8.040299999999972e-05, 8.093099999999936e-05, 8.026400000000003e-05, 8.011100000000076e-05, 8.07780000000001e-05, 8.026400000000003e-05, 8.059800000000117e-05, 8.027700000000013e-05, 8.06390000000004e-05, 8.009699999999773e-05, 8.076400000000053e-05, 8.01109999999973e-05, 8.029199999999917e-05, 8.02779999999996e-05, 8.080599999999924e-05, 8.027800000000307e-05, 8.062500000000083e-05, 8.07780000000001e-05, 8.095900000000197e-05, 8.061200000000074e-05, 8.03190000000023e-05, 8.07910000000002e-05, 8.080499999999977e-05, 8.07780000000001e-05, 8.012500000000033e-05, 8.07780000000001e-05, 8.044499999999843e-05, 8.067999999999964e-05, 8.073600000000139e-05, 8.04450000000019e-05, 8.07780000000001e-05, 8.009800000000067e-05]</msg>
<status status="PASS" starttime="20201029 12:47:44.826" endtime="20201029 12:47:44.829"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.821" endtime="20201029 12:47:44.829"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:44.833" endtime="20201029 12:47:44.852"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.831" endtime="20201029 12:47:44.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.830" endtime="20201029 12:47:44.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.468" endtime="20201029 12:47:44.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.468" endtime="20201029 12:47:44.854"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.862" endtime="20201029 12:47:44.881"></status>
</kw>
<msg timestamp="20201029 12:47:44.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:44.861" endtime="20201029 12:47:44.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:44.883" endtime="20201029 12:47:44.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.885" endtime="20201029 12:47:44.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.858" endtime="20201029 12:47:44.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.856" endtime="20201029 12:47:44.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.894" endtime="20201029 12:47:45.179"></status>
</kw>
<msg timestamp="20201029 12:47:45.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022376083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022457417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:44.893" endtime="20201029 12:47:45.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022376083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022457417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:45.183" endtime="20201029 12:47:45.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.191" endtime="20201029 12:47:45.193"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.890" endtime="20201029 12:47:45.194"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.889" endtime="20201029 12:47:45.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:45.198" level="INFO">${RESULT} = [{'diff': 8.133399999999888e-05}, {'diff': 8.162499999999837e-05}, {'diff': 8.162500000000183e-05}, {'diff': 8.143000000000039e-05}, {'diff': 8.144399999999996e-05}, {'diff': 8.19719999999996e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:45.195" endtime="20201029 12:47:45.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:45.203" level="INFO">${ACCURACY} = {'diff': [8.133399999999888e-05, 8.162499999999837e-05, 8.162500000000183e-05, 8.143000000000039e-05, 8.144399999999996e-05, 8.19719999999996e-05, 8.129200000000017e-05, 8.122199999999885e-05, 8.19440...</msg>
<status status="PASS" starttime="20201029 12:47:45.199" endtime="20201029 12:47:45.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.207" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201029 12:47:45.206" endtime="20201029 12:47:45.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.210" level="INFO">VALUE: [8.133399999999888e-05, 8.162499999999837e-05, 8.162500000000183e-05, 8.143000000000039e-05, 8.144399999999996e-05, 8.19719999999996e-05, 8.129200000000017e-05, 8.122199999999885e-05, 8.194400000000046e-05, 8.162500000000183e-05, 8.162499999999837e-05, 8.143099999999986e-05, 8.193100000000036e-05, 8.129099999999723e-05, 8.19719999999996e-05, 8.194400000000046e-05, 8.144399999999996e-05, 8.12780000000006e-05, 8.198599999999917e-05, 8.159699999999923e-05, 8.109699999999873e-05, 8.179200000000067e-05, 8.17780000000011e-05, 8.144499999999943e-05, 8.109800000000167e-05, 8.16390000000014e-05, 8.194400000000046e-05, 8.161100000000227e-05, 8.193000000000089e-05, 8.143000000000039e-05, 8.17780000000011e-05, 8.177799999999763e-05, 8.126400000000103e-05, 8.144499999999943e-05, 8.131899999999984e-05, 8.180600000000024e-05, 8.193100000000036e-05, 8.193100000000036e-05, 8.176299999999859e-05, 8.194400000000046e-05, 8.112499999999787e-05, 8.112499999999787e-05, 8.145799999999953e-05, 8.195800000000003e-05, 8.11109999999983e-05, 8.124999999999799e-05, 8.102800000000035e-05, 8.111100000000177e-05, 8.112499999999787e-05, 8.16390000000014e-05]</msg>
<status status="PASS" starttime="20201029 12:47:45.208" endtime="20201029 12:47:45.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.204" endtime="20201029 12:47:45.211"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:45.215" endtime="20201029 12:47:45.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.213" endtime="20201029 12:47:45.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.212" endtime="20201029 12:47:45.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.855" endtime="20201029 12:47:45.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.854" endtime="20201029 12:47:45.235"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.244" endtime="20201029 12:47:45.263"></status>
</kw>
<msg timestamp="20201029 12:47:45.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:45.242" endtime="20201029 12:47:45.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:45.264" endtime="20201029 12:47:45.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.267" endtime="20201029 12:47:45.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.240" endtime="20201029 12:47:45.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.238" endtime="20201029 12:47:45.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.276" endtime="20201029 12:47:45.562"></status>
</kw>
<msg timestamp="20201029 12:47:45.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022213736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022295917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:45.274" endtime="20201029 12:47:45.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022213736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022295917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:45.566" endtime="20201029 12:47:45.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.574" endtime="20201029 12:47:45.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.271" endtime="20201029 12:47:45.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.270" endtime="20201029 12:47:45.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:45.581" level="INFO">${RESULT} = [{'diff': 8.218099999999715e-05}, {'diff': 8.26109999999998e-05}, {'diff': 8.294500000000093e-05}, {'diff': 8.294500000000093e-05}, {'diff': 8.236099999999955e-05}, {'diff': 8.294400000000146e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:45.578" endtime="20201029 12:47:45.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:45.585" level="INFO">${ACCURACY} = {'diff': [8.218099999999715e-05, 8.26109999999998e-05, 8.294500000000093e-05, 8.294500000000093e-05, 8.236099999999955e-05, 8.294400000000146e-05, 8.284700000000048e-05, 8.245800000000053e-05, 8.26389...</msg>
<status status="PASS" starttime="20201029 12:47:45.582" endtime="20201029 12:47:45.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.589" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201029 12:47:45.588" endtime="20201029 12:47:45.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.592" level="INFO">VALUE: [8.218099999999715e-05, 8.26109999999998e-05, 8.294500000000093e-05, 8.294500000000093e-05, 8.236099999999955e-05, 8.294400000000146e-05, 8.284700000000048e-05, 8.245800000000053e-05, 8.263899999999894e-05, 8.295799999999756e-05, 8.26109999999998e-05, 8.232000000000031e-05, 8.280600000000124e-05, 8.294499999999747e-05, 8.277799999999863e-05, 8.28049999999983e-05, 8.280500000000177e-05, 8.23330000000004e-05, 8.224999999999899e-05, 8.222199999999985e-05, 8.222199999999985e-05, 8.21109999999993e-05, 8.24309999999974e-05, 8.294500000000093e-05, 8.26109999999998e-05, 8.262499999999937e-05, 8.227799999999813e-05, 8.216700000000104e-05, 8.259700000000023e-05, 8.227699999999866e-05, 8.276400000000253e-05, 8.27780000000021e-05, 8.21109999999993e-05, 8.258300000000066e-05, 8.27919999999982e-05, 8.26109999999998e-05, 8.294499999999747e-05, 8.21390000000019e-05, 8.263800000000293e-05, 8.240299999999826e-05, 8.262499999999937e-05, 8.256899999999762e-05, 8.21109999999993e-05, 8.262499999999937e-05, 8.212499999999887e-05, 8.212500000000234e-05, 8.244399999999749e-05, 8.262499999999937e-05, 8.2459e-05, 8.297300000000007e-05]</msg>
<status status="PASS" starttime="20201029 12:47:45.590" endtime="20201029 12:47:45.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.586" endtime="20201029 12:47:45.593"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:45.597" endtime="20201029 12:47:45.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.595" endtime="20201029 12:47:45.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.594" endtime="20201029 12:47:45.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.236" endtime="20201029 12:47:45.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.236" endtime="20201029 12:47:45.618"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.627" endtime="20201029 12:47:45.647"></status>
</kw>
<msg timestamp="20201029 12:47:45.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:45.625" endtime="20201029 12:47:45.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:45.648" endtime="20201029 12:47:45.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.650" endtime="20201029 12:47:45.652"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.623" endtime="20201029 12:47:45.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.620" endtime="20201029 12:47:45.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.660" endtime="20201029 12:47:45.945"></status>
</kw>
<msg timestamp="20201029 12:47:45.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023815653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023899333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:45.658" endtime="20201029 12:47:45.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023815653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023899333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:45.949" endtime="20201029 12:47:45.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.957" endtime="20201029 12:47:45.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.655" endtime="20201029 12:47:45.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.654" endtime="20201029 12:47:45.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:45.964" level="INFO">${RESULT} = [{'diff': 8.367999999999917e-05}, {'diff': 8.36110000000008e-05}, {'diff': 8.36110000000008e-05}, {'diff': 8.395799999999856e-05}, {'diff': 8.394399999999899e-05}, {'diff': 8.326399999999956e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:45.961" endtime="20201029 12:47:45.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:45.968" level="INFO">${ACCURACY} = {'diff': [8.367999999999917e-05, 8.36110000000008e-05, 8.36110000000008e-05, 8.395799999999856e-05, 8.394399999999899e-05, 8.326399999999956e-05, 8.381999999999834e-05, 8.377799999999963e-05, 8.347300...</msg>
<status status="PASS" starttime="20201029 12:47:45.965" endtime="20201029 12:47:45.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.972" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201029 12:47:45.971" endtime="20201029 12:47:45.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.975" level="INFO">VALUE: [8.367999999999917e-05, 8.36110000000008e-05, 8.36110000000008e-05, 8.395799999999856e-05, 8.394399999999899e-05, 8.326399999999956e-05, 8.381999999999834e-05, 8.377799999999963e-05, 8.347300000000057e-05, 8.313800000000343e-05, 8.344499999999797e-05, 8.347199999999763e-05, 8.395799999999856e-05, 8.394400000000246e-05, 8.32780000000026e-05, 8.342999999999892e-05, 8.329200000000217e-05, 8.394399999999899e-05, 8.302800000000235e-05, 8.394499999999847e-05, 8.35980000000007e-05, 8.35980000000007e-05, 8.344499999999797e-05, 8.36110000000008e-05, 8.305499999999855e-05, 8.377799999999963e-05, 8.392999999999942e-05, 8.343000000000239e-05, 8.377799999999963e-05, 8.379200000000267e-05, 8.312499999999987e-05, 8.377799999999963e-05, 8.35980000000007e-05, 8.38049999999993e-05, 8.379099999999973e-05, 8.327699999999966e-05, 8.38049999999993e-05, 8.36110000000008e-05, 8.336200000000002e-05, 8.312499999999987e-05, 8.381999999999834e-05, 8.352799999999938e-05, 8.312499999999987e-05, 8.398600000000117e-05, 8.312499999999987e-05, 8.391699999999933e-05, 8.377700000000016e-05, 8.377700000000016e-05, 8.359699999999776e-05, 8.327799999999913e-05]</msg>
<status status="PASS" starttime="20201029 12:47:45.973" endtime="20201029 12:47:45.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.969" endtime="20201029 12:47:45.977"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:45.981" endtime="20201029 12:47:46.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.979" endtime="20201029 12:47:46.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.978" endtime="20201029 12:47:46.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.618" endtime="20201029 12:47:46.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.618" endtime="20201029 12:47:46.001"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.010" endtime="20201029 12:47:46.028"></status>
</kw>
<msg timestamp="20201029 12:47:46.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:46.008" endtime="20201029 12:47:46.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:46.030" endtime="20201029 12:47:46.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.032" endtime="20201029 12:47:46.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.006" endtime="20201029 12:47:46.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.004" endtime="20201029 12:47:46.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.041" endtime="20201029 12:47:46.326"></status>
</kw>
<msg timestamp="20201029 12:47:46.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022217347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022302347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:46.040" endtime="20201029 12:47:46.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022217347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022302347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:46.330" endtime="20201029 12:47:46.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.338" endtime="20201029 12:47:46.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.037" endtime="20201029 12:47:46.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.036" endtime="20201029 12:47:46.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:46.344" level="INFO">${RESULT} = [{'diff': 8.500000000000174e-05}, {'diff': 8.41249999999974e-05}, {'diff': 8.494399999999999e-05}, {'diff': 8.461099999999833e-05}, {'diff': 8.412500000000087e-05}, {'diff': 8.409699999999826e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:46.341" endtime="20201029 12:47:46.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:46.349" level="INFO">${ACCURACY} = {'diff': [8.500000000000174e-05, 8.41249999999974e-05, 8.494399999999999e-05, 8.461099999999833e-05, 8.412500000000087e-05, 8.409699999999826e-05, 8.491699999999686e-05, 8.495899999999904e-05, 8.45839...</msg>
<status status="PASS" starttime="20201029 12:47:46.345" endtime="20201029 12:47:46.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.354" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201029 12:47:46.353" endtime="20201029 12:47:46.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.356" level="INFO">VALUE: [8.500000000000174e-05, 8.41249999999974e-05, 8.494399999999999e-05, 8.461099999999833e-05, 8.412500000000087e-05, 8.409699999999826e-05, 8.491699999999686e-05, 8.495899999999904e-05, 8.458399999999866e-05, 8.477800000000063e-05, 8.445799999999906e-05, 8.476400000000106e-05, 8.427800000000013e-05, 8.463900000000094e-05, 8.477800000000063e-05, 8.456900000000309e-05, 8.452800000000038e-05, 8.46249999999979e-05, 8.444499999999897e-05, 8.41110000000013e-05, 8.426400000000056e-05, 8.429100000000023e-05, 8.442999999999992e-05, 8.481900000000334e-05, 8.490300000000076e-05, 8.46249999999979e-05, 8.41110000000013e-05, 8.444399999999949e-05, 8.441699999999983e-05, 8.494499999999947e-05, 8.42919999999997e-05, 8.425000000000099e-05, 8.429100000000023e-05, 8.495799999999956e-05, 8.498600000000217e-05, 8.46249999999979e-05, 8.42919999999997e-05, 8.47920000000002e-05, 8.488900000000119e-05, 8.444499999999897e-05, 8.427800000000013e-05, 8.427800000000013e-05, 8.444500000000243e-05, 8.499999999999827e-05, 8.41119999999973e-05, 8.445799999999906e-05, 8.412500000000087e-05, 8.441600000000035e-05, 8.444399999999949e-05, 8.426399999999709e-05]</msg>
<status status="PASS" starttime="20201029 12:47:46.355" endtime="20201029 12:47:46.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.350" endtime="20201029 12:47:46.357"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:46.361" endtime="20201029 12:47:46.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.360" endtime="20201029 12:47:46.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.358" endtime="20201029 12:47:46.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.002" endtime="20201029 12:47:46.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.002" endtime="20201029 12:47:46.382"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.390" endtime="20201029 12:47:46.409"></status>
</kw>
<msg timestamp="20201029 12:47:46.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:46.389" endtime="20201029 12:47:46.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:46.411" endtime="20201029 12:47:46.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.413" endtime="20201029 12:47:46.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.386" endtime="20201029 12:47:46.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.384" endtime="20201029 12:47:46.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.422" endtime="20201029 12:47:46.709"></status>
</kw>
<msg timestamp="20201029 12:47:46.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022103111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022188458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:46.421" endtime="20201029 12:47:46.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022103111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022188458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:46.713" endtime="20201029 12:47:46.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.721" endtime="20201029 12:47:46.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.418" endtime="20201029 12:47:46.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.417" endtime="20201029 12:47:46.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:46.728" level="INFO">${RESULT} = [{'diff': 8.53469999999995e-05}, {'diff': 8.529100000000123e-05}, {'diff': 8.511099999999883e-05}, {'diff': 8.51249999999984e-05}, {'diff': 8.544400000000049e-05}, {'diff': 8.531999999999984e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:46.725" endtime="20201029 12:47:46.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:46.732" level="INFO">${ACCURACY} = {'diff': [8.53469999999995e-05, 8.529100000000123e-05, 8.511099999999883e-05, 8.51249999999984e-05, 8.544400000000049e-05, 8.531999999999984e-05, 8.56249999999989e-05, 8.555600000000052e-05, 8.5638999...</msg>
<status status="PASS" starttime="20201029 12:47:46.729" endtime="20201029 12:47:46.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.736" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201029 12:47:46.735" endtime="20201029 12:47:46.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.739" level="INFO">VALUE: [8.53469999999995e-05, 8.529100000000123e-05, 8.511099999999883e-05, 8.51249999999984e-05, 8.544400000000049e-05, 8.531999999999984e-05, 8.56249999999989e-05, 8.555600000000052e-05, 8.563899999999847e-05, 8.540300000000126e-05, 8.527800000000113e-05, 8.542999999999745e-05, 8.562500000000237e-05, 8.544399999999702e-05, 8.508299999999969e-05, 8.595800000000056e-05, 8.527800000000113e-05, 8.545800000000006e-05, 8.577800000000163e-05, 8.526399999999809e-05, 8.576400000000206e-05, 8.54859999999992e-05, 8.512500000000187e-05, 8.588899999999872e-05, 8.544400000000049e-05, 8.592999999999795e-05, 8.580600000000077e-05, 8.577800000000163e-05, 8.526400000000156e-05, 8.544499999999997e-05, 8.523599999999895e-05, 8.51249999999984e-05, 8.57920000000012e-05, 8.54310000000004e-05, 8.529099999999776e-05, 8.511099999999883e-05, 8.579100000000173e-05, 8.576399999999859e-05, 8.545800000000006e-05, 8.559699999999976e-05, 8.541700000000083e-05, 8.57920000000012e-05, 8.51249999999984e-05, 8.527799999999766e-05, 8.50980000000022e-05, 8.544499999999997e-05, 8.543000000000092e-05, 8.506900000000012e-05, 8.580600000000077e-05, 8.544400000000049e-05]</msg>
<status status="PASS" starttime="20201029 12:47:46.737" endtime="20201029 12:47:46.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.733" endtime="20201029 12:47:46.740"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:46.744" endtime="20201029 12:47:46.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.743" endtime="20201029 12:47:46.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.741" endtime="20201029 12:47:46.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.383" endtime="20201029 12:47:46.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.382" endtime="20201029 12:47:46.766"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.777" endtime="20201029 12:47:46.800"></status>
</kw>
<msg timestamp="20201029 12:47:46.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:46.776" endtime="20201029 12:47:46.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:46.801" endtime="20201029 12:47:46.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.804" endtime="20201029 12:47:46.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.772" endtime="20201029 12:47:46.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.769" endtime="20201029 12:47:46.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.813" endtime="20201029 12:47:47.098"></status>
</kw>
<msg timestamp="20201029 12:47:47.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029292292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029378792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:46.811" endtime="20201029 12:47:47.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029292292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029378792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:47.102" endtime="20201029 12:47:47.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.110" endtime="20201029 12:47:47.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.809" endtime="20201029 12:47:47.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.807" endtime="20201029 12:47:47.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:47.116" level="INFO">${RESULT} = [{'diff': 8.649999999999977e-05}, {'diff': 8.645900000000054e-05}, {'diff': 8.659800000000023e-05}, {'diff': 8.624999999999952e-05}, {'diff': 8.661100000000033e-05}, {'diff': 8.66249999999999e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:47.113" endtime="20201029 12:47:47.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:47.121" level="INFO">${ACCURACY} = {'diff': [8.649999999999977e-05, 8.645900000000054e-05, 8.659800000000023e-05, 8.624999999999952e-05, 8.661100000000033e-05, 8.66249999999999e-05, 8.694399999999852e-05, 8.61249999999994e-05, 8.661100...</msg>
<status status="PASS" starttime="20201029 12:47:47.117" endtime="20201029 12:47:47.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.125" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201029 12:47:47.124" endtime="20201029 12:47:47.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.127" level="INFO">VALUE: [8.649999999999977e-05, 8.645900000000054e-05, 8.659800000000023e-05, 8.624999999999952e-05, 8.661100000000033e-05, 8.66249999999999e-05, 8.694399999999852e-05, 8.61249999999994e-05, 8.661100000000033e-05, 8.627799999999866e-05, 8.679199999999873e-05, 8.659699999999729e-05, 8.61119999999993e-05, 8.66119999999998e-05, 8.627699999999919e-05, 8.677799999999916e-05, 8.627700000000266e-05, 8.649999999999977e-05, 8.673600000000045e-05, 8.691699999999886e-05, 8.67920000000022e-05, 8.66249999999999e-05, 8.627800000000213e-05, 8.661100000000033e-05, 8.661100000000033e-05, 8.6847000000001e-05, 8.681899999999493e-05, 8.644400000000496e-05, 8.624999999999605e-05, 8.645799999999759e-05, 8.694399999999852e-05, 8.613899999999897e-05, 8.659700000000076e-05, 8.64869999999962e-05, 8.626400000000256e-05, 8.661100000000033e-05, 8.6944999999998e-05, 8.630499999999486e-05, 8.66249999999999e-05, 8.694399999999852e-05, 8.616700000000505e-05, 8.627800000000213e-05, 8.644399999999802e-05, 8.697199999999766e-05, 8.627800000000213e-05, 8.627800000000213e-05, 8.651400000000281e-05, 8.644399999999802e-05, 8.693100000000537e-05, 8.627699999999572e-05]</msg>
<status status="PASS" starttime="20201029 12:47:47.126" endtime="20201029 12:47:47.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.121" endtime="20201029 12:47:47.130"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:47.133" endtime="20201029 12:47:47.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.132" endtime="20201029 12:47:47.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.130" endtime="20201029 12:47:47.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.767" endtime="20201029 12:47:47.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.766" endtime="20201029 12:47:47.154"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.162" endtime="20201029 12:47:47.181"></status>
</kw>
<msg timestamp="20201029 12:47:47.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:47.161" endtime="20201029 12:47:47.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:47.183" endtime="20201029 12:47:47.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.185" endtime="20201029 12:47:47.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.158" endtime="20201029 12:47:47.188"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.156" endtime="20201029 12:47:47.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.194" endtime="20201029 12:47:47.480"></status>
</kw>
<msg timestamp="20201029 12:47:47.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021814986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021902333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:47.193" endtime="20201029 12:47:47.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021814986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021902333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:47.484" endtime="20201029 12:47:47.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.492" endtime="20201029 12:47:47.494"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.190" endtime="20201029 12:47:47.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.189" endtime="20201029 12:47:47.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:47.499" level="INFO">${RESULT} = [{'diff': 8.734699999999804e-05}, {'diff': 8.726400000000009e-05}, {'diff': 8.742999999999945e-05}, {'diff': 8.779199999999973e-05}, {'diff': 8.74310000000024e-05}, {'diff': 8.711100000000083e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:47.496" endtime="20201029 12:47:47.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:47.504" level="INFO">${ACCURACY} = {'diff': [8.734699999999804e-05, 8.726400000000009e-05, 8.742999999999945e-05, 8.779199999999973e-05, 8.74310000000024e-05, 8.711100000000083e-05, 8.709699999999779e-05, 8.758399999999819e-05, 8.71380...</msg>
<status status="PASS" starttime="20201029 12:47:47.500" endtime="20201029 12:47:47.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.508" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201029 12:47:47.507" endtime="20201029 12:47:47.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.511" level="INFO">VALUE: [8.734699999999804e-05, 8.726400000000009e-05, 8.742999999999945e-05, 8.779199999999973e-05, 8.74310000000024e-05, 8.711100000000083e-05, 8.709699999999779e-05, 8.758399999999819e-05, 8.713800000000049e-05, 8.71250000000004e-05, 8.747199999999816e-05, 8.727700000000019e-05, 8.727700000000019e-05, 8.744400000000249e-05, 8.795800000000256e-05, 8.779199999999973e-05, 8.711100000000083e-05, 8.727799999999966e-05, 8.766600000000013e-05, 8.759799999999776e-05, 8.727799999999966e-05, 8.729099999999976e-05, 8.786100000000158e-05, 8.794399999999952e-05, 8.792999999999995e-05, 8.763900000000047e-05, 8.794399999999952e-05, 8.709700000000126e-05, 8.74449999999985e-05, 8.775000000000102e-05, 8.780600000000277e-05, 8.777800000000016e-05, 8.733299999999847e-05, 8.777699999999722e-05, 8.726400000000009e-05, 8.761099999999786e-05, 8.777800000000016e-05, 8.709700000000126e-05, 8.744399999999902e-05, 8.71799999999992e-05, 8.779199999999973e-05, 8.727799999999966e-05, 8.709799999999726e-05, 8.759799999999776e-05, 8.751400000000034e-05, 8.777700000000069e-05, 8.742999999999945e-05, 8.745799999999859e-05, 8.727799999999966e-05, 8.73189999999989e-05]</msg>
<status status="PASS" starttime="20201029 12:47:47.510" endtime="20201029 12:47:47.512"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.505" endtime="20201029 12:47:47.512"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:47.516" endtime="20201029 12:47:47.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.514" endtime="20201029 12:47:47.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.513" endtime="20201029 12:47:47.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.155" endtime="20201029 12:47:47.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.154" endtime="20201029 12:47:47.536"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.545" endtime="20201029 12:47:47.563"></status>
</kw>
<msg timestamp="20201029 12:47:47.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:47.543" endtime="20201029 12:47:47.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:47.565" endtime="20201029 12:47:47.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.567" endtime="20201029 12:47:47.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.541" endtime="20201029 12:47:47.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.539" endtime="20201029 12:47:47.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.576" endtime="20201029 12:47:47.862"></status>
</kw>
<msg timestamp="20201029 12:47:47.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021963611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022051806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:47.574" endtime="20201029 12:47:47.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021963611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022051806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:47.866" endtime="20201029 12:47:47.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.874" endtime="20201029 12:47:47.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.572" endtime="20201029 12:47:47.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.570" endtime="20201029 12:47:47.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:47.880" level="INFO">${RESULT} = [{'diff': 8.819499999999925e-05}, {'diff': 8.8945e-05}, {'diff': 8.827800000000066e-05}, {'diff': 8.877699999999822e-05}, {'diff': 8.812499999999793e-05}, {'diff': 8.88190000000004e-05}, {'diff': 8.89...</msg>
<status status="PASS" starttime="20201029 12:47:47.877" endtime="20201029 12:47:47.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:47.884" level="INFO">${ACCURACY} = {'diff': [8.819499999999925e-05, 8.8945e-05, 8.827800000000066e-05, 8.877699999999822e-05, 8.812499999999793e-05, 8.88190000000004e-05, 8.893000000000095e-05, 8.877800000000116e-05, 8.844400000000002e...</msg>
<status status="PASS" starttime="20201029 12:47:47.881" endtime="20201029 12:47:47.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.889" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201029 12:47:47.888" endtime="20201029 12:47:47.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.891" level="INFO">VALUE: [8.819499999999925e-05, 8.8945e-05, 8.827800000000066e-05, 8.877699999999822e-05, 8.812499999999793e-05, 8.88190000000004e-05, 8.893000000000095e-05, 8.877800000000116e-05, 8.844400000000002e-05, 8.83059999999998e-05, 8.825000000000152e-05, 8.862499999999843e-05, 8.861099999999886e-05, 8.845800000000306e-05, 8.861099999999886e-05, 8.873600000000245e-05, 8.845799999999959e-05, 8.858299999999972e-05, 8.811100000000183e-05, 8.813900000000097e-05, 8.84449999999995e-05, 8.862499999999843e-05, 8.811100000000183e-05, 8.877799999999769e-05, 8.84449999999995e-05, 8.84999999999983e-05, 8.811100000000183e-05, 8.869499999999975e-05, 8.856900000000015e-05, 8.877799999999769e-05, 8.831999999999937e-05, 8.895800000000009e-05, 8.861099999999886e-05, 8.84449999999995e-05, 8.826400000000109e-05, 8.83189999999999e-05, 8.808400000000216e-05, 8.840200000000131e-05, 8.897200000000313e-05, 8.824999999999805e-05, 8.829200000000023e-05, 8.844400000000002e-05, 8.86250000000019e-05, 8.843099999999993e-05, 8.844500000000297e-05, 8.84449999999995e-05, 8.841700000000036e-05, 8.861199999999833e-05, 8.833299999999947e-05, 8.843000000000045e-05]</msg>
<status status="PASS" starttime="20201029 12:47:47.890" endtime="20201029 12:47:47.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.885" endtime="20201029 12:47:47.893"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:47.896" endtime="20201029 12:47:47.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.895" endtime="20201029 12:47:47.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.894" endtime="20201029 12:47:47.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.537" endtime="20201029 12:47:47.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.537" endtime="20201029 12:47:47.917"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.926" endtime="20201029 12:47:47.945"></status>
</kw>
<msg timestamp="20201029 12:47:47.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:47.924" endtime="20201029 12:47:47.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:47.947" endtime="20201029 12:47:47.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.949" endtime="20201029 12:47:47.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.921" endtime="20201029 12:47:47.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.919" endtime="20201029 12:47:47.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.958" endtime="20201029 12:47:48.243"></status>
</kw>
<msg timestamp="20201029 12:47:48.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022913903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02300375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:47.956" endtime="20201029 12:47:48.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022913903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02300375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:48.247" endtime="20201029 12:47:48.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.256" endtime="20201029 12:47:48.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.954" endtime="20201029 12:47:48.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.952" endtime="20201029 12:47:48.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:48.262" level="INFO">${RESULT} = [{'diff': 8.984700000000054e-05}, {'diff': 8.929199999999776e-05}, {'diff': 8.976399999999912e-05}, {'diff': 8.990299999999882e-05}, {'diff': 8.929100000000176e-05}, {'diff': 8.973699999999946e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:48.259" endtime="20201029 12:47:48.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:48.266" level="INFO">${ACCURACY} = {'diff': [8.984700000000054e-05, 8.929199999999776e-05, 8.976399999999912e-05, 8.990299999999882e-05, 8.929100000000176e-05, 8.973699999999946e-05, 8.926299999999915e-05, 8.962499999999943e-05, 8.9790...</msg>
<status status="PASS" starttime="20201029 12:47:48.263" endtime="20201029 12:47:48.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.271" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201029 12:47:48.270" endtime="20201029 12:47:48.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.273" level="INFO">VALUE: [8.984700000000054e-05, 8.929199999999776e-05, 8.976399999999912e-05, 8.990299999999882e-05, 8.929100000000176e-05, 8.973699999999946e-05, 8.926299999999915e-05, 8.962499999999943e-05, 8.979099999999879e-05, 8.911099999999936e-05, 8.955599999999758e-05, 8.977799999999869e-05, 8.94450000000005e-05, 8.932000000000037e-05, 8.977800000000216e-05, 8.933300000000047e-05, 8.947200000000016e-05, 8.995800000000109e-05, 8.994400000000152e-05, 8.974999999999955e-05, 8.943000000000145e-05, 8.997200000000066e-05, 8.962499999999943e-05, 8.929200000000123e-05, 8.961099999999986e-05, 8.998600000000023e-05, 8.963799999999952e-05, 8.995900000000057e-05, 8.943100000000093e-05, 8.944400000000102e-05, 8.977700000000269e-05, 8.959700000000029e-05, 8.993099999999796e-05, 8.958300000000072e-05, 8.915299999999807e-05, 8.994499999999753e-05, 8.961099999999986e-05, 8.945900000000007e-05, 8.962499999999943e-05, 8.976399999999912e-05, 8.905500000000108e-05, 8.927700000000219e-05, 8.923599999999948e-05, 8.995799999999762e-05, 8.962499999999943e-05, 8.961099999999986e-05, 8.9945000000001e-05, 8.945900000000007e-05, 8.977799999999869e-05, 8.913799999999902e-05]</msg>
<status status="PASS" starttime="20201029 12:47:48.272" endtime="20201029 12:47:48.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.267" endtime="20201029 12:47:48.281"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:48.285" endtime="20201029 12:47:48.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.283" endtime="20201029 12:47:48.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.282" endtime="20201029 12:47:48.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.918" endtime="20201029 12:47:48.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.917" endtime="20201029 12:47:48.305"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.314" endtime="20201029 12:47:48.333"></status>
</kw>
<msg timestamp="20201029 12:47:48.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:48.312" endtime="20201029 12:47:48.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:48.335" endtime="20201029 12:47:48.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.337" endtime="20201029 12:47:48.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.310" endtime="20201029 12:47:48.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.308" endtime="20201029 12:47:48.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.346" endtime="20201029 12:47:48.631"></status>
</kw>
<msg timestamp="20201029 12:47:48.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021976306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022066486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:48.345" endtime="20201029 12:47:48.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021976306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022066486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:48.635" endtime="20201029 12:47:48.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.643" endtime="20201029 12:47:48.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.342" endtime="20201029 12:47:48.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.340" endtime="20201029 12:47:48.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:48.650" level="INFO">${RESULT} = [{'diff': 9.017999999999873e-05}, {'diff': 9.029199999999876e-05}, {'diff': 9.045900000000107e-05}, {'diff': 9.048600000000073e-05}, {'diff': 9.043099999999846e-05}, {'diff': 9.0945000000002e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:48.647" endtime="20201029 12:47:48.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:48.655" level="INFO">${ACCURACY} = {'diff': [9.017999999999873e-05, 9.029199999999876e-05, 9.045900000000107e-05, 9.048600000000073e-05, 9.043099999999846e-05, 9.0945000000002e-05, 9.012499999999993e-05, 9.077700000000022e-05, 9.011100...</msg>
<status status="PASS" starttime="20201029 12:47:48.651" endtime="20201029 12:47:48.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.660" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201029 12:47:48.659" endtime="20201029 12:47:48.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.663" level="INFO">VALUE: [9.017999999999873e-05, 9.029199999999876e-05, 9.045900000000107e-05, 9.048600000000073e-05, 9.043099999999846e-05, 9.0945000000002e-05, 9.012499999999993e-05, 9.077700000000022e-05, 9.011100000000036e-05, 9.011100000000036e-05, 9.056899999999868e-05, 9.095800000000209e-05, 9.034700000000104e-05, 9.045900000000107e-05, 9.008400000000069e-05, 9.093099999999896e-05, 9.090299999999982e-05, 9.011199999999983e-05, 9.043000000000245e-05, 9.061100000000086e-05, 9.061099999999739e-05, 9.065299999999957e-05, 9.077799999999969e-05, 9.061100000000086e-05, 9.05000000000003e-05, 9.009700000000079e-05, 9.04589999999976e-05, 9.052799999999944e-05, 9.077800000000316e-05, 9.029099999999929e-05, 9.062499999999696e-05, 9.011100000000036e-05, 9.054099999999954e-05, 9.019400000000177e-05, 9.061099999999739e-05, 9.011100000000036e-05, 9.077799999999969e-05, 9.026400000000309e-05, 9.012499999999993e-05, 9.011199999999983e-05, 9.076300000000065e-05, 9.094399999999905e-05, 9.062499999999696e-05, 9.027799999999919e-05, 9.080499999999936e-05, 9.027800000000266e-05, 9.08199999999984e-05, 9.029199999999876e-05, 9.009700000000079e-05, 9.011199999999983e-05]</msg>
<status status="PASS" starttime="20201029 12:47:48.661" endtime="20201029 12:47:48.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.656" endtime="20201029 12:47:48.664"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:48.668" endtime="20201029 12:47:48.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.666" endtime="20201029 12:47:48.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.665" endtime="20201029 12:47:48.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.306" endtime="20201029 12:47:48.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.306" endtime="20201029 12:47:48.689"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.698" endtime="20201029 12:47:48.717"></status>
</kw>
<msg timestamp="20201029 12:47:48.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:48.696" endtime="20201029 12:47:48.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:48.718" endtime="20201029 12:47:48.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.721" endtime="20201029 12:47:48.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.693" endtime="20201029 12:47:48.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.691" endtime="20201029 12:47:48.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.730" endtime="20201029 12:47:49.018"></status>
</kw>
<msg timestamp="20201029 12:47:49.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022053819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022145667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:48.728" endtime="20201029 12:47:49.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022053819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022145667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:49.022" endtime="20201029 12:47:49.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.030" endtime="20201029 12:47:49.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.726" endtime="20201029 12:47:49.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.724" endtime="20201029 12:47:49.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:49.037" level="INFO">${RESULT} = [{'diff': 9.184800000000201e-05}, {'diff': 9.111099999999789e-05}, {'diff': 9.199999999999833e-05}, {'diff': 9.177700000000122e-05}, {'diff': 9.177799999999722e-05}, {'diff': 9.120799999999887e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:49.033" endtime="20201029 12:47:49.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:49.041" level="INFO">${ACCURACY} = {'diff': [9.184800000000201e-05, 9.111099999999789e-05, 9.199999999999833e-05, 9.177700000000122e-05, 9.177799999999722e-05, 9.120799999999887e-05, 9.176400000000112e-05, 9.195799999999962e-05, 9.1124...</msg>
<status status="PASS" starttime="20201029 12:47:49.037" endtime="20201029 12:47:49.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.045" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201029 12:47:49.044" endtime="20201029 12:47:49.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.048" level="INFO">VALUE: [9.184800000000201e-05, 9.111099999999789e-05, 9.199999999999833e-05, 9.177700000000122e-05, 9.177799999999722e-05, 9.120799999999887e-05, 9.176400000000112e-05, 9.195799999999962e-05, 9.112499999999746e-05, 9.168000000000023e-05, 9.129199999999976e-05, 9.145900000000207e-05, 9.143099999999946e-05, 9.195799999999962e-05, 9.129100000000029e-05, 9.179100000000079e-05, 9.126400000000062e-05, 9.109699999999832e-05, 9.18199999999994e-05, 9.179200000000026e-05, 9.124999999999758e-05, 9.181899999999993e-05, 9.177800000000069e-05, 9.143100000000293e-05, 9.112500000000093e-05, 9.162499999999796e-05, 9.144399999999955e-05, 9.159700000000229e-05, 9.148599999999826e-05, 9.180599999999983e-05, 9.158300000000272e-05, 9.127800000000019e-05, 9.112500000000093e-05, 9.182000000000287e-05, 9.162500000000143e-05, 9.125000000000105e-05, 9.129100000000029e-05, 9.144399999999955e-05, 9.144399999999955e-05, 9.127800000000019e-05, 9.194400000000005e-05, 9.145799999999912e-05, 9.14589999999986e-05, 9.175000000000155e-05, 9.111099999999789e-05, 9.131899999999943e-05, 9.111100000000136e-05, 9.194400000000005e-05, 9.111099999999789e-05, 9.144400000000302e-05]</msg>
<status status="PASS" starttime="20201029 12:47:49.046" endtime="20201029 12:47:49.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.041" endtime="20201029 12:47:49.049"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:49.052" endtime="20201029 12:47:49.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.051" endtime="20201029 12:47:49.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.050" endtime="20201029 12:47:49.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.690" endtime="20201029 12:47:49.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.689" endtime="20201029 12:47:49.073"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.082" endtime="20201029 12:47:49.101"></status>
</kw>
<msg timestamp="20201029 12:47:49.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:49.080" endtime="20201029 12:47:49.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:49.103" endtime="20201029 12:47:49.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.105" endtime="20201029 12:47:49.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.078" endtime="20201029 12:47:49.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.076" endtime="20201029 12:47:49.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.114" endtime="20201029 12:47:49.400"></status>
</kw>
<msg timestamp="20201029 12:47:49.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022934097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023027097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:49.112" endtime="20201029 12:47:49.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022934097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023027097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:49.404" endtime="20201029 12:47:49.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.412" endtime="20201029 12:47:49.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.110" endtime="20201029 12:47:49.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.108" endtime="20201029 12:47:49.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:49.419" level="INFO">${RESULT} = [{'diff': 9.299999999999933e-05}, {'diff': 9.277799999999822e-05}, {'diff': 9.229200000000076e-05}, {'diff': 9.229200000000076e-05}, {'diff': 9.277799999999822e-05}, {'diff': 9.29590000000001e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:49.416" endtime="20201029 12:47:49.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:49.423" level="INFO">${ACCURACY} = {'diff': [9.299999999999933e-05, 9.277799999999822e-05, 9.229200000000076e-05, 9.229200000000076e-05, 9.277799999999822e-05, 9.29590000000001e-05, 9.244500000000003e-05, 9.273599999999951e-05, 9.26109...</msg>
<status status="PASS" starttime="20201029 12:47:49.420" endtime="20201029 12:47:49.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.427" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201029 12:47:49.426" endtime="20201029 12:47:49.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.430" level="INFO">VALUE: [9.299999999999933e-05, 9.277799999999822e-05, 9.229200000000076e-05, 9.229200000000076e-05, 9.277799999999822e-05, 9.29590000000001e-05, 9.244500000000003e-05, 9.273599999999951e-05, 9.261099999999939e-05, 9.249999999999883e-05, 9.241599999999794e-05, 9.212500000000193e-05, 9.276399999999865e-05, 9.209699999999932e-05, 9.211099999999889e-05, 9.229199999999729e-05, 9.227799999999772e-05, 9.24589999999996e-05, 9.211099999999889e-05, 9.258300000000025e-05, 9.295800000000062e-05, 9.211100000000236e-05, 9.261099999999939e-05, 9.263899999999853e-05, 9.263899999999853e-05, 9.276400000000212e-05, 9.211100000000236e-05, 9.211099999999889e-05, 9.259799999999929e-05, 9.290200000000234e-05, 9.211099999999889e-05, 9.211099999999889e-05, 9.227800000000119e-05, 9.208299999999975e-05, 9.279200000000126e-05, 9.276399999999865e-05, 9.2639000000002e-05, 9.257000000000015e-05, 9.244500000000003e-05, 9.259799999999929e-05, 9.21390000000015e-05, 9.294400000000105e-05, 9.254200000000101e-05, 9.202800000000094e-05, 9.244400000000055e-05, 9.280599999999736e-05, 9.226400000000162e-05, 9.261099999999939e-05, 9.249999999999883e-05, 9.29590000000001e-05]</msg>
<status status="PASS" starttime="20201029 12:47:49.428" endtime="20201029 12:47:49.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.424" endtime="20201029 12:47:49.432"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:49.436" endtime="20201029 12:47:49.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.434" endtime="20201029 12:47:49.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.433" endtime="20201029 12:47:49.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.074" endtime="20201029 12:47:49.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.074" endtime="20201029 12:47:49.456"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.465" endtime="20201029 12:47:49.484"></status>
</kw>
<msg timestamp="20201029 12:47:49.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:49.463" endtime="20201029 12:47:49.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:49.485" endtime="20201029 12:47:49.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.488" endtime="20201029 12:47:49.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.461" endtime="20201029 12:47:49.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.459" endtime="20201029 12:47:49.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.497" endtime="20201029 12:47:49.782"></status>
</kw>
<msg timestamp="20201029 12:47:49.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021872111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021965639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:49.495" endtime="20201029 12:47:49.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021872111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021965639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:49.786" endtime="20201029 12:47:49.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.794" endtime="20201029 12:47:49.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.493" endtime="20201029 12:47:49.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.491" endtime="20201029 12:47:49.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:49.801" level="INFO">${RESULT} = [{'diff': 9.352799999999897e-05}, {'diff': 9.327799999999872e-05}, {'diff': 9.344500000000103e-05}, {'diff': 9.359700000000082e-05}, {'diff': 9.34590000000006e-05}, {'diff': 9.326399999999915e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:49.798" endtime="20201029 12:47:49.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:49.806" level="INFO">${ACCURACY} = {'diff': [9.352799999999897e-05, 9.327799999999872e-05, 9.344500000000103e-05, 9.359700000000082e-05, 9.34590000000006e-05, 9.326399999999915e-05, 9.345800000000112e-05, 9.361100000000039e-05, 9.37910...</msg>
<status status="PASS" starttime="20201029 12:47:49.802" endtime="20201029 12:47:49.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.810" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201029 12:47:49.809" endtime="20201029 12:47:49.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.813" level="INFO">VALUE: [9.352799999999897e-05, 9.327799999999872e-05, 9.344500000000103e-05, 9.359700000000082e-05, 9.34590000000006e-05, 9.326399999999915e-05, 9.345800000000112e-05, 9.361100000000039e-05, 9.379100000000279e-05, 9.312499999999946e-05, 9.395799999999815e-05, 9.384800000000054e-05, 9.311099999999989e-05, 9.394499999999806e-05, 9.369399999999833e-05, 9.311099999999989e-05, 9.363899999999953e-05, 9.326299999999968e-05, 9.327700000000272e-05, 9.370800000000137e-05, 9.361100000000039e-05, 9.361100000000039e-05, 9.343100000000146e-05, 9.330600000000133e-05, 9.343100000000146e-05, 9.40139999999999e-05, 9.329199999999829e-05, 9.393100000000196e-05, 9.361099999999692e-05, 9.327699999999925e-05, 9.329199999999829e-05, 9.395799999999815e-05, 9.356900000000168e-05, 9.311099999999989e-05, 9.326399999999915e-05, 9.344500000000103e-05, 9.394500000000153e-05, 9.361199999999986e-05, 9.394399999999858e-05, 9.377699999999975e-05, 9.380499999999889e-05, 9.311099999999989e-05, 9.341700000000189e-05, 9.311099999999989e-05, 9.377799999999922e-05, 9.365199999999962e-05, 9.377799999999922e-05, 9.330499999999839e-05, 9.359800000000029e-05, 9.394400000000205e-05]</msg>
<status status="PASS" starttime="20201029 12:47:49.811" endtime="20201029 12:47:49.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.807" endtime="20201029 12:47:49.814"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:49.817" endtime="20201029 12:47:49.837"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.816" endtime="20201029 12:47:49.837"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.815" endtime="20201029 12:47:49.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.457" endtime="20201029 12:47:49.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.457" endtime="20201029 12:47:49.838"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.847" endtime="20201029 12:47:49.867"></status>
</kw>
<msg timestamp="20201029 12:47:49.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:49.845" endtime="20201029 12:47:49.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:49.868" endtime="20201029 12:47:49.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.871" endtime="20201029 12:47:49.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.843" endtime="20201029 12:47:49.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.840" endtime="20201029 12:47:49.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.880" endtime="20201029 12:47:50.166"></status>
</kw>
<msg timestamp="20201029 12:47:50.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022480292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022575014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:49.878" endtime="20201029 12:47:50.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022480292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022575014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:50.170" endtime="20201029 12:47:50.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.179" endtime="20201029 12:47:50.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.876" endtime="20201029 12:47:50.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.874" endtime="20201029 12:47:50.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:50.185" level="INFO">${RESULT} = [{'diff': 9.472200000000194e-05}, {'diff': 9.445799999999865e-05}, {'diff': 9.412500000000046e-05}, {'diff': 9.498700000000124e-05}, {'diff': 9.462499999999749e-05}, {'diff': 9.426400000000015e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:50.182" endtime="20201029 12:47:50.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:50.189" level="INFO">${ACCURACY} = {'diff': [9.472200000000194e-05, 9.445799999999865e-05, 9.412500000000046e-05, 9.498700000000124e-05, 9.462499999999749e-05, 9.426400000000015e-05, 9.459799999999782e-05, 9.411200000000036e-05, 9.4304...</msg>
<status status="PASS" starttime="20201029 12:47:50.186" endtime="20201029 12:47:50.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.194" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201029 12:47:50.193" endtime="20201029 12:47:50.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.196" level="INFO">VALUE: [9.472200000000194e-05, 9.445799999999865e-05, 9.412500000000046e-05, 9.498700000000124e-05, 9.462499999999749e-05, 9.426400000000015e-05, 9.459799999999782e-05, 9.411200000000036e-05, 9.430499999999939e-05, 9.429099999999982e-05, 9.461099999999792e-05, 9.476400000000065e-05, 9.429200000000276e-05, 9.411100000000089e-05, 9.461100000000139e-05, 9.407000000000165e-05, 9.41659999999997e-05, 9.411099999999742e-05, 9.444500000000203e-05, 9.495799999999915e-05, 9.427700000000025e-05, 9.427799999999972e-05, 9.495800000000262e-05, 9.462499999999749e-05, 9.427799999999972e-05, 9.459699999999835e-05, 9.477800000000022e-05, 9.49859999999983e-05, 9.427799999999972e-05, 9.444399999999908e-05, 9.409700000000132e-05, 9.411100000000089e-05, 9.462500000000096e-05, 9.494399999999958e-05, 9.494399999999958e-05, 9.412500000000046e-05, 9.448600000000126e-05, 9.465199999999716e-05, 9.411100000000089e-05, 9.459799999999782e-05, 9.411100000000089e-05, 9.427799999999972e-05, 9.412499999999699e-05, 9.475000000000108e-05, 9.459699999999835e-05, 9.479199999999979e-05, 9.443100000000246e-05, 9.456999999999868e-05, 9.475000000000108e-05, 9.443099999999899e-05]</msg>
<status status="PASS" starttime="20201029 12:47:50.195" endtime="20201029 12:47:50.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.190" endtime="20201029 12:47:50.198"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:50.201" endtime="20201029 12:47:50.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.200" endtime="20201029 12:47:50.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.198" endtime="20201029 12:47:50.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.839" endtime="20201029 12:47:50.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.838" endtime="20201029 12:47:50.222"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.230" endtime="20201029 12:47:50.252"></status>
</kw>
<msg timestamp="20201029 12:47:50.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:50.229" endtime="20201029 12:47:50.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:50.254" endtime="20201029 12:47:50.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.256" endtime="20201029 12:47:50.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.226" endtime="20201029 12:47:50.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.224" endtime="20201029 12:47:50.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.265" endtime="20201029 12:47:50.549"></status>
</kw>
<msg timestamp="20201029 12:47:50.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025398292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025493986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:50.264" endtime="20201029 12:47:50.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025398292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025493986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:50.553" endtime="20201029 12:47:50.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.561" endtime="20201029 12:47:50.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.261" endtime="20201029 12:47:50.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.260" endtime="20201029 12:47:50.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:50.568" level="INFO">${RESULT} = [{'diff': 9.569400000000033e-05}, {'diff': 9.527800000000072e-05}, {'diff': 9.576399999999818e-05}, {'diff': 9.545799999999965e-05}, {'diff': 9.577800000000122e-05}, {'diff': 9.562500000000196e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:50.565" endtime="20201029 12:47:50.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:50.572" level="INFO">${ACCURACY} = {'diff': [9.569400000000033e-05, 9.527800000000072e-05, 9.576399999999818e-05, 9.545799999999965e-05, 9.577800000000122e-05, 9.562500000000196e-05, 9.509800000000179e-05, 9.561200000000186e-05, 9.5097...</msg>
<status status="PASS" starttime="20201029 12:47:50.569" endtime="20201029 12:47:50.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.576" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201029 12:47:50.575" endtime="20201029 12:47:50.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.579" level="INFO">VALUE: [9.569400000000033e-05, 9.527800000000072e-05, 9.576399999999818e-05, 9.545799999999965e-05, 9.577800000000122e-05, 9.562500000000196e-05, 9.509800000000179e-05, 9.561200000000186e-05, 9.509700000000232e-05, 9.579099999999785e-05, 9.580499999999742e-05, 9.579200000000079e-05, 9.527799999999725e-05, 9.595800000000015e-05, 9.561100000000239e-05, 9.509700000000232e-05, 9.511100000000189e-05, 9.562500000000196e-05, 9.594400000000058e-05, 9.55270000000015e-05, 9.563899999999806e-05, 9.544400000000008e-05, 9.561099999999892e-05, 9.547199999999922e-05, 9.580600000000036e-05, 9.527799999999725e-05, 9.513900000000103e-05, 9.509800000000179e-05, 9.538900000000128e-05, 9.580499999999742e-05, 9.594400000000058e-05, 9.519499999999931e-05, 9.593000000000101e-05, 9.563900000000153e-05, 9.562500000000196e-05, 9.540300000000085e-05, 9.527800000000072e-05, 9.526400000000115e-05, 9.530500000000039e-05, 9.594500000000006e-05, 9.594400000000058e-05, 9.594399999999711e-05, 9.561099999999892e-05, 9.527800000000072e-05, 9.579200000000079e-05, 9.579200000000079e-05, 9.598699999999877e-05, 9.579200000000079e-05, 9.594500000000006e-05, 9.561199999999839e-05]</msg>
<status status="PASS" starttime="20201029 12:47:50.577" endtime="20201029 12:47:50.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.573" endtime="20201029 12:47:50.625"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:50.629" endtime="20201029 12:47:50.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.627" endtime="20201029 12:47:50.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.626" endtime="20201029 12:47:50.652"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.223" endtime="20201029 12:47:50.652"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.222" endtime="20201029 12:47:50.652"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.666" endtime="20201029 12:47:50.685"></status>
</kw>
<msg timestamp="20201029 12:47:50.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:50.664" endtime="20201029 12:47:50.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:50.687" endtime="20201029 12:47:50.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.690" endtime="20201029 12:47:50.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.662" endtime="20201029 12:47:50.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.659" endtime="20201029 12:47:50.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.700" endtime="20201029 12:47:50.986"></status>
</kw>
<msg timestamp="20201029 12:47:50.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029768819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029865653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:50.699" endtime="20201029 12:47:50.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029768819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029865653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:50.991" endtime="20201029 12:47:50.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.999" endtime="20201029 12:47:51.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.696" endtime="20201029 12:47:51.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.694" endtime="20201029 12:47:51.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:51.007" level="INFO">${RESULT} = [{'diff': 9.68340000000005e-05}, {'diff': 9.612499999999899e-05}, {'diff': 9.608399999999975e-05}, {'diff': 9.612499999999899e-05}, {'diff': 9.611099999999942e-05}, {'diff': 9.677699999999928e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:51.003" endtime="20201029 12:47:51.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:51.011" level="INFO">${ACCURACY} = {'diff': [9.68340000000005e-05, 9.612499999999899e-05, 9.608399999999975e-05, 9.612499999999899e-05, 9.611099999999942e-05, 9.677699999999928e-05, 9.676399999999918e-05, 9.612499999999899e-05, 9.62779...</msg>
<status status="PASS" starttime="20201029 12:47:51.008" endtime="20201029 12:47:51.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.016" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201029 12:47:51.014" endtime="20201029 12:47:51.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.018" level="INFO">VALUE: [9.68340000000005e-05, 9.612499999999899e-05, 9.608399999999975e-05, 9.612499999999899e-05, 9.611099999999942e-05, 9.677699999999928e-05, 9.676399999999918e-05, 9.612499999999899e-05, 9.627799999999825e-05, 9.643100000000099e-05, 9.612499999999899e-05, 9.659799999999982e-05, 9.695900000000063e-05, 9.609799999999932e-05, 9.661099999999992e-05, 9.644400000000108e-05, 9.612499999999552e-05, 9.618100000000074e-05, 9.666700000000167e-05, 9.694400000000158e-05, 9.680600000000483e-05, 9.680600000000483e-05, 9.694500000000106e-05, 9.659800000000329e-05, 9.641600000000194e-05, 9.694400000000158e-05, 9.629099999999835e-05, 9.611100000000289e-05, 9.627799999999825e-05, 9.661099999999645e-05, 9.694500000000106e-05, 9.627800000000519e-05, 9.679199999999832e-05, 9.674999999999961e-05, 9.627800000000519e-05, 9.687500000000321e-05, 9.669500000000081e-05, 9.609700000000332e-05, 9.624999999999911e-05, 9.68059999999979e-05, 9.679200000000526e-05, 9.662499999999602e-05, 9.644500000000056e-05, 9.613800000000255e-05, 9.612499999999552e-05, 9.651399999999893e-05, 9.609699999999638e-05, 9.697200000000072e-05, 9.629199999999782e-05, 9.626399999999868e-05]</msg>
<status status="PASS" starttime="20201029 12:47:51.017" endtime="20201029 12:47:51.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.012" endtime="20201029 12:47:51.019"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:51.023" endtime="20201029 12:47:51.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.022" endtime="20201029 12:47:51.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.020" endtime="20201029 12:47:51.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.653" endtime="20201029 12:47:51.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.653" endtime="20201029 12:47:51.044"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.053" endtime="20201029 12:47:51.072"></status>
</kw>
<msg timestamp="20201029 12:47:51.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:51.051" endtime="20201029 12:47:51.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:51.074" endtime="20201029 12:47:51.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.076" endtime="20201029 12:47:51.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.049" endtime="20201029 12:47:51.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.046" endtime="20201029 12:47:51.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.086" endtime="20201029 12:47:51.391"></status>
</kw>
<msg timestamp="20201029 12:47:51.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023099111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023196278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:51.084" endtime="20201029 12:47:51.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023099111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023196278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:51.395" endtime="20201029 12:47:51.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.403" endtime="20201029 12:47:51.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.081" endtime="20201029 12:47:51.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.080" endtime="20201029 12:47:51.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:51.410" level="INFO">${RESULT} = [{'diff': 9.716700000000217e-05}, {'diff': 9.776400000000018e-05}, {'diff': 9.745899999999766e-05}, {'diff': 9.747199999999775e-05}, {'diff': 9.727699999999978e-05}, {'diff': 9.794399999999912e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:51.407" endtime="20201029 12:47:51.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:51.415" level="INFO">${ACCURACY} = {'diff': [9.716700000000217e-05, 9.776400000000018e-05, 9.745899999999766e-05, 9.747199999999775e-05, 9.727699999999978e-05, 9.794399999999912e-05, 9.761100000000092e-05, 9.743000000000251e-05, 9.7430...</msg>
<status status="PASS" starttime="20201029 12:47:51.411" endtime="20201029 12:47:51.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.419" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201029 12:47:51.418" endtime="20201029 12:47:51.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.422" level="INFO">VALUE: [9.716700000000217e-05, 9.776400000000018e-05, 9.745899999999766e-05, 9.747199999999775e-05, 9.727699999999978e-05, 9.794399999999912e-05, 9.761100000000092e-05, 9.743000000000251e-05, 9.743099999999852e-05, 9.777799999999975e-05, 9.745900000000113e-05, 9.727800000000272e-05, 9.729199999999882e-05, 9.777799999999975e-05, 9.727699999999978e-05, 9.779099999999985e-05, 9.777799999999975e-05, 9.761099999999745e-05, 9.712499999999999e-05, 9.711100000000042e-05, 9.794499999999859e-05, 9.709700000000085e-05, 9.743100000000199e-05, 9.772299999999748e-05, 9.742999999999905e-05, 9.777799999999975e-05, 9.761100000000092e-05, 9.795799999999869e-05, 9.744400000000208e-05, 9.722200000000097e-05, 9.711100000000042e-05, 9.744500000000156e-05, 9.763800000000059e-05, 9.797200000000172e-05, 9.729100000000282e-05, 9.744399999999862e-05, 9.744399999999862e-05, 9.744400000000208e-05, 9.755499999999917e-05, 9.71799999999988e-05, 9.711100000000042e-05, 9.794499999999859e-05, 9.715199999999966e-05, 9.72920000000023e-05, 9.777800000000322e-05, 9.727699999999978e-05, 9.727699999999978e-05, 9.711100000000042e-05, 9.719399999999837e-05, 9.793099999999902e-05]</msg>
<status status="PASS" starttime="20201029 12:47:51.420" endtime="20201029 12:47:51.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.415" endtime="20201029 12:47:51.424"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:51.428" endtime="20201029 12:47:51.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.426" endtime="20201029 12:47:51.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.425" endtime="20201029 12:47:51.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.045" endtime="20201029 12:47:51.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.044" endtime="20201029 12:47:51.448"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.457" endtime="20201029 12:47:51.477"></status>
</kw>
<msg timestamp="20201029 12:47:51.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:51.456" endtime="20201029 12:47:51.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:51.478" endtime="20201029 12:47:51.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.481" endtime="20201029 12:47:51.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.453" endtime="20201029 12:47:51.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.451" endtime="20201029 12:47:51.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.490" endtime="20201029 12:47:51.777"></status>
</kw>
<msg timestamp="20201029 12:47:51.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022522569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022621417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:51.489" endtime="20201029 12:47:51.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022522569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022621417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:51.781" endtime="20201029 12:47:51.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.790" endtime="20201029 12:47:51.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.486" endtime="20201029 12:47:51.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.484" endtime="20201029 12:47:51.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:51.796" level="INFO">${RESULT} = [{'diff': 9.884800000000207e-05}, {'diff': 9.812500000000099e-05}, {'diff': 9.859799999999835e-05}, {'diff': 9.897199999999926e-05}, {'diff': 9.830499999999992e-05}, {'diff': 9.859700000000235e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:51.793" endtime="20201029 12:47:51.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:51.801" level="INFO">${ACCURACY} = {'diff': [9.884800000000207e-05, 9.812500000000099e-05, 9.859799999999835e-05, 9.897199999999926e-05, 9.830499999999992e-05, 9.859700000000235e-05, 9.806899999999924e-05, 9.861100000000192e-05, 9.8445...</msg>
<status status="PASS" starttime="20201029 12:47:51.797" endtime="20201029 12:47:51.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.806" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201029 12:47:51.805" endtime="20201029 12:47:51.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.809" level="INFO">VALUE: [9.884800000000207e-05, 9.812500000000099e-05, 9.859799999999835e-05, 9.897199999999926e-05, 9.830499999999992e-05, 9.859700000000235e-05, 9.806899999999924e-05, 9.861100000000192e-05, 9.844500000000256e-05, 9.829199999999982e-05, 9.845900000000213e-05, 9.811100000000142e-05, 9.829100000000035e-05, 9.876300000000171e-05, 9.811100000000142e-05, 9.827800000000025e-05, 9.829199999999982e-05, 9.863900000000106e-05, 9.862500000000149e-05, 9.876400000000118e-05, 9.863900000000106e-05, 9.830499999999992e-05, 9.894499999999959e-05, 9.894400000000012e-05, 9.880500000000042e-05, 9.872200000000247e-05, 9.829199999999982e-05, 9.812500000000099e-05, 9.879200000000032e-05, 9.827800000000025e-05, 9.826400000000068e-05, 9.859799999999835e-05, 9.862500000000149e-05, 9.844399999999962e-05, 9.811100000000142e-05, 9.845800000000265e-05, 9.829199999999982e-05, 9.900000000000186e-05, 9.895900000000263e-05, 9.844499999999909e-05, 9.811099999999795e-05, 9.812500000000099e-05, 9.811199999999742e-05, 9.811100000000142e-05, 9.862500000000149e-05, 9.811099999999795e-05, 9.829199999999982e-05, 9.862499999999802e-05, 9.806899999999924e-05, 9.844499999999909e-05]</msg>
<status status="PASS" starttime="20201029 12:47:51.807" endtime="20201029 12:47:51.809"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.802" endtime="20201029 12:47:51.810"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:51.814" endtime="20201029 12:47:51.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.812" endtime="20201029 12:47:51.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.811" endtime="20201029 12:47:51.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.449" endtime="20201029 12:47:51.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.449" endtime="20201029 12:47:51.835"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.844" endtime="20201029 12:47:51.863"></status>
</kw>
<msg timestamp="20201029 12:47:51.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:51.842" endtime="20201029 12:47:51.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:51.865" endtime="20201029 12:47:51.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.868" endtime="20201029 12:47:51.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.839" endtime="20201029 12:47:51.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.837" endtime="20201029 12:47:51.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.877" endtime="20201029 12:47:52.164"></status>
</kw>
<msg timestamp="20201029 12:47:52.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022520167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022619667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:51.875" endtime="20201029 12:47:52.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022520167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022619667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:52.168" endtime="20201029 12:47:52.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.177" endtime="20201029 12:47:52.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.873" endtime="20201029 12:47:52.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.871" endtime="20201029 12:47:52.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:52.184" level="INFO">${RESULT} = [{'diff': 9.94999999999989e-05}, {'diff': 9.976399999999871e-05}, {'diff': 9.911100000000242e-05}, {'diff': 9.994400000000112e-05}, {'diff': 9.930500000000092e-05}, {'diff': 9.929200000000082e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:52.180" endtime="20201029 12:47:52.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:52.188" level="INFO">${ACCURACY} = {'diff': [9.94999999999989e-05, 9.976399999999871e-05, 9.911100000000242e-05, 9.994400000000112e-05, 9.930500000000092e-05, 9.929200000000082e-05, 9.961099999999945e-05, 9.944400000000062e-05, 9.94590...</msg>
<status status="PASS" starttime="20201029 12:47:52.185" endtime="20201029 12:47:52.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.193" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201029 12:47:52.191" endtime="20201029 12:47:52.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.195" level="INFO">VALUE: [9.94999999999989e-05, 9.976399999999871e-05, 9.911100000000242e-05, 9.994400000000112e-05, 9.930500000000092e-05, 9.929200000000082e-05, 9.961099999999945e-05, 9.944400000000062e-05, 9.945900000000313e-05, 9.937500000000224e-05, 9.923699999999855e-05, 9.912500000000199e-05, 9.943000000000105e-05, 9.929099999999788e-05, 9.990299999999841e-05, 9.944400000000062e-05, 9.994400000000112e-05, 9.912499999999852e-05, 9.95419999999976e-05, 9.961099999999945e-05, 9.916599999999776e-05, 9.929099999999788e-05, 9.979099999999838e-05, 9.927700000000178e-05, 9.962500000000249e-05, 9.961100000000292e-05, 9.941700000000095e-05, 9.927800000000125e-05, 9.961099999999945e-05, 9.911099999999895e-05, 9.941700000000095e-05, 9.958399999999978e-05, 9.963899999999859e-05, 9.979100000000185e-05, 9.976400000000218e-05, 9.977800000000175e-05, 9.98060000000009e-05, 9.961099999999945e-05, 9.927800000000125e-05, 9.974999999999914e-05, 9.961100000000292e-05, 9.945800000000019e-05, 9.9722e-05, 9.931900000000049e-05, 9.979100000000185e-05, 9.977799999999828e-05, 9.995800000000069e-05, 9.98060000000009e-05, 9.961099999999945e-05, 9.961100000000292e-05]</msg>
<status status="PASS" starttime="20201029 12:47:52.194" endtime="20201029 12:47:52.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.189" endtime="20201029 12:47:52.197"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:52.200" endtime="20201029 12:47:52.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.199" endtime="20201029 12:47:52.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.198" endtime="20201029 12:47:52.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.836" endtime="20201029 12:47:52.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.835" endtime="20201029 12:47:52.221"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.230" endtime="20201029 12:47:52.250"></status>
</kw>
<msg timestamp="20201029 12:47:52.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:52.228" endtime="20201029 12:47:52.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:52.251" endtime="20201029 12:47:52.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.254" endtime="20201029 12:47:52.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.226" endtime="20201029 12:47:52.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.223" endtime="20201029 12:47:52.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.263" endtime="20201029 12:47:52.549"></status>
</kw>
<msg timestamp="20201029 12:47:52.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023318014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023419083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:52.262" endtime="20201029 12:47:52.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023318014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023419083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:52.553" endtime="20201029 12:47:52.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.561" endtime="20201029 12:47:52.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.259" endtime="20201029 12:47:52.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.257" endtime="20201029 12:47:52.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:52.568" level="INFO">${RESULT} = [{'diff': 0.00010106899999999877}, {'diff': 0.00010079199999999885}, {'diff': 0.00010045899999999719}, {'diff': 0.00010079199999999885}, {'diff': 0.00010027699999999931}, {'diff': 0.000100611000000000...</msg>
<status status="PASS" starttime="20201029 12:47:52.565" endtime="20201029 12:47:52.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:52.572" level="INFO">${ACCURACY} = {'diff': [0.00010106899999999877, 0.00010079199999999885, 0.00010045899999999719, 0.00010079199999999885, 0.00010027699999999931, 0.00010061100000000045, 0.00010094400000000212, 0.00010044399999999815...</msg>
<status status="PASS" starttime="20201029 12:47:52.569" endtime="20201029 12:47:52.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.577" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201029 12:47:52.576" endtime="20201029 12:47:52.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.580" level="INFO">VALUE: [0.00010106899999999877, 0.00010079199999999885, 0.00010045899999999719, 0.00010079199999999885, 0.00010027699999999931, 0.00010061100000000045, 0.00010094400000000212, 0.00010044399999999815, 0.00010097200000000126, 0.00010027799999999878, 0.00010026399999999921, 0.00010009799999999985, 0.00010044500000000109, 0.00010069500000000134, 0.00010009700000000038, 0.00010027699999999931, 0.00010012499999999952, 0.00010062500000000002, 0.00010093099999999855, 0.00010027799999999878, 0.00010027800000000225, 0.00010045900000000066, 0.00010029099999999888, 0.00010047200000000076, 0.00010062500000000002, 0.00010094399999999865, 0.00010075000000000014, 0.0001005280000000025, 0.00010076399999999971, 0.00010094500000000159, 0.00010012499999999952, 0.00010077799999999928, 0.00010097199999999779, 0.00010044400000000162, 0.00010045800000000119, 0.00010044400000000162, 0.00010044400000000162, 0.00010059700000000088, 0.00010045799999999772, 0.00010027800000000225, 0.00010044500000000109, 0.00010013799999999962, 0.00010011199999999942, 0.00010029099999999888, 0.00010027799999999878, 0.00010011099999999995, 0.00010061100000000045, 0.00010094399999999865, 0.00010012499999999952, 0.00010062500000000002]</msg>
<status status="PASS" starttime="20201029 12:47:52.578" endtime="20201029 12:47:52.581"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.573" endtime="20201029 12:47:52.581"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:52.585" endtime="20201029 12:47:52.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.584" endtime="20201029 12:47:52.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.583" endtime="20201029 12:47:52.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.222" endtime="20201029 12:47:52.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.221" endtime="20201029 12:47:52.606"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.616" endtime="20201029 12:47:52.637"></status>
</kw>
<msg timestamp="20201029 12:47:52.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:52.614" endtime="20201029 12:47:52.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:52.638" endtime="20201029 12:47:52.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.641" endtime="20201029 12:47:52.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.611" endtime="20201029 12:47:52.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.609" endtime="20201029 12:47:52.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.650" endtime="20201029 12:47:52.936"></status>
</kw>
<msg timestamp="20201029 12:47:52.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024279111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024380958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:52.648" endtime="20201029 12:47:52.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024279111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024380958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:52.940" endtime="20201029 12:47:52.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.948" endtime="20201029 12:47:52.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.646" endtime="20201029 12:47:52.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.644" endtime="20201029 12:47:52.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:52.955" level="INFO">${RESULT} = [{'diff': 0.00010184700000000213}, {'diff': 0.00010194399999999965}, {'diff': 0.00010111100000000095}, {'diff': 0.0001015000000000009}, {'diff': 0.00010112500000000052}, {'diff': 0.0001012779999999997...</msg>
<status status="PASS" starttime="20201029 12:47:52.951" endtime="20201029 12:47:52.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:52.960" level="INFO">${ACCURACY} = {'diff': [0.00010184700000000213, 0.00010194399999999965, 0.00010111100000000095, 0.0001015000000000009, 0.00010112500000000052, 0.00010127799999999978, 0.00010193100000000302, 0.00010140299999999991,...</msg>
<status status="PASS" starttime="20201029 12:47:52.956" endtime="20201029 12:47:52.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.964" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201029 12:47:52.963" endtime="20201029 12:47:52.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.967" level="INFO">VALUE: [0.00010184700000000213, 0.00010194399999999965, 0.00010111100000000095, 0.0001015000000000009, 0.00010112500000000052, 0.00010127799999999978, 0.00010193100000000302, 0.00010140299999999991, 0.00010111199999999695, 0.00010127700000000031, 0.00010111100000000095, 0.00010113900000000009, 0.00010140299999999991, 0.00010161099999999798, 0.00010112500000000052, 0.00010144499999999862, 0.00010145899999999819, 0.00010177800000000028, 0.00010112499999999705, 0.00010111100000000095, 0.00010177700000000081, 0.00010126400000000021, 0.00010194399999999965, 0.00010179199999999985, 0.00010163900000000059, 0.00010161100000000145, 0.00010161099999999798, 0.00010129199999999935, 0.00010191699999999998, 0.00010190200000000094, 0.00010193000000000008, 0.00010143000000000305, 0.00010198600000000183, 0.00010129199999999935, 0.00010111100000000095, 0.00010126400000000021, 0.00010145900000000166, 0.00010161100000000145, 0.00010194500000000259, 0.00010161100000000145, 0.00010111100000000095, 0.00010111099999999748, 0.00010177800000000028, 0.00010112500000000052, 0.00010179199999999985, 0.00010126400000000021, 0.00010165200000000069, 0.00010112500000000052, 0.00010166699999999973, 0.00010144400000000262]</msg>
<status status="PASS" starttime="20201029 12:47:52.966" endtime="20201029 12:47:52.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.961" endtime="20201029 12:47:52.968"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:52.972" endtime="20201029 12:47:52.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.970" endtime="20201029 12:47:52.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.969" endtime="20201029 12:47:52.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.607" endtime="20201029 12:47:52.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.606" endtime="20201029 12:47:52.993"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.002" endtime="20201029 12:47:53.022"></status>
</kw>
<msg timestamp="20201029 12:47:53.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:53.000" endtime="20201029 12:47:53.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:53.024" endtime="20201029 12:47:53.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.026" endtime="20201029 12:47:53.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.998" endtime="20201029 12:47:53.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.995" endtime="20201029 12:47:53.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.036" endtime="20201029 12:47:53.322"></status>
</kw>
<msg timestamp="20201029 12:47:53.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022711778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022814764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:53.034" endtime="20201029 12:47:53.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022711778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022814764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:53.327" endtime="20201029 12:47:53.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.335" endtime="20201029 12:47:53.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.031" endtime="20201029 12:47:53.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.030" endtime="20201029 12:47:53.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:53.341" level="INFO">${RESULT} = [{'diff': 0.00010298600000000283}, {'diff': 0.00010226399999999775}, {'diff': 0.00010283300000000009}, {'diff': 0.00010295899999999969}, {'diff': 0.00010281899999999705}, {'diff': 0.000102138999999997...</msg>
<status status="PASS" starttime="20201029 12:47:53.338" endtime="20201029 12:47:53.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:53.346" level="INFO">${ACCURACY} = {'diff': [0.00010298600000000283, 0.00010226399999999775, 0.00010283300000000009, 0.00010295899999999969, 0.00010281899999999705, 0.00010213899999999762, 0.00010212500000000152, 0.00010243000000000058...</msg>
<status status="PASS" starttime="20201029 12:47:53.343" endtime="20201029 12:47:53.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.350" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201029 12:47:53.349" endtime="20201029 12:47:53.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.353" level="INFO">VALUE: [0.00010298600000000283, 0.00010226399999999775, 0.00010283300000000009, 0.00010295899999999969, 0.00010281899999999705, 0.00010213899999999762, 0.00010212500000000152, 0.00010243000000000058, 0.00010244399999999668, 0.00010211100000000195, 0.00010211099999999848, 0.00010211099999999848, 0.00010212499999999805, 0.00010281900000000052, 0.00010295800000000022, 0.00010269499999999987, 0.00010277700000000181, 0.00010211099999999848, 0.00010293000000000108, 0.00010243100000000005, 0.00010245899999999919, 0.00010227799999999732, 0.00010258399999999931, 0.00010243100000000005, 0.00010261100000000245, 0.00010295800000000022, 0.00010297200000000326, 0.00010213900000000109, 0.00010262500000000202, 0.00010293100000000055, 0.00010212499999999805, 0.00010212500000000152, 0.0001027359999999991, 0.00010244499999999962, 0.00010261099999999898, 0.00010222199999999904, 0.00010226399999999775, 0.0001021809999999998, 0.00010295800000000022, 0.00010293100000000055, 0.00010244499999999962, 0.00010265199999999822, 0.00010243100000000005, 0.00010262499999999855, 0.00010265299999999769, 0.00010229100000000088, 0.00010294400000000065, 0.00010259699999999941, 0.0001027359999999991, 0.00010244499999999962]</msg>
<status status="PASS" starttime="20201029 12:47:53.351" endtime="20201029 12:47:53.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.346" endtime="20201029 12:47:53.358"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:53.362" endtime="20201029 12:47:53.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.360" endtime="20201029 12:47:53.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.359" endtime="20201029 12:47:53.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.994" endtime="20201029 12:47:53.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.993" endtime="20201029 12:47:53.383"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.392" endtime="20201029 12:47:53.413"></status>
</kw>
<msg timestamp="20201029 12:47:53.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:53.390" endtime="20201029 12:47:53.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:53.414" endtime="20201029 12:47:53.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.417" endtime="20201029 12:47:53.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.388" endtime="20201029 12:47:53.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.385" endtime="20201029 12:47:53.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.426" endtime="20201029 12:47:53.713"></status>
</kw>
<msg timestamp="20201029 12:47:53.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023660125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023764153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:53.425" endtime="20201029 12:47:53.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023660125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023764153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:53.717" endtime="20201029 12:47:53.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.725" endtime="20201029 12:47:53.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.422" endtime="20201029 12:47:53.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.420" endtime="20201029 12:47:53.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:53.732" level="INFO">${RESULT} = [{'diff': 0.00010402799999999907}, {'diff': 0.00010327799999999832}, {'diff': 0.00010329200000000135}, {'diff': 0.00010312499999999905}, {'diff': 0.00010322299999999951}, {'diff': 0.000103318999999997...</msg>
<status status="PASS" starttime="20201029 12:47:53.729" endtime="20201029 12:47:53.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:53.737" level="INFO">${ACCURACY} = {'diff': [0.00010402799999999907, 0.00010327799999999832, 0.00010329200000000135, 0.00010312499999999905, 0.00010322299999999951, 0.00010331899999999755, 0.00010376400000000272, 0.00010326400000000222...</msg>
<status status="PASS" starttime="20201029 12:47:53.734" endtime="20201029 12:47:53.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.742" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201029 12:47:53.741" endtime="20201029 12:47:53.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.746" level="INFO">VALUE: [0.00010402799999999907, 0.00010327799999999832, 0.00010329200000000135, 0.00010312499999999905, 0.00010322299999999951, 0.00010331899999999755, 0.00010376400000000272, 0.00010326400000000222, 0.00010359700000000041, 0.00010392999999999861, 0.00010377799999999882, 0.00010397300000000026, 0.000103513999999999, 0.00010379199999999839, 0.00010312499999999905, 0.00010344400000000115, 0.00010377700000000281, 0.00010345800000000072, 0.00010311099999999948, 0.00010327800000000179, 0.00010308300000000034, 0.00010394499999999765, 0.00010365199999999922, 0.00010326399999999875, 0.00010311199999999895, 0.00010377699999999934, 0.00010392999999999861, 0.00010344400000000115, 0.00010361099999999998, 0.00010326400000000222, 0.00010345899999999672, 0.00010318000000000133, 0.0001030420000000011, 0.00010312499999999905, 0.00010362500000000302, 0.0001031810000000008, 0.00010329099999999841, 0.00010327799999999832, 0.00010327800000000179, 0.00010399999999999993, 0.00010362499999999955, 0.00010393100000000155, 0.00010349999999999943, 0.00010344500000000062, 0.00010377699999999934, 0.000103513999999999, 0.00010362499999999955, 0.0001030550000000012, 0.00010347200000000029, 0.00010394399999999818]</msg>
<status status="PASS" starttime="20201029 12:47:53.743" endtime="20201029 12:47:53.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.738" endtime="20201029 12:47:53.747"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:53.751" endtime="20201029 12:47:53.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.749" endtime="20201029 12:47:53.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.748" endtime="20201029 12:47:53.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.384" endtime="20201029 12:47:53.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.383" endtime="20201029 12:47:53.772"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.780" endtime="20201029 12:47:53.800"></status>
</kw>
<msg timestamp="20201029 12:47:53.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:53.779" endtime="20201029 12:47:53.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:53.802" endtime="20201029 12:47:53.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.804" endtime="20201029 12:47:53.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.776" endtime="20201029 12:47:53.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.774" endtime="20201029 12:47:53.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.814" endtime="20201029 12:47:54.100"></status>
</kw>
<msg timestamp="20201029 12:47:54.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022453181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:53.812" endtime="20201029 12:47:54.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022453181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:54.104" endtime="20201029 12:47:54.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.112" endtime="20201029 12:47:54.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.810" endtime="20201029 12:47:54.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.808" endtime="20201029 12:47:54.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:54.119" level="INFO">${RESULT} = [{'diff': 0.00010452700000000009}, {'diff': 0.00010475000000000068}, {'diff': 0.00010462500000000055}, {'diff': 0.00010495800000000222}, {'diff': 0.00010444499999999815}, {'diff': 0.000104291999999998...</msg>
<status status="PASS" starttime="20201029 12:47:54.116" endtime="20201029 12:47:54.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:54.126" level="INFO">${ACCURACY} = {'diff': [0.00010452700000000009, 0.00010475000000000068, 0.00010462500000000055, 0.00010495800000000222, 0.00010444499999999815, 0.00010429199999999889, 0.00010465299999999969, 0.00010493099999999908...</msg>
<status status="PASS" starttime="20201029 12:47:54.120" endtime="20201029 12:47:54.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.131" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201029 12:47:54.130" endtime="20201029 12:47:54.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.134" level="INFO">VALUE: [0.00010452700000000009, 0.00010475000000000068, 0.00010462500000000055, 0.00010495800000000222, 0.00010444499999999815, 0.00010429199999999889, 0.00010465299999999969, 0.00010493099999999908, 0.00010479199999999939, 0.00010427799999999932, 0.00010472200000000154, 0.00010433299999999812, 0.00010479199999999939, 0.00010444399999999868, 0.00010411099999999701, 0.00010462500000000055, 0.00010426399999999975, 0.00010411100000000048, 0.00010494399999999918, 0.00010452799999999957, 0.00010495799999999875, 0.00010462500000000055, 0.00010415299999999919, 0.00010409700000000091, 0.00010441700000000248, 0.00010476400000000025, 0.00010413800000000015, 0.00010493099999999908, 0.00010409800000000038, 0.00010412500000000005, 0.00010491600000000004, 0.00010445799999999825, 0.00010445800000000172, 0.00010427800000000279, 0.00010459700000000141, 0.00010463900000000012, 0.00010493100000000255, 0.00010444500000000162, 0.00010444500000000162, 0.00010461100000000098, 0.00010477700000000034, 0.00010495799999999875, 0.00010462500000000055, 0.00010444400000000215, 0.00010444499999999815, 0.00010429200000000236, 0.00010429199999999889, 0.00010445799999999825, 0.00010466699999999926, 0.00010440199999999997]</msg>
<status status="PASS" starttime="20201029 12:47:54.132" endtime="20201029 12:47:54.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.127" endtime="20201029 12:47:54.135"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:54.139" endtime="20201029 12:47:54.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.137" endtime="20201029 12:47:54.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.136" endtime="20201029 12:47:54.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.773" endtime="20201029 12:47:54.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.772" endtime="20201029 12:47:54.159"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.168" endtime="20201029 12:47:54.188"></status>
</kw>
<msg timestamp="20201029 12:47:54.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:54.167" endtime="20201029 12:47:54.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:54.190" endtime="20201029 12:47:54.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.192" endtime="20201029 12:47:54.194"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.164" endtime="20201029 12:47:54.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.162" endtime="20201029 12:47:54.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.202" endtime="20201029 12:47:54.489"></status>
</kw>
<msg timestamp="20201029 12:47:54.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022916806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023022139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:54.200" endtime="20201029 12:47:54.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022916806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023022139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:54.493" endtime="20201029 12:47:54.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.501" endtime="20201029 12:47:54.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.198" endtime="20201029 12:47:54.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.196" endtime="20201029 12:47:54.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:54.508" level="INFO">${RESULT} = [{'diff': 0.00010533299999999912}, {'diff': 0.00010527800000000032}, {'diff': 0.00010576399999999778}, {'diff': 0.00010577700000000134}, {'diff': 0.00010544399999999968}, {'diff': 0.000105277000000000...</msg>
<status status="PASS" starttime="20201029 12:47:54.505" endtime="20201029 12:47:54.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:54.511" level="INFO">${ACCURACY} = {'diff': [0.00010533299999999912, 0.00010527800000000032, 0.00010576399999999778, 0.00010577700000000134, 0.00010544399999999968, 0.00010527700000000084, 0.00010529199999999989, 0.00010594400000000018...</msg>
<status status="PASS" starttime="20201029 12:47:54.509" endtime="20201029 12:47:54.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.516" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201029 12:47:54.515" endtime="20201029 12:47:54.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.518" level="INFO">VALUE: [0.00010533299999999912, 0.00010527800000000032, 0.00010576399999999778, 0.00010577700000000134, 0.00010544399999999968, 0.00010527700000000084, 0.00010529199999999989, 0.00010594400000000018, 0.00010511099999999801, 0.00010527800000000032, 0.00010577799999999735, 0.00010580500000000048, 0.00010580500000000048, 0.00010527700000000084, 0.00010577700000000134, 0.00010544400000000315, 0.00010561099999999851, 0.00010568000000000036, 0.00010526399999999728, 0.00010544499999999915, 0.00010594499999999965, 0.00010529199999999989, 0.00010545799999999925, 0.00010543000000000011, 0.00010545800000000272, 0.00010511100000000148, 0.00010561100000000198, 0.00010544499999999915, 0.00010526400000000075, 0.00010590300000000094, 0.00010544499999999915, 0.00010562499999999808, 0.00010527700000000084, 0.00010527800000000032, 0.00010568099999999983, 0.00010561100000000198, 0.00010577799999999735, 0.00010527800000000032, 0.00010595899999999922, 0.00010562500000000155, 0.00010511099999999801, 0.00010561099999999851, 0.00010577699999999787, 0.00010595799999999975, 0.00010594400000000018, 0.00010576400000000125, 0.00010593100000000008, 0.00010504199999999964, 0.00010513900000000062, 0.00010530499999999998]</msg>
<status status="PASS" starttime="20201029 12:47:54.517" endtime="20201029 12:47:54.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.512" endtime="20201029 12:47:54.520"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:54.523" endtime="20201029 12:47:54.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.522" endtime="20201029 12:47:54.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.521" endtime="20201029 12:47:54.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.160" endtime="20201029 12:47:54.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.160" endtime="20201029 12:47:54.544"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.553" endtime="20201029 12:47:54.573"></status>
</kw>
<msg timestamp="20201029 12:47:54.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:54.551" endtime="20201029 12:47:54.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:54.574" endtime="20201029 12:47:54.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.577" endtime="20201029 12:47:54.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.548" endtime="20201029 12:47:54.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.546" endtime="20201029 12:47:54.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.587" endtime="20201029 12:47:54.871"></status>
</kw>
<msg timestamp="20201029 12:47:54.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022991917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023098431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:54.585" endtime="20201029 12:47:54.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022991917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023098431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:54.876" endtime="20201029 12:47:54.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.883" endtime="20201029 12:47:54.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.581" endtime="20201029 12:47:54.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.580" endtime="20201029 12:47:54.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:54.891" level="INFO">${RESULT} = [{'diff': 0.00010651399999999853}, {'diff': 0.00010629100000000141}, {'diff': 0.00010612499999999858}, {'diff': 0.00010645800000000025}, {'diff': 0.00010661100000000298}, {'diff': 0.000106958000000000...</msg>
<status status="PASS" starttime="20201029 12:47:54.887" endtime="20201029 12:47:54.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:54.900" level="INFO">${ACCURACY} = {'diff': [0.00010651399999999853, 0.00010629100000000141, 0.00010612499999999858, 0.00010645800000000025, 0.00010661100000000298, 0.00010695800000000075, 0.00010695799999999728, 0.00010694500000000065...</msg>
<status status="PASS" starttime="20201029 12:47:54.893" endtime="20201029 12:47:54.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.909" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201029 12:47:54.907" endtime="20201029 12:47:54.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.914" level="INFO">VALUE: [0.00010651399999999853, 0.00010629100000000141, 0.00010612499999999858, 0.00010645800000000025, 0.00010661100000000298, 0.00010695800000000075, 0.00010695799999999728, 0.00010694500000000065, 0.00010644500000000015, 0.00010661099999999951, 0.00010630500000000098, 0.00010679100000000191, 0.00010627699999999837, 0.00010645800000000025, 0.00010695800000000075, 0.00010612500000000205, 0.00010677800000000182, 0.00010677800000000182, 0.00010627800000000132, 0.00010670899999999997, 0.00010692999999999814, 0.0001070140000000025, 0.00010644400000000068, 0.00010661099999999951, 0.00010645799999999678, 0.00010694500000000065, 0.00010612500000000205, 0.00010677800000000182, 0.00010630500000000098, 0.00010699999999999946, 0.00010661099999999951, 0.00010644400000000068, 0.00010647199999999982, 0.00010668100000000083, 0.00010677800000000182, 0.00010649999999999896, 0.00010643100000000058, 0.00010629200000000089, 0.0001065829999999969, 0.00010662499999999908, 0.00010644399999999721, 0.00010645800000000025, 0.00010604199999999717, 0.00010645800000000025, 0.00010630599999999699, 0.00010665300000000169, 0.00010679200000000139, 0.00010629199999999742, 0.00010661200000000245, 0.00010683300000000062]</msg>
<status status="PASS" starttime="20201029 12:47:54.911" endtime="20201029 12:47:54.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.901" endtime="20201029 12:47:54.918"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:54.925" endtime="20201029 12:47:54.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.922" endtime="20201029 12:47:54.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.920" endtime="20201029 12:47:54.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.545" endtime="20201029 12:47:54.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.544" endtime="20201029 12:47:54.950"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.968" endtime="20201029 12:47:54.990"></status>
</kw>
<msg timestamp="20201029 12:47:54.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:54.964" endtime="20201029 12:47:54.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:54.992" endtime="20201029 12:47:54.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.994" endtime="20201029 12:47:54.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.959" endtime="20201029 12:47:54.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.955" endtime="20201029 12:47:54.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.004" endtime="20201029 12:47:55.288"></status>
</kw>
<msg timestamp="20201029 12:47:55.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035502444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035609792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:55.002" endtime="20201029 12:47:55.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035502444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035609792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:55.292" endtime="20201029 12:47:55.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.300" endtime="20201029 12:47:55.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.999" endtime="20201029 12:47:55.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.998" endtime="20201029 12:47:55.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:55.307" level="INFO">${RESULT} = [{'diff': 0.00010734800000000017}, {'diff': 0.00010745799999999778}, {'diff': 0.00010755500000000223}, {'diff': 0.00010762500000000008}, {'diff': 0.00010779099999999597}, {'diff': 0.000107625000000000...</msg>
<status status="PASS" starttime="20201029 12:47:55.304" endtime="20201029 12:47:55.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:55.312" level="INFO">${ACCURACY} = {'diff': [0.00010734800000000017, 0.00010745799999999778, 0.00010755500000000223, 0.00010762500000000008, 0.00010779099999999597, 0.00010762500000000008, 0.00010777800000000282, 0.00010711100000000001...</msg>
<status status="PASS" starttime="20201029 12:47:55.308" endtime="20201029 12:47:55.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.317" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201029 12:47:55.316" endtime="20201029 12:47:55.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.319" level="INFO">VALUE: [0.00010734800000000017, 0.00010745799999999778, 0.00010755500000000223, 0.00010762500000000008, 0.00010779099999999597, 0.00010762500000000008, 0.00010777800000000282, 0.00010711100000000001, 0.00010783300000000162, 0.00010727799999999538, 0.00010744499999999768, 0.00010711199999999949, 0.00010744399999999821, 0.00010724999999999624, 0.00010711100000000001, 0.00010800000000000393, 0.00010776400000000325, 0.00010763899999999965, 0.00010743099999999811, 0.00010711100000000001, 0.0001072769999999959, 0.00010791699999999904, 0.00010744399999999821, 0.00010794399999999871, 0.00010763899999999965, 0.00010786100000000076, 0.00010729200000000189, 0.00010712499999999958, 0.00010729200000000189, 0.00010794499999999818, 0.00010779100000000291, 0.00010766699999999879, 0.00010794399999999871, 0.00010794399999999871, 0.00010777800000000282, 0.00010740299999999897, 0.00010726400000000275, 0.00010763899999999965, 0.00010745899999999725, 0.00010776400000000325, 0.00010729099999999547, 0.00010780499999999554, 0.00010711100000000001, 0.00010744399999999821, 0.00010712499999999958, 0.00010712499999999958, 0.00010761099999999357, 0.00010729199999999495, 0.00010744499999999768, 0.0001070690000000013]</msg>
<status status="PASS" starttime="20201029 12:47:55.318" endtime="20201029 12:47:55.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.313" endtime="20201029 12:47:55.321"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:55.325" endtime="20201029 12:47:55.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.323" endtime="20201029 12:47:55.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.322" endtime="20201029 12:47:55.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.952" endtime="20201029 12:47:55.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.950" endtime="20201029 12:47:55.350"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.366" endtime="20201029 12:47:55.388"></status>
</kw>
<msg timestamp="20201029 12:47:55.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:55.364" endtime="20201029 12:47:55.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:55.389" endtime="20201029 12:47:55.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.392" endtime="20201029 12:47:55.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.358" endtime="20201029 12:47:55.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.355" endtime="20201029 12:47:55.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.401" endtime="20201029 12:47:55.689"></status>
</kw>
<msg timestamp="20201029 12:47:55.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035224875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035333222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:55.400" endtime="20201029 12:47:55.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035224875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035333222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:55.694" endtime="20201029 12:47:55.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.704" endtime="20201029 12:47:55.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.397" endtime="20201029 12:47:55.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.395" endtime="20201029 12:47:55.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:55.718" level="INFO">${RESULT} = [{'diff': 0.00010834699999999475}, {'diff': 0.00010827800000000332}, {'diff': 0.00010826400000000375}, {'diff': 0.00010862500000000108}, {'diff': 0.00010862500000000108}, {'diff': 0.000108292000000002...</msg>
<status status="PASS" starttime="20201029 12:47:55.711" endtime="20201029 12:47:55.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:55.727" level="INFO">${ACCURACY} = {'diff': [0.00010834699999999475, 0.00010827800000000332, 0.00010826400000000375, 0.00010862500000000108, 0.00010862500000000108, 0.00010829200000000289, 0.00010895899999999875, 0.00010861199999999405...</msg>
<status status="PASS" starttime="20201029 12:47:55.720" endtime="20201029 12:47:55.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.737" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201029 12:47:55.735" endtime="20201029 12:47:55.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.743" level="INFO">VALUE: [0.00010834699999999475, 0.00010827800000000332, 0.00010826400000000375, 0.00010862500000000108, 0.00010862500000000108, 0.00010829200000000289, 0.00010895899999999875, 0.00010861199999999405, 0.00010848599999999792, 0.0001087769999999974, 0.00010879199999999645, 0.00010881900000000305, 0.00010879199999999645, 0.00010894499999999918, 0.00010877799999999688, 0.00010877799999999688, 0.00010877800000000382, 0.00010826299999999733, 0.00010833300000000212, 0.00010865300000000022, 0.00010891700000000004, 0.0001088890000000009, 0.00010862499999999414, 0.00010849999999999749, 0.00010894499999999918, 0.00010894499999999918, 0.00010808300000000187, 0.00010826400000000375, 0.00010876399999999731, 0.00010847199999999835, 0.00010830600000000246, 0.00010813900000000015, 0.00010843099999999911, 0.00010869399999999946, 0.00010894499999999918, 0.00010844499999999868, 0.00010879099999999697, 0.00010895799999999928, 0.00010829200000000289, 0.0001085549999999963, 0.00010811100000000101, 0.00010825000000000418, 0.00010898599999999842, 0.00010877799999999688, 0.00010877700000000434, 0.00010844399999999921, 0.00010895799999999928, 0.00010844399999999921, 0.00010827800000000332, 0.00010829200000000289]</msg>
<status status="PASS" starttime="20201029 12:47:55.740" endtime="20201029 12:47:55.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.729" endtime="20201029 12:47:55.746"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:55.754" endtime="20201029 12:47:55.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.750" endtime="20201029 12:47:55.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.748" endtime="20201029 12:47:55.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.351" endtime="20201029 12:47:55.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.350" endtime="20201029 12:47:55.779"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.800" endtime="20201029 12:47:55.822"></status>
</kw>
<msg timestamp="20201029 12:47:55.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:55.796" endtime="20201029 12:47:55.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:55.824" endtime="20201029 12:47:55.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.826" endtime="20201029 12:47:55.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.790" endtime="20201029 12:47:55.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.785" endtime="20201029 12:47:55.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.836" endtime="20201029 12:47:56.121"></status>
</kw>
<msg timestamp="20201029 12:47:56.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039950569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040059694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:55.834" endtime="20201029 12:47:56.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039950569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040059694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:56.125" endtime="20201029 12:47:56.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.134" endtime="20201029 12:47:56.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.831" endtime="20201029 12:47:56.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.829" endtime="20201029 12:47:56.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:56.140" level="INFO">${RESULT} = [{'diff': 0.00010912500000000158}, {'diff': 0.00010911099999999507}, {'diff': 0.00010994400000000071}, {'diff': 0.00010911100000000201}, {'diff': 0.0001093340000000026}, {'diff': 0.0001094310000000001...</msg>
<status status="PASS" starttime="20201029 12:47:56.137" endtime="20201029 12:47:56.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:56.144" level="INFO">${ACCURACY} = {'diff': [0.00010912500000000158, 0.00010911099999999507, 0.00010994400000000071, 0.00010911100000000201, 0.0001093340000000026, 0.00010943100000000011, 0.00010997199999999985, 0.00010948599999999892,...</msg>
<status status="PASS" starttime="20201029 12:47:56.141" endtime="20201029 12:47:56.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.149" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201029 12:47:56.148" endtime="20201029 12:47:56.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.152" level="INFO">VALUE: [0.00010912500000000158, 0.00010911099999999507, 0.00010994400000000071, 0.00010911100000000201, 0.0001093340000000026, 0.00010943100000000011, 0.00010997199999999985, 0.00010948599999999892, 0.00010913799999999474, 0.00010944499999999968, 0.00010918099999999986, 0.00010927800000000432, 0.00010929199999999695, 0.0001092219999999991, 0.00010912500000000158, 0.00010950000000000543, 0.00010961099999999557, 0.00010956999999999634, 0.00010911200000000149, 0.00010995800000000028, 0.00010977799999999788, 0.00010962500000000208, 0.00010912500000000158, 0.00010994400000000071, 0.00010995899999999975, 0.00010977799999999788, 0.00010997199999999985, 0.00010926400000000475, 0.00010995800000000028, 0.00010929099999999747, 0.00010959700000000294, 0.00010959700000000294, 0.00010961100000000251, 0.00010980600000000396, 0.00010909700000000244, 0.00010961100000000251, 0.00010961200000000199, 0.00010945799999999978, 0.00010961100000000251, 0.00010929199999999695, 0.00010945799999999978, 0.00010927800000000432, 0.00010944499999999968, 0.00010977800000000482, 0.00010936099999999532, 0.00010908400000000235, 0.00010945799999999978, 0.00010993000000000114, 0.00010926399999999781, 0.00010962500000000208]</msg>
<status status="PASS" starttime="20201029 12:47:56.150" endtime="20201029 12:47:56.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.145" endtime="20201029 12:47:56.154"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:56.158" endtime="20201029 12:47:56.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.156" endtime="20201029 12:47:56.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.155" endtime="20201029 12:47:56.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.782" endtime="20201029 12:47:56.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.780" endtime="20201029 12:47:56.178"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.187" endtime="20201029 12:47:56.207"></status>
</kw>
<msg timestamp="20201029 12:47:56.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:56.186" endtime="20201029 12:47:56.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:56.209" endtime="20201029 12:47:56.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.212" endtime="20201029 12:47:56.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.183" endtime="20201029 12:47:56.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.181" endtime="20201029 12:47:56.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.221" endtime="20201029 12:47:56.507"></status>
</kw>
<msg timestamp="20201029 12:47:56.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022677111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022788139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:56.219" endtime="20201029 12:47:56.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022677111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022788139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:56.511" endtime="20201029 12:47:56.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.519" endtime="20201029 12:47:56.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.217" endtime="20201029 12:47:56.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.215" endtime="20201029 12:47:56.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:56.526" level="INFO">${RESULT} = [{'diff': 0.00011102799999999913}, {'diff': 0.00011016599999999835}, {'diff': 0.00011012499999999911}, {'diff': 0.00011041699999999807}, {'diff': 0.00011094500000000118}, {'diff': 0.000110943999999998...</msg>
<status status="PASS" starttime="20201029 12:47:56.523" endtime="20201029 12:47:56.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:56.531" level="INFO">${ACCURACY} = {'diff': [0.00011102799999999913, 0.00011016599999999835, 0.00011012499999999911, 0.00011041699999999807, 0.00011094500000000118, 0.00011094399999999824, 0.00011020799999999706, 0.00011061100000000004...</msg>
<status status="PASS" starttime="20201029 12:47:56.527" endtime="20201029 12:47:56.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.536" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201029 12:47:56.535" endtime="20201029 12:47:56.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.538" level="INFO">VALUE: [0.00011102799999999913, 0.00011016599999999835, 0.00011012499999999911, 0.00011041699999999807, 0.00011094500000000118, 0.00011094399999999824, 0.00011020799999999706, 0.00011061100000000004, 0.00011045799999999731, 0.00011094400000000171, 0.00011011099999999954, 0.00011044500000000068, 0.00011045900000000025, 0.00011095900000000075, 0.00011047200000000035, 0.00011012499999999911, 0.0001107769999999994, 0.00011061100000000004, 0.00011044399999999774, 0.00011027800000000185, 0.00011044500000000068, 0.00011095900000000075, 0.00011049999999999949, 0.00011044500000000068, 0.00011044399999999774, 0.00011086100000000029, 0.00011026399999999881, 0.00011027800000000185, 0.00011045800000000078, 0.00011084799999999673, 0.00011013899999999868, 0.00011045900000000025, 0.00011013799999999921, 0.00011062499999999961, 0.00011029099999999847, 0.00011080500000000201, 0.00011094399999999824, 0.00011012499999999911, 0.00011095900000000075, 0.00011095899999999728, 0.00011052799999999863, 0.00011061199999999952, 0.00011095800000000128, 0.00011047200000000035, 0.00011062499999999961, 0.0001109159999999991, 0.00011094400000000171, 0.00011044400000000121, 0.00011061100000000004, 0.00011011099999999954]</msg>
<status status="PASS" starttime="20201029 12:47:56.537" endtime="20201029 12:47:56.539"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.532" endtime="20201029 12:47:56.539"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:56.543" endtime="20201029 12:47:56.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.542" endtime="20201029 12:47:56.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.540" endtime="20201029 12:47:56.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.179" endtime="20201029 12:47:56.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.179" endtime="20201029 12:47:56.564"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.573" endtime="20201029 12:47:56.593"></status>
</kw>
<msg timestamp="20201029 12:47:56.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:56.571" endtime="20201029 12:47:56.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:56.595" endtime="20201029 12:47:56.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.597" endtime="20201029 12:47:56.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.569" endtime="20201029 12:47:56.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.567" endtime="20201029 12:47:56.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.607" endtime="20201029 12:47:56.895"></status>
</kw>
<msg timestamp="20201029 12:47:56.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022469972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022581639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:56.605" endtime="20201029 12:47:56.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022469972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022581639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:56.899" endtime="20201029 12:47:56.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.907" endtime="20201029 12:47:56.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.602" endtime="20201029 12:47:56.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.601" endtime="20201029 12:47:56.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:56.914" level="INFO">${RESULT} = [{'diff': 0.00011166699999999932}, {'diff': 0.00011161100000000104}, {'diff': 0.00011122300000000057}, {'diff': 0.00011194500000000218}, {'diff': 0.00011118099999999839}, {'diff': 0.000111943999999999...</msg>
<status status="PASS" starttime="20201029 12:47:56.911" endtime="20201029 12:47:56.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:56.918" level="INFO">${ACCURACY} = {'diff': [0.00011166699999999932, 0.00011161100000000104, 0.00011122300000000057, 0.00011194500000000218, 0.00011118099999999839, 0.00011194399999999924, 0.00011161100000000104, 0.0001110830000000014,...</msg>
<status status="PASS" starttime="20201029 12:47:56.915" endtime="20201029 12:47:56.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.923" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201029 12:47:56.922" endtime="20201029 12:47:56.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.925" level="INFO">VALUE: [0.00011166699999999932, 0.00011161100000000104, 0.00011122300000000057, 0.00011194500000000218, 0.00011118099999999839, 0.00011194399999999924, 0.00011161100000000104, 0.0001110830000000014, 0.00011108299999999793, 0.00011194499999999871, 0.00011144500000000168, 0.00011112500000000011, 0.00011112500000000011, 0.00011179099999999997, 0.0001117770000000004, 0.00011129199999999895, 0.00011192999999999967, 0.00011161100000000104, 0.00011162500000000061, 0.00011143099999999864, 0.00011145899999999778, 0.00011193099999999914, 0.00011111100000000054, 0.00011142999999999917, 0.00011111100000000054, 0.00011130600000000199, 0.00011194500000000218, 0.00011144499999999821, 0.00011140300000000297, 0.00011111100000000054, 0.0001114029999999995, 0.00011181899999999911, 0.00011195799999999881, 0.00011126399999999981, 0.00011159700000000147, 0.00011145799999999831, 0.00011112500000000011, 0.00011105599999999827, 0.000111903, 0.00011144500000000168, 0.00011111100000000054, 0.00011147199999999788, 0.00011179099999999997, 0.00011145799999999831, 0.00011147200000000135, 0.00011144500000000168, 0.00011113899999999968, 0.00011112500000000011, 0.00011129099999999947, 0.00011112500000000011]</msg>
<status status="PASS" starttime="20201029 12:47:56.924" endtime="20201029 12:47:56.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.919" endtime="20201029 12:47:56.927"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:56.930" endtime="20201029 12:47:56.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.929" endtime="20201029 12:47:56.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.928" endtime="20201029 12:47:56.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.565" endtime="20201029 12:47:56.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.564" endtime="20201029 12:47:56.951"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.960" endtime="20201029 12:47:56.982"></status>
</kw>
<msg timestamp="20201029 12:47:56.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:56.959" endtime="20201029 12:47:56.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:56.983" endtime="20201029 12:47:56.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.986" endtime="20201029 12:47:56.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.956" endtime="20201029 12:47:56.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.954" endtime="20201029 12:47:56.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.995" endtime="20201029 12:47:57.282"></status>
</kw>
<msg timestamp="20201029 12:47:57.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023972319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024084472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:56.994" endtime="20201029 12:47:57.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023972319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024084472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:57.286" endtime="20201029 12:47:57.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.295" endtime="20201029 12:47:57.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.991" endtime="20201029 12:47:57.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.989" endtime="20201029 12:47:57.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:57.301" level="INFO">${RESULT} = [{'diff': 0.00011215300000000025}, {'diff': 0.00011262500000000161}, {'diff': 0.00011277800000000088}, {'diff': 0.0001120969999999985}, {'diff': 0.00011295899999999928}, {'diff': 0.0001127640000000013...</msg>
<status status="PASS" starttime="20201029 12:47:57.298" endtime="20201029 12:47:57.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:57.306" level="INFO">${ACCURACY} = {'diff': [0.00011215300000000025, 0.00011262500000000161, 0.00011277800000000088, 0.0001120969999999985, 0.00011295899999999928, 0.00011276400000000131, 0.00011277800000000088, 0.00011280500000000054,...</msg>
<status status="PASS" starttime="20201029 12:47:57.302" endtime="20201029 12:47:57.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.310" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201029 12:47:57.309" endtime="20201029 12:47:57.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.313" level="INFO">VALUE: [0.00011215300000000025, 0.00011262500000000161, 0.00011277800000000088, 0.0001120969999999985, 0.00011295899999999928, 0.00011276400000000131, 0.00011277800000000088, 0.00011280500000000054, 0.00011294400000000024, 0.00011213900000000068, 0.00011277800000000088, 0.00011213899999999721, 0.00011277800000000088, 0.00011279200000000045, 0.00011244499999999921, 0.00011211100000000154, 0.00011295799999999981, 0.00011297199999999938, 0.00011295799999999981, 0.00011213900000000068, 0.00011294499999999971, 0.00011262500000000161, 0.00011259800000000195, 0.00011266600000000085, 0.00011227800000000038, 0.00011276300000000183, 0.000112290999999997, 0.00011245799999999931, 0.00011297199999999938, 0.00011211100000000154, 0.00011245899999999878, 0.00011294499999999971, 0.00011297200000000285, 0.00011262500000000161, 0.00011295800000000328, 0.00011281900000000011, 0.00011227799999999691, 0.0001127359999999987, 0.00011277799999999741, 0.00011247300000000182, 0.00011227800000000038, 0.00011259800000000195, 0.00011280500000000054, 0.00011230500000000004, 0.00011230500000000004, 0.00011281999999999959, 0.00011229199999999995, 0.00011229199999999995, 0.00011279200000000045, 0.0001124030000000005]</msg>
<status status="PASS" starttime="20201029 12:47:57.311" endtime="20201029 12:47:57.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.306" endtime="20201029 12:47:57.315"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:57.319" endtime="20201029 12:47:57.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.317" endtime="20201029 12:47:57.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.316" endtime="20201029 12:47:57.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.952" endtime="20201029 12:47:57.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.952" endtime="20201029 12:47:57.339"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.348" endtime="20201029 12:47:57.369"></status>
</kw>
<msg timestamp="20201029 12:47:57.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:57.347" endtime="20201029 12:47:57.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:57.371" endtime="20201029 12:47:57.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.374" endtime="20201029 12:47:57.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.344" endtime="20201029 12:47:57.376"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.342" endtime="20201029 12:47:57.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.383" endtime="20201029 12:47:57.669"></status>
</kw>
<msg timestamp="20201029 12:47:57.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022506542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022620542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:57.381" endtime="20201029 12:47:57.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022506542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022620542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:57.673" endtime="20201029 12:47:57.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.681" endtime="20201029 12:47:57.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.379" endtime="20201029 12:47:57.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.377" endtime="20201029 12:47:57.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:57.688" level="INFO">${RESULT} = [{'diff': 0.00011399999999999952}, {'diff': 0.00011343100000000064}, {'diff': 0.00011394399999999777}, {'diff': 0.000113290999999998}, {'diff': 0.00011377800000000188}, {'diff': 0.00011379200000000145...</msg>
<status status="PASS" starttime="20201029 12:47:57.685" endtime="20201029 12:47:57.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:57.695" level="INFO">${ACCURACY} = {'diff': [0.00011399999999999952, 0.00011343100000000064, 0.00011394399999999777, 0.000113290999999998, 0.00011377800000000188, 0.00011379200000000145, 0.00011319399999999702, 0.00011393100000000114, ...</msg>
<status status="PASS" starttime="20201029 12:47:57.689" endtime="20201029 12:47:57.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.700" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201029 12:47:57.699" endtime="20201029 12:47:57.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.702" level="INFO">VALUE: [0.00011399999999999952, 0.00011343100000000064, 0.00011394399999999777, 0.000113290999999998, 0.00011377800000000188, 0.00011379200000000145, 0.00011319399999999702, 0.00011393100000000114, 0.00011361099999999957, 0.00011377799999999841, 0.00011327800000000138, 0.00011344400000000074, 0.00011374999999999927, 0.00011377799999999841, 0.00011388899999999896, 0.00011383300000000068, 0.00011362500000000261, 0.00011345899999999978, 0.00011368000000000142, 0.00011345800000000031, 0.00011394400000000124, 0.00011312499999999864, 0.00011398599999999995, 0.00011395800000000081, 0.00011327800000000138, 0.00011345899999999978, 0.00011344500000000021, 0.00011377800000000188, 0.00011361199999999905, 0.0001137770000000024, 0.00011361099999999957, 0.00011344400000000074, 0.00011391700000000157, 0.00011312499999999864, 0.00011377800000000188, 0.00011345899999999978, 0.00011318100000000039, 0.00011311199999999855, 0.00011315300000000125, 0.000113597, 0.000113597, 0.00011361099999999957, 0.00011345800000000031, 0.00011374999999999927, 0.00011343100000000064, 0.00011344500000000021, 0.00011380499999999807, 0.00011327699999999843, 0.00011362499999999914, 0.00011330599999999705]</msg>
<status status="PASS" starttime="20201029 12:47:57.701" endtime="20201029 12:47:57.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.696" endtime="20201029 12:47:57.704"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:57.708" endtime="20201029 12:47:57.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.706" endtime="20201029 12:47:57.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.705" endtime="20201029 12:47:57.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.340" endtime="20201029 12:47:57.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.340" endtime="20201029 12:47:57.728"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.737" endtime="20201029 12:47:57.758"></status>
</kw>
<msg timestamp="20201029 12:47:57.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:57.736" endtime="20201029 12:47:57.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:57.759" endtime="20201029 12:47:57.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.762" endtime="20201029 12:47:57.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.733" endtime="20201029 12:47:57.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.731" endtime="20201029 12:47:57.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.771" endtime="20201029 12:47:58.059"></status>
</kw>
<msg timestamp="20201029 12:47:58.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02263075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022745264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:57.769" endtime="20201029 12:47:58.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02263075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022745264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:58.063" endtime="20201029 12:47:58.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.071" endtime="20201029 12:47:58.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.767" endtime="20201029 12:47:58.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.765" endtime="20201029 12:47:58.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:58.078" level="INFO">${RESULT} = [{'diff': 0.00011451399999999959}, {'diff': 0.00011444499999999774}, {'diff': 0.00011477799999999941}, {'diff': 0.00011418099999999792}, {'diff': 0.000114290999999999}, {'diff': 0.00011462500000000014...</msg>
<status status="PASS" starttime="20201029 12:47:58.075" endtime="20201029 12:47:58.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:58.082" level="INFO">${ACCURACY} = {'diff': [0.00011451399999999959, 0.00011444499999999774, 0.00011477799999999941, 0.00011418099999999792, 0.000114290999999999, 0.00011462500000000014, 0.00011427800000000238, 0.00011461100000000057, ...</msg>
<status status="PASS" starttime="20201029 12:47:58.079" endtime="20201029 12:47:58.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.086" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201029 12:47:58.085" endtime="20201029 12:47:58.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.089" level="INFO">VALUE: [0.00011451399999999959, 0.00011444499999999774, 0.00011477799999999941, 0.00011418099999999792, 0.000114290999999999, 0.00011462500000000014, 0.00011427800000000238, 0.00011461100000000057, 0.00011411100000000007, 0.0001146109999999971, 0.00011477799999999941, 0.00011476399999999984, 0.00011427699999999943, 0.00011412499999999964, 0.00011461100000000057, 0.0001149299999999992, 0.00011477799999999941, 0.000114597000000001, 0.00011476399999999984, 0.00011493100000000214, 0.00011494499999999824, 0.0001142770000000029, 0.00011445800000000131, 0.00011477799999999941, 0.00011443000000000217, 0.00011484800000000073, 0.00011481999999999812, 0.00011411100000000007, 0.00011426399999999934, 0.00011445900000000078, 0.00011483300000000168, 0.00011458299999999796, 0.00011412499999999964, 0.00011459699999999753, 0.00011411100000000007, 0.00011426399999999934, 0.00011444500000000121, 0.00011495900000000128, 0.00011501400000000009, 0.00011477799999999941, 0.0001147909999999995, 0.00011497200000000138, 0.00011494400000000224, 0.00011429200000000195, 0.00011413899999999921, 0.00011462500000000014, 0.00011444499999999774, 0.00011494499999999824, 0.000114290999999999, 0.00011463899999999971]</msg>
<status status="PASS" starttime="20201029 12:47:58.088" endtime="20201029 12:47:58.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.083" endtime="20201029 12:47:58.090"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:58.094" endtime="20201029 12:47:58.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.093" endtime="20201029 12:47:58.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.091" endtime="20201029 12:47:58.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.729" endtime="20201029 12:47:58.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.729" endtime="20201029 12:47:58.115"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.124" endtime="20201029 12:47:58.146"></status>
</kw>
<msg timestamp="20201029 12:47:58.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:58.122" endtime="20201029 12:47:58.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:58.147" endtime="20201029 12:47:58.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.150" endtime="20201029 12:47:58.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.120" endtime="20201029 12:47:58.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.117" endtime="20201029 12:47:58.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.159" endtime="20201029 12:47:58.444"></status>
</kw>
<msg timestamp="20201029 12:47:58.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023871111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023986778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:58.157" endtime="20201029 12:47:58.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023871111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023986778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:58.449" endtime="20201029 12:47:58.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.457" endtime="20201029 12:47:58.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.155" endtime="20201029 12:47:58.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.153" endtime="20201029 12:47:58.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:58.464" level="INFO">${RESULT} = [{'diff': 0.00011566699999999985}, {'diff': 0.00011527799999999991}, {'diff': 0.00011509800000000098}, {'diff': 0.00011583299999999921}, {'diff': 0.00011545799999999884}, {'diff': 0.000115986000000001...</msg>
<status status="PASS" starttime="20201029 12:47:58.460" endtime="20201029 12:47:58.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:58.468" level="INFO">${ACCURACY} = {'diff': [0.00011566699999999985, 0.00011527799999999991, 0.00011509800000000098, 0.00011583299999999921, 0.00011545799999999884, 0.00011598600000000195, 0.0001154169999999996, 0.00011566699999999985,...</msg>
<status status="PASS" starttime="20201029 12:47:58.465" endtime="20201029 12:47:58.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.472" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201029 12:47:58.471" endtime="20201029 12:47:58.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.475" level="INFO">VALUE: [0.00011566699999999985, 0.00011527799999999991, 0.00011509800000000098, 0.00011583299999999921, 0.00011545799999999884, 0.00011598600000000195, 0.0001154169999999996, 0.00011566699999999985, 0.00011580599999999955, 0.00011527799999999991, 0.00011569400000000299, 0.00011591600000000063, 0.00011545800000000231, 0.00011512500000000064, 0.00011509699999999803, 0.0001151109999999976, 0.0001150970000000015, 0.00011526400000000034, 0.00011595899999999881, 0.00011545800000000231, 0.00011543000000000317, 0.00011577699999999747, 0.00011527799999999991, 0.00011512500000000064, 0.00011595799999999934, 0.00011579199999999998, 0.00011543099999999917, 0.00011547199999999841, 0.00011577800000000041, 0.00011594399999999977, 0.00011597200000000238, 0.00011512500000000064, 0.00011549999999999755, 0.0001150970000000015, 0.00011515299999999978, 0.00011562500000000114, 0.00011595900000000228, 0.00011577699999999747, 0.00011563899999999724, 0.00011512500000000064, 0.00011601400000000109, 0.00011580599999999955, 0.00011544499999999874, 0.00011594499999999924, 0.00011577800000000041, 0.00011573700000000117, 0.00011545800000000231, 0.00011577800000000041, 0.00011509699999999803, 0.00011561100000000157]</msg>
<status status="PASS" starttime="20201029 12:47:58.474" endtime="20201029 12:47:58.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.469" endtime="20201029 12:47:58.481"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:58.485" endtime="20201029 12:47:58.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.483" endtime="20201029 12:47:58.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.482" endtime="20201029 12:47:58.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.116" endtime="20201029 12:47:58.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.115" endtime="20201029 12:47:58.506"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.515" endtime="20201029 12:47:58.535"></status>
</kw>
<msg timestamp="20201029 12:47:58.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:58.513" endtime="20201029 12:47:58.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:58.537" endtime="20201029 12:47:58.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.539" endtime="20201029 12:47:58.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.510" endtime="20201029 12:47:58.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.508" endtime="20201029 12:47:58.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.548" endtime="20201029 12:47:58.835"></status>
</kw>
<msg timestamp="20201029 12:47:58.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022614333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022731181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:58.547" endtime="20201029 12:47:58.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022614333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022731181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:58.839" endtime="20201029 12:47:58.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.847" endtime="20201029 12:47:58.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.544" endtime="20201029 12:47:58.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.542" endtime="20201029 12:47:58.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:58.854" level="INFO">${RESULT} = [{'diff': 0.00011684799999999926}, {'diff': 0.00011626300000000186}, {'diff': 0.00011701399999999862}, {'diff': 0.00011644400000000027}, {'diff': 0.0001166109999999991}, {'diff': 0.0001166110000000025...</msg>
<status status="PASS" starttime="20201029 12:47:58.851" endtime="20201029 12:47:58.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:58.859" level="INFO">${ACCURACY} = {'diff': [0.00011684799999999926, 0.00011626300000000186, 0.00011701399999999862, 0.00011644400000000027, 0.0001166109999999991, 0.00011661100000000257, 0.0001161109999999986, 0.00011694499999999677, ...</msg>
<status status="PASS" starttime="20201029 12:47:58.855" endtime="20201029 12:47:58.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.864" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201029 12:47:58.863" endtime="20201029 12:47:58.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.866" level="INFO">VALUE: [0.00011684799999999926, 0.00011626300000000186, 0.00011701399999999862, 0.00011644400000000027, 0.0001166109999999991, 0.00011661100000000257, 0.0001161109999999986, 0.00011694499999999677, 0.00011677800000000141, 0.00011681900000000064, 0.00011662499999999867, 0.0001161109999999986, 0.0001164300000000007, 0.00011612500000000164, 0.00011676399999999837, 0.00011647299999999888, 0.00011652799999999769, 0.00011634699999999928, 0.00011680500000000107, 0.00011692999999999773, 0.0001161109999999986, 0.0001160970000000025, 0.0001161109999999986, 0.0001165560000000003, 0.00011694500000000024, 0.00011658399999999944, 0.00011677799999999794, 0.0001167910000000015, 0.0001164300000000007, 0.00011658299999999996, 0.0001166109999999991, 0.00011694400000000077, 0.00011677799999999794, 0.00011629199999999701, 0.00011693100000000067, 0.0001167629999999989, 0.00011695800000000034, 0.0001160689999999999, 0.00011645799999999984, 0.00011645799999999984, 0.00011663900000000171, 0.00011679200000000098, 0.0001161109999999986, 0.00011661199999999858, 0.0001161109999999986, 0.0001169300000000012, 0.00011676400000000184, 0.00011679200000000098, 0.00011677800000000141, 0.00011629200000000048]</msg>
<status status="PASS" starttime="20201029 12:47:58.865" endtime="20201029 12:47:58.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.860" endtime="20201029 12:47:58.868"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:58.872" endtime="20201029 12:47:58.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.870" endtime="20201029 12:47:58.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.869" endtime="20201029 12:47:58.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.507" endtime="20201029 12:47:58.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.506" endtime="20201029 12:47:58.892"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.901" endtime="20201029 12:47:58.922"></status>
</kw>
<msg timestamp="20201029 12:47:58.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:58.900" endtime="20201029 12:47:58.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:58.923" endtime="20201029 12:47:58.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.926" endtime="20201029 12:47:58.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.897" endtime="20201029 12:47:58.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.895" endtime="20201029 12:47:58.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.935" endtime="20201029 12:47:59.222"></status>
</kw>
<msg timestamp="20201029 12:47:59.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022497181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022614583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:58.934" endtime="20201029 12:47:59.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022497181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022614583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:59.226" endtime="20201029 12:47:59.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.235" endtime="20201029 12:47:59.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.931" endtime="20201029 12:47:59.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.929" endtime="20201029 12:47:59.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:59.241" level="INFO">${RESULT} = [{'diff': 0.00011740199999999909}, {'diff': 0.00011777799999999894}, {'diff': 0.00011733299999999725}, {'diff': 0.00011744400000000127}, {'diff': 0.00011740199999999909}, {'diff': 0.000117624999999999...</msg>
<status status="PASS" starttime="20201029 12:47:59.238" endtime="20201029 12:47:59.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:59.246" level="INFO">${ACCURACY} = {'diff': [0.00011740199999999909, 0.00011777799999999894, 0.00011733299999999725, 0.00011744400000000127, 0.00011740199999999909, 0.00011762499999999967, 0.00011727799999999844, 0.00011741699999999813...</msg>
<status status="PASS" starttime="20201029 12:47:59.242" endtime="20201029 12:47:59.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.250" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201029 12:47:59.249" endtime="20201029 12:47:59.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.253" level="INFO">VALUE: [0.00011740199999999909, 0.00011777799999999894, 0.00011733299999999725, 0.00011744400000000127, 0.00011740199999999909, 0.00011762499999999967, 0.00011727799999999844, 0.00011741699999999813, 0.00011733300000000071, 0.00011704199999999776, 0.00011745900000000031, 0.00011718099999999745, 0.00011780600000000155, 0.00011747200000000041, 0.00011729199999999801, 0.00011762500000000314, 0.00011762499999999967, 0.00011795899999999734, 0.00011802799999999919, 0.00011762499999999967, 0.00011741599999999866, 0.00011704099999999829, 0.00011744400000000127, 0.00011732000000000062, 0.00011763899999999924, 0.00011763899999999924, 0.00011784699999999732, 0.00011777800000000241, 0.0001177910000000025, 0.00011792999999999873, 0.00011786100000000035, 0.0001174439999999978, 0.00011726399999999887, 0.0001175829999999975, 0.00011770900000000056, 0.00011723599999999973, 0.00011761199999999958, 0.00011779099999999904, 0.00011790299999999906, 0.00011744400000000127, 0.00011726400000000234, 0.00011787499999999992, 0.00011794500000000124, 0.00011745900000000031, 0.00011784700000000078, 0.0001172499999999993, 0.0001174439999999978, 0.0001171109999999996, 0.00011747200000000041, 0.00011783399999999722]</msg>
<status status="PASS" starttime="20201029 12:47:59.251" endtime="20201029 12:47:59.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.246" endtime="20201029 12:47:59.254"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:59.258" endtime="20201029 12:47:59.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.256" endtime="20201029 12:47:59.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.255" endtime="20201029 12:47:59.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.893" endtime="20201029 12:47:59.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.893" endtime="20201029 12:47:59.279"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.288" endtime="20201029 12:47:59.309"></status>
</kw>
<msg timestamp="20201029 12:47:59.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:59.286" endtime="20201029 12:47:59.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:59.311" endtime="20201029 12:47:59.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.313" endtime="20201029 12:47:59.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.283" endtime="20201029 12:47:59.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.281" endtime="20201029 12:47:59.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.323" endtime="20201029 12:47:59.609"></status>
</kw>
<msg timestamp="20201029 12:47:59.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023446736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023565736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:59.321" endtime="20201029 12:47:59.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023446736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023565736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:59.613" endtime="20201029 12:47:59.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.621" endtime="20201029 12:47:59.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.319" endtime="20201029 12:47:59.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.317" endtime="20201029 12:47:59.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:59.628" level="INFO">${RESULT} = [{'diff': 0.00011900000000000105}, {'diff': 0.00011862500000000067}, {'diff': 0.00011879199999999951}, {'diff': 0.00011895899999999834}, {'diff': 0.00011879200000000298}, {'diff': 0.000118458999999997...</msg>
<status status="PASS" starttime="20201029 12:47:59.625" endtime="20201029 12:47:59.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:59.632" level="INFO">${ACCURACY} = {'diff': [0.00011900000000000105, 0.00011862500000000067, 0.00011879199999999951, 0.00011895899999999834, 0.00011879200000000298, 0.00011845899999999784, 0.0001187630000000009, 0.00011826399999999987,...</msg>
<status status="PASS" starttime="20201029 12:47:59.629" endtime="20201029 12:47:59.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.637" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201029 12:47:59.635" endtime="20201029 12:47:59.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.639" level="INFO">VALUE: [0.00011900000000000105, 0.00011862500000000067, 0.00011879199999999951, 0.00011895899999999834, 0.00011879200000000298, 0.00011845899999999784, 0.0001187630000000009, 0.00011826399999999987, 0.00011809699999999757, 0.0001181110000000006, 0.00011808300000000146, 0.00011826399999999987, 0.00011895900000000181, 0.00011879199999999951, 0.00011894499999999877, 0.00011859699999999807, 0.00011845799999999837, 0.00011862500000000067, 0.00011845799999999837, 0.00011863900000000024, 0.00011831999999999815, 0.00011823600000000073, 0.00011862500000000067, 0.00011827699999999997, 0.00011872199999999819, 0.00011897199999999844, 0.00011811099999999713, 0.0001184439999999988, 0.00011812500000000017, 0.00011879199999999951, 0.0001186110000000011, 0.00011876400000000037, 0.00011837500000000042, 0.0001186110000000011, 0.00011845799999999837, 0.00011845799999999837, 0.00011823600000000073, 0.00011880599999999908, 0.00011851400000000012, 0.00011894500000000224, 0.0001181950000000015, 0.00011827699999999997, 0.00011892999999999973, 0.00011842999999999923, 0.00011812500000000017, 0.00011816599999999941, 0.00011877799999999994, 0.0001186110000000011, 0.00011894500000000224, 0.0001189439999999993]</msg>
<status status="PASS" starttime="20201029 12:47:59.638" endtime="20201029 12:47:59.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.633" endtime="20201029 12:47:59.641"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:59.645" endtime="20201029 12:47:59.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.644" endtime="20201029 12:47:59.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.642" endtime="20201029 12:47:59.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.280" endtime="20201029 12:47:59.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.279" endtime="20201029 12:47:59.666"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.675" endtime="20201029 12:47:59.696"></status>
</kw>
<msg timestamp="20201029 12:47:59.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:59.673" endtime="20201029 12:47:59.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:59.698" endtime="20201029 12:47:59.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.700" endtime="20201029 12:47:59.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.671" endtime="20201029 12:47:59.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.668" endtime="20201029 12:47:59.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.710" endtime="20201029 12:47:59.994"></status>
</kw>
<msg timestamp="20201029 12:47:59.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022930694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02305025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:59.708" endtime="20201029 12:47:59.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022930694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02305025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:59.998" endtime="20201029 12:48:00.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.006" endtime="20201029 12:48:00.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.705" endtime="20201029 12:48:00.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.704" endtime="20201029 12:48:00.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:00.013" level="INFO">${RESULT} = [{'diff': 0.00011955599999999983}, {'diff': 0.00011929200000000001}, {'diff': 0.0001196110000000021}, {'diff': 0.00011947200000000241}, {'diff': 0.00011963899999999777}, {'diff': 0.0001198060000000000...</msg>
<status status="PASS" starttime="20201029 12:48:00.010" endtime="20201029 12:48:00.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:00.018" level="INFO">${ACCURACY} = {'diff': [0.00011955599999999983, 0.00011929200000000001, 0.0001196110000000021, 0.00011947200000000241, 0.00011963899999999777, 0.00011980600000000008, 0.00011977799999999747, 0.00011977800000000094,...</msg>
<status status="PASS" starttime="20201029 12:48:00.014" endtime="20201029 12:48:00.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.023" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201029 12:48:00.022" endtime="20201029 12:48:00.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.025" level="INFO">VALUE: [0.00011955599999999983, 0.00011929200000000001, 0.0001196110000000021, 0.00011947200000000241, 0.00011963899999999777, 0.00011980600000000008, 0.00011977799999999747, 0.00011977800000000094, 0.00011994500000000324, 0.00011994499999999977, 0.00011994499999999977, 0.00011993000000000073, 0.00011977700000000147, 0.00012000000000000205, 0.00011979200000000051, 0.00011929200000000001, 0.0001194309999999997, 0.00011997300000000238, 0.00011962500000000167, 0.00011979100000000104, 0.0001199440000000003, 0.00011927800000000044, 0.00011913900000000074, 0.0001194439999999998, 0.00011955599999999983, 0.00011961099999999864, 0.00011995900000000281, 0.0001194439999999998, 0.00011983299999999975, 0.00011929100000000054, 0.00011995799999999987, 0.00011962500000000167, 0.00011945799999999937, 0.00011927800000000044, 0.00011931899999999968, 0.00011944499999999927, 0.0001199440000000003, 0.00011986099999999889, 0.00011995799999999987, 0.00011943000000000023, 0.00011904199999999976, 0.00011941700000000013, 0.00011917999999999998, 0.00011979200000000051, 0.00011991599999999769, 0.0001193050000000001, 0.00011929100000000054, 0.00011983399999999922, 0.00011947200000000241, 0.00011929200000000001]</msg>
<status status="PASS" starttime="20201029 12:48:00.024" endtime="20201029 12:48:00.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.019" endtime="20201029 12:48:00.027"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:00.031" endtime="20201029 12:48:00.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.029" endtime="20201029 12:48:00.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.028" endtime="20201029 12:48:00.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.667" endtime="20201029 12:48:00.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.666" endtime="20201029 12:48:00.051"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.060" endtime="20201029 12:48:00.081"></status>
</kw>
<msg timestamp="20201029 12:48:00.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:00.059" endtime="20201029 12:48:00.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:00.083" endtime="20201029 12:48:00.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.085" endtime="20201029 12:48:00.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.056" endtime="20201029 12:48:00.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.054" endtime="20201029 12:48:00.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.095" endtime="20201029 12:48:00.382"></status>
</kw>
<msg timestamp="20201029 12:48:00.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022520306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022641153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:00.093" endtime="20201029 12:48:00.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022520306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022641153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:00.386" endtime="20201029 12:48:00.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.394" endtime="20201029 12:48:00.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.090" endtime="20201029 12:48:00.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.089" endtime="20201029 12:48:00.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:00.401" level="INFO">${RESULT} = [{'diff': 0.00012084700000000032}, {'diff': 0.00012008399999999947}, {'diff': 0.00012055600000000083}, {'diff': 0.00012063899999999877}, {'diff': 0.00012029099999999807}, {'diff': 0.000120041999999997...</msg>
<status status="PASS" starttime="20201029 12:48:00.398" endtime="20201029 12:48:00.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:00.405" level="INFO">${ACCURACY} = {'diff': [0.00012084700000000032, 0.00012008399999999947, 0.00012055600000000083, 0.00012063899999999877, 0.00012029099999999807, 0.00012004199999999729, 0.0001201249999999987, 0.00012100000000000305,...</msg>
<status status="PASS" starttime="20201029 12:48:00.402" endtime="20201029 12:48:00.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.410" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201029 12:48:00.409" endtime="20201029 12:48:00.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.412" level="INFO">VALUE: [0.00012084700000000032, 0.00012008399999999947, 0.00012055600000000083, 0.00012063899999999877, 0.00012029099999999807, 0.00012004199999999729, 0.0001201249999999987, 0.00012100000000000305, 0.00012097299999999991, 0.00012079200000000151, 0.00012061199999999911, 0.00012052700000000222, 0.0001209440000000013, 0.00012061099999999964, 0.00012009699999999957, 0.0001204440000000008, 0.00012045899999999984, 0.00012038899999999852, 0.00012009799999999904, 0.0001203050000000011, 0.00012065299999999834, 0.00012027800000000144, 0.00012077800000000194, 0.00012029199999999754, 0.0001205700000000004, 0.00012061099999999964, 0.00012027799999999797, 0.00012101399999999915, 0.00012094399999999783, 0.0001209440000000013, 0.00012027800000000144, 0.00012029200000000101, 0.00012079200000000151, 0.00012033300000000025, 0.00012030599999999711, 0.0001202769999999985, 0.0001202769999999985, 0.00012009700000000303, 0.0001207639999999989, 0.0001201110000000026, 0.0001204440000000008, 0.00012074999999999933, 0.00012058399999999997, 0.0001201249999999987, 0.00012047199999999994, 0.0001203050000000011, 0.00012011099999999914, 0.00012097200000000044, 0.00012062500000000267, 0.0001201249999999987]</msg>
<status status="PASS" starttime="20201029 12:48:00.411" endtime="20201029 12:48:00.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.406" endtime="20201029 12:48:00.414"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:00.418" endtime="20201029 12:48:00.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.416" endtime="20201029 12:48:00.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.415" endtime="20201029 12:48:00.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.052" endtime="20201029 12:48:00.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.052" endtime="20201029 12:48:00.438"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.447" endtime="20201029 12:48:00.470"></status>
</kw>
<msg timestamp="20201029 12:48:00.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:00.446" endtime="20201029 12:48:00.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:00.471" endtime="20201029 12:48:00.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.474" endtime="20201029 12:48:00.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.443" endtime="20201029 12:48:00.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.441" endtime="20201029 12:48:00.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.483" endtime="20201029 12:48:00.772"></status>
</kw>
<msg timestamp="20201029 12:48:00.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023869028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023990875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:00.482" endtime="20201029 12:48:00.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023869028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023990875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:00.781" endtime="20201029 12:48:00.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.799" endtime="20201029 12:48:00.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.479" endtime="20201029 12:48:00.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.477" endtime="20201029 12:48:00.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:00.812" level="INFO">${RESULT} = [{'diff': 0.00012184699999999785}, {'diff': 0.00012161100000000064}, {'diff': 0.0001217639999999999}, {'diff': 0.00012179099999999957}, {'diff': 0.0001212769999999995}, {'diff': 0.00012133300000000125...</msg>
<status status="PASS" starttime="20201029 12:48:00.806" endtime="20201029 12:48:00.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:00.821" level="INFO">${ACCURACY} = {'diff': [0.00012184699999999785, 0.00012161100000000064, 0.0001217639999999999, 0.00012179099999999957, 0.0001212769999999995, 0.00012133300000000125, 0.00012180499999999914, 0.0001214440000000018, 0...</msg>
<status status="PASS" starttime="20201029 12:48:00.814" endtime="20201029 12:48:00.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.830" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201029 12:48:00.828" endtime="20201029 12:48:00.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.836" level="INFO">VALUE: [0.00012184699999999785, 0.00012161100000000064, 0.0001217639999999999, 0.00012179099999999957, 0.0001212769999999995, 0.00012133300000000125, 0.00012180499999999914, 0.0001214440000000018, 0.00012141699999999866, 0.00012161100000000064, 0.00012145900000000084, 0.00012195899999999787, 0.00012161200000000011, 0.0001212769999999995, 0.00012177800000000294, 0.0001219579999999984, 0.0001214579999999979, 0.0001219579999999984, 0.00012144500000000127, 0.00012130600000000158, 0.00012187499999999699, 0.00012161100000000064, 0.0001217639999999999, 0.0001215969999999976, 0.00012145800000000137, 0.00012129199999999854, 0.00012194500000000177, 0.00012161099999999717, 0.00012147199999999747, 0.0001211249999999997, 0.00012195800000000187, 0.00012116700000000188, 0.0001219579999999984, 0.00012161100000000064, 0.00012123600000000026, 0.0001215700000000014, 0.00012161100000000064, 0.0001216250000000002, 0.00012197200000000144, 0.00012147200000000094, 0.00012179199999999904, 0.00012113899999999928, 0.0001211249999999997, 0.00012145899999999737, 0.00012159799999999707, 0.00012111199999999961, 0.00012142999999999876, 0.0001219440000000023, 0.00012113899999999928, 0.0001219579999999984]</msg>
<status status="PASS" starttime="20201029 12:48:00.832" endtime="20201029 12:48:00.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.822" endtime="20201029 12:48:00.839"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:00.847" endtime="20201029 12:48:00.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.843" endtime="20201029 12:48:00.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.841" endtime="20201029 12:48:00.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.439" endtime="20201029 12:48:00.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.439" endtime="20201029 12:48:00.868"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.877" endtime="20201029 12:48:00.898"></status>
</kw>
<msg timestamp="20201029 12:48:00.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:00.875" endtime="20201029 12:48:00.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:00.899" endtime="20201029 12:48:00.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.902" endtime="20201029 12:48:00.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.872" endtime="20201029 12:48:00.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.870" endtime="20201029 12:48:00.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.911" endtime="20201029 12:48:01.196"></status>
</kw>
<msg timestamp="20201029 12:48:01.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022491931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022614986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:00.909" endtime="20201029 12:48:01.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:01.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022491931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022614986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:01.200" endtime="20201029 12:48:01.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:01.209" endtime="20201029 12:48:01.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.907" endtime="20201029 12:48:01.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.905" endtime="20201029 12:48:01.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:01.215" level="INFO">${RESULT} = [{'diff': 0.00012305500000000039}, {'diff': 0.0001229440000000033}, {'diff': 0.0001229030000000006}, {'diff': 0.00012212499999999724}, {'diff': 0.0001229579999999994}, {'diff': 0.00012298700000000148}...</msg>
<status status="PASS" starttime="20201029 12:48:01.212" endtime="20201029 12:48:01.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:01.223" level="INFO">${ACCURACY} = {'diff': [0.00012305500000000039, 0.0001229440000000033, 0.0001229030000000006, 0.00012212499999999724, 0.0001229579999999994, 0.00012298700000000148, 0.00012245899999999837, 0.00012211100000000114, 0...</msg>
<status status="PASS" starttime="20201029 12:48:01.216" endtime="20201029 12:48:01.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:01.227" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201029 12:48:01.226" endtime="20201029 12:48:01.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:01.230" level="INFO">VALUE: [0.00012305500000000039, 0.0001229440000000033, 0.0001229030000000006, 0.00012212499999999724, 0.0001229579999999994, 0.00012298700000000148, 0.00012245899999999837, 0.00012211100000000114, 0.00012294399999999983, 0.00012244399999999933, 0.00012215299999999985, 0.00012244399999999933, 0.0001224860000000015, 0.00012279200000000004, 0.00012211100000000114, 0.00012297199999999897, 0.00012233300000000225, 0.000122777000000001, 0.00012268100000000295, 0.00012259700000000207, 0.00012224999999999736, 0.0001226250000000012, 0.00012211099999999767, 0.0001224449999999988, 0.0001226250000000012, 0.0001224440000000028, 0.00012229100000000007, 0.00012279200000000004, 0.0001227359999999983, 0.00012263900000000078, 0.00012293099999999973, 0.00012261099999999817, 0.00012263900000000078, 0.000122777000000001, 0.00012211100000000114, 0.00012227799999999997, 0.0001228059999999996, 0.00012208299999999853, 0.00012245900000000184, 0.00012212499999999724, 0.00012255499999999989, 0.0001222770000000005, 0.0001222770000000005, 0.00012280500000000014, 0.00012265300000000035, 0.00012211100000000114, 0.0001221250000000007, 0.00012279200000000004, 0.0001221250000000007, 0.0001226250000000012]</msg>
<status status="PASS" starttime="20201029 12:48:01.228" endtime="20201029 12:48:01.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.224" endtime="20201029 12:48:01.231"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:01.235" endtime="20201029 12:48:01.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.233" endtime="20201029 12:48:01.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.232" endtime="20201029 12:48:01.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.869" endtime="20201029 12:48:01.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.868" endtime="20201029 12:48:01.256"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:01.265" endtime="20201029 12:48:01.286"></status>
</kw>
<msg timestamp="20201029 12:48:01.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:01.263" endtime="20201029 12:48:01.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:01.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:01.287" endtime="20201029 12:48:01.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:01.290" endtime="20201029 12:48:01.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.260" endtime="20201029 12:48:01.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.258" endtime="20201029 12:48:01.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:01.299" endtime="20201029 12:48:01.595"></status>
</kw>
<msg timestamp="20201029 12:48:01.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022610236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022734097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:01.298" endtime="20201029 12:48:01.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:01.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022610236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022734097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:01.605" endtime="20201029 12:48:01.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:01.624" endtime="20201029 12:48:01.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.295" endtime="20201029 12:48:01.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.293" endtime="20201029 12:48:01.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:01.640" level="INFO">${RESULT} = [{'diff': 0.00012386100000000289}, {'diff': 0.00012318099999999998}, {'diff': 0.0001234579999999999}, {'diff': 0.00012359700000000307}, {'diff': 0.0001239450000000003}, {'diff': 0.0001234449999999998}...</msg>
<status status="PASS" starttime="20201029 12:48:01.631" endtime="20201029 12:48:01.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:01.650" level="INFO">${ACCURACY} = {'diff': [0.00012386100000000289, 0.00012318099999999998, 0.0001234579999999999, 0.00012359700000000307, 0.0001239450000000003, 0.0001234449999999998, 0.00012313799999999833, 0.00012368100000000048, 0...</msg>
<status status="PASS" starttime="20201029 12:48:01.643" endtime="20201029 12:48:01.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:01.659" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201029 12:48:01.657" endtime="20201029 12:48:01.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:01.663" level="INFO">VALUE: [0.00012386100000000289, 0.00012318099999999998, 0.0001234579999999999, 0.00012359700000000307, 0.0001239450000000003, 0.0001234449999999998, 0.00012313799999999833, 0.00012368100000000048, 0.00012398599999999954, 0.00012380500000000114, 0.0001233060000000001, 0.00012320799999999965, 0.00012379200000000104, 0.00012326399999999793, 0.00012323600000000226, 0.0001234579999999999, 0.00012388799999999908, 0.0001237359999999993, 0.00012311099999999867, 0.00012329200000000054, 0.0001234449999999998, 0.00012345899999999937, 0.00012343100000000023, 0.0001231120000000016, 0.00012362499999999874, 0.00012382000000000018, 0.00012379199999999757, 0.00012327800000000097, 0.00012329199999999707, 0.0001232640000000014, 0.00012345899999999937, 0.0001237229999999992, 0.0001239580000000004, 0.00012361100000000264, 0.00012350000000000208, 0.00012358300000000003, 0.00012312499999999824, 0.0001232779999999975, 0.00012377800000000147, 0.00012380499999999767, 0.00012379100000000157, 0.0001232770000000015, 0.00012329100000000107, 0.0001235969999999996, 0.00012361099999999917, 0.0001234449999999998, 0.00012388899999999856, 0.00012311099999999867, 0.00012350000000000208, 0.0001234579999999999]</msg>
<status status="PASS" starttime="20201029 12:48:01.662" endtime="20201029 12:48:01.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.652" endtime="20201029 12:48:01.665"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:01.668" endtime="20201029 12:48:01.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.667" endtime="20201029 12:48:01.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.666" endtime="20201029 12:48:01.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.257" endtime="20201029 12:48:01.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.256" endtime="20201029 12:48:01.689"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:01.698" endtime="20201029 12:48:01.721"></status>
</kw>
<msg timestamp="20201029 12:48:01.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:01.697" endtime="20201029 12:48:01.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:01.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:01.722" endtime="20201029 12:48:01.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:01.725" endtime="20201029 12:48:01.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.694" endtime="20201029 12:48:01.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.692" endtime="20201029 12:48:01.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:01.734" endtime="20201029 12:48:02.022"></status>
</kw>
<msg timestamp="20201029 12:48:02.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023610528, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:48:01.733" endtime="20201029 12:48:02.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023610528, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:48:02.026" endtime="20201029 12:48:02.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.034" endtime="20201029 12:48:02.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.730" endtime="20201029 12:48:02.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.728" endtime="20201029 12:48:02.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:02.040" level="INFO">${RESULT} = [{'diff': 0.00012452799999999875}, {'diff': 0.0001245970000000006}, {'diff': 0.00012415200000000237}, {'diff': 0.00012412499999999924}, {'diff': 0.00012461100000000017}, {'diff': 0.0001242909999999986...</msg>
<status status="PASS" starttime="20201029 12:48:02.037" endtime="20201029 12:48:02.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:02.044" level="INFO">${ACCURACY} = {'diff': [0.00012452799999999875, 0.0001245970000000006, 0.00012415200000000237, 0.00012412499999999924, 0.00012461100000000017, 0.0001242909999999986, 0.00012494399999999836, 0.0001242779999999985, 0...</msg>
<status status="PASS" starttime="20201029 12:48:02.041" endtime="20201029 12:48:02.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.049" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201029 12:48:02.048" endtime="20201029 12:48:02.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.051" level="INFO">VALUE: [0.00012452799999999875, 0.0001245970000000006, 0.00012415200000000237, 0.00012412499999999924, 0.00012461100000000017, 0.0001242909999999986, 0.00012494399999999836, 0.0001242779999999985, 0.00012429200000000154, 0.0001247640000000029, 0.00012495900000000087, 0.00012412499999999924, 0.0001249719999999975, 0.00012462499999999974, 0.00012494399999999836, 0.0001244580000000009, 0.00012494499999999784, 0.0001246389999999993, 0.0001249719999999975, 0.00012495799999999793, 0.00012494399999999836, 0.00012461100000000017, 0.00012461100000000017, 0.00012493099999999827, 0.00012491700000000217, 0.0001244450000000008, 0.00012493099999999827, 0.0001244450000000008, 0.00012461100000000017, 0.00012427800000000197, 0.00012484800000000032, 0.00012479199999999857, 0.0001240970000000001, 0.000124777999999999, 0.00012493100000000174, 0.00012422200000000022, 0.00012444399999999786, 0.00012456900000000146, 0.00012461100000000017, 0.0001242640000000024, 0.0001244580000000009, 0.000124777999999999, 0.0001249450000000013, 0.0001249580000000014, 0.000124777000000003, 0.0001247909999999991, 0.0001244580000000009, 0.00012436099999999992, 0.00012412499999999924, 0.00012430599999999764]</msg>
<status status="PASS" starttime="20201029 12:48:02.050" endtime="20201029 12:48:02.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.045" endtime="20201029 12:48:02.053"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:02.057" endtime="20201029 12:48:02.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.055" endtime="20201029 12:48:02.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.054" endtime="20201029 12:48:02.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.690" endtime="20201029 12:48:02.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.690" endtime="20201029 12:48:02.077"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.086" endtime="20201029 12:48:02.106"></status>
</kw>
<msg timestamp="20201029 12:48:02.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:02.084" endtime="20201029 12:48:02.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:02.108" endtime="20201029 12:48:02.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.110" endtime="20201029 12:48:02.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.082" endtime="20201029 12:48:02.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.080" endtime="20201029 12:48:02.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.119" endtime="20201029 12:48:02.413"></status>
</kw>
<msg timestamp="20201029 12:48:02.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022008639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022133806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:02.118" endtime="20201029 12:48:02.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022008639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022133806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:02.422" endtime="20201029 12:48:02.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.440" endtime="20201029 12:48:02.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.115" endtime="20201029 12:48:02.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.113" endtime="20201029 12:48:02.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:02.454" level="INFO">${RESULT} = [{'diff': 0.00012516699999999895}, {'diff': 0.00012562500000000074}, {'diff': 0.0001259580000000024}, {'diff': 0.00012594399999999936}, {'diff': 0.00012579199999999957}, {'diff': 0.0001253059999999986...</msg>
<status status="PASS" starttime="20201029 12:48:02.447" endtime="20201029 12:48:02.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:02.464" level="INFO">${ACCURACY} = {'diff': [0.00012516699999999895, 0.00012562500000000074, 0.0001259580000000024, 0.00012594399999999936, 0.00012579199999999957, 0.00012530599999999864, 0.00012559699999999813, 0.00012529199999999907,...</msg>
<status status="PASS" starttime="20201029 12:48:02.456" endtime="20201029 12:48:02.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.473" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201029 12:48:02.471" endtime="20201029 12:48:02.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.475" level="INFO">VALUE: [0.00012516699999999895, 0.00012562500000000074, 0.0001259580000000024, 0.00012594399999999936, 0.00012579199999999957, 0.00012530599999999864, 0.00012559699999999813, 0.00012529199999999907, 0.00012526399999999993, 0.0001259299999999998, 0.0001256390000000003, 0.00012529199999999907, 0.000125471999999998, 0.00012601400000000068, 0.00012545900000000137, 0.00012594499999999884, 0.00012541700000000267, 0.00012561100000000117, 0.0001256109999999977, 0.0001255970000000016, 0.00012530599999999864, 0.00012563899999999684, 0.00012538900000000006, 0.00012529199999999907, 0.00012562500000000074, 0.00012530499999999917, 0.00012516699999999895, 0.00012558300000000203, 0.0001258199999999987, 0.0001251389999999998, 0.00012529199999999907, 0.00012594499999999884, 0.0001260000000000011, 0.00012544399999999886, 0.00012541599999999972, 0.00012584800000000132, 0.0001254169999999992, 0.00012562500000000074, 0.00012597299999999798, 0.00012545900000000137, 0.00012545900000000137, 0.00012544399999999886, 0.00012594399999999936, 0.00012561100000000117, 0.0001257499999999974, 0.0001252779999999995, 0.00012588900000000056, 0.0001252360000000008, 0.0001252360000000008, 0.00012580499999999967]</msg>
<status status="PASS" starttime="20201029 12:48:02.474" endtime="20201029 12:48:02.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.466" endtime="20201029 12:48:02.477"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:02.480" endtime="20201029 12:48:02.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.479" endtime="20201029 12:48:02.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.478" endtime="20201029 12:48:02.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.078" endtime="20201029 12:48:02.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.078" endtime="20201029 12:48:02.501"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.509" endtime="20201029 12:48:02.530"></status>
</kw>
<msg timestamp="20201029 12:48:02.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:02.508" endtime="20201029 12:48:02.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:02.531" endtime="20201029 12:48:02.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.534" endtime="20201029 12:48:02.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.505" endtime="20201029 12:48:02.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.503" endtime="20201029 12:48:02.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.543" endtime="20201029 12:48:02.829"></status>
</kw>
<msg timestamp="20201029 12:48:02.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021997208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022124222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:02.541" endtime="20201029 12:48:02.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021997208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022124222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:02.833" endtime="20201029 12:48:02.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.841" endtime="20201029 12:48:02.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.539" endtime="20201029 12:48:02.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.537" endtime="20201029 12:48:02.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:02.848" level="INFO">${RESULT} = [{'diff': 0.0001270139999999982}, {'diff': 0.00012679200000000057}, {'diff': 0.00012615300000000038}, {'diff': 0.00012694499999999984}, {'diff': 0.00012627799999999703}, {'diff': 0.0001261110000000016...</msg>
<status status="PASS" starttime="20201029 12:48:02.844" endtime="20201029 12:48:02.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:02.851" level="INFO">${ACCURACY} = {'diff': [0.0001270139999999982, 0.00012679200000000057, 0.00012615300000000038, 0.00012694499999999984, 0.00012627799999999703, 0.00012611100000000167, 0.00012643100000000324, 0.00012645799999999943,...</msg>
<status status="PASS" starttime="20201029 12:48:02.848" endtime="20201029 12:48:02.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.856" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201029 12:48:02.855" endtime="20201029 12:48:02.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.858" level="INFO">VALUE: [0.0001270139999999982, 0.00012679200000000057, 0.00012615300000000038, 0.00012694499999999984, 0.00012627799999999703, 0.00012611100000000167, 0.00012643100000000324, 0.00012645799999999943, 0.00012665300000000088, 0.00012679200000000057, 0.00012652700000000128, 0.00012629200000000007, 0.00012612500000000124, 0.00012612500000000124, 0.0001260979999999981, 0.00012611100000000167, 0.00012645799999999943, 0.00012661100000000217, 0.000126778000000001, 0.0001266109999999987, 0.0001261109999999982, 0.0001266109999999987, 0.00012662499999999827, 0.00012659699999999913, 0.00012644400000000333, 0.00012612500000000124, 0.00012679200000000057, 0.00012629200000000007, 0.00012609699999999863, 0.0001265979999999986, 0.00012668100000000002, 0.00012677700000000153, 0.00012612500000000124, 0.0001269719999999995, 0.00012679200000000057, 0.0001264450000000028, 0.0001269450000000033, 0.0001269309999999968, 0.00012694400000000036, 0.00012641600000000072, 0.00012679099999999763, 0.0001261390000000008, 0.00012644399999999986, 0.0001260970000000021, 0.00012661100000000217, 0.0001261109999999982, 0.00012637499999999802, 0.0001266109999999987, 0.00012663899999999784, 0.00012638900000000106]</msg>
<status status="PASS" starttime="20201029 12:48:02.857" endtime="20201029 12:48:02.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.852" endtime="20201029 12:48:02.860"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:02.863" endtime="20201029 12:48:02.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.862" endtime="20201029 12:48:02.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.860" endtime="20201029 12:48:02.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.502" endtime="20201029 12:48:02.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.501" endtime="20201029 12:48:02.884"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.893" endtime="20201029 12:48:02.916"></status>
</kw>
<msg timestamp="20201029 12:48:02.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:02.891" endtime="20201029 12:48:02.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:02.917" endtime="20201029 12:48:02.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.920" endtime="20201029 12:48:02.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.889" endtime="20201029 12:48:02.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.886" endtime="20201029 12:48:02.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.929" endtime="20201029 12:48:03.214"></status>
</kw>
<msg timestamp="20201029 12:48:03.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024336583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024463931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:02.927" endtime="20201029 12:48:03.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024336583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024463931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:03.218" endtime="20201029 12:48:03.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:03.226" endtime="20201029 12:48:03.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.925" endtime="20201029 12:48:03.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.923" endtime="20201029 12:48:03.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:03.232" level="INFO">${RESULT} = [{'diff': 0.00012734800000000282}, {'diff': 0.00012713799999999886}, {'diff': 0.00012756899999999752}, {'diff': 0.00012729099999999813}, {'diff': 0.00012772200000000025}, {'diff': 0.000127749999999999...</msg>
<status status="PASS" starttime="20201029 12:48:03.229" endtime="20201029 12:48:03.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:03.236" level="INFO">${ACCURACY} = {'diff': [0.00012734800000000282, 0.00012713799999999886, 0.00012756899999999752, 0.00012729099999999813, 0.00012772200000000025, 0.0001277499999999994, 0.00012744400000000086, 0.00012712500000000224,...</msg>
<status status="PASS" starttime="20201029 12:48:03.233" endtime="20201029 12:48:03.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.240" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201029 12:48:03.239" endtime="20201029 12:48:03.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.243" level="INFO">VALUE: [0.00012734800000000282, 0.00012713799999999886, 0.00012756899999999752, 0.00012729099999999813, 0.00012772200000000025, 0.0001277499999999994, 0.00012744400000000086, 0.00012712500000000224, 0.0001274589999999999, 0.00012783299999999734, 0.00012705500000000092, 0.00012729099999999813, 0.00012794400000000136, 0.0001272780000000015, 0.00012794500000000084, 0.00012777799999999853, 0.00012794500000000084, 0.000127262999999999, 0.00012727699999999856, 0.00012727799999999803, 0.000127778000000002, 0.00012744400000000086, 0.00012726400000000193, 0.00012729200000000107, 0.0001279590000000004, 0.00012709699999999963, 0.00012792999999999832, 0.00012745799999999696, 0.00012779200000000157, 0.00012744400000000086, 0.00012762499999999927, 0.000127778000000002, 0.0001277919999999981, 0.0001276529999999984, 0.00012777699999999906, 0.00012759700000000013, 0.0001279720000000005, 0.00012795800000000093, 0.0001276390000000023, 0.00012712499999999877, 0.00012712499999999877, 0.0001278049999999982, 0.00012744400000000086, 0.0001279439999999979, 0.0001271109999999992, 0.00012715300000000138, 0.00012729200000000107, 0.0001272780000000015, 0.00012762500000000274, 0.0001278049999999982]</msg>
<status status="PASS" starttime="20201029 12:48:03.242" endtime="20201029 12:48:03.245"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.237" endtime="20201029 12:48:03.245"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:03.249" endtime="20201029 12:48:03.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.247" endtime="20201029 12:48:03.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.246" endtime="20201029 12:48:03.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.885" endtime="20201029 12:48:03.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.884" endtime="20201029 12:48:03.269"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:03.278" endtime="20201029 12:48:03.299"></status>
</kw>
<msg timestamp="20201029 12:48:03.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:03.276" endtime="20201029 12:48:03.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:03.300" endtime="20201029 12:48:03.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:03.303" endtime="20201029 12:48:03.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.274" endtime="20201029 12:48:03.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.272" endtime="20201029 12:48:03.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:03.312" endtime="20201029 12:48:03.598"></status>
</kw>
<msg timestamp="20201029 12:48:03.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022047111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022175611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:03.310" endtime="20201029 12:48:03.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022047111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022175611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:03.602" endtime="20201029 12:48:03.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:03.610" endtime="20201029 12:48:03.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.308" endtime="20201029 12:48:03.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.306" endtime="20201029 12:48:03.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:03.616" level="INFO">${RESULT} = [{'diff': 0.00012850000000000014}, {'diff': 0.00012845800000000143}, {'diff': 0.00012845800000000143}, {'diff': 0.0001286659999999995}, {'diff': 0.00012812500000000324}, {'diff': 0.0001287639999999999...</msg>
<status status="PASS" starttime="20201029 12:48:03.613" endtime="20201029 12:48:03.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:03.621" level="INFO">${ACCURACY} = {'diff': [0.00012850000000000014, 0.00012845800000000143, 0.00012845800000000143, 0.0001286659999999995, 0.00012812500000000324, 0.00012876399999999996, 0.0001286110000000007, 0.00012862500000000027, ...</msg>
<status status="PASS" starttime="20201029 12:48:03.617" endtime="20201029 12:48:03.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.626" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201029 12:48:03.625" endtime="20201029 12:48:03.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.628" level="INFO">VALUE: [0.00012850000000000014, 0.00012845800000000143, 0.00012845800000000143, 0.0001286659999999995, 0.00012812500000000324, 0.00012876399999999996, 0.0001286110000000007, 0.00012862500000000027, 0.00012863899999999984, 0.00012862500000000027, 0.0001286110000000007, 0.00012894500000000184, 0.0001283049999999987, 0.0001285980000000006, 0.00012812499999999977, 0.00012879200000000257, 0.00012877799999999953, 0.0001280560000000014, 0.00012862500000000027, 0.00012880500000000267, 0.00012844500000000134, 0.00012813899999999934, 0.00012829099999999913, 0.00012827799999999903, 0.00012877799999999953, 0.00012877799999999953, 0.00012827799999999903, 0.00012812499999999977, 0.00012841600000000272, 0.00012847199999999753, 0.00012895800000000193, 0.00012887500000000052, 0.00012826399999999946, 0.0001284439999999984, 0.0001286110000000007, 0.00012830599999999817, 0.0001287919999999991, 0.0001284300000000023, 0.00012895799999999846, 0.0001283889999999996, 0.00012892999999999932, 0.000128472000000001, 0.00012862500000000027, 0.0001287919999999991, 0.00012862500000000027, 0.0001288330000000018, 0.00012861099999999723, 0.00012812499999999977, 0.00012858300000000156, 0.00012895799999999846]</msg>
<status status="PASS" starttime="20201029 12:48:03.627" endtime="20201029 12:48:03.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.622" endtime="20201029 12:48:03.635"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:03.639" endtime="20201029 12:48:03.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.638" endtime="20201029 12:48:03.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.636" endtime="20201029 12:48:03.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.270" endtime="20201029 12:48:03.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.270" endtime="20201029 12:48:03.660"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:03.668" endtime="20201029 12:48:03.690"></status>
</kw>
<msg timestamp="20201029 12:48:03.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:03.667" endtime="20201029 12:48:03.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:03.691" endtime="20201029 12:48:03.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:03.694" endtime="20201029 12:48:03.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.664" endtime="20201029 12:48:03.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.662" endtime="20201029 12:48:03.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:03.703" endtime="20201029 12:48:03.991"></status>
</kw>
<msg timestamp="20201029 12:48:03.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022047083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022176264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:03.701" endtime="20201029 12:48:03.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022047083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022176264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:03.995" endtime="20201029 12:48:04.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.003" endtime="20201029 12:48:04.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.699" endtime="20201029 12:48:04.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.697" endtime="20201029 12:48:04.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:04.009" level="INFO">${RESULT} = [{'diff': 0.00012918100000000252}, {'diff': 0.00012911099999999773}, {'diff': 0.00012945899999999844}, {'diff': 0.0001299439999999999}, {'diff': 0.0001299439999999999}, {'diff': 0.00012916699999999948...</msg>
<status status="PASS" starttime="20201029 12:48:04.006" endtime="20201029 12:48:04.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:04.013" level="INFO">${ACCURACY} = {'diff': [0.00012918100000000252, 0.00012911099999999773, 0.00012945899999999844, 0.0001299439999999999, 0.0001299439999999999, 0.00012916699999999948, 0.0001292919999999996, 0.00012961099999999823, 0...</msg>
<status status="PASS" starttime="20201029 12:48:04.010" endtime="20201029 12:48:04.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.018" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201029 12:48:04.017" endtime="20201029 12:48:04.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.020" level="INFO">VALUE: [0.00012918100000000252, 0.00012911099999999773, 0.00012945899999999844, 0.0001299439999999999, 0.0001299439999999999, 0.00012916699999999948, 0.0001292919999999996, 0.00012961099999999823, 0.00012947199999999853, 0.0001298890000000011, 0.0001296110000000017, 0.00012945800000000243, 0.0001298880000000016, 0.00012929100000000013, 0.0001291110000000012, 0.0001296249999999978, 0.00012959700000000213, 0.00012927800000000003, 0.00012908399999999806, 0.0001296249999999978, 0.0001296110000000017, 0.0001291110000000012, 0.00012949999999999767, 0.00012927800000000003, 0.00012977800000000053, 0.0001299309999999998, 0.0001299590000000024, 0.00012963900000000084, 0.00012977800000000053, 0.00012927800000000003, 0.00012911099999999773, 0.00012977800000000053, 0.00012980599999999967, 0.00013001399999999774, 0.00012981899999999977, 0.0001298050000000002, 0.00012959700000000213, 0.00012981999999999924, 0.00012926400000000046, 0.0001294439999999994, 0.0001293330000000023, 0.00012962500000000127, 0.00012962500000000127, 0.00012923599999999785, 0.00012961099999999823, 0.0001296249999999978, 0.00012995799999999946, 0.0001291249999999973, 0.00012986099999999848, 0.00012976400000000096]</msg>
<status status="PASS" starttime="20201029 12:48:04.019" endtime="20201029 12:48:04.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.014" endtime="20201029 12:48:04.021"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:04.025" endtime="20201029 12:48:04.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.023" endtime="20201029 12:48:04.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.022" endtime="20201029 12:48:04.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.661" endtime="20201029 12:48:04.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.660" endtime="20201029 12:48:04.046"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.054" endtime="20201029 12:48:04.076"></status>
</kw>
<msg timestamp="20201029 12:48:04.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:04.053" endtime="20201029 12:48:04.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:04.078" endtime="20201029 12:48:04.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.080" endtime="20201029 12:48:04.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.050" endtime="20201029 12:48:04.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.048" endtime="20201029 12:48:04.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.089" endtime="20201029 12:48:04.374"></status>
</kw>
<msg timestamp="20201029 12:48:04.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022835931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022966097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:04.088" endtime="20201029 12:48:04.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022835931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022966097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:04.379" endtime="20201029 12:48:04.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.387" endtime="20201029 12:48:04.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.085" endtime="20201029 12:48:04.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.083" endtime="20201029 12:48:04.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:04.393" level="INFO">${RESULT} = [{'diff': 0.000130166000000001}, {'diff': 0.00013059699999999966}, {'diff': 0.00013018000000000057}, {'diff': 0.00013061099999999923}, {'diff': 0.00013044499999999987}, {'diff': 0.00013054200000000085...</msg>
<status status="PASS" starttime="20201029 12:48:04.390" endtime="20201029 12:48:04.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:04.397" level="INFO">${ACCURACY} = {'diff': [0.000130166000000001, 0.00013059699999999966, 0.00013018000000000057, 0.00013061099999999923, 0.00013044499999999987, 0.00013054200000000085, 0.0001306110000000027, 0.0001308050000000012, 0....</msg>
<status status="PASS" starttime="20201029 12:48:04.394" endtime="20201029 12:48:04.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.401" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201029 12:48:04.400" endtime="20201029 12:48:04.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.405" level="INFO">VALUE: [0.000130166000000001, 0.00013059699999999966, 0.00013018000000000057, 0.00013061099999999923, 0.00013044499999999987, 0.00013054200000000085, 0.0001306110000000027, 0.0001308050000000012, 0.0001302920000000006, 0.00013095800000000046, 0.00013079199999999763, 0.00013080600000000067, 0.00013012500000000177, 0.00013027800000000103, 0.0001309440000000009, 0.00013082000000000024, 0.0001301249999999983, 0.0001304440000000004, 0.00013093099999999733, 0.0001307089999999997, 0.0001304310000000003, 0.00013045799999999996, 0.00013062500000000227, 0.0001301249999999983, 0.0001301530000000009, 0.0001309440000000009, 0.00013061099999999923, 0.00013095899999999994, 0.00013045899999999944, 0.00013079100000000163, 0.00013062500000000227, 0.00013045799999999996, 0.0001305830000000001, 0.0001300829999999996, 0.00013061099999999923, 0.00013030600000000017, 0.0001308050000000012, 0.00013095800000000046, 0.0001302769999999981, 0.00013066700000000098, 0.00013062500000000227, 0.00013013899999999787, 0.00013044499999999987, 0.00013044499999999987, 0.00013077799999999806, 0.00013019400000000014, 0.00013013899999999787, 0.0001308050000000012, 0.00013045799999999996, 0.00013065299999999794]</msg>
<status status="PASS" starttime="20201029 12:48:04.403" endtime="20201029 12:48:04.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.398" endtime="20201029 12:48:04.406"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:04.410" endtime="20201029 12:48:04.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.408" endtime="20201029 12:48:04.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.407" endtime="20201029 12:48:04.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.046" endtime="20201029 12:48:04.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.046" endtime="20201029 12:48:04.430"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.439" endtime="20201029 12:48:04.459"></status>
</kw>
<msg timestamp="20201029 12:48:04.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:04.437" endtime="20201029 12:48:04.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:04.461" endtime="20201029 12:48:04.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.463" endtime="20201029 12:48:04.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.435" endtime="20201029 12:48:04.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.433" endtime="20201029 12:48:04.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.472" endtime="20201029 12:48:04.757"></status>
</kw>
<msg timestamp="20201029 12:48:04.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021883653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022014833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:04.471" endtime="20201029 12:48:04.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021883653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022014833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:04.761" endtime="20201029 12:48:04.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.769" endtime="20201029 12:48:04.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.468" endtime="20201029 12:48:04.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.467" endtime="20201029 12:48:04.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:04.776" level="INFO">${RESULT} = [{'diff': 0.00013118000000000157}, {'diff': 0.00013177800000000253}, {'diff': 0.00013127799999999856}, {'diff': 0.00013145800000000096}, {'diff': 0.0001319730000000005}, {'diff': 0.0001314030000000021...</msg>
<status status="PASS" starttime="20201029 12:48:04.773" endtime="20201029 12:48:04.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:04.783" level="INFO">${ACCURACY} = {'diff': [0.00013118000000000157, 0.00013177800000000253, 0.00013127799999999856, 0.00013145800000000096, 0.0001319730000000005, 0.00013140300000000216, 0.0001314449999999974, 0.00013192999999999885, ...</msg>
<status status="PASS" starttime="20201029 12:48:04.777" endtime="20201029 12:48:04.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.787" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201029 12:48:04.786" endtime="20201029 12:48:04.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.790" level="INFO">VALUE: [0.00013118000000000157, 0.00013177800000000253, 0.00013127799999999856, 0.00013145800000000096, 0.0001319730000000005, 0.00013140300000000216, 0.0001314449999999974, 0.00013192999999999885, 0.0001317769999999996, 0.00013116700000000148, 0.00013179199999999863, 0.00013195900000000094, 0.00013177799999999906, 0.0001313189999999978, 0.00013163899999999937, 0.00013144399999999792, 0.0001311249999999993, 0.00013127800000000203, 0.00013193099999999833, 0.00013194500000000137, 0.0001310279999999983, 0.00013115199999999896, 0.00013177700000000306, 0.0001311249999999993, 0.000131957999999998, 0.00013142999999999835, 0.00013127800000000203, 0.000131570000000001, 0.0001316249999999998, 0.0001319449999999979, 0.00013126299999999952, 0.00013108299999999712, 0.00013187500000000005, 0.0001311249999999993, 0.00013149999999999967, 0.0001320279999999993, 0.0001311249999999993, 0.00013111200000000267, 0.00013145800000000096, 0.00013159700000000066, 0.000131957999999998, 0.0001312920000000016, 0.00013109700000000016, 0.00013174999999999992, 0.00013129199999999813, 0.00013138899999999912, 0.00013162500000000327, 0.00013159700000000066, 0.00013161100000000023, 0.0001312920000000016]</msg>
<status status="PASS" starttime="20201029 12:48:04.788" endtime="20201029 12:48:04.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.784" endtime="20201029 12:48:04.791"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:04.795" endtime="20201029 12:48:04.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.793" endtime="20201029 12:48:04.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.792" endtime="20201029 12:48:04.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.431" endtime="20201029 12:48:04.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.431" endtime="20201029 12:48:04.815"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.824" endtime="20201029 12:48:04.846"></status>
</kw>
<msg timestamp="20201029 12:48:04.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:04.822" endtime="20201029 12:48:04.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:04.847" endtime="20201029 12:48:04.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.850" endtime="20201029 12:48:04.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.820" endtime="20201029 12:48:04.852"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.818" endtime="20201029 12:48:04.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.859" endtime="20201029 12:48:05.145"></status>
</kw>
<msg timestamp="20201029 12:48:05.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021928986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022061514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:04.857" endtime="20201029 12:48:05.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021928986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022061514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:05.149" endtime="20201029 12:48:05.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.157" endtime="20201029 12:48:05.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.855" endtime="20201029 12:48:05.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.853" endtime="20201029 12:48:05.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:05.163" level="INFO">${RESULT} = [{'diff': 0.0001325279999999998}, {'diff': 0.00013227800000000303}, {'diff': 0.00013229199999999913}, {'diff': 0.0001329860000000016}, {'diff': 0.0001327909999999967}, {'diff': 0.00013245800000000196}...</msg>
<status status="PASS" starttime="20201029 12:48:05.160" endtime="20201029 12:48:05.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:05.167" level="INFO">${ACCURACY} = {'diff': [0.0001325279999999998, 0.00013227800000000303, 0.00013229199999999913, 0.0001329860000000016, 0.0001327909999999967, 0.00013245800000000196, 0.00013291699999999976, 0.00013218100000000205, 0...</msg>
<status status="PASS" starttime="20201029 12:48:05.164" endtime="20201029 12:48:05.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.171" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201029 12:48:05.170" endtime="20201029 12:48:05.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.174" level="INFO">VALUE: [0.0001325279999999998, 0.00013227800000000303, 0.00013229199999999913, 0.0001329860000000016, 0.0001327909999999967, 0.00013245800000000196, 0.00013291699999999976, 0.00013218100000000205, 0.0001325969999999982, 0.0001326250000000008, 0.00013211100000000073, 0.0001320969999999977, 0.00013255499999999948, 0.00013261099999999776, 0.00013209700000000116, 0.0001322920000000026, 0.00013265299999999994, 0.00013227799999999956, 0.00013244500000000187, 0.00013259700000000166, 0.00013213899999999987, 0.00013242999999999935, 0.00013229199999999913, 0.0001320830000000016, 0.0001329449999999989, 0.00013277800000000006, 0.00013286100000000148, 0.00013229099999999966, 0.0001327770000000006, 0.00013211100000000073, 0.00013242999999999935, 0.000132264, 0.00013245899999999797, 0.00013295899999999847, 0.0001326120000000007, 0.00013292999999999985, 0.00013297199999999856, 0.00013279199999999963, 0.00013213899999999987, 0.00013245900000000144, 0.00013293099999999933, 0.00013283299999999887, 0.00013213899999999987, 0.00013211100000000073, 0.00013213899999999987, 0.0001327640000000005, 0.00013211100000000073, 0.0001321250000000003, 0.0001328059999999992, 0.00013245800000000196]</msg>
<status status="PASS" starttime="20201029 12:48:05.173" endtime="20201029 12:48:05.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.168" endtime="20201029 12:48:05.175"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:05.179" endtime="20201029 12:48:05.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.177" endtime="20201029 12:48:05.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.176" endtime="20201029 12:48:05.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.816" endtime="20201029 12:48:05.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.816" endtime="20201029 12:48:05.199"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.208" endtime="20201029 12:48:05.230"></status>
</kw>
<msg timestamp="20201029 12:48:05.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:05.206" endtime="20201029 12:48:05.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:05.232" endtime="20201029 12:48:05.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.234" endtime="20201029 12:48:05.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.204" endtime="20201029 12:48:05.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.202" endtime="20201029 12:48:05.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.243" endtime="20201029 12:48:05.529"></status>
</kw>
<msg timestamp="20201029 12:48:05.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022792542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022926375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:05.242" endtime="20201029 12:48:05.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022792542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022926375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:05.533" endtime="20201029 12:48:05.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.541" endtime="20201029 12:48:05.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.239" endtime="20201029 12:48:05.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.237" endtime="20201029 12:48:05.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:05.548" level="INFO">${RESULT} = [{'diff': 0.00013383299999999987}, {'diff': 0.00013334699999999894}, {'diff': 0.00013311099999999826}, {'diff': 0.00013329200000000013}, {'diff': 0.00013401399999999827}, {'diff': 0.000133944999999999...</msg>
<status status="PASS" starttime="20201029 12:48:05.545" endtime="20201029 12:48:05.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:05.551" level="INFO">${ACCURACY} = {'diff': [0.00013383299999999987, 0.00013334699999999894, 0.00013311099999999826, 0.00013329200000000013, 0.00013401399999999827, 0.0001339449999999999, 0.000133958, 0.0001336250000000018, 0.000133167...</msg>
<status status="PASS" starttime="20201029 12:48:05.549" endtime="20201029 12:48:05.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.556" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201029 12:48:05.555" endtime="20201029 12:48:05.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.558" level="INFO">VALUE: [0.00013383299999999987, 0.00013334699999999894, 0.00013311099999999826, 0.00013329200000000013, 0.00013401399999999827, 0.0001339449999999999, 0.000133958, 0.0001336250000000018, 0.000133167, 0.00013347199999999906, 0.00013344399999999992, 0.0001334449999999994, 0.00013359800000000213, 0.00013329200000000013, 0.00013393100000000033, 0.00013311100000000173, 0.0001331250000000013, 0.0001335410000000009, 0.00013374999999999845, 0.0001338060000000002, 0.00013361099999999876, 0.0001334449999999994, 0.0001336250000000018, 0.00013329100000000066, 0.00013379100000000116, 0.00013394400000000042, 0.00013327800000000056, 0.0001333059999999997, 0.00013361100000000223, 0.0001331250000000013, 0.00013372200000000278, 0.00013361099999999876, 0.00013394400000000042, 0.00013311099999999826, 0.0001337640000000015, 0.00013379200000000063, 0.0001336389999999979, 0.00013329100000000066, 0.00013394400000000042, 0.00013374999999999845, 0.00013311100000000173, 0.0001336250000000018, 0.000133264000000001, 0.00013327800000000056, 0.0001334449999999994, 0.00013394400000000042, 0.0001337909999999977, 0.00013397200000000303, 0.0001332779999999971, 0.0001331250000000013]</msg>
<status status="PASS" starttime="20201029 12:48:05.557" endtime="20201029 12:48:05.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.552" endtime="20201029 12:48:05.560"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:05.564" endtime="20201029 12:48:05.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.563" endtime="20201029 12:48:05.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.561" endtime="20201029 12:48:05.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.200" endtime="20201029 12:48:05.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.200" endtime="20201029 12:48:05.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.825" endtime="20201029 12:48:05.585"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:26.756" endtime="20201029 12:48:05.585" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:46:46.675" endtime="20201029 12:48:05.589"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.641" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:48:05.649" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:48:06.846" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:48:05.640" endtime="20201029 12:48:06.848"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.853" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:48:06.850" endtime="20201029 12:48:06.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.638" endtime="20201029 12:48:06.855"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:06.859" endtime="20201029 12:48:07.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.856" endtime="20201029 12:48:07.106"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.119" endtime="20201029 12:48:07.136"></status>
</kw>
<msg timestamp="20201029 12:48:07.136" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:07.117" endtime="20201029 12:48:07.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.139" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:07.137" endtime="20201029 12:48:07.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.142" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:48:07.140" endtime="20201029 12:48:07.142"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:07.115" endtime="20201029 12:48:07.143"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:07.112" endtime="20201029 12:48:07.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.111" endtime="20201029 12:48:07.144"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:48:07.147" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:48:07.147" endtime="20201029 12:48:07.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.144" endtime="20201029 12:48:07.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.110" endtime="20201029 12:48:07.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.109" endtime="20201029 12:48:07.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.149" endtime="20201029 12:48:07.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.108" endtime="20201029 12:48:07.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.152" endtime="20201029 12:48:07.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.107" endtime="20201029 12:48:07.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.637" endtime="20201029 12:48:07.154"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:07.160" endtime="20201029 12:48:07.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.159" endtime="20201029 12:48:07.180"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.193" endtime="20201029 12:48:07.207"></status>
</kw>
<msg timestamp="20201029 12:48:07.207" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:07.191" endtime="20201029 12:48:07.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.210" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:07.208" endtime="20201029 12:48:07.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.214" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:48:07.211" endtime="20201029 12:48:07.214"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:07.189" endtime="20201029 12:48:07.215"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:07.186" endtime="20201029 12:48:07.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.185" endtime="20201029 12:48:07.216"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:48:07.219" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:48:07.219" endtime="20201029 12:48:07.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.216" endtime="20201029 12:48:07.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.184" endtime="20201029 12:48:07.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.184" endtime="20201029 12:48:07.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.221" endtime="20201029 12:48:07.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.182" endtime="20201029 12:48:07.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.181" endtime="20201029 12:48:07.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.157" endtime="20201029 12:48:07.224"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.232" endtime="20201029 12:48:13.354"></status>
</kw>
<msg timestamp="20201029 12:48:13.356" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:07.230" endtime="20201029 12:48:13.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.362" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:13.358" endtime="20201029 12:48:13.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.365" endtime="20201029 12:48:13.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.228" endtime="20201029 12:48:13.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.226" endtime="20201029 12:48:13.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:13.379" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 0, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 12:48:13.374" endtime="20201029 12:48:13.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.390" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:13.388" endtime="20201029 12:48:13.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.396" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:48:13.394" endtime="20201029 12:48:13.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.381" endtime="20201029 12:48:13.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.407" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:13.405" endtime="20201029 12:48:13.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.412" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:48:13.410" endtime="20201029 12:48:13.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.400" endtime="20201029 12:48:13.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.421" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:48:13.419" endtime="20201029 12:48:13.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.426" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 12:48:13.424" endtime="20201029 12:48:13.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.415" endtime="20201029 12:48:13.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.438" endtime="20201029 12:48:13.740"></status>
</kw>
<msg timestamp="20201029 12:48:13.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062216764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162260278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:13.437" endtime="20201029 12:48:13.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062216764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162260278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:13.744" endtime="20201029 12:48:13.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.752" endtime="20201029 12:48:13.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.432" endtime="20201029 12:48:13.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.428" endtime="20201029 12:48:13.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:48:13.758" level="INFO">${FILTERED} = [{'diff': 0.100043514}, {'diff': 0.10001086100000003}, {'diff': 0.10001088899999999}, {'diff': 0.10001083399999999}, {'diff': 0.10001086099999995}, {'diff': 0.10001094399999999}, {'diff': 0.1000108749...</msg>
<status status="PASS" starttime="20201029 12:48:13.755" endtime="20201029 12:48:13.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:13.762" level="INFO">${RESULT} = {'diff': [0.100043514, 0.10001086100000003, 0.10001088899999999, 0.10001083399999999, 0.10001086099999995, 0.10001094399999999, 0.10001087499999994, 0.10001087500000005, 0.10001087500000005, 0.1000108...</msg>
<status status="PASS" starttime="20201029 12:48:13.759" endtime="20201029 12:48:13.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.766" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:48:13.765" endtime="20201029 12:48:13.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.769" level="INFO">VALUE: [0.100043514, 0.10001086100000003, 0.10001088899999999, 0.10001083399999999, 0.10001086099999995, 0.10001094399999999, 0.10001087499999994, 0.10001087500000005, 0.10001087500000005, 0.10001083300000002, 0.10001079200000018, 0.10001080600000001, 0.1000108190000002, 0.10001080600000001, 0.10001081899999997, 0.10001081899999997, 0.10001082000000006, 0.10001080499999992, 0.10001081899999997, 0.10001081999999983, 0.10001081899999997, 0.10001082000000006, 0.10001081899999997, 0.10001083399999988, 0.10001080600000023, 0.1000108329999998, 0.10001079199999996, 0.10001081899999997, 0.10001081899999997, 0.10001082000000006, 0.10001081899999997, 0.10001083399999988, 0.10001079100000032, 0.10001081899999997, 0.10001087499999972, 0.10001080500000015, 0.1000108609999999, 0.10001084700000007, 0.10001084800000015, 0.1000108049999997, 0.10001081900000042, 0.10001084700000007, 0.10001079199999996, 0.1000108200000005, 0.1000108329999998, 0.10001080600000023, 0.10001081899999953, 0.10001083400000077, 0.10001080500000015, 0.10001081899999953, 0.1000108200000005]</msg>
<status status="PASS" starttime="20201029 12:48:13.767" endtime="20201029 12:48:13.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.763" endtime="20201029 12:48:13.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.224" endtime="20201029 12:48:13.770"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 12:48:07.155" endtime="20201029 12:48:13.771" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:13.777" endtime="20201029 12:48:13.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.776" endtime="20201029 12:48:13.797"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.811" endtime="20201029 12:48:13.824"></status>
</kw>
<msg timestamp="20201029 12:48:13.825" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:13.809" endtime="20201029 12:48:13.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.827" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:13.826" endtime="20201029 12:48:13.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.830" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:48:13.828" endtime="20201029 12:48:13.830"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:13.807" endtime="20201029 12:48:13.831"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:13.804" endtime="20201029 12:48:13.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.802" endtime="20201029 12:48:13.832"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:48:13.836" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:48:13.835" endtime="20201029 12:48:13.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.833" endtime="20201029 12:48:13.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.801" endtime="20201029 12:48:13.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.801" endtime="20201029 12:48:13.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.837" endtime="20201029 12:48:13.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.799" endtime="20201029 12:48:13.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.798" endtime="20201029 12:48:13.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.775" endtime="20201029 12:48:13.840"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.848" endtime="20201029 12:48:19.970"></status>
</kw>
<msg timestamp="20201029 12:48:19.971" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:13.847" endtime="20201029 12:48:19.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.976" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:19.973" endtime="20201029 12:48:19.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:19.979" endtime="20201029 12:48:19.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.844" endtime="20201029 12:48:19.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.842" endtime="20201029 12:48:19.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:19.989" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 5, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 12:48:19.986" endtime="20201029 12:48:19.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.998" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:19.996" endtime="20201029 12:48:19.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.003" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:48:20.000" endtime="20201029 12:48:20.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.991" endtime="20201029 12:48:20.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.014" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:20.010" endtime="20201029 12:48:20.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.019" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:48:20.017" endtime="20201029 12:48:20.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.006" endtime="20201029 12:48:20.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.028" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:48:20.026" endtime="20201029 12:48:20.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.033" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 12:48:20.031" endtime="20201029 12:48:20.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.022" endtime="20201029 12:48:20.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:20.048" endtime="20201029 12:48:20.345"></status>
</kw>
<msg timestamp="20201029 12:48:20.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061490681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161564111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:20.045" endtime="20201029 12:48:20.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061490681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161564111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:20.349" endtime="20201029 12:48:20.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:20.357" endtime="20201029 12:48:20.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.039" endtime="20201029 12:48:20.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.036" endtime="20201029 12:48:20.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:48:20.364" level="INFO">${FILTERED} = [{'diff': 0.10007343000000002}, {'diff': 0.099982709}, {'diff': 0.10001084700000001}, {'diff': 0.10001084700000001}, {'diff': 0.10001083399999999}, {'diff': 0.10001090300000004}, {'diff': 0.1000108199...</msg>
<status status="PASS" starttime="20201029 12:48:20.360" endtime="20201029 12:48:20.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:20.370" level="INFO">${RESULT} = {'diff': [0.10007343000000002, 0.099982709, 0.10001084700000001, 0.10001084700000001, 0.10001083399999999, 0.10001090300000004, 0.10001081999999994, 0.10001084699999996, 0.10001081899999997, 0.1000108...</msg>
<status status="PASS" starttime="20201029 12:48:20.365" endtime="20201029 12:48:20.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.375" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:48:20.374" endtime="20201029 12:48:20.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.378" level="INFO">VALUE: [0.10007343000000002, 0.099982709, 0.10001084700000001, 0.10001084700000001, 0.10001083399999999, 0.10001090300000004, 0.10001081999999994, 0.10001084699999996, 0.10001081899999997, 0.10001082000000006, 0.10001083300000002, 0.10001083300000002, 0.1000108609999999, 0.10001081899999997, 0.10001079099999988, 0.10001080500000015, 0.10001077799999991, 0.10001080600000001, 0.10001081899999997, 0.10001077799999991, 0.10001079199999996, 0.10001082000000006, 0.10001077700000005, 0.10001086100000034, 0.10001080599999979, 0.10001083300000024, 0.10001081899999997, 0.10001079099999988, 0.10001080600000023, 0.10001079199999996, 0.10001080500000015, 0.10001077799999969, 0.10001080600000023, 0.10001079199999996, 0.10001080500000015, 0.10001082000000006, 0.10001079199999996, 0.1000108049999997, 0.10001087500000017, 0.10001080599999979, 0.10001086100000034, 0.10001080500000015, 0.10001080600000023, 0.10001080600000023, 0.10001081900000042, 0.10001079199999996, 0.10001087499999972, 0.10001080500000015, 0.10001079099999988, 0.10001080599999934, 0.10001080599999934]</msg>
<status status="PASS" starttime="20201029 12:48:20.376" endtime="20201029 12:48:20.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.371" endtime="20201029 12:48:20.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.841" endtime="20201029 12:48:20.380"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 12:48:13.772" endtime="20201029 12:48:20.381" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:20.390" endtime="20201029 12:48:20.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.388" endtime="20201029 12:48:20.411"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:20.425" endtime="20201029 12:48:20.439"></status>
</kw>
<msg timestamp="20201029 12:48:20.439" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:20.423" endtime="20201029 12:48:20.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.442" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:20.440" endtime="20201029 12:48:20.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.445" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:48:20.443" endtime="20201029 12:48:20.445"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:20.420" endtime="20201029 12:48:20.446"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:20.418" endtime="20201029 12:48:20.446"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.417" endtime="20201029 12:48:20.447"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:48:20.450" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:48:20.449" endtime="20201029 12:48:20.451"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.447" endtime="20201029 12:48:20.451"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.416" endtime="20201029 12:48:20.451"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.415" endtime="20201029 12:48:20.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:20.452" endtime="20201029 12:48:20.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.413" endtime="20201029 12:48:20.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.412" endtime="20201029 12:48:20.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.386" endtime="20201029 12:48:20.455"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:20.466" endtime="20201029 12:48:26.588"></status>
</kw>
<msg timestamp="20201029 12:48:26.589" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:20.461" endtime="20201029 12:48:26.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.595" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:26.591" endtime="20201029 12:48:26.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:26.597" endtime="20201029 12:48:26.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.459" endtime="20201029 12:48:26.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.457" endtime="20201029 12:48:26.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:26.614" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 10, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 12:48:26.604" endtime="20201029 12:48:26.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.623" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:26.620" endtime="20201029 12:48:26.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.627" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:48:26.625" endtime="20201029 12:48:26.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.616" endtime="20201029 12:48:26.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.637" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:26.635" endtime="20201029 12:48:26.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.641" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:48:26.639" endtime="20201029 12:48:26.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.630" endtime="20201029 12:48:26.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.651" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:48:26.649" endtime="20201029 12:48:26.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.655" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 12:48:26.653" endtime="20201029 12:48:26.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.644" endtime="20201029 12:48:26.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:26.666" endtime="20201029 12:48:26.962"></status>
</kw>
<msg timestamp="20201029 12:48:26.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065541264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165730222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:26.664" endtime="20201029 12:48:26.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065541264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165730222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:26.966" endtime="20201029 12:48:26.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:26.974" endtime="20201029 12:48:26.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.662" endtime="20201029 12:48:26.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.658" endtime="20201029 12:48:26.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:48:26.980" level="INFO">${FILTERED} = [{'diff': 0.10018895800000001}, {'diff': 0.099866278}, {'diff': 0.10001179199999999}, {'diff': 0.10001082}, {'diff': 0.10001083299999997}, {'diff': 0.10001083300000002}, {'diff': 0.1000108609999999}, ...</msg>
<status status="PASS" starttime="20201029 12:48:26.977" endtime="20201029 12:48:26.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:26.985" level="INFO">${RESULT} = {'diff': [0.10018895800000001, 0.099866278, 0.10001179199999999, 0.10001082, 0.10001083299999997, 0.10001083300000002, 0.1000108609999999, 0.10001081899999997, 0.10001080600000001, 0.10001081900000008...</msg>
<status status="PASS" starttime="20201029 12:48:26.981" endtime="20201029 12:48:26.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.989" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:48:26.988" endtime="20201029 12:48:26.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.991" level="INFO">VALUE: [0.10018895800000001, 0.099866278, 0.10001179199999999, 0.10001082, 0.10001083299999997, 0.10001083300000002, 0.1000108609999999, 0.10001081899999997, 0.10001080600000001, 0.10001081900000008, 0.10001082000000006, 0.10001081899999997, 0.1000107910000001, 0.1000108340000001, 0.10001076400000009, 0.10001073599999999, 0.10001077799999991, 0.10001075000000004, 0.10001076400000009, 0.10001077800000013, 0.10001077800000013, 0.10001076399999986, 0.10001077800000013, 0.10001077800000013, 0.10001075000000004, 0.10001077800000013, 0.10001076399999986, 0.10001075000000004, 0.10001082000000006, 0.10001073599999977, 0.10001076399999986, 0.10001083399999988, 0.10001077800000013, 0.10001075000000004, 0.10001075000000004, 0.10001079099999988, 0.10001073600000021, 0.10001076299999978, 0.10001082000000006, 0.10001076299999978, 0.10001076300000022, 0.10001080500000015, 0.1000107769999996, 0.10001076400000031, 0.10001088799999991, 0.10001088799999991, 0.10001088799999991, 0.10001084700000007, 0.10001088899999999, 0.10001084700000007, 0.10001087500000061]</msg>
<status status="PASS" starttime="20201029 12:48:26.990" endtime="20201029 12:48:26.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.986" endtime="20201029 12:48:26.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.455" endtime="20201029 12:48:26.993"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 12:48:20.383" endtime="20201029 12:48:26.994" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:27.000" endtime="20201029 12:48:27.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.998" endtime="20201029 12:48:27.020"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:27.033" endtime="20201029 12:48:27.046"></status>
</kw>
<msg timestamp="20201029 12:48:27.046" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:27.031" endtime="20201029 12:48:27.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:27.049" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:27.047" endtime="20201029 12:48:27.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:48:27.052" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:48:27.050" endtime="20201029 12:48:27.053"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:27.029" endtime="20201029 12:48:27.053"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:27.026" endtime="20201029 12:48:27.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.025" endtime="20201029 12:48:27.054"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:48:27.058" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:48:27.057" endtime="20201029 12:48:27.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.055" endtime="20201029 12:48:27.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.024" endtime="20201029 12:48:27.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.024" endtime="20201029 12:48:27.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:27.060" endtime="20201029 12:48:27.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.022" endtime="20201029 12:48:27.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.021" endtime="20201029 12:48:27.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.997" endtime="20201029 12:48:27.062"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:27.070" endtime="20201029 12:48:33.196"></status>
</kw>
<msg timestamp="20201029 12:48:33.197" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:27.069" endtime="20201029 12:48:33.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:33.208" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:33.202" endtime="20201029 12:48:33.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:33.213" endtime="20201029 12:48:33.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.066" endtime="20201029 12:48:33.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.064" endtime="20201029 12:48:33.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:33.241" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 15, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 12:48:33.231" endtime="20201029 12:48:33.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:33.263" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:33.258" endtime="20201029 12:48:33.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:33.274" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:48:33.269" endtime="20201029 12:48:33.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.245" endtime="20201029 12:48:33.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:33.287" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:33.284" endtime="20201029 12:48:33.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:33.293" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:48:33.290" endtime="20201029 12:48:33.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.278" endtime="20201029 12:48:33.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:33.304" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:48:33.302" endtime="20201029 12:48:33.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:33.307" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 12:48:33.305" endtime="20201029 12:48:33.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.298" endtime="20201029 12:48:33.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:33.315" endtime="20201029 12:48:33.612"></status>
</kw>
<msg timestamp="20201029 12:48:33.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061001417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161290708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:33.313" endtime="20201029 12:48:33.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:33.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061001417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161290708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:33.616" endtime="20201029 12:48:33.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:33.624" endtime="20201029 12:48:33.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.310" endtime="20201029 12:48:33.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.309" endtime="20201029 12:48:33.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:48:33.631" level="INFO">${FILTERED} = [{'diff': 0.100289291}, {'diff': 0.099767681}, {'diff': 0.10040265300000001}, {'diff': 0.09961915300000002}, {'diff': 0.10001187500000003}, {'diff': 0.100010861}, {'diff': 0.10001088899999999}, {'diff...</msg>
<status status="PASS" starttime="20201029 12:48:33.628" endtime="20201029 12:48:33.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:33.635" level="INFO">${RESULT} = {'diff': [0.100289291, 0.099767681, 0.10040265300000001, 0.09961915300000002, 0.10001187500000003, 0.100010861, 0.10001088899999999, 0.1000108890000001, 0.10001090300000004, 0.10001088899999999, 0.100...</msg>
<status status="PASS" starttime="20201029 12:48:33.632" endtime="20201029 12:48:33.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:33.639" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:48:33.638" endtime="20201029 12:48:33.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:33.641" level="INFO">VALUE: [0.100289291, 0.099767681, 0.10040265300000001, 0.09961915300000002, 0.10001187500000003, 0.100010861, 0.10001088899999999, 0.1000108890000001, 0.10001090300000004, 0.10001088899999999, 0.10001088899999999, 0.10001088899999999, 0.10001087499999994, 0.100010916, 0.10001083300000002, 0.10001084699999985, 0.10001084699999985, 0.10001084699999985, 0.10001084700000007, 0.10001087500000017, 0.10001083399999988, 0.10001083300000024, 0.10001086100000034, 0.10001084700000007, 0.10001084700000007, 0.10001084799999971, 0.1000108609999999, 0.1000108329999998, 0.10001084800000015, 0.10001087499999972, 0.10001081900000042, 0.10001084699999963, 0.10001084699999963, 0.10001084699999963, 0.10001084700000007, 0.1000108609999999, 0.10001087500000017, 0.10001083399999988, 0.10001084700000007, 0.10001084800000015, 0.10001092999999983, 0.10001084700000007, 0.10001088899999999, 0.10001087499999972, 0.10001081900000042, 0.10001084800000015, 0.10001086100000034, 0.1000108329999998, 0.10001086199999953, 0.10001084700000007, 0.10001084700000007]</msg>
<status status="PASS" starttime="20201029 12:48:33.640" endtime="20201029 12:48:33.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.636" endtime="20201029 12:48:33.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.063" endtime="20201029 12:48:33.643"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 12:48:26.995" endtime="20201029 12:48:33.644" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:33.650" endtime="20201029 12:48:33.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.648" endtime="20201029 12:48:33.670"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:33.683" endtime="20201029 12:48:33.697"></status>
</kw>
<msg timestamp="20201029 12:48:33.697" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:33.682" endtime="20201029 12:48:33.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:33.700" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:33.698" endtime="20201029 12:48:33.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:48:33.703" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:48:33.701" endtime="20201029 12:48:33.703"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:33.679" endtime="20201029 12:48:33.704"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:33.676" endtime="20201029 12:48:33.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.675" endtime="20201029 12:48:33.705"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:48:33.709" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:48:33.708" endtime="20201029 12:48:33.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.706" endtime="20201029 12:48:33.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.674" endtime="20201029 12:48:33.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.673" endtime="20201029 12:48:33.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:33.710" endtime="20201029 12:48:33.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.672" endtime="20201029 12:48:33.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.670" endtime="20201029 12:48:33.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.647" endtime="20201029 12:48:33.713"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:33.721" endtime="20201029 12:48:39.843"></status>
</kw>
<msg timestamp="20201029 12:48:39.844" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:33.719" endtime="20201029 12:48:39.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:39.849" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:39.846" endtime="20201029 12:48:39.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:39.851" endtime="20201029 12:48:39.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.717" endtime="20201029 12:48:39.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.715" endtime="20201029 12:48:39.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:39.862" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 20, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 12:48:39.858" endtime="20201029 12:48:39.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:39.870" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:39.868" endtime="20201029 12:48:39.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:39.875" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:48:39.873" endtime="20201029 12:48:39.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.864" endtime="20201029 12:48:39.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:39.884" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:39.882" endtime="20201029 12:48:39.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:39.889" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:48:39.887" endtime="20201029 12:48:39.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.878" endtime="20201029 12:48:39.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:39.893" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:48:39.892" endtime="20201029 12:48:39.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:39.897" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 12:48:39.894" endtime="20201029 12:48:39.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.890" endtime="20201029 12:48:39.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:39.908" endtime="20201029 12:48:40.207"></status>
</kw>
<msg timestamp="20201029 12:48:40.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062038056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162448653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:39.906" endtime="20201029 12:48:40.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:40.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062038056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162448653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:40.211" endtime="20201029 12:48:40.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:40.219" endtime="20201029 12:48:40.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.903" endtime="20201029 12:48:40.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:39.899" endtime="20201029 12:48:40.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:48:40.225" level="INFO">${FILTERED} = [{'diff': 0.10041059699999999}, {'diff': 0.100089486}, {'diff': 0.099566459}, {'diff': 0.10001187499999997}, {'diff': 0.10001087500000005}, {'diff': 0.100010861}, {'diff': 0.1000108609999999}, {'diff'...</msg>
<status status="PASS" starttime="20201029 12:48:40.222" endtime="20201029 12:48:40.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:40.229" level="INFO">${RESULT} = {'diff': [0.10041059699999999, 0.100089486, 0.099566459, 0.10001187499999997, 0.10001087500000005, 0.100010861, 0.1000108609999999, 0.100010861, 0.100010861, 0.100010861, 0.1000108620000002, 0.1000108...</msg>
<status status="PASS" starttime="20201029 12:48:40.226" endtime="20201029 12:48:40.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:40.233" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:48:40.232" endtime="20201029 12:48:40.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:40.236" level="INFO">VALUE: [0.10041059699999999, 0.100089486, 0.099566459, 0.10001187499999997, 0.10001087500000005, 0.100010861, 0.1000108609999999, 0.100010861, 0.100010861, 0.100010861, 0.1000108620000002, 0.10001087499999994, 0.10001087500000017, 0.10001087500000017, 0.10001086100000012, 0.10001092999999983, 0.10001080500000015, 0.1000107910000001, 0.10001082000000006, 0.10001079199999996, 0.10001081899999997, 0.10001079199999996, 0.10001080600000023, 0.10001087500000017, 0.10001081899999997, 0.10001080600000023, 0.1000108609999999, 0.10001079199999996, 0.10001079199999996, 0.1000108049999997, 0.10001079199999996, 0.10001082000000006, 0.10001088899999999, 0.1000108049999997, 0.10001080600000023, 0.10001080500000015, 0.1000108609999999, 0.10001079199999996, 0.10001080500000015, 0.1000108049999997, 0.1000108200000005, 0.10001079099999988, 0.10001084700000007, 0.10001079199999996, 0.1000108329999998, 0.10001084699999918, 0.1000108200000005, 0.10001080499999926, 0.10001080599999934, 0.10001081999999961, 0.10001080500000015]</msg>
<status status="PASS" starttime="20201029 12:48:40.234" endtime="20201029 12:48:40.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.230" endtime="20201029 12:48:40.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:33.714" endtime="20201029 12:48:40.238"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 12:48:33.645" endtime="20201029 12:48:40.239" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:40.245" endtime="20201029 12:48:40.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.244" endtime="20201029 12:48:40.265"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:40.278" endtime="20201029 12:48:40.293"></status>
</kw>
<msg timestamp="20201029 12:48:40.293" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:40.276" endtime="20201029 12:48:40.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:40.295" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:40.294" endtime="20201029 12:48:40.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:48:40.299" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:48:40.297" endtime="20201029 12:48:40.299"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:40.274" endtime="20201029 12:48:40.299"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:40.271" endtime="20201029 12:48:40.300"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.270" endtime="20201029 12:48:40.300"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:48:40.304" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:48:40.303" endtime="20201029 12:48:40.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.301" endtime="20201029 12:48:40.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.269" endtime="20201029 12:48:40.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.269" endtime="20201029 12:48:40.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:40.306" endtime="20201029 12:48:40.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.267" endtime="20201029 12:48:40.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.266" endtime="20201029 12:48:40.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.242" endtime="20201029 12:48:40.309"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:40.318" endtime="20201029 12:48:46.440"></status>
</kw>
<msg timestamp="20201029 12:48:46.441" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:40.315" endtime="20201029 12:48:46.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:46.447" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:46.444" endtime="20201029 12:48:46.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:46.449" endtime="20201029 12:48:46.452"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.313" endtime="20201029 12:48:46.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.311" endtime="20201029 12:48:46.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:46.460" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 25, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 12:48:46.456" endtime="20201029 12:48:46.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:46.469" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:46.467" endtime="20201029 12:48:46.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:46.473" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:48:46.471" endtime="20201029 12:48:46.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.462" endtime="20201029 12:48:46.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:46.483" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:46.481" endtime="20201029 12:48:46.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:46.487" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:48:46.485" endtime="20201029 12:48:46.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.476" endtime="20201029 12:48:46.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:46.497" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:48:46.495" endtime="20201029 12:48:46.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:46.501" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 12:48:46.499" endtime="20201029 12:48:46.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.490" endtime="20201029 12:48:46.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:46.509" endtime="20201029 12:48:46.805"></status>
</kw>
<msg timestamp="20201029 12:48:46.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063450486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164020111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:46.507" endtime="20201029 12:48:46.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:46.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063450486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164020111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:46.809" endtime="20201029 12:48:46.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:46.817" endtime="20201029 12:48:46.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.505" endtime="20201029 12:48:46.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.503" endtime="20201029 12:48:46.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:48:46.825" level="INFO">${FILTERED} = [{'diff': 0.100569625}, {'diff': 0.09965423600000001}, {'diff': 0.099653681}, {'diff': 0.10007090299999999}, {'diff': 0.09972309699999998}, {'diff': 0.100011819}, {'diff': 0.10001083399999999}, {'diff...</msg>
<status status="PASS" starttime="20201029 12:48:46.820" endtime="20201029 12:48:46.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:46.831" level="INFO">${RESULT} = {'diff': [0.100569625, 0.09965423600000001, 0.099653681, 0.10007090299999999, 0.09972309699999998, 0.100011819, 0.10001083399999999, 0.100010861, 0.10001083399999999, 0.100010861, 0.10001084700000007,...</msg>
<status status="PASS" starttime="20201029 12:48:46.826" endtime="20201029 12:48:46.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:46.836" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:48:46.835" endtime="20201029 12:48:46.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:46.840" level="INFO">VALUE: [0.100569625, 0.09965423600000001, 0.099653681, 0.10007090299999999, 0.09972309699999998, 0.100011819, 0.10001083399999999, 0.100010861, 0.10001083399999999, 0.100010861, 0.10001084700000007, 0.1000108609999999, 0.10001083300000002, 0.1000108340000001, 0.10001076400000009, 0.10001076400000009, 0.10001079199999996, 0.10001081899999997, 0.1000107910000001, 0.10001077800000013, 0.10001079199999996, 0.10001077800000013, 0.1000108329999998, 0.10001077799999969, 0.1000107920000004, 0.10001077700000005, 0.10001080500000015, 0.10001079099999988, 0.10001084800000015, 0.10001079199999996, 0.10001080600000023, 0.10001076399999986, 0.10001077800000013, 0.10001080500000015, 0.10001076399999986, 0.10001077800000013, 0.10001079199999996, 0.10001079199999996, 0.1000108329999998, 0.10001079100000032, 0.10001081899999953, 0.10001079199999996, 0.10001079199999996, 0.10001079199999996, 0.10001080600000023, 0.10001079199999996, 0.10001081899999953, 0.10001079099999988, 0.10001080600000023, 0.10001079199999996, 0.10001077799999969]</msg>
<status status="PASS" starttime="20201029 12:48:46.838" endtime="20201029 12:48:46.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.832" endtime="20201029 12:48:46.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:40.309" endtime="20201029 12:48:46.842"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 12:48:40.240" endtime="20201029 12:48:46.843" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:48:05.597" endtime="20201029 12:48:46.851"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f091rc</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 12:46:02.536" endtime="20201029 12:48:46.884"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_nucleo-f091rc</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
