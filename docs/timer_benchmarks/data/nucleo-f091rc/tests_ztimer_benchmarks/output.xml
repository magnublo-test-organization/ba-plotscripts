<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 09:33:59.715" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.293" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:34:00.302" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:34:01.445" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:34:00.292" endtime="20201029 09:34:01.446"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.448" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 09:34:01.447" endtime="20201029 09:34:01.449"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.290" endtime="20201029 09:34:01.449"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:01.451" endtime="20201029 09:34:01.649"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.450" endtime="20201029 09:34:01.649"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.663" endtime="20201029 09:34:01.683"></status>
</kw>
<msg timestamp="20201029 09:34:01.684" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Succes...</msg>
<status status="PASS" starttime="20201029 09:34:01.662" endtime="20201029 09:34:01.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.690" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Succes...</msg>
<status status="PASS" starttime="20201029 09:34:01.687" endtime="20201029 09:34:01.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.696" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:01.692" endtime="20201029 09:34:01.697"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:01.659" endtime="20201029 09:34:01.699"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:01.656" endtime="20201029 09:34:01.700"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.655" endtime="20201029 09:34:01.700"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:01.708" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:01.707" endtime="20201029 09:34:01.709"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.702" endtime="20201029 09:34:01.710"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.654" endtime="20201029 09:34:01.710"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.653" endtime="20201029 09:34:01.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.712" endtime="20201029 09:34:01.715"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.652" endtime="20201029 09:34:01.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.718" endtime="20201029 09:34:01.721"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.650" endtime="20201029 09:34:01.722"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.289" endtime="20201029 09:34:01.723"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:01.735" endtime="20201029 09:34:01.757"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.732" endtime="20201029 09:34:01.758"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.781" endtime="20201029 09:34:01.795"></status>
</kw>
<msg timestamp="20201029 09:34:01.795" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:01.779" endtime="20201029 09:34:01.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.798" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:01.796" endtime="20201029 09:34:01.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.801" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:01.799" endtime="20201029 09:34:01.801"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:01.777" endtime="20201029 09:34:01.801"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:01.774" endtime="20201029 09:34:01.802"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.771" endtime="20201029 09:34:01.802"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:01.806" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:01.805" endtime="20201029 09:34:01.807"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.803" endtime="20201029 09:34:01.807"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.769" endtime="20201029 09:34:01.807"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.768" endtime="20201029 09:34:01.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.808" endtime="20201029 09:34:01.809"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.763" endtime="20201029 09:34:01.810"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.760" endtime="20201029 09:34:01.810"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.730" endtime="20201029 09:34:01.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.817" endtime="20201029 09:34:01.828"></status>
</kw>
<msg timestamp="20201029 09:34:01.828" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:01.816" endtime="20201029 09:34:01.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.831" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:01.829" endtime="20201029 09:34:01.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.832" endtime="20201029 09:34:01.833"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.813" endtime="20201029 09:34:01.834"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.811" endtime="20201029 09:34:01.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.838" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 09:34:01.837" endtime="20201029 09:34:01.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.840" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201029 09:34:01.839" endtime="20201029 09:34:01.841"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.835" endtime="20201029 09:34:01.841"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:01.724" endtime="20201029 09:34:01.842" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 09:33:59.840" endtime="20201029 09:34:01.844"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.896" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:34:01.904" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:34:03.055" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:34:01.894" endtime="20201029 09:34:03.056"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.059" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 09:34:03.057" endtime="20201029 09:34:03.060"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.893" endtime="20201029 09:34:03.060"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:03.063" endtime="20201029 09:34:03.382"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.061" endtime="20201029 09:34:03.382"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.395" endtime="20201029 09:34:03.410"></status>
</kw>
<msg timestamp="20201029 09:34:03.410" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:03.393" endtime="20201029 09:34:03.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.413" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:03.411" endtime="20201029 09:34:03.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.416" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:03.414" endtime="20201029 09:34:03.417"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:03.391" endtime="20201029 09:34:03.417"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:03.389" endtime="20201029 09:34:03.418"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.387" endtime="20201029 09:34:03.418"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:03.422" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:03.421" endtime="20201029 09:34:03.422"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.419" endtime="20201029 09:34:03.423"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.387" endtime="20201029 09:34:03.423"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.386" endtime="20201029 09:34:03.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.424" endtime="20201029 09:34:03.425"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.385" endtime="20201029 09:34:03.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.426" endtime="20201029 09:34:03.428"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.383" endtime="20201029 09:34:03.428"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.892" endtime="20201029 09:34:03.429"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:03.434" endtime="20201029 09:34:03.454"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.433" endtime="20201029 09:34:03.454"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.467" endtime="20201029 09:34:03.482"></status>
</kw>
<msg timestamp="20201029 09:34:03.483" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:03.466" endtime="20201029 09:34:03.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.485" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:03.484" endtime="20201029 09:34:03.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.489" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:03.486" endtime="20201029 09:34:03.489"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:03.463" endtime="20201029 09:34:03.490"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:03.461" endtime="20201029 09:34:03.491"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.459" endtime="20201029 09:34:03.491"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:03.498" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:03.497" endtime="20201029 09:34:03.499"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.494" endtime="20201029 09:34:03.499"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.459" endtime="20201029 09:34:03.499"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.458" endtime="20201029 09:34:03.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.503" endtime="20201029 09:34:03.505"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.457" endtime="20201029 09:34:03.505"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.455" endtime="20201029 09:34:03.506"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.431" endtime="20201029 09:34:03.506"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.519" endtime="20201029 09:34:03.530"></status>
</kw>
<msg timestamp="20201029 09:34:03.531" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:03.515" endtime="20201029 09:34:03.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.533" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:03.532" endtime="20201029 09:34:03.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.534" endtime="20201029 09:34:03.536"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.511" endtime="20201029 09:34:03.537"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.509" endtime="20201029 09:34:03.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.544" endtime="20201029 09:34:03.836"></status>
</kw>
<msg timestamp="20201029 09:34:03.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075225583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075226056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:03.542" endtime="20201029 09:34:03.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075225583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075226056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:03.841" endtime="20201029 09:34:03.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.849" endtime="20201029 09:34:03.850"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.540" endtime="20201029 09:34:03.851"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.538" endtime="20201029 09:34:03.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:03.855" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.86000000007869e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201029 09:34:03.852" endtime="20201029 09:34:03.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:03.861" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.86...</msg>
<status status="PASS" starttime="20201029 09:34:03.857" endtime="20201029 09:34:03.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.865" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:03.864" endtime="20201029 09:34:03.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.868" level="INFO">VALUE: [4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.729999999869561e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.870000000073427e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.729999999869561e-07, 4.7199999998748243e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.7199999998748243e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201029 09:34:03.866" endtime="20201029 09:34:03.868"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.862" endtime="20201029 09:34:03.869"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.507" endtime="20201029 09:34:03.869"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.507" endtime="20201029 09:34:03.869"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.877" endtime="20201029 09:34:03.888"></status>
</kw>
<msg timestamp="20201029 09:34:03.889" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:03.876" endtime="20201029 09:34:03.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.891" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:03.890" endtime="20201029 09:34:03.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.892" endtime="20201029 09:34:03.894"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.873" endtime="20201029 09:34:03.895"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.871" endtime="20201029 09:34:03.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.901" endtime="20201029 09:34:04.222"></status>
</kw>
<msg timestamp="20201029 09:34:04.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075923667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075924139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:03.900" endtime="20201029 09:34:04.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075923667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075924139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:04.227" endtime="20201029 09:34:04.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.237" endtime="20201029 09:34:04.239"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.897" endtime="20201029 09:34:04.240"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.896" endtime="20201029 09:34:04.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:04.245" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.86000000007869e-07}, {'diff': 4.7199999998748243e-07}, {'diff': 4.859999999939912e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:34:04.241" endtime="20201029 09:34:04.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:04.251" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.7199999998748243e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.859...</msg>
<status status="PASS" starttime="20201029 09:34:04.246" endtime="20201029 09:34:04.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.255" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:04.254" endtime="20201029 09:34:04.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.258" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.7199999998748243e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.860000000217468e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.859999999662357e-07, 4.859999999662357e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.859999999662357e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.859999999662357e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:04.256" endtime="20201029 09:34:04.258"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.251" endtime="20201029 09:34:04.259"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.870" endtime="20201029 09:34:04.259"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.870" endtime="20201029 09:34:04.259"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.268" endtime="20201029 09:34:04.279"></status>
</kw>
<msg timestamp="20201029 09:34:04.280" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:04.267" endtime="20201029 09:34:04.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.282" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:04.281" endtime="20201029 09:34:04.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.284" endtime="20201029 09:34:04.285"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.263" endtime="20201029 09:34:04.286"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.261" endtime="20201029 09:34:04.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.293" endtime="20201029 09:34:04.606"></status>
</kw>
<msg timestamp="20201029 09:34:04.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.423578361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.423578833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:04.291" endtime="20201029 09:34:04.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.423578361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.423578833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:04.611" endtime="20201029 09:34:04.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.621" endtime="20201029 09:34:04.623"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.289" endtime="20201029 09:34:04.623"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.287" endtime="20201029 09:34:04.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:04.628" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.859999999662357e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7300000000083386e-07}...</msg>
<status status="PASS" starttime="20201029 09:34:04.624" endtime="20201029 09:34:04.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:04.634" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.860000000217468e-07, 4.859999999662357e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4...</msg>
<status status="PASS" starttime="20201029 09:34:04.629" endtime="20201029 09:34:04.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.638" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:04.637" endtime="20201029 09:34:04.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.641" level="INFO">VALUE: [4.7199999997360464e-07, 4.860000000217468e-07, 4.859999999662357e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.859999999662357e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.859999999107245e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999999107245e-07, 4.859999999107245e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.860000000217468e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.73000000056345e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.869999999934649e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.869999999934649e-07, 4.860000000217468e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999999107245e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:04.640" endtime="20201029 09:34:04.642"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.635" endtime="20201029 09:34:04.642"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.260" endtime="20201029 09:34:04.643"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.260" endtime="20201029 09:34:04.643"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.651" endtime="20201029 09:34:04.662"></status>
</kw>
<msg timestamp="20201029 09:34:04.662" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:04.649" endtime="20201029 09:34:04.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.665" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:04.663" endtime="20201029 09:34:04.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.666" endtime="20201029 09:34:04.668"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.647" endtime="20201029 09:34:04.668"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.645" endtime="20201029 09:34:04.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.675" endtime="20201029 09:34:04.977"></status>
</kw>
<msg timestamp="20201029 09:34:04.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.804801181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.804801653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:04.674" endtime="20201029 09:34:04.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.804801181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.804801653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:04.986" endtime="20201029 09:34:05.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.001" endtime="20201029 09:34:05.005"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.671" endtime="20201029 09:34:05.006"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.669" endtime="20201029 09:34:05.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:05.012" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.729999999453227e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.869999999934649e-07}, {'diff': 4.860000000217468e-07}, ...</msg>
<status status="PASS" starttime="20201029 09:34:05.008" endtime="20201029 09:34:05.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:05.018" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.729999999453227e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.869999999934649e-07, 4.860000000217468e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.71...</msg>
<status status="PASS" starttime="20201029 09:34:05.013" endtime="20201029 09:34:05.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.023" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:05.021" endtime="20201029 09:34:05.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.025" level="INFO">VALUE: [4.7199999997360464e-07, 4.729999999453227e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.869999999934649e-07, 4.860000000217468e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999999107245e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999998343004e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:05.024" endtime="20201029 09:34:05.026"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.019" endtime="20201029 09:34:05.026"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.643" endtime="20201029 09:34:05.027"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.643" endtime="20201029 09:34:05.027"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.035" endtime="20201029 09:34:05.046"></status>
</kw>
<msg timestamp="20201029 09:34:05.046" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:05.033" endtime="20201029 09:34:05.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.049" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:05.047" endtime="20201029 09:34:05.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.050" endtime="20201029 09:34:05.052"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.031" endtime="20201029 09:34:05.052"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.029" endtime="20201029 09:34:05.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.060" endtime="20201029 09:34:05.366"></status>
</kw>
<msg timestamp="20201029 09:34:05.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.178122597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.178123083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:05.059" endtime="20201029 09:34:05.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.178122597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.178123083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:05.371" endtime="20201029 09:34:05.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.381" endtime="20201029 09:34:05.383"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.055" endtime="20201029 09:34:05.384"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.053" endtime="20201029 09:34:05.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:05.389" level="INFO">${RESULT} = [{'diff': 4.860000000217468e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:05.385" endtime="20201029 09:34:05.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:05.394" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.719999...</msg>
<status status="PASS" starttime="20201029 09:34:05.390" endtime="20201029 09:34:05.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.398" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:05.397" endtime="20201029 09:34:05.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.402" level="INFO">VALUE: [4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.729999998343004e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000001044872e-07, 4.860000000217468e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:05.399" endtime="20201029 09:34:05.402"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.395" endtime="20201029 09:34:05.403"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.028" endtime="20201029 09:34:05.403"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.027" endtime="20201029 09:34:05.403"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.411" endtime="20201029 09:34:05.422"></status>
</kw>
<msg timestamp="20201029 09:34:05.423" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:05.410" endtime="20201029 09:34:05.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.425" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:05.424" endtime="20201029 09:34:05.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.426" endtime="20201029 09:34:05.428"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.407" endtime="20201029 09:34:05.428"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.405" endtime="20201029 09:34:05.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.436" endtime="20201029 09:34:05.736"></status>
</kw>
<msg timestamp="20201029 09:34:05.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.552230528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.552231, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:34:05.434" endtime="20201029 09:34:05.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.552230528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.552231, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:34:05.740" endtime="20201029 09:34:05.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.750" endtime="20201029 09:34:05.752"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.431" endtime="20201029 09:34:05.752"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.430" endtime="20201029 09:34:05.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:05.758" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000019564925e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07...</msg>
<status status="PASS" starttime="20201029 09:34:05.754" endtime="20201029 09:34:05.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:05.765" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4...</msg>
<status status="PASS" starttime="20201029 09:34:05.759" endtime="20201029 09:34:05.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.769" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:05.768" endtime="20201029 09:34:05.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.772" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000001044872e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:05.770" endtime="20201029 09:34:05.772"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.766" endtime="20201029 09:34:05.773"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.404" endtime="20201029 09:34:05.773"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.404" endtime="20201029 09:34:05.773"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.781" endtime="20201029 09:34:05.791"></status>
</kw>
<msg timestamp="20201029 09:34:05.792" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:05.779" endtime="20201029 09:34:05.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.794" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:05.793" endtime="20201029 09:34:05.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.795" endtime="20201029 09:34:05.797"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.777" endtime="20201029 09:34:05.798"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.775" endtime="20201029 09:34:05.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.804" endtime="20201029 09:34:06.109"></status>
</kw>
<msg timestamp="20201029 09:34:06.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.919826722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.919827194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:05.803" endtime="20201029 09:34:06.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.919826722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.919827194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:06.114" endtime="20201029 09:34:06.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.124" endtime="20201029 09:34:06.126"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.800" endtime="20201029 09:34:06.127"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.799" endtime="20201029 09:34:06.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:06.131" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 09:34:06.128" endtime="20201029 09:34:06.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:06.136" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4...</msg>
<status status="PASS" starttime="20201029 09:34:06.132" endtime="20201029 09:34:06.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.140" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:06.139" endtime="20201029 09:34:06.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.143" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:06.141" endtime="20201029 09:34:06.143"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.137" endtime="20201029 09:34:06.144"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.774" endtime="20201029 09:34:06.144"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.774" endtime="20201029 09:34:06.144"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.153" endtime="20201029 09:34:06.163"></status>
</kw>
<msg timestamp="20201029 09:34:06.164" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:06.150" endtime="20201029 09:34:06.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.166" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:06.165" endtime="20201029 09:34:06.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.167" endtime="20201029 09:34:06.169"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.148" endtime="20201029 09:34:06.169"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.146" endtime="20201029 09:34:06.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.176" endtime="20201029 09:34:06.483"></status>
</kw>
<msg timestamp="20201029 09:34:06.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.278339431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.278339917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:06.175" endtime="20201029 09:34:06.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.278339431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.278339917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:06.488" endtime="20201029 09:34:06.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.498" endtime="20201029 09:34:06.500"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.172" endtime="20201029 09:34:06.500"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.170" endtime="20201029 09:34:06.501"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:06.505" level="INFO">${RESULT} = [{'diff': 4.859999997997022e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 09:34:06.502" endtime="20201029 09:34:06.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:06.510" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4....</msg>
<status status="PASS" starttime="20201029 09:34:06.506" endtime="20201029 09:34:06.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.515" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:06.514" endtime="20201029 09:34:06.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.517" level="INFO">VALUE: [4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.869999998824426e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.859999997997022e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:06.516" endtime="20201029 09:34:06.518"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.511" endtime="20201029 09:34:06.518"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.145" endtime="20201029 09:34:06.519"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.144" endtime="20201029 09:34:06.519"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.526" endtime="20201029 09:34:06.537"></status>
</kw>
<msg timestamp="20201029 09:34:06.538" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:06.525" endtime="20201029 09:34:06.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.540" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:06.539" endtime="20201029 09:34:06.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.541" endtime="20201029 09:34:06.543"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.522" endtime="20201029 09:34:06.543"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.521" endtime="20201029 09:34:06.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.550" endtime="20201029 09:34:06.866"></status>
</kw>
<msg timestamp="20201029 09:34:06.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.639171889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.639172361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:06.549" endtime="20201029 09:34:06.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.639171889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.639172361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:06.871" endtime="20201029 09:34:06.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.881" endtime="20201029 09:34:06.883"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.546" endtime="20201029 09:34:06.883"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.544" endtime="20201029 09:34:06.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:06.888" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}...</msg>
<status status="PASS" starttime="20201029 09:34:06.884" endtime="20201029 09:34:06.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:06.893" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4....</msg>
<status status="PASS" starttime="20201029 09:34:06.889" endtime="20201029 09:34:06.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.897" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:06.896" endtime="20201029 09:34:06.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.900" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999996122558e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07]</msg>
<status status="PASS" starttime="20201029 09:34:06.899" endtime="20201029 09:34:06.900"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.894" endtime="20201029 09:34:06.901"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.519" endtime="20201029 09:34:06.901"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.519" endtime="20201029 09:34:06.901"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.909" endtime="20201029 09:34:06.920"></status>
</kw>
<msg timestamp="20201029 09:34:06.920" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:06.908" endtime="20201029 09:34:06.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.923" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:06.921" endtime="20201029 09:34:06.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.924" endtime="20201029 09:34:06.926"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.905" endtime="20201029 09:34:06.926"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.903" endtime="20201029 09:34:06.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.933" endtime="20201029 09:34:07.252"></status>
</kw>
<msg timestamp="20201029 09:34:07.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.001126833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.001127306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:06.931" endtime="20201029 09:34:07.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.001126833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.001127306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:07.257" endtime="20201029 09:34:07.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.267" endtime="20201029 09:34:07.269"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.929" endtime="20201029 09:34:07.270"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.927" endtime="20201029 09:34:07.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:07.275" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:34:07.271" endtime="20201029 09:34:07.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:07.280" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.71...</msg>
<status status="PASS" starttime="20201029 09:34:07.276" endtime="20201029 09:34:07.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.285" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:07.283" endtime="20201029 09:34:07.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.288" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.869999998824426e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:07.286" endtime="20201029 09:34:07.288"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.281" endtime="20201029 09:34:07.289"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.902" endtime="20201029 09:34:07.289"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.902" endtime="20201029 09:34:07.289"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.299" endtime="20201029 09:34:07.310"></status>
</kw>
<msg timestamp="20201029 09:34:07.311" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:07.297" endtime="20201029 09:34:07.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.313" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:07.312" endtime="20201029 09:34:07.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.314" endtime="20201029 09:34:07.316"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.294" endtime="20201029 09:34:07.316"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.292" endtime="20201029 09:34:07.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.324" endtime="20201029 09:34:07.637"></status>
</kw>
<msg timestamp="20201029 09:34:07.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.373910181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.373910653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:07.322" endtime="20201029 09:34:07.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.373910181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.373910653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:07.650" endtime="20201029 09:34:07.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.674" endtime="20201029 09:34:07.677"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.319" endtime="20201029 09:34:07.678"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.318" endtime="20201029 09:34:07.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:07.689" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}...</msg>
<status status="PASS" starttime="20201029 09:34:07.681" endtime="20201029 09:34:07.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:07.701" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4...</msg>
<status status="PASS" starttime="20201029 09:34:07.691" endtime="20201029 09:34:07.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.711" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:07.708" endtime="20201029 09:34:07.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.716" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 09:34:07.713" endtime="20201029 09:34:07.717"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.703" endtime="20201029 09:34:07.718"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.290" endtime="20201029 09:34:07.719"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.290" endtime="20201029 09:34:07.720"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.736" endtime="20201029 09:34:07.747"></status>
</kw>
<msg timestamp="20201029 09:34:07.748" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:07.734" endtime="20201029 09:34:07.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.750" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:07.749" endtime="20201029 09:34:07.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.751" endtime="20201029 09:34:07.753"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.728" endtime="20201029 09:34:07.754"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.725" endtime="20201029 09:34:07.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.761" endtime="20201029 09:34:08.082"></status>
</kw>
<msg timestamp="20201029 09:34:08.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.752623222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.752623708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:07.759" endtime="20201029 09:34:08.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.752623222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.752623708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:08.091" endtime="20201029 09:34:08.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.101" endtime="20201029 09:34:08.103"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.756" endtime="20201029 09:34:08.103"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.755" endtime="20201029 09:34:08.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:08.108" level="INFO">${RESULT} = [{'diff': 4.859999997997022e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.7200000041769385e-07},...</msg>
<status status="PASS" starttime="20201029 09:34:08.104" endtime="20201029 09:34:08.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:08.114" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 09:34:08.109" endtime="20201029 09:34:08.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.118" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:08.117" endtime="20201029 09:34:08.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.121" level="INFO">VALUE: [4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:08.119" endtime="20201029 09:34:08.121"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.115" endtime="20201029 09:34:08.122"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.722" endtime="20201029 09:34:08.122"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.721" endtime="20201029 09:34:08.123"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.131" endtime="20201029 09:34:08.141"></status>
</kw>
<msg timestamp="20201029 09:34:08.142" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:08.129" endtime="20201029 09:34:08.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.144" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:08.143" endtime="20201029 09:34:08.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.145" endtime="20201029 09:34:08.147"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.126" endtime="20201029 09:34:08.147"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.125" endtime="20201029 09:34:08.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.156" endtime="20201029 09:34:08.477"></status>
</kw>
<msg timestamp="20201029 09:34:08.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.179241486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.179241972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:08.153" endtime="20201029 09:34:08.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.179241486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.179241972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:08.482" endtime="20201029 09:34:08.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.492" endtime="20201029 09:34:08.494"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.150" endtime="20201029 09:34:08.495"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.149" endtime="20201029 09:34:08.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:08.499" level="INFO">${RESULT} = [{'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.85999999355613e-07}, ...</msg>
<status status="PASS" starttime="20201029 09:34:08.496" endtime="20201029 09:34:08.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:08.504" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.719...</msg>
<status status="PASS" starttime="20201029 09:34:08.500" endtime="20201029 09:34:08.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.509" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:08.508" endtime="20201029 09:34:08.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.511" level="INFO">VALUE: [4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:08.510" endtime="20201029 09:34:08.512"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.505" endtime="20201029 09:34:08.512"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.123" endtime="20201029 09:34:08.513"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.123" endtime="20201029 09:34:08.513"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.522" endtime="20201029 09:34:08.533"></status>
</kw>
<msg timestamp="20201029 09:34:08.534" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:08.520" endtime="20201029 09:34:08.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.536" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:08.535" endtime="20201029 09:34:08.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.538" endtime="20201029 09:34:08.539"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.518" endtime="20201029 09:34:08.540"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.515" endtime="20201029 09:34:08.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.547" endtime="20201029 09:34:08.856"></status>
</kw>
<msg timestamp="20201029 09:34:08.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.564847194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.564847681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:08.546" endtime="20201029 09:34:08.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.564847194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.564847681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:08.861" endtime="20201029 09:34:08.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.871" endtime="20201029 09:34:08.873"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.543" endtime="20201029 09:34:08.874"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.541" endtime="20201029 09:34:08.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:08.879" level="INFO">${RESULT} = [{'diff': 4.869999994383534e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}...</msg>
<status status="PASS" starttime="20201029 09:34:08.875" endtime="20201029 09:34:08.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:08.885" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.869999994383534e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 09:34:08.880" endtime="20201029 09:34:08.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.889" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:08.888" endtime="20201029 09:34:08.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.891" level="INFO">VALUE: [4.869999994383534e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 09:34:08.890" endtime="20201029 09:34:08.892"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.885" endtime="20201029 09:34:08.892"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.514" endtime="20201029 09:34:08.893"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.513" endtime="20201029 09:34:08.893"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.901" endtime="20201029 09:34:08.912"></status>
</kw>
<msg timestamp="20201029 09:34:08.912" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:08.900" endtime="20201029 09:34:08.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.915" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:08.913" endtime="20201029 09:34:08.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.916" endtime="20201029 09:34:08.918"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.897" endtime="20201029 09:34:08.918"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.895" endtime="20201029 09:34:08.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.926" endtime="20201029 09:34:09.244"></status>
</kw>
<msg timestamp="20201029 09:34:09.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.945957417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.945957889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:08.924" endtime="20201029 09:34:09.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.945957417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.945957889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:09.249" endtime="20201029 09:34:09.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.259" endtime="20201029 09:34:09.261"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.921" endtime="20201029 09:34:09.261"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.919" endtime="20201029 09:34:09.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:09.269" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-0...</msg>
<status status="PASS" starttime="20201029 09:34:09.262" endtime="20201029 09:34:09.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:09.274" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4...</msg>
<status status="PASS" starttime="20201029 09:34:09.270" endtime="20201029 09:34:09.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.278" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:09.277" endtime="20201029 09:34:09.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.281" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.869999994383534e-07]</msg>
<status status="PASS" starttime="20201029 09:34:09.279" endtime="20201029 09:34:09.281"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.275" endtime="20201029 09:34:09.282"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.894" endtime="20201029 09:34:09.282"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.893" endtime="20201029 09:34:09.282"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.290" endtime="20201029 09:34:09.300"></status>
</kw>
<msg timestamp="20201029 09:34:09.301" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:09.289" endtime="20201029 09:34:09.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.303" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:09.302" endtime="20201029 09:34:09.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.304" endtime="20201029 09:34:09.306"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.286" endtime="20201029 09:34:09.307"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.284" endtime="20201029 09:34:09.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.316" endtime="20201029 09:34:09.635"></status>
</kw>
<msg timestamp="20201029 09:34:09.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.315061958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.315062431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:09.314" endtime="20201029 09:34:09.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.315061958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.315062431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:09.640" endtime="20201029 09:34:09.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.650" endtime="20201029 09:34:09.652"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.310" endtime="20201029 09:34:09.652"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.308" endtime="20201029 09:34:09.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:09.657" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}...</msg>
<status status="PASS" starttime="20201029 09:34:09.654" endtime="20201029 09:34:09.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:09.662" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 09:34:09.658" endtime="20201029 09:34:09.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.667" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:09.665" endtime="20201029 09:34:09.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.670" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.85999999355613e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 09:34:09.668" endtime="20201029 09:34:09.670"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.663" endtime="20201029 09:34:09.671"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.283" endtime="20201029 09:34:09.671"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.283" endtime="20201029 09:34:09.671"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.680" endtime="20201029 09:34:09.690"></status>
</kw>
<msg timestamp="20201029 09:34:09.691" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:09.678" endtime="20201029 09:34:09.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:09.693" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:09.692" endtime="20201029 09:34:09.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.694" endtime="20201029 09:34:09.696"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.675" endtime="20201029 09:34:09.696"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.674" endtime="20201029 09:34:09.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:09.704" endtime="20201029 09:34:10.013"></status>
</kw>
<msg timestamp="20201029 09:34:10.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.694394653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.694395125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:09.702" endtime="20201029 09:34:10.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.694394653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.694395125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:10.018" endtime="20201029 09:34:10.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.028" endtime="20201029 09:34:10.030"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.700" endtime="20201029 09:34:10.031"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.698" endtime="20201029 09:34:10.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:10.035" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-0...</msg>
<status status="PASS" starttime="20201029 09:34:10.032" endtime="20201029 09:34:10.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:10.041" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.85999999355613e-07, 4....</msg>
<status status="PASS" starttime="20201029 09:34:10.036" endtime="20201029 09:34:10.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.046" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:10.044" endtime="20201029 09:34:10.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.048" level="INFO">VALUE: [4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.85999999355613e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 09:34:10.047" endtime="20201029 09:34:10.049"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.042" endtime="20201029 09:34:10.049"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.672" endtime="20201029 09:34:10.050"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:09.672" endtime="20201029 09:34:10.050"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.058" endtime="20201029 09:34:10.069"></status>
</kw>
<msg timestamp="20201029 09:34:10.069" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:10.056" endtime="20201029 09:34:10.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.072" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:10.070" endtime="20201029 09:34:10.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.073" endtime="20201029 09:34:10.075"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.054" endtime="20201029 09:34:10.075"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.052" endtime="20201029 09:34:10.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.083" endtime="20201029 09:34:10.405"></status>
</kw>
<msg timestamp="20201029 09:34:10.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.074671958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.074672444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:10.081" endtime="20201029 09:34:10.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.074671958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.074672444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:10.410" endtime="20201029 09:34:10.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.420" endtime="20201029 09:34:10.422"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.079" endtime="20201029 09:34:10.422"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.077" endtime="20201029 09:34:10.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:10.427" level="INFO">${RESULT} = [{'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07},...</msg>
<status status="PASS" starttime="20201029 09:34:10.424" endtime="20201029 09:34:10.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:10.432" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.730...</msg>
<status status="PASS" starttime="20201029 09:34:10.428" endtime="20201029 09:34:10.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.437" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:10.435" endtime="20201029 09:34:10.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.439" level="INFO">VALUE: [4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.870000003265318e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:10.438" endtime="20201029 09:34:10.440"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.433" endtime="20201029 09:34:10.440"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.050" endtime="20201029 09:34:10.441"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.050" endtime="20201029 09:34:10.441"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.450" endtime="20201029 09:34:10.460"></status>
</kw>
<msg timestamp="20201029 09:34:10.461" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:10.447" endtime="20201029 09:34:10.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.464" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:10.462" endtime="20201029 09:34:10.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.465" endtime="20201029 09:34:10.467"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.445" endtime="20201029 09:34:10.467"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.443" endtime="20201029 09:34:10.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.474" endtime="20201029 09:34:10.785"></status>
</kw>
<msg timestamp="20201029 09:34:10.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.441899722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.441900194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:10.473" endtime="20201029 09:34:10.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.441899722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.441900194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:10.790" endtime="20201029 09:34:10.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.800" endtime="20201029 09:34:10.802"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.470" endtime="20201029 09:34:10.802"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.468" endtime="20201029 09:34:10.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:10.807" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-0...</msg>
<status status="PASS" starttime="20201029 09:34:10.803" endtime="20201029 09:34:10.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:10.813" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07,...</msg>
<status status="PASS" starttime="20201029 09:34:10.808" endtime="20201029 09:34:10.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.817" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:10.816" endtime="20201029 09:34:10.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.820" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:34:10.818" endtime="20201029 09:34:10.820"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.814" endtime="20201029 09:34:10.821"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.441" endtime="20201029 09:34:10.821"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.441" endtime="20201029 09:34:10.821"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.830" endtime="20201029 09:34:10.840"></status>
</kw>
<msg timestamp="20201029 09:34:10.841" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:10.828" endtime="20201029 09:34:10.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:10.844" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:10.842" endtime="20201029 09:34:10.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.845" endtime="20201029 09:34:10.847"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.825" endtime="20201029 09:34:10.847"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.824" endtime="20201029 09:34:10.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:10.854" endtime="20201029 09:34:11.169"></status>
</kw>
<msg timestamp="20201029 09:34:11.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.823823694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.823824167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:10.853" endtime="20201029 09:34:11.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.823823694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.823824167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:11.175" endtime="20201029 09:34:11.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.185" endtime="20201029 09:34:11.186"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.850" endtime="20201029 09:34:11.187"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.848" endtime="20201029 09:34:11.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:11.191" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000086178306e-07...</msg>
<status status="PASS" starttime="20201029 09:34:11.188" endtime="20201029 09:34:11.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:11.197" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 09:34:11.192" endtime="20201029 09:34:11.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.201" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:34:11.200" endtime="20201029 09:34:11.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.204" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.870000003265318e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07]</msg>
<status status="PASS" starttime="20201029 09:34:11.203" endtime="20201029 09:34:11.204"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.198" endtime="20201029 09:34:11.205"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.822" endtime="20201029 09:34:11.205"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:10.822" endtime="20201029 09:34:11.206"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.506" endtime="20201029 09:34:11.206"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:03.429" endtime="20201029 09:34:11.206" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:11.213" endtime="20201029 09:34:11.232"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.211" endtime="20201029 09:34:11.233"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.246" endtime="20201029 09:34:11.262"></status>
</kw>
<msg timestamp="20201029 09:34:11.262" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:11.245" endtime="20201029 09:34:11.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.267" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:11.264" endtime="20201029 09:34:11.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.273" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:11.269" endtime="20201029 09:34:11.274"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:11.242" endtime="20201029 09:34:11.275"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:11.240" endtime="20201029 09:34:11.276"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.238" endtime="20201029 09:34:11.277"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:11.285" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:11.283" endtime="20201029 09:34:11.286"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.279" endtime="20201029 09:34:11.286"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.237" endtime="20201029 09:34:11.286"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.237" endtime="20201029 09:34:11.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.288" endtime="20201029 09:34:11.291"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.235" endtime="20201029 09:34:11.293"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.234" endtime="20201029 09:34:11.294"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.210" endtime="20201029 09:34:11.294"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.312" endtime="20201029 09:34:11.328"></status>
</kw>
<msg timestamp="20201029 09:34:11.329" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:11.309" endtime="20201029 09:34:11.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.334" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:11.331" endtime="20201029 09:34:11.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.336" endtime="20201029 09:34:11.340"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.303" endtime="20201029 09:34:11.341"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.300" endtime="20201029 09:34:11.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.356" endtime="20201029 09:34:11.651"></status>
</kw>
<msg timestamp="20201029 09:34:11.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.091690778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.091693819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:11.353" endtime="20201029 09:34:11.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.091690778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.091693819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:11.656" endtime="20201029 09:34:11.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.664" endtime="20201029 09:34:11.666"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.347" endtime="20201029 09:34:11.666"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.343" endtime="20201029 09:34:11.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:11.671" level="INFO">${RESULT} = [{'diff': 3.0409999999952975e-06}, {'diff': 2.9719999999899827e-06}, {'diff': 3.05600000000128e-06}, {'diff': 3.0409999999952975e-06}, {'diff': 3.041999999994771e-06}, {'diff': 3.0279999999882623e-06}...</msg>
<status status="PASS" starttime="20201029 09:34:11.668" endtime="20201029 09:34:11.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:11.676" level="INFO">${OVERHEAD} = {'diff': [3.0409999999952975e-06, 2.9719999999899827e-06, 3.05600000000128e-06, 3.0409999999952975e-06, 3.041999999994771e-06, 3.0279999999882623e-06, 3.0139999999956313e-06, 3.0550000000018063e-06, 3...</msg>
<status status="PASS" starttime="20201029 09:34:11.672" endtime="20201029 09:34:11.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.680" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:11.679" endtime="20201029 09:34:11.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.683" level="INFO">VALUE: [3.0409999999952975e-06, 2.9719999999899827e-06, 3.05600000000128e-06, 3.0409999999952975e-06, 3.041999999994771e-06, 3.0279999999882623e-06, 3.0139999999956313e-06, 3.0550000000018063e-06, 3.055999999987402e-06, 3.02800000000214e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.0139999999956313e-06, 3.0000000000030003e-06, 3.0269999999887887e-06, 3.041999999994771e-06, 3.0409999999952975e-06, 2.9859999999964915e-06, 3.02800000000214e-06, 3.041999999994771e-06, 3.0409999999952975e-06, 3.0410000000091753e-06, 3.041999999994771e-06, 3.041999999994771e-06, 3.0409999999952975e-06, 3.02800000000214e-06, 3.041999999994771e-06, 3.041999999994771e-06, 3.041999999994771e-06, 3.0270000000026664e-06, 3.02800000000214e-06, 3.041999999994771e-06, 3.05600000000128e-06, 3.042000000008649e-06, 3.05600000000128e-06, 3.0409999999952975e-06, 3.02800000000214e-06, 3.05600000000128e-06, 3.0700000000077887e-06, 3.02800000000214e-06, 3.0409999999952975e-06, 3.0279999999882623e-06, 3.0270000000026664e-06, 3.0409999999952975e-06, 3.0689999999944373e-06, 3.0550000000018063e-06, 3.0550000000018063e-06, 3.0409999999952975e-06, 3.0409999999952975e-06, 3.041999999994771e-06]</msg>
<status status="PASS" starttime="20201029 09:34:11.681" endtime="20201029 09:34:11.683"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.677" endtime="20201029 09:34:11.684"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.297" endtime="20201029 09:34:11.684"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.296" endtime="20201029 09:34:11.684"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.692" endtime="20201029 09:34:11.704"></status>
</kw>
<msg timestamp="20201029 09:34:11.704" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:11.690" endtime="20201029 09:34:11.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:11.707" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:11.705" endtime="20201029 09:34:11.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.708" endtime="20201029 09:34:11.709"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.688" endtime="20201029 09:34:11.710"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.686" endtime="20201029 09:34:11.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:11.717" endtime="20201029 09:34:12.028"></status>
</kw>
<msg timestamp="20201029 09:34:12.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.092134375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.092137403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:11.715" endtime="20201029 09:34:12.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.092134375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.092137403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:12.036" endtime="20201029 09:34:12.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.052" endtime="20201029 09:34:12.055"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.713" endtime="20201029 09:34:12.056"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.711" endtime="20201029 09:34:12.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:12.062" level="INFO">${RESULT} = [{'diff': 3.02800000000214e-06}, {'diff': 3.05600000000128e-06}, {'diff': 3.0700000000077887e-06}, {'diff': 3.02800000000214e-06}, {'diff': 3.0409999999952975e-06}, {'diff': 3.0279999999882623e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:12.058" endtime="20201029 09:34:12.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:12.068" level="INFO">${OVERHEAD} = {'diff': [3.02800000000214e-06, 3.05600000000128e-06, 3.0700000000077887e-06, 3.02800000000214e-06, 3.0409999999952975e-06, 3.0279999999882623e-06, 3.0270000000026664e-06, 3.0409999999952975e-06, 3.06...</msg>
<status status="PASS" starttime="20201029 09:34:12.064" endtime="20201029 09:34:12.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.074" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:12.072" endtime="20201029 09:34:12.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.076" level="INFO">VALUE: [3.02800000000214e-06, 3.05600000000128e-06, 3.0700000000077887e-06, 3.02800000000214e-06, 3.0409999999952975e-06, 3.0279999999882623e-06, 3.0270000000026664e-06, 3.0409999999952975e-06, 3.0689999999944373e-06, 3.0550000000018063e-06, 3.0550000000018063e-06, 3.0409999999952975e-06, 3.0409999999952975e-06, 3.041999999994771e-06, 3.111000000000086e-06, 3.042000000008649e-06, 3.028000000016018e-06, 3.0409999999814197e-06, 3.042000000008649e-06, 3.0409999999814197e-06, 3.042000000008649e-06, 3.0139999999678757e-06, 3.0409999999814197e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.028000000016018e-06, 3.042000000008649e-06, 3.0549999999740507e-06, 3.0409999999814197e-06, 3.014000000023387e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.124999999992717e-06, 3.097000000007455e-06, 3.05600000000128e-06, 3.069000000022193e-06, 3.0419999999531377e-06, 3.042000000008649e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.0409999999814197e-06, 3.042000000008649e-06, 3.05600000000128e-06, 3.0270000000443e-06, 3.042000000008649e-06, 3.028000000016018e-06, 3.0419999999531377e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.028000000016018e-06, 2.986000000038125e-06, 3.0409999999814197e-06, 3.041000000036931e-06, 3.0139999999678757e-06, 3.0409999999814197e-06, 3.000000000030756e-06, 3.028000000016018e-06, 3.0409999999814197e-06, 3.042000000008649e-06]</msg>
<status status="PASS" starttime="20201029 09:34:12.075" endtime="20201029 09:34:12.077"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.069" endtime="20201029 09:34:12.077"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.685" endtime="20201029 09:34:12.078"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.685" endtime="20201029 09:34:12.078"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.087" endtime="20201029 09:34:12.099"></status>
</kw>
<msg timestamp="20201029 09:34:12.099" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:12.085" endtime="20201029 09:34:12.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.102" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:12.100" endtime="20201029 09:34:12.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.103" endtime="20201029 09:34:12.104"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.082" endtime="20201029 09:34:12.105"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.080" endtime="20201029 09:34:12.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.112" endtime="20201029 09:34:12.420"></status>
</kw>
<msg timestamp="20201029 09:34:12.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.462622125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.462625153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:12.110" endtime="20201029 09:34:12.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.462622125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.462625153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:12.425" endtime="20201029 09:34:12.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.435" endtime="20201029 09:34:12.437"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.108" endtime="20201029 09:34:12.437"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.106" endtime="20201029 09:34:12.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:12.442" level="INFO">${RESULT} = [{'diff': 3.028000000016018e-06}, {'diff': 3.0419999999531377e-06}, {'diff': 3.042000000008649e-06}, {'diff': 3.042000000008649e-06}, {'diff': 3.028000000016018e-06}, {'diff': 2.986000000038125e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:34:12.438" endtime="20201029 09:34:12.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:12.450" level="INFO">${OVERHEAD} = {'diff': [3.028000000016018e-06, 3.0419999999531377e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.028000000016018e-06, 2.986000000038125e-06, 3.0409999999814197e-06, 3.041000000036931e-06, 3.01...</msg>
<status status="PASS" starttime="20201029 09:34:12.443" endtime="20201029 09:34:12.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.454" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:12.453" endtime="20201029 09:34:12.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.456" level="INFO">VALUE: [3.028000000016018e-06, 3.0419999999531377e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.028000000016018e-06, 2.986000000038125e-06, 3.0409999999814197e-06, 3.041000000036931e-06, 3.0139999999678757e-06, 3.0409999999814197e-06, 3.000000000030756e-06, 3.028000000016018e-06, 3.0409999999814197e-06, 3.042000000008649e-06, 2.9999999999752447e-06, 3.0559999999457688e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.0269999999887887e-06, 3.0409999999259085e-06, 3.041000000036931e-06, 3.0279999999605067e-06, 3.014000000023387e-06, 3.042000000008649e-06, 3.0279999999605067e-06, 3.042000000008649e-06, 3.056000000056791e-06, 2.9719999999899827e-06, 3.055000000085073e-06, 3.042000000008649e-06, 3.0549999999740507e-06, 3.0279999999605067e-06, 3.028000000071529e-06, 3.042000000008649e-06, 3.028000000071529e-06, 3.0559999999457688e-06, 3.014000000023387e-06, 3.028000000071529e-06, 3.042000000008649e-06, 3.0829999999593127e-06, 3.042000000008649e-06, 3.0409999999259085e-06, 3.042000000008649e-06, 2.987000000009843e-06, 3.0409999999259085e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.0269999999887887e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.014000000023387e-06, 3.0139999999123646e-06, 3.042000000008649e-06, 3.055000000085073e-06, 3.0559999999457688e-06, 3.0269999999887887e-06, 3.042000000008649e-06, 3.0549999999740507e-06, 3.042000000008649e-06, 3.028000000071529e-06, 3.042000000008649e-06, 3.042000000008649e-06]</msg>
<status status="PASS" starttime="20201029 09:34:12.455" endtime="20201029 09:34:12.457"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.450" endtime="20201029 09:34:12.457"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.079" endtime="20201029 09:34:12.458"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.078" endtime="20201029 09:34:12.458"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.466" endtime="20201029 09:34:12.477"></status>
</kw>
<msg timestamp="20201029 09:34:12.478" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:12.464" endtime="20201029 09:34:12.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.480" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:12.479" endtime="20201029 09:34:12.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.481" endtime="20201029 09:34:12.483"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.461" endtime="20201029 09:34:12.484"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.460" endtime="20201029 09:34:12.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.490" endtime="20201029 09:34:12.794"></status>
</kw>
<msg timestamp="20201029 09:34:12.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.846181125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.846184167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:12.489" endtime="20201029 09:34:12.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.846181125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.846184167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:12.805" endtime="20201029 09:34:12.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.828" endtime="20201029 09:34:12.831"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.486" endtime="20201029 09:34:12.833"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.485" endtime="20201029 09:34:12.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:12.843" level="INFO">${RESULT} = [{'diff': 3.042000000008649e-06}, {'diff': 3.042000000008649e-06}, {'diff': 3.014000000023387e-06}, {'diff': 3.0139999999123646e-06}, {'diff': 3.042000000008649e-06}, {'diff': 3.055000000085073e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:34:12.835" endtime="20201029 09:34:12.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:12.855" level="INFO">${OVERHEAD} = {'diff': [3.042000000008649e-06, 3.042000000008649e-06, 3.014000000023387e-06, 3.0139999999123646e-06, 3.042000000008649e-06, 3.055000000085073e-06, 3.0559999999457688e-06, 3.0269999999887887e-06, 3.0...</msg>
<status status="PASS" starttime="20201029 09:34:12.845" endtime="20201029 09:34:12.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.864" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:12.862" endtime="20201029 09:34:12.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.869" level="INFO">VALUE: [3.042000000008649e-06, 3.042000000008649e-06, 3.014000000023387e-06, 3.0139999999123646e-06, 3.042000000008649e-06, 3.055000000085073e-06, 3.0559999999457688e-06, 3.0269999999887887e-06, 3.042000000008649e-06, 3.0549999999740507e-06, 3.042000000008649e-06, 3.028000000071529e-06, 3.042000000008649e-06, 3.042000000008649e-06, 3.0139999998013423e-06, 3.055000000085073e-06, 3.0560000001678134e-06, 3.0549999998630284e-06, 3.0419999998976266e-06, 2.9999999999752447e-06, 3.042000000119671e-06, 3.0549999998630284e-06, 3.028000000071529e-06, 3.042000000119671e-06, 3.042000000119671e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.097000000007455e-06, 3.111000000055597e-06, 2.9999999999752447e-06, 3.055000000085073e-06, 3.042000000119671e-06, 3.0559999999457688e-06, 3.0560000001678134e-06, 3.0549999998630284e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.042000000119671e-06, 3.042000000119671e-06, 3.0279999998494844e-06, 3.042000000119671e-06, 3.0419999998976266e-06, 3.0269999999887887e-06, 3.0419999998976266e-06, 3.055000000085073e-06, 3.014000000023387e-06, 3.0560000001678134e-06, 3.041000000036931e-06, 3.0419999998976266e-06, 3.055000000085073e-06, 3.041000000036931e-06, 3.0279999998494844e-06, 3.042000000119671e-06, 3.0139999998013423e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.069999999993911e-06, 3.0560000001678134e-06, 3.041000000036931e-06, 2.9999999999752447e-06, 3.042000000119671e-06, 3.042000000119671e-06, 3.0419999998976266e-06]</msg>
<status status="PASS" starttime="20201029 09:34:12.866" endtime="20201029 09:34:12.870"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.857" endtime="20201029 09:34:12.871"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.459" endtime="20201029 09:34:12.872"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.458" endtime="20201029 09:34:12.872"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.886" endtime="20201029 09:34:12.898"></status>
</kw>
<msg timestamp="20201029 09:34:12.898" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:12.884" endtime="20201029 09:34:12.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:12.901" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:12.899" endtime="20201029 09:34:12.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.902" endtime="20201029 09:34:12.903"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.880" endtime="20201029 09:34:12.904"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.877" endtime="20201029 09:34:12.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:12.911" endtime="20201029 09:34:13.217"></status>
</kw>
<msg timestamp="20201029 09:34:13.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.214342528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.214345569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:12.909" endtime="20201029 09:34:13.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.214342528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.214345569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:13.227" endtime="20201029 09:34:13.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.237" endtime="20201029 09:34:13.239"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.907" endtime="20201029 09:34:13.239"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.905" endtime="20201029 09:34:13.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:13.244" level="INFO">${RESULT} = [{'diff': 3.041000000036931e-06}, {'diff': 3.0279999998494844e-06}, {'diff': 3.042000000119671e-06}, {'diff': 3.0139999998013423e-06}, {'diff': 3.0419999998976266e-06}, {'diff': 3.0419999998976266e-06...</msg>
<status status="PASS" starttime="20201029 09:34:13.241" endtime="20201029 09:34:13.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:13.249" level="INFO">${OVERHEAD} = {'diff': [3.041000000036931e-06, 3.0279999998494844e-06, 3.042000000119671e-06, 3.0139999998013423e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.069999999993911e-06, 3...</msg>
<status status="PASS" starttime="20201029 09:34:13.245" endtime="20201029 09:34:13.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.253" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:13.252" endtime="20201029 09:34:13.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.256" level="INFO">VALUE: [3.041000000036931e-06, 3.0279999998494844e-06, 3.042000000119671e-06, 3.0139999998013423e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.069999999993911e-06, 3.0560000001678134e-06, 3.041000000036931e-06, 2.9999999999752447e-06, 3.042000000119671e-06, 3.042000000119671e-06, 3.0419999998976266e-06, 3.028000000071529e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.041000000036931e-06, 3.0279999998494844e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.014000000023387e-06, 3.042000000119671e-06, 3.055000000085073e-06, 3.0419999998976266e-06, 3.0000000001972893e-06, 3.042000000119671e-06, 3.0560000001678134e-06, 3.0559999999457688e-06, 3.0549999998630284e-06, 3.041000000036931e-06, 3.0419999998976266e-06, 3.0689999999111706e-06, 3.0270000002108333e-06, 3.041000000036931e-06, 3.0559999999457688e-06, 3.028000000071529e-06, 3.0129999999406465e-06, 3.042000000119671e-06, 3.0559999999457688e-06, 3.042000000119671e-06, 3.0419999998976266e-06, 3.0549999998630284e-06, 3.0269999999887887e-06, 3.0269999999887887e-06, 3.0279999998494844e-06, 3.042000000119671e-06, 3.0419999998976266e-06, 3.0549999998630284e-06, 3.0419999998976266e-06, 3.0549999998630284e-06, 3.0419999998976266e-06, 3.014000000023387e-06, 3.0829999999593127e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.055000000085073e-06, 3.0549999998630284e-06, 3.014000000023387e-06, 3.041000000036931e-06, 3.0559999999457688e-06, 3.0419999998976266e-06, 2.9999999999752447e-06]</msg>
<status status="PASS" starttime="20201029 09:34:13.254" endtime="20201029 09:34:13.256"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.250" endtime="20201029 09:34:13.256"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.874" endtime="20201029 09:34:13.257"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:12.873" endtime="20201029 09:34:13.257"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.266" endtime="20201029 09:34:13.277"></status>
</kw>
<msg timestamp="20201029 09:34:13.277" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:13.264" endtime="20201029 09:34:13.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.280" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:13.279" endtime="20201029 09:34:13.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.281" endtime="20201029 09:34:13.283"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.261" endtime="20201029 09:34:13.283"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.259" endtime="20201029 09:34:13.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.290" endtime="20201029 09:34:13.602"></status>
</kw>
<msg timestamp="20201029 09:34:13.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.625288778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.625291833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:13.288" endtime="20201029 09:34:13.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.625288778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.625291833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:13.607" endtime="20201029 09:34:13.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.617" endtime="20201029 09:34:13.618"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.286" endtime="20201029 09:34:13.619"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.284" endtime="20201029 09:34:13.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:13.623" level="INFO">${RESULT} = [{'diff': 3.0549999998630284e-06}, {'diff': 3.0419999998976266e-06}, {'diff': 3.014000000023387e-06}, {'diff': 3.0829999999593127e-06}, {'diff': 3.0419999998976266e-06}, {'diff': 3.0419999998976266e-0...</msg>
<status status="PASS" starttime="20201029 09:34:13.620" endtime="20201029 09:34:13.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:13.629" level="INFO">${OVERHEAD} = {'diff': [3.0549999998630284e-06, 3.0419999998976266e-06, 3.014000000023387e-06, 3.0829999999593127e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.055000000085073e-06, ...</msg>
<status status="PASS" starttime="20201029 09:34:13.624" endtime="20201029 09:34:13.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.633" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:13.632" endtime="20201029 09:34:13.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.636" level="INFO">VALUE: [3.0549999998630284e-06, 3.0419999998976266e-06, 3.014000000023387e-06, 3.0829999999593127e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.055000000085073e-06, 3.0549999998630284e-06, 3.014000000023387e-06, 3.041000000036931e-06, 3.0559999999457688e-06, 3.0419999998976266e-06, 2.9999999999752447e-06, 3.0419999998976266e-06, 3.0559999999457688e-06, 3.042000000119671e-06, 3.097000000007455e-06, 3.069000000133215e-06, 3.042000000119671e-06, 3.041000000036931e-06, 3.042000000119671e-06, 3.0129999999406465e-06, 3.042000000119671e-06, 3.0269999999887887e-06, 3.055000000085073e-06, 3.041000000036931e-06, 3.042000000119671e-06, 3.041000000036931e-06, 3.041000000036931e-06, 3.028000000071529e-06, 3.0419999998976266e-06, 3.042000000119671e-06, 3.042000000119671e-06, 3.0409999998148862e-06, 3.042000000119671e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.042000000119671e-06, 3.0269999999887887e-06, 3.042000000119671e-06, 3.111000000055597e-06, 3.0559999999457688e-06, 3.055000000085073e-06, 3.0419999998976266e-06, 3.042000000119671e-06, 3.0409999998148862e-06, 3.0829999999593127e-06, 3.042000000119671e-06, 2.9999999999752447e-06, 3.055000000085073e-06, 3.0419999998976266e-06, 3.042000000119671e-06, 3.0279999998494844e-06, 3.0559999999457688e-06, 3.0419999998976266e-06, 3.041000000036931e-06, 3.0419999998976266e-06, 3.041000000036931e-06, 3.0829999999593127e-06, 3.041000000036931e-06, 3.0269999999887887e-06, 3.042000000119671e-06, 3.084000000042053e-06]</msg>
<status status="PASS" starttime="20201029 09:34:13.634" endtime="20201029 09:34:13.636"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.630" endtime="20201029 09:34:13.637"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.258" endtime="20201029 09:34:13.637"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.257" endtime="20201029 09:34:13.637"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.645" endtime="20201029 09:34:13.657"></status>
</kw>
<msg timestamp="20201029 09:34:13.657" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:13.643" endtime="20201029 09:34:13.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.660" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:13.658" endtime="20201029 09:34:13.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.661" endtime="20201029 09:34:13.662"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.641" endtime="20201029 09:34:13.663"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.639" endtime="20201029 09:34:13.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.670" endtime="20201029 09:34:13.973"></status>
</kw>
<msg timestamp="20201029 09:34:13.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.995160042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.995163097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:13.668" endtime="20201029 09:34:13.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:13.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.995160042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.995163097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:13.980" endtime="20201029 09:34:13.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:13.992" endtime="20201029 09:34:13.994"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.666" endtime="20201029 09:34:13.994"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.664" endtime="20201029 09:34:13.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:13.999" level="INFO">${RESULT} = [{'diff': 3.055000000085073e-06}, {'diff': 3.0419999998976266e-06}, {'diff': 3.042000000119671e-06}, {'diff': 3.0279999998494844e-06}, {'diff': 3.0559999999457688e-06}, {'diff': 3.0419999998976266e-06...</msg>
<status status="PASS" starttime="20201029 09:34:13.995" endtime="20201029 09:34:13.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:14.005" level="INFO">${OVERHEAD} = {'diff': [3.055000000085073e-06, 3.0419999998976266e-06, 3.042000000119671e-06, 3.0279999998494844e-06, 3.0559999999457688e-06, 3.0419999998976266e-06, 3.041000000036931e-06, 3.0419999998976266e-06, 3...</msg>
<status status="PASS" starttime="20201029 09:34:14.000" endtime="20201029 09:34:14.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.009" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:14.008" endtime="20201029 09:34:14.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.011" level="INFO">VALUE: [3.055000000085073e-06, 3.0419999998976266e-06, 3.042000000119671e-06, 3.0279999998494844e-06, 3.0559999999457688e-06, 3.0419999998976266e-06, 3.041000000036931e-06, 3.0419999998976266e-06, 3.041000000036931e-06, 3.0829999999593127e-06, 3.041000000036931e-06, 3.0269999999887887e-06, 3.042000000119671e-06, 3.084000000042053e-06, 3.0560000001678134e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 3.0560000001678134e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0560000001678134e-06, 3.028000000071529e-06, 3.0419999998976266e-06, 3.042000000341716e-06, 3.055000000085073e-06, 3.0139999998013423e-06, 3.097000000007455e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0410000002589754e-06, 3.0139999998013423e-06, 3.0409999998148862e-06, 3.0560000001678134e-06, 3.02799999962744e-06, 3.055000000085073e-06, 3.0419999998976266e-06, 3.055000000085073e-06, 3.111999999916293e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 3.013000000162691e-06, 3.0140000002454315e-06, 3.0419999998976266e-06, 3.0410000002589754e-06, 3.0419999998976266e-06, 3.0269999999887887e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.1109999998335525e-06, 3.0419999998976266e-06, 3.028000000071529e-06, 3.0419999998976266e-06, 3.028000000071529e-06, 3.012999999718602e-06, 3.042000000341716e-06, 3.1109999998335525e-06, 3.0419999998976266e-06, 3.042000000341716e-06, 3.0419999998976266e-06, 3.0840000002640977e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.055999999723724e-06]</msg>
<status status="PASS" starttime="20201029 09:34:14.010" endtime="20201029 09:34:14.012"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.005" endtime="20201029 09:34:14.012"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.638" endtime="20201029 09:34:14.013"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:13.637" endtime="20201029 09:34:14.013"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.020" endtime="20201029 09:34:14.032"></status>
</kw>
<msg timestamp="20201029 09:34:14.033" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.019" endtime="20201029 09:34:14.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.035" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.034" endtime="20201029 09:34:14.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.036" endtime="20201029 09:34:14.038"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.016" endtime="20201029 09:34:14.038"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.015" endtime="20201029 09:34:14.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.046" endtime="20201029 09:34:14.360"></status>
</kw>
<msg timestamp="20201029 09:34:14.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.364303333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.364306361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:14.044" endtime="20201029 09:34:14.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.364303333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.364306361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:14.365" endtime="20201029 09:34:14.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.375" endtime="20201029 09:34:14.376"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.041" endtime="20201029 09:34:14.377"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.039" endtime="20201029 09:34:14.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:14.381" level="INFO">${RESULT} = [{'diff': 3.028000000071529e-06}, {'diff': 3.0419999998976266e-06}, {'diff': 3.028000000071529e-06}, {'diff': 3.012999999718602e-06}, {'diff': 3.042000000341716e-06}, {'diff': 3.1109999998335525e-06},...</msg>
<status status="PASS" starttime="20201029 09:34:14.378" endtime="20201029 09:34:14.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:14.386" level="INFO">${OVERHEAD} = {'diff': [3.028000000071529e-06, 3.0419999998976266e-06, 3.028000000071529e-06, 3.012999999718602e-06, 3.042000000341716e-06, 3.1109999998335525e-06, 3.0419999998976266e-06, 3.042000000341716e-06, 3.0...</msg>
<status status="PASS" starttime="20201029 09:34:14.382" endtime="20201029 09:34:14.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.390" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:14.389" endtime="20201029 09:34:14.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.393" level="INFO">VALUE: [3.028000000071529e-06, 3.0419999998976266e-06, 3.028000000071529e-06, 3.012999999718602e-06, 3.042000000341716e-06, 3.1109999998335525e-06, 3.0419999998976266e-06, 3.042000000341716e-06, 3.0419999998976266e-06, 3.0840000002640977e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.055999999723724e-06, 3.0419999998976266e-06, 2.9999999999752447e-06, 3.0419999998976266e-06, 3.055000000085073e-06, 3.0410000002589754e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.055000000085073e-06, 2.986000000149147e-06, 3.0269999999887887e-06, 3.0410000002589754e-06, 3.0410000002589754e-06, 3.0689999999111706e-06, 3.0830000001813573e-06, 3.055999999723724e-06, 3.0419999998976266e-06, 3.028000000071529e-06, 3.0269999999887887e-06, 3.0409999998148862e-06, 3.028000000071529e-06, 3.097000000007455e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.097000000007455e-06, 3.1250000001037392e-06, 3.0410000002589754e-06, 3.055000000085073e-06, 3.055000000085073e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.0409999998148862e-06, 3.0690000003552598e-06, 3.0419999998976266e-06, 3.042000000341716e-06, 3.055000000085073e-06, 3.042000000341716e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 3.1109999998335525e-06, 2.959000000135603e-06, 3.055999999723724e-06, 3.042000000341716e-06, 3.0419999998976266e-06, 3.0410000002589754e-06, 3.0419999998976266e-06, 3.0560000001678134e-06, 3.097999999646106e-06]</msg>
<status status="PASS" starttime="20201029 09:34:14.391" endtime="20201029 09:34:14.393"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.387" endtime="20201029 09:34:14.394"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.014" endtime="20201029 09:34:14.394"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.013" endtime="20201029 09:34:14.394"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.403" endtime="20201029 09:34:14.416"></status>
</kw>
<msg timestamp="20201029 09:34:14.416" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.402" endtime="20201029 09:34:14.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.419" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.417" endtime="20201029 09:34:14.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.420" endtime="20201029 09:34:14.421"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.399" endtime="20201029 09:34:14.422"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.397" endtime="20201029 09:34:14.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.429" endtime="20201029 09:34:14.737"></status>
</kw>
<msg timestamp="20201029 09:34:14.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.729043903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.729046958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:14.428" endtime="20201029 09:34:14.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.729043903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.729046958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:14.742" endtime="20201029 09:34:14.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.751" endtime="20201029 09:34:14.753"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.425" endtime="20201029 09:34:14.754"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.423" endtime="20201029 09:34:14.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:14.758" level="INFO">${RESULT} = [{'diff': 3.055000000085073e-06}, {'diff': 3.042000000341716e-06}, {'diff': 3.0419999998976266e-06}, {'diff': 3.0409999998148862e-06}, {'diff': 3.0419999998976266e-06}, {'diff': 3.1109999998335525e-06...</msg>
<status status="PASS" starttime="20201029 09:34:14.755" endtime="20201029 09:34:14.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:14.764" level="INFO">${OVERHEAD} = {'diff': [3.055000000085073e-06, 3.042000000341716e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 3.1109999998335525e-06, 2.959000000135603e-06, 3.055999999723724e-06, 3....</msg>
<status status="PASS" starttime="20201029 09:34:14.759" endtime="20201029 09:34:14.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.768" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:14.767" endtime="20201029 09:34:14.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.774" level="INFO">VALUE: [3.055000000085073e-06, 3.042000000341716e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 3.1109999998335525e-06, 2.959000000135603e-06, 3.055999999723724e-06, 3.042000000341716e-06, 3.0419999998976266e-06, 3.0410000002589754e-06, 3.0419999998976266e-06, 3.0560000001678134e-06, 3.097999999646106e-06, 3.0409999998148862e-06, 3.0139999998013423e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 3.0560000001678134e-06, 3.028000000071529e-06, 3.0409999998148862e-06, 3.0139999998013423e-06, 3.055000000085073e-06, 3.0139999998013423e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0560000001678134e-06, 3.042000000341716e-06, 3.0419999998976266e-06, 3.042000000341716e-06, 3.097000000007455e-06, 3.0409999998148862e-06, 3.1250000001037392e-06, 3.0410000002589754e-06, 3.000000000419334e-06, 3.0140000002454315e-06, 3.0419999998976266e-06, 2.9999999999752447e-06, 3.0549999996409838e-06, 3.028000000071529e-06, 3.0560000001678134e-06, 3.0689999999111706e-06, 3.02799999962744e-06, 3.0410000002589754e-06, 3.0139999998013423e-06, 3.0419999998976266e-06, 3.055000000085073e-06, 3.1110000002776417e-06, 3.082999999737268e-06, 3.028000000071529e-06, 3.0139999998013423e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 3.02799999962744e-06, 3.0419999998976266e-06, 3.028000000071529e-06, 3.0409999998148862e-06, 3.097000000007455e-06, 2.986000000149147e-06]</msg>
<status status="PASS" starttime="20201029 09:34:14.771" endtime="20201029 09:34:14.774"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.765" endtime="20201029 09:34:14.775"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.395" endtime="20201029 09:34:14.776"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.395" endtime="20201029 09:34:14.776"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.786" endtime="20201029 09:34:14.798"></status>
</kw>
<msg timestamp="20201029 09:34:14.799" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.784" endtime="20201029 09:34:14.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:14.802" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:14.800" endtime="20201029 09:34:14.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.803" endtime="20201029 09:34:14.805"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.780" endtime="20201029 09:34:14.805"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.779" endtime="20201029 09:34:14.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:14.813" endtime="20201029 09:34:15.129"></status>
</kw>
<msg timestamp="20201029 09:34:15.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.10257675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.102579861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:14.811" endtime="20201029 09:34:15.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.10257675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.102579861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:15.134" endtime="20201029 09:34:15.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.143" endtime="20201029 09:34:15.146"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.808" endtime="20201029 09:34:15.146"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.806" endtime="20201029 09:34:15.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:15.151" level="INFO">${RESULT} = [{'diff': 3.1110000002776417e-06}, {'diff': 3.082999999737268e-06}, {'diff': 3.028000000071529e-06}, {'diff': 3.0139999998013423e-06}, {'diff': 3.0419999998976266e-06}, {'diff': 3.0409999998148862e-06...</msg>
<status status="PASS" starttime="20201029 09:34:15.148" endtime="20201029 09:34:15.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:15.156" level="INFO">${OVERHEAD} = {'diff': [3.1110000002776417e-06, 3.082999999737268e-06, 3.028000000071529e-06, 3.0139999998013423e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, ...</msg>
<status status="PASS" starttime="20201029 09:34:15.152" endtime="20201029 09:34:15.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.160" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:15.159" endtime="20201029 09:34:15.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.162" level="INFO">VALUE: [3.1110000002776417e-06, 3.082999999737268e-06, 3.028000000071529e-06, 3.0139999998013423e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 3.02799999962744e-06, 3.0419999998976266e-06, 3.028000000071529e-06, 3.0409999998148862e-06, 3.097000000007455e-06, 2.986000000149147e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.0419999998976266e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.097000000007455e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0410000002589754e-06, 3.0419999998976266e-06, 3.055999999723724e-06, 3.0419999998976266e-06, 3.013000000162691e-06, 3.069999999993911e-06, 3.028000000071529e-06, 3.0410000002589754e-06, 3.0980000000901953e-06, 3.0409999998148862e-06, 3.0419999998976266e-06, 3.0560000001678134e-06, 3.0839999998200085e-06, 3.0409999998148862e-06, 3.0410000002589754e-06, 3.055999999723724e-06, 3.042000000341716e-06, 3.097000000007455e-06, 3.0419999998976266e-06, 3.0140000002454315e-06, 3.028000000071529e-06, 3.02799999962744e-06, 3.055000000085073e-06, 3.0410000002589754e-06, 3.0560000001678134e-06, 3.0140000002454315e-06, 3.0419999998976266e-06, 2.9719999998789604e-06, 3.0139999998013423e-06, 3.0419999998976266e-06, 3.0269999999887887e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 2.9999999999752447e-06, 3.0409999998148862e-06, 3.055999999723724e-06, 3.0830000001813573e-06]</msg>
<status status="PASS" starttime="20201029 09:34:15.161" endtime="20201029 09:34:15.163"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.157" endtime="20201029 09:34:15.163"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.777" endtime="20201029 09:34:15.164"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:14.776" endtime="20201029 09:34:15.164"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.172" endtime="20201029 09:34:15.184"></status>
</kw>
<msg timestamp="20201029 09:34:15.185" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:15.170" endtime="20201029 09:34:15.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.187" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:15.186" endtime="20201029 09:34:15.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.188" endtime="20201029 09:34:15.190"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.168" endtime="20201029 09:34:15.190"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.166" endtime="20201029 09:34:15.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.198" endtime="20201029 09:34:15.518"></status>
</kw>
<msg timestamp="20201029 09:34:15.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.475496986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.475500042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:15.196" endtime="20201029 09:34:15.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.475496986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.475500042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:15.522" endtime="20201029 09:34:15.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.532" endtime="20201029 09:34:15.534"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.194" endtime="20201029 09:34:15.534"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.192" endtime="20201029 09:34:15.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:15.539" level="INFO">${RESULT} = [{'diff': 3.0560000001678134e-06}, {'diff': 3.0140000002454315e-06}, {'diff': 3.0419999998976266e-06}, {'diff': 2.9719999998789604e-06}, {'diff': 3.0139999998013423e-06}, {'diff': 3.0419999998976266e-...</msg>
<status status="PASS" starttime="20201029 09:34:15.536" endtime="20201029 09:34:15.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:15.544" level="INFO">${OVERHEAD} = {'diff': [3.0560000001678134e-06, 3.0140000002454315e-06, 3.0419999998976266e-06, 2.9719999998789604e-06, 3.0139999998013423e-06, 3.0419999998976266e-06, 3.0269999999887887e-06, 3.0419999998976266e-06...</msg>
<status status="PASS" starttime="20201029 09:34:15.540" endtime="20201029 09:34:15.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.549" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:15.548" endtime="20201029 09:34:15.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.551" level="INFO">VALUE: [3.0560000001678134e-06, 3.0140000002454315e-06, 3.0419999998976266e-06, 2.9719999998789604e-06, 3.0139999998013423e-06, 3.0419999998976266e-06, 3.0269999999887887e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 2.9999999999752447e-06, 3.0409999998148862e-06, 3.055999999723724e-06, 3.0830000001813573e-06, 3.0269999999887887e-06, 3.0409999998148862e-06, 3.0140000002454315e-06, 3.028000000071529e-06, 3.028000000071529e-06, 2.9999999999752447e-06, 3.042000000341716e-06, 3.055000000085073e-06, 3.055000000085073e-06, 3.0409999998148862e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.0269999999887887e-06, 3.0409999998148862e-06, 3.042000000341716e-06, 3.055999999723724e-06, 3.0419999998976266e-06, 3.0560000001678134e-06, 3.0410000002589754e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.0410000002589754e-06, 3.0840000002640977e-06, 3.0419999998976266e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.097000000007455e-06, 3.097000000007455e-06, 3.0419999998976266e-06, 3.0409999998148862e-06, 3.0690000003552598e-06, 3.042000000341716e-06, 2.9720000003230496e-06, 3.0560000001678134e-06, 3.0409999998148862e-06, 3.0409999998148862e-06, 3.0269999999887887e-06, 3.055000000085073e-06, 3.042000000341716e-06, 3.0409999998148862e-06, 3.055000000085073e-06, 3.0409999998148862e-06, 3.0269999999887887e-06, 3.0560000001678134e-06, 3.0560000001678134e-06, 3.0689999999111706e-06, 3.0409999998148862e-06]</msg>
<status status="PASS" starttime="20201029 09:34:15.550" endtime="20201029 09:34:15.552"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.545" endtime="20201029 09:34:15.552"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.165" endtime="20201029 09:34:15.553"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.164" endtime="20201029 09:34:15.553"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.560" endtime="20201029 09:34:15.572"></status>
</kw>
<msg timestamp="20201029 09:34:15.573" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:15.559" endtime="20201029 09:34:15.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.575" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:15.574" endtime="20201029 09:34:15.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.576" endtime="20201029 09:34:15.578"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.556" endtime="20201029 09:34:15.579"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.555" endtime="20201029 09:34:15.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.585" endtime="20201029 09:34:15.893"></status>
</kw>
<msg timestamp="20201029 09:34:15.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.851116458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.851119514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:15.584" endtime="20201029 09:34:15.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.851116458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.851119514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:15.898" endtime="20201029 09:34:15.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.908" endtime="20201029 09:34:15.909"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.581" endtime="20201029 09:34:15.910"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.580" endtime="20201029 09:34:15.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:15.914" level="INFO">${RESULT} = [{'diff': 3.0560000001678134e-06}, {'diff': 3.0409999998148862e-06}, {'diff': 3.0409999998148862e-06}, {'diff': 3.0269999999887887e-06}, {'diff': 3.055000000085073e-06}, {'diff': 3.042000000341716e-06...</msg>
<status status="PASS" starttime="20201029 09:34:15.911" endtime="20201029 09:34:15.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:15.922" level="INFO">${OVERHEAD} = {'diff': [3.0560000001678134e-06, 3.0409999998148862e-06, 3.0409999998148862e-06, 3.0269999999887887e-06, 3.055000000085073e-06, 3.042000000341716e-06, 3.0409999998148862e-06, 3.055000000085073e-06, 3...</msg>
<status status="PASS" starttime="20201029 09:34:15.915" endtime="20201029 09:34:15.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.926" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:15.925" endtime="20201029 09:34:15.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.928" level="INFO">VALUE: [3.0560000001678134e-06, 3.0409999998148862e-06, 3.0409999998148862e-06, 3.0269999999887887e-06, 3.055000000085073e-06, 3.042000000341716e-06, 3.0409999998148862e-06, 3.055000000085073e-06, 3.0409999998148862e-06, 3.0269999999887887e-06, 3.0560000001678134e-06, 3.0560000001678134e-06, 3.0689999999111706e-06, 3.0409999998148862e-06, 3.040999999370797e-06, 3.097999999646106e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.055999999723724e-06, 3.0419999994535374e-06, 3.055999999723724e-06, 3.0549999996409838e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.1250000001037392e-06, 3.055999999723724e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.0969999995633657e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.055000000529162e-06, 3.042000000341716e-06, 3.097000000451544e-06, 3.028000000071529e-06, 3.0419999994535374e-06, 3.0139999998013423e-06, 3.0549999996409838e-06, 3.0549999996409838e-06, 3.0410000002589754e-06, 3.0840000002640977e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.055999999723724e-06, 3.042000000341716e-06, 3.055999999723724e-06, 3.0410000002589754e-06, 3.0549999996409838e-06, 3.0269999999887887e-06, 3.0410000002589754e-06, 3.0560000006119026e-06, 3.0279999991833506e-06, 3.0410000002589754e-06, 3.0560000006119026e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.055999999723724e-06, 3.040999999370797e-06, 3.028000000071529e-06]</msg>
<status status="PASS" starttime="20201029 09:34:15.927" endtime="20201029 09:34:15.929"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.923" endtime="20201029 09:34:15.929"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.553" endtime="20201029 09:34:15.930"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.553" endtime="20201029 09:34:15.930"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.938" endtime="20201029 09:34:15.949"></status>
</kw>
<msg timestamp="20201029 09:34:15.949" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:15.936" endtime="20201029 09:34:15.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:15.952" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:15.950" endtime="20201029 09:34:15.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.953" endtime="20201029 09:34:15.955"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.934" endtime="20201029 09:34:15.956"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.932" endtime="20201029 09:34:15.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:15.962" endtime="20201029 09:34:16.279"></status>
</kw>
<msg timestamp="20201029 09:34:16.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.227205208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.227208264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:15.961" endtime="20201029 09:34:16.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.227205208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.227208264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:16.284" endtime="20201029 09:34:16.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.294" endtime="20201029 09:34:16.295"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.958" endtime="20201029 09:34:16.296"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.957" endtime="20201029 09:34:16.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:16.301" level="INFO">${RESULT} = [{'diff': 3.055999999723724e-06}, {'diff': 3.0410000002589754e-06}, {'diff': 3.0549999996409838e-06}, {'diff': 3.0269999999887887e-06}, {'diff': 3.0410000002589754e-06}, {'diff': 3.0560000006119026e-0...</msg>
<status status="PASS" starttime="20201029 09:34:16.297" endtime="20201029 09:34:16.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:16.305" level="INFO">${OVERHEAD} = {'diff': [3.055999999723724e-06, 3.0410000002589754e-06, 3.0549999996409838e-06, 3.0269999999887887e-06, 3.0410000002589754e-06, 3.0560000006119026e-06, 3.0279999991833506e-06, 3.0410000002589754e-06,...</msg>
<status status="PASS" starttime="20201029 09:34:16.302" endtime="20201029 09:34:16.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.309" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:16.308" endtime="20201029 09:34:16.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.312" level="INFO">VALUE: [3.055999999723724e-06, 3.0410000002589754e-06, 3.0549999996409838e-06, 3.0269999999887887e-06, 3.0410000002589754e-06, 3.0560000006119026e-06, 3.0279999991833506e-06, 3.0410000002589754e-06, 3.0560000006119026e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.055999999723724e-06, 3.040999999370797e-06, 3.028000000071529e-06, 3.069999999993911e-06, 3.0830000001813573e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.0410000002589754e-06, 3.028000000071529e-06, 3.0269999999887887e-06, 2.9999999995311555e-06, 3.0410000002589754e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.0410000002589754e-06, 3.0269999999887887e-06, 3.0279999991833506e-06, 3.028000000071529e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.040999999370797e-06, 3.028000000071529e-06, 3.0549999996409838e-06, 3.0549999996409838e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.0410000002589754e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.0840000002640977e-06, 3.0419999994535374e-06, 3.0419999994535374e-06, 3.0549999996409838e-06, 2.9719999998789604e-06, 3.042000000341716e-06, 3.055000000529162e-06, 3.0419999994535374e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.040999999370797e-06, 2.986000000149147e-06, 3.042000000341716e-06, 3.040999999370797e-06, 3.028000000071529e-06, 3.0410000002589754e-06, 3.042000000341716e-06]</msg>
<status status="PASS" starttime="20201029 09:34:16.310" endtime="20201029 09:34:16.312"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.306" endtime="20201029 09:34:16.313"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.931" endtime="20201029 09:34:16.313"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:15.930" endtime="20201029 09:34:16.313"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.324" endtime="20201029 09:34:16.337"></status>
</kw>
<msg timestamp="20201029 09:34:16.338" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:16.321" endtime="20201029 09:34:16.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.341" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:16.339" endtime="20201029 09:34:16.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.342" endtime="20201029 09:34:16.346"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.318" endtime="20201029 09:34:16.346"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.316" endtime="20201029 09:34:16.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.356" endtime="20201029 09:34:16.685"></status>
</kw>
<msg timestamp="20201029 09:34:16.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.592726111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.592729083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:16.355" endtime="20201029 09:34:16.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.592726111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.592729083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:16.690" endtime="20201029 09:34:16.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.700" endtime="20201029 09:34:16.702"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.350" endtime="20201029 09:34:16.702"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.348" endtime="20201029 09:34:16.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:16.707" level="INFO">${RESULT} = [{'diff': 2.9719999998789604e-06}, {'diff': 3.042000000341716e-06}, {'diff': 3.055000000529162e-06}, {'diff': 3.0419999994535374e-06}, {'diff': 3.028000000071529e-06}, {'diff': 3.042000000341716e-06},...</msg>
<status status="PASS" starttime="20201029 09:34:16.704" endtime="20201029 09:34:16.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:16.712" level="INFO">${OVERHEAD} = {'diff': [2.9719999998789604e-06, 3.042000000341716e-06, 3.055000000529162e-06, 3.0419999994535374e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.040999999370797e-06, 2.98...</msg>
<status status="PASS" starttime="20201029 09:34:16.708" endtime="20201029 09:34:16.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.717" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:16.716" endtime="20201029 09:34:16.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.719" level="INFO">VALUE: [2.9719999998789604e-06, 3.042000000341716e-06, 3.055000000529162e-06, 3.0419999994535374e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.040999999370797e-06, 2.986000000149147e-06, 3.042000000341716e-06, 3.040999999370797e-06, 3.028000000071529e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.0419999994535374e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.055000000529162e-06, 3.0269999999887887e-06, 3.0419999994535374e-06, 3.055999999723724e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.0139999998013423e-06, 3.0269999999887887e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.0830000001813573e-06, 3.0410000002589754e-06, 3.040999999370797e-06, 3.028000000071529e-06, 3.0419999994535374e-06, 3.040999999370797e-06, 3.055000000529162e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.1109999998335525e-06, 3.028000000071529e-06, 3.069999999993911e-06, 3.0139999998013423e-06, 3.028000000071529e-06, 3.055000000529162e-06, 3.0689999999111706e-06, 3.097000000451544e-06, 3.0830000001813573e-06, 3.0140000006895207e-06, 3.055000000529162e-06, 3.028000000071529e-06, 3.0410000002589754e-06, 3.0689999999111706e-06, 2.986000000149147e-06, 3.042000000341716e-06, 3.0839999993759193e-06, 3.040999999370797e-06]</msg>
<status status="PASS" starttime="20201029 09:34:16.718" endtime="20201029 09:34:16.720"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.713" endtime="20201029 09:34:16.720"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.315" endtime="20201029 09:34:16.720"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.314" endtime="20201029 09:34:16.721"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.728" endtime="20201029 09:34:16.740"></status>
</kw>
<msg timestamp="20201029 09:34:16.740" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:16.727" endtime="20201029 09:34:16.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:16.743" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:16.742" endtime="20201029 09:34:16.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.744" endtime="20201029 09:34:16.746"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.724" endtime="20201029 09:34:16.746"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.723" endtime="20201029 09:34:16.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:16.753" endtime="20201029 09:34:17.048"></status>
</kw>
<msg timestamp="20201029 09:34:17.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.969003639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.969006667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:16.751" endtime="20201029 09:34:17.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.969003639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.969006667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:17.053" endtime="20201029 09:34:17.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.064" endtime="20201029 09:34:17.065"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.749" endtime="20201029 09:34:17.066"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.747" endtime="20201029 09:34:17.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:17.071" level="INFO">${RESULT} = [{'diff': 3.028000000071529e-06}, {'diff': 3.055000000529162e-06}, {'diff': 3.0689999999111706e-06}, {'diff': 3.097000000451544e-06}, {'diff': 3.0830000001813573e-06}, {'diff': 3.0140000006895207e-06}...</msg>
<status status="PASS" starttime="20201029 09:34:17.067" endtime="20201029 09:34:17.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:17.076" level="INFO">${OVERHEAD} = {'diff': [3.028000000071529e-06, 3.055000000529162e-06, 3.0689999999111706e-06, 3.097000000451544e-06, 3.0830000001813573e-06, 3.0140000006895207e-06, 3.055000000529162e-06, 3.028000000071529e-06, 3.0...</msg>
<status status="PASS" starttime="20201029 09:34:17.072" endtime="20201029 09:34:17.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.080" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:17.079" endtime="20201029 09:34:17.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.083" level="INFO">VALUE: [3.028000000071529e-06, 3.055000000529162e-06, 3.0689999999111706e-06, 3.097000000451544e-06, 3.0830000001813573e-06, 3.0140000006895207e-06, 3.055000000529162e-06, 3.028000000071529e-06, 3.0410000002589754e-06, 3.0689999999111706e-06, 2.986000000149147e-06, 3.042000000341716e-06, 3.0839999993759193e-06, 3.040999999370797e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.0549999996409838e-06, 3.0549999996409838e-06, 3.042000000341716e-06, 3.000000000419334e-06, 3.042000000341716e-06, 2.9999999995311555e-06, 3.055999999723724e-06, 3.0419999994535374e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.0279999991833506e-06, 3.0269999999887887e-06, 3.042000000341716e-06, 3.055999999723724e-06, 3.055000000529162e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.0410000002589754e-06, 3.0549999996409838e-06, 3.0139999998013423e-06, 3.0410000002589754e-06, 3.0689999999111706e-06, 3.0419999994535374e-06, 3.040999999370797e-06, 3.055999999723724e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.000000000419334e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.055000000529162e-06, 3.0410000002589754e-06, 3.0269999999887887e-06, 3.069999999993911e-06, 2.9999999995311555e-06, 3.0419999994535374e-06, 3.0139999998013423e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.0549999996409838e-06, 3.0139999998013423e-06, 3.0830000001813573e-06]</msg>
<status status="PASS" starttime="20201029 09:34:17.081" endtime="20201029 09:34:17.083"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.077" endtime="20201029 09:34:17.084"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.721" endtime="20201029 09:34:17.084"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:16.721" endtime="20201029 09:34:17.084"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.092" endtime="20201029 09:34:17.105"></status>
</kw>
<msg timestamp="20201029 09:34:17.105" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:17.091" endtime="20201029 09:34:17.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.108" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:17.106" endtime="20201029 09:34:17.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.109" endtime="20201029 09:34:17.110"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.088" endtime="20201029 09:34:17.111"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.086" endtime="20201029 09:34:17.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.119" endtime="20201029 09:34:17.436"></status>
</kw>
<msg timestamp="20201029 09:34:17.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.363403347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.363406389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:17.116" endtime="20201029 09:34:17.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.363403347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.363406389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:17.443" endtime="20201029 09:34:17.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.457" endtime="20201029 09:34:17.459"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.114" endtime="20201029 09:34:17.460"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.112" endtime="20201029 09:34:17.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:17.465" level="INFO">${RESULT} = [{'diff': 3.0419999994535374e-06}, {'diff': 3.0410000002589754e-06}, {'diff': 3.055000000529162e-06}, {'diff': 3.0410000002589754e-06}, {'diff': 3.0269999999887887e-06}, {'diff': 3.069999999993911e-06...</msg>
<status status="PASS" starttime="20201029 09:34:17.461" endtime="20201029 09:34:17.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:17.470" level="INFO">${OVERHEAD} = {'diff': [3.0419999994535374e-06, 3.0410000002589754e-06, 3.055000000529162e-06, 3.0410000002589754e-06, 3.0269999999887887e-06, 3.069999999993911e-06, 2.9999999995311555e-06, 3.0419999994535374e-06, ...</msg>
<status status="PASS" starttime="20201029 09:34:17.466" endtime="20201029 09:34:17.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.475" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:17.474" endtime="20201029 09:34:17.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.478" level="INFO">VALUE: [3.0419999994535374e-06, 3.0410000002589754e-06, 3.055000000529162e-06, 3.0410000002589754e-06, 3.0269999999887887e-06, 3.069999999993911e-06, 2.9999999995311555e-06, 3.0419999994535374e-06, 3.0139999998013423e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.0549999996409838e-06, 3.0139999998013423e-06, 3.0830000001813573e-06, 3.0410000002589754e-06, 3.0269999999887887e-06, 3.097000000451544e-06, 2.9999999995311555e-06, 2.9859999992609687e-06, 2.9590000005796924e-06, 3.0560000006119026e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.0419999994535374e-06, 3.040999999370797e-06, 3.069999999993911e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.055000000529162e-06, 3.1250000001037392e-06, 3.040999999370797e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.0410000002589754e-06, 3.055999999723724e-06, 3.0269999999887887e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.055000000529162e-06, 3.042000000341716e-06, 3.000000000419334e-06, 3.0410000002589754e-06, 2.9719999998789604e-06, 3.0419999994535374e-06, 3.097000000451544e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.055999999723724e-06, 3.040999999370797e-06, 3.042000000341716e-06, 3.0279999991833506e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.0139999998013423e-06, 2.9579999996087736e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.055999999723724e-06, 3.0410000002589754e-06, 3.028000000071529e-06]</msg>
<status status="PASS" starttime="20201029 09:34:17.476" endtime="20201029 09:34:17.479"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.471" endtime="20201029 09:34:17.479"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.085" endtime="20201029 09:34:17.480"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.085" endtime="20201029 09:34:17.480"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.489" endtime="20201029 09:34:17.502"></status>
</kw>
<msg timestamp="20201029 09:34:17.502" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:17.487" endtime="20201029 09:34:17.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.505" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:17.503" endtime="20201029 09:34:17.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.506" endtime="20201029 09:34:17.507"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.484" endtime="20201029 09:34:17.508"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.482" endtime="20201029 09:34:17.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.515" endtime="20201029 09:34:17.826"></status>
</kw>
<msg timestamp="20201029 09:34:17.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.717957222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.717960278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:17.514" endtime="20201029 09:34:17.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.717957222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.717960278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:17.831" endtime="20201029 09:34:17.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.841" endtime="20201029 09:34:17.843"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.511" endtime="20201029 09:34:17.844"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.509" endtime="20201029 09:34:17.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:17.849" level="INFO">${RESULT} = [{'diff': 3.055999999723724e-06}, {'diff': 3.040999999370797e-06}, {'diff': 3.042000000341716e-06}, {'diff': 3.0279999991833506e-06}, {'diff': 3.028000000071529e-06}, {'diff': 3.042000000341716e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:34:17.845" endtime="20201029 09:34:17.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:17.854" level="INFO">${OVERHEAD} = {'diff': [3.055999999723724e-06, 3.040999999370797e-06, 3.042000000341716e-06, 3.0279999991833506e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.0139999998013423e-06, 2.95...</msg>
<status status="PASS" starttime="20201029 09:34:17.850" endtime="20201029 09:34:17.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.859" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:17.858" endtime="20201029 09:34:17.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.861" level="INFO">VALUE: [3.055999999723724e-06, 3.040999999370797e-06, 3.042000000341716e-06, 3.0279999991833506e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.0139999998013423e-06, 2.9579999996087736e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.055999999723724e-06, 3.0410000002589754e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.0549999996409838e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.0419999994535374e-06, 3.055999999723724e-06, 3.0419999994535374e-06, 3.040999999370797e-06, 3.042000000341716e-06, 3.1109999998335525e-06, 3.0830000001813573e-06, 3.055999999723724e-06, 3.055000000529162e-06, 3.0410000002589754e-06, 3.028000000071529e-06, 3.0139999998013423e-06, 3.0419999994535374e-06, 3.040999999370797e-06, 3.028000000071529e-06, 3.0410000002589754e-06, 3.055000000529162e-06, 3.0419999994535374e-06, 3.1109999998335525e-06, 3.055999999723724e-06, 3.055000000529162e-06, 3.069999999993911e-06, 3.0419999994535374e-06, 3.040999999370797e-06, 3.0549999996409838e-06, 3.0560000006119026e-06, 3.028000000071529e-06, 3.0419999994535374e-06, 3.0560000006119026e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.0830000001813573e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.040999999370797e-06, 3.028000000071529e-06, 3.097000000451544e-06, 3.042000000341716e-06, 3.0279999991833506e-06, 3.0410000002589754e-06, 3.0560000006119026e-06, 3.0269999999887887e-06, 3.028000000071529e-06, 3.0269999999887887e-06]</msg>
<status status="PASS" starttime="20201029 09:34:17.860" endtime="20201029 09:34:17.862"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.855" endtime="20201029 09:34:17.862"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.480" endtime="20201029 09:34:17.863"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.480" endtime="20201029 09:34:17.863"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.871" endtime="20201029 09:34:17.884"></status>
</kw>
<msg timestamp="20201029 09:34:17.884" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:17.870" endtime="20201029 09:34:17.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:17.887" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:17.886" endtime="20201029 09:34:17.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.888" endtime="20201029 09:34:17.890"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.867" endtime="20201029 09:34:17.890"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.865" endtime="20201029 09:34:17.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:17.898" endtime="20201029 09:34:18.231"></status>
</kw>
<msg timestamp="20201029 09:34:18.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.103846903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.103849944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:17.896" endtime="20201029 09:34:18.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.103846903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.103849944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:18.236" endtime="20201029 09:34:18.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.246" endtime="20201029 09:34:18.247"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.893" endtime="20201029 09:34:18.248"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.891" endtime="20201029 09:34:18.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:18.254" level="INFO">${RESULT} = [{'diff': 3.0410000002589754e-06}, {'diff': 3.0830000001813573e-06}, {'diff': 3.0419999994535374e-06}, {'diff': 3.042000000341716e-06}, {'diff': 3.040999999370797e-06}, {'diff': 3.028000000071529e-06}...</msg>
<status status="PASS" starttime="20201029 09:34:18.249" endtime="20201029 09:34:18.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:18.259" level="INFO">${OVERHEAD} = {'diff': [3.0410000002589754e-06, 3.0830000001813573e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.040999999370797e-06, 3.028000000071529e-06, 3.097000000451544e-06, 3.042000000341716e-06, 3.0...</msg>
<status status="PASS" starttime="20201029 09:34:18.255" endtime="20201029 09:34:18.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.263" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:18.262" endtime="20201029 09:34:18.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.266" level="INFO">VALUE: [3.0410000002589754e-06, 3.0830000001813573e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.040999999370797e-06, 3.028000000071529e-06, 3.097000000451544e-06, 3.042000000341716e-06, 3.0279999991833506e-06, 3.0410000002589754e-06, 3.0560000006119026e-06, 3.0269999999887887e-06, 3.028000000071529e-06, 3.0269999999887887e-06, 3.097000000451544e-06, 3.0410000002589754e-06, 3.0140000006895207e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.055999999723724e-06, 3.028000000071529e-06, 3.0269999999887887e-06, 3.042000000341716e-06, 3.0549999996409838e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.055000000529162e-06, 3.055000000529162e-06, 3.042000000341716e-06, 2.958000000496952e-06, 3.0419999994535374e-06, 3.0969999995633657e-06, 3.028000000071529e-06, 3.055000000529162e-06, 2.9719999998789604e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.028000000071529e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.040999999370797e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.0549999996409838e-06, 3.097000000451544e-06, 3.042000000341716e-06, 3.0689999999111706e-06, 3.042000000341716e-06, 3.0140000006895207e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.0549999996409838e-06, 3.040999999370797e-06, 3.0689999999111706e-06, 3.0969999995633657e-06, 3.042000000341716e-06]</msg>
<status status="PASS" starttime="20201029 09:34:18.264" endtime="20201029 09:34:18.266"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.260" endtime="20201029 09:34:18.267"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.864" endtime="20201029 09:34:18.267"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:17.863" endtime="20201029 09:34:18.267"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.280" endtime="20201029 09:34:18.292"></status>
</kw>
<msg timestamp="20201029 09:34:18.293" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:18.279" endtime="20201029 09:34:18.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.295" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:18.294" endtime="20201029 09:34:18.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.296" endtime="20201029 09:34:18.298"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.276" endtime="20201029 09:34:18.299"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.269" endtime="20201029 09:34:18.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.307" endtime="20201029 09:34:18.628"></status>
</kw>
<msg timestamp="20201029 09:34:18.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.475823764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.475826806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:18.305" endtime="20201029 09:34:18.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.475823764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.475826806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:18.633" endtime="20201029 09:34:18.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.643" endtime="20201029 09:34:18.645"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.301" endtime="20201029 09:34:18.645"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.300" endtime="20201029 09:34:18.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:18.650" level="INFO">${RESULT} = [{'diff': 3.0419999994535374e-06}, {'diff': 3.0549999996409838e-06}, {'diff': 3.097000000451544e-06}, {'diff': 3.042000000341716e-06}, {'diff': 3.0689999999111706e-06}, {'diff': 3.042000000341716e-06}...</msg>
<status status="PASS" starttime="20201029 09:34:18.647" endtime="20201029 09:34:18.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:18.655" level="INFO">${OVERHEAD} = {'diff': [3.0419999994535374e-06, 3.0549999996409838e-06, 3.097000000451544e-06, 3.042000000341716e-06, 3.0689999999111706e-06, 3.042000000341716e-06, 3.0140000006895207e-06, 3.0410000002589754e-06, 3...</msg>
<status status="PASS" starttime="20201029 09:34:18.651" endtime="20201029 09:34:18.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.660" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:18.659" endtime="20201029 09:34:18.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.663" level="INFO">VALUE: [3.0419999994535374e-06, 3.0549999996409838e-06, 3.097000000451544e-06, 3.042000000341716e-06, 3.0689999999111706e-06, 3.042000000341716e-06, 3.0140000006895207e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.0549999996409838e-06, 3.040999999370797e-06, 3.0689999999111706e-06, 3.0969999995633657e-06, 3.042000000341716e-06, 3.0560000006119026e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 2.986000000149147e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.028000000071529e-06, 3.0419999994535374e-06, 3.0269999999887887e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.027000000876967e-06, 3.040999999370797e-06, 3.097000000451544e-06, 3.042000000341716e-06, 3.040999999370797e-06, 3.055000000529162e-06, 3.028000000071529e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.040999999370797e-06, 3.0419999994535374e-06, 3.0969999995633657e-06, 3.0419999994535374e-06, 3.042000000341716e-06, 3.0419999994535374e-06, 3.0549999996409838e-06, 3.0549999996409838e-06, 3.0269999999887887e-06, 2.9999999995311555e-06, 3.0269999999887887e-06, 3.040999999370797e-06, 3.028000000071529e-06, 3.0269999999887887e-06, 3.0269999999887887e-06, 3.028000000071529e-06, 3.0269999999887887e-06, 3.055000000529162e-06, 3.0410000002589754e-06, 3.040999999370797e-06, 3.028000000071529e-06, 3.040999999370797e-06, 3.0419999994535374e-06, 3.097000000451544e-06, 3.0560000006119026e-06, 3.042000000341716e-06, 3.0549999996409838e-06]</msg>
<status status="PASS" starttime="20201029 09:34:18.661" endtime="20201029 09:34:18.663"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.656" endtime="20201029 09:34:18.664"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.268" endtime="20201029 09:34:18.664"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.268" endtime="20201029 09:34:18.665"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.673" endtime="20201029 09:34:18.685"></status>
</kw>
<msg timestamp="20201029 09:34:18.686" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:18.672" endtime="20201029 09:34:18.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:18.688" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:18.687" endtime="20201029 09:34:18.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.689" endtime="20201029 09:34:18.691"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.669" endtime="20201029 09:34:18.692"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.667" endtime="20201029 09:34:18.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:18.699" endtime="20201029 09:34:19.010"></status>
</kw>
<msg timestamp="20201029 09:34:19.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.873696167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.873699194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:18.697" endtime="20201029 09:34:19.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.873696167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.873699194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:19.015" endtime="20201029 09:34:19.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.025" endtime="20201029 09:34:19.027"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.695" endtime="20201029 09:34:19.028"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.693" endtime="20201029 09:34:19.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:19.032" level="INFO">${RESULT} = [{'diff': 3.0269999999887887e-06}, {'diff': 3.0269999999887887e-06}, {'diff': 3.028000000071529e-06}, {'diff': 3.0269999999887887e-06}, {'diff': 3.055000000529162e-06}, {'diff': 3.0410000002589754e-06...</msg>
<status status="PASS" starttime="20201029 09:34:19.029" endtime="20201029 09:34:19.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:19.038" level="INFO">${OVERHEAD} = {'diff': [3.0269999999887887e-06, 3.0269999999887887e-06, 3.028000000071529e-06, 3.0269999999887887e-06, 3.055000000529162e-06, 3.0410000002589754e-06, 3.040999999370797e-06, 3.028000000071529e-06, 3....</msg>
<status status="PASS" starttime="20201029 09:34:19.033" endtime="20201029 09:34:19.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.042" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:34:19.041" endtime="20201029 09:34:19.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.045" level="INFO">VALUE: [3.0269999999887887e-06, 3.0269999999887887e-06, 3.028000000071529e-06, 3.0269999999887887e-06, 3.055000000529162e-06, 3.0410000002589754e-06, 3.040999999370797e-06, 3.028000000071529e-06, 3.040999999370797e-06, 3.0419999994535374e-06, 3.097000000451544e-06, 3.0560000006119026e-06, 3.042000000341716e-06, 3.0549999996409838e-06, 3.0410000002589754e-06, 3.0410000002589754e-06, 3.0410000002589754e-06, 3.055999999723724e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.0839999993759193e-06, 3.0969999995633657e-06, 3.0689999999111706e-06, 3.042000000341716e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.040999999370797e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.082999999293179e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.028000000071529e-06, 3.0269999999887887e-06, 3.040999999370797e-06, 3.0269999999887887e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.0419999994535374e-06, 3.097000000451544e-06, 3.040999999370797e-06, 3.042000000341716e-06, 3.000000000419334e-06, 3.069999999993911e-06, 3.0410000002589754e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.0419999994535374e-06, 3.040999999370797e-06, 3.042000000341716e-06, 3.0689999999111706e-06, 3.0410000002589754e-06, 3.028000000071529e-06, 3.0419999994535374e-06, 3.0410000002589754e-06, 3.0269999999887887e-06, 3.0410000002589754e-06, 3.0419999994535374e-06, 3.028000000071529e-06, 3.0410000002589754e-06]</msg>
<status status="PASS" starttime="20201029 09:34:19.044" endtime="20201029 09:34:19.046"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.039" endtime="20201029 09:34:19.047"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.666" endtime="20201029 09:34:19.047"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:18.665" endtime="20201029 09:34:19.047"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:11.295" endtime="20201029 09:34:19.047"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:11.208" endtime="20201029 09:34:19.048" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:19.055" endtime="20201029 09:34:19.074"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.053" endtime="20201029 09:34:19.075"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.088" endtime="20201029 09:34:19.104"></status>
</kw>
<msg timestamp="20201029 09:34:19.105" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:19.087" endtime="20201029 09:34:19.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.108" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:19.106" endtime="20201029 09:34:19.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.111" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:19.109" endtime="20201029 09:34:19.111"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:19.084" endtime="20201029 09:34:19.112"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:19.082" endtime="20201029 09:34:19.112"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.080" endtime="20201029 09:34:19.113"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:19.117" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:19.116" endtime="20201029 09:34:19.117"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.114" endtime="20201029 09:34:19.117"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.079" endtime="20201029 09:34:19.117"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.079" endtime="20201029 09:34:19.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.118" endtime="20201029 09:34:19.120"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.077" endtime="20201029 09:34:19.120"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.076" endtime="20201029 09:34:19.121"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.052" endtime="20201029 09:34:19.121"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.130" endtime="20201029 09:34:19.149"></status>
</kw>
<msg timestamp="20201029 09:34:19.150" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:19.128" endtime="20201029 09:34:19.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.152" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:19.151" endtime="20201029 09:34:19.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.153" endtime="20201029 09:34:19.155"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.125" endtime="20201029 09:34:19.156"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.123" endtime="20201029 09:34:19.157"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.159" endtime="20201029 09:34:19.160"></status>
</kw>
<msg timestamp="20201029 09:34:19.161" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:34:19.157" endtime="20201029 09:34:19.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.165" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:19.164" endtime="20201029 09:34:19.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.167" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:19.166" endtime="20201029 09:34:19.168"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.162" endtime="20201029 09:34:19.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.172" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:19.171" endtime="20201029 09:34:19.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.174" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:19.173" endtime="20201029 09:34:19.175"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.169" endtime="20201029 09:34:19.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.182" endtime="20201029 09:34:19.470"></status>
</kw>
<msg timestamp="20201029 09:34:19.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067087903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067097056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:19.180" endtime="20201029 09:34:19.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067087903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067097056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:19.474" endtime="20201029 09:34:19.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.483" endtime="20201029 09:34:19.484"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.178" endtime="20201029 09:34:19.485"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.176" endtime="20201029 09:34:19.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:19.489" level="INFO">${RESULT} = [{'diff': 9.152999999997857e-06}, {'diff': 1.0971999999997983e-05}, {'diff': 1.0930000000006213e-05}, {'diff': 1.0958999999990948e-05}, {'diff': 1.0943999999998844e-05}, {'diff': 1.0958000000005352e-0...</msg>
<status status="PASS" starttime="20201029 09:34:19.486" endtime="20201029 09:34:19.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:19.494" level="INFO">${OVERHEAD} = {'diff': [9.152999999997857e-06, 1.0971999999997983e-05, 1.0930000000006213e-05, 1.0958999999990948e-05, 1.0943999999998844e-05, 1.0958000000005352e-05, 1.0971999999997983e-05, 1.0943999999998844e-05,...</msg>
<status status="PASS" starttime="20201029 09:34:19.490" endtime="20201029 09:34:19.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.499" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 09:34:19.498" endtime="20201029 09:34:19.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.502" level="INFO">VALUE: [9.152999999997857e-06, 1.0971999999997983e-05, 1.0930000000006213e-05, 1.0958999999990948e-05, 1.0943999999998844e-05, 1.0958000000005352e-05, 1.0971999999997983e-05, 1.0943999999998844e-05, 1.0971999999997983e-05, 1.0971999999997983e-05, 1.0958000000005352e-05, 1.0959000000004826e-05, 1.0999999999997123e-05, 1.0958000000005352e-05, 1.0915999999999704e-05, 1.0930999999991808e-05, 1.0957999999991475e-05, 1.0959000000004826e-05, 1.0971999999997983e-05, 1.0944999999998317e-05, 1.0915999999999704e-05, 1.0958000000005352e-05, 1.0958999999990948e-05, 1.0958000000005352e-05, 1.0915999999999704e-05, 1.0903000000006546e-05, 1.0999999999997123e-05, 1.0971999999997983e-05, 1.0972000000011861e-05, 1.0958000000005352e-05, 1.0958999999990948e-05, 1.0959000000004826e-05, 1.0959000000004826e-05, 1.0957999999991475e-05, 1.0930999999991808e-05, 1.0971999999997983e-05, 1.0957999999991475e-05, 1.0986000000004492e-05, 1.0971999999997983e-05, 1.0958000000005352e-05, 1.102800000001014e-05, 1.0959000000004826e-05, 1.0944999999998317e-05, 1.0972000000011861e-05, 1.0959000000004826e-05, 1.0957999999991475e-05, 1.0930000000006213e-05, 1.0958999999990948e-05, 1.0889000000000038e-05, 1.0958999999990948e-05]</msg>
<status status="PASS" starttime="20201029 09:34:19.501" endtime="20201029 09:34:19.503"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.495" endtime="20201029 09:34:19.504"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.122" endtime="20201029 09:34:19.504"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:19.049" endtime="20201029 09:34:19.505" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:19.512" endtime="20201029 09:34:19.532"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.511" endtime="20201029 09:34:19.532"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.547" endtime="20201029 09:34:19.561"></status>
</kw>
<msg timestamp="20201029 09:34:19.562" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:19.545" endtime="20201029 09:34:19.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.564" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:19.563" endtime="20201029 09:34:19.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.567" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:19.565" endtime="20201029 09:34:19.568"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:19.542" endtime="20201029 09:34:19.568"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:19.540" endtime="20201029 09:34:19.569"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.538" endtime="20201029 09:34:19.569"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:19.573" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:19.572" endtime="20201029 09:34:19.574"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.570" endtime="20201029 09:34:19.574"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.537" endtime="20201029 09:34:19.574"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.536" endtime="20201029 09:34:19.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.575" endtime="20201029 09:34:19.577"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.535" endtime="20201029 09:34:19.577"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.533" endtime="20201029 09:34:19.577"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.509" endtime="20201029 09:34:19.578"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.587" endtime="20201029 09:34:19.658"></status>
</kw>
<msg timestamp="20201029 09:34:19.658" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:19.585" endtime="20201029 09:34:19.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.661" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:19.659" endtime="20201029 09:34:19.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.662" endtime="20201029 09:34:19.664"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.582" endtime="20201029 09:34:19.664"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.580" endtime="20201029 09:34:19.665"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.667" endtime="20201029 09:34:19.669"></status>
</kw>
<msg timestamp="20201029 09:34:19.669" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:34:19.666" endtime="20201029 09:34:19.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.674" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:19.673" endtime="20201029 09:34:19.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.676" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:19.675" endtime="20201029 09:34:19.676"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.670" endtime="20201029 09:34:19.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.682" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:19.680" endtime="20201029 09:34:19.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.684" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:19.683" endtime="20201029 09:34:19.685"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.677" endtime="20201029 09:34:19.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.692" endtime="20201029 09:34:19.982"></status>
</kw>
<msg timestamp="20201029 09:34:19.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067683625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067705139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:19.690" endtime="20201029 09:34:19.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:19.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067683625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067705139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:19.986" endtime="20201029 09:34:19.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:19.995" endtime="20201029 09:34:19.996"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.688" endtime="20201029 09:34:19.997"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.686" endtime="20201029 09:34:19.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:20.001" level="INFO">${RESULT} = [{'diff': 2.1514000000000255e-05}, {'diff': 3.402799999999151e-05}, {'diff': 3.372199999999992e-05}, {'diff': 3.372199999999992e-05}, {'diff': 3.370799999999341e-05}, {'diff': 3.374999999999906e-05}, ...</msg>
<status status="PASS" starttime="20201029 09:34:19.998" endtime="20201029 09:34:20.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:20.006" level="INFO">${OVERHEAD} = {'diff': [2.1514000000000255e-05, 3.402799999999151e-05, 3.372199999999992e-05, 3.372199999999992e-05, 3.370799999999341e-05, 3.374999999999906e-05, 3.374999999999906e-05, 3.374999999999906e-05, 3.372...</msg>
<status status="PASS" starttime="20201029 09:34:20.003" endtime="20201029 09:34:20.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.011" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 09:34:20.010" endtime="20201029 09:34:20.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.013" level="INFO">VALUE: [2.1514000000000255e-05, 3.402799999999151e-05, 3.372199999999992e-05, 3.372199999999992e-05, 3.370799999999341e-05, 3.374999999999906e-05, 3.374999999999906e-05, 3.374999999999906e-05, 3.372199999999992e-05, 3.372199999999992e-05, 3.372199999999992e-05, 3.369400000000078e-05, 3.370900000000676e-05, 3.372199999999992e-05, 3.372300000001327e-05, 3.372199999999992e-05, 3.372199999999992e-05, 3.373600000000643e-05, 3.373599999999255e-05, 3.374999999999906e-05, 3.372199999999992e-05, 3.372199999999992e-05, 3.373600000000643e-05, 3.372299999999939e-05, 3.369400000000078e-05, 3.373599999999255e-05, 3.372199999999992e-05, 3.372199999999992e-05, 3.3750000000012936e-05, 3.372199999999992e-05, 3.373699999999202e-05, 3.373600000000643e-05, 3.372299999999939e-05, 3.370800000000729e-05, 3.3776999999998725e-05, 3.374999999999906e-05, 3.372199999999992e-05, 3.370800000000729e-05, 3.373599999999255e-05, 3.3750000000012936e-05, 3.372199999999992e-05, 3.374999999999906e-05, 3.372199999999992e-05, 3.373599999999255e-05, 3.373600000000643e-05, 3.372199999999992e-05, 3.373600000000643e-05, 3.37370000000059e-05, 3.372199999999992e-05, 3.3750000000012936e-05]</msg>
<status status="PASS" starttime="20201029 09:34:20.012" endtime="20201029 09:34:20.014"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.007" endtime="20201029 09:34:20.015"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:19.578" endtime="20201029 09:34:20.016"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:19.507" endtime="20201029 09:34:20.016" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:20.023" endtime="20201029 09:34:20.043"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.022" endtime="20201029 09:34:20.043"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.057" endtime="20201029 09:34:20.071"></status>
</kw>
<msg timestamp="20201029 09:34:20.071" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:20.055" endtime="20201029 09:34:20.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.074" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:20.073" endtime="20201029 09:34:20.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.077" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:20.075" endtime="20201029 09:34:20.078"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:20.053" endtime="20201029 09:34:20.078"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:20.050" endtime="20201029 09:34:20.079"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.049" endtime="20201029 09:34:20.079"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:20.083" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:20.082" endtime="20201029 09:34:20.083"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.080" endtime="20201029 09:34:20.084"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.048" endtime="20201029 09:34:20.084"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.047" endtime="20201029 09:34:20.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.085" endtime="20201029 09:34:20.086"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.046" endtime="20201029 09:34:20.087"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.044" endtime="20201029 09:34:20.087"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.021" endtime="20201029 09:34:20.087"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.097" endtime="20201029 09:34:20.286"></status>
</kw>
<msg timestamp="20201029 09:34:20.287" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:20.095" endtime="20201029 09:34:20.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.290" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:20.288" endtime="20201029 09:34:20.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.291" endtime="20201029 09:34:20.292"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.092" endtime="20201029 09:34:20.293"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.090" endtime="20201029 09:34:20.293"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.296" endtime="20201029 09:34:20.298"></status>
</kw>
<msg timestamp="20201029 09:34:20.298" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:34:20.294" endtime="20201029 09:34:20.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.303" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:20.302" endtime="20201029 09:34:20.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.305" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:20.304" endtime="20201029 09:34:20.305"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.299" endtime="20201029 09:34:20.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.310" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:20.309" endtime="20201029 09:34:20.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.312" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:20.311" endtime="20201029 09:34:20.312"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.306" endtime="20201029 09:34:20.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.319" endtime="20201029 09:34:20.612"></status>
</kw>
<msg timestamp="20201029 09:34:20.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068070042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068107153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:20.318" endtime="20201029 09:34:20.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068070042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068107153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:20.616" endtime="20201029 09:34:20.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.624" endtime="20201029 09:34:20.626"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.315" endtime="20201029 09:34:20.626"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.313" endtime="20201029 09:34:20.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:20.631" level="INFO">${RESULT} = [{'diff': 3.711100000000633e-05}, {'diff': 6.034700000000226e-05}, {'diff': 6.036099999999489e-05}, {'diff': 6.029100000000398e-05}, {'diff': 6.036099999999489e-05}, {'diff': 6.03750000000014e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:20.628" endtime="20201029 09:34:20.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:20.637" level="INFO">${OVERHEAD} = {'diff': [3.711100000000633e-05, 6.034700000000226e-05, 6.036099999999489e-05, 6.029100000000398e-05, 6.036099999999489e-05, 6.03750000000014e-05, 6.038900000000791e-05, 6.0347999999987856e-05, 6.0360...</msg>
<status status="PASS" starttime="20201029 09:34:20.632" endtime="20201029 09:34:20.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.644" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 09:34:20.643" endtime="20201029 09:34:20.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.647" level="INFO">VALUE: [3.711100000000633e-05, 6.034700000000226e-05, 6.036099999999489e-05, 6.029100000000398e-05, 6.036099999999489e-05, 6.03750000000014e-05, 6.038900000000791e-05, 6.0347999999987856e-05, 6.036099999999489e-05, 6.034699999998838e-05, 6.036099999999489e-05, 6.036100000000877e-05, 6.036100000000877e-05, 6.034699999998838e-05, 6.033299999999575e-05, 6.038900000000791e-05, 6.036099999999489e-05, 6.0277999999996945e-05, 6.034699999998838e-05, 6.03750000000014e-05, 6.034800000001561e-05, 6.03750000000014e-05, 6.034699999998838e-05, 6.036100000000877e-05, 6.036100000000877e-05, 6.0430000000000206e-05, 6.030600000000996e-05, 6.034699999998838e-05, 6.036100000000877e-05, 6.033299999999575e-05, 6.0347999999987856e-05, 6.036100000000877e-05, 6.0347999999987856e-05, 6.036099999998101e-05, 6.036100000000877e-05, 6.0347999999987856e-05, 6.03750000000014e-05, 6.036099999998101e-05, 6.036100000000877e-05, 6.036099999998101e-05, 6.036100000000877e-05, 6.034699999998838e-05, 6.036100000000877e-05, 6.034699999998838e-05, 6.036100000000877e-05, 6.03750000000014e-05, 6.036099999998101e-05, 6.034700000001614e-05, 6.034699999998838e-05, 6.031900000000312e-05]</msg>
<status status="PASS" starttime="20201029 09:34:20.645" endtime="20201029 09:34:20.648"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.639" endtime="20201029 09:34:20.649"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.088" endtime="20201029 09:34:20.650"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:20.018" endtime="20201029 09:34:20.650" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:20.661" endtime="20201029 09:34:20.681"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.659" endtime="20201029 09:34:20.682"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.695" endtime="20201029 09:34:20.710"></status>
</kw>
<msg timestamp="20201029 09:34:20.710" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:20.694" endtime="20201029 09:34:20.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.713" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:20.711" endtime="20201029 09:34:20.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.716" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:20.714" endtime="20201029 09:34:20.716"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:20.691" endtime="20201029 09:34:20.717"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:20.689" endtime="20201029 09:34:20.718"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.687" endtime="20201029 09:34:20.718"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:20.722" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:20.721" endtime="20201029 09:34:20.722"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.719" endtime="20201029 09:34:20.723"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.686" endtime="20201029 09:34:20.724"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.686" endtime="20201029 09:34:20.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.725" endtime="20201029 09:34:20.726"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.684" endtime="20201029 09:34:20.727"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.683" endtime="20201029 09:34:20.727"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.656" endtime="20201029 09:34:20.728"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.736" endtime="20201029 09:34:20.757"></status>
</kw>
<msg timestamp="20201029 09:34:20.757" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:20.735" endtime="20201029 09:34:20.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.760" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:20.758" endtime="20201029 09:34:20.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.761" endtime="20201029 09:34:20.763"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.732" endtime="20201029 09:34:20.763"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.730" endtime="20201029 09:34:20.764"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.766" endtime="20201029 09:34:20.768"></status>
</kw>
<msg timestamp="20201029 09:34:20.769" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:34:20.765" endtime="20201029 09:34:20.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.773" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:20.772" endtime="20201029 09:34:20.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.775" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:20.774" endtime="20201029 09:34:20.775"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.769" endtime="20201029 09:34:20.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.780" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:20.779" endtime="20201029 09:34:20.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:20.782" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:20.781" endtime="20201029 09:34:20.782"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.776" endtime="20201029 09:34:20.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:20.790" endtime="20201029 09:34:21.101"></status>
</kw>
<msg timestamp="20201029 09:34:21.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067335375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067345292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:20.788" endtime="20201029 09:34:21.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067335375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067345292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:21.107" endtime="20201029 09:34:21.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.122" endtime="20201029 09:34:21.128"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.785" endtime="20201029 09:34:21.129"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.784" endtime="20201029 09:34:21.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:21.135" level="INFO">${RESULT} = [{'diff': 9.916999999998177e-06}, {'diff': 9.972999999996457e-06}, {'diff': 9.931000000004686e-06}, {'diff': 9.916999999998177e-06}, {'diff': 9.888999999999037e-06}, {'diff': 9.916999999998177e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:21.130" endtime="20201029 09:34:21.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:21.139" level="INFO">${OVERHEAD} = {'diff': [9.916999999998177e-06, 9.972999999996457e-06, 9.931000000004686e-06, 9.916999999998177e-06, 9.888999999999037e-06, 9.916999999998177e-06, 9.931000000004686e-06, 9.915999999998704e-06, 9.9310...</msg>
<status status="PASS" starttime="20201029 09:34:21.136" endtime="20201029 09:34:21.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.144" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 09:34:21.143" endtime="20201029 09:34:21.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.147" level="INFO">VALUE: [9.916999999998177e-06, 9.972999999996457e-06, 9.931000000004686e-06, 9.916999999998177e-06, 9.888999999999037e-06, 9.916999999998177e-06, 9.931000000004686e-06, 9.915999999998704e-06, 9.931000000004686e-06, 9.915999999998704e-06, 9.916999999998177e-06, 9.916999999998177e-06, 9.915999999998704e-06, 9.915999999998704e-06, 9.915999999998704e-06, 9.931000000004686e-06, 9.916999999998177e-06, 9.916999999998177e-06, 9.916999999998177e-06, 9.916999999998177e-06, 9.903000000005546e-06, 9.903000000005546e-06, 9.903000000005546e-06, 9.916999999998177e-06, 9.929999999991335e-06, 9.916999999998177e-06, 9.915999999998704e-06, 9.916999999998177e-06, 9.887999999999564e-06, 9.930999999990808e-06, 9.902999999991668e-06, 9.902999999991668e-06, 9.915999999998704e-06, 9.930999999990808e-06, 9.915999999998704e-06, 9.915999999998704e-06, 9.916999999998177e-06, 9.902000000006073e-06, 9.916999999998177e-06, 9.929999999991335e-06, 9.931000000004686e-06, 9.902999999991668e-06, 9.916999999998177e-06, 9.916999999998177e-06, 9.916999999998177e-06, 9.902999999991668e-06, 9.916999999998177e-06, 9.929999999991335e-06, 9.943999999997843e-06, 9.875000000006406e-06]</msg>
<status status="PASS" starttime="20201029 09:34:21.145" endtime="20201029 09:34:21.147"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.140" endtime="20201029 09:34:21.148"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:20.728" endtime="20201029 09:34:21.148"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:20.653" endtime="20201029 09:34:21.149" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:21.159" endtime="20201029 09:34:21.180"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.156" endtime="20201029 09:34:21.181"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.199" endtime="20201029 09:34:21.213"></status>
</kw>
<msg timestamp="20201029 09:34:21.214" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.197" endtime="20201029 09:34:21.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.216" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.215" endtime="20201029 09:34:21.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.219" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:21.217" endtime="20201029 09:34:21.220"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:21.193" endtime="20201029 09:34:21.220"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:21.190" endtime="20201029 09:34:21.221"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.188" endtime="20201029 09:34:21.221"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:21.225" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:21.224" endtime="20201029 09:34:21.226"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.222" endtime="20201029 09:34:21.226"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.187" endtime="20201029 09:34:21.226"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.186" endtime="20201029 09:34:21.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.227" endtime="20201029 09:34:21.228"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.184" endtime="20201029 09:34:21.229"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.182" endtime="20201029 09:34:21.229"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.155" endtime="20201029 09:34:21.230"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.238" endtime="20201029 09:34:21.311"></status>
</kw>
<msg timestamp="20201029 09:34:21.311" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.237" endtime="20201029 09:34:21.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.314" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.312" endtime="20201029 09:34:21.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.315" endtime="20201029 09:34:21.316"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.234" endtime="20201029 09:34:21.317"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.232" endtime="20201029 09:34:21.317"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.319" endtime="20201029 09:34:21.321"></status>
</kw>
<msg timestamp="20201029 09:34:21.322" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:34:21.318" endtime="20201029 09:34:21.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.326" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:21.325" endtime="20201029 09:34:21.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.328" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:21.327" endtime="20201029 09:34:21.329"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.323" endtime="20201029 09:34:21.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.333" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:21.332" endtime="20201029 09:34:21.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.335" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:21.334" endtime="20201029 09:34:21.336"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.330" endtime="20201029 09:34:21.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.344" endtime="20201029 09:34:21.662"></status>
</kw>
<msg timestamp="20201029 09:34:21.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071838542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071859514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:21.342" endtime="20201029 09:34:21.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071838542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071859514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:21.666" endtime="20201029 09:34:21.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.674" endtime="20201029 09:34:21.676"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.338" endtime="20201029 09:34:21.676"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.337" endtime="20201029 09:34:21.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:21.681" level="INFO">${RESULT} = [{'diff': 2.0971999999994106e-05}, {'diff': 2.0930000000002336e-05}, {'diff': 2.0945000000008318e-05}, {'diff': 2.0943999999994967e-05}, {'diff': 2.093100000000181e-05}, {'diff': 2.0930000000002336e-0...</msg>
<status status="PASS" starttime="20201029 09:34:21.677" endtime="20201029 09:34:21.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:21.685" level="INFO">${OVERHEAD} = {'diff': [2.0971999999994106e-05, 2.0930000000002336e-05, 2.0945000000008318e-05, 2.0943999999994967e-05, 2.093100000000181e-05, 2.0930000000002336e-05, 2.0986000000000615e-05, 2.0944000000008844e-05,...</msg>
<status status="PASS" starttime="20201029 09:34:21.682" endtime="20201029 09:34:21.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.690" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 09:34:21.689" endtime="20201029 09:34:21.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.693" level="INFO">VALUE: [2.0971999999994106e-05, 2.0930000000002336e-05, 2.0945000000008318e-05, 2.0943999999994967e-05, 2.093100000000181e-05, 2.0930000000002336e-05, 2.0986000000000615e-05, 2.0944000000008844e-05, 2.0944000000008844e-05, 2.093100000000181e-05, 2.094499999999444e-05, 2.093100000000181e-05, 2.0972000000007984e-05, 2.094499999999444e-05, 2.09169999999953e-05, 2.0943999999994967e-05, 2.0945000000008318e-05, 2.0945000000008318e-05, 2.09169999999953e-05, 2.094499999999444e-05, 2.0943999999994967e-05, 2.09169999999953e-05, 2.09169999999953e-05, 2.0943999999994967e-05, 2.0930000000002336e-05, 2.0958000000001475e-05, 2.0944000000008844e-05, 2.0930000000002336e-05, 2.0945000000008318e-05, 2.0986000000000615e-05, 2.0929999999988458e-05, 2.094499999999444e-05, 2.093100000000181e-05, 2.0930000000002336e-05, 2.095900000000095e-05, 2.095900000000095e-05, 2.0915999999995827e-05, 2.088899999999616e-05, 2.093100000000181e-05, 2.0945000000008318e-05, 2.0930000000002336e-05, 2.0944000000008844e-05, 2.093100000000181e-05, 2.0930000000002336e-05, 2.0943999999994967e-05, 2.0943999999994967e-05, 2.0915999999995827e-05, 2.0999999999993246e-05, 2.0915999999995827e-05, 2.0943999999994967e-05]</msg>
<status status="PASS" starttime="20201029 09:34:21.691" endtime="20201029 09:34:21.693"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.686" endtime="20201029 09:34:21.694"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.230" endtime="20201029 09:34:21.694"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:21.151" endtime="20201029 09:34:21.694" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:21.702" endtime="20201029 09:34:21.722"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.701" endtime="20201029 09:34:21.722"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.737" endtime="20201029 09:34:21.751"></status>
</kw>
<msg timestamp="20201029 09:34:21.751" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.735" endtime="20201029 09:34:21.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.754" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.752" endtime="20201029 09:34:21.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.757" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:21.755" endtime="20201029 09:34:21.757"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:21.732" endtime="20201029 09:34:21.758"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:21.730" endtime="20201029 09:34:21.758"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.729" endtime="20201029 09:34:21.759"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:21.763" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:21.762" endtime="20201029 09:34:21.763"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.759" endtime="20201029 09:34:21.763"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.728" endtime="20201029 09:34:21.763"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.727" endtime="20201029 09:34:21.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.764" endtime="20201029 09:34:21.766"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.726" endtime="20201029 09:34:21.766"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.723" endtime="20201029 09:34:21.767"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.699" endtime="20201029 09:34:21.767"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.776" endtime="20201029 09:34:21.966"></status>
</kw>
<msg timestamp="20201029 09:34:21.967" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.774" endtime="20201029 09:34:21.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.970" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:21.968" endtime="20201029 09:34:21.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.971" endtime="20201029 09:34:21.972"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.772" endtime="20201029 09:34:21.973"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.769" endtime="20201029 09:34:21.973"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:21.976" endtime="20201029 09:34:21.981"></status>
</kw>
<msg timestamp="20201029 09:34:21.981" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:34:21.974" endtime="20201029 09:34:21.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.986" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:34:21.985" endtime="20201029 09:34:21.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.988" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:34:21.987" endtime="20201029 09:34:21.989"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.983" endtime="20201029 09:34:21.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.993" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:34:21.992" endtime="20201029 09:34:21.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:21.995" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:34:21.994" endtime="20201029 09:34:21.996"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.990" endtime="20201029 09:34:21.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.003" endtime="20201029 09:34:22.297"></status>
</kw>
<msg timestamp="20201029 09:34:22.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068609042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068641417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:22.001" endtime="20201029 09:34:22.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068609042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068641417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:22.301" endtime="20201029 09:34:22.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.309" endtime="20201029 09:34:22.311"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.999" endtime="20201029 09:34:22.311"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.997" endtime="20201029 09:34:22.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:22.316" level="INFO">${RESULT} = [{'diff': 3.237500000000115e-05}, {'diff': 3.243099999999943e-05}, {'diff': 3.2388999999993784e-05}, {'diff': 3.2416999999992924e-05}, {'diff': 3.24579999999991e-05}, {'diff': 3.243100000001331e-05}, ...</msg>
<status status="PASS" starttime="20201029 09:34:22.312" endtime="20201029 09:34:22.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:34:22.321" level="INFO">${OVERHEAD} = {'diff': [3.237500000000115e-05, 3.243099999999943e-05, 3.2388999999993784e-05, 3.2416999999992924e-05, 3.24579999999991e-05, 3.243100000001331e-05, 3.2402999999986415e-05, 3.24170000000068e-05, 3.238...</msg>
<status status="PASS" starttime="20201029 09:34:22.317" endtime="20201029 09:34:22.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.326" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 09:34:22.325" endtime="20201029 09:34:22.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.328" level="INFO">VALUE: [3.237500000000115e-05, 3.243099999999943e-05, 3.2388999999993784e-05, 3.2416999999992924e-05, 3.24579999999991e-05, 3.243100000001331e-05, 3.2402999999986415e-05, 3.24170000000068e-05, 3.2388999999993784e-05, 3.234700000000201e-05, 3.2360999999994644e-05, 3.238799999999431e-05, 3.240300000000029e-05, 3.2388999999993784e-05, 3.2416999999992924e-05, 3.234700000000201e-05, 3.2388999999993784e-05, 3.2388999999993784e-05, 3.2334000000022733e-05, 3.2402999999986415e-05, 3.238900000002154e-05, 3.240199999998694e-05, 3.2402999999986415e-05, 3.237500000000115e-05, 3.240300000001417e-05, 3.237500000000115e-05, 3.240300000001417e-05, 3.238900000002154e-05, 3.2402999999986415e-05, 3.233399999999498e-05, 3.244500000001982e-05, 3.237500000000115e-05, 3.240300000001417e-05, 3.240300000001417e-05, 3.236100000000852e-05, 3.2388999999993784e-05, 3.240300000001417e-05, 3.2402999999986415e-05, 3.243099999999943e-05, 3.2402999999986415e-05, 3.233399999999498e-05, 3.240300000001417e-05, 3.238799999999431e-05, 3.2402999999986415e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.24020000000147e-05, 3.241599999997957e-05, 3.234700000001589e-05, 3.237500000000115e-05]</msg>
<status status="PASS" starttime="20201029 09:34:22.327" endtime="20201029 09:34:22.329"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.322" endtime="20201029 09:34:22.329"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:21.768" endtime="20201029 09:34:22.330"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:21.696" endtime="20201029 09:34:22.330" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:22.338" endtime="20201029 09:34:22.357"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.336" endtime="20201029 09:34:22.358"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.380" endtime="20201029 09:34:22.399"></status>
</kw>
<msg timestamp="20201029 09:34:22.400" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:22.376" endtime="20201029 09:34:22.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.405" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:22.402" endtime="20201029 09:34:22.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.412" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:34:22.408" endtime="20201029 09:34:22.413"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:22.371" endtime="20201029 09:34:22.414"></status>
</kw>
<status status="FAIL" starttime="20201029 09:34:22.365" endtime="20201029 09:34:22.415"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.363" endtime="20201029 09:34:22.416"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:34:22.424" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:34:22.422" endtime="20201029 09:34:22.425"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.418" endtime="20201029 09:34:22.425"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.362" endtime="20201029 09:34:22.426"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.361" endtime="20201029 09:34:22.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:22.428" endtime="20201029 09:34:22.431"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.360" endtime="20201029 09:34:22.432"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.358" endtime="20201029 09:34:22.433"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.334" endtime="20201029 09:34:22.434"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:34:22.441" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:34:22.457" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:34:23.705" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:34:22.439" endtime="20201029 09:34:23.706"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.710" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 09:34:23.707" endtime="20201029 09:34:23.710"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:22.435" endtime="20201029 09:34:23.711"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:23.714" endtime="20201029 09:34:23.734"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.713" endtime="20201029 09:34:23.735"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.743" endtime="20201029 09:34:23.751"></status>
</kw>
<msg timestamp="20201029 09:34:23.752" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:23.741" endtime="20201029 09:34:23.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:23.754" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:23.753" endtime="20201029 09:34:23.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.756" endtime="20201029 09:34:23.765"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.739" endtime="20201029 09:34:23.766"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.737" endtime="20201029 09:34:23.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:23.773" endtime="20201029 09:34:24.081"></status>
</kw>
<msg timestamp="20201029 09:34:24.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018422222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018431792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:23.772" endtime="20201029 09:34:24.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018422222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018431792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:24.087" endtime="20201029 09:34:24.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.095" endtime="20201029 09:34:24.097"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.769" endtime="20201029 09:34:24.098"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.767" endtime="20201029 09:34:24.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:24.103" level="INFO">${PHILIP_RES} = [{'diff': 9.570000000000412e-06}, {'diff': 9.583999999999981e-06}, {'diff': 9.582999999997038e-06}, {'diff': 9.556000000000842e-06}, {'diff': 9.610999999999648e-06}, {'diff': 9.583000000000508e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:34:24.099" endtime="20201029 09:34:24.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:24.110" level="INFO">${RESULT} = {'diff': [9.570000000000412e-06, 9.583999999999981e-06, 9.582999999997038e-06, 9.556000000000842e-06, 9.610999999999648e-06, 9.583000000000508e-06, 9.597000000000078e-06, 9.583000000000508e-06, 9.5689...</msg>
<status status="PASS" starttime="20201029 09:34:24.105" endtime="20201029 09:34:24.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.115" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:24.113" endtime="20201029 09:34:24.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.118" level="INFO">VALUE: [9.570000000000412e-06, 9.583999999999981e-06, 9.582999999997038e-06, 9.556000000000842e-06, 9.610999999999648e-06, 9.583000000000508e-06, 9.597000000000078e-06, 9.583000000000508e-06, 9.568999999997468e-06, 9.597999999999551e-06, 9.583000000000508e-06, 9.582999999997038e-06, 9.570000000000412e-06, 9.541000000001798e-06, 9.665999999998454e-06, 9.583999999999981e-06, 9.569000000000938e-06, 9.583000000000508e-06, 9.597999999999551e-06, 9.597000000000078e-06, 9.624999999999218e-06, 9.583999999999981e-06, 9.597000000000078e-06, 9.583000000000508e-06, 9.597000000000078e-06, 9.597000000000078e-06, 9.597999999999551e-06, 9.597000000000078e-06, 9.610999999999648e-06, 9.570000000000412e-06, 9.625000000002687e-06, 9.610999999999648e-06, 9.583999999999981e-06, 9.582999999997038e-06, 9.569000000000938e-06, 9.570000000000412e-06, 9.582999999997038e-06, 9.583000000000508e-06, 9.653000000001827e-06, 9.610999999999648e-06, 9.583000000000508e-06, 9.597000000000078e-06, 9.583000000000508e-06, 9.611000000003117e-06, 9.583000000000508e-06, 9.652999999998357e-06, 9.59800000000302e-06, 9.569000000000938e-06, 9.597000000000078e-06, 9.514000000002132e-06]</msg>
<status status="PASS" starttime="20201029 09:34:24.116" endtime="20201029 09:34:24.118"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.111" endtime="20201029 09:34:24.119"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.735" endtime="20201029 09:34:24.120"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.712" endtime="20201029 09:34:24.120"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:24.124" endtime="20201029 09:34:24.143"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.122" endtime="20201029 09:34:24.144"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.155" endtime="20201029 09:34:24.164"></status>
</kw>
<msg timestamp="20201029 09:34:24.165" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.153" endtime="20201029 09:34:24.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.167" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.166" endtime="20201029 09:34:24.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.169" endtime="20201029 09:34:24.171"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.149" endtime="20201029 09:34:24.171"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.146" endtime="20201029 09:34:24.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.178" endtime="20201029 09:34:24.465"></status>
</kw>
<msg timestamp="20201029 09:34:24.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020584069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020600042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:24.177" endtime="20201029 09:34:24.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020584069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020600042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:24.470" endtime="20201029 09:34:24.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.478" endtime="20201029 09:34:24.480"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.174" endtime="20201029 09:34:24.480"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.172" endtime="20201029 09:34:24.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:24.485" level="INFO">${PHILIP_RES} = [{'diff': 1.5972999999998988e-05}, {'diff': 1.5944000000000375e-05}, {'diff': 1.5944999999999848e-05}, {'diff': 1.5944000000000375e-05}, {'diff': 1.5930000000000805e-05}, {'diff': 1.5958999999999418e-...</msg>
<status status="PASS" starttime="20201029 09:34:24.481" endtime="20201029 09:34:24.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:24.489" level="INFO">${RESULT} = {'diff': [1.5972999999998988e-05, 1.5944000000000375e-05, 1.5944999999999848e-05, 1.5944000000000375e-05, 1.5930000000000805e-05, 1.5958999999999418e-05, 1.5971999999999514e-05, 1.5944000000000375e-05...</msg>
<status status="PASS" starttime="20201029 09:34:24.486" endtime="20201029 09:34:24.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.494" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:24.493" endtime="20201029 09:34:24.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.496" level="INFO">VALUE: [1.5972999999998988e-05, 1.5944000000000375e-05, 1.5944999999999848e-05, 1.5944000000000375e-05, 1.5930000000000805e-05, 1.5958999999999418e-05, 1.5971999999999514e-05, 1.5944000000000375e-05, 1.5972999999998988e-05, 1.5957999999999944e-05, 1.5957999999999944e-05, 1.5944999999999848e-05, 1.5957999999999944e-05, 1.5971999999999514e-05, 1.5944000000000375e-05, 1.5944999999999848e-05, 1.5957999999999944e-05, 1.5957999999999944e-05, 1.5985999999999084e-05, 1.5957999999999944e-05, 1.5957999999999944e-05, 1.5972000000002984e-05, 1.5957999999999944e-05, 1.6014000000001694e-05, 1.5971999999999514e-05, 1.6042000000000833e-05, 1.591700000000071e-05, 1.5944000000000375e-05, 1.5985999999999084e-05, 1.5957999999999944e-05, 1.5957999999999944e-05, 1.5985999999999084e-05, 1.5971999999999514e-05, 1.6027999999997794e-05, 1.5957999999999944e-05, 1.5958999999999418e-05, 1.5971999999999514e-05, 1.5971999999999514e-05, 1.5944999999999848e-05, 1.5985999999999084e-05, 1.5957999999999944e-05, 1.5958999999999418e-05, 1.5971999999999514e-05, 1.5957999999999944e-05, 1.5957999999999944e-05, 1.5944999999999848e-05, 1.5944000000000375e-05, 1.5944000000000375e-05, 1.5958999999999418e-05, 1.5957999999999944e-05]</msg>
<status status="PASS" starttime="20201029 09:34:24.495" endtime="20201029 09:34:24.497"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.490" endtime="20201029 09:34:24.497"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.145" endtime="20201029 09:34:24.498"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.121" endtime="20201029 09:34:24.498"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:24.500" endtime="20201029 09:34:24.519"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.499" endtime="20201029 09:34:24.520"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.529" endtime="20201029 09:34:24.539"></status>
</kw>
<msg timestamp="20201029 09:34:24.539" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.527" endtime="20201029 09:34:24.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.542" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.540" endtime="20201029 09:34:24.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.543" endtime="20201029 09:34:24.546"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.524" endtime="20201029 09:34:24.546"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.522" endtime="20201029 09:34:24.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.554" endtime="20201029 09:34:24.845"></status>
</kw>
<msg timestamp="20201029 09:34:24.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018181931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018204528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:24.552" endtime="20201029 09:34:24.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018181931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018204528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:24.849" endtime="20201029 09:34:24.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.858" endtime="20201029 09:34:24.860"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.549" endtime="20201029 09:34:24.860"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.548" endtime="20201029 09:34:24.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:24.865" level="INFO">${PHILIP_RES} = [{'diff': 2.259700000000267e-05}, {'diff': 2.265299999999748e-05}, {'diff': 2.262499999999834e-05}, {'diff': 2.265300000000095e-05}, {'diff': 2.262500000000181e-05}, {'diff': 2.266700000000052e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:34:24.861" endtime="20201029 09:34:24.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:24.869" level="INFO">${RESULT} = {'diff': [2.259700000000267e-05, 2.265299999999748e-05, 2.262499999999834e-05, 2.265300000000095e-05, 2.262500000000181e-05, 2.266700000000052e-05, 2.2569999999999535e-05, 2.265300000000095e-05, 2.263...</msg>
<status status="PASS" starttime="20201029 09:34:24.866" endtime="20201029 09:34:24.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.874" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:24.873" endtime="20201029 09:34:24.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.876" level="INFO">VALUE: [2.259700000000267e-05, 2.265299999999748e-05, 2.262499999999834e-05, 2.265300000000095e-05, 2.262500000000181e-05, 2.266700000000052e-05, 2.2569999999999535e-05, 2.265300000000095e-05, 2.263900000000138e-05, 2.263899999999791e-05, 2.263899999999791e-05, 2.265300000000095e-05, 2.266700000000052e-05, 2.265300000000095e-05, 2.266700000000052e-05, 2.263900000000138e-05, 2.262500000000181e-05, 2.262499999999834e-05, 2.261099999999877e-05, 2.2652000000001477e-05, 2.262500000000181e-05, 2.2680000000000616e-05, 2.265299999999748e-05, 2.265300000000095e-05, 2.265300000000095e-05, 2.263899999999791e-05, 2.263899999999791e-05, 2.265300000000095e-05, 2.2652000000001477e-05, 2.263899999999791e-05, 2.2651999999998007e-05, 2.262499999999834e-05, 2.265300000000095e-05, 2.263900000000138e-05, 2.263899999999791e-05, 2.263900000000138e-05, 2.263900000000138e-05, 2.2666000000001046e-05, 2.266699999999705e-05, 2.2652000000001477e-05, 2.265300000000095e-05, 2.263900000000138e-05, 2.265299999999748e-05, 2.268100000000009e-05, 2.263900000000138e-05, 2.263900000000138e-05, 2.262499999999834e-05, 2.262499999999834e-05, 2.265300000000095e-05, 2.266700000000052e-05]</msg>
<status status="PASS" starttime="20201029 09:34:24.875" endtime="20201029 09:34:24.877"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.870" endtime="20201029 09:34:24.878"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.521" endtime="20201029 09:34:24.878"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.498" endtime="20201029 09:34:24.879"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:24.881" endtime="20201029 09:34:24.900"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.879" endtime="20201029 09:34:24.901"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.909" endtime="20201029 09:34:24.921"></status>
</kw>
<msg timestamp="20201029 09:34:24.921" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.908" endtime="20201029 09:34:24.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:24.924" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:24.923" endtime="20201029 09:34:24.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.925" endtime="20201029 09:34:24.927"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.905" endtime="20201029 09:34:24.928"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.903" endtime="20201029 09:34:24.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:24.935" endtime="20201029 09:34:25.221"></status>
</kw>
<msg timestamp="20201029 09:34:25.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018127458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018157083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:24.933" endtime="20201029 09:34:25.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018127458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018157083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:25.225" endtime="20201029 09:34:25.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.234" endtime="20201029 09:34:25.236"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.931" endtime="20201029 09:34:25.236"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.929" endtime="20201029 09:34:25.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:25.241" level="INFO">${PHILIP_RES} = [{'diff': 2.9625000000001872e-05}, {'diff': 2.9653000000001012e-05}, {'diff': 2.9694000000000248e-05}, {'diff': 2.9653000000001012e-05}, {'diff': 2.9653000000001012e-05}, {'diff': 2.9639000000001442e-...</msg>
<status status="PASS" starttime="20201029 09:34:25.237" endtime="20201029 09:34:25.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:25.246" level="INFO">${RESULT} = {'diff': [2.9625000000001872e-05, 2.9653000000001012e-05, 2.9694000000000248e-05, 2.9653000000001012e-05, 2.9653000000001012e-05, 2.9639000000001442e-05, 2.9653000000001012e-05, 2.9569000000000123e-05...</msg>
<status status="PASS" starttime="20201029 09:34:25.242" endtime="20201029 09:34:25.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.250" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:25.249" endtime="20201029 09:34:25.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.253" level="INFO">VALUE: [2.9625000000001872e-05, 2.9653000000001012e-05, 2.9694000000000248e-05, 2.9653000000001012e-05, 2.9653000000001012e-05, 2.9639000000001442e-05, 2.9653000000001012e-05, 2.9569000000000123e-05, 2.9666000000001108e-05, 2.9624999999998403e-05, 2.9694000000000248e-05, 2.9653000000001012e-05, 2.9653000000001012e-05, 2.9639000000001442e-05, 2.9666999999997112e-05, 2.9639000000001442e-05, 2.9653000000001012e-05, 2.9666000000001108e-05, 2.9666000000001108e-05, 2.9597999999998736e-05, 2.9667000000000582e-05, 2.9653000000001012e-05, 2.9652999999997542e-05, 2.9653000000001012e-05, 2.9624999999998403e-05, 2.9639000000001442e-05, 2.9555000000000553e-05, 2.9624999999998403e-05, 2.9639000000001442e-05, 2.9638999999997973e-05, 2.9667000000000582e-05, 2.9583999999999167e-05, 2.9653000000001012e-05, 2.9639000000001442e-05, 2.9652999999997542e-05, 2.9639000000001442e-05, 2.965199999999807e-05, 2.965199999999807e-05, 2.9653000000001012e-05, 2.9652999999997542e-05, 2.9653000000001012e-05, 2.9638999999997973e-05, 2.969499999999972e-05, 2.9653000000001012e-05, 2.9569000000000123e-05, 2.9624999999998403e-05, 2.9638999999997973e-05, 2.9680000000000678e-05, 2.9694000000000248e-05, 2.9653000000001012e-05]</msg>
<status status="PASS" starttime="20201029 09:34:25.251" endtime="20201029 09:34:25.253"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.247" endtime="20201029 09:34:25.254"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.901" endtime="20201029 09:34:25.254"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:24.879" endtime="20201029 09:34:25.254"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:25.257" endtime="20201029 09:34:25.276"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.255" endtime="20201029 09:34:25.277"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.286" endtime="20201029 09:34:25.298"></status>
</kw>
<msg timestamp="20201029 09:34:25.298" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.284" endtime="20201029 09:34:25.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.301" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.299" endtime="20201029 09:34:25.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.302" endtime="20201029 09:34:25.304"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.281" endtime="20201029 09:34:25.304"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.279" endtime="20201029 09:34:25.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.312" endtime="20201029 09:34:25.598"></status>
</kw>
<msg timestamp="20201029 09:34:25.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018594903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018631806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:25.310" endtime="20201029 09:34:25.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018594903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018631806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:25.602" endtime="20201029 09:34:25.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.611" endtime="20201029 09:34:25.614"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.307" endtime="20201029 09:34:25.614"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.305" endtime="20201029 09:34:25.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:25.619" level="INFO">${PHILIP_RES} = [{'diff': 3.6903000000001324e-05}, {'diff': 3.694500000000003e-05}, {'diff': 3.69719999999997e-05}, {'diff': 3.695800000000013e-05}, {'diff': 3.694500000000003e-05}, {'diff': 3.69719999999997e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:25.616" endtime="20201029 09:34:25.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:25.623" level="INFO">${RESULT} = {'diff': [3.6903000000001324e-05, 3.694500000000003e-05, 3.69719999999997e-05, 3.695800000000013e-05, 3.694500000000003e-05, 3.69719999999997e-05, 3.701399999999841e-05, 3.69719999999997e-05, 3.702800...</msg>
<status status="PASS" starttime="20201029 09:34:25.620" endtime="20201029 09:34:25.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.628" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:25.627" endtime="20201029 09:34:25.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.630" level="INFO">VALUE: [3.6903000000001324e-05, 3.694500000000003e-05, 3.69719999999997e-05, 3.695800000000013e-05, 3.694500000000003e-05, 3.69719999999997e-05, 3.701399999999841e-05, 3.69719999999997e-05, 3.702800000000145e-05, 3.694500000000003e-05, 3.698600000000274e-05, 3.694400000000056e-05, 3.697299999999917e-05, 3.695800000000013e-05, 3.695800000000013e-05, 3.702799999999798e-05, 3.69589999999996e-05, 3.695800000000013e-05, 3.695800000000013e-05, 3.695800000000013e-05, 3.69589999999996e-05, 3.69589999999996e-05, 3.695800000000013e-05, 3.690200000000185e-05, 3.69589999999996e-05, 3.69719999999997e-05, 3.695800000000013e-05, 3.694400000000056e-05, 3.69589999999996e-05, 3.697200000000317e-05, 3.694400000000056e-05, 3.695800000000013e-05, 3.6931000000000463e-05, 3.69719999999997e-05, 3.695800000000013e-05, 3.695800000000013e-05, 3.694500000000003e-05, 3.695800000000013e-05, 3.695800000000013e-05, 3.69719999999997e-05, 3.69589999999996e-05, 3.695800000000013e-05, 3.695800000000013e-05, 3.694500000000003e-05, 3.697299999999917e-05, 3.695800000000013e-05, 3.695800000000013e-05, 3.69589999999996e-05, 3.7041000000001545e-05, 3.6917000000000894e-05]</msg>
<status status="PASS" starttime="20201029 09:34:25.629" endtime="20201029 09:34:25.631"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.624" endtime="20201029 09:34:25.631"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.278" endtime="20201029 09:34:25.632"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.255" endtime="20201029 09:34:25.632"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:25.634" endtime="20201029 09:34:25.654"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.633" endtime="20201029 09:34:25.654"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.663" endtime="20201029 09:34:25.676"></status>
</kw>
<msg timestamp="20201029 09:34:25.676" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.662" endtime="20201029 09:34:25.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.679" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:25.677" endtime="20201029 09:34:25.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.680" endtime="20201029 09:34:25.683"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.659" endtime="20201029 09:34:25.683"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.656" endtime="20201029 09:34:25.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.690" endtime="20201029 09:34:25.976"></status>
</kw>
<msg timestamp="20201029 09:34:25.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018709042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018753583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:25.689" endtime="20201029 09:34:25.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:25.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018709042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018753583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:25.980" endtime="20201029 09:34:25.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:25.989" endtime="20201029 09:34:25.990"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.686" endtime="20201029 09:34:25.991"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.684" endtime="20201029 09:34:25.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:25.995" level="INFO">${PHILIP_RES} = [{'diff': 4.454100000000211e-05}, {'diff': 4.4666999999998236e-05}, {'diff': 4.4597000000000386e-05}, {'diff': 4.4555000000001677e-05}, {'diff': 4.4583000000000816e-05}, {'diff': 4.458400000000029e-05...</msg>
<status status="PASS" starttime="20201029 09:34:25.992" endtime="20201029 09:34:25.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:26.000" level="INFO">${RESULT} = {'diff': [4.454100000000211e-05, 4.4666999999998236e-05, 4.4597000000000386e-05, 4.4555000000001677e-05, 4.4583000000000816e-05, 4.458400000000029e-05, 4.458400000000029e-05, 4.459799999999986e-05, 4....</msg>
<status status="PASS" starttime="20201029 09:34:25.996" endtime="20201029 09:34:26.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.004" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:26.003" endtime="20201029 09:34:26.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.007" level="INFO">VALUE: [4.454100000000211e-05, 4.4666999999998236e-05, 4.4597000000000386e-05, 4.4555000000001677e-05, 4.4583000000000816e-05, 4.458400000000029e-05, 4.458400000000029e-05, 4.459799999999986e-05, 4.459799999999986e-05, 4.4597000000000386e-05, 4.4583000000000816e-05, 4.4569000000001247e-05, 4.455499999999821e-05, 4.4624999999999526e-05, 4.4610999999999956e-05, 4.4597000000000386e-05, 4.466599999999876e-05, 4.459799999999986e-05, 4.458400000000029e-05, 4.4610999999999956e-05, 4.4555000000001677e-05, 4.456899999999778e-05, 4.4624999999999526e-05, 4.455499999999821e-05, 4.4597000000000386e-05, 4.466600000000223e-05, 4.4610999999999956e-05, 4.458400000000029e-05, 4.4638999999999096e-05, 4.458400000000029e-05, 4.4597000000000386e-05, 4.4583000000000816e-05, 4.4583000000000816e-05, 4.4583000000000816e-05, 4.4583000000000816e-05, 4.4569000000001247e-05, 4.4583000000000816e-05, 4.4597000000000386e-05, 4.4597000000000386e-05, 4.456999999999725e-05, 4.459799999999986e-05, 4.4597000000000386e-05, 4.4583000000000816e-05, 4.452699999999907e-05, 4.4583000000000816e-05, 4.4583000000000816e-05, 4.454200000000158e-05, 4.4583000000000816e-05, 4.458400000000029e-05, 4.4597000000000386e-05]</msg>
<status status="PASS" starttime="20201029 09:34:26.006" endtime="20201029 09:34:26.008"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.001" endtime="20201029 09:34:26.009"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.655" endtime="20201029 09:34:26.009"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:25.632" endtime="20201029 09:34:26.009"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:26.012" endtime="20201029 09:34:26.031"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.010" endtime="20201029 09:34:26.032"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.041" endtime="20201029 09:34:26.054"></status>
</kw>
<msg timestamp="20201029 09:34:26.054" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.039" endtime="20201029 09:34:26.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.057" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.055" endtime="20201029 09:34:26.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.058" endtime="20201029 09:34:26.060"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.036" endtime="20201029 09:34:26.060"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.034" endtime="20201029 09:34:26.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.067" endtime="20201029 09:34:26.361"></status>
</kw>
<msg timestamp="20201029 09:34:26.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018510069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018562556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:26.066" endtime="20201029 09:34:26.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018510069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018562556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:26.369" endtime="20201029 09:34:26.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.384" endtime="20201029 09:34:26.388"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.063" endtime="20201029 09:34:26.390"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.061" endtime="20201029 09:34:26.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:26.399" level="INFO">${PHILIP_RES} = [{'diff': 5.248700000000037e-05}, {'diff': 5.25279999999996e-05}, {'diff': 5.2485999999997424e-05}, {'diff': 5.258299999999841e-05}, {'diff': 5.256899999999884e-05}, {'diff': 5.25279999999996e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:26.393" endtime="20201029 09:34:26.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:26.410" level="INFO">${RESULT} = {'diff': [5.248700000000037e-05, 5.25279999999996e-05, 5.2485999999997424e-05, 5.258299999999841e-05, 5.256899999999884e-05, 5.25279999999996e-05, 5.25279999999996e-05, 5.254200000000264e-05, 5.252799...</msg>
<status status="PASS" starttime="20201029 09:34:26.402" endtime="20201029 09:34:26.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.420" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:26.418" endtime="20201029 09:34:26.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.423" level="INFO">VALUE: [5.248700000000037e-05, 5.25279999999996e-05, 5.2485999999997424e-05, 5.258299999999841e-05, 5.256899999999884e-05, 5.25279999999996e-05, 5.25279999999996e-05, 5.254200000000264e-05, 5.25279999999996e-05, 5.25279999999996e-05, 5.25279999999996e-05, 5.25279999999996e-05, 5.2499999999996994e-05, 5.252700000000013e-05, 5.251300000000056e-05, 5.251300000000056e-05, 5.251400000000003e-05, 5.25279999999996e-05, 5.254100000000317e-05, 5.251400000000003e-05, 5.25279999999996e-05, 5.25279999999996e-05, 5.25279999999996e-05, 5.254200000000264e-05, 5.25279999999996e-05, 5.251400000000003e-05, 5.255599999999874e-05, 5.251400000000003e-05, 5.254200000000264e-05, 5.254200000000264e-05, 5.252700000000013e-05, 5.258300000000188e-05, 5.255499999999927e-05, 5.252700000000013e-05, 5.25409999999997e-05, 5.251400000000003e-05, 5.254199999999917e-05, 5.250000000000046e-05, 5.25279999999996e-05, 5.258299999999841e-05, 5.251400000000003e-05, 5.25279999999996e-05, 5.250000000000046e-05, 5.25279999999996e-05, 5.25279999999996e-05, 5.252800000000307e-05, 5.251400000000003e-05, 5.258400000000135e-05, 5.252700000000013e-05, 5.251300000000056e-05]</msg>
<status status="PASS" starttime="20201029 09:34:26.421" endtime="20201029 09:34:26.423"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.413" endtime="20201029 09:34:26.423"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.032" endtime="20201029 09:34:26.424"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.010" endtime="20201029 09:34:26.424"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:26.427" endtime="20201029 09:34:26.447"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.426" endtime="20201029 09:34:26.447"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.456" endtime="20201029 09:34:26.470"></status>
</kw>
<msg timestamp="20201029 09:34:26.470" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.454" endtime="20201029 09:34:26.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.473" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.471" endtime="20201029 09:34:26.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.474" endtime="20201029 09:34:26.475"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.452" endtime="20201029 09:34:26.476"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.450" endtime="20201029 09:34:26.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.483" endtime="20201029 09:34:26.768"></status>
</kw>
<msg timestamp="20201029 09:34:26.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018047139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018107833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:26.481" endtime="20201029 09:34:26.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018047139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018107833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:26.772" endtime="20201029 09:34:26.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.780" endtime="20201029 09:34:26.785"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.479" endtime="20201029 09:34:26.786"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.477" endtime="20201029 09:34:26.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:26.790" level="INFO">${PHILIP_RES} = [{'diff': 6.0694000000000026e-05}, {'diff': 6.0778000000000915e-05}, {'diff': 6.0778000000000915e-05}, {'diff': 6.077699999999797e-05}, {'diff': 6.0777999999997445e-05}, {'diff': 6.0806000000000054e-0...</msg>
<status status="PASS" starttime="20201029 09:34:26.787" endtime="20201029 09:34:26.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:26.794" level="INFO">${RESULT} = {'diff': [6.0694000000000026e-05, 6.0778000000000915e-05, 6.0778000000000915e-05, 6.077699999999797e-05, 6.0777999999997445e-05, 6.0806000000000054e-05, 6.079100000000101e-05, 6.0764000000001345e-05, ...</msg>
<status status="PASS" starttime="20201029 09:34:26.791" endtime="20201029 09:34:26.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.798" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:26.797" endtime="20201029 09:34:26.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.801" level="INFO">VALUE: [6.0694000000000026e-05, 6.0778000000000915e-05, 6.0778000000000915e-05, 6.077699999999797e-05, 6.0777999999997445e-05, 6.0806000000000054e-05, 6.079100000000101e-05, 6.0764000000001345e-05, 6.0764000000001345e-05, 6.083299999999972e-05, 6.081900000000015e-05, 6.0848000000002234e-05, 6.0749999999998305e-05, 6.072300000000211e-05, 6.0778000000000915e-05, 6.0764000000001345e-05, 6.0778000000000915e-05, 6.081900000000015e-05, 6.0792000000000485e-05, 6.0806000000000054e-05, 6.077699999999797e-05, 6.0819999999999624e-05, 6.0764000000001345e-05, 6.0764000000001345e-05, 6.077700000000144e-05, 6.0778000000000915e-05, 6.0778000000000915e-05, 6.077700000000144e-05, 6.0778000000000915e-05, 6.0806000000000054e-05, 6.0778000000000915e-05, 6.077699999999797e-05, 6.0778000000000915e-05, 6.0736000000002205e-05, 6.076300000000187e-05, 6.0778000000000915e-05, 6.0778000000000915e-05, 6.0777999999997445e-05, 6.0777999999997445e-05, 6.0792000000000485e-05, 6.0792000000000485e-05, 6.0764000000001345e-05, 6.0721999999999166e-05, 6.0778000000000915e-05, 6.0764000000001345e-05, 6.0806000000000054e-05, 6.0777999999997445e-05, 6.0791999999997015e-05, 6.0763999999997875e-05, 6.0792000000000485e-05]</msg>
<status status="PASS" starttime="20201029 09:34:26.799" endtime="20201029 09:34:26.801"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.795" endtime="20201029 09:34:26.802"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.448" endtime="20201029 09:34:26.802"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.425" endtime="20201029 09:34:26.802"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:26.805" endtime="20201029 09:34:26.824"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.803" endtime="20201029 09:34:26.825"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.833" endtime="20201029 09:34:26.848"></status>
</kw>
<msg timestamp="20201029 09:34:26.849" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.831" endtime="20201029 09:34:26.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:26.851" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:26.850" endtime="20201029 09:34:26.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.852" endtime="20201029 09:34:26.854"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.829" endtime="20201029 09:34:26.855"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.827" endtime="20201029 09:34:26.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:26.862" endtime="20201029 09:34:27.150"></status>
</kw>
<msg timestamp="20201029 09:34:27.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017513778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017583069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:26.860" endtime="20201029 09:34:27.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017513778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017583069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:27.154" endtime="20201029 09:34:27.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.162" endtime="20201029 09:34:27.164"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.858" endtime="20201029 09:34:27.164"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.856" endtime="20201029 09:34:27.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:27.168" level="INFO">${PHILIP_RES} = [{'diff': 6.92909999999991e-05}, {'diff': 6.934700000000085e-05}, {'diff': 6.936100000000042e-05}, {'diff': 6.933300000000128e-05}, {'diff': 6.931999999999772e-05}, {'diff': 6.934800000000033e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:27.165" endtime="20201029 09:34:27.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:27.172" level="INFO">${RESULT} = {'diff': [6.92909999999991e-05, 6.934700000000085e-05, 6.936100000000042e-05, 6.933300000000128e-05, 6.931999999999772e-05, 6.934800000000033e-05, 6.934800000000033e-05, 6.933300000000128e-05, 6.93470...</msg>
<status status="PASS" starttime="20201029 09:34:27.169" endtime="20201029 09:34:27.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.177" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:27.176" endtime="20201029 09:34:27.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.179" level="INFO">VALUE: [6.92909999999991e-05, 6.934700000000085e-05, 6.936100000000042e-05, 6.933300000000128e-05, 6.931999999999772e-05, 6.934800000000033e-05, 6.934800000000033e-05, 6.933300000000128e-05, 6.934700000000085e-05, 6.936100000000042e-05, 6.936099999999695e-05, 6.934699999999738e-05, 6.930599999999815e-05, 6.930499999999867e-05, 6.933300000000128e-05, 6.933299999999781e-05, 6.934700000000085e-05, 6.934700000000085e-05, 6.930600000000162e-05, 6.933400000000076e-05, 6.932000000000119e-05, 6.934700000000085e-05, 6.94030000000026e-05, 6.931999999999772e-05, 6.931900000000171e-05, 6.934700000000085e-05, 6.933400000000076e-05, 6.933400000000076e-05, 6.936100000000042e-05, 6.934700000000085e-05, 6.931900000000171e-05, 6.934700000000085e-05, 6.937499999999999e-05, 6.933400000000076e-05, 6.933400000000076e-05, 6.933300000000128e-05, 6.934700000000085e-05, 6.933299999999781e-05, 6.933300000000128e-05, 6.933400000000076e-05, 6.940299999999913e-05, 6.936100000000042e-05, 6.934699999999738e-05, 6.92909999999991e-05, 6.930499999999867e-05, 6.934700000000085e-05, 6.933300000000128e-05, 6.932000000000119e-05, 6.933300000000128e-05, 6.934700000000085e-05]</msg>
<status status="PASS" starttime="20201029 09:34:27.178" endtime="20201029 09:34:27.180"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.173" endtime="20201029 09:34:27.181"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.825" endtime="20201029 09:34:27.181"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:26.803" endtime="20201029 09:34:27.182"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:27.184" endtime="20201029 09:34:27.203"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.183" endtime="20201029 09:34:27.204"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.212" endtime="20201029 09:34:27.228"></status>
</kw>
<msg timestamp="20201029 09:34:27.229" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.210" endtime="20201029 09:34:27.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.231" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.230" endtime="20201029 09:34:27.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.232" endtime="20201029 09:34:27.234"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.208" endtime="20201029 09:34:27.234"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.206" endtime="20201029 09:34:27.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.241" endtime="20201029 09:34:27.527"></status>
</kw>
<msg timestamp="20201029 09:34:27.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017515194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017593375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:27.240" endtime="20201029 09:34:27.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017515194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017593375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:27.531" endtime="20201029 09:34:27.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.539" endtime="20201029 09:34:27.541"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.237" endtime="20201029 09:34:27.541"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.235" endtime="20201029 09:34:27.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:27.545" level="INFO">${PHILIP_RES} = [{'diff': 7.818100000000008e-05}, {'diff': 7.819500000000312e-05}, {'diff': 7.822199999999932e-05}, {'diff': 7.819499999999965e-05}, {'diff': 7.822199999999932e-05}, {'diff': 7.820899999999922e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:34:27.542" endtime="20201029 09:34:27.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:27.550" level="INFO">${RESULT} = {'diff': [7.818100000000008e-05, 7.819500000000312e-05, 7.822199999999932e-05, 7.819499999999965e-05, 7.822199999999932e-05, 7.820899999999922e-05, 7.819400000000018e-05, 7.82229999999988e-05, 7.81810...</msg>
<status status="PASS" starttime="20201029 09:34:27.546" endtime="20201029 09:34:27.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.555" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:27.554" endtime="20201029 09:34:27.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.557" level="INFO">VALUE: [7.818100000000008e-05, 7.819500000000312e-05, 7.822199999999932e-05, 7.819499999999965e-05, 7.822199999999932e-05, 7.820899999999922e-05, 7.819400000000018e-05, 7.82229999999988e-05, 7.818100000000008e-05, 7.820899999999922e-05, 7.822199999999932e-05, 7.823599999999889e-05, 7.822199999999932e-05, 7.822300000000226e-05, 7.823600000000236e-05, 7.820900000000269e-05, 7.822200000000279e-05, 7.825000000000193e-05, 7.820799999999975e-05, 7.82229999999988e-05, 7.818000000000061e-05, 7.819499999999965e-05, 7.820799999999975e-05, 7.82229999999988e-05, 7.829199999999717e-05, 7.820899999999922e-05, 7.819400000000018e-05, 7.820900000000269e-05, 7.822200000000279e-05, 7.820900000000269e-05, 7.819400000000018e-05, 7.822199999999932e-05, 7.820799999999975e-05, 7.820899999999922e-05, 7.820799999999975e-05, 7.822199999999932e-05, 7.823599999999889e-05, 7.819499999999965e-05, 7.822199999999932e-05, 7.820799999999975e-05, 7.818000000000061e-05, 7.822199999999932e-05, 7.823600000000236e-05, 7.822200000000279e-05, 7.819400000000018e-05, 7.818100000000008e-05, 7.820799999999975e-05, 7.822199999999932e-05, 7.822199999999932e-05, 7.820799999999975e-05]</msg>
<status status="PASS" starttime="20201029 09:34:27.556" endtime="20201029 09:34:27.558"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.551" endtime="20201029 09:34:27.558"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.205" endtime="20201029 09:34:27.559"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.182" endtime="20201029 09:34:27.559"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:27.561" endtime="20201029 09:34:27.581"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.560" endtime="20201029 09:34:27.581"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.589" endtime="20201029 09:34:27.607"></status>
</kw>
<msg timestamp="20201029 09:34:27.607" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.588" endtime="20201029 09:34:27.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.609" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.608" endtime="20201029 09:34:27.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.610" endtime="20201029 09:34:27.612"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.585" endtime="20201029 09:34:27.613"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.583" endtime="20201029 09:34:27.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.620" endtime="20201029 09:34:27.907"></status>
</kw>
<msg timestamp="20201029 09:34:27.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017529972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017617347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:27.619" endtime="20201029 09:34:27.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017529972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017617347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:27.911" endtime="20201029 09:34:27.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.919" endtime="20201029 09:34:27.921"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.616" endtime="20201029 09:34:27.922"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.614" endtime="20201029 09:34:27.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:27.926" level="INFO">${PHILIP_RES} = [{'diff': 8.737499999999718e-05}, {'diff': 8.740299999999979e-05}, {'diff': 8.736099999999761e-05}, {'diff': 8.740299999999979e-05}, {'diff': 8.74860000000012e-05}, {'diff': 8.738900000000022e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:27.923" endtime="20201029 09:34:27.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:27.930" level="INFO">${RESULT} = {'diff': [8.737499999999718e-05, 8.740299999999979e-05, 8.736099999999761e-05, 8.740299999999979e-05, 8.74860000000012e-05, 8.738900000000022e-05, 8.741599999999988e-05, 8.738899999999675e-05, 8.74029...</msg>
<status status="PASS" starttime="20201029 09:34:27.927" endtime="20201029 09:34:27.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.935" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:27.934" endtime="20201029 09:34:27.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.937" level="INFO">VALUE: [8.737499999999718e-05, 8.740299999999979e-05, 8.736099999999761e-05, 8.740299999999979e-05, 8.74860000000012e-05, 8.738900000000022e-05, 8.741599999999988e-05, 8.738899999999675e-05, 8.740299999999979e-05, 8.741599999999988e-05, 8.740299999999979e-05, 8.738900000000022e-05, 8.737500000000065e-05, 8.738900000000022e-05, 8.736200000000055e-05, 8.740299999999979e-05, 8.741699999999936e-05, 8.738900000000022e-05, 8.738899999999675e-05, 8.741699999999936e-05, 8.738900000000022e-05, 8.741699999999936e-05, 8.745800000000206e-05, 8.741599999999988e-05, 8.74860000000012e-05, 8.744399999999902e-05, 8.740200000000031e-05, 8.740299999999979e-05, 8.740299999999979e-05, 8.738799999999727e-05, 8.740299999999979e-05, 8.740299999999979e-05, 8.740200000000031e-05, 8.741699999999936e-05, 8.740299999999979e-05, 8.745800000000206e-05, 8.741699999999936e-05, 8.743099999999893e-05, 8.740299999999979e-05, 8.740299999999979e-05, 8.738900000000022e-05, 8.742999999999945e-05, 8.73189999999989e-05, 8.740299999999979e-05, 8.734699999999804e-05, 8.738900000000022e-05, 8.741699999999936e-05, 8.741599999999988e-05, 8.741699999999936e-05, 8.740299999999979e-05]</msg>
<status status="PASS" starttime="20201029 09:34:27.936" endtime="20201029 09:34:27.938"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.931" endtime="20201029 09:34:27.938"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.582" endtime="20201029 09:34:27.939"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.559" endtime="20201029 09:34:27.939"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:27.941" endtime="20201029 09:34:27.961"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.940" endtime="20201029 09:34:27.961"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.969" endtime="20201029 09:34:27.988"></status>
</kw>
<msg timestamp="20201029 09:34:27.989" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.968" endtime="20201029 09:34:27.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:27.991" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:27.990" endtime="20201029 09:34:27.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:27.992" endtime="20201029 09:34:27.995"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.965" endtime="20201029 09:34:27.995"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.963" endtime="20201029 09:34:27.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.002" endtime="20201029 09:34:28.288"></status>
</kw>
<msg timestamp="20201029 09:34:28.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017554736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017651611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:28.001" endtime="20201029 09:34:28.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017554736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017651611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:28.292" endtime="20201029 09:34:28.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.300" endtime="20201029 09:34:28.301"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.998" endtime="20201029 09:34:28.302"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.996" endtime="20201029 09:34:28.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:28.306" level="INFO">${PHILIP_RES} = [{'diff': 9.687499999999974e-05}, {'diff': 9.691599999999898e-05}, {'diff': 9.691700000000192e-05}, {'diff': 9.690300000000235e-05}, {'diff': 9.69019999999994e-05}, {'diff': 9.690300000000235e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:28.303" endtime="20201029 09:34:28.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:28.310" level="INFO">${RESULT} = {'diff': [9.687499999999974e-05, 9.691599999999898e-05, 9.691700000000192e-05, 9.690300000000235e-05, 9.69019999999994e-05, 9.690300000000235e-05, 9.691699999999845e-05, 9.688899999999931e-05, 9.68889...</msg>
<status status="PASS" starttime="20201029 09:34:28.307" endtime="20201029 09:34:28.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.315" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:28.314" endtime="20201029 09:34:28.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.317" level="INFO">VALUE: [9.687499999999974e-05, 9.691599999999898e-05, 9.691700000000192e-05, 9.690300000000235e-05, 9.69019999999994e-05, 9.690300000000235e-05, 9.691699999999845e-05, 9.688899999999931e-05, 9.688899999999931e-05, 9.690299999999888e-05, 9.691599999999898e-05, 9.691599999999898e-05, 9.690299999999888e-05, 9.688900000000278e-05, 9.690299999999888e-05, 9.693000000000201e-05, 9.68470000000006e-05, 9.691599999999898e-05, 9.691700000000192e-05, 9.690299999999888e-05, 9.69019999999994e-05, 9.690300000000235e-05, 9.690299999999888e-05, 9.69019999999994e-05, 9.691599999999898e-05, 9.690299999999888e-05, 9.693100000000149e-05, 9.690299999999888e-05, 9.684699999999713e-05, 9.691700000000192e-05, 9.691599999999898e-05, 9.688900000000278e-05, 9.691699999999845e-05, 9.69019999999994e-05, 9.690300000000235e-05, 9.690299999999888e-05, 9.686100000000017e-05, 9.691699999999845e-05, 9.690299999999888e-05, 9.690300000000235e-05, 9.688899999999931e-05, 9.691700000000192e-05, 9.690300000000235e-05, 9.69019999999994e-05, 9.690300000000235e-05, 9.68470000000006e-05, 9.691599999999898e-05, 9.690300000000235e-05, 9.688899999999931e-05, 9.684699999999713e-05]</msg>
<status status="PASS" starttime="20201029 09:34:28.316" endtime="20201029 09:34:28.319"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.311" endtime="20201029 09:34:28.319"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.962" endtime="20201029 09:34:28.320"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:27.939" endtime="20201029 09:34:28.320"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:28.322" endtime="20201029 09:34:28.342"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.321" endtime="20201029 09:34:28.342"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.350" endtime="20201029 09:34:28.369"></status>
</kw>
<msg timestamp="20201029 09:34:28.370" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.349" endtime="20201029 09:34:28.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.372" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.371" endtime="20201029 09:34:28.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.373" endtime="20201029 09:34:28.375"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.346" endtime="20201029 09:34:28.375"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.344" endtime="20201029 09:34:28.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.382" endtime="20201029 09:34:28.669"></status>
</kw>
<msg timestamp="20201029 09:34:28.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017689889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017796583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:28.381" endtime="20201029 09:34:28.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017689889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017796583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:28.673" endtime="20201029 09:34:28.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.680" endtime="20201029 09:34:28.682"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.378" endtime="20201029 09:34:28.682"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.376" endtime="20201029 09:34:28.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:28.687" level="INFO">${PHILIP_RES} = [{'diff': 0.00010669400000000093}, {'diff': 0.00010668100000000083}, {'diff': 0.00010673599999999964}, {'diff': 0.00010672200000000007}, {'diff': 0.00010672200000000007}, {'diff': 0.000106638999999998...</msg>
<status status="PASS" starttime="20201029 09:34:28.684" endtime="20201029 09:34:28.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:28.691" level="INFO">${RESULT} = {'diff': [0.00010669400000000093, 0.00010668100000000083, 0.00010673599999999964, 0.00010672200000000007, 0.00010672200000000007, 0.00010663899999999865, 0.0001067080000000005, 0.00010672299999999954,...</msg>
<status status="PASS" starttime="20201029 09:34:28.688" endtime="20201029 09:34:28.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.696" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:28.695" endtime="20201029 09:34:28.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.698" level="INFO">VALUE: [0.00010669400000000093, 0.00010668100000000083, 0.00010673599999999964, 0.00010672200000000007, 0.00010672200000000007, 0.00010663899999999865, 0.0001067080000000005, 0.00010672299999999954, 0.00010670799999999703, 0.00010673699999999911, 0.00010668000000000136, 0.00010672300000000301, 0.00010672200000000007, 0.00010672200000000007, 0.00010673599999999964, 0.00010670799999999703, 0.0001066950000000004, 0.0001067080000000005, 0.00010673599999999964, 0.00010672200000000007, 0.00010670899999999997, 0.00010672200000000007, 0.0001066950000000004, 0.00010672200000000007, 0.00010672200000000007, 0.00010673599999999964, 0.00010672200000000007, 0.00010672200000000007, 0.00010672200000000007, 0.00010672200000000007, 0.0001067219999999966, 0.00010672299999999954, 0.00010672200000000007, 0.00010670899999999997, 0.00010669399999999746, 0.00010673599999999964, 0.00010666700000000126, 0.00010667999999999789, 0.00010673599999999964, 0.00010680600000000096, 0.00010666700000000126, 0.0001067360000000031, 0.00010670899999999997, 0.0001067080000000005, 0.00010670899999999997, 0.00010669399999999746, 0.00010672299999999954, 0.00010676399999999878, 0.00010672200000000007, 0.0001067080000000005]</msg>
<status status="PASS" starttime="20201029 09:34:28.697" endtime="20201029 09:34:28.699"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.692" endtime="20201029 09:34:28.699"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.343" endtime="20201029 09:34:28.700"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.320" endtime="20201029 09:34:28.700"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:28.702" endtime="20201029 09:34:28.722"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.701" endtime="20201029 09:34:28.722"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.730" endtime="20201029 09:34:28.750"></status>
</kw>
<msg timestamp="20201029 09:34:28.750" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.729" endtime="20201029 09:34:28.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:28.753" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:28.751" endtime="20201029 09:34:28.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.754" endtime="20201029 09:34:28.756"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.726" endtime="20201029 09:34:28.756"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.724" endtime="20201029 09:34:28.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:28.763" endtime="20201029 09:34:29.053"></status>
</kw>
<msg timestamp="20201029 09:34:29.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017478403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017595208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:28.761" endtime="20201029 09:34:29.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017478403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017595208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:29.061" endtime="20201029 09:34:29.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.078" endtime="20201029 09:34:29.084"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.759" endtime="20201029 09:34:29.085"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.757" endtime="20201029 09:34:29.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:29.094" level="INFO">${PHILIP_RES} = [{'diff': 0.00011680500000000107}, {'diff': 0.00011684799999999926}, {'diff': 0.00011684800000000273}, {'diff': 0.00011683399999999969}, {'diff': 0.00011691600000000163}, {'diff': 0.000116846999999999...</msg>
<status status="PASS" starttime="20201029 09:34:29.087" endtime="20201029 09:34:29.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:29.103" level="INFO">${RESULT} = {'diff': [0.00011680500000000107, 0.00011684799999999926, 0.00011684800000000273, 0.00011683399999999969, 0.00011691600000000163, 0.00011684699999999978, 0.00011683299999999675, 0.00011684699999999978...</msg>
<status status="PASS" starttime="20201029 09:34:29.096" endtime="20201029 09:34:29.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.111" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:29.109" endtime="20201029 09:34:29.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.116" level="INFO">VALUE: [0.00011680500000000107, 0.00011684799999999926, 0.00011684800000000273, 0.00011683399999999969, 0.00011691600000000163, 0.00011684699999999978, 0.00011683299999999675, 0.00011684699999999978, 0.00011683300000000021, 0.00011690299999999806, 0.00011679199999999751, 0.00011686199999999883, 0.0001168750000000024, 0.00011690199999999859, 0.00011683299999999675, 0.00011684699999999978, 0.00011690300000000153, 0.00011683300000000021, 0.00011686099999999935, 0.00011684799999999926, 0.00011686199999999883, 0.00011682000000000012, 0.00011683300000000021, 0.00011683300000000021, 0.00011690300000000153, 0.00011683300000000021, 0.0001168889999999985, 0.00011683300000000021, 0.00011684699999999978, 0.00011686100000000282, 0.00011684799999999926, 0.00011684699999999978, 0.00011684699999999978, 0.00011684699999999978, 0.00011683300000000021, 0.00011688900000000196, 0.00011684699999999978, 0.00011681899999999718, 0.00011684799999999926, 0.00011684800000000273, 0.00011684699999999978, 0.00011679199999999751, 0.00011684699999999978, 0.0001169170000000011, 0.0001168889999999985, 0.00011684699999999978, 0.00011681900000000064, 0.00011684699999999978, 0.00011684799999999926, 0.00011686199999999883]</msg>
<status status="PASS" starttime="20201029 09:34:29.114" endtime="20201029 09:34:29.139"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.104" endtime="20201029 09:34:29.139"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.723" endtime="20201029 09:34:29.140"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:28.700" endtime="20201029 09:34:29.140"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:29.142" endtime="20201029 09:34:29.162"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.141" endtime="20201029 09:34:29.162"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.170" endtime="20201029 09:34:29.191"></status>
</kw>
<msg timestamp="20201029 09:34:29.191" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:29.169" endtime="20201029 09:34:29.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.194" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:29.192" endtime="20201029 09:34:29.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.195" endtime="20201029 09:34:29.197"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.166" endtime="20201029 09:34:29.198"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.164" endtime="20201029 09:34:29.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.204" endtime="20201029 09:34:29.490"></status>
</kw>
<msg timestamp="20201029 09:34:29.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017527444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017654681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:29.203" endtime="20201029 09:34:29.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017527444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017654681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:29.494" endtime="20201029 09:34:29.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.502" endtime="20201029 09:34:29.505"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.200" endtime="20201029 09:34:29.505"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.199" endtime="20201029 09:34:29.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:29.512" level="INFO">${PHILIP_RES} = [{'diff': 0.0001272369999999988}, {'diff': 0.0001272499999999989}, {'diff': 0.0001272780000000015}, {'diff': 0.0001272499999999989}, {'diff': 0.0001272780000000015}, {'diff': 0.00012729200000000107}, ...</msg>
<status status="PASS" starttime="20201029 09:34:29.508" endtime="20201029 09:34:29.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:29.518" level="INFO">${RESULT} = {'diff': [0.0001272369999999988, 0.0001272499999999989, 0.0001272780000000015, 0.0001272499999999989, 0.0001272780000000015, 0.00012729200000000107, 0.00012727799999999803, 0.00012723599999999932, 0.0...</msg>
<status status="PASS" starttime="20201029 09:34:29.514" endtime="20201029 09:34:29.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.524" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:29.523" endtime="20201029 09:34:29.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.528" level="INFO">VALUE: [0.0001272369999999988, 0.0001272499999999989, 0.0001272780000000015, 0.0001272499999999989, 0.0001272780000000015, 0.00012729200000000107, 0.00012727799999999803, 0.00012723599999999932, 0.0001272910000000016, 0.0001272919999999976, 0.00012726400000000193, 0.00012729099999999813, 0.00012727799999999803, 0.00012723599999999932, 0.00012727799999999803, 0.00012734699999999988, 0.0001272780000000015, 0.0001272919999999976, 0.00012730600000000064, 0.00012736099999999945, 0.00012727799999999803, 0.00012730600000000064, 0.00012730600000000064, 0.000127262999999999, 0.0001272780000000015, 0.00012729200000000107, 0.00012727799999999803, 0.0001273330000000003, 0.00012729200000000107, 0.00012729200000000107, 0.00012726400000000193, 0.00012726399999999846, 0.00012736100000000292, 0.00012726400000000193, 0.0001272919999999976, 0.00012730500000000117, 0.0001272780000000015, 0.0001272919999999976, 0.0001272910000000016, 0.00012727700000000203, 0.00012726399999999846, 0.0001272780000000015, 0.0001272780000000015, 0.00012729099999999813, 0.00012726400000000193, 0.00012727799999999803, 0.00012729099999999813, 0.00012736099999999945, 0.00012727799999999803, 0.00012729200000000107]</msg>
<status status="PASS" starttime="20201029 09:34:29.526" endtime="20201029 09:34:29.530"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.520" endtime="20201029 09:34:29.531"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.163" endtime="20201029 09:34:29.531"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.140" endtime="20201029 09:34:29.531"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:29.534" endtime="20201029 09:34:29.553"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.532" endtime="20201029 09:34:29.554"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.562" endtime="20201029 09:34:29.584"></status>
</kw>
<msg timestamp="20201029 09:34:29.584" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:29.560" endtime="20201029 09:34:29.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.587" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:29.585" endtime="20201029 09:34:29.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.588" endtime="20201029 09:34:29.589"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.558" endtime="20201029 09:34:29.590"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.556" endtime="20201029 09:34:29.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.597" endtime="20201029 09:34:29.890"></status>
</kw>
<msg timestamp="20201029 09:34:29.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017676653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017814583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:29.595" endtime="20201029 09:34:29.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017676653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017814583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:29.898" endtime="20201029 09:34:29.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.916" endtime="20201029 09:34:29.919"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.593" endtime="20201029 09:34:29.920"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.591" endtime="20201029 09:34:29.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:29.929" level="INFO">${PHILIP_RES} = [{'diff': 0.00013792999999999792}, {'diff': 0.00013802800000000184}, {'diff': 0.00013805600000000098}, {'diff': 0.00013798599999999966}, {'diff': 0.0001380139999999988}, {'diff': 0.0001380000000000027...</msg>
<status status="PASS" starttime="20201029 09:34:29.923" endtime="20201029 09:34:29.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:29.939" level="INFO">${RESULT} = {'diff': [0.00013792999999999792, 0.00013802800000000184, 0.00013805600000000098, 0.00013798599999999966, 0.0001380139999999988, 0.0001380000000000027, 0.00013804200000000141, 0.00013804200000000141, ...</msg>
<status status="PASS" starttime="20201029 09:34:29.931" endtime="20201029 09:34:29.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.945" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:29.944" endtime="20201029 09:34:29.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:29.948" level="INFO">VALUE: [0.00013792999999999792, 0.00013802800000000184, 0.00013805600000000098, 0.00013798599999999966, 0.0001380139999999988, 0.0001380000000000027, 0.00013804200000000141, 0.00013804200000000141, 0.00013806900000000108, 0.00013804099999999847, 0.00013804100000000194, 0.0001380139999999988, 0.00013804199999999794, 0.00013804199999999794, 0.00013804200000000141, 0.00013804200000000141, 0.00013805600000000098, 0.00013804199999999794, 0.00013804200000000141, 0.00013802800000000184, 0.0001380139999999988, 0.0001380269999999989, 0.00013804099999999847, 0.00013805600000000098, 0.00013802800000000184, 0.00013804199999999794, 0.00013804199999999794, 0.00013802800000000184, 0.00013802800000000184, 0.00013804100000000194, 0.0001380139999999988, 0.00013808300000000065, 0.00013802800000000184, 0.00013804200000000141, 0.00013805600000000098, 0.00013802799999999837, 0.00013808300000000065, 0.00013802800000000184, 0.00013804200000000141, 0.00013805499999999804, 0.00013804099999999847, 0.0001380550000000015, 0.00013804100000000194, 0.00013804200000000141, 0.00013802799999999837, 0.00013808400000000012, 0.00013802800000000184, 0.00013802799999999837, 0.00013804199999999794, 0.0001380280000000053]</msg>
<status status="PASS" starttime="20201029 09:34:29.947" endtime="20201029 09:34:29.949"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.941" endtime="20201029 09:34:29.949"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.555" endtime="20201029 09:34:29.950"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.532" endtime="20201029 09:34:29.950"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:29.952" endtime="20201029 09:34:29.971"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.951" endtime="20201029 09:34:29.972"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:29.980" endtime="20201029 09:34:30.003"></status>
</kw>
<msg timestamp="20201029 09:34:30.004" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:29.978" endtime="20201029 09:34:30.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.006" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:30.005" endtime="20201029 09:34:30.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.007" endtime="20201029 09:34:30.009"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.976" endtime="20201029 09:34:30.009"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.974" endtime="20201029 09:34:30.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.016" endtime="20201029 09:34:30.301"></status>
</kw>
<msg timestamp="20201029 09:34:30.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017427861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017576917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:30.015" endtime="20201029 09:34:30.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017427861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017576917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:30.305" endtime="20201029 09:34:30.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.313" endtime="20201029 09:34:30.317"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.012" endtime="20201029 09:34:30.318"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.010" endtime="20201029 09:34:30.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:30.322" level="INFO">${PHILIP_RES} = [{'diff': 0.00014905600000000158}, {'diff': 0.0001490970000000008}, {'diff': 0.00014908400000000072}, {'diff': 0.00014912499999999995}, {'diff': 0.00014909800000000029}, {'diff': 0.0001490970000000008...</msg>
<status status="PASS" starttime="20201029 09:34:30.319" endtime="20201029 09:34:30.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:30.326" level="INFO">${RESULT} = {'diff': [0.00014905600000000158, 0.0001490970000000008, 0.00014908400000000072, 0.00014912499999999995, 0.00014909800000000029, 0.0001490970000000008, 0.00014911100000000038, 0.0001490970000000008, 0...</msg>
<status status="PASS" starttime="20201029 09:34:30.323" endtime="20201029 09:34:30.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.330" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:30.329" endtime="20201029 09:34:30.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.333" level="INFO">VALUE: [0.00014905600000000158, 0.0001490970000000008, 0.00014908400000000072, 0.00014912499999999995, 0.00014909800000000029, 0.0001490970000000008, 0.00014911100000000038, 0.0001490970000000008, 0.0001490559999999981, 0.00014911100000000038, 0.0001490970000000008, 0.0001491529999999991, 0.0001490970000000008, 0.00014909699999999734, 0.00014909699999999734, 0.00014908300000000124, 0.00014907000000000115, 0.00014911100000000038, 0.00014911100000000038, 0.00014912499999999995, 0.0001490970000000008, 0.00014911100000000038, 0.0001490970000000008, 0.00014906999999999768, 0.00014912499999999995, 0.00014908300000000124, 0.0001490970000000008, 0.0001490970000000008, 0.00014909699999999734, 0.00014909699999999734, 0.0001490550000000021, 0.0001490970000000008, 0.00014912499999999995, 0.0001490970000000008, 0.00014911100000000038, 0.00014908400000000072, 0.0001490970000000008, 0.00014909800000000029, 0.00014909800000000029, 0.00014911199999999986, 0.0001490559999999981, 0.00014913899999999952, 0.00014908299999999777, 0.00014911100000000038, 0.00014911100000000038, 0.00014912499999999995, 0.0001490970000000008, 0.00014908300000000124, 0.00014911100000000038, 0.0001490970000000008]</msg>
<status status="PASS" starttime="20201029 09:34:30.331" endtime="20201029 09:34:30.333"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.327" endtime="20201029 09:34:30.334"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.973" endtime="20201029 09:34:30.334"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:29.950" endtime="20201029 09:34:30.335"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:30.337" endtime="20201029 09:34:30.356"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.335" endtime="20201029 09:34:30.357"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.365" endtime="20201029 09:34:30.389"></status>
</kw>
<msg timestamp="20201029 09:34:30.389" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:30.363" endtime="20201029 09:34:30.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.391" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:30.390" endtime="20201029 09:34:30.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.393" endtime="20201029 09:34:30.395"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.361" endtime="20201029 09:34:30.396"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.359" endtime="20201029 09:34:30.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.402" endtime="20201029 09:34:30.696"></status>
</kw>
<msg timestamp="20201029 09:34:30.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017471069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0176315, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:30.401" endtime="20201029 09:34:30.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017471069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0176315, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:30.705" endtime="20201029 09:34:30.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.722" endtime="20201029 09:34:30.725"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.398" endtime="20201029 09:34:30.726"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.397" endtime="20201029 09:34:30.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:30.735" level="INFO">${PHILIP_RES} = [{'diff': 0.00016043100000000254}, {'diff': 0.00016047299999999778}, {'diff': 0.00016048600000000135}, {'diff': 0.0001604719999999983}, {'diff': 0.00016047299999999778}, {'diff': 0.0001604860000000013...</msg>
<status status="PASS" starttime="20201029 09:34:30.729" endtime="20201029 09:34:30.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:30.744" level="INFO">${RESULT} = {'diff': [0.00016043100000000254, 0.00016047299999999778, 0.00016048600000000135, 0.0001604719999999983, 0.00016047299999999778, 0.00016048600000000135, 0.0001604719999999983, 0.00016048600000000135, ...</msg>
<status status="PASS" starttime="20201029 09:34:30.737" endtime="20201029 09:34:30.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.753" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:30.751" endtime="20201029 09:34:30.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.756" level="INFO">VALUE: [0.00016043100000000254, 0.00016047299999999778, 0.00016048600000000135, 0.0001604719999999983, 0.00016047299999999778, 0.00016048600000000135, 0.0001604719999999983, 0.00016048600000000135, 0.00016045900000000168, 0.00016044399999999917, 0.00016047200000000178, 0.00016047299999999778, 0.00016048600000000135, 0.0001604169999999995, 0.0001604719999999983, 0.00016048600000000135, 0.0001604299999999996, 0.00016047200000000178, 0.00016048599999999788, 0.0001604719999999983, 0.0001604580000000022, 0.00016047299999999778, 0.00016047200000000178, 0.00016045799999999874, 0.0001604719999999983, 0.00016048600000000135, 0.0001604719999999983, 0.00016048600000000135, 0.00016048600000000135, 0.00016050000000000092, 0.00016047200000000178, 0.00016047299999999778, 0.00016040200000000046, 0.0001604719999999983, 0.00016048600000000135, 0.00016047200000000178, 0.00016048599999999788, 0.00016055499999999973, 0.00016045899999999821, 0.00016050000000000092, 0.00016048600000000135, 0.00016047299999999778, 0.00016045799999999527, 0.00016047200000000178, 0.00016048600000000135, 0.00016052800000000006, 0.00016050000000000092, 0.0001605140000000005, 0.00016048600000000135, 0.00016048600000000135]</msg>
<status status="PASS" starttime="20201029 09:34:30.755" endtime="20201029 09:34:30.757"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.746" endtime="20201029 09:34:30.758"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.357" endtime="20201029 09:34:30.758"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.335" endtime="20201029 09:34:30.758"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:30.761" endtime="20201029 09:34:30.780"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.759" endtime="20201029 09:34:30.781"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.789" endtime="20201029 09:34:30.813"></status>
</kw>
<msg timestamp="20201029 09:34:30.814" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:30.787" endtime="20201029 09:34:30.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:30.816" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:30.815" endtime="20201029 09:34:30.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.817" endtime="20201029 09:34:30.819"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.785" endtime="20201029 09:34:30.819"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.783" endtime="20201029 09:34:30.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:30.826" endtime="20201029 09:34:31.112"></status>
</kw>
<msg timestamp="20201029 09:34:31.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017520931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017693042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:30.824" endtime="20201029 09:34:31.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017520931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017693042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:31.117" endtime="20201029 09:34:31.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.126" endtime="20201029 09:34:31.127"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.822" endtime="20201029 09:34:31.128"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.820" endtime="20201029 09:34:31.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:31.132" level="INFO">${PHILIP_RES} = [{'diff': 0.0001721109999999991}, {'diff': 0.00017216600000000137}, {'diff': 0.0001721659999999979}, {'diff': 0.00017216700000000085}, {'diff': 0.00017216700000000085}, {'diff': 0.000172195}, {'diff':...</msg>
<status status="PASS" starttime="20201029 09:34:31.129" endtime="20201029 09:34:31.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:31.137" level="INFO">${RESULT} = {'diff': [0.0001721109999999991, 0.00017216600000000137, 0.0001721659999999979, 0.00017216700000000085, 0.00017216700000000085, 0.000172195, 0.00017216700000000085, 0.00017216700000000085, 0.000172165...</msg>
<status status="PASS" starttime="20201029 09:34:31.133" endtime="20201029 09:34:31.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.141" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:31.140" endtime="20201029 09:34:31.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.144" level="INFO">VALUE: [0.0001721109999999991, 0.00017216600000000137, 0.0001721659999999979, 0.00017216700000000085, 0.00017216700000000085, 0.000172195, 0.00017216700000000085, 0.00017216700000000085, 0.0001721659999999979, 0.00017218000000000094, 0.00017216700000000085, 0.00017216700000000085, 0.00017216700000000085, 0.00017218100000000042, 0.0001721520000000018, 0.00017220800000000008, 0.000172195, 0.00017216700000000085, 0.0001722499999999988, 0.00017216700000000085, 0.00017218100000000042, 0.00017216600000000137, 0.00017218000000000094, 0.000172195, 0.00017216700000000085, 0.00017213899999999824, 0.00017216700000000085, 0.00017213799999999876, 0.00017218000000000094, 0.00017215300000000128, 0.00017218099999999695, 0.00017216700000000085, 0.0001721529999999978, 0.00017212500000000214, 0.0001721520000000018, 0.0001721659999999979, 0.00017215300000000128, 0.00017215300000000128, 0.00017222199999999965, 0.00017219400000000398, 0.0001721520000000018, 0.00017216600000000137, 0.00017216700000000085, 0.00017215300000000128, 0.00017216700000000085, 0.00017216700000000085, 0.00017216599999999443, 0.00017216600000000137, 0.00017216700000000085, 0.0001721249999999952]</msg>
<status status="PASS" starttime="20201029 09:34:31.142" endtime="20201029 09:34:31.145"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.138" endtime="20201029 09:34:31.145"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.781" endtime="20201029 09:34:31.146"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:30.759" endtime="20201029 09:34:31.146"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:31.148" endtime="20201029 09:34:31.167"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.147" endtime="20201029 09:34:31.168"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.176" endtime="20201029 09:34:31.202"></status>
</kw>
<msg timestamp="20201029 09:34:31.203" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:31.174" endtime="20201029 09:34:31.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.205" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:31.204" endtime="20201029 09:34:31.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.206" endtime="20201029 09:34:31.208"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.172" endtime="20201029 09:34:31.208"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.170" endtime="20201029 09:34:31.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.215" endtime="20201029 09:34:31.509"></status>
</kw>
<msg timestamp="20201029 09:34:31.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017597097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017781208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:31.213" endtime="20201029 09:34:31.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017597097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017781208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:31.517" endtime="20201029 09:34:31.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.535" endtime="20201029 09:34:31.540"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.211" endtime="20201029 09:34:31.541"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.209" endtime="20201029 09:34:31.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:31.550" level="INFO">${PHILIP_RES} = [{'diff': 0.0001841110000000007}, {'diff': 0.00018418099999999854}, {'diff': 0.00018413899999999983}, {'diff': 0.00018416699999999897}, {'diff': 0.00018416600000000297}, {'diff': 0.0001841939999999986...</msg>
<status status="PASS" starttime="20201029 09:34:31.544" endtime="20201029 09:34:31.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:31.559" level="INFO">${RESULT} = {'diff': [0.0001841110000000007, 0.00018418099999999854, 0.00018413899999999983, 0.00018416699999999897, 0.00018416600000000297, 0.00018419399999999864, 0.0001841659999999995, 0.0001841529999999994, 0...</msg>
<status status="PASS" starttime="20201029 09:34:31.552" endtime="20201029 09:34:31.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.566" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:31.565" endtime="20201029 09:34:31.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.568" level="INFO">VALUE: [0.0001841110000000007, 0.00018418099999999854, 0.00018413899999999983, 0.00018416699999999897, 0.00018416600000000297, 0.00018419399999999864, 0.0001841659999999995, 0.0001841529999999994, 0.00018417999999999907, 0.00018412500000000026, 0.0001841529999999994, 0.00018418099999999854, 0.00018416600000000297, 0.0001841949999999981, 0.0001841110000000007, 0.0001841529999999994, 0.00018417999999999907, 0.00018413899999999983, 0.0001841529999999994, 0.00018416699999999897, 0.0001841659999999995, 0.00018416699999999897, 0.00018416600000000297, 0.00018413899999999983, 0.0001841659999999995, 0.000184181000000002, 0.00018413899999999983, 0.00018422199999999778, 0.000184181000000002, 0.00018416699999999897, 0.00018416700000000244, 0.0001841529999999994, 0.00018416699999999897, 0.00018416700000000244, 0.00018418099999999854, 0.0001841659999999995, 0.00018418099999999854, 0.00018417999999999907, 0.00018413899999999983, 0.00018411200000000016, 0.0001841529999999994, 0.00018416699999999897, 0.00018413899999999983, 0.00018416699999999897, 0.0001841529999999994, 0.00018416699999999897, 0.00018416699999999897, 0.00018416699999999897, 0.0001841529999999994, 0.0001841529999999994]</msg>
<status status="PASS" starttime="20201029 09:34:31.567" endtime="20201029 09:34:31.569"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.561" endtime="20201029 09:34:31.570"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.168" endtime="20201029 09:34:31.570"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.146" endtime="20201029 09:34:31.570"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:31.573" endtime="20201029 09:34:31.592"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.571" endtime="20201029 09:34:31.593"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.601" endtime="20201029 09:34:31.628"></status>
</kw>
<msg timestamp="20201029 09:34:31.629" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:31.599" endtime="20201029 09:34:31.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.631" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:31.630" endtime="20201029 09:34:31.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.632" endtime="20201029 09:34:31.634"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.597" endtime="20201029 09:34:31.635"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.595" endtime="20201029 09:34:31.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.642" endtime="20201029 09:34:31.927"></status>
</kw>
<msg timestamp="20201029 09:34:31.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017819653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018016083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:31.640" endtime="20201029 09:34:31.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017819653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018016083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:31.931" endtime="20201029 09:34:31.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.938" endtime="20201029 09:34:31.940"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.638" endtime="20201029 09:34:31.941"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.636" endtime="20201029 09:34:31.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:31.945" level="INFO">${PHILIP_RES} = [{'diff': 0.00019642999999999744}, {'diff': 0.00019647199999999962}, {'diff': 0.00019648699999999866}, {'diff': 0.00019641600000000134}, {'diff': 0.00019645800000000005}, {'diff': 0.000196487000000002...</msg>
<status status="PASS" starttime="20201029 09:34:31.942" endtime="20201029 09:34:31.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:31.949" level="INFO">${RESULT} = {'diff': [0.00019642999999999744, 0.00019647199999999962, 0.00019648699999999866, 0.00019641600000000134, 0.00019645800000000005, 0.00019648700000000213, 0.00019647199999999962, 0.00019647199999999962...</msg>
<status status="PASS" starttime="20201029 09:34:31.946" endtime="20201029 09:34:31.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.953" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:31.952" endtime="20201029 09:34:31.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:31.955" level="INFO">VALUE: [0.00019642999999999744, 0.00019647199999999962, 0.00019648699999999866, 0.00019641600000000134, 0.00019645800000000005, 0.00019648700000000213, 0.00019647199999999962, 0.00019647199999999962, 0.00019644499999999995, 0.00019650000000000223, 0.0001964859999999992, 0.0001964300000000009, 0.0001964170000000008, 0.00019647199999999962, 0.00019648600000000266, 0.00019645800000000005, 0.00019648699999999866, 0.00019647199999999962, 0.00019644499999999995, 0.00019648699999999866, 0.00019647199999999962, 0.00019645800000000005, 0.00019644400000000048, 0.00019647199999999962, 0.0001964859999999992, 0.00019647199999999962, 0.00019647199999999962, 0.000196540999999998, 0.00019647199999999962, 0.00019647199999999962, 0.00019644499999999995, 0.0001965279999999979, 0.0001964859999999992, 0.0001964859999999992, 0.00019648600000000266, 0.0001964720000000031, 0.0001964720000000031, 0.00019647199999999615, 0.00019647299999999562, 0.0001964999999999953, 0.0001964720000000031, 0.00019648600000000266, 0.0001964720000000031, 0.00019648600000000266, 0.00019652800000000137, 0.00019647199999999615, 0.00019647199999999615, 0.00019645899999999605, 0.00019648599999999572, 0.00019644500000000342]</msg>
<status status="PASS" starttime="20201029 09:34:31.954" endtime="20201029 09:34:31.957"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.950" endtime="20201029 09:34:31.958"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.593" endtime="20201029 09:34:31.958"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.571" endtime="20201029 09:34:31.958"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:31.960" endtime="20201029 09:34:31.980"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.959" endtime="20201029 09:34:31.980"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:31.988" endtime="20201029 09:34:32.017"></status>
</kw>
<msg timestamp="20201029 09:34:32.017" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:31.987" endtime="20201029 09:34:32.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.020" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.018" endtime="20201029 09:34:32.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.021" endtime="20201029 09:34:32.023"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.984" endtime="20201029 09:34:32.023"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.982" endtime="20201029 09:34:32.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.030" endtime="20201029 09:34:32.324"></status>
</kw>
<msg timestamp="20201029 09:34:32.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017650069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017859153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:32.028" endtime="20201029 09:34:32.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017650069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017859153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:32.332" endtime="20201029 09:34:32.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.349" endtime="20201029 09:34:32.352"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.026" endtime="20201029 09:34:32.354"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.024" endtime="20201029 09:34:32.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:32.362" level="INFO">${PHILIP_RES} = [{'diff': 0.00020908399999999827}, {'diff': 0.00020909699999999837}, {'diff': 0.0002090980000000013}, {'diff': 0.00020908400000000174}, {'diff': 0.0002090829999999988}, {'diff': 0.00020912500000000098...</msg>
<status status="PASS" starttime="20201029 09:34:32.356" endtime="20201029 09:34:32.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:32.372" level="INFO">${RESULT} = {'diff': [0.00020908399999999827, 0.00020909699999999837, 0.0002090980000000013, 0.00020908400000000174, 0.0002090829999999988, 0.00020912500000000098, 0.00020911200000000088, 0.0002090829999999988, 0...</msg>
<status status="PASS" starttime="20201029 09:34:32.365" endtime="20201029 09:34:32.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.376" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:32.375" endtime="20201029 09:34:32.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.379" level="INFO">VALUE: [0.00020908399999999827, 0.00020909699999999837, 0.0002090980000000013, 0.00020908400000000174, 0.0002090829999999988, 0.00020912500000000098, 0.00020911200000000088, 0.0002090829999999988, 0.0002091669999999997, 0.00020908400000000174, 0.00020904199999999956, 0.0002091110000000014, 0.00020909699999999837, 0.0002091660000000002, 0.00020909699999999837, 0.0002091249999999975, 0.0002090980000000013, 0.0002091110000000014, 0.0002091110000000014, 0.00020911099999999794, 0.00020912500000000098, 0.0002091110000000014, 0.0002091249999999975, 0.00020909799999999784, 0.00020909700000000184, 0.0002091110000000014, 0.00020902700000000052, 0.0002090980000000013, 0.0002091110000000014, 0.0002091249999999975, 0.00020909799999999784, 0.00020909700000000184, 0.00020909700000000184, 0.00020908300000000574, 0.00020918000000000325, 0.00020905599999999913, 0.0002090829999999988, 0.00020909799999999784, 0.00020915199999999717, 0.0002091249999999975, 0.00020911099999999794, 0.00020909800000000478, 0.00020915300000000359, 0.00020909699999999837, 0.00020909800000000478, 0.00020911099999999794, 0.00020915299999999665, 0.00020908300000000574, 0.00020909699999999837, 0.00020911099999999794]</msg>
<status status="PASS" starttime="20201029 09:34:32.377" endtime="20201029 09:34:32.380"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.373" endtime="20201029 09:34:32.380"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.981" endtime="20201029 09:34:32.380"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:31.958" endtime="20201029 09:34:32.381"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:32.383" endtime="20201029 09:34:32.402"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.382" endtime="20201029 09:34:32.403"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.411" endtime="20201029 09:34:32.440"></status>
</kw>
<msg timestamp="20201029 09:34:32.440" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.409" endtime="20201029 09:34:32.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.443" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.441" endtime="20201029 09:34:32.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.444" endtime="20201029 09:34:32.445"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.407" endtime="20201029 09:34:32.446"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.405" endtime="20201029 09:34:32.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.453" endtime="20201029 09:34:32.739"></status>
</kw>
<msg timestamp="20201029 09:34:32.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017542708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017764694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:32.451" endtime="20201029 09:34:32.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017542708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017764694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:32.743" endtime="20201029 09:34:32.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.750" endtime="20201029 09:34:32.752"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.449" endtime="20201029 09:34:32.752"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.447" endtime="20201029 09:34:32.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:32.757" level="INFO">${PHILIP_RES} = [{'diff': 0.0002219860000000004}, {'diff': 0.00022202800000000258}, {'diff': 0.00022201399999999955}, {'diff': 0.00022204199999999868}, {'diff': 0.00022204100000000268}, {'diff': 0.0002220419999999986...</msg>
<status status="PASS" starttime="20201029 09:34:32.754" endtime="20201029 09:34:32.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:32.761" level="INFO">${RESULT} = {'diff': [0.0002219860000000004, 0.00022202800000000258, 0.00022201399999999955, 0.00022204199999999868, 0.00022204100000000268, 0.00022204199999999868, 0.00022204199999999868, 0.0002220409999999992, ...</msg>
<status status="PASS" starttime="20201029 09:34:32.758" endtime="20201029 09:34:32.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.765" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:32.764" endtime="20201029 09:34:32.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.767" level="INFO">VALUE: [0.0002219860000000004, 0.00022202800000000258, 0.00022201399999999955, 0.00022204199999999868, 0.00022204100000000268, 0.00022204199999999868, 0.00022204199999999868, 0.0002220409999999992, 0.00022205600000000172, 0.00022201399999999955, 0.00022202799999999911, 0.00022204100000000268, 0.00022204199999999868, 0.00022204199999999868, 0.00022204199999999868, 0.00022204200000000215, 0.0002220409999999992, 0.00022206999999999782, 0.00022209700000000096, 0.0002219730000000003, 0.00022202799999999911, 0.00022204199999999868, 0.00022204200000000215, 0.00022202699999999964, 0.0002220839999999974, 0.00022205499999999878, 0.00022205600000000172, 0.00022205599999999825, 0.00022204199999999868, 0.00022205600000000172, 0.0002220409999999992, 0.00022211100000000053, 0.00022202699999999964, 0.00022197200000000084, 0.00022205499999999878, 0.00022205599999999825, 0.00022204199999999868, 0.0002220409999999992, 0.00022205599999999825, 0.0002220409999999992, 0.00022205599999999825, 0.0002220409999999992, 0.00022204200000000562, 0.00022204199999999868, 0.00022205499999999878, 0.00022204200000000562, 0.00022202699999999964, 0.00022206999999999782, 0.00022205499999999878, 0.00022205599999999825]</msg>
<status status="PASS" starttime="20201029 09:34:32.766" endtime="20201029 09:34:32.768"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.762" endtime="20201029 09:34:32.769"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.404" endtime="20201029 09:34:32.769"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.381" endtime="20201029 09:34:32.769"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:32.772" endtime="20201029 09:34:32.791"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.770" endtime="20201029 09:34:32.792"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.800" endtime="20201029 09:34:32.830"></status>
</kw>
<msg timestamp="20201029 09:34:32.830" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.798" endtime="20201029 09:34:32.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:32.832" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:32.831" endtime="20201029 09:34:32.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.834" endtime="20201029 09:34:32.836"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.796" endtime="20201029 09:34:32.837"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.794" endtime="20201029 09:34:32.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:32.843" endtime="20201029 09:34:33.140"></status>
</kw>
<msg timestamp="20201029 09:34:33.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017562444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017797694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:32.842" endtime="20201029 09:34:33.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017562444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017797694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:33.148" endtime="20201029 09:34:33.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.165" endtime="20201029 09:34:33.168"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.839" endtime="20201029 09:34:33.170"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.838" endtime="20201029 09:34:33.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:33.179" level="INFO">${PHILIP_RES} = [{'diff': 0.00023524999999999935}, {'diff': 0.0002353060000000011}, {'diff': 0.0002352779999999985}, {'diff': 0.00023529200000000153}, {'diff': 0.0002353060000000011}, {'diff': 0.00023532000000000067}...</msg>
<status status="PASS" starttime="20201029 09:34:33.172" endtime="20201029 09:34:33.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:33.186" level="INFO">${RESULT} = {'diff': [0.00023524999999999935, 0.0002353060000000011, 0.0002352779999999985, 0.00023529200000000153, 0.0002353060000000011, 0.00023532000000000067, 0.00023529200000000153, 0.00023529199999999806, 0...</msg>
<status status="PASS" starttime="20201029 09:34:33.181" endtime="20201029 09:34:33.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.190" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:33.189" endtime="20201029 09:34:33.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.192" level="INFO">VALUE: [0.00023524999999999935, 0.0002353060000000011, 0.0002352779999999985, 0.00023529200000000153, 0.0002353060000000011, 0.00023532000000000067, 0.00023529200000000153, 0.00023529199999999806, 0.00023529200000000153, 0.00023529099999999858, 0.00023531899999999772, 0.00023529099999999858, 0.00023531899999999772, 0.00023530500000000162, 0.00023526399999999892, 0.0002353060000000011, 0.00023527800000000196, 0.0002353060000000011, 0.00023529200000000153, 0.00023529199999999806, 0.00023527800000000196, 0.00023529099999999858, 0.0002353190000000012, 0.00023529099999999858, 0.00023527699999999901, 0.00023529200000000153, 0.00023531899999999772, 0.0002353060000000011, 0.00023529199999999806, 0.00023529200000000153, 0.00023530599999999763, 0.00023530600000000457, 0.00023529199999999806, 0.00023531899999999772, 0.0002352779999999985, 0.00023527699999999901, 0.00023530499999999815, 0.00023529099999999858, 0.00023529100000000552, 0.00023524999999999935, 0.00023529199999999806, 0.00023529199999999806, 0.00023529199999999806, 0.0002352779999999985, 0.00023530599999999763, 0.000235292000000005, 0.00023530499999999815, 0.00023529099999999858, 0.00023531900000000466, 0.00023531899999999772]</msg>
<status status="PASS" starttime="20201029 09:34:33.191" endtime="20201029 09:34:33.194"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.186" endtime="20201029 09:34:33.194"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.792" endtime="20201029 09:34:33.195"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:32.770" endtime="20201029 09:34:33.195"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:33.197" endtime="20201029 09:34:33.217"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.196" endtime="20201029 09:34:33.217"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.225" endtime="20201029 09:34:33.257"></status>
</kw>
<msg timestamp="20201029 09:34:33.257" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:33.224" endtime="20201029 09:34:33.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.260" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:33.258" endtime="20201029 09:34:33.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.261" endtime="20201029 09:34:33.262"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.221" endtime="20201029 09:34:33.263"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.219" endtime="20201029 09:34:33.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.270" endtime="20201029 09:34:33.556"></status>
</kw>
<msg timestamp="20201029 09:34:33.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017615514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017864278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:33.268" endtime="20201029 09:34:33.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017615514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017864278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:33.560" endtime="20201029 09:34:33.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.567" endtime="20201029 09:34:33.569"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.266" endtime="20201029 09:34:33.569"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.264" endtime="20201029 09:34:33.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:33.574" level="INFO">${PHILIP_RES} = [{'diff': 0.000248764000000002}, {'diff': 0.0002488330000000004}, {'diff': 0.000248861000000003}, {'diff': 0.0002488609999999995}, {'diff': 0.00024884799999999943}, {'diff': 0.0002488190000000008}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:33.570" endtime="20201029 09:34:33.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:33.578" level="INFO">${RESULT} = {'diff': [0.000248764000000002, 0.0002488330000000004, 0.000248861000000003, 0.0002488609999999995, 0.00024884799999999943, 0.0002488190000000008, 0.00024884699999999996, 0.0002488609999999995, 0.0002...</msg>
<status status="PASS" starttime="20201029 09:34:33.575" endtime="20201029 09:34:33.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.583" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:33.582" endtime="20201029 09:34:33.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.585" level="INFO">VALUE: [0.000248764000000002, 0.0002488330000000004, 0.000248861000000003, 0.0002488609999999995, 0.00024884799999999943, 0.0002488190000000008, 0.00024884699999999996, 0.0002488609999999995, 0.0002487919999999977, 0.0002488609999999995, 0.0002488609999999995, 0.0002488330000000004, 0.000248861999999999, 0.0002488609999999995, 0.0002488609999999995, 0.0002488609999999995, 0.0002488749999999991, 0.0002488749999999991, 0.0002488609999999995, 0.0002488749999999991, 0.000248861000000003, 0.0002488749999999991, 0.0002488609999999995, 0.0002488749999999991, 0.0002488609999999995, 0.0002488609999999995, 0.0002488609999999995, 0.0002488609999999995, 0.0002488609999999995, 0.00024887500000000257, 0.0002488329999999969, 0.00024887500000000257, 0.000248861000000003, 0.00024886099999999606, 0.00024887500000000257, 0.00024891699999999434, 0.0002487920000000046, 0.0002488470000000034, 0.0002488469999999965, 0.000248861000000003, 0.00024887499999999563, 0.000248861000000003, 0.00024887500000000257, 0.00024886199999999553, 0.00024887500000000257, 0.0002488469999999965, 0.0002488470000000034, 0.00024877699999999864, 0.000248861000000003, 0.000248861000000003]</msg>
<status status="PASS" starttime="20201029 09:34:33.584" endtime="20201029 09:34:33.586"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.579" endtime="20201029 09:34:33.586"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.218" endtime="20201029 09:34:33.587"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.195" endtime="20201029 09:34:33.587"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:33.589" endtime="20201029 09:34:33.609"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.588" endtime="20201029 09:34:33.609"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.617" endtime="20201029 09:34:33.650"></status>
</kw>
<msg timestamp="20201029 09:34:33.650" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:33.616" endtime="20201029 09:34:33.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.653" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:33.651" endtime="20201029 09:34:33.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.654" endtime="20201029 09:34:33.655"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.613" endtime="20201029 09:34:33.656"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.611" endtime="20201029 09:34:33.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.663" endtime="20201029 09:34:33.962"></status>
</kw>
<msg timestamp="20201029 09:34:33.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017649722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017912417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:33.661" endtime="20201029 09:34:33.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:33.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017649722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017912417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:33.970" endtime="20201029 09:34:33.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:33.988" endtime="20201029 09:34:33.991"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.659" endtime="20201029 09:34:33.992"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.657" endtime="20201029 09:34:33.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:33.997" level="INFO">${PHILIP_RES} = [{'diff': 0.0002626950000000003}, {'diff': 0.0002627920000000013}, {'diff': 0.0002627359999999995}, {'diff': 0.0002627359999999995}, {'diff': 0.0002627359999999995}, {'diff': 0.0002627079999999969}, {...</msg>
<status status="PASS" starttime="20201029 09:34:33.994" endtime="20201029 09:34:33.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:34.001" level="INFO">${RESULT} = {'diff': [0.0002626950000000003, 0.0002627920000000013, 0.0002627359999999995, 0.0002627359999999995, 0.0002627359999999995, 0.0002627079999999969, 0.0002627359999999995, 0.000262736000000003, 0.00026...</msg>
<status status="PASS" starttime="20201029 09:34:33.998" endtime="20201029 09:34:34.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.006" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:34.005" endtime="20201029 09:34:34.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.008" level="INFO">VALUE: [0.0002626950000000003, 0.0002627920000000013, 0.0002627359999999995, 0.0002627359999999995, 0.0002627359999999995, 0.0002627079999999969, 0.0002627359999999995, 0.000262736000000003, 0.0002627359999999995, 0.0002627230000000029, 0.00026276399999999867, 0.0002627499999999991, 0.0002627359999999995, 0.0002627359999999995, 0.0002627359999999995, 0.000262736999999999, 0.00026272299999999943, 0.00026273700000000247, 0.0002627499999999991, 0.0002627359999999995, 0.00026276400000000213, 0.0002627359999999995, 0.0002627499999999991, 0.0002627359999999995, 0.0002626950000000003, 0.0002626940000000008, 0.0002627920000000013, 0.0002627499999999991, 0.0002627499999999991, 0.0002628049999999979, 0.0002627359999999995, 0.00026275000000000603, 0.000262736999999999, 0.00026272199999999996, 0.0002627499999999991, 0.00026273600000000646, 0.00026272199999999996, 0.0002627499999999991, 0.00026272199999999996, 0.0002626810000000007, 0.000262736999999999, 0.0002627359999999995, 0.0002627499999999991, 0.00026276399999999867, 0.0002627359999999995, 0.00026272199999999996, 0.0002627499999999991, 0.0002627499999999991, 0.000262736999999999, 0.0002627499999999991]</msg>
<status status="PASS" starttime="20201029 09:34:34.007" endtime="20201029 09:34:34.009"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.002" endtime="20201029 09:34:34.009"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.610" endtime="20201029 09:34:34.010"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:33.587" endtime="20201029 09:34:34.010"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:34.012" endtime="20201029 09:34:34.032"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.011" endtime="20201029 09:34:34.032"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.040" endtime="20201029 09:34:34.074"></status>
</kw>
<msg timestamp="20201029 09:34:34.075" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.039" endtime="20201029 09:34:34.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.077" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.076" endtime="20201029 09:34:34.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.078" endtime="20201029 09:34:34.081"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.036" endtime="20201029 09:34:34.081"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.034" endtime="20201029 09:34:34.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.088" endtime="20201029 09:34:34.374"></status>
</kw>
<msg timestamp="20201029 09:34:34.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017640347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017917208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.087" endtime="20201029 09:34:34.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017640347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017917208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.378" endtime="20201029 09:34:34.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.386" endtime="20201029 09:34:34.387"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.084" endtime="20201029 09:34:34.388"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.082" endtime="20201029 09:34:34.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:34.392" level="INFO">${PHILIP_RES} = [{'diff': 0.0002768609999999998}, {'diff': 0.0002769159999999986}, {'diff': 0.0002769579999999973}, {'diff': 0.00027697200000000033}, {'diff': 0.00027687499999999934}, {'diff': 0.0002769440000000012},...</msg>
<status status="PASS" starttime="20201029 09:34:34.389" endtime="20201029 09:34:34.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:34.396" level="INFO">${RESULT} = {'diff': [0.0002768609999999998, 0.0002769159999999986, 0.0002769579999999973, 0.00027697200000000033, 0.00027687499999999934, 0.0002769440000000012, 0.00027691600000000205, 0.0002769159999999986, 0.0...</msg>
<status status="PASS" starttime="20201029 09:34:34.393" endtime="20201029 09:34:34.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.400" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:34.399" endtime="20201029 09:34:34.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.403" level="INFO">VALUE: [0.0002768609999999998, 0.0002769159999999986, 0.0002769579999999973, 0.00027697200000000033, 0.00027687499999999934, 0.0002769440000000012, 0.00027691600000000205, 0.0002769159999999986, 0.0002769300000000016, 0.0002769159999999986, 0.0002769579999999973, 0.00027690300000000195, 0.00027699999999999947, 0.0002769300000000016, 0.0002769159999999986, 0.00027695800000000076, 0.0002769300000000016, 0.0002769309999999976, 0.0002769300000000016, 0.00027691699999999805, 0.0002769029999999985, 0.0002769859999999999, 0.00027691699999999805, 0.0002769310000000011, 0.00027697200000000033, 0.0002769159999999986, 0.00027697200000000033, 0.0002769170000000015, 0.0002769310000000011, 0.0002769310000000011, 0.00027694500000000066, 0.0002769859999999999, 0.0002769310000000011, 0.000276902999999995, 0.00027690300000000195, 0.0002769310000000011, 0.0002769589999999933, 0.0002769310000000011, 0.0002769310000000011, 0.00027693099999999415, 0.0002769170000000015, 0.0002769170000000015, 0.00027694500000000066, 0.00027693099999999415, 0.0002769310000000011, 0.00027694500000000066, 0.00027693099999999415, 0.0002769310000000011, 0.00027684699999999673, 0.0002769299999999947]</msg>
<status status="PASS" starttime="20201029 09:34:34.401" endtime="20201029 09:34:34.404"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.397" endtime="20201029 09:34:34.405"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.033" endtime="20201029 09:34:34.405"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.010" endtime="20201029 09:34:34.405"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:34.408" endtime="20201029 09:34:34.427"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.406" endtime="20201029 09:34:34.428"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.436" endtime="20201029 09:34:34.471"></status>
</kw>
<msg timestamp="20201029 09:34:34.472" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.434" endtime="20201029 09:34:34.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.474" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.473" endtime="20201029 09:34:34.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.475" endtime="20201029 09:34:34.477"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.432" endtime="20201029 09:34:34.477"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.430" endtime="20201029 09:34:34.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.484" endtime="20201029 09:34:34.784"></status>
</kw>
<msg timestamp="20201029 09:34:34.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017627194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017918597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.483" endtime="20201029 09:34:34.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017627194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017918597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.793" endtime="20201029 09:34:34.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.807" endtime="20201029 09:34:34.808"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.480" endtime="20201029 09:34:34.809"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.478" endtime="20201029 09:34:34.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:34.813" level="INFO">${PHILIP_RES} = [{'diff': 0.0002914030000000026}, {'diff': 0.00029141700000000215}, {'diff': 0.0002914310000000017}, {'diff': 0.00029143000000000224}, {'diff': 0.0002914450000000013}, {'diff': 0.00029143099999999825}...</msg>
<status status="PASS" starttime="20201029 09:34:34.810" endtime="20201029 09:34:34.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:34.818" level="INFO">${RESULT} = {'diff': [0.0002914030000000026, 0.00029141700000000215, 0.0002914310000000017, 0.00029143000000000224, 0.0002914450000000013, 0.00029143099999999825, 0.0002914299999999988, 0.0002914860000000005, 0.0...</msg>
<status status="PASS" starttime="20201029 09:34:34.814" endtime="20201029 09:34:34.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.822" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:34.821" endtime="20201029 09:34:34.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.825" level="INFO">VALUE: [0.0002914030000000026, 0.00029141700000000215, 0.0002914310000000017, 0.00029143000000000224, 0.0002914450000000013, 0.00029143099999999825, 0.0002914299999999988, 0.0002914860000000005, 0.00029143099999999825, 0.0002914580000000014, 0.00029143099999999825, 0.0002914450000000013, 0.00029143000000000224, 0.0002914310000000017, 0.0002914310000000017, 0.0002914299999999988, 0.00029143099999999825, 0.0002914449999999978, 0.00029140199999999963, 0.0002914169999999987, 0.0002914169999999987, 0.00029147200000000095, 0.0002914730000000004, 0.0002914310000000017, 0.0002914159999999992, 0.0002914310000000017, 0.00029141700000000215, 0.00029143000000000224, 0.0002914299999999953, 0.0002914440000000018, 0.0002914439999999949, 0.00029151399999999966, 0.0002914309999999948, 0.0002914860000000005, 0.00029145900000000086, 0.0002914310000000017, 0.00029137500000000344, 0.00029136100000000387, 0.0002914310000000017, 0.0002914160000000027, 0.00029141700000000215, 0.00029141700000000215, 0.00029143000000000224, 0.0002914030000000026, 0.00029143000000000224, 0.00029143000000000224, 0.0002914450000000013, 0.0002914580000000014, 0.00029140299999999564, 0.0002914310000000017]</msg>
<status status="PASS" starttime="20201029 09:34:34.824" endtime="20201029 09:34:34.826"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.819" endtime="20201029 09:34:34.826"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.428" endtime="20201029 09:34:34.827"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.406" endtime="20201029 09:34:34.827"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:34.829" endtime="20201029 09:34:34.849"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.828" endtime="20201029 09:34:34.849"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.857" endtime="20201029 09:34:34.893"></status>
</kw>
<msg timestamp="20201029 09:34:34.894" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.856" endtime="20201029 09:34:34.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:34.896" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:34.895" endtime="20201029 09:34:34.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.897" endtime="20201029 09:34:34.899"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.853" endtime="20201029 09:34:34.899"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.851" endtime="20201029 09:34:34.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:34.906" endtime="20201029 09:34:35.193"></status>
</kw>
<msg timestamp="20201029 09:34:35.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018048847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018355069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:34.905" endtime="20201029 09:34:35.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018048847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018355069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:35.197" endtime="20201029 09:34:35.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.204" endtime="20201029 09:34:35.206"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.902" endtime="20201029 09:34:35.207"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.900" endtime="20201029 09:34:35.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:35.211" level="INFO">${PHILIP_RES} = [{'diff': 0.0003062220000000018}, {'diff': 0.00030626400000000054}, {'diff': 0.0003062919999999997}, {'diff': 0.0003062359999999979}, {'diff': 0.00030630499999999977}, {'diff': 0.00030620900000000173}...</msg>
<status status="PASS" starttime="20201029 09:34:35.208" endtime="20201029 09:34:35.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:35.215" level="INFO">${RESULT} = {'diff': [0.0003062220000000018, 0.00030626400000000054, 0.0003062919999999997, 0.0003062359999999979, 0.00030630499999999977, 0.00030620900000000173, 0.0003061660000000001, 0.00030625000000000097, 0....</msg>
<status status="PASS" starttime="20201029 09:34:35.212" endtime="20201029 09:34:35.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.220" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:35.219" endtime="20201029 09:34:35.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.223" level="INFO">VALUE: [0.0003062220000000018, 0.00030626400000000054, 0.0003062919999999997, 0.0003062359999999979, 0.00030630499999999977, 0.00030620900000000173, 0.0003061660000000001, 0.00030625000000000097, 0.00030625000000000097, 0.00030625000000000097, 0.00030623700000000087, 0.00030625000000000097, 0.0003062360000000014, 0.00030625000000000097, 0.00030627700000000063, 0.0003062230000000013, 0.00030625000000000097, 0.00030625000000000097, 0.00030630499999999977, 0.00030620900000000173, 0.00030625000000000097, 0.00030623700000000087, 0.00030625000000000097, 0.0003062220000000018, 0.00030625000000000097, 0.00030625000000000097, 0.0003062230000000013, 0.0003062220000000018, 0.00030626400000000054, 0.00030625000000000097, 0.0003062360000000014, 0.0003062919999999997, 0.00030625000000000097, 0.0003062220000000018, 0.0003062360000000014, 0.00030625000000000097, 0.00030623700000000087, 0.0003062360000000014, 0.0003062360000000014, 0.00030626400000000054, 0.0003062360000000014, 0.0003062360000000014, 0.0003062220000000018, 0.0003062780000000001, 0.00030626400000000054, 0.0003062360000000014, 0.0003062360000000014, 0.0003062780000000001, 0.00030626400000000054, 0.0003062360000000014]</msg>
<status status="PASS" starttime="20201029 09:34:35.221" endtime="20201029 09:34:35.223"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.216" endtime="20201029 09:34:35.224"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.850" endtime="20201029 09:34:35.224"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:34.827" endtime="20201029 09:34:35.224"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:35.227" endtime="20201029 09:34:35.247"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.225" endtime="20201029 09:34:35.247"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.262" endtime="20201029 09:34:35.300"></status>
</kw>
<msg timestamp="20201029 09:34:35.301" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:35.261" endtime="20201029 09:34:35.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.303" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:35.302" endtime="20201029 09:34:35.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.304" endtime="20201029 09:34:35.307"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.255" endtime="20201029 09:34:35.307"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.253" endtime="20201029 09:34:35.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.314" endtime="20201029 09:34:35.614"></status>
</kw>
<msg timestamp="20201029 09:34:35.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025384403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02570575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:35.313" endtime="20201029 09:34:35.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025384403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02570575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:35.618" endtime="20201029 09:34:35.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.626" endtime="20201029 09:34:35.628"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.310" endtime="20201029 09:34:35.628"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.308" endtime="20201029 09:34:35.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:35.633" level="INFO">${PHILIP_RES} = [{'diff': 0.0003213469999999996}, {'diff': 0.00032136199999999865}, {'diff': 0.0003213750000000022}, {'diff': 0.0003213889999999983}, {'diff': 0.00032141600000000145}, {'diff': 0.00032133300000000004}...</msg>
<status status="PASS" starttime="20201029 09:34:35.630" endtime="20201029 09:34:35.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:35.637" level="INFO">${RESULT} = {'diff': [0.0003213469999999996, 0.00032136199999999865, 0.0003213750000000022, 0.0003213889999999983, 0.00032141600000000145, 0.00032133300000000004, 0.0003213469999999996, 0.0003213890000000018, 0.0...</msg>
<status status="PASS" starttime="20201029 09:34:35.634" endtime="20201029 09:34:35.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.641" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:35.640" endtime="20201029 09:34:35.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.644" level="INFO">VALUE: [0.0003213469999999996, 0.00032136199999999865, 0.0003213750000000022, 0.0003213889999999983, 0.00032141600000000145, 0.00032133300000000004, 0.0003213469999999996, 0.0003213890000000018, 0.0003212920000000008, 0.0003213609999999992, 0.0003213609999999992, 0.0003213609999999992, 0.00032138799999999884, 0.0003213889999999983, 0.0003213609999999992, 0.00032137499999999875, 0.00032138900000000525, 0.0003213469999999996, 0.0003213889999999983, 0.0003213889999999983, 0.00032143100000000396, 0.00032138799999999884, 0.0003213750000000057, 0.0003213479999999991, 0.0003213889999999983, 0.0003213469999999996, 0.00032131999999999994, 0.0003213609999999992, 0.0003213610000000061, 0.00032137499999999875, 0.00032137499999999875, 0.0003213609999999992, 0.00032138799999999884, 0.0003213609999999992, 0.0003213609999999992, 0.00032137499999999875, 0.00032137499999999875, 0.00032137499999999875, 0.0003213469999999996, 0.0003213609999999992, 0.0003213609999999992, 0.00032141699999999745, 0.00032137499999999875, 0.00032136199999999865, 0.0003213609999999992, 0.0003213469999999996, 0.0003213750000000057, 0.00032131900000000047, 0.00032137499999999875, 0.00032137499999999875]</msg>
<status status="PASS" starttime="20201029 09:34:35.642" endtime="20201029 09:34:35.645"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.638" endtime="20201029 09:34:35.646"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.249" endtime="20201029 09:34:35.646"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.225" endtime="20201029 09:34:35.646"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:35.649" endtime="20201029 09:34:35.668"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.647" endtime="20201029 09:34:35.669"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.677" endtime="20201029 09:34:35.716"></status>
</kw>
<msg timestamp="20201029 09:34:35.716" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:35.675" endtime="20201029 09:34:35.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:35.719" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:35.717" endtime="20201029 09:34:35.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.720" endtime="20201029 09:34:35.721"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.673" endtime="20201029 09:34:35.722"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.671" endtime="20201029 09:34:35.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:35.729" endtime="20201029 09:34:36.016"></status>
</kw>
<msg timestamp="20201029 09:34:36.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018002042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018338806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:35.727" endtime="20201029 09:34:36.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018002042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018338806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:36.021" endtime="20201029 09:34:36.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.029" endtime="20201029 09:34:36.030"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.725" endtime="20201029 09:34:36.031"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.723" endtime="20201029 09:34:36.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:36.035" level="INFO">${PHILIP_RES} = [{'diff': 0.0003367639999999998}, {'diff': 0.00033680499999999905}, {'diff': 0.0003368059999999985}, {'diff': 0.00033680499999999905}, {'diff': 0.000336806000000002}, {'diff': 0.0003367639999999998}, ...</msg>
<status status="PASS" starttime="20201029 09:34:36.032" endtime="20201029 09:34:36.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:36.040" level="INFO">${RESULT} = {'diff': [0.0003367639999999998, 0.00033680499999999905, 0.0003368059999999985, 0.00033680499999999905, 0.000336806000000002, 0.0003367639999999998, 0.0003368190000000021, 0.000336806000000002, 0.0003...</msg>
<status status="PASS" starttime="20201029 09:34:36.036" endtime="20201029 09:34:36.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.044" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:36.043" endtime="20201029 09:34:36.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.047" level="INFO">VALUE: [0.0003367639999999998, 0.00033680499999999905, 0.0003368059999999985, 0.00033680499999999905, 0.000336806000000002, 0.0003367639999999998, 0.0003368190000000021, 0.000336806000000002, 0.0003368050000000025, 0.000336806000000002, 0.00033680499999999905, 0.00033679199999999895, 0.00033679199999999895, 0.00033684699999999776, 0.0003368059999999985, 0.0003367909999999995, 0.0003368199999999981, 0.00033675000000000024, 0.00033680499999999905, 0.0003367639999999998, 0.0003368189999999986, 0.0003368059999999985, 0.0003368190000000021, 0.00033681899999999515, 0.00033682000000000156, 0.0003368049999999956, 0.00033683400000000113, 0.0003368049999999956, 0.000336806000000002, 0.00033681899999999515, 0.00033679100000000295, 0.00033680599999999505, 0.0003368050000000025, 0.00033683400000000113, 0.0003367229999999971, 0.0003367920000000024, 0.0003368610000000008, 0.00033679100000000295, 0.000336806000000002, 0.0003368050000000025, 0.00033681899999999515, 0.0003367640000000033, 0.00033681899999999515, 0.000336806000000002, 0.0003368049999999956, 0.0003367640000000033, 0.0003367779999999959, 0.0003368050000000025, 0.00033680599999999505, 0.0003368190000000021]</msg>
<status status="PASS" starttime="20201029 09:34:36.045" endtime="20201029 09:34:36.048"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.041" endtime="20201029 09:34:36.048"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.669" endtime="20201029 09:34:36.048"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:35.647" endtime="20201029 09:34:36.049"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:36.051" endtime="20201029 09:34:36.070"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.050" endtime="20201029 09:34:36.071"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.079" endtime="20201029 09:34:36.119"></status>
</kw>
<msg timestamp="20201029 09:34:36.119" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.078" endtime="20201029 09:34:36.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.122" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.121" endtime="20201029 09:34:36.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.123" endtime="20201029 09:34:36.125"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.075" endtime="20201029 09:34:36.125"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.073" endtime="20201029 09:34:36.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.132" endtime="20201029 09:34:36.436"></status>
</kw>
<msg timestamp="20201029 09:34:36.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017723264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01807575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:36.131" endtime="20201029 09:34:36.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017723264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01807575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:34:36.440" endtime="20201029 09:34:36.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.447" endtime="20201029 09:34:36.449"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.128" endtime="20201029 09:34:36.449"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.126" endtime="20201029 09:34:36.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:36.454" level="INFO">${PHILIP_RES} = [{'diff': 0.00035248600000000255}, {'diff': 0.0003525690000000005}, {'diff': 0.00035258300000000006}, {'diff': 0.00035258399999999954}, {'diff': 0.000352584000000003}, {'diff': 0.00035255499999999745}...</msg>
<status status="PASS" starttime="20201029 09:34:36.451" endtime="20201029 09:34:36.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:36.458" level="INFO">${RESULT} = {'diff': [0.00035248600000000255, 0.0003525690000000005, 0.00035258300000000006, 0.00035258399999999954, 0.000352584000000003, 0.00035255499999999745, 0.00035254100000000135, 0.0003525560000000004, 0....</msg>
<status status="PASS" starttime="20201029 09:34:36.455" endtime="20201029 09:34:36.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.462" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:36.461" endtime="20201029 09:34:36.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.464" level="INFO">VALUE: [0.00035248600000000255, 0.0003525690000000005, 0.00035258300000000006, 0.00035258399999999954, 0.000352584000000003, 0.00035255499999999745, 0.00035254100000000135, 0.0003525560000000004, 0.0003525560000000004, 0.00035255499999999745, 0.0003525409999999979, 0.00035256999999999997, 0.0003525690000000005, 0.00035258300000000006, 0.0003525139999999982, 0.00035255599999999693, 0.0003525560000000004, 0.0003525000000000021, 0.00035252800000000126, 0.0003525550000000009, 0.00035254199999999736, 0.00035255600000000387, 0.00035258300000000353, 0.00035259699999999616, 0.000352568999999997, 0.00035258399999999607, 0.00035255499999999745, 0.00035255499999999745, 0.000352472999999999, 0.00035255600000000387, 0.00035257000000000344, 0.0003525550000000044, 0.00035258300000000353, 0.000352584000000003, 0.0003526119999999952, 0.0003525279999999978, 0.00035262500000000224, 0.00035255599999999693, 0.0003525699999999965, 0.0003525420000000043, 0.0003525550000000044, 0.00035256900000000396, 0.000352584000000003, 0.000352568999999997, 0.000352568999999997, 0.0003525829999999966, 0.00035254199999999736, 0.00035254199999999736, 0.0003525279999999978, 0.00035255499999999745]</msg>
<status status="PASS" starttime="20201029 09:34:36.463" endtime="20201029 09:34:36.465"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.459" endtime="20201029 09:34:36.466"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.071" endtime="20201029 09:34:36.466"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.049" endtime="20201029 09:34:36.466"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:36.469" endtime="20201029 09:34:36.488"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.467" endtime="20201029 09:34:36.489"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.497" endtime="20201029 09:34:36.538"></status>
</kw>
<msg timestamp="20201029 09:34:36.539" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.495" endtime="20201029 09:34:36.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.541" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.540" endtime="20201029 09:34:36.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.543" endtime="20201029 09:34:36.545"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.493" endtime="20201029 09:34:36.546"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.491" endtime="20201029 09:34:36.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.552" endtime="20201029 09:34:36.838"></status>
</kw>
<msg timestamp="20201029 09:34:36.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017611639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017980222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:36.551" endtime="20201029 09:34:36.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017611639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017980222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:36.842" endtime="20201029 09:34:36.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.849" endtime="20201029 09:34:36.851"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.548" endtime="20201029 09:34:36.852"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.547" endtime="20201029 09:34:36.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:36.856" level="INFO">${PHILIP_RES} = [{'diff': 0.0003685830000000022}, {'diff': 0.0003685560000000025}, {'diff': 0.0003686249999999974}, {'diff': 0.0003686250000000009}, {'diff': 0.00036859800000000123}, {'diff': 0.00036863900000000047},...</msg>
<status status="PASS" starttime="20201029 09:34:36.853" endtime="20201029 09:34:36.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:36.860" level="INFO">${RESULT} = {'diff': [0.0003685830000000022, 0.0003685560000000025, 0.0003686249999999974, 0.0003686250000000009, 0.00036859800000000123, 0.00036863900000000047, 0.000368638999999997, 0.00036865300000000004, 0.00...</msg>
<status status="PASS" starttime="20201029 09:34:36.857" endtime="20201029 09:34:36.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.864" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:36.863" endtime="20201029 09:34:36.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.867" level="INFO">VALUE: [0.0003685830000000022, 0.0003685560000000025, 0.0003686249999999974, 0.0003686250000000009, 0.00036859800000000123, 0.00036863900000000047, 0.000368638999999997, 0.00036865300000000004, 0.00036859700000000176, 0.0003686120000000008, 0.0003686249999999974, 0.00036859700000000176, 0.0003686250000000009, 0.0003686249999999974, 0.0003686250000000009, 0.0003686110000000013, 0.00036865300000000004, 0.00036863900000000047, 0.00036863900000000047, 0.0003686250000000009, 0.0003686250000000009, 0.00036862500000000437, 0.00036862500000000437, 0.00036863900000000394, 0.0003686670000000031, 0.0003686249999999974, 0.0003686249999999974, 0.0003685969999999983, 0.00036862500000000437, 0.00036863900000000394, 0.00036862500000000437, 0.000368638999999997, 0.0003686249999999974, 0.00036859799999999776, 0.0003685969999999983, 0.00036861099999999786, 0.00036863900000000394, 0.0003686110000000048, 0.0003685549999999996, 0.0003686249999999974, 0.000368638999999997, 0.0003685699999999986, 0.0003686249999999974, 0.0003685969999999983, 0.0003686110000000048, 0.00036862500000000437, 0.00036861199999999733, 0.00036861099999999786, 0.00036865299999999657, 0.0003686249999999974]</msg>
<status status="PASS" starttime="20201029 09:34:36.865" endtime="20201029 09:34:36.868"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.861" endtime="20201029 09:34:36.869"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.489" endtime="20201029 09:34:36.869"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.467" endtime="20201029 09:34:36.869"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:36.872" endtime="20201029 09:34:36.891"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.870" endtime="20201029 09:34:36.892"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.900" endtime="20201029 09:34:36.941"></status>
</kw>
<msg timestamp="20201029 09:34:36.942" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.898" endtime="20201029 09:34:36.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:36.944" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:36.943" endtime="20201029 09:34:36.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.945" endtime="20201029 09:34:36.947"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.896" endtime="20201029 09:34:36.947"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.894" endtime="20201029 09:34:36.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:36.954" endtime="20201029 09:34:37.256"></status>
</kw>
<msg timestamp="20201029 09:34:37.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017475764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017860708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:36.953" endtime="20201029 09:34:37.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017475764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017860708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:37.260" endtime="20201029 09:34:37.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.267" endtime="20201029 09:34:37.269"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.950" endtime="20201029 09:34:37.270"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.948" endtime="20201029 09:34:37.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:37.274" level="INFO">${PHILIP_RES} = [{'diff': 0.0003849439999999982}, {'diff': 0.0003850139999999995}, {'diff': 0.0003849859999999969}, {'diff': 0.0003849999999999999}, {'diff': 0.00038504199999999864}, {'diff': 0.00038498600000000036},...</msg>
<status status="PASS" starttime="20201029 09:34:37.271" endtime="20201029 09:34:37.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:37.279" level="INFO">${RESULT} = {'diff': [0.0003849439999999982, 0.0003850139999999995, 0.0003849859999999969, 0.0003849999999999999, 0.00038504199999999864, 0.00038498600000000036, 0.0003849999999999999, 0.0003850139999999995, 0.00...</msg>
<status status="PASS" starttime="20201029 09:34:37.275" endtime="20201029 09:34:37.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.283" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:37.282" endtime="20201029 09:34:37.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.286" level="INFO">VALUE: [0.0003849439999999982, 0.0003850139999999995, 0.0003849859999999969, 0.0003849999999999999, 0.00038504199999999864, 0.00038498600000000036, 0.0003849999999999999, 0.0003850139999999995, 0.0003849999999999999, 0.0003850000000000034, 0.0003849999999999999, 0.00038498600000000036, 0.0003849999999999999, 0.0003850269999999996, 0.0003849999999999999, 0.00038498600000000036, 0.0003850269999999996, 0.0003849999999999999, 0.00038497300000000026, 0.0003849999999999999, 0.0003850000000000034, 0.0003849859999999969, 0.00038499999999999646, 0.000385013999999996, 0.00038501400000000296, 0.0003849860000000038, 0.0003850420000000021, 0.0003850000000000034, 0.00038499999999999646, 0.000385013999999996, 0.0003849439999999982, 0.0003849860000000038, 0.00038501400000000296, 0.00038501400000000296, 0.0003849859999999969, 0.000385013999999996, 0.00038499999999999646, 0.0003850000000000034, 0.0003849860000000038, 0.0003850000000000034, 0.0003850000000000034, 0.0003850279999999956, 0.0003849719999999973, 0.00038499999999999646, 0.0003850000000000034, 0.0003850000000000034, 0.0003850000000000034, 0.00038502800000000253, 0.00038499999999999646, 0.00038499999999999646]</msg>
<status status="PASS" starttime="20201029 09:34:37.284" endtime="20201029 09:34:37.286"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.280" endtime="20201029 09:34:37.287"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.892" endtime="20201029 09:34:37.287"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:36.870" endtime="20201029 09:34:37.287"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:37.290" endtime="20201029 09:34:37.309"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.288" endtime="20201029 09:34:37.310"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.318" endtime="20201029 09:34:37.362"></status>
</kw>
<msg timestamp="20201029 09:34:37.362" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:37.316" endtime="20201029 09:34:37.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.365" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:37.363" endtime="20201029 09:34:37.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.366" endtime="20201029 09:34:37.367"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.314" endtime="20201029 09:34:37.368"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.312" endtime="20201029 09:34:37.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.375" endtime="20201029 09:34:37.663"></status>
</kw>
<msg timestamp="20201029 09:34:37.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017478778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017880444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:37.373" endtime="20201029 09:34:37.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017478778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017880444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:37.667" endtime="20201029 09:34:37.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.675" endtime="20201029 09:34:37.676"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.371" endtime="20201029 09:34:37.677"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.369" endtime="20201029 09:34:37.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:37.681" level="INFO">${PHILIP_RES} = [{'diff': 0.00040166599999999844}, {'diff': 0.0004016950000000005}, {'diff': 0.00040169400000000105}, {'diff': 0.000401679999999998}, {'diff': 0.000401679999999998}, {'diff': 0.00040168100000000095}, ...</msg>
<status status="PASS" starttime="20201029 09:34:37.678" endtime="20201029 09:34:37.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:37.685" level="INFO">${RESULT} = {'diff': [0.00040166599999999844, 0.0004016950000000005, 0.00040169400000000105, 0.000401679999999998, 0.000401679999999998, 0.00040168100000000095, 0.0004016950000000005, 0.0004016950000000005, 0.000...</msg>
<status status="PASS" starttime="20201029 09:34:37.682" endtime="20201029 09:34:37.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.690" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:37.689" endtime="20201029 09:34:37.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.692" level="INFO">VALUE: [0.00040166599999999844, 0.0004016950000000005, 0.00040169400000000105, 0.000401679999999998, 0.000401679999999998, 0.00040168100000000095, 0.0004016950000000005, 0.0004016950000000005, 0.0004017080000000006, 0.00040174999999999933, 0.0004016800000000015, 0.0004016950000000005, 0.00040168100000000095, 0.0004016389999999988, 0.0004017370000000027, 0.000401679999999998, 0.0004017080000000006, 0.00040165199999999887, 0.0004016809999999975, 0.0004016670000000014, 0.00040173599999999976, 0.0004016660000000019, 0.0004017080000000006, 0.0004016519999999954, 0.0004016950000000005, 0.0004017090000000001, 0.0004016949999999936, 0.00040167999999999454, 0.0004016939999999941, 0.00040167999999999454, 0.0004016250000000027, 0.00040168100000000095, 0.00040168100000000095, 0.00040169400000000105, 0.00040163900000000224, 0.00040169400000000105, 0.0004016950000000005, 0.0004016950000000005, 0.00040173699999999923, 0.0004017220000000002, 0.00040169400000000105, 0.00040169400000000105, 0.0004016950000000005, 0.00040163900000000224, 0.0004016950000000005, 0.0004017220000000002, 0.00040163900000000224, 0.0004016800000000015, 0.0004016660000000019, 0.0004016950000000005]</msg>
<status status="PASS" starttime="20201029 09:34:37.691" endtime="20201029 09:34:37.693"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.686" endtime="20201029 09:34:37.693"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.310" endtime="20201029 09:34:37.694"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.288" endtime="20201029 09:34:37.694"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:37.696" endtime="20201029 09:34:37.716"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.695" endtime="20201029 09:34:37.716"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.724" endtime="20201029 09:34:37.770"></status>
</kw>
<msg timestamp="20201029 09:34:37.770" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:37.723" endtime="20201029 09:34:37.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:37.773" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:37.771" endtime="20201029 09:34:37.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.774" endtime="20201029 09:34:37.776"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.720" endtime="20201029 09:34:37.777"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.718" endtime="20201029 09:34:37.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:37.784" endtime="20201029 09:34:38.087"></status>
</kw>
<msg timestamp="20201029 09:34:38.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017477847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0178965, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:37.782" endtime="20201029 09:34:38.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017477847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0178965, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:34:38.091" endtime="20201029 09:34:38.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.099" endtime="20201029 09:34:38.100"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.780" endtime="20201029 09:34:38.101"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.778" endtime="20201029 09:34:38.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:38.105" level="INFO">${PHILIP_RES} = [{'diff': 0.000418652999999998}, {'diff': 0.0004186810000000006}, {'diff': 0.000418749999999999}, {'diff': 0.0004186810000000006}, {'diff': 0.00041867999999999767}, {'diff': 0.0004186940000000007}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:38.102" endtime="20201029 09:34:38.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:38.109" level="INFO">${RESULT} = {'diff': [0.000418652999999998, 0.0004186810000000006, 0.000418749999999999, 0.0004186810000000006, 0.00041867999999999767, 0.0004186940000000007, 0.0004187080000000003, 0.0004186810000000006, 0.00041...</msg>
<status status="PASS" starttime="20201029 09:34:38.106" endtime="20201029 09:34:38.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.114" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:38.112" endtime="20201029 09:34:38.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.120" level="INFO">VALUE: [0.000418652999999998, 0.0004186810000000006, 0.000418749999999999, 0.0004186810000000006, 0.00041867999999999767, 0.0004186940000000007, 0.0004187080000000003, 0.0004186810000000006, 0.0004186810000000006, 0.0004186940000000007, 0.0004187080000000003, 0.00041870899999999975, 0.00041866700000000104, 0.00041870899999999975, 0.00041868000000000113, 0.0004187080000000003, 0.00041869399999999724, 0.00041868099999999714, 0.0004186950000000002, 0.0004186810000000041, 0.00041869399999999724, 0.00041875000000000245, 0.0004187090000000032, 0.00041868099999999714, 0.0004187220000000033, 0.00041869399999999724, 0.00041869399999999724, 0.0004186810000000041, 0.0004187089999999963, 0.0004187220000000033, 0.0004186659999999981, 0.0004186940000000042, 0.0004186949999999967, 0.0004186949999999967, 0.0004186810000000041, 0.0004187780000000016, 0.0004186940000000042, 0.00041869399999999724, 0.00041869500000000365, 0.0004186949999999967, 0.00041867999999999767, 0.0004186940000000042, 0.00041868099999999714, 0.00041869500000000365, 0.0004186949999999967, 0.00041869399999999724, 0.00041863899999999843, 0.00041869399999999724, 0.0004186810000000041, 0.0004186949999999967]</msg>
<status status="PASS" starttime="20201029 09:34:38.118" endtime="20201029 09:34:38.125"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.110" endtime="20201029 09:34:38.126"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.717" endtime="20201029 09:34:38.126"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:37.694" endtime="20201029 09:34:38.126"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:38.129" endtime="20201029 09:34:38.150"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.127" endtime="20201029 09:34:38.151"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.159" endtime="20201029 09:34:38.206"></status>
</kw>
<msg timestamp="20201029 09:34:38.206" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:38.158" endtime="20201029 09:34:38.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.209" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:38.207" endtime="20201029 09:34:38.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.210" endtime="20201029 09:34:38.211"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.155" endtime="20201029 09:34:38.212"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.153" endtime="20201029 09:34:38.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.219" endtime="20201029 09:34:38.505"></status>
</kw>
<msg timestamp="20201029 09:34:38.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019829056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020265014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:38.217" endtime="20201029 09:34:38.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019829056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020265014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:38.509" endtime="20201029 09:34:38.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.516" endtime="20201029 09:34:38.518"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.215" endtime="20201029 09:34:38.519"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.213" endtime="20201029 09:34:38.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:38.523" level="INFO">${PHILIP_RES} = [{'diff': 0.0004359580000000002}, {'diff': 0.00043601400000000193}, {'diff': 0.0004360410000000016}, {'diff': 0.00043600000000000236}, {'diff': 0.00043601400000000193}, {'diff': 0.00043601400000000193...</msg>
<status status="PASS" starttime="20201029 09:34:38.520" endtime="20201029 09:34:38.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:38.528" level="INFO">${RESULT} = {'diff': [0.0004359580000000002, 0.00043601400000000193, 0.0004360410000000016, 0.00043600000000000236, 0.00043601400000000193, 0.00043601400000000193, 0.0004359999999999989, 0.00043601400000000193, 0...</msg>
<status status="PASS" starttime="20201029 09:34:38.524" endtime="20201029 09:34:38.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.532" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:38.531" endtime="20201029 09:34:38.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.535" level="INFO">VALUE: [0.0004359580000000002, 0.00043601400000000193, 0.0004360410000000016, 0.00043600000000000236, 0.00043601400000000193, 0.00043601400000000193, 0.0004359999999999989, 0.00043601400000000193, 0.00043608299999999683, 0.00043601400000000193, 0.00043600000000000236, 0.0004359859999999993, 0.00043601399999999846, 0.0004360419999999976, 0.00043601399999999846, 0.0004360140000000054, 0.00043600000000000583, 0.0004359440000000006, 0.00043602799999999803, 0.0004360140000000054, 0.0004360140000000054, 0.00043602800000000497, 0.00043591700000000094, 0.00043604100000000506, 0.0004359999999999989, 0.0004359999999999989, 0.0004359869999999988, 0.0004359999999999989, 0.00043597199999999975, 0.00043601399999999846, 0.00043601399999999846, 0.00043601399999999846, 0.00043602799999999803, 0.0004359440000000006, 0.0004359999999999989, 0.0004359999999999989, 0.00043601399999999846, 0.00043601399999999846, 0.0004359580000000002, 0.0004360549999999977, 0.0004359999999999989, 0.0004359999999999989, 0.00043601399999999846, 0.0004359729999999992, 0.0004359869999999988, 0.0004359999999999989, 0.000436012999999999, 0.00043601399999999846, 0.00043601399999999846, 0.0004359999999999989]</msg>
<status status="PASS" starttime="20201029 09:34:38.533" endtime="20201029 09:34:38.535"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.529" endtime="20201029 09:34:38.536"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.151" endtime="20201029 09:34:38.536"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.127" endtime="20201029 09:34:38.537"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:38.539" endtime="20201029 09:34:38.558"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.538" endtime="20201029 09:34:38.559"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.567" endtime="20201029 09:34:38.615"></status>
</kw>
<msg timestamp="20201029 09:34:38.616" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:38.565" endtime="20201029 09:34:38.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.618" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:38.617" endtime="20201029 09:34:38.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.619" endtime="20201029 09:34:38.621"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.563" endtime="20201029 09:34:38.621"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.561" endtime="20201029 09:34:38.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.628" endtime="20201029 09:34:38.929"></status>
</kw>
<msg timestamp="20201029 09:34:38.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017575194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018028792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:38.627" endtime="20201029 09:34:38.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017575194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018028792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:38.933" endtime="20201029 09:34:38.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.941" endtime="20201029 09:34:38.943"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.624" endtime="20201029 09:34:38.943"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.622" endtime="20201029 09:34:38.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:38.947" level="INFO">${PHILIP_RES} = [{'diff': 0.0004535979999999995}, {'diff': 0.0004536529999999983}, {'diff': 0.0004536530000000018}, {'diff': 0.0004537080000000006}, {'diff': 0.0004536390000000022}, {'diff': 0.0004536109999999996}, {...</msg>
<status status="PASS" starttime="20201029 09:34:38.944" endtime="20201029 09:34:38.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:38.951" level="INFO">${RESULT} = {'diff': [0.0004535979999999995, 0.0004536529999999983, 0.0004536530000000018, 0.0004537080000000006, 0.0004536390000000022, 0.0004536109999999996, 0.00045362499999999917, 0.00045363899999999874, 0.00...</msg>
<status status="PASS" starttime="20201029 09:34:38.948" endtime="20201029 09:34:38.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.956" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:38.955" endtime="20201029 09:34:38.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:38.958" level="INFO">VALUE: [0.0004535979999999995, 0.0004536529999999983, 0.0004536530000000018, 0.0004537080000000006, 0.0004536390000000022, 0.0004536109999999996, 0.00045362499999999917, 0.00045363899999999874, 0.00045361199999999907, 0.0004536109999999996, 0.0004536530000000018, 0.00045366700000000135, 0.00045363899999999874, 0.00045363799999999926, 0.00045363899999999874, 0.00045365199999999883, 0.00045362499999999917, 0.0004536250000000061, 0.00045362499999999917, 0.0004536529999999983, 0.00045363899999999874, 0.00045362499999999917, 0.0004536390000000057, 0.0004536529999999983, 0.0004536529999999983, 0.00045362499999999917, 0.00045363899999999874, 0.0004536529999999983, 0.00045365300000000525, 0.00045369399999999754, 0.00045362499999999917, 0.00045363899999999874, 0.0004537219999999967, 0.00045365300000000525, 0.00045362499999999917, 0.0004536109999999996, 0.0004537079999999971, 0.00045363899999999874, 0.0004536250000000061, 0.0004536800000000049, 0.00045362499999999917, 0.00045362499999999917, 0.00045363899999999874, 0.0004536669999999979, 0.00045365300000000525, 0.0004535550000000013, 0.0004536529999999983, 0.00045363799999999926, 0.0004536109999999996, 0.0004536250000000061]</msg>
<status status="PASS" starttime="20201029 09:34:38.957" endtime="20201029 09:34:38.959"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.952" endtime="20201029 09:34:38.959"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.559" endtime="20201029 09:34:38.960"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.537" endtime="20201029 09:34:38.960"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:38.962" endtime="20201029 09:34:38.982"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.961" endtime="20201029 09:34:38.982"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:38.990" endtime="20201029 09:34:39.040"></status>
</kw>
<msg timestamp="20201029 09:34:39.040" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:38.989" endtime="20201029 09:34:39.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.043" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:39.041" endtime="20201029 09:34:39.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.044" endtime="20201029 09:34:39.046"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.986" endtime="20201029 09:34:39.047"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.984" endtime="20201029 09:34:39.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.053" endtime="20201029 09:34:39.339"></status>
</kw>
<msg timestamp="20201029 09:34:39.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017733056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018204583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:39.052" endtime="20201029 09:34:39.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017733056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018204583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:39.343" endtime="20201029 09:34:39.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.351" endtime="20201029 09:34:39.352"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.049" endtime="20201029 09:34:39.353"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.048" endtime="20201029 09:34:39.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:39.357" level="INFO">${PHILIP_RES} = [{'diff': 0.00047152699999999936}, {'diff': 0.00047156900000000154}, {'diff': 0.00047156999999999755}, {'diff': 0.0004715970000000007}, {'diff': 0.0004715280000000023}, {'diff': 0.00047156999999999755...</msg>
<status status="PASS" starttime="20201029 09:34:39.354" endtime="20201029 09:34:39.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:39.361" level="INFO">${RESULT} = {'diff': [0.00047152699999999936, 0.00047156900000000154, 0.00047156999999999755, 0.0004715970000000007, 0.0004715280000000023, 0.00047156999999999755, 0.0004716249999999998, 0.0004715689999999981, 0....</msg>
<status status="PASS" starttime="20201029 09:34:39.358" endtime="20201029 09:34:39.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.365" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:39.364" endtime="20201029 09:34:39.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.368" level="INFO">VALUE: [0.00047152699999999936, 0.00047156900000000154, 0.00047156999999999755, 0.0004715970000000007, 0.0004715280000000023, 0.00047156999999999755, 0.0004716249999999998, 0.0004715689999999981, 0.0004715549999999985, 0.00047155600000000145, 0.0004715840000000006, 0.0004715689999999981, 0.00047155500000000197, 0.00047156999999999755, 0.0004715970000000007, 0.0004715970000000007, 0.00047156900000000154, 0.0004715830000000046, 0.0004715689999999981, 0.0004715689999999981, 0.00047156999999999755, 0.0004715700000000045, 0.0004715830000000046, 0.0004715689999999981, 0.00047161199999999626, 0.00047156999999999755, 0.00047158299999999764, 0.0004715700000000045, 0.00047156999999999755, 0.00047158299999999764, 0.0004715689999999981, 0.0004715419999999984, 0.0004715700000000045, 0.00047155500000000544, 0.0004715969999999972, 0.000471555999999998, 0.0004715839999999971, 0.00047154099999999893, 0.0004715830000000046, 0.0004715700000000045, 0.00047156999999999755, 0.0004715689999999981, 0.00047158299999999764, 0.00047158400000000406, 0.0004716110000000037, 0.0004715689999999981, 0.0004715839999999971, 0.000471555999999998, 0.00047158299999999764, 0.000471569000000005]</msg>
<status status="PASS" starttime="20201029 09:34:39.366" endtime="20201029 09:34:39.373"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.362" endtime="20201029 09:34:39.374"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.983" endtime="20201029 09:34:39.374"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:38.960" endtime="20201029 09:34:39.374"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:39.377" endtime="20201029 09:34:39.396"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.375" endtime="20201029 09:34:39.397"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.404" endtime="20201029 09:34:39.455"></status>
</kw>
<msg timestamp="20201029 09:34:39.456" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:39.403" endtime="20201029 09:34:39.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.458" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:39.457" endtime="20201029 09:34:39.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.459" endtime="20201029 09:34:39.461"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.400" endtime="20201029 09:34:39.461"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.399" endtime="20201029 09:34:39.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.468" endtime="20201029 09:34:39.769"></status>
</kw>
<msg timestamp="20201029 09:34:39.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017555306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018045097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:39.467" endtime="20201029 09:34:39.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017555306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018045097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:39.773" endtime="20201029 09:34:39.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.781" endtime="20201029 09:34:39.783"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.464" endtime="20201029 09:34:39.783"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.462" endtime="20201029 09:34:39.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:39.788" level="INFO">${PHILIP_RES} = [{'diff': 0.0004897909999999998}, {'diff': 0.0004898749999999973}, {'diff': 0.000489818999999999}, {'diff': 0.0004898329999999985}, {'diff': 0.000489833999999998}, {'diff': 0.0004897909999999998}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:39.784" endtime="20201029 09:34:39.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:39.792" level="INFO">${RESULT} = {'diff': [0.0004897909999999998, 0.0004898749999999973, 0.000489818999999999, 0.0004898329999999985, 0.000489833999999998, 0.0004897909999999998, 0.0004898199999999985, 0.000489818999999999, 0.0004898...</msg>
<status status="PASS" starttime="20201029 09:34:39.789" endtime="20201029 09:34:39.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.797" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:39.796" endtime="20201029 09:34:39.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.799" level="INFO">VALUE: [0.0004897909999999998, 0.0004898749999999973, 0.000489818999999999, 0.0004898329999999985, 0.000489833999999998, 0.0004897909999999998, 0.0004898199999999985, 0.000489818999999999, 0.000489818999999999, 0.0004898340000000015, 0.0004898190000000024, 0.0004898190000000024, 0.0004898480000000011, 0.0004898190000000024, 0.0004898610000000012, 0.0004898479999999976, 0.0004898050000000029, 0.0004898340000000015, 0.0004898190000000024, 0.0004899029999999999, 0.0004897499999999971, 0.000489833000000002, 0.0004898200000000019, 0.0004898610000000012, 0.0004898329999999951, 0.0004898059999999954, 0.0004898890000000003, 0.0004898329999999951, 0.000489819999999995, 0.0004898329999999951, 0.0004898189999999955, 0.000489819999999995, 0.0004898329999999951, 0.000489819999999995, 0.0004898189999999955, 0.0004898890000000003, 0.0004897780000000032, 0.0004898890000000003, 0.0004898470000000016, 0.0004897780000000032, 0.000489833000000002, 0.0004898200000000019, 0.0004898190000000024, 0.000489833000000002, 0.0004898200000000019, 0.0004898050000000029, 0.0004898190000000024, 0.0004898200000000019, 0.0004898190000000024, 0.0004898470000000016]</msg>
<status status="PASS" starttime="20201029 09:34:39.798" endtime="20201029 09:34:39.800"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.793" endtime="20201029 09:34:39.800"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.397" endtime="20201029 09:34:39.801"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.375" endtime="20201029 09:34:39.801"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:39.803" endtime="20201029 09:34:39.823"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.802" endtime="20201029 09:34:39.823"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.831" endtime="20201029 09:34:39.884"></status>
</kw>
<msg timestamp="20201029 09:34:39.884" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:39.830" endtime="20201029 09:34:39.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:39.887" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:39.885" endtime="20201029 09:34:39.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.888" endtime="20201029 09:34:39.889"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.827" endtime="20201029 09:34:39.890"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.825" endtime="20201029 09:34:39.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:39.897" endtime="20201029 09:34:40.184"></status>
</kw>
<msg timestamp="20201029 09:34:40.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017545194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018053542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:39.895" endtime="20201029 09:34:40.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017545194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018053542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:40.188" endtime="20201029 09:34:40.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.195" endtime="20201029 09:34:40.197"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.893" endtime="20201029 09:34:40.197"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.891" endtime="20201029 09:34:40.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:40.202" level="INFO">${PHILIP_RES} = [{'diff': 0.0005083479999999987}, {'diff': 0.0005084029999999976}, {'diff': 0.000508388999999998}, {'diff': 0.0005083890000000015}, {'diff': 0.000508403000000001}, {'diff': 0.0005083890000000015}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:40.199" endtime="20201029 09:34:40.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:40.206" level="INFO">${RESULT} = {'diff': [0.0005083479999999987, 0.0005084029999999976, 0.000508388999999998, 0.0005083890000000015, 0.000508403000000001, 0.0005083890000000015, 0.0005083890000000015, 0.000508388999999998, 0.0005083...</msg>
<status status="PASS" starttime="20201029 09:34:40.203" endtime="20201029 09:34:40.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.210" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:40.209" endtime="20201029 09:34:40.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.212" level="INFO">VALUE: [0.0005083479999999987, 0.0005084029999999976, 0.000508388999999998, 0.0005083890000000015, 0.000508403000000001, 0.0005083890000000015, 0.0005083890000000015, 0.000508388999999998, 0.0005083890000000015, 0.0005084029999999976, 0.0005083609999999988, 0.000508403000000001, 0.000508388999999998, 0.0005083890000000015, 0.000508403000000001, 0.0005083890000000015, 0.000508388999999998, 0.0005083750000000054, 0.0005084029999999976, 0.0005083880000000054, 0.000508388999999998, 0.0005083749999999984, 0.0005084029999999976, 0.0005084019999999981, 0.0005083609999999988, 0.000508388999999998, 0.0005083750000000054, 0.0005084299999999972, 0.0005084310000000036, 0.0005083879999999985, 0.0005084029999999976, 0.0005083749999999984, 0.0005083469999999993, 0.0005083749999999984, 0.000508388999999998, 0.0005084030000000045, 0.0005084029999999976, 0.0005083890000000049, 0.0005083609999999988, 0.0005084159999999976, 0.000508388999999998, 0.0005084029999999976, 0.0005083609999999988, 0.0005084029999999976, 0.0005083890000000049, 0.000508388999999998, 0.0005084030000000045, 0.000508388999999998, 0.000508388999999998, 0.000508388999999998]</msg>
<status status="PASS" starttime="20201029 09:34:40.211" endtime="20201029 09:34:40.213"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.206" endtime="20201029 09:34:40.214"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.824" endtime="20201029 09:34:40.214"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:39.801" endtime="20201029 09:34:40.214"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:40.218" endtime="20201029 09:34:40.237"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.215" endtime="20201029 09:34:40.237"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.246" endtime="20201029 09:34:40.298"></status>
</kw>
<msg timestamp="20201029 09:34:40.299" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:40.244" endtime="20201029 09:34:40.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.301" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:40.300" endtime="20201029 09:34:40.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.302" endtime="20201029 09:34:40.305"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.241" endtime="20201029 09:34:40.305"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.239" endtime="20201029 09:34:40.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.312" endtime="20201029 09:34:40.615"></status>
</kw>
<msg timestamp="20201029 09:34:40.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017602278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018129556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:40.310" endtime="20201029 09:34:40.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017602278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018129556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:40.620" endtime="20201029 09:34:40.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.627" endtime="20201029 09:34:40.629"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.308" endtime="20201029 09:34:40.629"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.306" endtime="20201029 09:34:40.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:40.634" level="INFO">${PHILIP_RES} = [{'diff': 0.0005272780000000026}, {'diff': 0.0005272639999999995}, {'diff': 0.000527263}, {'diff': 0.0005272769999999996}, {'diff': 0.0005272499999999999}, {'diff': 0.0005272780000000026}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 09:34:40.630" endtime="20201029 09:34:40.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:40.638" level="INFO">${RESULT} = {'diff': [0.0005272780000000026, 0.0005272639999999995, 0.000527263, 0.0005272769999999996, 0.0005272499999999999, 0.0005272780000000026, 0.000527264000000003, 0.0005272779999999991, 0.000527290999999...</msg>
<status status="PASS" starttime="20201029 09:34:40.635" endtime="20201029 09:34:40.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.642" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:40.641" endtime="20201029 09:34:40.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.645" level="INFO">VALUE: [0.0005272780000000026, 0.0005272639999999995, 0.000527263, 0.0005272769999999996, 0.0005272499999999999, 0.0005272780000000026, 0.000527264000000003, 0.0005272779999999991, 0.0005272909999999992, 0.000527263, 0.0005272360000000004, 0.0005272639999999995, 0.0005272779999999991, 0.000527264000000003, 0.000527264000000003, 0.000527263, 0.0005272230000000003, 0.0005272639999999995, 0.0005272499999999999, 0.0005272779999999991, 0.0005272220000000008, 0.0005272639999999995, 0.0005272639999999995, 0.0005272779999999991, 0.0005272639999999995, 0.0005272640000000064, 0.0005272639999999995, 0.0005273339999999974, 0.000527263, 0.0005272639999999995, 0.0005272639999999995, 0.0005273189999999983, 0.0005272639999999995, 0.0005272639999999995, 0.000527263, 0.0005272639999999995, 0.0005272779999999991, 0.0005272639999999995, 0.0005272639999999995, 0.0005272639999999995, 0.0005272779999999991, 0.0005272770000000065, 0.0005272639999999995, 0.0005272639999999995, 0.0005273199999999978, 0.0005272639999999995, 0.0005272919999999987, 0.000527263, 0.0005272769999999996, 0.0005272640000000134]</msg>
<status status="PASS" starttime="20201029 09:34:40.643" endtime="20201029 09:34:40.646"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.639" endtime="20201029 09:34:40.647"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.238" endtime="20201029 09:34:40.647"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.215" endtime="20201029 09:34:40.647"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:40.650" endtime="20201029 09:34:40.669"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.648" endtime="20201029 09:34:40.669"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.677" endtime="20201029 09:34:40.732"></status>
</kw>
<msg timestamp="20201029 09:34:40.732" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:40.676" endtime="20201029 09:34:40.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:40.735" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:40.733" endtime="20201029 09:34:40.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.736" endtime="20201029 09:34:40.738"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.673" endtime="20201029 09:34:40.738"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.671" endtime="20201029 09:34:40.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:40.745" endtime="20201029 09:34:41.031"></status>
</kw>
<msg timestamp="20201029 09:34:41.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017625833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018172264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:40.744" endtime="20201029 09:34:41.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017625833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018172264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:41.035" endtime="20201029 09:34:41.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.042" endtime="20201029 09:34:41.044"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.741" endtime="20201029 09:34:41.044"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.739" endtime="20201029 09:34:41.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:41.049" level="INFO">${PHILIP_RES} = [{'diff': 0.000546431}, {'diff': 0.0005464579999999997}, {'diff': 0.0005464589999999991}, {'diff': 0.0005465270000000015}, {'diff': 0.0005464579999999997}, {'diff': 0.000546431}, {'diff': 0.0005464589...</msg>
<status status="PASS" starttime="20201029 09:34:41.046" endtime="20201029 09:34:41.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:41.054" level="INFO">${RESULT} = {'diff': [0.000546431, 0.0005464579999999997, 0.0005464589999999991, 0.0005465270000000015, 0.0005464579999999997, 0.000546431, 0.0005464589999999991, 0.0005464440000000001, 0.0005464579999999997, 0.0...</msg>
<status status="PASS" starttime="20201029 09:34:41.050" endtime="20201029 09:34:41.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.058" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:41.057" endtime="20201029 09:34:41.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.060" level="INFO">VALUE: [0.000546431, 0.0005464579999999997, 0.0005464589999999991, 0.0005465270000000015, 0.0005464579999999997, 0.000546431, 0.0005464589999999991, 0.0005464440000000001, 0.0005464579999999997, 0.0005464589999999991, 0.0005464580000000031, 0.0005464719999999992, 0.0005464449999999996, 0.0005464859999999988, 0.0005464719999999992, 0.0005464719999999992, 0.0005464729999999987, 0.000546431, 0.0005464579999999997, 0.0005464300000000005, 0.0005464589999999991, 0.0005464860000000057, 0.0005465140000000049, 0.0005464589999999991, 0.0005464999999999984, 0.0005464300000000005, 0.0005464859999999988, 0.0005464579999999997, 0.0005464440000000001, 0.0005464720000000062, 0.0005464449999999996, 0.0005464719999999992, 0.0005464579999999997, 0.0005464589999999991, 0.0005464440000000001, 0.0005464579999999997, 0.0005464589999999991, 0.0005464579999999997, 0.0005464580000000066, 0.0005464589999999991, 0.0005464999999999984, 0.0005464579999999997, 0.0005464579999999997, 0.0005464589999999991, 0.0005464440000000001, 0.0005464579999999997, 0.0005464589999999991, 0.0005464719999999992, 0.0005464439999999932, 0.0005463750000000017]</msg>
<status status="PASS" starttime="20201029 09:34:41.059" endtime="20201029 09:34:41.061"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.054" endtime="20201029 09:34:41.061"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.670" endtime="20201029 09:34:41.062"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:40.648" endtime="20201029 09:34:41.062"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:41.064" endtime="20201029 09:34:41.084"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.063" endtime="20201029 09:34:41.084"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.092" endtime="20201029 09:34:41.148"></status>
</kw>
<msg timestamp="20201029 09:34:41.149" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:41.091" endtime="20201029 09:34:41.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.151" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:41.150" endtime="20201029 09:34:41.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.152" endtime="20201029 09:34:41.155"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.088" endtime="20201029 09:34:41.156"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.086" endtime="20201029 09:34:41.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.171" endtime="20201029 09:34:41.468"></status>
</kw>
<msg timestamp="20201029 09:34:41.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017743514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018309431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:41.167" endtime="20201029 09:34:41.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017743514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018309431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:41.472" endtime="20201029 09:34:41.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.480" endtime="20201029 09:34:41.481"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.162" endtime="20201029 09:34:41.482"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.158" endtime="20201029 09:34:41.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:41.486" level="INFO">${PHILIP_RES} = [{'diff': 0.0005659170000000026}, {'diff': 0.0005659440000000023}, {'diff': 0.0005659579999999984}, {'diff': 0.0005659579999999984}, {'diff': 0.0005659580000000018}, {'diff': 0.0005659720000000014}, {...</msg>
<status status="PASS" starttime="20201029 09:34:41.483" endtime="20201029 09:34:41.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:41.490" level="INFO">${RESULT} = {'diff': [0.0005659170000000026, 0.0005659440000000023, 0.0005659579999999984, 0.0005659579999999984, 0.0005659580000000018, 0.0005659720000000014, 0.0005660000000000005, 0.0005659579999999984, 0.0005...</msg>
<status status="PASS" starttime="20201029 09:34:41.487" endtime="20201029 09:34:41.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.495" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:41.494" endtime="20201029 09:34:41.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.497" level="INFO">VALUE: [0.0005659170000000026, 0.0005659440000000023, 0.0005659579999999984, 0.0005659579999999984, 0.0005659580000000018, 0.0005659720000000014, 0.0005660000000000005, 0.0005659579999999984, 0.0005660000000000005, 0.0005659579999999984, 0.0005659719999999979, 0.0005659450000000017, 0.0005660419999999992, 0.0005659590000000013, 0.0005659730000000043, 0.0005659590000000048, 0.0005659720000000049, 0.0005659579999999984, 0.0005659579999999984, 0.0005659859999999975, 0.0005659719999999979, 0.0005659579999999984, 0.0005659579999999984, 0.0005659719999999979, 0.0005659719999999979, 0.0005660140000000036, 0.0005659720000000049, 0.0005659590000000048, 0.0005659589999999978, 0.0005659449999999983, 0.0005659589999999978, 0.0005659719999999979, 0.0005659579999999984, 0.0005659859999999975, 0.0005659859999999975, 0.0005659719999999979, 0.0005659719999999979, 0.0005660420000000027, 0.0005659439999999988, 0.0005659580000000053, 0.0005659579999999984, 0.0005659719999999979, 0.0005660140000000036, 0.0005659589999999978, 0.0005659589999999978, 0.0005659729999999974, 0.0005659580000000053, 0.0005659590000000048, 0.0005659580000000053, 0.0005659580000000053]</msg>
<status status="PASS" starttime="20201029 09:34:41.496" endtime="20201029 09:34:41.498"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.491" endtime="20201029 09:34:41.498"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.085" endtime="20201029 09:34:41.499"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.062" endtime="20201029 09:34:41.499"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:41.501" endtime="20201029 09:34:41.521"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.500" endtime="20201029 09:34:41.521"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.530" endtime="20201029 09:34:41.588"></status>
</kw>
<msg timestamp="20201029 09:34:41.588" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:41.528" endtime="20201029 09:34:41.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.591" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:41.589" endtime="20201029 09:34:41.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.592" endtime="20201029 09:34:41.594"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.525" endtime="20201029 09:34:41.595"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.523" endtime="20201029 09:34:41.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.602" endtime="20201029 09:34:41.887"></status>
</kw>
<msg timestamp="20201029 09:34:41.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018044806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018630542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:41.600" endtime="20201029 09:34:41.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018044806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018630542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:41.891" endtime="20201029 09:34:41.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.899" endtime="20201029 09:34:41.900"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.597" endtime="20201029 09:34:41.901"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.596" endtime="20201029 09:34:41.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:41.905" level="INFO">${PHILIP_RES} = [{'diff': 0.0005857359999999999}, {'diff': 0.000585763999999999}, {'diff': 0.0005857640000000025}, {'diff': 0.000585763999999999}, {'diff': 0.0005857779999999986}, {'diff': 0.0005857780000000021}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:41.902" endtime="20201029 09:34:41.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:41.909" level="INFO">${RESULT} = {'diff': [0.0005857359999999999, 0.000585763999999999, 0.0005857640000000025, 0.000585763999999999, 0.0005857779999999986, 0.0005857780000000021, 0.0005857780000000021, 0.0005857919999999982, 0.000585...</msg>
<status status="PASS" starttime="20201029 09:34:41.906" endtime="20201029 09:34:41.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.914" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:41.912" endtime="20201029 09:34:41.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:41.916" level="INFO">VALUE: [0.0005857359999999999, 0.000585763999999999, 0.0005857640000000025, 0.000585763999999999, 0.0005857779999999986, 0.0005857780000000021, 0.0005857780000000021, 0.0005857919999999982, 0.0005857920000000016, 0.0005857770000000026, 0.0005857769999999991, 0.000585763999999999, 0.0005857780000000021, 0.0005857779999999986, 0.0005857780000000021, 0.000585749999999996, 0.0005857639999999956, 0.0005857780000000021, 0.0005858060000000012, 0.0005857780000000021, 0.0005857780000000021, 0.0005857919999999947, 0.0005857769999999957, 0.0005858190000000013, 0.000585763000000003, 0.0005857910000000022, 0.0005857780000000021, 0.0005857780000000021, 0.0005857639999999956, 0.0005857779999999951, 0.0005857920000000016, 0.0005857780000000021, 0.0005857780000000021, 0.0005857780000000021, 0.0005857920000000016, 0.0005857639999999956, 0.0005857359999999964, 0.0005857910000000022, 0.0005857640000000025, 0.0005857780000000021, 0.0005857780000000021, 0.0005857780000000021, 0.0005857779999999951, 0.000585749999999996, 0.000585749999999996, 0.0005857779999999951, 0.0005857640000000025, 0.000585778000000009, 0.0005857640000000025, 0.0005857769999999957]</msg>
<status status="PASS" starttime="20201029 09:34:41.915" endtime="20201029 09:34:41.917"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.910" endtime="20201029 09:34:41.918"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.522" endtime="20201029 09:34:41.918"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.499" endtime="20201029 09:34:41.918"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:41.921" endtime="20201029 09:34:41.940"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.919" endtime="20201029 09:34:41.941"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:41.949" endtime="20201029 09:34:42.009"></status>
</kw>
<msg timestamp="20201029 09:34:42.010" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:41.947" endtime="20201029 09:34:42.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.015" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:42.012" endtime="20201029 09:34:42.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.017" endtime="20201029 09:34:42.020"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.945" endtime="20201029 09:34:42.022"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.943" endtime="20201029 09:34:42.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.036" endtime="20201029 09:34:42.325"></status>
</kw>
<msg timestamp="20201029 09:34:42.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017602083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018207944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:42.033" endtime="20201029 09:34:42.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017602083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018207944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:42.328" endtime="20201029 09:34:42.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.336" endtime="20201029 09:34:42.338"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.027" endtime="20201029 09:34:42.338"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.024" endtime="20201029 09:34:42.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:42.343" level="INFO">${PHILIP_RES} = [{'diff': 0.0006058609999999992}, {'diff': 0.0006059859999999993}, {'diff': 0.0006059029999999979}, {'diff': 0.0006058469999999996}, {'diff': 0.0006059030000000014}, {'diff': 0.000605917000000001}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:42.339" endtime="20201029 09:34:42.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:42.347" level="INFO">${RESULT} = {'diff': [0.0006058609999999992, 0.0006059859999999993, 0.0006059029999999979, 0.0006058469999999996, 0.0006059030000000014, 0.000605917000000001, 0.0006059029999999979, 0.0006059019999999984, 0.00060...</msg>
<status status="PASS" starttime="20201029 09:34:42.344" endtime="20201029 09:34:42.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.352" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:42.351" endtime="20201029 09:34:42.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.354" level="INFO">VALUE: [0.0006058609999999992, 0.0006059859999999993, 0.0006059029999999979, 0.0006058469999999996, 0.0006059030000000014, 0.000605917000000001, 0.0006059029999999979, 0.0006059019999999984, 0.000605917000000001, 0.0006059030000000014, 0.0006059030000000014, 0.000605917000000001, 0.0006059580000000002, 0.0006058889999999983, 0.0006059439999999972, 0.0006059029999999979, 0.0006058889999999983, 0.0006059020000000054, 0.0006058749999999988, 0.0006058889999999983, 0.0006059029999999979, 0.0006059019999999984, 0.0006059170000000044, 0.0006059579999999967, 0.0006058889999999983, 0.0006058749999999988, 0.0006059029999999979, 0.0006059170000000044, 0.0006058889999999983, 0.0006059170000000044, 0.0006058889999999983, 0.000605915999999998, 0.0006058469999999996, 0.0006059029999999979, 0.0006059170000000044, 0.0006059019999999984, 0.0006058889999999983, 0.0006058889999999983, 0.0006059579999999967, 0.0006059030000000049, 0.0006059449999999966, 0.00060582, 0.000605915999999998, 0.0006059029999999979, 0.0006058889999999983, 0.0006059160000000119, 0.000605902999999991, 0.0006059169999999975, 0.000605944000000011, 0.000605915999999998]</msg>
<status status="PASS" starttime="20201029 09:34:42.353" endtime="20201029 09:34:42.355"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.348" endtime="20201029 09:34:42.355"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.941" endtime="20201029 09:34:42.356"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:41.919" endtime="20201029 09:34:42.356"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:42.358" endtime="20201029 09:34:42.378"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.357" endtime="20201029 09:34:42.378"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.386" endtime="20201029 09:34:42.447"></status>
</kw>
<msg timestamp="20201029 09:34:42.447" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:42.385" endtime="20201029 09:34:42.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.450" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:42.448" endtime="20201029 09:34:42.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.451" endtime="20201029 09:34:42.452"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.382" endtime="20201029 09:34:42.453"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.380" endtime="20201029 09:34:42.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.460" endtime="20201029 09:34:42.745"></status>
</kw>
<msg timestamp="20201029 09:34:42.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017574778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018201069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:42.458" endtime="20201029 09:34:42.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017574778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018201069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:42.749" endtime="20201029 09:34:42.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.757" endtime="20201029 09:34:42.759"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.456" endtime="20201029 09:34:42.759"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.454" endtime="20201029 09:34:42.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:42.763" level="INFO">${PHILIP_RES} = [{'diff': 0.000626291000000001}, {'diff': 0.0006263329999999998}, {'diff': 0.0006263609999999989}, {'diff': 0.0006263470000000028}, {'diff': 0.0006263329999999998}, {'diff': 0.0006262920000000005}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:42.760" endtime="20201029 09:34:42.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:42.767" level="INFO">${RESULT} = {'diff': [0.000626291000000001, 0.0006263329999999998, 0.0006263609999999989, 0.0006263470000000028, 0.0006263329999999998, 0.0006262920000000005, 0.0006263469999999993, 0.0006263329999999998, 0.00062...</msg>
<status status="PASS" starttime="20201029 09:34:42.764" endtime="20201029 09:34:42.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.772" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:42.771" endtime="20201029 09:34:42.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.776" level="INFO">VALUE: [0.000626291000000001, 0.0006263329999999998, 0.0006263609999999989, 0.0006263470000000028, 0.0006263329999999998, 0.0006262920000000005, 0.0006263469999999993, 0.0006263329999999998, 0.0006263190000000002, 0.0006263190000000002, 0.0006263469999999993, 0.0006263339999999992, 0.0006263479999999988, 0.0006263479999999988, 0.0006263329999999998, 0.0006263470000000063, 0.0006263329999999998, 0.0006263469999999993, 0.0006263469999999993, 0.0006263480000000057, 0.0006263199999999997, 0.0006263469999999993, 0.0006263749999999985, 0.0006263329999999998, 0.0006263190000000002, 0.0006262920000000005, 0.0006263619999999984, 0.0006263339999999992, 0.000626291000000001, 0.0006263469999999993, 0.0006263190000000002, 0.0006263469999999993, 0.0006263470000000063, 0.0006263339999999992, 0.0006263609999999989, 0.0006264170000000041, 0.0006263470000000063, 0.0006263469999999993, 0.0006263329999999998, 0.0006263339999999992, 0.0006262919999999936, 0.0006263329999999998, 0.0006263329999999928, 0.0006262640000000014, 0.0006263469999999993, 0.0006263469999999993, 0.0006263339999999923, 0.0006263749999999985, 0.0006263749999999985, 0.0006263329999999928]</msg>
<status status="PASS" starttime="20201029 09:34:42.773" endtime="20201029 09:34:42.777"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.768" endtime="20201029 09:34:42.778"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.379" endtime="20201029 09:34:42.779"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.356" endtime="20201029 09:34:42.780"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:42.785" endtime="20201029 09:34:42.806"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.781" endtime="20201029 09:34:42.808"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.824" endtime="20201029 09:34:42.890"></status>
</kw>
<msg timestamp="20201029 09:34:42.892" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:42.821" endtime="20201029 09:34:42.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:42.897" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:42.894" endtime="20201029 09:34:42.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.899" endtime="20201029 09:34:42.905"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.816" endtime="20201029 09:34:42.906"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.812" endtime="20201029 09:34:42.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:42.921" endtime="20201029 09:34:43.214"></status>
</kw>
<msg timestamp="20201029 09:34:43.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029957444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030604431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:42.918" endtime="20201029 09:34:43.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029957444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030604431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:43.218" endtime="20201029 09:34:43.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.226" endtime="20201029 09:34:43.227"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.912" endtime="20201029 09:34:43.228"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.908" endtime="20201029 09:34:43.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:43.232" level="INFO">${PHILIP_RES} = [{'diff': 0.0006469870000000016}, {'diff': 0.0006471659999999976}, {'diff': 0.0006471109999999988}, {'diff': 0.0006470969999999993}, {'diff': 0.0006471109999999988}, {'diff': 0.0006470969999999993}, {...</msg>
<status status="PASS" starttime="20201029 09:34:43.229" endtime="20201029 09:34:43.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:43.236" level="INFO">${RESULT} = {'diff': [0.0006469870000000016, 0.0006471659999999976, 0.0006471109999999988, 0.0006470969999999993, 0.0006471109999999988, 0.0006470969999999993, 0.0006470969999999993, 0.0006471109999999988, 0.0006...</msg>
<status status="PASS" starttime="20201029 09:34:43.233" endtime="20201029 09:34:43.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.240" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:43.239" endtime="20201029 09:34:43.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.243" level="INFO">VALUE: [0.0006469870000000016, 0.0006471659999999976, 0.0006471109999999988, 0.0006470969999999993, 0.0006471109999999988, 0.0006470969999999993, 0.0006470969999999993, 0.0006471109999999988, 0.0006470839999999992, 0.0006471110000000058, 0.0006470969999999993, 0.0006470969999999993, 0.0006470969999999993, 0.0006470829999999997, 0.0006470969999999993, 0.0006470829999999997, 0.0006470829999999997, 0.0006470829999999997, 0.0006470969999999993, 0.0006471250000000053, 0.0006470970000000062, 0.0006470970000000062, 0.0006471109999999988, 0.0006471249999999984, 0.0006470690000000001, 0.0006470969999999993, 0.0006470829999999997, 0.0006471109999999988, 0.0006470969999999993, 0.0006470969999999993, 0.0006470969999999993, 0.0006470969999999993, 0.0006470829999999927, 0.0006471110000000058, 0.0006471109999999919, 0.0006470969999999993, 0.0006470829999999927, 0.0006470969999999993, 0.0006470830000000066, 0.000647138999999991, 0.0006471110000000058, 0.0006471109999999919, 0.0006470969999999993, 0.0006470969999999993, 0.0006471529999999975, 0.0006470840000000061, 0.0006471109999999919, 0.0006470699999999996, 0.0006470549999999936, 0.0006470980000000126]</msg>
<status status="PASS" starttime="20201029 09:34:43.241" endtime="20201029 09:34:43.245"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.237" endtime="20201029 09:34:43.245"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.809" endtime="20201029 09:34:43.246"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:42.780" endtime="20201029 09:34:43.246"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:43.248" endtime="20201029 09:34:43.267"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.247" endtime="20201029 09:34:43.268"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.276" endtime="20201029 09:34:43.340"></status>
</kw>
<msg timestamp="20201029 09:34:43.341" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:43.274" endtime="20201029 09:34:43.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.343" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:43.342" endtime="20201029 09:34:43.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.344" endtime="20201029 09:34:43.346"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.272" endtime="20201029 09:34:43.346"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.270" endtime="20201029 09:34:43.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.353" endtime="20201029 09:34:43.638"></status>
</kw>
<msg timestamp="20201029 09:34:43.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017514764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018182889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:43.352" endtime="20201029 09:34:43.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017514764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018182889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:43.642" endtime="20201029 09:34:43.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.650" endtime="20201029 09:34:43.652"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.349" endtime="20201029 09:34:43.652"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.347" endtime="20201029 09:34:43.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:43.656" level="INFO">${PHILIP_RES} = [{'diff': 0.000668125000000002}, {'diff': 0.0006681670000000008}, {'diff': 0.0006681529999999977}, {'diff': 0.0006681530000000012}, {'diff': 0.0006681390000000016}, {'diff': 0.0006681810000000003}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:43.653" endtime="20201029 09:34:43.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:43.661" level="INFO">${RESULT} = {'diff': [0.000668125000000002, 0.0006681670000000008, 0.0006681529999999977, 0.0006681530000000012, 0.0006681390000000016, 0.0006681810000000003, 0.0006681529999999977, 0.0006682359999999991, 0.00066...</msg>
<status status="PASS" starttime="20201029 09:34:43.657" endtime="20201029 09:34:43.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.666" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:43.665" endtime="20201029 09:34:43.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.668" level="INFO">VALUE: [0.000668125000000002, 0.0006681670000000008, 0.0006681529999999977, 0.0006681530000000012, 0.0006681390000000016, 0.0006681810000000003, 0.0006681529999999977, 0.0006682359999999991, 0.0006681670000000008, 0.0006681529999999977, 0.0006682219999999996, 0.0006681810000000003, 0.0006681660000000013, 0.0006681390000000051, 0.0006681810000000038, 0.0006681519999999982, 0.0006681249999999986, 0.0006681669999999973, 0.0006681659999999978, 0.0006681250000000055, 0.0006681520000000052, 0.0006681799999999974, 0.0006681669999999973, 0.000668110999999999, 0.0006681529999999977, 0.0006681529999999977, 0.0006681800000000043, 0.0006681950000000034, 0.0006681669999999973, 0.0006681519999999982, 0.0006682219999999961, 0.0006681659999999978, 0.0006681529999999977, 0.0006681670000000042, 0.000668222000000003, 0.0006681810000000038, 0.0006681669999999973, 0.0006682079999999965, 0.0006681669999999973, 0.000668222000000003, 0.0006681529999999977, 0.0006681529999999908, 0.0006681389999999982, 0.0006682499999999952, 0.0006681810000000038, 0.0006681250000000055, 0.0006681810000000038, 0.0006681800000000043, 0.0006681520000000052, 0.0006681810000000038]</msg>
<status status="PASS" starttime="20201029 09:34:43.667" endtime="20201029 09:34:43.669"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.662" endtime="20201029 09:34:43.669"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.268" endtime="20201029 09:34:43.670"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.246" endtime="20201029 09:34:43.670"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:43.672" endtime="20201029 09:34:43.693"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.671" endtime="20201029 09:34:43.694"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.711" endtime="20201029 09:34:43.779"></status>
</kw>
<msg timestamp="20201029 09:34:43.780" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:43.708" endtime="20201029 09:34:43.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:43.785" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:43.782" endtime="20201029 09:34:43.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.787" endtime="20201029 09:34:43.790"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.702" endtime="20201029 09:34:43.791"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.699" endtime="20201029 09:34:43.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:43.806" endtime="20201029 09:34:44.102"></status>
</kw>
<msg timestamp="20201029 09:34:44.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029553514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030243, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:34:43.803" endtime="20201029 09:34:44.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:44.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029553514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030243, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:34:44.106" endtime="20201029 09:34:44.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:44.113" endtime="20201029 09:34:44.115"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.798" endtime="20201029 09:34:44.116"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.794" endtime="20201029 09:34:44.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:44.120" level="INFO">${PHILIP_RES} = [{'diff': 0.0006894859999999996}, {'diff': 0.0006895140000000022}, {'diff': 0.0006895270000000023}, {'diff': 0.0006895139999999952}, {'diff': 0.0006895560000000009}, {'diff': 0.0006896109999999997}, {...</msg>
<status status="PASS" starttime="20201029 09:34:44.117" endtime="20201029 09:34:44.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:44.124" level="INFO">${RESULT} = {'diff': [0.0006894859999999996, 0.0006895140000000022, 0.0006895270000000023, 0.0006895139999999952, 0.0006895560000000009, 0.0006896109999999997, 0.0006895420000000013, 0.0006895420000000013, 0.0006...</msg>
<status status="PASS" starttime="20201029 09:34:44.121" endtime="20201029 09:34:44.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:44.128" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:44.127" endtime="20201029 09:34:44.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:44.130" level="INFO">VALUE: [0.0006894859999999996, 0.0006895140000000022, 0.0006895270000000023, 0.0006895139999999952, 0.0006895560000000009, 0.0006896109999999997, 0.0006895420000000013, 0.0006895420000000013, 0.0006895979999999996, 0.0006895270000000023, 0.0006895830000000006, 0.0006895420000000013, 0.0006895280000000018, 0.0006895970000000001, 0.0006895420000000013, 0.0006894999999999957, 0.0006895270000000023, 0.0006895280000000018, 0.0006895419999999944, 0.0006895560000000009, 0.0006895270000000023, 0.0006895560000000009, 0.0006895420000000013, 0.0006895419999999944, 0.0006895000000000026, 0.0006895420000000013, 0.0006895560000000009, 0.0006895560000000009, 0.0006895550000000014, 0.0006895420000000013, 0.0006895279999999948, 0.0006895410000000018, 0.0006895279999999948, 0.0006895420000000013, 0.0006895419999999874, 0.0006896109999999928, 0.000689569000000001, 0.0006895420000000013, 0.0006895410000000018, 0.0006896110000000066, 0.0006895420000000013, 0.0006895279999999948, 0.0006895550000000084, 0.0006895279999999948, 0.0006895420000000013, 0.0006895420000000013, 0.0006895830000000075, 0.0006895420000000013, 0.0006895140000000022, 0.000689540999999988]</msg>
<status status="PASS" starttime="20201029 09:34:44.129" endtime="20201029 09:34:44.131"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:44.125" endtime="20201029 09:34:44.132"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.696" endtime="20201029 09:34:44.132"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:43.670" endtime="20201029 09:34:44.132"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:23.711" endtime="20201029 09:34:44.133"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:34:22.332" endtime="20201029 09:34:44.133" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 09:34:01.849" endtime="20201029 09:34:44.141"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f091rc</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 09:33:59.718" endtime="20201029 09:34:44.171"></status>
</suite>
<statistics>
<total>
<stat pass="10" fail="0">Critical Tests</stat>
<stat pass="10" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="10" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="10" fail="0">BOARD_nucleo-f091rc</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="10" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
